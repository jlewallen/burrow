<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1270" onload="init(evt)" viewBox="0 0 1200 1270" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1270" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1253.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1253.00"> </text><svg id="frames" x="10" width="1180" total_samples="1248"><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="0.0801%" y="853" width="0.0801%" height="15" fill="rgb(234,39,38)" fg:x="1" fg:w="1"/><text x="0.3301%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.0801%" y="837" width="0.0801%" height="15" fill="rgb(235,126,54)" fg:x="1" fg:w="1"/><text x="0.3301%" y="847.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.0801%" y="821" width="0.0801%" height="15" fill="rgb(235,150,33)" fg:x="1" fg:w="1"/><text x="0.3301%" y="831.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.3205%" y="757" width="0.1603%" height="15" fill="rgb(249,49,53)" fg:x="4" fg:w="2"/><text x="0.5705%" y="767.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.4808%" y="757" width="0.0801%" height="15" fill="rgb(238,60,50)" fg:x="6" fg:w="1"/><text x="0.7308%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4808%" y="741" width="0.0801%" height="15" fill="rgb(210,5,2)" fg:x="6" fg:w="1"/><text x="0.7308%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.5609%" y="709" width="0.0801%" height="15" fill="rgb(214,207,24)" fg:x="7" fg:w="1"/><text x="0.8109%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.6410%" y="709" width="0.0801%" height="15" fill="rgb(228,173,2)" fg:x="8" fg:w="1"/><text x="0.8910%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.6410%" y="693" width="0.0801%" height="15" fill="rgb(244,26,8)" fg:x="8" fg:w="1"/><text x="0.8910%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="0.5609%" y="741" width="0.2404%" height="15" fill="rgb(249,153,35)" fg:x="7" fg:w="3"/><text x="0.8109%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="0.5609%" y="725" width="0.2404%" height="15" fill="rgb(221,215,40)" fg:x="7" fg:w="3"/><text x="0.8109%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="0.7212%" y="709" width="0.0801%" height="15" fill="rgb(238,106,35)" fg:x="9" fg:w="1"/><text x="0.9712%" y="719.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.8013%" y="741" width="0.1603%" height="15" fill="rgb(207,195,21)" fg:x="10" fg:w="2"/><text x="1.0513%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="0.9615%" y="741" width="0.1603%" height="15" fill="rgb(205,43,29)" fg:x="12" fg:w="2"/><text x="1.2115%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.0417%" y="725" width="0.0801%" height="15" fill="rgb(236,35,21)" fg:x="13" fg:w="1"/><text x="1.2917%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.1218%" y="725" width="0.0801%" height="15" fill="rgb(244,74,8)" fg:x="14" fg:w="1"/><text x="1.3718%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.2019%" y="725" width="0.0801%" height="15" fill="rgb(241,229,7)" fg:x="15" fg:w="1"/><text x="1.4519%" y="735.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.2821%" y="709" width="0.1603%" height="15" fill="rgb(212,223,25)" fg:x="16" fg:w="2"/><text x="1.5321%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.4423%" y="709" width="0.0801%" height="15" fill="rgb(234,58,53)" fg:x="18" fg:w="1"/><text x="1.6923%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 1.44%)</title><rect x="0.2404%" y="773" width="1.4423%" height="15" fill="rgb(244,36,1)" fg:x="3" fg:w="18"/><text x="0.4904%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.12%)</title><rect x="0.5609%" y="757" width="1.1218%" height="15" fill="rgb(222,40,54)" fg:x="7" fg:w="14"/><text x="0.8109%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="1.1218%" y="741" width="0.5609%" height="15" fill="rgb(210,207,39)" fg:x="14" fg:w="7"/><text x="1.3718%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="1.2821%" y="725" width="0.4006%" height="15" fill="rgb(234,52,14)" fg:x="16" fg:w="5"/><text x="1.5321%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="1.5224%" y="709" width="0.1603%" height="15" fill="rgb(239,108,46)" fg:x="19" fg:w="2"/><text x="1.7724%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.52%)</title><rect x="0.2404%" y="789" width="1.5224%" height="15" fill="rgb(252,223,5)" fg:x="3" fg:w="19"/><text x="0.4904%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6827%" y="773" width="0.0801%" height="15" fill="rgb(227,181,11)" fg:x="21" fg:w="1"/><text x="1.9327%" y="783.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.68%)</title><rect x="0.2404%" y="805" width="1.6827%" height="15" fill="rgb(248,126,40)" fg:x="3" fg:w="21"/><text x="0.4904%" y="815.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.7628%" y="789" width="0.1603%" height="15" fill="rgb(243,1,18)" fg:x="22" fg:w="2"/><text x="2.0128%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.9231%" y="805" width="0.0801%" height="15" fill="rgb(214,145,23)" fg:x="24" fg:w="1"/><text x="2.1731%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::State&gt; (24 samples, 1.92%)</title><rect x="0.1603%" y="853" width="1.9231%" height="15" fill="rgb(241,218,11)" fg:x="2" fg:w="24"/><text x="0.4103%" y="863.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 1.84%)</title><rect x="0.2404%" y="837" width="1.8429%" height="15" fill="rgb(214,219,24)" fg:x="3" fg:w="23"/><text x="0.4904%" y="847.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (23 samples, 1.84%)</title><rect x="0.2404%" y="821" width="1.8429%" height="15" fill="rgb(235,32,7)" fg:x="3" fg:w="23"/><text x="0.4904%" y="831.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="2.0032%" y="805" width="0.0801%" height="15" fill="rgb(227,121,28)" fg:x="25" fg:w="1"/><text x="2.2532%" y="815.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.0032%" y="789" width="0.0801%" height="15" fill="rgb(216,129,49)" fg:x="25" fg:w="1"/><text x="2.2532%" y="799.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 2.08%)</title><rect x="0.0801%" y="869" width="2.0833%" height="15" fill="rgb(207,194,50)" fg:x="1" fg:w="26"/><text x="0.3301%" y="879.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryEntityStorage&gt; (1 samples, 0.08%)</title><rect x="2.0833%" y="853" width="0.0801%" height="15" fill="rgb(207,4,18)" fg:x="26" fg:w="1"/><text x="2.3333%" y="863.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="2.2436%" y="805" width="0.0801%" height="15" fill="rgb(213,50,30)" fg:x="28" fg:w="1"/><text x="2.4936%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="2.3237%" y="741" width="0.0801%" height="15" fill="rgb(208,77,22)" fg:x="29" fg:w="1"/><text x="2.5737%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.3237%" y="725" width="0.0801%" height="15" fill="rgb(244,204,34)" fg:x="29" fg:w="1"/><text x="2.5737%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="2.4038%" y="709" width="0.0801%" height="15" fill="rgb(230,20,17)" fg:x="30" fg:w="1"/><text x="2.6538%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="2.4038%" y="693" width="0.0801%" height="15" fill="rgb(237,83,15)" fg:x="30" fg:w="1"/><text x="2.6538%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="2.4038%" y="677" width="0.0801%" height="15" fill="rgb(221,109,25)" fg:x="30" fg:w="1"/><text x="2.6538%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="2.4038%" y="661" width="0.0801%" height="15" fill="rgb(205,194,52)" fg:x="30" fg:w="1"/><text x="2.6538%" y="671.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="2.4038%" y="645" width="0.0801%" height="15" fill="rgb(244,173,54)" fg:x="30" fg:w="1"/><text x="2.6538%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="2.4038%" y="629" width="0.0801%" height="15" fill="rgb(227,181,18)" fg:x="30" fg:w="1"/><text x="2.6538%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="2.3237%" y="757" width="0.2404%" height="15" fill="rgb(238,36,30)" fg:x="29" fg:w="3"/><text x="2.5737%" y="767.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="2.4038%" y="741" width="0.1603%" height="15" fill="rgb(254,85,0)" fg:x="30" fg:w="2"/><text x="2.6538%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="2.4038%" y="725" width="0.1603%" height="15" fill="rgb(247,63,33)" fg:x="30" fg:w="2"/><text x="2.6538%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="2.4840%" y="709" width="0.0801%" height="15" fill="rgb(220,7,54)" fg:x="31" fg:w="1"/><text x="2.7340%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="2.4840%" y="693" width="0.0801%" height="15" fill="rgb(238,227,21)" fg:x="31" fg:w="1"/><text x="2.7340%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="2.4840%" y="677" width="0.0801%" height="15" fill="rgb(237,29,31)" fg:x="31" fg:w="1"/><text x="2.7340%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="2.4840%" y="661" width="0.0801%" height="15" fill="rgb(211,21,50)" fg:x="31" fg:w="1"/><text x="2.7340%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="2.5641%" y="661" width="0.0801%" height="15" fill="rgb(239,119,2)" fg:x="32" fg:w="1"/><text x="2.8141%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="2.5641%" y="709" width="0.1603%" height="15" fill="rgb(250,2,39)" fg:x="32" fg:w="2"/><text x="2.8141%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="2.5641%" y="693" width="0.1603%" height="15" fill="rgb(244,46,53)" fg:x="32" fg:w="2"/><text x="2.8141%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="2.5641%" y="677" width="0.1603%" height="15" fill="rgb(209,21,19)" fg:x="32" fg:w="2"/><text x="2.8141%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="2.6442%" y="661" width="0.0801%" height="15" fill="rgb(236,145,4)" fg:x="33" fg:w="1"/><text x="2.8942%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="2.6442%" y="645" width="0.0801%" height="15" fill="rgb(220,133,36)" fg:x="33" fg:w="1"/><text x="2.8942%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="2.6442%" y="629" width="0.0801%" height="15" fill="rgb(244,18,3)" fg:x="33" fg:w="1"/><text x="2.8942%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="2.6442%" y="613" width="0.0801%" height="15" fill="rgb(232,171,48)" fg:x="33" fg:w="1"/><text x="2.8942%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="2.6442%" y="597" width="0.0801%" height="15" fill="rgb(223,223,53)" fg:x="33" fg:w="1"/><text x="2.8942%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="2.6442%" y="581" width="0.0801%" height="15" fill="rgb(246,92,13)" fg:x="33" fg:w="1"/><text x="2.8942%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="2.6442%" y="565" width="0.0801%" height="15" fill="rgb(229,171,10)" fg:x="33" fg:w="1"/><text x="2.8942%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="2.6442%" y="549" width="0.0801%" height="15" fill="rgb(213,131,26)" fg:x="33" fg:w="1"/><text x="2.8942%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="2.6442%" y="533" width="0.0801%" height="15" fill="rgb(242,87,54)" fg:x="33" fg:w="1"/><text x="2.8942%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="2.6442%" y="517" width="0.0801%" height="15" fill="rgb(237,21,35)" fg:x="33" fg:w="1"/><text x="2.8942%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="2.6442%" y="501" width="0.0801%" height="15" fill="rgb(253,13,47)" fg:x="33" fg:w="1"/><text x="2.8942%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.6442%" y="485" width="0.0801%" height="15" fill="rgb(215,122,49)" fg:x="33" fg:w="1"/><text x="2.8942%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (6 samples, 0.48%)</title><rect x="2.3237%" y="789" width="0.4808%" height="15" fill="rgb(209,179,30)" fg:x="29" fg:w="6"/><text x="2.5737%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.48%)</title><rect x="2.3237%" y="773" width="0.4808%" height="15" fill="rgb(235,100,24)" fg:x="29" fg:w="6"/><text x="2.5737%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="2.5641%" y="757" width="0.2404%" height="15" fill="rgb(209,67,24)" fg:x="32" fg:w="3"/><text x="2.8141%" y="767.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="2.5641%" y="741" width="0.2404%" height="15" fill="rgb(206,74,32)" fg:x="32" fg:w="3"/><text x="2.8141%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="2.5641%" y="725" width="0.2404%" height="15" fill="rgb(212,45,25)" fg:x="32" fg:w="3"/><text x="2.8141%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="2.7244%" y="709" width="0.0801%" height="15" fill="rgb(239,26,3)" fg:x="34" fg:w="1"/><text x="2.9744%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="2.7244%" y="693" width="0.0801%" height="15" fill="rgb(218,36,15)" fg:x="34" fg:w="1"/><text x="2.9744%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="2.7244%" y="677" width="0.0801%" height="15" fill="rgb(206,108,24)" fg:x="34" fg:w="1"/><text x="2.9744%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="2.7244%" y="661" width="0.0801%" height="15" fill="rgb(234,204,42)" fg:x="34" fg:w="1"/><text x="2.9744%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="2.7244%" y="645" width="0.0801%" height="15" fill="rgb(229,2,11)" fg:x="34" fg:w="1"/><text x="2.9744%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="2.7244%" y="629" width="0.0801%" height="15" fill="rgb(221,20,48)" fg:x="34" fg:w="1"/><text x="2.9744%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="2.7244%" y="613" width="0.0801%" height="15" fill="rgb(244,164,10)" fg:x="34" fg:w="1"/><text x="2.9744%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="2.8045%" y="789" width="0.0801%" height="15" fill="rgb(243,229,2)" fg:x="35" fg:w="1"/><text x="3.0545%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="2.8045%" y="773" width="0.0801%" height="15" fill="rgb(232,131,37)" fg:x="35" fg:w="1"/><text x="3.0545%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="2.8045%" y="757" width="0.0801%" height="15" fill="rgb(217,156,11)" fg:x="35" fg:w="1"/><text x="3.0545%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="2.8045%" y="741" width="0.0801%" height="15" fill="rgb(239,99,48)" fg:x="35" fg:w="1"/><text x="3.0545%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="2.8045%" y="725" width="0.0801%" height="15" fill="rgb(231,209,9)" fg:x="35" fg:w="1"/><text x="3.0545%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="2.8045%" y="709" width="0.0801%" height="15" fill="rgb(254,97,27)" fg:x="35" fg:w="1"/><text x="3.0545%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="2.8045%" y="693" width="0.0801%" height="15" fill="rgb(223,151,38)" fg:x="35" fg:w="1"/><text x="3.0545%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="2.8045%" y="677" width="0.0801%" height="15" fill="rgb(219,206,35)" fg:x="35" fg:w="1"/><text x="3.0545%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="2.8045%" y="661" width="0.0801%" height="15" fill="rgb(216,130,31)" fg:x="35" fg:w="1"/><text x="3.0545%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.8846%" y="725" width="0.0801%" height="15" fill="rgb(251,97,34)" fg:x="36" fg:w="1"/><text x="3.1346%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.8846%" y="709" width="0.0801%" height="15" fill="rgb(246,159,47)" fg:x="36" fg:w="1"/><text x="3.1346%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.8846%" y="693" width="0.0801%" height="15" fill="rgb(232,87,10)" fg:x="36" fg:w="1"/><text x="3.1346%" y="703.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="3.0449%" y="693" width="0.0801%" height="15" fill="rgb(249,1,37)" fg:x="38" fg:w="1"/><text x="3.2949%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.0449%" y="677" width="0.0801%" height="15" fill="rgb(239,135,14)" fg:x="38" fg:w="1"/><text x="3.2949%" y="687.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="3.1250%" y="565" width="0.0801%" height="15" fill="rgb(253,116,46)" fg:x="39" fg:w="1"/><text x="3.3750%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.1250%" y="549" width="0.0801%" height="15" fill="rgb(222,217,37)" fg:x="39" fg:w="1"/><text x="3.3750%" y="559.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="2.8846%" y="773" width="0.4006%" height="15" fill="rgb(252,96,8)" fg:x="36" fg:w="5"/><text x="3.1346%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="2.8846%" y="757" width="0.4006%" height="15" fill="rgb(254,103,41)" fg:x="36" fg:w="5"/><text x="3.1346%" y="767.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="2.8846%" y="741" width="0.4006%" height="15" fill="rgb(218,213,19)" fg:x="36" fg:w="5"/><text x="3.1346%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="2.9647%" y="725" width="0.3205%" height="15" fill="rgb(253,95,21)" fg:x="37" fg:w="4"/><text x="3.2147%" y="735.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="3.0449%" y="709" width="0.2404%" height="15" fill="rgb(229,26,28)" fg:x="38" fg:w="3"/><text x="3.2949%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="3.1250%" y="693" width="0.1603%" height="15" fill="rgb(230,129,16)" fg:x="39" fg:w="2"/><text x="3.3750%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="3.1250%" y="677" width="0.1603%" height="15" fill="rgb(236,126,17)" fg:x="39" fg:w="2"/><text x="3.3750%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="3.1250%" y="661" width="0.1603%" height="15" fill="rgb(209,33,33)" fg:x="39" fg:w="2"/><text x="3.3750%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="3.1250%" y="645" width="0.1603%" height="15" fill="rgb(227,85,29)" fg:x="39" fg:w="2"/><text x="3.3750%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="3.1250%" y="629" width="0.1603%" height="15" fill="rgb(241,53,46)" fg:x="39" fg:w="2"/><text x="3.3750%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="3.1250%" y="613" width="0.1603%" height="15" fill="rgb(228,167,53)" fg:x="39" fg:w="2"/><text x="3.3750%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="3.1250%" y="597" width="0.1603%" height="15" fill="rgb(238,195,45)" fg:x="39" fg:w="2"/><text x="3.3750%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="3.1250%" y="581" width="0.1603%" height="15" fill="rgb(252,124,45)" fg:x="39" fg:w="2"/><text x="3.3750%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="3.2051%" y="565" width="0.0801%" height="15" fill="rgb(251,38,35)" fg:x="40" fg:w="1"/><text x="3.4551%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="3.2051%" y="549" width="0.0801%" height="15" fill="rgb(227,33,2)" fg:x="40" fg:w="1"/><text x="3.4551%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="3.5256%" y="661" width="0.0801%" height="15" fill="rgb(223,157,46)" fg:x="44" fg:w="1"/><text x="3.7756%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="3.8462%" y="613" width="0.1603%" height="15" fill="rgb(222,78,41)" fg:x="48" fg:w="2"/><text x="4.0962%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="3.8462%" y="597" width="0.1603%" height="15" fill="rgb(248,176,11)" fg:x="48" fg:w="2"/><text x="4.0962%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="3.8462%" y="581" width="0.1603%" height="15" fill="rgb(241,221,18)" fg:x="48" fg:w="2"/><text x="4.0962%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="3.8462%" y="565" width="0.1603%" height="15" fill="rgb(218,85,22)" fg:x="48" fg:w="2"/><text x="4.0962%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="3.8462%" y="549" width="0.1603%" height="15" fill="rgb(222,223,7)" fg:x="48" fg:w="2"/><text x="4.0962%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="3.8462%" y="533" width="0.1603%" height="15" fill="rgb(254,59,39)" fg:x="48" fg:w="2"/><text x="4.0962%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.9263%" y="517" width="0.0801%" height="15" fill="rgb(247,100,27)" fg:x="49" fg:w="1"/><text x="4.1763%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (24 samples, 1.92%)</title><rect x="2.1635%" y="821" width="1.9231%" height="15" fill="rgb(237,207,10)" fg:x="27" fg:w="24"/><text x="2.4135%" y="831.50">&lt;..</text></g><g><title>engine::internal::Entities::add_persisted (22 samples, 1.76%)</title><rect x="2.3237%" y="805" width="1.7628%" height="15" fill="rgb(220,121,28)" fg:x="29" fg:w="22"/><text x="2.5737%" y="815.50"></text></g><g><title>kernel::model::entity::Entity::from_str (15 samples, 1.20%)</title><rect x="2.8846%" y="789" width="1.2019%" height="15" fill="rgb(213,223,20)" fg:x="36" fg:w="15"/><text x="3.1346%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.80%)</title><rect x="3.2853%" y="773" width="0.8013%" height="15" fill="rgb(205,121,27)" fg:x="41" fg:w="10"/><text x="3.5353%" y="783.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="3.2853%" y="757" width="0.8013%" height="15" fill="rgb(253,24,53)" fg:x="41" fg:w="10"/><text x="3.5353%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="3.5256%" y="741" width="0.5609%" height="15" fill="rgb(224,224,47)" fg:x="44" fg:w="7"/><text x="3.7756%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="3.5256%" y="725" width="0.5609%" height="15" fill="rgb(250,125,36)" fg:x="44" fg:w="7"/><text x="3.7756%" y="735.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="3.5256%" y="709" width="0.5609%" height="15" fill="rgb(240,144,38)" fg:x="44" fg:w="7"/><text x="3.7756%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="3.5256%" y="693" width="0.5609%" height="15" fill="rgb(250,15,50)" fg:x="44" fg:w="7"/><text x="3.7756%" y="703.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="3.5256%" y="677" width="0.5609%" height="15" fill="rgb(210,24,26)" fg:x="44" fg:w="7"/><text x="3.7756%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (6 samples, 0.48%)</title><rect x="3.6058%" y="661" width="0.4808%" height="15" fill="rgb(234,53,53)" fg:x="45" fg:w="6"/><text x="3.8558%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="3.6058%" y="645" width="0.4808%" height="15" fill="rgb(208,108,28)" fg:x="45" fg:w="6"/><text x="3.8558%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="3.8462%" y="629" width="0.2404%" height="15" fill="rgb(227,143,7)" fg:x="48" fg:w="3"/><text x="4.0962%" y="639.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="4.0064%" y="613" width="0.0801%" height="15" fill="rgb(238,189,38)" fg:x="50" fg:w="1"/><text x="4.2564%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (25 samples, 2.00%)</title><rect x="2.1635%" y="837" width="2.0032%" height="15" fill="rgb(222,69,15)" fg:x="27" fg:w="25"/><text x="2.4135%" y="847.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="4.0865%" y="821" width="0.0801%" height="15" fill="rgb(213,169,7)" fg:x="51" fg:w="1"/><text x="4.3365%" y="831.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="4.0865%" y="805" width="0.0801%" height="15" fill="rgb(251,219,4)" fg:x="51" fg:w="1"/><text x="4.3365%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="4.0865%" y="789" width="0.0801%" height="15" fill="rgb(241,55,40)" fg:x="51" fg:w="1"/><text x="4.3365%" y="799.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="4.0865%" y="773" width="0.0801%" height="15" fill="rgb(243,57,30)" fg:x="51" fg:w="1"/><text x="4.3365%" y="783.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="4.0865%" y="757" width="0.0801%" height="15" fill="rgb(234,50,30)" fg:x="51" fg:w="1"/><text x="4.3365%" y="767.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="4.0865%" y="741" width="0.0801%" height="15" fill="rgb(239,23,42)" fg:x="51" fg:w="1"/><text x="4.3365%" y="751.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="4.0865%" y="725" width="0.0801%" height="15" fill="rgb(217,38,19)" fg:x="51" fg:w="1"/><text x="4.3365%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="4.0865%" y="709" width="0.0801%" height="15" fill="rgb(215,179,16)" fg:x="51" fg:w="1"/><text x="4.3365%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="4.0865%" y="693" width="0.0801%" height="15" fill="rgb(254,21,37)" fg:x="51" fg:w="1"/><text x="4.3365%" y="703.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="4.0865%" y="677" width="0.0801%" height="15" fill="rgb(219,207,48)" fg:x="51" fg:w="1"/><text x="4.3365%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="4.0865%" y="661" width="0.0801%" height="15" fill="rgb(227,225,41)" fg:x="51" fg:w="1"/><text x="4.3365%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="4.0865%" y="645" width="0.0801%" height="15" fill="rgb(223,130,1)" fg:x="51" fg:w="1"/><text x="4.3365%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="4.0865%" y="629" width="0.0801%" height="15" fill="rgb(249,54,42)" fg:x="51" fg:w="1"/><text x="4.3365%" y="639.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="4.0865%" y="613" width="0.0801%" height="15" fill="rgb(248,69,25)" fg:x="51" fg:w="1"/><text x="4.3365%" y="623.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="4.0865%" y="597" width="0.0801%" height="15" fill="rgb(234,21,32)" fg:x="51" fg:w="1"/><text x="4.3365%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.0865%" y="581" width="0.0801%" height="15" fill="rgb(252,136,6)" fg:x="51" fg:w="1"/><text x="4.3365%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.0865%" y="565" width="0.0801%" height="15" fill="rgb(245,87,12)" fg:x="51" fg:w="1"/><text x="4.3365%" y="575.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="4.0865%" y="549" width="0.0801%" height="15" fill="rgb(208,12,15)" fg:x="51" fg:w="1"/><text x="4.3365%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="4.0865%" y="533" width="0.0801%" height="15" fill="rgb(250,98,2)" fg:x="51" fg:w="1"/><text x="4.3365%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="4.0865%" y="517" width="0.0801%" height="15" fill="rgb(205,213,15)" fg:x="51" fg:w="1"/><text x="4.3365%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="4.0865%" y="501" width="0.0801%" height="15" fill="rgb(248,192,44)" fg:x="51" fg:w="1"/><text x="4.3365%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="4.0865%" y="485" width="0.0801%" height="15" fill="rgb(221,89,17)" fg:x="51" fg:w="1"/><text x="4.3365%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="4.0865%" y="469" width="0.0801%" height="15" fill="rgb(209,55,3)" fg:x="51" fg:w="1"/><text x="4.3365%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="4.0865%" y="453" width="0.0801%" height="15" fill="rgb(247,23,45)" fg:x="51" fg:w="1"/><text x="4.3365%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="4.0865%" y="437" width="0.0801%" height="15" fill="rgb(235,152,23)" fg:x="51" fg:w="1"/><text x="4.3365%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.0865%" y="421" width="0.0801%" height="15" fill="rgb(244,63,13)" fg:x="51" fg:w="1"/><text x="4.3365%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="4.0865%" y="405" width="0.0801%" height="15" fill="rgb(227,30,37)" fg:x="51" fg:w="1"/><text x="4.3365%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="4.0865%" y="389" width="0.0801%" height="15" fill="rgb(224,49,42)" fg:x="51" fg:w="1"/><text x="4.3365%" y="399.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="4.0865%" y="373" width="0.0801%" height="15" fill="rgb(218,129,5)" fg:x="51" fg:w="1"/><text x="4.3365%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.0865%" y="357" width="0.0801%" height="15" fill="rgb(240,199,54)" fg:x="51" fg:w="1"/><text x="4.3365%" y="367.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="4.1667%" y="837" width="0.0801%" height="15" fill="rgb(234,31,13)" fg:x="52" fg:w="1"/><text x="4.4167%" y="847.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="4.1667%" y="821" width="0.0801%" height="15" fill="rgb(219,73,54)" fg:x="52" fg:w="1"/><text x="4.4167%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.1667%" y="805" width="0.0801%" height="15" fill="rgb(251,162,10)" fg:x="52" fg:w="1"/><text x="4.4167%" y="815.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="4.1667%" y="789" width="0.0801%" height="15" fill="rgb(240,138,47)" fg:x="52" fg:w="1"/><text x="4.4167%" y="799.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.1667%" y="773" width="0.0801%" height="15" fill="rgb(216,138,26)" fg:x="52" fg:w="1"/><text x="4.4167%" y="783.50"></text></g><g><title>kernel::plugins::SessionPlugins::hooks (1 samples, 0.08%)</title><rect x="4.2468%" y="837" width="0.0801%" height="15" fill="rgb(243,17,35)" fg:x="53" fg:w="1"/><text x="4.4968%" y="847.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="4.3269%" y="805" width="0.0801%" height="15" fill="rgb(241,60,18)" fg:x="54" fg:w="1"/><text x="4.5769%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="4.3269%" y="789" width="0.0801%" height="15" fill="rgb(234,2,44)" fg:x="54" fg:w="1"/><text x="4.5769%" y="799.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="4.3269%" y="773" width="0.0801%" height="15" fill="rgb(225,225,33)" fg:x="54" fg:w="1"/><text x="4.5769%" y="783.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="4.3269%" y="757" width="0.0801%" height="15" fill="rgb(234,50,31)" fg:x="54" fg:w="1"/><text x="4.5769%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.3269%" y="741" width="0.0801%" height="15" fill="rgb(249,6,25)" fg:x="54" fg:w="1"/><text x="4.5769%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.3269%" y="725" width="0.0801%" height="15" fill="rgb(241,5,17)" fg:x="54" fg:w="1"/><text x="4.5769%" y="735.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="4.3269%" y="709" width="0.0801%" height="15" fill="rgb(207,116,10)" fg:x="54" fg:w="1"/><text x="4.5769%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="4.3269%" y="693" width="0.0801%" height="15" fill="rgb(222,128,18)" fg:x="54" fg:w="1"/><text x="4.5769%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="4.3269%" y="677" width="0.0801%" height="15" fill="rgb(229,109,25)" fg:x="54" fg:w="1"/><text x="4.5769%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="4.3269%" y="661" width="0.0801%" height="15" fill="rgb(222,102,25)" fg:x="54" fg:w="1"/><text x="4.5769%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="4.3269%" y="645" width="0.0801%" height="15" fill="rgb(239,211,5)" fg:x="54" fg:w="1"/><text x="4.5769%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="4.3269%" y="629" width="0.0801%" height="15" fill="rgb(223,136,26)" fg:x="54" fg:w="1"/><text x="4.5769%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="4.3269%" y="613" width="0.0801%" height="15" fill="rgb(227,30,15)" fg:x="54" fg:w="1"/><text x="4.5769%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="4.3269%" y="597" width="0.0801%" height="15" fill="rgb(247,76,4)" fg:x="54" fg:w="1"/><text x="4.5769%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.3269%" y="581" width="0.0801%" height="15" fill="rgb(245,38,48)" fg:x="54" fg:w="1"/><text x="4.5769%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="4.3269%" y="565" width="0.0801%" height="15" fill="rgb(210,220,14)" fg:x="54" fg:w="1"/><text x="4.5769%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="4.3269%" y="549" width="0.0801%" height="15" fill="rgb(224,60,51)" fg:x="54" fg:w="1"/><text x="4.5769%" y="559.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="4.3269%" y="533" width="0.0801%" height="15" fill="rgb(212,133,49)" fg:x="54" fg:w="1"/><text x="4.5769%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.3269%" y="517" width="0.0801%" height="15" fill="rgb(231,39,22)" fg:x="54" fg:w="1"/><text x="4.5769%" y="527.50"></text></g><g><title>dlerror (3 samples, 0.24%)</title><rect x="4.4872%" y="789" width="0.2404%" height="15" fill="rgb(236,173,22)" fg:x="56" fg:w="3"/><text x="4.7372%" y="799.50"></text></g><g><title>__asprintf (3 samples, 0.24%)</title><rect x="4.4872%" y="773" width="0.2404%" height="15" fill="rgb(210,70,0)" fg:x="56" fg:w="3"/><text x="4.7372%" y="783.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (34 samples, 2.72%)</title><rect x="2.1635%" y="869" width="2.7244%" height="15" fill="rgb(215,170,11)" fg:x="27" fg:w="34"/><text x="2.4135%" y="879.50">&lt;e..</text></g><g><title>engine::session::Session::new (34 samples, 2.72%)</title><rect x="2.1635%" y="853" width="2.7244%" height="15" fill="rgb(220,154,28)" fg:x="27" fg:w="34"/><text x="2.4135%" y="863.50">en..</text></g><g><title>kernel::plugins::SessionPlugins::initialize (7 samples, 0.56%)</title><rect x="4.3269%" y="837" width="0.5609%" height="15" fill="rgb(240,160,41)" fg:x="54" fg:w="7"/><text x="4.5769%" y="847.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (7 samples, 0.56%)</title><rect x="4.3269%" y="821" width="0.5609%" height="15" fill="rgb(243,215,41)" fg:x="54" fg:w="7"/><text x="4.5769%" y="831.50"></text></g><g><title>libloading::os::unix::Library::open (6 samples, 0.48%)</title><rect x="4.4071%" y="805" width="0.4808%" height="15" fill="rgb(214,208,31)" fg:x="55" fg:w="6"/><text x="4.6571%" y="815.50"></text></g><g><title>dlopen (2 samples, 0.16%)</title><rect x="4.7276%" y="789" width="0.1603%" height="15" fill="rgb(247,57,22)" fg:x="59" fg:w="2"/><text x="4.9776%" y="799.50"></text></g><g><title>_dl_catch_error (2 samples, 0.16%)</title><rect x="4.7276%" y="773" width="0.1603%" height="15" fill="rgb(228,73,52)" fg:x="59" fg:w="2"/><text x="4.9776%" y="783.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="4.7276%" y="757" width="0.1603%" height="15" fill="rgb(252,60,9)" fg:x="59" fg:w="2"/><text x="4.9776%" y="767.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="4.7276%" y="741" width="0.1603%" height="15" fill="rgb(233,9,51)" fg:x="59" fg:w="2"/><text x="4.9776%" y="751.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="4.7276%" y="725" width="0.1603%" height="15" fill="rgb(223,67,14)" fg:x="59" fg:w="2"/><text x="4.9776%" y="735.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="4.8878%" y="853" width="0.1603%" height="15" fill="rgb(222,86,2)" fg:x="61" fg:w="2"/><text x="5.1378%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.9679%" y="837" width="0.0801%" height="15" fill="rgb(243,58,54)" fg:x="62" fg:w="1"/><text x="5.2179%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.9679%" y="821" width="0.0801%" height="15" fill="rgb(210,200,39)" fg:x="62" fg:w="1"/><text x="5.2179%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="4.9679%" y="805" width="0.0801%" height="15" fill="rgb(238,135,9)" fg:x="62" fg:w="1"/><text x="5.2179%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="4.9679%" y="789" width="0.0801%" height="15" fill="rgb(232,179,7)" fg:x="62" fg:w="1"/><text x="5.2179%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="4.9679%" y="773" width="0.0801%" height="15" fill="rgb(245,65,41)" fg:x="62" fg:w="1"/><text x="5.2179%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.9679%" y="757" width="0.0801%" height="15" fill="rgb(227,43,8)" fg:x="62" fg:w="1"/><text x="5.2179%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.9679%" y="741" width="0.0801%" height="15" fill="rgb(235,91,14)" fg:x="62" fg:w="1"/><text x="5.2179%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="4.9679%" y="725" width="0.0801%" height="15" fill="rgb(235,219,31)" fg:x="62" fg:w="1"/><text x="5.2179%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="4.9679%" y="709" width="0.0801%" height="15" fill="rgb(227,121,25)" fg:x="62" fg:w="1"/><text x="5.2179%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="4.9679%" y="693" width="0.0801%" height="15" fill="rgb(254,129,24)" fg:x="62" fg:w="1"/><text x="5.2179%" y="703.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="4.9679%" y="677" width="0.0801%" height="15" fill="rgb(226,144,49)" fg:x="62" fg:w="1"/><text x="5.2179%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.9679%" y="661" width="0.0801%" height="15" fill="rgb(214,187,32)" fg:x="62" fg:w="1"/><text x="5.2179%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="5.0481%" y="853" width="0.0801%" height="15" fill="rgb(243,129,46)" fg:x="63" fg:w="1"/><text x="5.2981%" y="863.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="5.0481%" y="837" width="0.0801%" height="15" fill="rgb(221,185,35)" fg:x="63" fg:w="1"/><text x="5.2981%" y="847.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.1282%" y="805" width="0.0801%" height="15" fill="rgb(205,0,32)" fg:x="64" fg:w="1"/><text x="5.3782%" y="815.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="5.1282%" y="821" width="0.1603%" height="15" fill="rgb(229,179,12)" fg:x="64" fg:w="2"/><text x="5.3782%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="5.2083%" y="805" width="0.0801%" height="15" fill="rgb(252,107,19)" fg:x="65" fg:w="1"/><text x="5.4583%" y="815.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="5.2083%" y="789" width="0.0801%" height="15" fill="rgb(220,95,27)" fg:x="65" fg:w="1"/><text x="5.4583%" y="799.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="5.2885%" y="821" width="0.0801%" height="15" fill="rgb(240,113,40)" fg:x="66" fg:w="1"/><text x="5.5385%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="5.2885%" y="805" width="0.0801%" height="15" fill="rgb(208,4,43)" fg:x="66" fg:w="1"/><text x="5.5385%" y="815.50"></text></g><g><title>engine::session::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="5.2885%" y="789" width="0.0801%" height="15" fill="rgb(247,189,30)" fg:x="66" fg:w="1"/><text x="5.5385%" y="799.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="5.2885%" y="773" width="0.0801%" height="15" fill="rgb(231,157,17)" fg:x="66" fg:w="1"/><text x="5.5385%" y="783.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.2885%" y="757" width="0.0801%" height="15" fill="rgb(224,139,6)" fg:x="66" fg:w="1"/><text x="5.5385%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="5.3686%" y="789" width="0.0801%" height="15" fill="rgb(223,83,16)" fg:x="67" fg:w="1"/><text x="5.6186%" y="799.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="5.3686%" y="773" width="0.0801%" height="15" fill="rgb(232,211,20)" fg:x="67" fg:w="1"/><text x="5.6186%" y="783.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="5.3686%" y="757" width="0.0801%" height="15" fill="rgb(225,203,35)" fg:x="67" fg:w="1"/><text x="5.6186%" y="767.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="5.4487%" y="773" width="0.2404%" height="15" fill="rgb(215,211,44)" fg:x="68" fg:w="3"/><text x="5.6987%" y="783.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="5.4487%" y="757" width="0.2404%" height="15" fill="rgb(248,213,26)" fg:x="68" fg:w="3"/><text x="5.6987%" y="767.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="5.5288%" y="741" width="0.1603%" height="15" fill="rgb(214,23,52)" fg:x="69" fg:w="2"/><text x="5.7788%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.6090%" y="725" width="0.0801%" height="15" fill="rgb(225,173,50)" fg:x="70" fg:w="1"/><text x="5.8590%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.6090%" y="709" width="0.0801%" height="15" fill="rgb(206,150,22)" fg:x="70" fg:w="1"/><text x="5.8590%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="5.6891%" y="757" width="0.1603%" height="15" fill="rgb(239,64,23)" fg:x="71" fg:w="2"/><text x="5.9391%" y="767.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="5.6891%" y="741" width="0.1603%" height="15" fill="rgb(242,50,38)" fg:x="71" fg:w="2"/><text x="5.9391%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.7692%" y="725" width="0.0801%" height="15" fill="rgb(217,91,15)" fg:x="72" fg:w="1"/><text x="6.0192%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.7692%" y="709" width="0.0801%" height="15" fill="rgb(230,172,6)" fg:x="72" fg:w="1"/><text x="6.0192%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="5.8494%" y="709" width="0.0801%" height="15" fill="rgb(221,98,26)" fg:x="73" fg:w="1"/><text x="6.0994%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.8494%" y="693" width="0.0801%" height="15" fill="rgb(227,210,45)" fg:x="73" fg:w="1"/><text x="6.0994%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.8494%" y="677" width="0.0801%" height="15" fill="rgb(206,8,30)" fg:x="73" fg:w="1"/><text x="6.0994%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.8494%" y="661" width="0.0801%" height="15" fill="rgb(241,219,17)" fg:x="73" fg:w="1"/><text x="6.0994%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.8494%" y="645" width="0.0801%" height="15" fill="rgb(247,121,29)" fg:x="73" fg:w="1"/><text x="6.0994%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="5.8494%" y="741" width="0.1603%" height="15" fill="rgb(219,169,49)" fg:x="73" fg:w="2"/><text x="6.0994%" y="751.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="5.8494%" y="725" width="0.1603%" height="15" fill="rgb(253,49,49)" fg:x="73" fg:w="2"/><text x="6.0994%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.9295%" y="709" width="0.0801%" height="15" fill="rgb(217,178,3)" fg:x="74" fg:w="1"/><text x="6.1795%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.9295%" y="693" width="0.0801%" height="15" fill="rgb(234,73,37)" fg:x="74" fg:w="1"/><text x="6.1795%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.9295%" y="677" width="0.0801%" height="15" fill="rgb(250,98,22)" fg:x="74" fg:w="1"/><text x="6.1795%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="5.8494%" y="757" width="0.4808%" height="15" fill="rgb(220,108,37)" fg:x="73" fg:w="6"/><text x="6.0994%" y="767.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="6.0096%" y="741" width="0.3205%" height="15" fill="rgb(225,168,10)" fg:x="75" fg:w="4"/><text x="6.2596%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="6.1699%" y="725" width="0.1603%" height="15" fill="rgb(247,215,21)" fg:x="77" fg:w="2"/><text x="6.4199%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="6.1699%" y="709" width="0.1603%" height="15" fill="rgb(253,189,31)" fg:x="77" fg:w="2"/><text x="6.4199%" y="719.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.96%)</title><rect x="5.4487%" y="789" width="0.9615%" height="15" fill="rgb(241,54,22)" fg:x="68" fg:w="12"/><text x="5.6987%" y="799.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="5.6891%" y="773" width="0.7212%" height="15" fill="rgb(211,87,4)" fg:x="71" fg:w="9"/><text x="5.9391%" y="783.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.3301%" y="757" width="0.0801%" height="15" fill="rgb(245,112,24)" fg:x="79" fg:w="1"/><text x="6.5801%" y="767.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.3301%" y="741" width="0.0801%" height="15" fill="rgb(235,190,41)" fg:x="79" fg:w="1"/><text x="6.5801%" y="751.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="6.4103%" y="741" width="0.1603%" height="15" fill="rgb(214,89,8)" fg:x="80" fg:w="2"/><text x="6.6603%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="6.5705%" y="725" width="0.0801%" height="15" fill="rgb(249,155,35)" fg:x="82" fg:w="1"/><text x="6.8205%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.7308%" y="693" width="0.0801%" height="15" fill="rgb(249,88,26)" fg:x="84" fg:w="1"/><text x="6.9808%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="6.8109%" y="677" width="0.0801%" height="15" fill="rgb(232,56,8)" fg:x="85" fg:w="1"/><text x="7.0609%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="6.4103%" y="789" width="0.5609%" height="15" fill="rgb(240,95,3)" fg:x="80" fg:w="7"/><text x="6.6603%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="6.4103%" y="773" width="0.5609%" height="15" fill="rgb(222,44,28)" fg:x="80" fg:w="7"/><text x="6.6603%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="6.4103%" y="757" width="0.5609%" height="15" fill="rgb(234,16,30)" fg:x="80" fg:w="7"/><text x="6.6603%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="6.5705%" y="741" width="0.4006%" height="15" fill="rgb(223,26,17)" fg:x="82" fg:w="5"/><text x="6.8205%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="6.6506%" y="725" width="0.3205%" height="15" fill="rgb(239,187,47)" fg:x="83" fg:w="4"/><text x="6.9006%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="6.7308%" y="709" width="0.2404%" height="15" fill="rgb(247,102,50)" fg:x="84" fg:w="3"/><text x="6.9808%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="6.8109%" y="693" width="0.1603%" height="15" fill="rgb(231,216,22)" fg:x="85" fg:w="2"/><text x="7.0609%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="6.8910%" y="677" width="0.0801%" height="15" fill="rgb(216,201,26)" fg:x="86" fg:w="1"/><text x="7.1410%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="6.8910%" y="661" width="0.0801%" height="15" fill="rgb(214,186,23)" fg:x="86" fg:w="1"/><text x="7.1410%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.8910%" y="645" width="0.0801%" height="15" fill="rgb(235,184,4)" fg:x="86" fg:w="1"/><text x="7.1410%" y="655.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="6.9712%" y="773" width="0.1603%" height="15" fill="rgb(244,46,17)" fg:x="87" fg:w="2"/><text x="7.2212%" y="783.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="7.0513%" y="757" width="0.0801%" height="15" fill="rgb(248,74,46)" fg:x="88" fg:w="1"/><text x="7.3013%" y="767.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="7.0513%" y="741" width="0.0801%" height="15" fill="rgb(243,79,5)" fg:x="88" fg:w="1"/><text x="7.3013%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.0513%" y="725" width="0.0801%" height="15" fill="rgb(213,148,1)" fg:x="88" fg:w="1"/><text x="7.3013%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="7.1314%" y="773" width="0.0801%" height="15" fill="rgb(221,30,0)" fg:x="89" fg:w="1"/><text x="7.3814%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.1314%" y="757" width="0.0801%" height="15" fill="rgb(207,85,29)" fg:x="89" fg:w="1"/><text x="7.3814%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.2115%" y="741" width="0.0801%" height="15" fill="rgb(239,31,46)" fg:x="90" fg:w="1"/><text x="7.4615%" y="751.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="7.2917%" y="741" width="0.0801%" height="15" fill="rgb(219,6,1)" fg:x="91" fg:w="1"/><text x="7.5417%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="7.2917%" y="725" width="0.0801%" height="15" fill="rgb(229,90,29)" fg:x="91" fg:w="1"/><text x="7.5417%" y="735.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="7.3718%" y="741" width="0.0801%" height="15" fill="rgb(242,201,42)" fg:x="92" fg:w="1"/><text x="7.6218%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="7.3718%" y="725" width="0.0801%" height="15" fill="rgb(243,80,54)" fg:x="92" fg:w="1"/><text x="7.6218%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.3718%" y="709" width="0.0801%" height="15" fill="rgb(223,166,15)" fg:x="92" fg:w="1"/><text x="7.6218%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.3718%" y="693" width="0.0801%" height="15" fill="rgb(238,78,27)" fg:x="92" fg:w="1"/><text x="7.6218%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="7.5321%" y="693" width="0.1603%" height="15" fill="rgb(235,28,43)" fg:x="94" fg:w="2"/><text x="7.7821%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="7.5321%" y="677" width="0.1603%" height="15" fill="rgb(240,210,28)" fg:x="94" fg:w="2"/><text x="7.7821%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.6122%" y="661" width="0.0801%" height="15" fill="rgb(253,6,46)" fg:x="95" fg:w="1"/><text x="7.8622%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="7.6923%" y="677" width="0.0801%" height="15" fill="rgb(250,159,47)" fg:x="96" fg:w="1"/><text x="7.9423%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.7724%" y="661" width="0.0801%" height="15" fill="rgb(216,139,2)" fg:x="97" fg:w="1"/><text x="8.0224%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.7724%" y="645" width="0.0801%" height="15" fill="rgb(221,124,44)" fg:x="97" fg:w="1"/><text x="8.0224%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="7.8526%" y="645" width="0.0801%" height="15" fill="rgb(205,37,22)" fg:x="98" fg:w="1"/><text x="8.1026%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="8.0128%" y="613" width="0.1603%" height="15" fill="rgb(250,55,8)" fg:x="100" fg:w="2"/><text x="8.2628%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="8.2532%" y="581" width="0.0801%" height="15" fill="rgb(215,83,48)" fg:x="103" fg:w="1"/><text x="8.5032%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="8.4135%" y="565" width="0.2404%" height="15" fill="rgb(253,2,32)" fg:x="105" fg:w="3"/><text x="8.6635%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="8.4135%" y="549" width="0.2404%" height="15" fill="rgb(236,67,28)" fg:x="105" fg:w="3"/><text x="8.6635%" y="559.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="8.4135%" y="533" width="0.2404%" height="15" fill="rgb(252,55,15)" fg:x="105" fg:w="3"/><text x="8.6635%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="8.3333%" y="581" width="0.4006%" height="15" fill="rgb(243,173,17)" fg:x="104" fg:w="5"/><text x="8.5833%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="8.6538%" y="565" width="0.0801%" height="15" fill="rgb(215,212,13)" fg:x="108" fg:w="1"/><text x="8.9038%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.88%)</title><rect x="7.9327%" y="645" width="0.8814%" height="15" fill="rgb(253,176,6)" fg:x="99" fg:w="11"/><text x="8.1827%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="7.9327%" y="629" width="0.8814%" height="15" fill="rgb(236,105,26)" fg:x="99" fg:w="11"/><text x="8.1827%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="8.1731%" y="613" width="0.6410%" height="15" fill="rgb(239,226,32)" fg:x="102" fg:w="8"/><text x="8.4231%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="8.1731%" y="597" width="0.6410%" height="15" fill="rgb(236,104,51)" fg:x="102" fg:w="8"/><text x="8.4231%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.7340%" y="581" width="0.0801%" height="15" fill="rgb(220,172,33)" fg:x="109" fg:w="1"/><text x="8.9840%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (17 samples, 1.36%)</title><rect x="7.5321%" y="709" width="1.3622%" height="15" fill="rgb(224,182,25)" fg:x="94" fg:w="17"/><text x="7.7821%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="7.6923%" y="693" width="1.2019%" height="15" fill="rgb(236,184,24)" fg:x="96" fg:w="15"/><text x="7.9423%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.12%)</title><rect x="7.7724%" y="677" width="1.1218%" height="15" fill="rgb(241,221,14)" fg:x="97" fg:w="14"/><text x="8.0224%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="7.8526%" y="661" width="1.0417%" height="15" fill="rgb(227,146,5)" fg:x="98" fg:w="13"/><text x="8.1026%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.8141%" y="645" width="0.0801%" height="15" fill="rgb(214,15,23)" fg:x="110" fg:w="1"/><text x="9.0641%" y="655.50"></text></g><g><title>engine::session::Session::flush (49 samples, 3.93%)</title><rect x="5.1282%" y="853" width="3.9263%" height="15" fill="rgb(233,157,31)" fg:x="64" fg:w="49"/><text x="5.3782%" y="863.50">engi..</text></g><g><title>engine::session::Session::save_entity_changes (49 samples, 3.93%)</title><rect x="5.1282%" y="837" width="3.9263%" height="15" fill="rgb(211,27,52)" fg:x="64" fg:w="49"/><text x="5.3782%" y="847.50">engi..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (46 samples, 3.69%)</title><rect x="5.3686%" y="821" width="3.6859%" height="15" fill="rgb(212,223,15)" fg:x="67" fg:w="46"/><text x="5.6186%" y="831.50">engi..</text></g><g><title>engine::session::SavesEntities::check_for_changes (46 samples, 3.69%)</title><rect x="5.3686%" y="805" width="3.6859%" height="15" fill="rgb(254,211,0)" fg:x="67" fg:w="46"/><text x="5.6186%" y="815.50">engi..</text></g><g><title>kernel::model::any_entity_changes (26 samples, 2.08%)</title><rect x="6.9712%" y="789" width="2.0833%" height="15" fill="rgb(205,43,38)" fg:x="87" fg:w="26"/><text x="7.2212%" y="799.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (23 samples, 1.84%)</title><rect x="7.2115%" y="773" width="1.8429%" height="15" fill="rgb(242,206,46)" fg:x="90" fg:w="23"/><text x="7.4615%" y="783.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (23 samples, 1.84%)</title><rect x="7.2115%" y="757" width="1.8429%" height="15" fill="rgb(220,221,12)" fg:x="90" fg:w="23"/><text x="7.4615%" y="767.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (20 samples, 1.60%)</title><rect x="7.4519%" y="741" width="1.6026%" height="15" fill="rgb(217,156,35)" fg:x="93" fg:w="20"/><text x="7.7019%" y="751.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.60%)</title><rect x="7.4519%" y="725" width="1.6026%" height="15" fill="rgb(207,181,49)" fg:x="93" fg:w="20"/><text x="7.7019%" y="735.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="8.8942%" y="709" width="0.1603%" height="15" fill="rgb(235,103,47)" fg:x="111" fg:w="2"/><text x="9.1442%" y="719.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="9.0545%" y="773" width="0.0801%" height="15" fill="rgb(222,63,28)" fg:x="113" fg:w="1"/><text x="9.3045%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.1346%" y="741" width="0.0801%" height="15" fill="rgb(244,137,21)" fg:x="114" fg:w="1"/><text x="9.3846%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.1346%" y="725" width="0.0801%" height="15" fill="rgb(228,35,27)" fg:x="114" fg:w="1"/><text x="9.3846%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="9.0545%" y="837" width="0.2404%" height="15" fill="rgb(226,191,41)" fg:x="113" fg:w="3"/><text x="9.3045%" y="847.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="9.0545%" y="821" width="0.2404%" height="15" fill="rgb(210,154,3)" fg:x="113" fg:w="3"/><text x="9.3045%" y="831.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="9.0545%" y="805" width="0.2404%" height="15" fill="rgb(216,60,49)" fg:x="113" fg:w="3"/><text x="9.3045%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="9.0545%" y="789" width="0.2404%" height="15" fill="rgb(226,17,20)" fg:x="113" fg:w="3"/><text x="9.3045%" y="799.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="9.1346%" y="773" width="0.1603%" height="15" fill="rgb(206,115,35)" fg:x="114" fg:w="2"/><text x="9.3846%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="9.1346%" y="757" width="0.1603%" height="15" fill="rgb(227,88,1)" fg:x="114" fg:w="2"/><text x="9.3846%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="9.2147%" y="741" width="0.0801%" height="15" fill="rgb(230,222,24)" fg:x="115" fg:w="1"/><text x="9.4647%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="9.2147%" y="725" width="0.0801%" height="15" fill="rgb(214,124,32)" fg:x="115" fg:w="1"/><text x="9.4647%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="9.2147%" y="709" width="0.0801%" height="15" fill="rgb(240,41,36)" fg:x="115" fg:w="1"/><text x="9.4647%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="9.2147%" y="693" width="0.0801%" height="15" fill="rgb(221,17,52)" fg:x="115" fg:w="1"/><text x="9.4647%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="9.2147%" y="677" width="0.0801%" height="15" fill="rgb(252,70,16)" fg:x="115" fg:w="1"/><text x="9.4647%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.2147%" y="661" width="0.0801%" height="15" fill="rgb(250,177,4)" fg:x="115" fg:w="1"/><text x="9.4647%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="9.2949%" y="789" width="0.0801%" height="15" fill="rgb(240,188,47)" fg:x="116" fg:w="1"/><text x="9.5449%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="9.2949%" y="773" width="0.0801%" height="15" fill="rgb(215,92,12)" fg:x="116" fg:w="1"/><text x="9.5449%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="9.2949%" y="757" width="0.0801%" height="15" fill="rgb(242,110,29)" fg:x="116" fg:w="1"/><text x="9.5449%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.2949%" y="741" width="0.0801%" height="15" fill="rgb(208,211,26)" fg:x="116" fg:w="1"/><text x="9.5449%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.2949%" y="725" width="0.0801%" height="15" fill="rgb(244,147,6)" fg:x="116" fg:w="1"/><text x="9.5449%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.2949%" y="709" width="0.0801%" height="15" fill="rgb(211,130,42)" fg:x="116" fg:w="1"/><text x="9.5449%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="9.2949%" y="821" width="0.1603%" height="15" fill="rgb(220,63,1)" fg:x="116" fg:w="2"/><text x="9.5449%" y="831.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="9.2949%" y="805" width="0.1603%" height="15" fill="rgb(241,212,30)" fg:x="116" fg:w="2"/><text x="9.5449%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="9.3750%" y="789" width="0.0801%" height="15" fill="rgb(233,153,17)" fg:x="117" fg:w="1"/><text x="9.6250%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="9.3750%" y="773" width="0.0801%" height="15" fill="rgb(236,3,10)" fg:x="117" fg:w="1"/><text x="9.6250%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="9.3750%" y="757" width="0.0801%" height="15" fill="rgb(232,41,21)" fg:x="117" fg:w="1"/><text x="9.6250%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.3750%" y="741" width="0.0801%" height="15" fill="rgb(206,63,51)" fg:x="117" fg:w="1"/><text x="9.6250%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.3750%" y="725" width="0.0801%" height="15" fill="rgb(250,214,3)" fg:x="117" fg:w="1"/><text x="9.6250%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.3750%" y="709" width="0.0801%" height="15" fill="rgb(254,89,27)" fg:x="117" fg:w="1"/><text x="9.6250%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.3750%" y="693" width="0.0801%" height="15" fill="rgb(249,41,14)" fg:x="117" fg:w="1"/><text x="9.6250%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="9.3750%" y="677" width="0.0801%" height="15" fill="rgb(221,196,51)" fg:x="117" fg:w="1"/><text x="9.6250%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.3750%" y="661" width="0.0801%" height="15" fill="rgb(214,116,26)" fg:x="117" fg:w="1"/><text x="9.6250%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.3750%" y="645" width="0.0801%" height="15" fill="rgb(236,67,7)" fg:x="117" fg:w="1"/><text x="9.6250%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.3750%" y="629" width="0.0801%" height="15" fill="rgb(253,179,32)" fg:x="117" fg:w="1"/><text x="9.6250%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.3750%" y="613" width="0.0801%" height="15" fill="rgb(218,33,15)" fg:x="117" fg:w="1"/><text x="9.6250%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.3750%" y="597" width="0.0801%" height="15" fill="rgb(217,202,41)" fg:x="117" fg:w="1"/><text x="9.6250%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.3750%" y="581" width="0.0801%" height="15" fill="rgb(234,133,5)" fg:x="117" fg:w="1"/><text x="9.6250%" y="591.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="9.4551%" y="805" width="0.0801%" height="15" fill="rgb(240,47,40)" fg:x="118" fg:w="1"/><text x="9.7051%" y="815.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.4551%" y="789" width="0.0801%" height="15" fill="rgb(234,166,26)" fg:x="118" fg:w="1"/><text x="9.7051%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="9.4551%" y="821" width="0.2404%" height="15" fill="rgb(244,125,51)" fg:x="118" fg:w="3"/><text x="9.7051%" y="831.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="9.5353%" y="805" width="0.1603%" height="15" fill="rgb(229,171,11)" fg:x="119" fg:w="2"/><text x="9.7853%" y="815.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="9.5353%" y="789" width="0.1603%" height="15" fill="rgb(224,38,45)" fg:x="119" fg:w="2"/><text x="9.7853%" y="799.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="9.5353%" y="773" width="0.1603%" height="15" fill="rgb(237,27,7)" fg:x="119" fg:w="2"/><text x="9.7853%" y="783.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="9.5353%" y="757" width="0.1603%" height="15" fill="rgb(216,52,7)" fg:x="119" fg:w="2"/><text x="9.7853%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.6154%" y="741" width="0.0801%" height="15" fill="rgb(243,11,11)" fg:x="120" fg:w="1"/><text x="9.8654%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="9.6955%" y="773" width="0.0801%" height="15" fill="rgb(253,167,20)" fg:x="121" fg:w="1"/><text x="9.9455%" y="783.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="9.6955%" y="757" width="0.0801%" height="15" fill="rgb(215,207,5)" fg:x="121" fg:w="1"/><text x="9.9455%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="9.6955%" y="741" width="0.0801%" height="15" fill="rgb(252,127,31)" fg:x="121" fg:w="1"/><text x="9.9455%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.6955%" y="725" width="0.0801%" height="15" fill="rgb(209,106,27)" fg:x="121" fg:w="1"/><text x="9.9455%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.6955%" y="709" width="0.0801%" height="15" fill="rgb(214,220,18)" fg:x="121" fg:w="1"/><text x="9.9455%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.6955%" y="693" width="0.0801%" height="15" fill="rgb(237,89,12)" fg:x="121" fg:w="1"/><text x="9.9455%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.6955%" y="677" width="0.0801%" height="15" fill="rgb(209,167,36)" fg:x="121" fg:w="1"/><text x="9.9455%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.6955%" y="661" width="0.0801%" height="15" fill="rgb(243,45,22)" fg:x="121" fg:w="1"/><text x="9.9455%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.6955%" y="645" width="0.0801%" height="15" fill="rgb(239,2,46)" fg:x="121" fg:w="1"/><text x="9.9455%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.7756%" y="709" width="0.0801%" height="15" fill="rgb(241,101,0)" fg:x="122" fg:w="1"/><text x="10.0256%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.7756%" y="693" width="0.0801%" height="15" fill="rgb(244,34,31)" fg:x="122" fg:w="1"/><text x="10.0256%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="9.7756%" y="677" width="0.0801%" height="15" fill="rgb(248,23,22)" fg:x="122" fg:w="1"/><text x="10.0256%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="9.7756%" y="661" width="0.0801%" height="15" fill="rgb(218,27,48)" fg:x="122" fg:w="1"/><text x="10.0256%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="9.7756%" y="645" width="0.0801%" height="15" fill="rgb(232,78,1)" fg:x="122" fg:w="1"/><text x="10.0256%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="9.7756%" y="629" width="0.0801%" height="15" fill="rgb(233,169,12)" fg:x="122" fg:w="1"/><text x="10.0256%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="9.7756%" y="613" width="0.0801%" height="15" fill="rgb(225,222,54)" fg:x="122" fg:w="1"/><text x="10.0256%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="9.7756%" y="597" width="0.0801%" height="15" fill="rgb(245,126,29)" fg:x="122" fg:w="1"/><text x="10.0256%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="9.7756%" y="581" width="0.0801%" height="15" fill="rgb(241,63,48)" fg:x="122" fg:w="1"/><text x="10.0256%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="9.7756%" y="565" width="0.0801%" height="15" fill="rgb(235,126,38)" fg:x="122" fg:w="1"/><text x="10.0256%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="9.7756%" y="549" width="0.0801%" height="15" fill="rgb(232,96,49)" fg:x="122" fg:w="1"/><text x="10.0256%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.7756%" y="533" width="0.0801%" height="15" fill="rgb(211,146,40)" fg:x="122" fg:w="1"/><text x="10.0256%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="9.7756%" y="725" width="0.2404%" height="15" fill="rgb(247,93,44)" fg:x="122" fg:w="3"/><text x="10.0256%" y="735.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="9.8558%" y="709" width="0.1603%" height="15" fill="rgb(251,41,49)" fg:x="123" fg:w="2"/><text x="10.1058%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="9.6955%" y="805" width="0.4006%" height="15" fill="rgb(218,155,12)" fg:x="121" fg:w="5"/><text x="9.9455%" y="815.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.40%)</title><rect x="9.6955%" y="789" width="0.4006%" height="15" fill="rgb(221,161,30)" fg:x="121" fg:w="5"/><text x="9.9455%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="9.7756%" y="773" width="0.3205%" height="15" fill="rgb(221,179,11)" fg:x="122" fg:w="4"/><text x="10.0256%" y="783.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="9.7756%" y="757" width="0.3205%" height="15" fill="rgb(224,170,48)" fg:x="122" fg:w="4"/><text x="10.0256%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="9.7756%" y="741" width="0.3205%" height="15" fill="rgb(223,117,5)" fg:x="122" fg:w="4"/><text x="10.0256%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.0160%" y="725" width="0.0801%" height="15" fill="rgb(209,52,20)" fg:x="125" fg:w="1"/><text x="10.2660%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.0160%" y="709" width="0.0801%" height="15" fill="rgb(209,19,41)" fg:x="125" fg:w="1"/><text x="10.2660%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.0160%" y="693" width="0.0801%" height="15" fill="rgb(210,177,12)" fg:x="125" fg:w="1"/><text x="10.2660%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.0160%" y="677" width="0.0801%" height="15" fill="rgb(211,159,37)" fg:x="125" fg:w="1"/><text x="10.2660%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="10.0160%" y="661" width="0.0801%" height="15" fill="rgb(209,20,2)" fg:x="125" fg:w="1"/><text x="10.2660%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.0160%" y="645" width="0.0801%" height="15" fill="rgb(244,3,46)" fg:x="125" fg:w="1"/><text x="10.2660%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.0160%" y="629" width="0.0801%" height="15" fill="rgb(220,94,38)" fg:x="125" fg:w="1"/><text x="10.2660%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.0160%" y="613" width="0.0801%" height="15" fill="rgb(253,14,31)" fg:x="125" fg:w="1"/><text x="10.2660%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.0160%" y="597" width="0.0801%" height="15" fill="rgb(234,176,13)" fg:x="125" fg:w="1"/><text x="10.2660%" y="607.50"></text></g><g><title>plugins_core::build::Build::holding (14 samples, 1.12%)</title><rect x="9.0545%" y="853" width="1.1218%" height="15" fill="rgb(218,62,25)" fg:x="113" fg:w="14"/><text x="9.3045%" y="863.50"></text></g><g><title>plugins_core::tools::set_container (11 samples, 0.88%)</title><rect x="9.2949%" y="837" width="0.8814%" height="15" fill="rgb(216,124,40)" fg:x="116" fg:w="11"/><text x="9.5449%" y="847.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.48%)</title><rect x="9.6955%" y="821" width="0.4808%" height="15" fill="rgb(228,170,12)" fg:x="121" fg:w="6"/><text x="9.9455%" y="831.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="10.0962%" y="805" width="0.0801%" height="15" fill="rgb(231,226,5)" fg:x="126" fg:w="1"/><text x="10.3462%" y="815.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="10.0962%" y="789" width="0.0801%" height="15" fill="rgb(237,122,22)" fg:x="126" fg:w="1"/><text x="10.3462%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="10.0962%" y="773" width="0.0801%" height="15" fill="rgb(209,185,25)" fg:x="126" fg:w="1"/><text x="10.3462%" y="783.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="10.0962%" y="757" width="0.0801%" height="15" fill="rgb(228,200,32)" fg:x="126" fg:w="1"/><text x="10.3462%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="10.0962%" y="741" width="0.0801%" height="15" fill="rgb(217,140,10)" fg:x="126" fg:w="1"/><text x="10.3462%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="10.0962%" y="725" width="0.0801%" height="15" fill="rgb(253,17,24)" fg:x="126" fg:w="1"/><text x="10.3462%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="10.2564%" y="693" width="0.1603%" height="15" fill="rgb(212,61,6)" fg:x="128" fg:w="2"/><text x="10.5064%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.3365%" y="677" width="0.0801%" height="15" fill="rgb(205,14,25)" fg:x="129" fg:w="1"/><text x="10.5865%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="10.1763%" y="789" width="0.4006%" height="15" fill="rgb(232,69,41)" fg:x="127" fg:w="5"/><text x="10.4263%" y="799.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="10.1763%" y="773" width="0.4006%" height="15" fill="rgb(241,106,47)" fg:x="127" fg:w="5"/><text x="10.4263%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="10.1763%" y="757" width="0.4006%" height="15" fill="rgb(210,213,53)" fg:x="127" fg:w="5"/><text x="10.4263%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="10.2564%" y="741" width="0.3205%" height="15" fill="rgb(253,175,27)" fg:x="128" fg:w="4"/><text x="10.5064%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="10.2564%" y="725" width="0.3205%" height="15" fill="rgb(211,171,24)" fg:x="128" fg:w="4"/><text x="10.5064%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="10.2564%" y="709" width="0.3205%" height="15" fill="rgb(229,80,7)" fg:x="128" fg:w="4"/><text x="10.5064%" y="719.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="10.4167%" y="693" width="0.1603%" height="15" fill="rgb(212,46,39)" fg:x="130" fg:w="2"/><text x="10.6667%" y="703.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="10.5769%" y="773" width="0.0801%" height="15" fill="rgb(240,80,45)" fg:x="132" fg:w="1"/><text x="10.8269%" y="783.50"></text></g><g><title>plugins_core::build::Build::into_entry (7 samples, 0.56%)</title><rect x="10.1763%" y="853" width="0.5609%" height="15" fill="rgb(253,177,40)" fg:x="127" fg:w="7"/><text x="10.4263%" y="863.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="10.1763%" y="837" width="0.5609%" height="15" fill="rgb(249,200,15)" fg:x="127" fg:w="7"/><text x="10.4263%" y="847.50"></text></g><g><title>engine::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="10.1763%" y="821" width="0.5609%" height="15" fill="rgb(217,78,26)" fg:x="127" fg:w="7"/><text x="10.4263%" y="831.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (7 samples, 0.56%)</title><rect x="10.1763%" y="805" width="0.5609%" height="15" fill="rgb(254,151,32)" fg:x="127" fg:w="7"/><text x="10.4263%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="10.5769%" y="789" width="0.1603%" height="15" fill="rgb(226,165,27)" fg:x="132" fg:w="2"/><text x="10.8269%" y="799.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="10.6571%" y="773" width="0.0801%" height="15" fill="rgb(250,206,4)" fg:x="133" fg:w="1"/><text x="10.9071%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="10.6571%" y="757" width="0.0801%" height="15" fill="rgb(231,229,27)" fg:x="133" fg:w="1"/><text x="10.9071%" y="767.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="10.6571%" y="741" width="0.0801%" height="15" fill="rgb(239,217,8)" fg:x="133" fg:w="1"/><text x="10.9071%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.6571%" y="725" width="0.0801%" height="15" fill="rgb(225,204,27)" fg:x="133" fg:w="1"/><text x="10.9071%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="10.6571%" y="709" width="0.0801%" height="15" fill="rgb(230,56,32)" fg:x="133" fg:w="1"/><text x="10.9071%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.6571%" y="693" width="0.0801%" height="15" fill="rgb(222,56,27)" fg:x="133" fg:w="1"/><text x="10.9071%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="10.6571%" y="677" width="0.0801%" height="15" fill="rgb(253,108,27)" fg:x="133" fg:w="1"/><text x="10.9071%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="10.6571%" y="661" width="0.0801%" height="15" fill="rgb(212,87,36)" fg:x="133" fg:w="1"/><text x="10.9071%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.6571%" y="645" width="0.0801%" height="15" fill="rgb(247,82,36)" fg:x="133" fg:w="1"/><text x="10.9071%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="10.6571%" y="629" width="0.0801%" height="15" fill="rgb(222,143,9)" fg:x="133" fg:w="1"/><text x="10.9071%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.6571%" y="613" width="0.0801%" height="15" fill="rgb(238,162,48)" fg:x="133" fg:w="1"/><text x="10.9071%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="10.6571%" y="597" width="0.0801%" height="15" fill="rgb(221,59,43)" fg:x="133" fg:w="1"/><text x="10.9071%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.7372%" y="789" width="0.0801%" height="15" fill="rgb(205,166,41)" fg:x="134" fg:w="1"/><text x="10.9872%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.7372%" y="773" width="0.0801%" height="15" fill="rgb(241,186,40)" fg:x="134" fg:w="1"/><text x="10.9872%" y="783.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.8173%" y="725" width="0.0801%" height="15" fill="rgb(216,119,35)" fg:x="135" fg:w="1"/><text x="11.0673%" y="735.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="10.7372%" y="853" width="0.3205%" height="15" fill="rgb(208,68,38)" fg:x="134" fg:w="4"/><text x="10.9872%" y="863.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="10.7372%" y="837" width="0.3205%" height="15" fill="rgb(217,113,1)" fg:x="134" fg:w="4"/><text x="10.9872%" y="847.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="10.7372%" y="821" width="0.3205%" height="15" fill="rgb(242,153,3)" fg:x="134" fg:w="4"/><text x="10.9872%" y="831.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="10.7372%" y="805" width="0.3205%" height="15" fill="rgb(229,76,35)" fg:x="134" fg:w="4"/><text x="10.9872%" y="815.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="10.8173%" y="789" width="0.2404%" height="15" fill="rgb(229,125,34)" fg:x="135" fg:w="3"/><text x="11.0673%" y="799.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="10.8173%" y="773" width="0.2404%" height="15" fill="rgb(238,179,36)" fg:x="135" fg:w="3"/><text x="11.0673%" y="783.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="10.8173%" y="757" width="0.2404%" height="15" fill="rgb(244,183,19)" fg:x="135" fg:w="3"/><text x="11.0673%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="10.8173%" y="741" width="0.2404%" height="15" fill="rgb(216,85,49)" fg:x="135" fg:w="3"/><text x="11.0673%" y="751.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="10.8974%" y="725" width="0.1603%" height="15" fill="rgb(208,161,47)" fg:x="136" fg:w="2"/><text x="11.1474%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="10.8974%" y="709" width="0.1603%" height="15" fill="rgb(233,210,18)" fg:x="136" fg:w="2"/><text x="11.1474%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="10.8974%" y="693" width="0.1603%" height="15" fill="rgb(205,104,42)" fg:x="136" fg:w="2"/><text x="11.1474%" y="703.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="10.8974%" y="677" width="0.1603%" height="15" fill="rgb(248,90,43)" fg:x="136" fg:w="2"/><text x="11.1474%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="10.8974%" y="661" width="0.1603%" height="15" fill="rgb(206,198,11)" fg:x="136" fg:w="2"/><text x="11.1474%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="11.0577%" y="837" width="0.0801%" height="15" fill="rgb(239,165,27)" fg:x="138" fg:w="1"/><text x="11.3077%" y="847.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="11.0577%" y="821" width="0.0801%" height="15" fill="rgb(246,44,32)" fg:x="138" fg:w="1"/><text x="11.3077%" y="831.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="11.0577%" y="805" width="0.0801%" height="15" fill="rgb(252,65,42)" fg:x="138" fg:w="1"/><text x="11.3077%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="11.0577%" y="789" width="0.0801%" height="15" fill="rgb(246,197,18)" fg:x="138" fg:w="1"/><text x="11.3077%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="11.0577%" y="773" width="0.0801%" height="15" fill="rgb(216,192,4)" fg:x="138" fg:w="1"/><text x="11.3077%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.0577%" y="757" width="0.0801%" height="15" fill="rgb(208,117,10)" fg:x="138" fg:w="1"/><text x="11.3077%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.0577%" y="741" width="0.0801%" height="15" fill="rgb(240,61,47)" fg:x="138" fg:w="1"/><text x="11.3077%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="11.0577%" y="725" width="0.0801%" height="15" fill="rgb(228,178,21)" fg:x="138" fg:w="1"/><text x="11.3077%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.0577%" y="709" width="0.0801%" height="15" fill="rgb(219,96,54)" fg:x="138" fg:w="1"/><text x="11.3077%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.0577%" y="693" width="0.0801%" height="15" fill="rgb(250,177,24)" fg:x="138" fg:w="1"/><text x="11.3077%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.0577%" y="677" width="0.0801%" height="15" fill="rgb(242,154,46)" fg:x="138" fg:w="1"/><text x="11.3077%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.0577%" y="661" width="0.0801%" height="15" fill="rgb(226,176,29)" fg:x="138" fg:w="1"/><text x="11.3077%" y="671.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="11.1378%" y="789" width="0.0801%" height="15" fill="rgb(226,29,2)" fg:x="139" fg:w="1"/><text x="11.3878%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="11.1378%" y="773" width="0.0801%" height="15" fill="rgb(237,104,14)" fg:x="139" fg:w="1"/><text x="11.3878%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.1378%" y="757" width="0.0801%" height="15" fill="rgb(245,207,31)" fg:x="139" fg:w="1"/><text x="11.3878%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.1378%" y="741" width="0.0801%" height="15" fill="rgb(229,211,45)" fg:x="139" fg:w="1"/><text x="11.3878%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.1378%" y="725" width="0.0801%" height="15" fill="rgb(229,113,15)" fg:x="139" fg:w="1"/><text x="11.3878%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.1378%" y="709" width="0.0801%" height="15" fill="rgb(237,147,15)" fg:x="139" fg:w="1"/><text x="11.3878%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.1378%" y="693" width="0.0801%" height="15" fill="rgb(244,120,12)" fg:x="139" fg:w="1"/><text x="11.3878%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="11.1378%" y="677" width="0.0801%" height="15" fill="rgb(205,120,12)" fg:x="139" fg:w="1"/><text x="11.3878%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="11.1378%" y="661" width="0.0801%" height="15" fill="rgb(231,26,45)" fg:x="139" fg:w="1"/><text x="11.3878%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.2179%" y="645" width="0.0801%" height="15" fill="rgb(246,98,1)" fg:x="140" fg:w="1"/><text x="11.4679%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="11.2179%" y="757" width="0.1603%" height="15" fill="rgb(207,68,45)" fg:x="140" fg:w="2"/><text x="11.4679%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="11.2179%" y="741" width="0.1603%" height="15" fill="rgb(231,27,38)" fg:x="140" fg:w="2"/><text x="11.4679%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="11.2179%" y="725" width="0.1603%" height="15" fill="rgb(214,223,3)" fg:x="140" fg:w="2"/><text x="11.4679%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="11.2179%" y="709" width="0.1603%" height="15" fill="rgb(228,195,46)" fg:x="140" fg:w="2"/><text x="11.4679%" y="719.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="11.2179%" y="693" width="0.1603%" height="15" fill="rgb(231,100,42)" fg:x="140" fg:w="2"/><text x="11.4679%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="11.2179%" y="677" width="0.1603%" height="15" fill="rgb(236,53,4)" fg:x="140" fg:w="2"/><text x="11.4679%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="11.2179%" y="661" width="0.1603%" height="15" fill="rgb(230,152,12)" fg:x="140" fg:w="2"/><text x="11.4679%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="11.2981%" y="645" width="0.0801%" height="15" fill="rgb(226,101,19)" fg:x="141" fg:w="1"/><text x="11.5481%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="11.2981%" y="629" width="0.0801%" height="15" fill="rgb(250,149,32)" fg:x="141" fg:w="1"/><text x="11.5481%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.2981%" y="613" width="0.0801%" height="15" fill="rgb(232,178,12)" fg:x="141" fg:w="1"/><text x="11.5481%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.2981%" y="597" width="0.0801%" height="15" fill="rgb(246,151,17)" fg:x="141" fg:w="1"/><text x="11.5481%" y="607.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="11.2981%" y="581" width="0.0801%" height="15" fill="rgb(252,17,51)" fg:x="141" fg:w="1"/><text x="11.5481%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="11.2981%" y="565" width="0.0801%" height="15" fill="rgb(250,207,23)" fg:x="141" fg:w="1"/><text x="11.5481%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="11.2981%" y="549" width="0.0801%" height="15" fill="rgb(205,27,5)" fg:x="141" fg:w="1"/><text x="11.5481%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="11.2981%" y="533" width="0.0801%" height="15" fill="rgb(224,32,19)" fg:x="141" fg:w="1"/><text x="11.5481%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="11.2981%" y="517" width="0.0801%" height="15" fill="rgb(247,214,40)" fg:x="141" fg:w="1"/><text x="11.5481%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="11.2981%" y="501" width="0.0801%" height="15" fill="rgb(239,199,17)" fg:x="141" fg:w="1"/><text x="11.5481%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.08%)</title><rect x="11.2981%" y="485" width="0.0801%" height="15" fill="rgb(251,159,9)" fg:x="141" fg:w="1"/><text x="11.5481%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.08%)</title><rect x="11.2981%" y="469" width="0.0801%" height="15" fill="rgb(225,78,32)" fg:x="141" fg:w="1"/><text x="11.5481%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.3782%" y="677" width="0.0801%" height="15" fill="rgb(206,97,47)" fg:x="142" fg:w="1"/><text x="11.6282%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.3782%" y="661" width="0.0801%" height="15" fill="rgb(227,107,4)" fg:x="142" fg:w="1"/><text x="11.6282%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.3782%" y="645" width="0.0801%" height="15" fill="rgb(241,146,50)" fg:x="142" fg:w="1"/><text x="11.6282%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.3782%" y="629" width="0.0801%" height="15" fill="rgb(232,92,30)" fg:x="142" fg:w="1"/><text x="11.6282%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.3782%" y="613" width="0.0801%" height="15" fill="rgb(222,0,40)" fg:x="142" fg:w="1"/><text x="11.6282%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.3782%" y="597" width="0.0801%" height="15" fill="rgb(219,54,33)" fg:x="142" fg:w="1"/><text x="11.6282%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.3782%" y="581" width="0.0801%" height="15" fill="rgb(226,209,28)" fg:x="142" fg:w="1"/><text x="11.6282%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.3782%" y="565" width="0.0801%" height="15" fill="rgb(254,205,35)" fg:x="142" fg:w="1"/><text x="11.6282%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.3782%" y="549" width="0.0801%" height="15" fill="rgb(230,159,3)" fg:x="142" fg:w="1"/><text x="11.6282%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.3782%" y="533" width="0.0801%" height="15" fill="rgb(232,190,24)" fg:x="142" fg:w="1"/><text x="11.6282%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.3782%" y="517" width="0.0801%" height="15" fill="rgb(217,227,44)" fg:x="142" fg:w="1"/><text x="11.6282%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.3782%" y="501" width="0.0801%" height="15" fill="rgb(236,211,1)" fg:x="142" fg:w="1"/><text x="11.6282%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.3782%" y="485" width="0.0801%" height="15" fill="rgb(250,127,46)" fg:x="142" fg:w="1"/><text x="11.6282%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.3782%" y="469" width="0.0801%" height="15" fill="rgb(229,213,6)" fg:x="142" fg:w="1"/><text x="11.6282%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.3782%" y="453" width="0.0801%" height="15" fill="rgb(237,15,36)" fg:x="142" fg:w="1"/><text x="11.6282%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.3782%" y="437" width="0.0801%" height="15" fill="rgb(213,131,41)" fg:x="142" fg:w="1"/><text x="11.6282%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.4583%" y="677" width="0.0801%" height="15" fill="rgb(225,82,44)" fg:x="143" fg:w="1"/><text x="11.7083%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="11.4583%" y="661" width="0.0801%" height="15" fill="rgb(249,42,11)" fg:x="143" fg:w="1"/><text x="11.7083%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.4583%" y="645" width="0.0801%" height="15" fill="rgb(253,11,29)" fg:x="143" fg:w="1"/><text x="11.7083%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.4583%" y="629" width="0.0801%" height="15" fill="rgb(206,8,54)" fg:x="143" fg:w="1"/><text x="11.7083%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.4583%" y="613" width="0.0801%" height="15" fill="rgb(222,186,2)" fg:x="143" fg:w="1"/><text x="11.7083%" y="623.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="11.2179%" y="789" width="0.4006%" height="15" fill="rgb(221,206,53)" fg:x="140" fg:w="5"/><text x="11.4679%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="11.2179%" y="773" width="0.4006%" height="15" fill="rgb(230,150,21)" fg:x="140" fg:w="5"/><text x="11.4679%" y="783.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="11.3782%" y="757" width="0.2404%" height="15" fill="rgb(253,202,10)" fg:x="142" fg:w="3"/><text x="11.6282%" y="767.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="11.3782%" y="741" width="0.2404%" height="15" fill="rgb(238,109,40)" fg:x="142" fg:w="3"/><text x="11.6282%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="11.3782%" y="725" width="0.2404%" height="15" fill="rgb(247,120,22)" fg:x="142" fg:w="3"/><text x="11.6282%" y="735.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="11.3782%" y="709" width="0.2404%" height="15" fill="rgb(207,43,30)" fg:x="142" fg:w="3"/><text x="11.6282%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="11.3782%" y="693" width="0.2404%" height="15" fill="rgb(213,211,24)" fg:x="142" fg:w="3"/><text x="11.6282%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.5385%" y="677" width="0.0801%" height="15" fill="rgb(239,73,39)" fg:x="144" fg:w="1"/><text x="11.7885%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.5385%" y="661" width="0.0801%" height="15" fill="rgb(245,182,19)" fg:x="144" fg:w="1"/><text x="11.7885%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.5385%" y="645" width="0.0801%" height="15" fill="rgb(247,143,26)" fg:x="144" fg:w="1"/><text x="11.7885%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.5385%" y="629" width="0.0801%" height="15" fill="rgb(228,191,23)" fg:x="144" fg:w="1"/><text x="11.7885%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="11.5385%" y="613" width="0.0801%" height="15" fill="rgb(253,165,31)" fg:x="144" fg:w="1"/><text x="11.7885%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.5385%" y="597" width="0.0801%" height="15" fill="rgb(234,138,20)" fg:x="144" fg:w="1"/><text x="11.7885%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.5385%" y="581" width="0.0801%" height="15" fill="rgb(218,191,29)" fg:x="144" fg:w="1"/><text x="11.7885%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.5385%" y="565" width="0.0801%" height="15" fill="rgb(221,157,19)" fg:x="144" fg:w="1"/><text x="11.7885%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.5385%" y="549" width="0.0801%" height="15" fill="rgb(237,26,42)" fg:x="144" fg:w="1"/><text x="11.7885%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.5385%" y="533" width="0.0801%" height="15" fill="rgb(220,163,24)" fg:x="144" fg:w="1"/><text x="11.7885%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.5385%" y="517" width="0.0801%" height="15" fill="rgb(242,115,20)" fg:x="144" fg:w="1"/><text x="11.7885%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="11.6186%" y="757" width="0.0801%" height="15" fill="rgb(210,206,9)" fg:x="145" fg:w="1"/><text x="11.8686%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="11.6186%" y="741" width="0.0801%" height="15" fill="rgb(208,71,17)" fg:x="145" fg:w="1"/><text x="11.8686%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="11.6987%" y="725" width="0.0801%" height="15" fill="rgb(233,7,5)" fg:x="146" fg:w="1"/><text x="11.9487%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="11.6987%" y="709" width="0.0801%" height="15" fill="rgb(207,92,33)" fg:x="146" fg:w="1"/><text x="11.9487%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.6987%" y="693" width="0.0801%" height="15" fill="rgb(218,87,9)" fg:x="146" fg:w="1"/><text x="11.9487%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.6987%" y="677" width="0.0801%" height="15" fill="rgb(219,47,37)" fg:x="146" fg:w="1"/><text x="11.9487%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="11.7788%" y="677" width="0.0801%" height="15" fill="rgb(221,152,34)" fg:x="147" fg:w="1"/><text x="12.0288%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="11.7788%" y="661" width="0.0801%" height="15" fill="rgb(235,176,21)" fg:x="147" fg:w="1"/><text x="12.0288%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="11.6186%" y="773" width="0.3205%" height="15" fill="rgb(232,212,21)" fg:x="145" fg:w="4"/><text x="11.8686%" y="783.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="11.6987%" y="757" width="0.2404%" height="15" fill="rgb(245,82,39)" fg:x="146" fg:w="3"/><text x="11.9487%" y="767.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="11.6987%" y="741" width="0.2404%" height="15" fill="rgb(241,52,51)" fg:x="146" fg:w="3"/><text x="11.9487%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="11.7788%" y="725" width="0.1603%" height="15" fill="rgb(219,91,24)" fg:x="147" fg:w="2"/><text x="12.0288%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="11.7788%" y="709" width="0.1603%" height="15" fill="rgb(241,142,12)" fg:x="147" fg:w="2"/><text x="12.0288%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="11.7788%" y="693" width="0.1603%" height="15" fill="rgb(230,27,9)" fg:x="147" fg:w="2"/><text x="12.0288%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.8590%" y="677" width="0.0801%" height="15" fill="rgb(249,181,32)" fg:x="148" fg:w="1"/><text x="12.1090%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.8590%" y="661" width="0.0801%" height="15" fill="rgb(230,107,3)" fg:x="148" fg:w="1"/><text x="12.1090%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.8590%" y="645" width="0.0801%" height="15" fill="rgb(246,204,14)" fg:x="148" fg:w="1"/><text x="12.1090%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.8590%" y="629" width="0.0801%" height="15" fill="rgb(213,192,47)" fg:x="148" fg:w="1"/><text x="12.1090%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="11.8590%" y="613" width="0.0801%" height="15" fill="rgb(240,44,36)" fg:x="148" fg:w="1"/><text x="12.1090%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.8590%" y="597" width="0.0801%" height="15" fill="rgb(244,209,38)" fg:x="148" fg:w="1"/><text x="12.1090%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.8590%" y="581" width="0.0801%" height="15" fill="rgb(219,34,37)" fg:x="148" fg:w="1"/><text x="12.1090%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="11.8590%" y="565" width="0.0801%" height="15" fill="rgb(210,28,6)" fg:x="148" fg:w="1"/><text x="12.1090%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="11.8590%" y="549" width="0.0801%" height="15" fill="rgb(244,110,52)" fg:x="148" fg:w="1"/><text x="12.1090%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="11.9391%" y="725" width="0.0801%" height="15" fill="rgb(254,124,47)" fg:x="149" fg:w="1"/><text x="12.1891%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="11.9391%" y="709" width="0.0801%" height="15" fill="rgb(254,110,13)" fg:x="149" fg:w="1"/><text x="12.1891%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.9391%" y="693" width="0.0801%" height="15" fill="rgb(252,57,21)" fg:x="149" fg:w="1"/><text x="12.1891%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.9391%" y="677" width="0.0801%" height="15" fill="rgb(242,60,45)" fg:x="149" fg:w="1"/><text x="12.1891%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.9391%" y="661" width="0.0801%" height="15" fill="rgb(234,49,30)" fg:x="149" fg:w="1"/><text x="12.1891%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.9391%" y="645" width="0.0801%" height="15" fill="rgb(218,98,6)" fg:x="149" fg:w="1"/><text x="12.1891%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.9391%" y="629" width="0.0801%" height="15" fill="rgb(220,174,29)" fg:x="149" fg:w="1"/><text x="12.1891%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="11.9391%" y="613" width="0.0801%" height="15" fill="rgb(236,163,23)" fg:x="149" fg:w="1"/><text x="12.1891%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.9391%" y="597" width="0.0801%" height="15" fill="rgb(242,114,45)" fg:x="149" fg:w="1"/><text x="12.1891%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.9391%" y="581" width="0.0801%" height="15" fill="rgb(232,10,53)" fg:x="149" fg:w="1"/><text x="12.1891%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.9391%" y="565" width="0.0801%" height="15" fill="rgb(245,108,29)" fg:x="149" fg:w="1"/><text x="12.1891%" y="575.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="11.9391%" y="549" width="0.0801%" height="15" fill="rgb(240,89,53)" fg:x="149" fg:w="1"/><text x="12.1891%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.0192%" y="677" width="0.1603%" height="15" fill="rgb(226,60,45)" fg:x="150" fg:w="2"/><text x="12.2692%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.0994%" y="661" width="0.0801%" height="15" fill="rgb(230,41,44)" fg:x="151" fg:w="1"/><text x="12.3494%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.0994%" y="645" width="0.0801%" height="15" fill="rgb(230,26,20)" fg:x="151" fg:w="1"/><text x="12.3494%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.0994%" y="629" width="0.0801%" height="15" fill="rgb(237,170,32)" fg:x="151" fg:w="1"/><text x="12.3494%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.0994%" y="613" width="0.0801%" height="15" fill="rgb(212,35,42)" fg:x="151" fg:w="1"/><text x="12.3494%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.0994%" y="597" width="0.0801%" height="15" fill="rgb(227,31,34)" fg:x="151" fg:w="1"/><text x="12.3494%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.0994%" y="581" width="0.0801%" height="15" fill="rgb(216,19,18)" fg:x="151" fg:w="1"/><text x="12.3494%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.0994%" y="565" width="0.0801%" height="15" fill="rgb(211,133,42)" fg:x="151" fg:w="1"/><text x="12.3494%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.0994%" y="549" width="0.0801%" height="15" fill="rgb(244,66,13)" fg:x="151" fg:w="1"/><text x="12.3494%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.0994%" y="533" width="0.0801%" height="15" fill="rgb(218,185,50)" fg:x="151" fg:w="1"/><text x="12.3494%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.0994%" y="517" width="0.0801%" height="15" fill="rgb(219,149,13)" fg:x="151" fg:w="1"/><text x="12.3494%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.0994%" y="501" width="0.0801%" height="15" fill="rgb(221,125,0)" fg:x="151" fg:w="1"/><text x="12.3494%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.0994%" y="485" width="0.0801%" height="15" fill="rgb(247,126,27)" fg:x="151" fg:w="1"/><text x="12.3494%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.0994%" y="469" width="0.0801%" height="15" fill="rgb(250,138,30)" fg:x="151" fg:w="1"/><text x="12.3494%" y="479.50"></text></g><g><title>plugins_core::build::Build::leads_to (8 samples, 0.64%)</title><rect x="11.6186%" y="789" width="0.6410%" height="15" fill="rgb(230,151,9)" fg:x="145" fg:w="8"/><text x="11.8686%" y="799.50"></text></g><g><title>plugins_core::tools::leads_to (4 samples, 0.32%)</title><rect x="11.9391%" y="773" width="0.3205%" height="15" fill="rgb(233,80,38)" fg:x="149" fg:w="4"/><text x="12.1891%" y="783.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="11.9391%" y="757" width="0.3205%" height="15" fill="rgb(232,68,43)" fg:x="149" fg:w="4"/><text x="12.1891%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="11.9391%" y="741" width="0.3205%" height="15" fill="rgb(254,5,50)" fg:x="149" fg:w="4"/><text x="12.1891%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="12.0192%" y="725" width="0.2404%" height="15" fill="rgb(225,45,5)" fg:x="150" fg:w="3"/><text x="12.2692%" y="735.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="12.0192%" y="709" width="0.2404%" height="15" fill="rgb(239,22,3)" fg:x="150" fg:w="3"/><text x="12.2692%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="12.0192%" y="693" width="0.2404%" height="15" fill="rgb(243,129,0)" fg:x="150" fg:w="3"/><text x="12.2692%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.1795%" y="677" width="0.0801%" height="15" fill="rgb(223,164,0)" fg:x="152" fg:w="1"/><text x="12.4295%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.1795%" y="661" width="0.0801%" height="15" fill="rgb(221,46,29)" fg:x="152" fg:w="1"/><text x="12.4295%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.1795%" y="645" width="0.0801%" height="15" fill="rgb(205,97,47)" fg:x="152" fg:w="1"/><text x="12.4295%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.1795%" y="629" width="0.0801%" height="15" fill="rgb(249,14,8)" fg:x="152" fg:w="1"/><text x="12.4295%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="12.1795%" y="613" width="0.0801%" height="15" fill="rgb(216,77,3)" fg:x="152" fg:w="1"/><text x="12.4295%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.1795%" y="597" width="0.0801%" height="15" fill="rgb(206,168,54)" fg:x="152" fg:w="1"/><text x="12.4295%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.1795%" y="581" width="0.0801%" height="15" fill="rgb(236,3,41)" fg:x="152" fg:w="1"/><text x="12.4295%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.1795%" y="565" width="0.0801%" height="15" fill="rgb(231,132,24)" fg:x="152" fg:w="1"/><text x="12.4295%" y="575.50"></text></g><g><title>core::iter::adapters::try_process (15 samples, 1.20%)</title><rect x="11.1378%" y="837" width="1.2019%" height="15" fill="rgb(227,221,40)" fg:x="139" fg:w="15"/><text x="11.3878%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 1.20%)</title><rect x="11.1378%" y="821" width="1.2019%" height="15" fill="rgb(233,151,11)" fg:x="139" fg:w="15"/><text x="11.3878%" y="831.50"></text></g><g><title>plugins_core::build::QuickThing::make (15 samples, 1.20%)</title><rect x="11.1378%" y="805" width="1.2019%" height="15" fill="rgb(247,81,35)" fg:x="139" fg:w="15"/><text x="11.3878%" y="815.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="12.2596%" y="789" width="0.0801%" height="15" fill="rgb(243,128,48)" fg:x="153" fg:w="1"/><text x="12.5096%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="12.2596%" y="773" width="0.0801%" height="15" fill="rgb(253,16,10)" fg:x="153" fg:w="1"/><text x="12.5096%" y="783.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="12.2596%" y="757" width="0.0801%" height="15" fill="rgb(228,67,27)" fg:x="153" fg:w="1"/><text x="12.5096%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="12.3397%" y="805" width="0.0801%" height="15" fill="rgb(231,105,25)" fg:x="154" fg:w="1"/><text x="12.5897%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.5000%" y="789" width="0.0801%" height="15" fill="rgb(213,166,47)" fg:x="156" fg:w="1"/><text x="12.7500%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.5000%" y="773" width="0.0801%" height="15" fill="rgb(209,27,10)" fg:x="156" fg:w="1"/><text x="12.7500%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.5000%" y="757" width="0.0801%" height="15" fill="rgb(241,44,30)" fg:x="156" fg:w="1"/><text x="12.7500%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.5000%" y="741" width="0.0801%" height="15" fill="rgb(223,216,15)" fg:x="156" fg:w="1"/><text x="12.7500%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.5000%" y="725" width="0.0801%" height="15" fill="rgb(227,14,7)" fg:x="156" fg:w="1"/><text x="12.7500%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.5000%" y="709" width="0.0801%" height="15" fill="rgb(237,14,5)" fg:x="156" fg:w="1"/><text x="12.7500%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.5000%" y="693" width="0.0801%" height="15" fill="rgb(232,14,36)" fg:x="156" fg:w="1"/><text x="12.7500%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.5000%" y="677" width="0.0801%" height="15" fill="rgb(234,0,38)" fg:x="156" fg:w="1"/><text x="12.7500%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.5000%" y="661" width="0.0801%" height="15" fill="rgb(207,170,14)" fg:x="156" fg:w="1"/><text x="12.7500%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.5000%" y="645" width="0.0801%" height="15" fill="rgb(252,45,13)" fg:x="156" fg:w="1"/><text x="12.7500%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.5000%" y="629" width="0.0801%" height="15" fill="rgb(213,142,7)" fg:x="156" fg:w="1"/><text x="12.7500%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.5000%" y="613" width="0.0801%" height="15" fill="rgb(216,157,23)" fg:x="156" fg:w="1"/><text x="12.7500%" y="623.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="12.4199%" y="805" width="0.2404%" height="15" fill="rgb(212,145,33)" fg:x="155" fg:w="3"/><text x="12.6699%" y="815.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.5801%" y="789" width="0.0801%" height="15" fill="rgb(233,26,13)" fg:x="157" fg:w="1"/><text x="12.8301%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="12.7404%" y="789" width="0.0801%" height="15" fill="rgb(219,196,19)" fg:x="159" fg:w="1"/><text x="12.9904%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="12.7404%" y="773" width="0.0801%" height="15" fill="rgb(246,56,21)" fg:x="159" fg:w="1"/><text x="12.9904%" y="783.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="12.7404%" y="757" width="0.0801%" height="15" fill="rgb(222,28,53)" fg:x="159" fg:w="1"/><text x="12.9904%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="12.9006%" y="773" width="0.0801%" height="15" fill="rgb(224,5,27)" fg:x="161" fg:w="1"/><text x="13.1506%" y="783.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="12.9006%" y="757" width="0.0801%" height="15" fill="rgb(220,153,33)" fg:x="161" fg:w="1"/><text x="13.1506%" y="767.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="12.9006%" y="741" width="0.0801%" height="15" fill="rgb(226,58,19)" fg:x="161" fg:w="1"/><text x="13.1506%" y="751.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="12.9006%" y="725" width="0.0801%" height="15" fill="rgb(239,112,23)" fg:x="161" fg:w="1"/><text x="13.1506%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.9006%" y="709" width="0.0801%" height="15" fill="rgb(251,213,20)" fg:x="161" fg:w="1"/><text x="13.1506%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="12.9808%" y="741" width="0.2404%" height="15" fill="rgb(215,181,21)" fg:x="162" fg:w="3"/><text x="13.2308%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.1410%" y="725" width="0.0801%" height="15" fill="rgb(240,8,35)" fg:x="164" fg:w="1"/><text x="13.3910%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="13.1410%" y="709" width="0.0801%" height="15" fill="rgb(232,203,3)" fg:x="164" fg:w="1"/><text x="13.3910%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="13.1410%" y="693" width="0.0801%" height="15" fill="rgb(214,202,43)" fg:x="164" fg:w="1"/><text x="13.3910%" y="703.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="12.9808%" y="757" width="0.4006%" height="15" fill="rgb(254,35,11)" fg:x="162" fg:w="5"/><text x="13.2308%" y="767.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="13.2212%" y="741" width="0.1603%" height="15" fill="rgb(239,173,13)" fg:x="165" fg:w="2"/><text x="13.4712%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="13.3013%" y="725" width="0.0801%" height="15" fill="rgb(220,141,0)" fg:x="166" fg:w="1"/><text x="13.5513%" y="735.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="13.3814%" y="741" width="0.3205%" height="15" fill="rgb(210,98,12)" fg:x="167" fg:w="4"/><text x="13.6314%" y="751.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="13.4615%" y="725" width="0.2404%" height="15" fill="rgb(254,153,22)" fg:x="168" fg:w="3"/><text x="13.7115%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="13.4615%" y="709" width="0.2404%" height="15" fill="rgb(247,223,17)" fg:x="168" fg:w="3"/><text x="13.7115%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="13.4615%" y="693" width="0.2404%" height="15" fill="rgb(246,56,7)" fg:x="168" fg:w="3"/><text x="13.7115%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.6218%" y="677" width="0.0801%" height="15" fill="rgb(240,226,12)" fg:x="170" fg:w="1"/><text x="13.8718%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.6218%" y="661" width="0.0801%" height="15" fill="rgb(205,87,46)" fg:x="170" fg:w="1"/><text x="13.8718%" y="671.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="13.6218%" y="645" width="0.0801%" height="15" fill="rgb(245,214,51)" fg:x="170" fg:w="1"/><text x="13.8718%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="13.7019%" y="725" width="0.1603%" height="15" fill="rgb(223,172,33)" fg:x="171" fg:w="2"/><text x="13.9519%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.7821%" y="709" width="0.0801%" height="15" fill="rgb(227,203,34)" fg:x="172" fg:w="1"/><text x="14.0321%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="13.7821%" y="693" width="0.0801%" height="15" fill="rgb(248,143,44)" fg:x="172" fg:w="1"/><text x="14.0321%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="13.8622%" y="709" width="0.0801%" height="15" fill="rgb(226,162,5)" fg:x="173" fg:w="1"/><text x="14.1122%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="13.9423%" y="693" width="0.2404%" height="15" fill="rgb(211,143,1)" fg:x="174" fg:w="3"/><text x="14.1923%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="14.0224%" y="677" width="0.1603%" height="15" fill="rgb(224,96,15)" fg:x="175" fg:w="2"/><text x="14.2724%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="14.0224%" y="661" width="0.1603%" height="15" fill="rgb(222,4,38)" fg:x="175" fg:w="2"/><text x="14.2724%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="14.0224%" y="645" width="0.1603%" height="15" fill="rgb(253,228,15)" fg:x="175" fg:w="2"/><text x="14.2724%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="14.1827%" y="677" width="0.1603%" height="15" fill="rgb(242,194,12)" fg:x="177" fg:w="2"/><text x="14.4327%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.2628%" y="661" width="0.0801%" height="15" fill="rgb(214,177,31)" fg:x="178" fg:w="1"/><text x="14.5128%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.2628%" y="645" width="0.0801%" height="15" fill="rgb(226,58,51)" fg:x="178" fg:w="1"/><text x="14.5128%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.2628%" y="629" width="0.0801%" height="15" fill="rgb(250,119,16)" fg:x="178" fg:w="1"/><text x="14.5128%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="13.9423%" y="709" width="0.4808%" height="15" fill="rgb(223,128,53)" fg:x="174" fg:w="6"/><text x="14.1923%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="14.1827%" y="693" width="0.2404%" height="15" fill="rgb(251,199,15)" fg:x="177" fg:w="3"/><text x="14.4327%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.3429%" y="677" width="0.0801%" height="15" fill="rgb(235,168,42)" fg:x="179" fg:w="1"/><text x="14.5929%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.3429%" y="661" width="0.0801%" height="15" fill="rgb(250,210,17)" fg:x="179" fg:w="1"/><text x="14.5929%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.3429%" y="645" width="0.0801%" height="15" fill="rgb(226,36,41)" fg:x="179" fg:w="1"/><text x="14.5929%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="13.8622%" y="725" width="0.7212%" height="15" fill="rgb(225,87,10)" fg:x="173" fg:w="9"/><text x="14.1122%" y="735.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="14.4231%" y="709" width="0.1603%" height="15" fill="rgb(228,83,9)" fg:x="180" fg:w="2"/><text x="14.6731%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.5032%" y="693" width="0.0801%" height="15" fill="rgb(225,16,36)" fg:x="181" fg:w="1"/><text x="14.7532%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.5032%" y="677" width="0.0801%" height="15" fill="rgb(242,198,13)" fg:x="181" fg:w="1"/><text x="14.7532%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="13.7019%" y="741" width="0.9615%" height="15" fill="rgb(239,25,51)" fg:x="171" fg:w="12"/><text x="13.9519%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.5833%" y="725" width="0.0801%" height="15" fill="rgb(239,28,37)" fg:x="182" fg:w="1"/><text x="14.8333%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.5833%" y="709" width="0.0801%" height="15" fill="rgb(234,70,17)" fg:x="182" fg:w="1"/><text x="14.8333%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.5833%" y="693" width="0.0801%" height="15" fill="rgb(231,215,53)" fg:x="182" fg:w="1"/><text x="14.8333%" y="703.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (24 samples, 1.92%)</title><rect x="12.9808%" y="773" width="1.9231%" height="15" fill="rgb(218,140,42)" fg:x="162" fg:w="24"/><text x="13.2308%" y="783.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.52%)</title><rect x="13.3814%" y="757" width="1.5224%" height="15" fill="rgb(233,227,45)" fg:x="167" fg:w="19"/><text x="13.6314%" y="767.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="14.6635%" y="741" width="0.2404%" height="15" fill="rgb(225,189,21)" fg:x="183" fg:w="3"/><text x="14.9135%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="14.6635%" y="725" width="0.2404%" height="15" fill="rgb(237,176,54)" fg:x="183" fg:w="3"/><text x="14.9135%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="14.6635%" y="709" width="0.2404%" height="15" fill="rgb(215,131,46)" fg:x="183" fg:w="3"/><text x="14.9135%" y="719.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="14.9038%" y="741" width="0.1603%" height="15" fill="rgb(218,95,20)" fg:x="186" fg:w="2"/><text x="15.1538%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.1442%" y="725" width="0.0801%" height="15" fill="rgb(208,198,12)" fg:x="189" fg:w="1"/><text x="15.3942%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.2244%" y="725" width="0.0801%" height="15" fill="rgb(239,107,50)" fg:x="190" fg:w="1"/><text x="15.4744%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="14.9038%" y="773" width="0.4808%" height="15" fill="rgb(240,217,37)" fg:x="186" fg:w="6"/><text x="15.1538%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="14.9038%" y="757" width="0.4808%" height="15" fill="rgb(242,197,49)" fg:x="186" fg:w="6"/><text x="15.1538%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="15.0641%" y="741" width="0.3205%" height="15" fill="rgb(219,171,17)" fg:x="188" fg:w="4"/><text x="15.3141%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.3045%" y="725" width="0.0801%" height="15" fill="rgb(209,81,40)" fg:x="191" fg:w="1"/><text x="15.5545%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.3045%" y="709" width="0.0801%" height="15" fill="rgb(237,156,30)" fg:x="191" fg:w="1"/><text x="15.5545%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.3045%" y="693" width="0.0801%" height="15" fill="rgb(212,127,16)" fg:x="191" fg:w="1"/><text x="15.5545%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.3045%" y="677" width="0.0801%" height="15" fill="rgb(226,66,32)" fg:x="191" fg:w="1"/><text x="15.5545%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.4647%" y="741" width="0.0801%" height="15" fill="rgb(245,22,46)" fg:x="193" fg:w="1"/><text x="15.7147%" y="751.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (3 samples, 0.24%)</title><rect x="15.3846%" y="757" width="0.2404%" height="15" fill="rgb(210,112,21)" fg:x="192" fg:w="3"/><text x="15.6346%" y="767.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="15.5449%" y="741" width="0.0801%" height="15" fill="rgb(207,118,39)" fg:x="194" fg:w="1"/><text x="15.7949%" y="751.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="15.5449%" y="725" width="0.0801%" height="15" fill="rgb(205,206,35)" fg:x="194" fg:w="1"/><text x="15.7949%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="15.8654%" y="709" width="0.0801%" height="15" fill="rgb(222,120,2)" fg:x="198" fg:w="1"/><text x="16.1154%" y="719.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (3 samples, 0.24%)</title><rect x="15.7853%" y="725" width="0.2404%" height="15" fill="rgb(205,38,18)" fg:x="197" fg:w="3"/><text x="16.0353%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.9455%" y="709" width="0.0801%" height="15" fill="rgb(226,61,2)" fg:x="199" fg:w="1"/><text x="16.1955%" y="719.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="16.0256%" y="725" width="0.1603%" height="15" fill="rgb(242,161,23)" fg:x="200" fg:w="2"/><text x="16.2756%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="16.0256%" y="709" width="0.1603%" height="15" fill="rgb(213,13,52)" fg:x="200" fg:w="2"/><text x="16.2756%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.1058%" y="693" width="0.0801%" height="15" fill="rgb(246,209,47)" fg:x="201" fg:w="1"/><text x="16.3558%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.2660%" y="677" width="0.0801%" height="15" fill="rgb(214,41,3)" fg:x="203" fg:w="1"/><text x="16.5160%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="16.3462%" y="645" width="0.0801%" height="15" fill="rgb(236,119,38)" fg:x="204" fg:w="1"/><text x="16.5962%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="16.3462%" y="677" width="0.2404%" height="15" fill="rgb(218,50,11)" fg:x="204" fg:w="3"/><text x="16.5962%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="16.3462%" y="661" width="0.2404%" height="15" fill="rgb(228,38,11)" fg:x="204" fg:w="3"/><text x="16.5962%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="16.4263%" y="645" width="0.1603%" height="15" fill="rgb(212,13,9)" fg:x="205" fg:w="2"/><text x="16.6763%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.5064%" y="629" width="0.0801%" height="15" fill="rgb(208,211,9)" fg:x="206" fg:w="1"/><text x="16.7564%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.5064%" y="613" width="0.0801%" height="15" fill="rgb(239,39,32)" fg:x="206" fg:w="1"/><text x="16.7564%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.5064%" y="597" width="0.0801%" height="15" fill="rgb(254,179,26)" fg:x="206" fg:w="1"/><text x="16.7564%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.7468%" y="549" width="0.0801%" height="15" fill="rgb(249,165,28)" fg:x="209" fg:w="1"/><text x="16.9968%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.7468%" y="533" width="0.0801%" height="15" fill="rgb(225,59,50)" fg:x="209" fg:w="1"/><text x="16.9968%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.7468%" y="517" width="0.0801%" height="15" fill="rgb(209,122,5)" fg:x="209" fg:w="1"/><text x="16.9968%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="16.7468%" y="565" width="0.1603%" height="15" fill="rgb(214,65,34)" fg:x="209" fg:w="2"/><text x="16.9968%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="16.8269%" y="549" width="0.0801%" height="15" fill="rgb(249,183,32)" fg:x="210" fg:w="1"/><text x="17.0769%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="16.2660%" y="693" width="0.7212%" height="15" fill="rgb(218,122,24)" fg:x="203" fg:w="9"/><text x="16.5160%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="16.5865%" y="677" width="0.4006%" height="15" fill="rgb(224,109,18)" fg:x="207" fg:w="5"/><text x="16.8365%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="16.6667%" y="661" width="0.3205%" height="15" fill="rgb(210,68,50)" fg:x="208" fg:w="4"/><text x="16.9167%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="16.6667%" y="645" width="0.3205%" height="15" fill="rgb(212,184,34)" fg:x="208" fg:w="4"/><text x="16.9167%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="16.6667%" y="629" width="0.3205%" height="15" fill="rgb(238,105,48)" fg:x="208" fg:w="4"/><text x="16.9167%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="16.6667%" y="613" width="0.3205%" height="15" fill="rgb(222,134,54)" fg:x="208" fg:w="4"/><text x="16.9167%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="16.7468%" y="597" width="0.2404%" height="15" fill="rgb(246,24,43)" fg:x="209" fg:w="3"/><text x="16.9968%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="16.7468%" y="581" width="0.2404%" height="15" fill="rgb(227,169,22)" fg:x="209" fg:w="3"/><text x="16.9968%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.9071%" y="565" width="0.0801%" height="15" fill="rgb(253,152,4)" fg:x="211" fg:w="1"/><text x="17.1571%" y="575.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (56 samples, 4.49%)</title><rect x="12.6603%" y="805" width="4.4872%" height="15" fill="rgb(219,158,36)" fg:x="158" fg:w="56"/><text x="12.9103%" y="815.50">engin..</text></g><g><title>engine::session::SavesEntities::check_for_changes (54 samples, 4.33%)</title><rect x="12.8205%" y="789" width="4.3269%" height="15" fill="rgb(251,128,40)" fg:x="160" fg:w="54"/><text x="13.0705%" y="799.50">engin..</text></g><g><title>kernel::model::any_entity_changes (22 samples, 1.76%)</title><rect x="15.3846%" y="773" width="1.7628%" height="15" fill="rgb(254,101,39)" fg:x="192" fg:w="22"/><text x="15.6346%" y="783.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (19 samples, 1.52%)</title><rect x="15.6250%" y="757" width="1.5224%" height="15" fill="rgb(221,168,40)" fg:x="195" fg:w="19"/><text x="15.8750%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (18 samples, 1.44%)</title><rect x="15.7051%" y="741" width="1.4423%" height="15" fill="rgb(221,14,27)" fg:x="196" fg:w="18"/><text x="15.9551%" y="751.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.96%)</title><rect x="16.1859%" y="725" width="0.9615%" height="15" fill="rgb(207,36,43)" fg:x="202" fg:w="12"/><text x="16.4359%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="16.2660%" y="709" width="0.8814%" height="15" fill="rgb(240,172,53)" fg:x="203" fg:w="11"/><text x="16.5160%" y="719.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="16.9872%" y="693" width="0.1603%" height="15" fill="rgb(241,138,43)" fg:x="212" fg:w="2"/><text x="17.2372%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="17.1474%" y="773" width="0.0801%" height="15" fill="rgb(227,78,19)" fg:x="214" fg:w="1"/><text x="17.3974%" y="783.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="17.1474%" y="757" width="0.0801%" height="15" fill="rgb(215,127,44)" fg:x="214" fg:w="1"/><text x="17.3974%" y="767.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.1474%" y="741" width="0.0801%" height="15" fill="rgb(227,13,10)" fg:x="214" fg:w="1"/><text x="17.3974%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.1474%" y="725" width="0.0801%" height="15" fill="rgb(249,177,6)" fg:x="214" fg:w="1"/><text x="17.3974%" y="735.50"></text></g><g><title>engine::session::Session::flush (62 samples, 4.97%)</title><rect x="12.3397%" y="837" width="4.9679%" height="15" fill="rgb(215,154,26)" fg:x="154" fg:w="62"/><text x="12.5897%" y="847.50">engine..</text></g><g><title>engine::session::Session::save_entity_changes (62 samples, 4.97%)</title><rect x="12.3397%" y="821" width="4.9679%" height="15" fill="rgb(250,168,20)" fg:x="154" fg:w="62"/><text x="12.5897%" y="831.50">engine..</text></g><g><title>engine::session::Session::world (2 samples, 0.16%)</title><rect x="17.1474%" y="805" width="0.1603%" height="15" fill="rgb(222,53,38)" fg:x="214" fg:w="2"/><text x="17.3974%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="17.1474%" y="789" width="0.1603%" height="15" fill="rgb(245,154,5)" fg:x="214" fg:w="2"/><text x="17.3974%" y="799.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="17.2276%" y="773" width="0.0801%" height="15" fill="rgb(214,89,50)" fg:x="215" fg:w="1"/><text x="17.4776%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="17.2276%" y="757" width="0.0801%" height="15" fill="rgb(232,73,14)" fg:x="215" fg:w="1"/><text x="17.4776%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="17.2276%" y="741" width="0.0801%" height="15" fill="rgb(230,101,20)" fg:x="215" fg:w="1"/><text x="17.4776%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.2276%" y="725" width="0.0801%" height="15" fill="rgb(208,56,28)" fg:x="215" fg:w="1"/><text x="17.4776%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="17.2276%" y="709" width="0.0801%" height="15" fill="rgb(247,205,22)" fg:x="215" fg:w="1"/><text x="17.4776%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="17.2276%" y="693" width="0.0801%" height="15" fill="rgb(252,109,51)" fg:x="215" fg:w="1"/><text x="17.4776%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="17.2276%" y="677" width="0.0801%" height="15" fill="rgb(220,40,24)" fg:x="215" fg:w="1"/><text x="17.4776%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.2276%" y="661" width="0.0801%" height="15" fill="rgb(251,108,7)" fg:x="215" fg:w="1"/><text x="17.4776%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.2276%" y="645" width="0.0801%" height="15" fill="rgb(238,102,51)" fg:x="215" fg:w="1"/><text x="17.4776%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.2276%" y="629" width="0.0801%" height="15" fill="rgb(219,149,34)" fg:x="215" fg:w="1"/><text x="17.4776%" y="639.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="17.2276%" y="613" width="0.0801%" height="15" fill="rgb(239,70,0)" fg:x="215" fg:w="1"/><text x="17.4776%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="17.2276%" y="597" width="0.0801%" height="15" fill="rgb(246,214,23)" fg:x="215" fg:w="1"/><text x="17.4776%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="17.2276%" y="581" width="0.0801%" height="15" fill="rgb(239,221,51)" fg:x="215" fg:w="1"/><text x="17.4776%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="17.2276%" y="565" width="0.0801%" height="15" fill="rgb(254,62,14)" fg:x="215" fg:w="1"/><text x="17.4776%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="17.2276%" y="549" width="0.0801%" height="15" fill="rgb(253,57,33)" fg:x="215" fg:w="1"/><text x="17.4776%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="17.2276%" y="533" width="0.0801%" height="15" fill="rgb(229,34,6)" fg:x="215" fg:w="1"/><text x="17.4776%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="17.2276%" y="517" width="0.0801%" height="15" fill="rgb(235,191,23)" fg:x="215" fg:w="1"/><text x="17.4776%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="17.2276%" y="501" width="0.0801%" height="15" fill="rgb(217,207,27)" fg:x="215" fg:w="1"/><text x="17.4776%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="17.2276%" y="485" width="0.0801%" height="15" fill="rgb(232,41,44)" fg:x="215" fg:w="1"/><text x="17.4776%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.2276%" y="469" width="0.0801%" height="15" fill="rgb(221,188,19)" fg:x="215" fg:w="1"/><text x="17.4776%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="17.3878%" y="773" width="0.2404%" height="15" fill="rgb(245,180,45)" fg:x="217" fg:w="3"/><text x="17.6378%" y="783.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="17.3878%" y="757" width="0.2404%" height="15" fill="rgb(250,220,42)" fg:x="217" fg:w="3"/><text x="17.6378%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="17.3878%" y="741" width="0.2404%" height="15" fill="rgb(234,16,34)" fg:x="217" fg:w="3"/><text x="17.6378%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="17.3878%" y="725" width="0.2404%" height="15" fill="rgb(233,217,23)" fg:x="217" fg:w="3"/><text x="17.6378%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.3878%" y="709" width="0.2404%" height="15" fill="rgb(209,22,46)" fg:x="217" fg:w="3"/><text x="17.6378%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.4679%" y="693" width="0.1603%" height="15" fill="rgb(213,101,18)" fg:x="218" fg:w="2"/><text x="17.7179%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.4679%" y="677" width="0.1603%" height="15" fill="rgb(215,179,52)" fg:x="218" fg:w="2"/><text x="17.7179%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="17.4679%" y="661" width="0.1603%" height="15" fill="rgb(223,50,25)" fg:x="218" fg:w="2"/><text x="17.7179%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.4679%" y="645" width="0.1603%" height="15" fill="rgb(224,51,44)" fg:x="218" fg:w="2"/><text x="17.7179%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.4679%" y="629" width="0.1603%" height="15" fill="rgb(224,13,54)" fg:x="218" fg:w="2"/><text x="17.7179%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.4679%" y="613" width="0.1603%" height="15" fill="rgb(219,58,47)" fg:x="218" fg:w="2"/><text x="17.7179%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.5481%" y="597" width="0.0801%" height="15" fill="rgb(246,124,34)" fg:x="219" fg:w="1"/><text x="17.7981%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.5481%" y="581" width="0.0801%" height="15" fill="rgb(245,109,25)" fg:x="219" fg:w="1"/><text x="17.7981%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="17.6282%" y="757" width="0.0801%" height="15" fill="rgb(235,48,23)" fg:x="220" fg:w="1"/><text x="17.8782%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="17.6282%" y="741" width="0.0801%" height="15" fill="rgb(229,203,36)" fg:x="220" fg:w="1"/><text x="17.8782%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.6282%" y="725" width="0.0801%" height="15" fill="rgb(234,180,9)" fg:x="220" fg:w="1"/><text x="17.8782%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.6282%" y="709" width="0.0801%" height="15" fill="rgb(228,98,45)" fg:x="220" fg:w="1"/><text x="17.8782%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.6282%" y="693" width="0.0801%" height="15" fill="rgb(240,24,36)" fg:x="220" fg:w="1"/><text x="17.8782%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.6282%" y="677" width="0.0801%" height="15" fill="rgb(227,154,19)" fg:x="220" fg:w="1"/><text x="17.8782%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.6282%" y="661" width="0.0801%" height="15" fill="rgb(231,2,48)" fg:x="220" fg:w="1"/><text x="17.8782%" y="671.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="17.3878%" y="789" width="0.4006%" height="15" fill="rgb(219,216,0)" fg:x="217" fg:w="5"/><text x="17.6378%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="17.6282%" y="773" width="0.1603%" height="15" fill="rgb(251,88,0)" fg:x="220" fg:w="2"/><text x="17.8782%" y="783.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="17.7083%" y="757" width="0.0801%" height="15" fill="rgb(242,45,45)" fg:x="221" fg:w="1"/><text x="17.9583%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="17.7083%" y="741" width="0.0801%" height="15" fill="rgb(218,149,45)" fg:x="221" fg:w="1"/><text x="17.9583%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="17.7083%" y="725" width="0.0801%" height="15" fill="rgb(247,194,10)" fg:x="221" fg:w="1"/><text x="17.9583%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.7083%" y="709" width="0.0801%" height="15" fill="rgb(234,33,37)" fg:x="221" fg:w="1"/><text x="17.9583%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="17.7083%" y="693" width="0.0801%" height="15" fill="rgb(218,61,13)" fg:x="221" fg:w="1"/><text x="17.9583%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.7083%" y="677" width="0.0801%" height="15" fill="rgb(210,80,52)" fg:x="221" fg:w="1"/><text x="17.9583%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="17.7083%" y="661" width="0.0801%" height="15" fill="rgb(218,203,27)" fg:x="221" fg:w="1"/><text x="17.9583%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="17.7083%" y="645" width="0.0801%" height="15" fill="rgb(209,126,33)" fg:x="221" fg:w="1"/><text x="17.9583%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.7083%" y="629" width="0.0801%" height="15" fill="rgb(234,173,41)" fg:x="221" fg:w="1"/><text x="17.9583%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.7083%" y="613" width="0.0801%" height="15" fill="rgb(228,166,9)" fg:x="221" fg:w="1"/><text x="17.9583%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.7885%" y="725" width="0.0801%" height="15" fill="rgb(208,124,43)" fg:x="222" fg:w="1"/><text x="18.0385%" y="735.50"></text></g><g><title>__libc_malloc (11 samples, 0.88%)</title><rect x="17.8686%" y="725" width="0.8814%" height="15" fill="rgb(212,154,38)" fg:x="223" fg:w="11"/><text x="18.1186%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (19 samples, 1.52%)</title><rect x="17.3077%" y="821" width="1.5224%" height="15" fill="rgb(246,179,35)" fg:x="216" fg:w="19"/><text x="17.5577%" y="831.50"></text></g><g><title>engine::internal::Entities::add_entity (19 samples, 1.52%)</title><rect x="17.3077%" y="805" width="1.5224%" height="15" fill="rgb(251,3,50)" fg:x="216" fg:w="19"/><text x="17.5577%" y="815.50"></text></g><g><title>engine::internal::EntityMap::add_entity (13 samples, 1.04%)</title><rect x="17.7885%" y="789" width="1.0417%" height="15" fill="rgb(219,96,8)" fg:x="222" fg:w="13"/><text x="18.0385%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 1.04%)</title><rect x="17.7885%" y="773" width="1.0417%" height="15" fill="rgb(251,216,33)" fg:x="222" fg:w="13"/><text x="18.0385%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (13 samples, 1.04%)</title><rect x="17.7885%" y="757" width="1.0417%" height="15" fill="rgb(243,145,29)" fg:x="222" fg:w="13"/><text x="18.0385%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13 samples, 1.04%)</title><rect x="17.7885%" y="741" width="1.0417%" height="15" fill="rgb(210,75,20)" fg:x="222" fg:w="13"/><text x="18.0385%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.7500%" y="725" width="0.0801%" height="15" fill="rgb(235,56,8)" fg:x="234" fg:w="1"/><text x="19.0000%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.8301%" y="677" width="0.0801%" height="15" fill="rgb(226,175,49)" fg:x="235" fg:w="1"/><text x="19.0801%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.8301%" y="661" width="0.0801%" height="15" fill="rgb(242,204,23)" fg:x="235" fg:w="1"/><text x="19.0801%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="18.8301%" y="725" width="0.2404%" height="15" fill="rgb(225,104,24)" fg:x="235" fg:w="3"/><text x="19.0801%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="18.8301%" y="709" width="0.2404%" height="15" fill="rgb(253,34,1)" fg:x="235" fg:w="3"/><text x="19.0801%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="18.8301%" y="693" width="0.2404%" height="15" fill="rgb(233,199,23)" fg:x="235" fg:w="3"/><text x="19.0801%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="18.9103%" y="677" width="0.1603%" height="15" fill="rgb(247,7,51)" fg:x="236" fg:w="2"/><text x="19.1603%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="18.9103%" y="661" width="0.1603%" height="15" fill="rgb(214,146,12)" fg:x="236" fg:w="2"/><text x="19.1603%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="18.9103%" y="645" width="0.1603%" height="15" fill="rgb(234,181,43)" fg:x="236" fg:w="2"/><text x="19.1603%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="18.9103%" y="629" width="0.1603%" height="15" fill="rgb(239,148,6)" fg:x="236" fg:w="2"/><text x="19.1603%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="18.9103%" y="613" width="0.1603%" height="15" fill="rgb(206,151,17)" fg:x="236" fg:w="2"/><text x="19.1603%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="18.9103%" y="597" width="0.1603%" height="15" fill="rgb(213,215,10)" fg:x="236" fg:w="2"/><text x="19.1603%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="18.9103%" y="581" width="0.1603%" height="15" fill="rgb(215,220,44)" fg:x="236" fg:w="2"/><text x="19.1603%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="18.9103%" y="565" width="0.1603%" height="15" fill="rgb(245,205,37)" fg:x="236" fg:w="2"/><text x="19.1603%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="18.9103%" y="549" width="0.1603%" height="15" fill="rgb(245,130,43)" fg:x="236" fg:w="2"/><text x="19.1603%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="18.9103%" y="533" width="0.1603%" height="15" fill="rgb(231,227,38)" fg:x="236" fg:w="2"/><text x="19.1603%" y="543.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="18.9103%" y="517" width="0.1603%" height="15" fill="rgb(233,185,4)" fg:x="236" fg:w="2"/><text x="19.1603%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="18.9103%" y="501" width="0.1603%" height="15" fill="rgb(224,154,43)" fg:x="236" fg:w="2"/><text x="19.1603%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.0705%" y="597" width="0.0801%" height="15" fill="rgb(235,156,15)" fg:x="238" fg:w="1"/><text x="19.3205%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.0705%" y="581" width="0.0801%" height="15" fill="rgb(211,55,43)" fg:x="238" fg:w="1"/><text x="19.3205%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="18.8301%" y="805" width="0.4006%" height="15" fill="rgb(247,149,40)" fg:x="235" fg:w="5"/><text x="19.0801%" y="815.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.40%)</title><rect x="18.8301%" y="789" width="0.4006%" height="15" fill="rgb(232,171,16)" fg:x="235" fg:w="5"/><text x="19.0801%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="18.8301%" y="773" width="0.4006%" height="15" fill="rgb(215,117,49)" fg:x="235" fg:w="5"/><text x="19.0801%" y="783.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="18.8301%" y="757" width="0.4006%" height="15" fill="rgb(246,194,11)" fg:x="235" fg:w="5"/><text x="19.0801%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="18.8301%" y="741" width="0.4006%" height="15" fill="rgb(242,101,44)" fg:x="235" fg:w="5"/><text x="19.0801%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="19.0705%" y="725" width="0.1603%" height="15" fill="rgb(226,174,6)" fg:x="238" fg:w="2"/><text x="19.3205%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.0705%" y="709" width="0.1603%" height="15" fill="rgb(213,150,20)" fg:x="238" fg:w="2"/><text x="19.3205%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="19.0705%" y="693" width="0.1603%" height="15" fill="rgb(222,124,42)" fg:x="238" fg:w="2"/><text x="19.3205%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.0705%" y="677" width="0.1603%" height="15" fill="rgb(250,19,47)" fg:x="238" fg:w="2"/><text x="19.3205%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="19.0705%" y="661" width="0.1603%" height="15" fill="rgb(241,217,19)" fg:x="238" fg:w="2"/><text x="19.3205%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.0705%" y="645" width="0.1603%" height="15" fill="rgb(207,210,34)" fg:x="238" fg:w="2"/><text x="19.3205%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="19.0705%" y="629" width="0.1603%" height="15" fill="rgb(244,45,4)" fg:x="238" fg:w="2"/><text x="19.3205%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.0705%" y="613" width="0.1603%" height="15" fill="rgb(252,134,50)" fg:x="238" fg:w="2"/><text x="19.3205%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.1506%" y="597" width="0.0801%" height="15" fill="rgb(238,74,2)" fg:x="239" fg:w="1"/><text x="19.4006%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="19.2308%" y="805" width="0.0801%" height="15" fill="rgb(226,58,46)" fg:x="240" fg:w="1"/><text x="19.4808%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.3109%" y="789" width="0.0801%" height="15" fill="rgb(232,83,35)" fg:x="241" fg:w="1"/><text x="19.5609%" y="799.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="19.3109%" y="773" width="0.0801%" height="15" fill="rgb(212,148,47)" fg:x="241" fg:w="1"/><text x="19.5609%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="19.3109%" y="757" width="0.0801%" height="15" fill="rgb(235,29,1)" fg:x="241" fg:w="1"/><text x="19.5609%" y="767.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="19.3910%" y="725" width="0.0801%" height="15" fill="rgb(247,55,37)" fg:x="242" fg:w="1"/><text x="19.6410%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="19.3910%" y="709" width="0.0801%" height="15" fill="rgb(222,48,3)" fg:x="242" fg:w="1"/><text x="19.6410%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="19.3109%" y="805" width="0.2404%" height="15" fill="rgb(234,21,33)" fg:x="241" fg:w="3"/><text x="19.5609%" y="815.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="19.3910%" y="789" width="0.1603%" height="15" fill="rgb(247,178,53)" fg:x="242" fg:w="2"/><text x="19.6410%" y="799.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="19.3910%" y="773" width="0.1603%" height="15" fill="rgb(225,75,7)" fg:x="242" fg:w="2"/><text x="19.6410%" y="783.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="19.3910%" y="757" width="0.1603%" height="15" fill="rgb(219,199,7)" fg:x="242" fg:w="2"/><text x="19.6410%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="19.3910%" y="741" width="0.1603%" height="15" fill="rgb(209,93,42)" fg:x="242" fg:w="2"/><text x="19.6410%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.4712%" y="725" width="0.0801%" height="15" fill="rgb(240,175,17)" fg:x="243" fg:w="1"/><text x="19.7212%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.5513%" y="709" width="0.0801%" height="15" fill="rgb(232,106,7)" fg:x="244" fg:w="1"/><text x="19.8013%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.5513%" y="693" width="0.0801%" height="15" fill="rgb(242,106,43)" fg:x="244" fg:w="1"/><text x="19.8013%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.5513%" y="677" width="0.0801%" height="15" fill="rgb(242,61,37)" fg:x="244" fg:w="1"/><text x="19.8013%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.5513%" y="661" width="0.0801%" height="15" fill="rgb(205,72,10)" fg:x="244" fg:w="1"/><text x="19.8013%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.5513%" y="645" width="0.0801%" height="15" fill="rgb(214,184,36)" fg:x="244" fg:w="1"/><text x="19.8013%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.5513%" y="629" width="0.0801%" height="15" fill="rgb(206,107,18)" fg:x="244" fg:w="1"/><text x="19.8013%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.5513%" y="613" width="0.0801%" height="15" fill="rgb(210,75,5)" fg:x="244" fg:w="1"/><text x="19.8013%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.5513%" y="597" width="0.0801%" height="15" fill="rgb(205,3,19)" fg:x="244" fg:w="1"/><text x="19.8013%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.5513%" y="581" width="0.0801%" height="15" fill="rgb(207,181,42)" fg:x="244" fg:w="1"/><text x="19.8013%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="19.5513%" y="565" width="0.0801%" height="15" fill="rgb(229,179,43)" fg:x="244" fg:w="1"/><text x="19.8013%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="19.5513%" y="549" width="0.0801%" height="15" fill="rgb(246,95,30)" fg:x="244" fg:w="1"/><text x="19.8013%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.6314%" y="677" width="0.0801%" height="15" fill="rgb(234,144,45)" fg:x="245" fg:w="1"/><text x="19.8814%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="19.5513%" y="757" width="0.2404%" height="15" fill="rgb(250,54,25)" fg:x="244" fg:w="3"/><text x="19.8013%" y="767.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="19.5513%" y="741" width="0.2404%" height="15" fill="rgb(215,195,40)" fg:x="244" fg:w="3"/><text x="19.8013%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="19.5513%" y="725" width="0.2404%" height="15" fill="rgb(233,188,42)" fg:x="244" fg:w="3"/><text x="19.8013%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="19.6314%" y="709" width="0.1603%" height="15" fill="rgb(247,227,35)" fg:x="245" fg:w="2"/><text x="19.8814%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="19.6314%" y="693" width="0.1603%" height="15" fill="rgb(249,124,27)" fg:x="245" fg:w="2"/><text x="19.8814%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.7115%" y="677" width="0.0801%" height="15" fill="rgb(219,207,25)" fg:x="246" fg:w="1"/><text x="19.9615%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.7115%" y="661" width="0.0801%" height="15" fill="rgb(241,216,47)" fg:x="246" fg:w="1"/><text x="19.9615%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.7115%" y="645" width="0.0801%" height="15" fill="rgb(233,82,50)" fg:x="246" fg:w="1"/><text x="19.9615%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.7115%" y="629" width="0.0801%" height="15" fill="rgb(232,63,2)" fg:x="246" fg:w="1"/><text x="19.9615%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.8718%" y="645" width="0.0801%" height="15" fill="rgb(236,184,28)" fg:x="248" fg:w="1"/><text x="20.1218%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.8718%" y="629" width="0.0801%" height="15" fill="rgb(254,63,27)" fg:x="248" fg:w="1"/><text x="20.1218%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.8718%" y="709" width="0.1603%" height="15" fill="rgb(253,106,28)" fg:x="248" fg:w="2"/><text x="20.1218%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.8718%" y="693" width="0.1603%" height="15" fill="rgb(225,141,39)" fg:x="248" fg:w="2"/><text x="20.1218%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.8718%" y="677" width="0.1603%" height="15" fill="rgb(222,157,20)" fg:x="248" fg:w="2"/><text x="20.1218%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.8718%" y="661" width="0.1603%" height="15" fill="rgb(210,190,9)" fg:x="248" fg:w="2"/><text x="20.1218%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.9519%" y="645" width="0.0801%" height="15" fill="rgb(242,167,7)" fg:x="249" fg:w="1"/><text x="20.2019%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="20.0321%" y="709" width="0.1603%" height="15" fill="rgb(227,82,41)" fg:x="250" fg:w="2"/><text x="20.2821%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="20.0321%" y="693" width="0.1603%" height="15" fill="rgb(222,131,13)" fg:x="250" fg:w="2"/><text x="20.2821%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.1122%" y="677" width="0.0801%" height="15" fill="rgb(221,98,26)" fg:x="251" fg:w="1"/><text x="20.3622%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.1122%" y="661" width="0.0801%" height="15" fill="rgb(251,63,52)" fg:x="251" fg:w="1"/><text x="20.3622%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.2724%" y="581" width="0.0801%" height="15" fill="rgb(246,25,43)" fg:x="253" fg:w="1"/><text x="20.5224%" y="591.50"></text></g><g><title>plugins_core::build::Build::holding (39 samples, 3.12%)</title><rect x="17.3077%" y="837" width="3.1250%" height="15" fill="rgb(247,167,15)" fg:x="216" fg:w="39"/><text x="17.5577%" y="847.50">plu..</text></g><g><title>plugins_core::tools::set_container (20 samples, 1.60%)</title><rect x="18.8301%" y="821" width="1.6026%" height="15" fill="rgb(240,104,42)" fg:x="235" fg:w="20"/><text x="19.0801%" y="831.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (11 samples, 0.88%)</title><rect x="19.5513%" y="805" width="0.8814%" height="15" fill="rgb(224,54,6)" fg:x="244" fg:w="11"/><text x="19.8013%" y="815.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (11 samples, 0.88%)</title><rect x="19.5513%" y="789" width="0.8814%" height="15" fill="rgb(244,108,35)" fg:x="244" fg:w="11"/><text x="19.8013%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (11 samples, 0.88%)</title><rect x="19.5513%" y="773" width="0.8814%" height="15" fill="rgb(216,154,2)" fg:x="244" fg:w="11"/><text x="19.8013%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (8 samples, 0.64%)</title><rect x="19.7917%" y="757" width="0.6410%" height="15" fill="rgb(222,8,47)" fg:x="247" fg:w="8"/><text x="20.0417%" y="767.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.64%)</title><rect x="19.7917%" y="741" width="0.6410%" height="15" fill="rgb(252,93,1)" fg:x="247" fg:w="8"/><text x="20.0417%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="19.8718%" y="725" width="0.5609%" height="15" fill="rgb(223,226,51)" fg:x="248" fg:w="7"/><text x="20.1218%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="20.1923%" y="709" width="0.2404%" height="15" fill="rgb(206,147,9)" fg:x="252" fg:w="3"/><text x="20.4423%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="20.1923%" y="693" width="0.2404%" height="15" fill="rgb(248,180,41)" fg:x="252" fg:w="3"/><text x="20.4423%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="20.1923%" y="677" width="0.2404%" height="15" fill="rgb(209,47,50)" fg:x="252" fg:w="3"/><text x="20.4423%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="20.1923%" y="661" width="0.2404%" height="15" fill="rgb(243,65,31)" fg:x="252" fg:w="3"/><text x="20.4423%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="20.1923%" y="645" width="0.2404%" height="15" fill="rgb(228,128,1)" fg:x="252" fg:w="3"/><text x="20.4423%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="20.1923%" y="629" width="0.2404%" height="15" fill="rgb(231,192,16)" fg:x="252" fg:w="3"/><text x="20.4423%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="20.1923%" y="613" width="0.2404%" height="15" fill="rgb(224,26,40)" fg:x="252" fg:w="3"/><text x="20.4423%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="20.1923%" y="597" width="0.2404%" height="15" fill="rgb(214,192,17)" fg:x="252" fg:w="3"/><text x="20.4423%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.3526%" y="581" width="0.0801%" height="15" fill="rgb(225,147,18)" fg:x="254" fg:w="1"/><text x="20.6026%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.3526%" y="565" width="0.0801%" height="15" fill="rgb(205,35,11)" fg:x="254" fg:w="1"/><text x="20.6026%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="20.3526%" y="549" width="0.0801%" height="15" fill="rgb(242,40,42)" fg:x="254" fg:w="1"/><text x="20.6026%" y="559.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="20.3526%" y="533" width="0.0801%" height="15" fill="rgb(250,170,13)" fg:x="254" fg:w="1"/><text x="20.6026%" y="543.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="20.3526%" y="517" width="0.0801%" height="15" fill="rgb(240,161,28)" fg:x="254" fg:w="1"/><text x="20.6026%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.5128%" y="725" width="0.0801%" height="15" fill="rgb(245,179,12)" fg:x="256" fg:w="1"/><text x="20.7628%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.5929%" y="725" width="0.0801%" height="15" fill="rgb(250,92,32)" fg:x="257" fg:w="1"/><text x="20.8429%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="20.5929%" y="709" width="0.0801%" height="15" fill="rgb(233,10,40)" fg:x="257" fg:w="1"/><text x="20.8429%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.5929%" y="693" width="0.0801%" height="15" fill="rgb(217,98,1)" fg:x="257" fg:w="1"/><text x="20.8429%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.5929%" y="677" width="0.0801%" height="15" fill="rgb(238,202,7)" fg:x="257" fg:w="1"/><text x="20.8429%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.5929%" y="661" width="0.0801%" height="15" fill="rgb(222,91,3)" fg:x="257" fg:w="1"/><text x="20.8429%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.5929%" y="645" width="0.0801%" height="15" fill="rgb(211,170,49)" fg:x="257" fg:w="1"/><text x="20.8429%" y="655.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="20.5128%" y="789" width="0.3205%" height="15" fill="rgb(253,139,18)" fg:x="256" fg:w="4"/><text x="20.7628%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="20.5128%" y="773" width="0.3205%" height="15" fill="rgb(222,4,43)" fg:x="256" fg:w="4"/><text x="20.7628%" y="783.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="20.5128%" y="757" width="0.3205%" height="15" fill="rgb(207,205,12)" fg:x="256" fg:w="4"/><text x="20.7628%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="20.5128%" y="741" width="0.3205%" height="15" fill="rgb(216,159,46)" fg:x="256" fg:w="4"/><text x="20.7628%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.6731%" y="725" width="0.1603%" height="15" fill="rgb(236,115,1)" fg:x="258" fg:w="2"/><text x="20.9231%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.6731%" y="709" width="0.1603%" height="15" fill="rgb(251,35,33)" fg:x="258" fg:w="2"/><text x="20.9231%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.7532%" y="693" width="0.0801%" height="15" fill="rgb(248,62,51)" fg:x="259" fg:w="1"/><text x="21.0032%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.7532%" y="677" width="0.0801%" height="15" fill="rgb(254,180,19)" fg:x="259" fg:w="1"/><text x="21.0032%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="20.7532%" y="661" width="0.0801%" height="15" fill="rgb(217,100,32)" fg:x="259" fg:w="1"/><text x="21.0032%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.7532%" y="645" width="0.0801%" height="15" fill="rgb(224,71,22)" fg:x="259" fg:w="1"/><text x="21.0032%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.7532%" y="629" width="0.0801%" height="15" fill="rgb(251,185,33)" fg:x="259" fg:w="1"/><text x="21.0032%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.7532%" y="613" width="0.0801%" height="15" fill="rgb(209,75,48)" fg:x="259" fg:w="1"/><text x="21.0032%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.7532%" y="597" width="0.0801%" height="15" fill="rgb(253,190,16)" fg:x="259" fg:w="1"/><text x="21.0032%" y="607.50"></text></g><g><title>plugins_core::build::Build::into_entry (6 samples, 0.48%)</title><rect x="20.4327%" y="837" width="0.4808%" height="15" fill="rgb(226,140,1)" fg:x="255" fg:w="6"/><text x="20.6827%" y="847.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="20.4327%" y="821" width="0.4808%" height="15" fill="rgb(206,75,30)" fg:x="255" fg:w="6"/><text x="20.6827%" y="831.50"></text></g><g><title>engine::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="20.4327%" y="805" width="0.4808%" height="15" fill="rgb(231,208,37)" fg:x="255" fg:w="6"/><text x="20.6827%" y="815.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.8333%" y="789" width="0.0801%" height="15" fill="rgb(238,136,40)" fg:x="260" fg:w="1"/><text x="21.0833%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.8333%" y="773" width="0.0801%" height="15" fill="rgb(247,137,17)" fg:x="260" fg:w="1"/><text x="21.0833%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.8333%" y="757" width="0.0801%" height="15" fill="rgb(240,60,40)" fg:x="260" fg:w="1"/><text x="21.0833%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.8333%" y="741" width="0.0801%" height="15" fill="rgb(236,68,50)" fg:x="260" fg:w="1"/><text x="21.0833%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.8333%" y="725" width="0.0801%" height="15" fill="rgb(230,42,12)" fg:x="260" fg:w="1"/><text x="21.0833%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.8333%" y="709" width="0.0801%" height="15" fill="rgb(219,16,16)" fg:x="260" fg:w="1"/><text x="21.0833%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.8333%" y="693" width="0.0801%" height="15" fill="rgb(220,38,35)" fg:x="260" fg:w="1"/><text x="21.0833%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.8333%" y="677" width="0.0801%" height="15" fill="rgb(228,33,1)" fg:x="260" fg:w="1"/><text x="21.0833%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.8333%" y="661" width="0.0801%" height="15" fill="rgb(241,46,31)" fg:x="260" fg:w="1"/><text x="21.0833%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.8333%" y="645" width="0.0801%" height="15" fill="rgb(232,58,20)" fg:x="260" fg:w="1"/><text x="21.0833%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.8333%" y="629" width="0.0801%" height="15" fill="rgb(206,228,53)" fg:x="260" fg:w="1"/><text x="21.0833%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.8333%" y="613" width="0.0801%" height="15" fill="rgb(206,88,33)" fg:x="260" fg:w="1"/><text x="21.0833%" y="623.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="20.9135%" y="837" width="0.0801%" height="15" fill="rgb(238,69,7)" fg:x="261" fg:w="1"/><text x="21.1635%" y="847.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="20.9135%" y="821" width="0.0801%" height="15" fill="rgb(250,21,46)" fg:x="261" fg:w="1"/><text x="21.1635%" y="831.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="20.9135%" y="805" width="0.0801%" height="15" fill="rgb(215,212,21)" fg:x="261" fg:w="1"/><text x="21.1635%" y="815.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="20.9135%" y="789" width="0.0801%" height="15" fill="rgb(211,35,12)" fg:x="261" fg:w="1"/><text x="21.1635%" y="799.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="20.9135%" y="773" width="0.0801%" height="15" fill="rgb(231,184,16)" fg:x="261" fg:w="1"/><text x="21.1635%" y="783.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.9135%" y="757" width="0.0801%" height="15" fill="rgb(242,140,15)" fg:x="261" fg:w="1"/><text x="21.1635%" y="767.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="20.9135%" y="741" width="0.0801%" height="15" fill="rgb(220,37,14)" fg:x="261" fg:w="1"/><text x="21.1635%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.9135%" y="725" width="0.0801%" height="15" fill="rgb(223,146,22)" fg:x="261" fg:w="1"/><text x="21.1635%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="20.9135%" y="709" width="0.0801%" height="15" fill="rgb(216,132,15)" fg:x="261" fg:w="1"/><text x="21.1635%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.9135%" y="693" width="0.0801%" height="15" fill="rgb(248,83,5)" fg:x="261" fg:w="1"/><text x="21.1635%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.9936%" y="725" width="0.0801%" height="15" fill="rgb(231,206,48)" fg:x="262" fg:w="1"/><text x="21.2436%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.9936%" y="709" width="0.0801%" height="15" fill="rgb(253,185,37)" fg:x="262" fg:w="1"/><text x="21.2436%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.9936%" y="693" width="0.0801%" height="15" fill="rgb(208,21,44)" fg:x="262" fg:w="1"/><text x="21.2436%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.9936%" y="677" width="0.0801%" height="15" fill="rgb(236,125,4)" fg:x="262" fg:w="1"/><text x="21.2436%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.9936%" y="661" width="0.0801%" height="15" fill="rgb(226,134,25)" fg:x="262" fg:w="1"/><text x="21.2436%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="20.9936%" y="773" width="0.1603%" height="15" fill="rgb(250,201,12)" fg:x="262" fg:w="2"/><text x="21.2436%" y="783.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="20.9936%" y="757" width="0.1603%" height="15" fill="rgb(225,92,18)" fg:x="262" fg:w="2"/><text x="21.2436%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="20.9936%" y="741" width="0.1603%" height="15" fill="rgb(227,35,22)" fg:x="262" fg:w="2"/><text x="21.2436%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.0737%" y="725" width="0.0801%" height="15" fill="rgb(214,180,52)" fg:x="263" fg:w="1"/><text x="21.3237%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.0737%" y="709" width="0.0801%" height="15" fill="rgb(233,55,38)" fg:x="263" fg:w="1"/><text x="21.3237%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.0737%" y="693" width="0.0801%" height="15" fill="rgb(249,171,43)" fg:x="263" fg:w="1"/><text x="21.3237%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.0737%" y="677" width="0.0801%" height="15" fill="rgb(239,87,2)" fg:x="263" fg:w="1"/><text x="21.3237%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="21.0737%" y="661" width="0.0801%" height="15" fill="rgb(248,141,5)" fg:x="263" fg:w="1"/><text x="21.3237%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.0737%" y="645" width="0.0801%" height="15" fill="rgb(238,33,42)" fg:x="263" fg:w="1"/><text x="21.3237%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.0737%" y="629" width="0.0801%" height="15" fill="rgb(231,57,19)" fg:x="263" fg:w="1"/><text x="21.3237%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.0737%" y="613" width="0.0801%" height="15" fill="rgb(214,78,53)" fg:x="263" fg:w="1"/><text x="21.3237%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.0737%" y="597" width="0.0801%" height="15" fill="rgb(206,132,29)" fg:x="263" fg:w="1"/><text x="21.3237%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.1538%" y="725" width="0.0801%" height="15" fill="rgb(248,174,31)" fg:x="264" fg:w="1"/><text x="21.4038%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="21.1538%" y="709" width="0.0801%" height="15" fill="rgb(221,87,13)" fg:x="264" fg:w="1"/><text x="21.4038%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.1538%" y="693" width="0.0801%" height="15" fill="rgb(223,197,17)" fg:x="264" fg:w="1"/><text x="21.4038%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.1538%" y="677" width="0.0801%" height="15" fill="rgb(220,144,50)" fg:x="264" fg:w="1"/><text x="21.4038%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="20.9936%" y="821" width="0.3205%" height="15" fill="rgb(244,201,11)" fg:x="262" fg:w="4"/><text x="21.2436%" y="831.50"></text></g><g><title>engine::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="20.9936%" y="805" width="0.3205%" height="15" fill="rgb(249,81,34)" fg:x="262" fg:w="4"/><text x="21.2436%" y="815.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="20.9936%" y="789" width="0.3205%" height="15" fill="rgb(205,161,12)" fg:x="262" fg:w="4"/><text x="21.2436%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="21.1538%" y="773" width="0.1603%" height="15" fill="rgb(252,139,50)" fg:x="264" fg:w="2"/><text x="21.4038%" y="783.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="21.1538%" y="757" width="0.1603%" height="15" fill="rgb(205,169,14)" fg:x="264" fg:w="2"/><text x="21.4038%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="21.1538%" y="741" width="0.1603%" height="15" fill="rgb(248,198,33)" fg:x="264" fg:w="2"/><text x="21.4038%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="21.2340%" y="725" width="0.0801%" height="15" fill="rgb(236,23,21)" fg:x="265" fg:w="1"/><text x="21.4840%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.2340%" y="709" width="0.0801%" height="15" fill="rgb(231,13,38)" fg:x="265" fg:w="1"/><text x="21.4840%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="21.2340%" y="693" width="0.0801%" height="15" fill="rgb(239,139,21)" fg:x="265" fg:w="1"/><text x="21.4840%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.2340%" y="677" width="0.0801%" height="15" fill="rgb(222,164,45)" fg:x="265" fg:w="1"/><text x="21.4840%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="21.2340%" y="661" width="0.0801%" height="15" fill="rgb(230,52,27)" fg:x="265" fg:w="1"/><text x="21.4840%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="21.2340%" y="645" width="0.0801%" height="15" fill="rgb(227,143,42)" fg:x="265" fg:w="1"/><text x="21.4840%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="21.2340%" y="629" width="0.0801%" height="15" fill="rgb(249,127,1)" fg:x="265" fg:w="1"/><text x="21.4840%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.2340%" y="613" width="0.0801%" height="15" fill="rgb(243,107,26)" fg:x="265" fg:w="1"/><text x="21.4840%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="21.3141%" y="805" width="0.0801%" height="15" fill="rgb(225,7,45)" fg:x="266" fg:w="1"/><text x="21.5641%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="21.3141%" y="789" width="0.0801%" height="15" fill="rgb(241,88,38)" fg:x="266" fg:w="1"/><text x="21.5641%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.3141%" y="773" width="0.0801%" height="15" fill="rgb(226,121,9)" fg:x="266" fg:w="1"/><text x="21.5641%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.3942%" y="725" width="0.1603%" height="15" fill="rgb(253,60,29)" fg:x="267" fg:w="2"/><text x="21.6442%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.3942%" y="709" width="0.1603%" height="15" fill="rgb(244,181,39)" fg:x="267" fg:w="2"/><text x="21.6442%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.3942%" y="693" width="0.1603%" height="15" fill="rgb(252,203,31)" fg:x="267" fg:w="2"/><text x="21.6442%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.4744%" y="677" width="0.0801%" height="15" fill="rgb(224,120,8)" fg:x="268" fg:w="1"/><text x="21.7244%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.4744%" y="661" width="0.0801%" height="15" fill="rgb(205,171,54)" fg:x="268" fg:w="1"/><text x="21.7244%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.4744%" y="645" width="0.0801%" height="15" fill="rgb(235,89,11)" fg:x="268" fg:w="1"/><text x="21.7244%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.5545%" y="725" width="0.0801%" height="15" fill="rgb(212,180,28)" fg:x="269" fg:w="1"/><text x="21.8045%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="21.5545%" y="709" width="0.0801%" height="15" fill="rgb(247,84,49)" fg:x="269" fg:w="1"/><text x="21.8045%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.5545%" y="693" width="0.0801%" height="15" fill="rgb(236,187,52)" fg:x="269" fg:w="1"/><text x="21.8045%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.5545%" y="677" width="0.0801%" height="15" fill="rgb(227,24,15)" fg:x="269" fg:w="1"/><text x="21.8045%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.5545%" y="661" width="0.0801%" height="15" fill="rgb(227,211,13)" fg:x="269" fg:w="1"/><text x="21.8045%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.5545%" y="645" width="0.0801%" height="15" fill="rgb(245,52,14)" fg:x="269" fg:w="1"/><text x="21.8045%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.6346%" y="629" width="0.0801%" height="15" fill="rgb(225,185,13)" fg:x="270" fg:w="1"/><text x="21.8846%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="21.6346%" y="613" width="0.0801%" height="15" fill="rgb(217,160,29)" fg:x="270" fg:w="1"/><text x="21.8846%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="21.6346%" y="597" width="0.0801%" height="15" fill="rgb(216,115,53)" fg:x="270" fg:w="1"/><text x="21.8846%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="21.3942%" y="773" width="0.4006%" height="15" fill="rgb(236,99,5)" fg:x="267" fg:w="5"/><text x="21.6442%" y="783.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="21.3942%" y="757" width="0.4006%" height="15" fill="rgb(222,60,38)" fg:x="267" fg:w="5"/><text x="21.6442%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="21.3942%" y="741" width="0.4006%" height="15" fill="rgb(212,82,22)" fg:x="267" fg:w="5"/><text x="21.6442%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.6346%" y="725" width="0.1603%" height="15" fill="rgb(214,48,28)" fg:x="270" fg:w="2"/><text x="21.8846%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.6346%" y="709" width="0.1603%" height="15" fill="rgb(245,196,50)" fg:x="270" fg:w="2"/><text x="21.8846%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.6346%" y="693" width="0.1603%" height="15" fill="rgb(225,159,46)" fg:x="270" fg:w="2"/><text x="21.8846%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.6346%" y="677" width="0.1603%" height="15" fill="rgb(207,195,48)" fg:x="270" fg:w="2"/><text x="21.8846%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="21.6346%" y="661" width="0.1603%" height="15" fill="rgb(240,73,3)" fg:x="270" fg:w="2"/><text x="21.8846%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.6346%" y="645" width="0.1603%" height="15" fill="rgb(245,57,23)" fg:x="270" fg:w="2"/><text x="21.8846%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.7147%" y="629" width="0.0801%" height="15" fill="rgb(240,75,18)" fg:x="271" fg:w="1"/><text x="21.9647%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.7147%" y="613" width="0.0801%" height="15" fill="rgb(238,168,12)" fg:x="271" fg:w="1"/><text x="21.9647%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.7949%" y="725" width="0.0801%" height="15" fill="rgb(226,20,40)" fg:x="272" fg:w="1"/><text x="22.0449%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.7949%" y="709" width="0.0801%" height="15" fill="rgb(224,130,35)" fg:x="272" fg:w="1"/><text x="22.0449%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.7949%" y="693" width="0.0801%" height="15" fill="rgb(225,63,41)" fg:x="272" fg:w="1"/><text x="22.0449%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.7949%" y="677" width="0.0801%" height="15" fill="rgb(219,3,3)" fg:x="272" fg:w="1"/><text x="22.0449%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.7949%" y="661" width="0.0801%" height="15" fill="rgb(218,157,4)" fg:x="272" fg:w="1"/><text x="22.0449%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.8750%" y="725" width="0.0801%" height="15" fill="rgb(232,76,36)" fg:x="273" fg:w="1"/><text x="22.1250%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="21.8750%" y="709" width="0.0801%" height="15" fill="rgb(247,36,0)" fg:x="273" fg:w="1"/><text x="22.1250%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.8750%" y="693" width="0.0801%" height="15" fill="rgb(205,2,34)" fg:x="273" fg:w="1"/><text x="22.1250%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.8750%" y="677" width="0.0801%" height="15" fill="rgb(239,136,13)" fg:x="273" fg:w="1"/><text x="22.1250%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.8750%" y="661" width="0.0801%" height="15" fill="rgb(253,122,12)" fg:x="273" fg:w="1"/><text x="22.1250%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.9551%" y="629" width="0.0801%" height="15" fill="rgb(222,174,7)" fg:x="274" fg:w="1"/><text x="22.2051%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.72%)</title><rect x="21.3942%" y="805" width="0.7212%" height="15" fill="rgb(208,191,42)" fg:x="267" fg:w="9"/><text x="21.6442%" y="815.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (9 samples, 0.72%)</title><rect x="21.3942%" y="789" width="0.7212%" height="15" fill="rgb(237,212,15)" fg:x="267" fg:w="9"/><text x="21.6442%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="21.7949%" y="773" width="0.3205%" height="15" fill="rgb(215,65,20)" fg:x="272" fg:w="4"/><text x="22.0449%" y="783.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="21.7949%" y="757" width="0.3205%" height="15" fill="rgb(232,103,11)" fg:x="272" fg:w="4"/><text x="22.0449%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="21.7949%" y="741" width="0.3205%" height="15" fill="rgb(235,148,18)" fg:x="272" fg:w="4"/><text x="22.0449%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.9551%" y="725" width="0.1603%" height="15" fill="rgb(240,173,7)" fg:x="274" fg:w="2"/><text x="22.2051%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.9551%" y="709" width="0.1603%" height="15" fill="rgb(228,182,25)" fg:x="274" fg:w="2"/><text x="22.2051%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.9551%" y="693" width="0.1603%" height="15" fill="rgb(247,3,52)" fg:x="274" fg:w="2"/><text x="22.2051%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.9551%" y="677" width="0.1603%" height="15" fill="rgb(226,155,8)" fg:x="274" fg:w="2"/><text x="22.2051%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="21.9551%" y="661" width="0.1603%" height="15" fill="rgb(243,195,38)" fg:x="274" fg:w="2"/><text x="22.2051%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.9551%" y="645" width="0.1603%" height="15" fill="rgb(254,181,33)" fg:x="274" fg:w="2"/><text x="22.2051%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.0353%" y="629" width="0.0801%" height="15" fill="rgb(232,98,23)" fg:x="275" fg:w="1"/><text x="22.2853%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.0353%" y="613" width="0.0801%" height="15" fill="rgb(205,23,10)" fg:x="275" fg:w="1"/><text x="22.2853%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.0353%" y="597" width="0.0801%" height="15" fill="rgb(212,124,38)" fg:x="275" fg:w="1"/><text x="22.2853%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.0353%" y="581" width="0.0801%" height="15" fill="rgb(228,207,2)" fg:x="275" fg:w="1"/><text x="22.2853%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="22.1154%" y="805" width="0.0801%" height="15" fill="rgb(215,120,22)" fg:x="276" fg:w="1"/><text x="22.3654%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.1154%" y="789" width="0.0801%" height="15" fill="rgb(251,172,33)" fg:x="276" fg:w="1"/><text x="22.3654%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="22.3558%" y="757" width="0.1603%" height="15" fill="rgb(250,83,2)" fg:x="279" fg:w="2"/><text x="22.6058%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="22.4359%" y="741" width="0.0801%" height="15" fill="rgb(210,132,53)" fg:x="280" fg:w="1"/><text x="22.6859%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="22.4359%" y="725" width="0.0801%" height="15" fill="rgb(221,208,36)" fg:x="280" fg:w="1"/><text x="22.6859%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.4359%" y="709" width="0.0801%" height="15" fill="rgb(205,192,46)" fg:x="280" fg:w="1"/><text x="22.6859%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.4359%" y="693" width="0.0801%" height="15" fill="rgb(223,163,14)" fg:x="280" fg:w="1"/><text x="22.6859%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.4359%" y="677" width="0.0801%" height="15" fill="rgb(218,41,28)" fg:x="280" fg:w="1"/><text x="22.6859%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.4359%" y="661" width="0.0801%" height="15" fill="rgb(235,104,10)" fg:x="280" fg:w="1"/><text x="22.6859%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.4359%" y="645" width="0.0801%" height="15" fill="rgb(246,17,4)" fg:x="280" fg:w="1"/><text x="22.6859%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.4359%" y="629" width="0.0801%" height="15" fill="rgb(240,7,16)" fg:x="280" fg:w="1"/><text x="22.6859%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.4359%" y="613" width="0.0801%" height="15" fill="rgb(213,160,23)" fg:x="280" fg:w="1"/><text x="22.6859%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.4359%" y="597" width="0.0801%" height="15" fill="rgb(251,179,49)" fg:x="280" fg:w="1"/><text x="22.6859%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="22.4359%" y="581" width="0.0801%" height="15" fill="rgb(247,198,10)" fg:x="280" fg:w="1"/><text x="22.6859%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.5160%" y="709" width="0.0801%" height="15" fill="rgb(220,65,29)" fg:x="281" fg:w="1"/><text x="22.7660%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.5160%" y="693" width="0.0801%" height="15" fill="rgb(237,171,28)" fg:x="281" fg:w="1"/><text x="22.7660%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.5160%" y="677" width="0.0801%" height="15" fill="rgb(228,44,26)" fg:x="281" fg:w="1"/><text x="22.7660%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.5160%" y="661" width="0.0801%" height="15" fill="rgb(216,210,27)" fg:x="281" fg:w="1"/><text x="22.7660%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.5160%" y="645" width="0.0801%" height="15" fill="rgb(252,10,17)" fg:x="281" fg:w="1"/><text x="22.7660%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.5160%" y="629" width="0.0801%" height="15" fill="rgb(214,172,30)" fg:x="281" fg:w="1"/><text x="22.7660%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.5160%" y="613" width="0.0801%" height="15" fill="rgb(253,130,48)" fg:x="281" fg:w="1"/><text x="22.7660%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.5160%" y="597" width="0.0801%" height="15" fill="rgb(226,99,43)" fg:x="281" fg:w="1"/><text x="22.7660%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.5160%" y="581" width="0.0801%" height="15" fill="rgb(239,111,26)" fg:x="281" fg:w="1"/><text x="22.7660%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.5160%" y="565" width="0.0801%" height="15" fill="rgb(240,27,53)" fg:x="281" fg:w="1"/><text x="22.7660%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.5160%" y="549" width="0.0801%" height="15" fill="rgb(254,163,12)" fg:x="281" fg:w="1"/><text x="22.7660%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.5160%" y="533" width="0.0801%" height="15" fill="rgb(225,51,48)" fg:x="281" fg:w="1"/><text x="22.7660%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.5160%" y="517" width="0.0801%" height="15" fill="rgb(205,19,32)" fg:x="281" fg:w="1"/><text x="22.7660%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.5160%" y="501" width="0.0801%" height="15" fill="rgb(218,119,26)" fg:x="281" fg:w="1"/><text x="22.7660%" y="511.50"></text></g><g><title>plugins_core::build::Build::occupying (21 samples, 1.68%)</title><rect x="20.9936%" y="837" width="1.6827%" height="15" fill="rgb(231,173,33)" fg:x="262" fg:w="21"/><text x="21.2436%" y="847.50"></text></g><g><title>plugins_core::tools::set_occupying (17 samples, 1.36%)</title><rect x="21.3141%" y="821" width="1.3622%" height="15" fill="rgb(241,100,29)" fg:x="266" fg:w="17"/><text x="21.5641%" y="831.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (6 samples, 0.48%)</title><rect x="22.1955%" y="805" width="0.4808%" height="15" fill="rgb(250,194,34)" fg:x="277" fg:w="6"/><text x="22.4455%" y="815.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="22.3558%" y="789" width="0.3205%" height="15" fill="rgb(215,23,50)" fg:x="279" fg:w="4"/><text x="22.6058%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="22.3558%" y="773" width="0.3205%" height="15" fill="rgb(206,49,37)" fg:x="279" fg:w="4"/><text x="22.6058%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="22.5160%" y="757" width="0.1603%" height="15" fill="rgb(247,39,21)" fg:x="281" fg:w="2"/><text x="22.7660%" y="767.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="22.5160%" y="741" width="0.1603%" height="15" fill="rgb(209,220,15)" fg:x="281" fg:w="2"/><text x="22.7660%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="22.5160%" y="725" width="0.1603%" height="15" fill="rgb(206,41,33)" fg:x="281" fg:w="2"/><text x="22.7660%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.5962%" y="709" width="0.0801%" height="15" fill="rgb(221,225,45)" fg:x="282" fg:w="1"/><text x="22.8462%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.5962%" y="693" width="0.0801%" height="15" fill="rgb(216,27,18)" fg:x="282" fg:w="1"/><text x="22.8462%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.5962%" y="677" width="0.0801%" height="15" fill="rgb(250,193,34)" fg:x="282" fg:w="1"/><text x="22.8462%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.5962%" y="661" width="0.0801%" height="15" fill="rgb(227,215,20)" fg:x="282" fg:w="1"/><text x="22.8462%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.5962%" y="645" width="0.0801%" height="15" fill="rgb(242,211,27)" fg:x="282" fg:w="1"/><text x="22.8462%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.5962%" y="629" width="0.0801%" height="15" fill="rgb(229,190,30)" fg:x="282" fg:w="1"/><text x="22.8462%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.5962%" y="613" width="0.0801%" height="15" fill="rgb(253,31,29)" fg:x="282" fg:w="1"/><text x="22.8462%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.5962%" y="597" width="0.0801%" height="15" fill="rgb(229,177,52)" fg:x="282" fg:w="1"/><text x="22.8462%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.5962%" y="581" width="0.0801%" height="15" fill="rgb(226,88,8)" fg:x="282" fg:w="1"/><text x="22.8462%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="22.6763%" y="773" width="0.0801%" height="15" fill="rgb(214,55,27)" fg:x="283" fg:w="1"/><text x="22.9263%" y="783.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="22.6763%" y="757" width="0.0801%" height="15" fill="rgb(233,202,5)" fg:x="283" fg:w="1"/><text x="22.9263%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="22.6763%" y="741" width="0.0801%" height="15" fill="rgb(251,49,30)" fg:x="283" fg:w="1"/><text x="22.9263%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.6763%" y="725" width="0.0801%" height="15" fill="rgb(235,18,52)" fg:x="283" fg:w="1"/><text x="22.9263%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.6763%" y="709" width="0.0801%" height="15" fill="rgb(250,111,51)" fg:x="283" fg:w="1"/><text x="22.9263%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.6763%" y="693" width="0.0801%" height="15" fill="rgb(218,13,25)" fg:x="283" fg:w="1"/><text x="22.9263%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.6763%" y="677" width="0.0801%" height="15" fill="rgb(248,96,7)" fg:x="283" fg:w="1"/><text x="22.9263%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.6763%" y="661" width="0.0801%" height="15" fill="rgb(217,31,15)" fg:x="283" fg:w="1"/><text x="22.9263%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.6763%" y="645" width="0.0801%" height="15" fill="rgb(228,59,49)" fg:x="283" fg:w="1"/><text x="22.9263%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="22.6763%" y="629" width="0.0801%" height="15" fill="rgb(210,152,38)" fg:x="283" fg:w="1"/><text x="22.9263%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="22.7564%" y="757" width="0.0801%" height="15" fill="rgb(206,71,11)" fg:x="284" fg:w="1"/><text x="23.0064%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="22.7564%" y="741" width="0.0801%" height="15" fill="rgb(244,199,5)" fg:x="284" fg:w="1"/><text x="23.0064%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.7564%" y="725" width="0.0801%" height="15" fill="rgb(253,49,1)" fg:x="284" fg:w="1"/><text x="23.0064%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.7564%" y="709" width="0.0801%" height="15" fill="rgb(225,206,40)" fg:x="284" fg:w="1"/><text x="23.0064%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.7564%" y="693" width="0.0801%" height="15" fill="rgb(243,116,47)" fg:x="284" fg:w="1"/><text x="23.0064%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.7564%" y="677" width="0.0801%" height="15" fill="rgb(219,225,16)" fg:x="284" fg:w="1"/><text x="23.0064%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.7564%" y="661" width="0.0801%" height="15" fill="rgb(233,29,47)" fg:x="284" fg:w="1"/><text x="23.0064%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.7564%" y="645" width="0.0801%" height="15" fill="rgb(250,179,18)" fg:x="284" fg:w="1"/><text x="23.0064%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="22.7564%" y="629" width="0.0801%" height="15" fill="rgb(215,176,6)" fg:x="284" fg:w="1"/><text x="23.0064%" y="639.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="22.6763%" y="789" width="0.2404%" height="15" fill="rgb(214,117,39)" fg:x="283" fg:w="3"/><text x="22.9263%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="22.7564%" y="773" width="0.1603%" height="15" fill="rgb(247,183,36)" fg:x="284" fg:w="2"/><text x="23.0064%" y="783.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="22.8365%" y="757" width="0.0801%" height="15" fill="rgb(237,200,3)" fg:x="285" fg:w="1"/><text x="23.0865%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="22.8365%" y="741" width="0.0801%" height="15" fill="rgb(212,220,24)" fg:x="285" fg:w="1"/><text x="23.0865%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.8365%" y="725" width="0.0801%" height="15" fill="rgb(245,216,20)" fg:x="285" fg:w="1"/><text x="23.0865%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="22.8365%" y="709" width="0.0801%" height="15" fill="rgb(219,124,7)" fg:x="285" fg:w="1"/><text x="23.0865%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.8365%" y="693" width="0.0801%" height="15" fill="rgb(227,167,8)" fg:x="285" fg:w="1"/><text x="23.0865%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.8365%" y="677" width="0.0801%" height="15" fill="rgb(241,37,2)" fg:x="285" fg:w="1"/><text x="23.0865%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.9167%" y="773" width="0.0801%" height="15" fill="rgb(238,134,33)" fg:x="286" fg:w="1"/><text x="23.1667%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.9167%" y="757" width="0.0801%" height="15" fill="rgb(248,48,27)" fg:x="286" fg:w="1"/><text x="23.1667%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.9167%" y="741" width="0.0801%" height="15" fill="rgb(212,14,16)" fg:x="286" fg:w="1"/><text x="23.1667%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.9167%" y="725" width="0.0801%" height="15" fill="rgb(217,205,37)" fg:x="286" fg:w="1"/><text x="23.1667%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.9167%" y="709" width="0.0801%" height="15" fill="rgb(233,185,47)" fg:x="286" fg:w="1"/><text x="23.1667%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="22.9167%" y="693" width="0.0801%" height="15" fill="rgb(244,88,8)" fg:x="286" fg:w="1"/><text x="23.1667%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="22.9167%" y="677" width="0.0801%" height="15" fill="rgb(213,0,20)" fg:x="286" fg:w="1"/><text x="23.1667%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="22.6763%" y="821" width="0.4006%" height="15" fill="rgb(238,159,36)" fg:x="283" fg:w="5"/><text x="22.9263%" y="831.50"></text></g><g><title>engine::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="22.6763%" y="805" width="0.4006%" height="15" fill="rgb(253,173,17)" fg:x="283" fg:w="5"/><text x="22.9263%" y="815.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="22.9167%" y="789" width="0.1603%" height="15" fill="rgb(221,23,28)" fg:x="286" fg:w="2"/><text x="23.1667%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.9968%" y="773" width="0.0801%" height="15" fill="rgb(218,113,15)" fg:x="287" fg:w="1"/><text x="23.2468%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="22.9968%" y="757" width="0.0801%" height="15" fill="rgb(233,58,3)" fg:x="287" fg:w="1"/><text x="23.2468%" y="767.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (151 samples, 12.10%)</title><rect x="11.0577%" y="853" width="12.0994%" height="15" fill="rgb(250,46,35)" fg:x="138" fg:w="151"/><text x="11.3077%" y="863.50">plugins_core::buil..</text></g><g><title>plugins_core::build::Build::with_username (6 samples, 0.48%)</title><rect x="22.6763%" y="837" width="0.4808%" height="15" fill="rgb(210,169,11)" fg:x="283" fg:w="6"/><text x="22.9263%" y="847.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="23.0769%" y="821" width="0.0801%" height="15" fill="rgb(246,88,19)" fg:x="288" fg:w="1"/><text x="23.3269%" y="831.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="23.0769%" y="805" width="0.0801%" height="15" fill="rgb(206,81,49)" fg:x="288" fg:w="1"/><text x="23.3269%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.0769%" y="789" width="0.0801%" height="15" fill="rgb(232,144,18)" fg:x="288" fg:w="1"/><text x="23.3269%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.0769%" y="773" width="0.0801%" height="15" fill="rgb(235,2,27)" fg:x="288" fg:w="1"/><text x="23.3269%" y="783.50"></text></g><g><title>plugins_core::build::BuildSurroundings::hands (1 samples, 0.08%)</title><rect x="23.1571%" y="853" width="0.0801%" height="15" fill="rgb(239,157,39)" fg:x="289" fg:w="1"/><text x="23.4071%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="23.1571%" y="837" width="0.0801%" height="15" fill="rgb(220,11,17)" fg:x="289" fg:w="1"/><text x="23.4071%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="23.1571%" y="821" width="0.0801%" height="15" fill="rgb(243,94,50)" fg:x="289" fg:w="1"/><text x="23.4071%" y="831.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.1571%" y="805" width="0.0801%" height="15" fill="rgb(218,22,0)" fg:x="289" fg:w="1"/><text x="23.4071%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="23.2372%" y="789" width="0.0801%" height="15" fill="rgb(249,70,21)" fg:x="290" fg:w="1"/><text x="23.4872%" y="799.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="23.2372%" y="773" width="0.0801%" height="15" fill="rgb(245,111,46)" fg:x="290" fg:w="1"/><text x="23.4872%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="23.2372%" y="757" width="0.0801%" height="15" fill="rgb(244,183,12)" fg:x="290" fg:w="1"/><text x="23.4872%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="23.2372%" y="805" width="0.1603%" height="15" fill="rgb(207,117,0)" fg:x="290" fg:w="2"/><text x="23.4872%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="23.3173%" y="789" width="0.0801%" height="15" fill="rgb(206,20,43)" fg:x="291" fg:w="1"/><text x="23.5673%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="23.3173%" y="773" width="0.0801%" height="15" fill="rgb(221,104,11)" fg:x="291" fg:w="1"/><text x="23.5673%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="23.3173%" y="757" width="0.0801%" height="15" fill="rgb(254,36,50)" fg:x="291" fg:w="1"/><text x="23.5673%" y="767.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.3173%" y="741" width="0.0801%" height="15" fill="rgb(252,17,15)" fg:x="291" fg:w="1"/><text x="23.5673%" y="751.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.3173%" y="725" width="0.0801%" height="15" fill="rgb(219,129,43)" fg:x="291" fg:w="1"/><text x="23.5673%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="23.3173%" y="709" width="0.0801%" height="15" fill="rgb(205,34,45)" fg:x="291" fg:w="1"/><text x="23.5673%" y="719.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="23.3173%" y="693" width="0.0801%" height="15" fill="rgb(251,201,32)" fg:x="291" fg:w="1"/><text x="23.5673%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="23.3173%" y="677" width="0.0801%" height="15" fill="rgb(205,56,0)" fg:x="291" fg:w="1"/><text x="23.5673%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.4776%" y="725" width="0.0801%" height="15" fill="rgb(211,193,27)" fg:x="293" fg:w="1"/><text x="23.7276%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.4776%" y="709" width="0.0801%" height="15" fill="rgb(231,100,42)" fg:x="293" fg:w="1"/><text x="23.7276%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="23.4776%" y="773" width="0.1603%" height="15" fill="rgb(245,85,27)" fg:x="293" fg:w="2"/><text x="23.7276%" y="783.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="23.4776%" y="757" width="0.1603%" height="15" fill="rgb(241,76,24)" fg:x="293" fg:w="2"/><text x="23.7276%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="23.4776%" y="741" width="0.1603%" height="15" fill="rgb(249,157,15)" fg:x="293" fg:w="2"/><text x="23.7276%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.5577%" y="725" width="0.0801%" height="15" fill="rgb(222,218,25)" fg:x="294" fg:w="1"/><text x="23.8077%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.5577%" y="709" width="0.0801%" height="15" fill="rgb(252,156,52)" fg:x="294" fg:w="1"/><text x="23.8077%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.5577%" y="693" width="0.0801%" height="15" fill="rgb(211,185,7)" fg:x="294" fg:w="1"/><text x="23.8077%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.5577%" y="677" width="0.0801%" height="15" fill="rgb(234,108,24)" fg:x="294" fg:w="1"/><text x="23.8077%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="23.5577%" y="661" width="0.0801%" height="15" fill="rgb(227,218,2)" fg:x="294" fg:w="1"/><text x="23.8077%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.5577%" y="645" width="0.0801%" height="15" fill="rgb(224,0,36)" fg:x="294" fg:w="1"/><text x="23.8077%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.5577%" y="629" width="0.0801%" height="15" fill="rgb(233,201,10)" fg:x="294" fg:w="1"/><text x="23.8077%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.5577%" y="613" width="0.0801%" height="15" fill="rgb(252,209,14)" fg:x="294" fg:w="1"/><text x="23.8077%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.5577%" y="597" width="0.0801%" height="15" fill="rgb(205,93,49)" fg:x="294" fg:w="1"/><text x="23.8077%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6378%" y="709" width="0.0801%" height="15" fill="rgb(234,116,45)" fg:x="295" fg:w="1"/><text x="23.8878%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6378%" y="693" width="0.0801%" height="15" fill="rgb(248,89,35)" fg:x="295" fg:w="1"/><text x="23.8878%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6378%" y="677" width="0.0801%" height="15" fill="rgb(233,167,45)" fg:x="295" fg:w="1"/><text x="23.8878%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.6378%" y="661" width="0.0801%" height="15" fill="rgb(248,228,14)" fg:x="295" fg:w="1"/><text x="23.8878%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.6378%" y="645" width="0.0801%" height="15" fill="rgb(246,91,14)" fg:x="295" fg:w="1"/><text x="23.8878%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.6378%" y="629" width="0.0801%" height="15" fill="rgb(227,142,5)" fg:x="295" fg:w="1"/><text x="23.8878%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.6378%" y="613" width="0.0801%" height="15" fill="rgb(221,63,33)" fg:x="295" fg:w="1"/><text x="23.8878%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.6378%" y="597" width="0.0801%" height="15" fill="rgb(233,49,0)" fg:x="295" fg:w="1"/><text x="23.8878%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.6378%" y="581" width="0.0801%" height="15" fill="rgb(251,115,38)" fg:x="295" fg:w="1"/><text x="23.8878%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.6378%" y="565" width="0.0801%" height="15" fill="rgb(231,214,32)" fg:x="295" fg:w="1"/><text x="23.8878%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.6378%" y="549" width="0.0801%" height="15" fill="rgb(248,73,46)" fg:x="295" fg:w="1"/><text x="23.8878%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.6378%" y="533" width="0.0801%" height="15" fill="rgb(237,156,4)" fg:x="295" fg:w="1"/><text x="23.8878%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.6378%" y="517" width="0.0801%" height="15" fill="rgb(227,132,2)" fg:x="295" fg:w="1"/><text x="23.8878%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.6378%" y="501" width="0.0801%" height="15" fill="rgb(248,161,9)" fg:x="295" fg:w="1"/><text x="23.8878%" y="511.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="23.6378%" y="485" width="0.0801%" height="15" fill="rgb(238,77,38)" fg:x="295" fg:w="1"/><text x="23.8878%" y="495.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="23.6378%" y="757" width="0.1603%" height="15" fill="rgb(222,166,40)" fg:x="295" fg:w="2"/><text x="23.8878%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="23.6378%" y="741" width="0.1603%" height="15" fill="rgb(214,168,45)" fg:x="295" fg:w="2"/><text x="23.8878%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.6378%" y="725" width="0.1603%" height="15" fill="rgb(226,64,37)" fg:x="295" fg:w="2"/><text x="23.8878%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.7179%" y="709" width="0.0801%" height="15" fill="rgb(232,210,43)" fg:x="296" fg:w="1"/><text x="23.9679%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.7179%" y="693" width="0.0801%" height="15" fill="rgb(214,76,33)" fg:x="296" fg:w="1"/><text x="23.9679%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.7179%" y="677" width="0.0801%" height="15" fill="rgb(210,78,5)" fg:x="296" fg:w="1"/><text x="23.9679%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.7179%" y="661" width="0.0801%" height="15" fill="rgb(211,107,37)" fg:x="296" fg:w="1"/><text x="23.9679%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.7179%" y="645" width="0.0801%" height="15" fill="rgb(249,67,16)" fg:x="296" fg:w="1"/><text x="23.9679%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.7179%" y="629" width="0.0801%" height="15" fill="rgb(222,114,31)" fg:x="296" fg:w="1"/><text x="23.9679%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.7179%" y="613" width="0.0801%" height="15" fill="rgb(242,118,19)" fg:x="296" fg:w="1"/><text x="23.9679%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.7179%" y="597" width="0.0801%" height="15" fill="rgb(223,115,1)" fg:x="296" fg:w="1"/><text x="23.9679%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.7179%" y="581" width="0.0801%" height="15" fill="rgb(241,182,54)" fg:x="296" fg:w="1"/><text x="23.9679%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.7179%" y="565" width="0.0801%" height="15" fill="rgb(244,166,36)" fg:x="296" fg:w="1"/><text x="23.9679%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.7179%" y="549" width="0.0801%" height="15" fill="rgb(241,52,43)" fg:x="296" fg:w="1"/><text x="23.9679%" y="559.50"></text></g><g><title>engine::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="23.3974%" y="805" width="0.4808%" height="15" fill="rgb(236,82,9)" fg:x="292" fg:w="6"/><text x="23.6474%" y="815.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="23.3974%" y="789" width="0.4808%" height="15" fill="rgb(241,119,0)" fg:x="292" fg:w="6"/><text x="23.6474%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="23.6378%" y="773" width="0.2404%" height="15" fill="rgb(221,19,22)" fg:x="295" fg:w="3"/><text x="23.8878%" y="783.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="23.7981%" y="757" width="0.0801%" height="15" fill="rgb(254,144,35)" fg:x="297" fg:w="1"/><text x="24.0481%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="23.7981%" y="741" width="0.0801%" height="15" fill="rgb(246,132,30)" fg:x="297" fg:w="1"/><text x="24.0481%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.7981%" y="725" width="0.0801%" height="15" fill="rgb(234,69,28)" fg:x="297" fg:w="1"/><text x="24.0481%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.7981%" y="709" width="0.0801%" height="15" fill="rgb(219,106,47)" fg:x="297" fg:w="1"/><text x="24.0481%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="23.2372%" y="821" width="0.7212%" height="15" fill="rgb(218,79,24)" fg:x="290" fg:w="9"/><text x="23.4872%" y="831.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="23.8782%" y="805" width="0.0801%" height="15" fill="rgb(225,26,21)" fg:x="298" fg:w="1"/><text x="24.1282%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.8782%" y="789" width="0.0801%" height="15" fill="rgb(217,68,49)" fg:x="298" fg:w="1"/><text x="24.1282%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.8782%" y="773" width="0.0801%" height="15" fill="rgb(220,204,28)" fg:x="298" fg:w="1"/><text x="24.1282%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.8782%" y="757" width="0.0801%" height="15" fill="rgb(237,208,43)" fg:x="298" fg:w="1"/><text x="24.1282%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.8782%" y="741" width="0.0801%" height="15" fill="rgb(213,97,42)" fg:x="298" fg:w="1"/><text x="24.1282%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.8782%" y="725" width="0.0801%" height="15" fill="rgb(238,96,52)" fg:x="298" fg:w="1"/><text x="24.1282%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="23.8782%" y="709" width="0.0801%" height="15" fill="rgb(228,14,13)" fg:x="298" fg:w="1"/><text x="24.1282%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="23.8782%" y="693" width="0.0801%" height="15" fill="rgb(219,123,13)" fg:x="298" fg:w="1"/><text x="24.1282%" y="703.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="24.1186%" y="805" width="0.0801%" height="15" fill="rgb(216,144,17)" fg:x="301" fg:w="1"/><text x="24.3686%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="24.1186%" y="789" width="0.0801%" height="15" fill="rgb(230,228,29)" fg:x="301" fg:w="1"/><text x="24.3686%" y="799.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="24.1186%" y="773" width="0.0801%" height="15" fill="rgb(233,18,5)" fg:x="301" fg:w="1"/><text x="24.3686%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="24.1186%" y="757" width="0.0801%" height="15" fill="rgb(233,197,12)" fg:x="301" fg:w="1"/><text x="24.3686%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="24.1186%" y="741" width="0.0801%" height="15" fill="rgb(234,140,29)" fg:x="301" fg:w="1"/><text x="24.3686%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="24.1186%" y="725" width="0.0801%" height="15" fill="rgb(233,113,19)" fg:x="301" fg:w="1"/><text x="24.3686%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="24.1186%" y="709" width="0.0801%" height="15" fill="rgb(246,209,13)" fg:x="301" fg:w="1"/><text x="24.3686%" y="719.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="24.1186%" y="693" width="0.0801%" height="15" fill="rgb(242,79,54)" fg:x="301" fg:w="1"/><text x="24.3686%" y="703.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="24.1186%" y="677" width="0.0801%" height="15" fill="rgb(219,73,16)" fg:x="301" fg:w="1"/><text x="24.3686%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.1186%" y="661" width="0.0801%" height="15" fill="rgb(224,52,10)" fg:x="301" fg:w="1"/><text x="24.3686%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.1186%" y="645" width="0.0801%" height="15" fill="rgb(237,179,5)" fg:x="301" fg:w="1"/><text x="24.3686%" y="655.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="24.1186%" y="629" width="0.0801%" height="15" fill="rgb(231,20,6)" fg:x="301" fg:w="1"/><text x="24.3686%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="24.1186%" y="613" width="0.0801%" height="15" fill="rgb(253,171,45)" fg:x="301" fg:w="1"/><text x="24.3686%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="24.1186%" y="597" width="0.0801%" height="15" fill="rgb(230,75,49)" fg:x="301" fg:w="1"/><text x="24.3686%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="24.1186%" y="581" width="0.0801%" height="15" fill="rgb(216,83,46)" fg:x="301" fg:w="1"/><text x="24.3686%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="24.1186%" y="565" width="0.0801%" height="15" fill="rgb(236,56,9)" fg:x="301" fg:w="1"/><text x="24.3686%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (4 samples, 0.32%)</title><rect x="23.9583%" y="821" width="0.3205%" height="15" fill="rgb(215,28,34)" fg:x="299" fg:w="4"/><text x="24.2083%" y="831.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="24.1987%" y="805" width="0.0801%" height="15" fill="rgb(230,222,20)" fg:x="302" fg:w="1"/><text x="24.4487%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="24.1987%" y="789" width="0.0801%" height="15" fill="rgb(235,209,51)" fg:x="302" fg:w="1"/><text x="24.4487%" y="799.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="24.1987%" y="773" width="0.0801%" height="15" fill="rgb(235,167,1)" fg:x="302" fg:w="1"/><text x="24.4487%" y="783.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="24.2788%" y="789" width="0.0801%" height="15" fill="rgb(248,220,0)" fg:x="303" fg:w="1"/><text x="24.5288%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.2788%" y="773" width="0.0801%" height="15" fill="rgb(239,0,18)" fg:x="303" fg:w="1"/><text x="24.5288%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.2788%" y="757" width="0.0801%" height="15" fill="rgb(229,179,11)" fg:x="303" fg:w="1"/><text x="24.5288%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="24.2788%" y="741" width="0.0801%" height="15" fill="rgb(226,116,53)" fg:x="303" fg:w="1"/><text x="24.5288%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.3590%" y="757" width="0.0801%" height="15" fill="rgb(218,1,49)" fg:x="304" fg:w="1"/><text x="24.6090%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.3590%" y="741" width="0.0801%" height="15" fill="rgb(208,184,47)" fg:x="304" fg:w="1"/><text x="24.6090%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="24.3590%" y="725" width="0.0801%" height="15" fill="rgb(238,174,3)" fg:x="304" fg:w="1"/><text x="24.6090%" y="735.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="24.3590%" y="709" width="0.0801%" height="15" fill="rgb(247,188,6)" fg:x="304" fg:w="1"/><text x="24.6090%" y="719.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="24.3590%" y="693" width="0.0801%" height="15" fill="rgb(211,165,46)" fg:x="304" fg:w="1"/><text x="24.6090%" y="703.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (245 samples, 19.63%)</title><rect x="4.8878%" y="869" width="19.6314%" height="15" fill="rgb(222,190,10)" fg:x="61" fg:w="245"/><text x="5.1378%" y="879.50">&lt;tests::HoldingKeyInVessel as t..</text></g><g><title>plugins_core::build::BuildSurroundings::make (16 samples, 1.28%)</title><rect x="23.2372%" y="853" width="1.2821%" height="15" fill="rgb(206,185,3)" fg:x="290" fg:w="16"/><text x="23.4872%" y="863.50"></text></g><g><title>plugins_core::build::QuickThing::make (16 samples, 1.28%)</title><rect x="23.2372%" y="837" width="1.2821%" height="15" fill="rgb(244,125,37)" fg:x="290" fg:w="16"/><text x="23.4872%" y="847.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="24.2788%" y="821" width="0.2404%" height="15" fill="rgb(211,43,7)" fg:x="303" fg:w="3"/><text x="24.5288%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="24.2788%" y="805" width="0.2404%" height="15" fill="rgb(250,41,42)" fg:x="303" fg:w="3"/><text x="24.5288%" y="815.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="24.3590%" y="789" width="0.1603%" height="15" fill="rgb(254,54,42)" fg:x="304" fg:w="2"/><text x="24.6090%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="24.3590%" y="773" width="0.1603%" height="15" fill="rgb(213,71,43)" fg:x="304" fg:w="2"/><text x="24.6090%" y="783.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="24.4391%" y="757" width="0.0801%" height="15" fill="rgb(249,3,44)" fg:x="305" fg:w="1"/><text x="24.6891%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.4391%" y="741" width="0.0801%" height="15" fill="rgb(229,80,41)" fg:x="305" fg:w="1"/><text x="24.6891%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="24.4391%" y="725" width="0.0801%" height="15" fill="rgb(231,25,28)" fg:x="305" fg:w="1"/><text x="24.6891%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.4391%" y="709" width="0.0801%" height="15" fill="rgb(208,79,48)" fg:x="305" fg:w="1"/><text x="24.6891%" y="719.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="24.4391%" y="693" width="0.0801%" height="15" fill="rgb(207,196,38)" fg:x="305" fg:w="1"/><text x="24.6891%" y="703.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="24.5192%" y="837" width="0.0801%" height="15" fill="rgb(228,105,49)" fg:x="306" fg:w="1"/><text x="24.7692%" y="847.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.08%)</title><rect x="24.5994%" y="773" width="0.0801%" height="15" fill="rgb(237,99,15)" fg:x="307" fg:w="1"/><text x="24.8494%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="24.5994%" y="757" width="0.0801%" height="15" fill="rgb(224,207,46)" fg:x="307" fg:w="1"/><text x="24.8494%" y="767.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="24.5994%" y="837" width="0.1603%" height="15" fill="rgb(249,117,50)" fg:x="307" fg:w="2"/><text x="24.8494%" y="847.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="24.5994%" y="821" width="0.1603%" height="15" fill="rgb(248,17,13)" fg:x="307" fg:w="2"/><text x="24.8494%" y="831.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="24.5994%" y="805" width="0.1603%" height="15" fill="rgb(228,187,36)" fg:x="307" fg:w="2"/><text x="24.8494%" y="815.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="24.5994%" y="789" width="0.1603%" height="15" fill="rgb(234,132,20)" fg:x="307" fg:w="2"/><text x="24.8494%" y="799.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.6795%" y="773" width="0.0801%" height="15" fill="rgb(209,170,46)" fg:x="308" fg:w="1"/><text x="24.9295%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.6795%" y="757" width="0.0801%" height="15" fill="rgb(237,23,19)" fg:x="308" fg:w="1"/><text x="24.9295%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="24.8397%" y="821" width="0.0801%" height="15" fill="rgb(227,21,26)" fg:x="310" fg:w="1"/><text x="25.0897%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="24.8397%" y="805" width="0.0801%" height="15" fill="rgb(222,220,48)" fg:x="310" fg:w="1"/><text x="25.0897%" y="815.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="24.8397%" y="789" width="0.0801%" height="15" fill="rgb(214,9,16)" fg:x="310" fg:w="1"/><text x="25.0897%" y="799.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="25.0801%" y="773" width="0.3205%" height="15" fill="rgb(209,73,30)" fg:x="313" fg:w="4"/><text x="25.3301%" y="783.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="25.1603%" y="757" width="0.2404%" height="15" fill="rgb(207,20,33)" fg:x="314" fg:w="3"/><text x="25.4103%" y="767.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.3205%" y="741" width="0.0801%" height="15" fill="rgb(219,153,12)" fg:x="316" fg:w="1"/><text x="25.5705%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.3205%" y="725" width="0.0801%" height="15" fill="rgb(235,97,25)" fg:x="316" fg:w="1"/><text x="25.5705%" y="735.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="25.0801%" y="789" width="0.4006%" height="15" fill="rgb(244,30,34)" fg:x="313" fg:w="5"/><text x="25.3301%" y="799.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.4006%" y="773" width="0.0801%" height="15" fill="rgb(214,106,45)" fg:x="317" fg:w="1"/><text x="25.6506%" y="783.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="25.5609%" y="773" width="0.0801%" height="15" fill="rgb(226,41,9)" fg:x="319" fg:w="1"/><text x="25.8109%" y="783.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.5609%" y="757" width="0.0801%" height="15" fill="rgb(253,139,29)" fg:x="319" fg:w="1"/><text x="25.8109%" y="767.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.5609%" y="741" width="0.0801%" height="15" fill="rgb(213,205,39)" fg:x="319" fg:w="1"/><text x="25.8109%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.5609%" y="725" width="0.0801%" height="15" fill="rgb(209,27,10)" fg:x="319" fg:w="1"/><text x="25.8109%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="25.5609%" y="709" width="0.0801%" height="15" fill="rgb(249,142,16)" fg:x="319" fg:w="1"/><text x="25.8109%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.5609%" y="693" width="0.0801%" height="15" fill="rgb(242,65,12)" fg:x="319" fg:w="1"/><text x="25.8109%" y="703.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="25.5609%" y="677" width="0.0801%" height="15" fill="rgb(232,48,10)" fg:x="319" fg:w="1"/><text x="25.8109%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="25.6410%" y="757" width="0.0801%" height="15" fill="rgb(253,67,19)" fg:x="320" fg:w="1"/><text x="25.8910%" y="767.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="25.7212%" y="725" width="0.1603%" height="15" fill="rgb(227,93,29)" fg:x="321" fg:w="2"/><text x="25.9712%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.8013%" y="709" width="0.0801%" height="15" fill="rgb(226,189,53)" fg:x="322" fg:w="1"/><text x="26.0513%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.8013%" y="693" width="0.0801%" height="15" fill="rgb(223,224,1)" fg:x="322" fg:w="1"/><text x="26.0513%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="25.7212%" y="757" width="0.2404%" height="15" fill="rgb(221,84,32)" fg:x="321" fg:w="3"/><text x="25.9712%" y="767.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="25.7212%" y="741" width="0.2404%" height="15" fill="rgb(214,189,28)" fg:x="321" fg:w="3"/><text x="25.9712%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.8814%" y="725" width="0.0801%" height="15" fill="rgb(234,7,52)" fg:x="323" fg:w="1"/><text x="26.1314%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="25.9615%" y="725" width="0.0801%" height="15" fill="rgb(249,73,31)" fg:x="324" fg:w="1"/><text x="26.2115%" y="735.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="26.0417%" y="725" width="0.1603%" height="15" fill="rgb(253,153,41)" fg:x="325" fg:w="2"/><text x="26.2917%" y="735.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="26.0417%" y="709" width="0.1603%" height="15" fill="rgb(249,52,34)" fg:x="325" fg:w="2"/><text x="26.2917%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.1218%" y="693" width="0.0801%" height="15" fill="rgb(236,177,47)" fg:x="326" fg:w="1"/><text x="26.3718%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="26.2019%" y="693" width="0.0801%" height="15" fill="rgb(252,185,45)" fg:x="327" fg:w="1"/><text x="26.4519%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.2019%" y="677" width="0.0801%" height="15" fill="rgb(251,15,30)" fg:x="327" fg:w="1"/><text x="26.4519%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.2019%" y="661" width="0.0801%" height="15" fill="rgb(233,31,4)" fg:x="327" fg:w="1"/><text x="26.4519%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="26.2019%" y="645" width="0.0801%" height="15" fill="rgb(254,44,24)" fg:x="327" fg:w="1"/><text x="26.4519%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="25.6410%" y="773" width="0.8013%" height="15" fill="rgb(218,54,1)" fg:x="320" fg:w="10"/><text x="25.8910%" y="783.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="25.9615%" y="757" width="0.4808%" height="15" fill="rgb(243,209,39)" fg:x="324" fg:w="6"/><text x="26.2115%" y="767.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="25.9615%" y="741" width="0.4808%" height="15" fill="rgb(206,75,33)" fg:x="324" fg:w="6"/><text x="26.2115%" y="751.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="26.2019%" y="725" width="0.2404%" height="15" fill="rgb(223,108,18)" fg:x="327" fg:w="3"/><text x="26.4519%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="26.2019%" y="709" width="0.2404%" height="15" fill="rgb(244,89,31)" fg:x="327" fg:w="3"/><text x="26.4519%" y="719.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="26.2821%" y="693" width="0.1603%" height="15" fill="rgb(222,167,27)" fg:x="328" fg:w="2"/><text x="26.5321%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.3622%" y="677" width="0.0801%" height="15" fill="rgb(247,41,16)" fg:x="329" fg:w="1"/><text x="26.6122%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.3622%" y="661" width="0.0801%" height="15" fill="rgb(233,168,40)" fg:x="329" fg:w="1"/><text x="26.6122%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="25.4808%" y="789" width="1.2019%" height="15" fill="rgb(205,211,8)" fg:x="318" fg:w="15"/><text x="25.7308%" y="799.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="26.4423%" y="773" width="0.2404%" height="15" fill="rgb(238,105,11)" fg:x="330" fg:w="3"/><text x="26.6923%" y="783.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="26.5224%" y="757" width="0.1603%" height="15" fill="rgb(223,142,52)" fg:x="331" fg:w="2"/><text x="26.7724%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="26.5224%" y="741" width="0.1603%" height="15" fill="rgb(238,51,33)" fg:x="331" fg:w="2"/><text x="26.7724%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="26.5224%" y="725" width="0.1603%" height="15" fill="rgb(231,188,43)" fg:x="331" fg:w="2"/><text x="26.7724%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="26.5224%" y="709" width="0.1603%" height="15" fill="rgb(216,92,17)" fg:x="331" fg:w="2"/><text x="26.7724%" y="719.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="26.6026%" y="693" width="0.0801%" height="15" fill="rgb(228,2,40)" fg:x="332" fg:w="1"/><text x="26.8526%" y="703.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (21 samples, 1.68%)</title><rect x="25.0801%" y="805" width="1.6827%" height="15" fill="rgb(226,73,15)" fg:x="313" fg:w="21"/><text x="25.3301%" y="815.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.6827%" y="789" width="0.0801%" height="15" fill="rgb(227,66,46)" fg:x="333" fg:w="1"/><text x="26.9327%" y="799.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.6827%" y="773" width="0.0801%" height="15" fill="rgb(209,71,6)" fg:x="333" fg:w="1"/><text x="26.9327%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.6827%" y="757" width="0.0801%" height="15" fill="rgb(246,100,25)" fg:x="333" fg:w="1"/><text x="26.9327%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.7628%" y="757" width="0.0801%" height="15" fill="rgb(248,185,27)" fg:x="334" fg:w="1"/><text x="27.0128%" y="767.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="26.9231%" y="725" width="0.2404%" height="15" fill="rgb(225,118,47)" fg:x="336" fg:w="3"/><text x="27.1731%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.0833%" y="709" width="0.0801%" height="15" fill="rgb(220,185,44)" fg:x="338" fg:w="1"/><text x="27.3333%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="27.1635%" y="725" width="0.0801%" height="15" fill="rgb(227,95,24)" fg:x="339" fg:w="1"/><text x="27.4135%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.1635%" y="709" width="0.0801%" height="15" fill="rgb(252,84,24)" fg:x="339" fg:w="1"/><text x="27.4135%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.1635%" y="693" width="0.0801%" height="15" fill="rgb(240,34,44)" fg:x="339" fg:w="1"/><text x="27.4135%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="26.7628%" y="805" width="0.6410%" height="15" fill="rgb(209,72,54)" fg:x="334" fg:w="8"/><text x="27.0128%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="26.7628%" y="789" width="0.6410%" height="15" fill="rgb(226,19,45)" fg:x="334" fg:w="8"/><text x="27.0128%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="26.7628%" y="773" width="0.6410%" height="15" fill="rgb(246,7,45)" fg:x="334" fg:w="8"/><text x="27.0128%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="26.8429%" y="757" width="0.5609%" height="15" fill="rgb(225,45,2)" fg:x="335" fg:w="7"/><text x="27.0929%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="26.8429%" y="741" width="0.5609%" height="15" fill="rgb(221,80,29)" fg:x="335" fg:w="7"/><text x="27.0929%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="27.2436%" y="725" width="0.1603%" height="15" fill="rgb(228,11,19)" fg:x="340" fg:w="2"/><text x="27.4936%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.3237%" y="709" width="0.0801%" height="15" fill="rgb(243,17,21)" fg:x="341" fg:w="1"/><text x="27.5737%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.4038%" y="773" width="0.0801%" height="15" fill="rgb(243,88,8)" fg:x="342" fg:w="1"/><text x="27.6538%" y="783.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="27.5641%" y="741" width="0.1603%" height="15" fill="rgb(214,17,9)" fg:x="344" fg:w="2"/><text x="27.8141%" y="751.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="27.7244%" y="725" width="0.1603%" height="15" fill="rgb(232,169,15)" fg:x="346" fg:w="2"/><text x="27.9744%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.8846%" y="725" width="0.0801%" height="15" fill="rgb(232,86,53)" fg:x="348" fg:w="1"/><text x="28.1346%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.8846%" y="709" width="0.0801%" height="15" fill="rgb(222,100,4)" fg:x="348" fg:w="1"/><text x="28.1346%" y="719.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="28.1250%" y="709" width="0.1603%" height="15" fill="rgb(253,151,38)" fg:x="351" fg:w="2"/><text x="28.3750%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.2853%" y="693" width="0.0801%" height="15" fill="rgb(238,215,29)" fg:x="353" fg:w="1"/><text x="28.5353%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.2853%" y="677" width="0.0801%" height="15" fill="rgb(205,128,53)" fg:x="353" fg:w="1"/><text x="28.5353%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="28.3654%" y="693" width="0.0801%" height="15" fill="rgb(248,183,14)" fg:x="354" fg:w="1"/><text x="28.6154%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="28.3654%" y="677" width="0.0801%" height="15" fill="rgb(244,172,35)" fg:x="354" fg:w="1"/><text x="28.6154%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="28.4455%" y="677" width="0.1603%" height="15" fill="rgb(234,93,19)" fg:x="355" fg:w="2"/><text x="28.6955%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.5256%" y="661" width="0.0801%" height="15" fill="rgb(227,109,7)" fg:x="356" fg:w="1"/><text x="28.7756%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.20%)</title><rect x="27.4840%" y="773" width="1.2019%" height="15" fill="rgb(233,136,54)" fg:x="343" fg:w="15"/><text x="27.7340%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.20%)</title><rect x="27.4840%" y="757" width="1.2019%" height="15" fill="rgb(233,19,40)" fg:x="343" fg:w="15"/><text x="27.7340%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="27.7244%" y="741" width="0.9615%" height="15" fill="rgb(247,41,18)" fg:x="346" fg:w="12"/><text x="27.9744%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="27.9647%" y="725" width="0.7212%" height="15" fill="rgb(220,34,34)" fg:x="349" fg:w="9"/><text x="28.2147%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="28.2853%" y="709" width="0.4006%" height="15" fill="rgb(222,135,32)" fg:x="353" fg:w="5"/><text x="28.5353%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="28.4455%" y="693" width="0.2404%" height="15" fill="rgb(214,80,19)" fg:x="355" fg:w="3"/><text x="28.6955%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.6058%" y="677" width="0.0801%" height="15" fill="rgb(234,54,46)" fg:x="357" fg:w="1"/><text x="28.8558%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.6058%" y="661" width="0.0801%" height="15" fill="rgb(251,48,23)" fg:x="357" fg:w="1"/><text x="28.8558%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.6058%" y="645" width="0.0801%" height="15" fill="rgb(254,109,52)" fg:x="357" fg:w="1"/><text x="28.8558%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="28.7660%" y="741" width="0.3205%" height="15" fill="rgb(240,186,19)" fg:x="359" fg:w="4"/><text x="29.0160%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="29.0064%" y="725" width="0.0801%" height="15" fill="rgb(246,187,17)" fg:x="362" fg:w="1"/><text x="29.2564%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="29.0064%" y="709" width="0.0801%" height="15" fill="rgb(212,21,5)" fg:x="362" fg:w="1"/><text x="29.2564%" y="719.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (22 samples, 1.76%)</title><rect x="27.4038%" y="789" width="1.7628%" height="15" fill="rgb(225,185,18)" fg:x="342" fg:w="22"/><text x="27.6538%" y="799.50"></text></g><g><title>treediff::diff::diff (6 samples, 0.48%)</title><rect x="28.6859%" y="773" width="0.4808%" height="15" fill="rgb(245,114,17)" fg:x="358" fg:w="6"/><text x="28.9359%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.48%)</title><rect x="28.6859%" y="757" width="0.4808%" height="15" fill="rgb(223,164,24)" fg:x="358" fg:w="6"/><text x="28.9359%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="29.0865%" y="741" width="0.0801%" height="15" fill="rgb(211,228,3)" fg:x="363" fg:w="1"/><text x="29.3365%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="29.1667%" y="789" width="0.0801%" height="15" fill="rgb(223,16,38)" fg:x="364" fg:w="1"/><text x="29.4167%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.1667%" y="773" width="0.0801%" height="15" fill="rgb(207,31,54)" fg:x="364" fg:w="1"/><text x="29.4167%" y="783.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.2468%" y="757" width="0.0801%" height="15" fill="rgb(220,39,11)" fg:x="365" fg:w="1"/><text x="29.4968%" y="767.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="29.3269%" y="757" width="0.0801%" height="15" fill="rgb(235,185,0)" fg:x="366" fg:w="1"/><text x="29.5769%" y="767.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="29.3269%" y="741" width="0.0801%" height="15" fill="rgb(249,39,18)" fg:x="366" fg:w="1"/><text x="29.5769%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="29.4071%" y="757" width="0.2404%" height="15" fill="rgb(240,110,33)" fg:x="367" fg:w="3"/><text x="29.6571%" y="767.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="29.4071%" y="741" width="0.2404%" height="15" fill="rgb(210,92,42)" fg:x="367" fg:w="3"/><text x="29.6571%" y="751.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="29.4872%" y="725" width="0.1603%" height="15" fill="rgb(218,215,28)" fg:x="368" fg:w="2"/><text x="29.7372%" y="735.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="29.6474%" y="757" width="0.0801%" height="15" fill="rgb(238,215,36)" fg:x="370" fg:w="1"/><text x="29.8974%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.7276%" y="725" width="0.0801%" height="15" fill="rgb(220,31,10)" fg:x="371" fg:w="1"/><text x="29.9776%" y="735.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="29.7276%" y="757" width="0.2404%" height="15" fill="rgb(212,93,14)" fg:x="371" fg:w="3"/><text x="29.9776%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="29.7276%" y="741" width="0.2404%" height="15" fill="rgb(254,207,2)" fg:x="371" fg:w="3"/><text x="29.9776%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="29.8077%" y="725" width="0.1603%" height="15" fill="rgb(205,57,44)" fg:x="372" fg:w="2"/><text x="30.0577%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.8878%" y="709" width="0.0801%" height="15" fill="rgb(226,151,19)" fg:x="373" fg:w="1"/><text x="30.1378%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.2885%" y="709" width="0.0801%" height="15" fill="rgb(230,72,30)" fg:x="378" fg:w="1"/><text x="30.5385%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="30.2885%" y="741" width="0.1603%" height="15" fill="rgb(244,0,8)" fg:x="378" fg:w="2"/><text x="30.5385%" y="751.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="30.2885%" y="725" width="0.1603%" height="15" fill="rgb(230,192,6)" fg:x="378" fg:w="2"/><text x="30.5385%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="30.3686%" y="709" width="0.0801%" height="15" fill="rgb(233,207,13)" fg:x="379" fg:w="1"/><text x="30.6186%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="30.4487%" y="725" width="0.0801%" height="15" fill="rgb(206,227,7)" fg:x="380" fg:w="1"/><text x="30.6987%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.6891%" y="677" width="0.0801%" height="15" fill="rgb(213,217,25)" fg:x="383" fg:w="1"/><text x="30.9391%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="30.6090%" y="709" width="0.2404%" height="15" fill="rgb(249,75,4)" fg:x="382" fg:w="3"/><text x="30.8590%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="30.6891%" y="693" width="0.1603%" height="15" fill="rgb(225,114,18)" fg:x="383" fg:w="2"/><text x="30.9391%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="30.7692%" y="677" width="0.0801%" height="15" fill="rgb(211,162,40)" fg:x="384" fg:w="1"/><text x="31.0192%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="30.8494%" y="709" width="0.2404%" height="15" fill="rgb(206,49,29)" fg:x="385" fg:w="3"/><text x="31.0994%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="31.0096%" y="693" width="0.0801%" height="15" fill="rgb(244,8,6)" fg:x="387" fg:w="1"/><text x="31.2596%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="31.1699%" y="693" width="0.0801%" height="15" fill="rgb(231,194,28)" fg:x="389" fg:w="1"/><text x="31.4199%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="31.2500%" y="693" width="0.0801%" height="15" fill="rgb(210,69,5)" fg:x="390" fg:w="1"/><text x="31.5000%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.4103%" y="677" width="0.0801%" height="15" fill="rgb(216,186,12)" fg:x="392" fg:w="1"/><text x="31.6603%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.6506%" y="645" width="0.0801%" height="15" fill="rgb(238,61,15)" fg:x="395" fg:w="1"/><text x="31.9006%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.6506%" y="629" width="0.0801%" height="15" fill="rgb(226,104,1)" fg:x="395" fg:w="1"/><text x="31.9006%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="31.6506%" y="613" width="0.0801%" height="15" fill="rgb(229,128,15)" fg:x="395" fg:w="1"/><text x="31.9006%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.96%)</title><rect x="31.3301%" y="693" width="0.9615%" height="15" fill="rgb(247,110,15)" fg:x="391" fg:w="12"/><text x="31.5801%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="31.4904%" y="677" width="0.8013%" height="15" fill="rgb(210,74,48)" fg:x="393" fg:w="10"/><text x="31.7404%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="31.5705%" y="661" width="0.7212%" height="15" fill="rgb(246,121,10)" fg:x="394" fg:w="9"/><text x="31.8205%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="31.7308%" y="645" width="0.5609%" height="15" fill="rgb(214,156,37)" fg:x="396" fg:w="7"/><text x="31.9808%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="31.7308%" y="629" width="0.5609%" height="15" fill="rgb(214,210,34)" fg:x="396" fg:w="7"/><text x="31.9808%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="31.7308%" y="613" width="0.5609%" height="15" fill="rgb(237,93,35)" fg:x="396" fg:w="7"/><text x="31.9808%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="31.8910%" y="597" width="0.4006%" height="15" fill="rgb(206,36,8)" fg:x="398" fg:w="5"/><text x="32.1410%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="31.9712%" y="581" width="0.3205%" height="15" fill="rgb(208,151,12)" fg:x="399" fg:w="4"/><text x="32.2212%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="31.9712%" y="565" width="0.3205%" height="15" fill="rgb(225,133,52)" fg:x="399" fg:w="4"/><text x="32.2212%" y="575.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="31.9712%" y="549" width="0.3205%" height="15" fill="rgb(231,71,53)" fg:x="399" fg:w="4"/><text x="32.2212%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (23 samples, 1.84%)</title><rect x="30.5288%" y="725" width="1.8429%" height="15" fill="rgb(243,76,21)" fg:x="381" fg:w="23"/><text x="30.7788%" y="735.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.28%)</title><rect x="31.0897%" y="709" width="1.2821%" height="15" fill="rgb(252,144,3)" fg:x="388" fg:w="16"/><text x="31.3397%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.2917%" y="693" width="0.0801%" height="15" fill="rgb(231,199,10)" fg:x="403" fg:w="1"/><text x="32.5417%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (40 samples, 3.21%)</title><rect x="29.2468%" y="789" width="3.2051%" height="15" fill="rgb(215,18,11)" fg:x="365" fg:w="40"/><text x="29.4968%" y="799.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (40 samples, 3.21%)</title><rect x="29.2468%" y="773" width="3.2051%" height="15" fill="rgb(241,65,24)" fg:x="365" fg:w="40"/><text x="29.4968%" y="783.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (31 samples, 2.48%)</title><rect x="29.9679%" y="757" width="2.4840%" height="15" fill="rgb(251,192,38)" fg:x="374" fg:w="31"/><text x="30.2179%" y="767.50">se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (25 samples, 2.00%)</title><rect x="30.4487%" y="741" width="2.0032%" height="15" fill="rgb(205,9,35)" fg:x="380" fg:w="25"/><text x="30.6987%" y="751.50">s..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.3718%" y="725" width="0.0801%" height="15" fill="rgb(229,225,49)" fg:x="404" fg:w="1"/><text x="32.6218%" y="735.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="33.0128%" y="613" width="0.0801%" height="15" fill="rgb(207,125,39)" fg:x="412" fg:w="1"/><text x="33.2628%" y="623.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="33.0128%" y="597" width="0.0801%" height="15" fill="rgb(222,78,19)" fg:x="412" fg:w="1"/><text x="33.2628%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="33.0929%" y="613" width="0.0801%" height="15" fill="rgb(248,207,20)" fg:x="413" fg:w="1"/><text x="33.3429%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.0929%" y="597" width="0.0801%" height="15" fill="rgb(205,103,49)" fg:x="413" fg:w="1"/><text x="33.3429%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="32.9327%" y="645" width="0.3205%" height="15" fill="rgb(216,42,28)" fg:x="411" fg:w="4"/><text x="33.1827%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="32.9327%" y="629" width="0.3205%" height="15" fill="rgb(213,205,53)" fg:x="411" fg:w="4"/><text x="33.1827%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.1731%" y="613" width="0.0801%" height="15" fill="rgb(239,140,53)" fg:x="414" fg:w="1"/><text x="33.4231%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="33.2532%" y="565" width="0.1603%" height="15" fill="rgb(248,95,9)" fg:x="415" fg:w="2"/><text x="33.5032%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="33.3333%" y="549" width="0.0801%" height="15" fill="rgb(254,58,47)" fg:x="416" fg:w="1"/><text x="33.5833%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="32.6122%" y="693" width="0.8814%" height="15" fill="rgb(234,227,14)" fg:x="407" fg:w="11"/><text x="32.8622%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="32.8526%" y="677" width="0.6410%" height="15" fill="rgb(205,192,45)" fg:x="410" fg:w="8"/><text x="33.1026%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="32.9327%" y="661" width="0.5609%" height="15" fill="rgb(253,187,31)" fg:x="411" fg:w="7"/><text x="33.1827%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="33.2532%" y="645" width="0.2404%" height="15" fill="rgb(222,6,32)" fg:x="415" fg:w="3"/><text x="33.5032%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="33.2532%" y="629" width="0.2404%" height="15" fill="rgb(249,190,19)" fg:x="415" fg:w="3"/><text x="33.5032%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="33.2532%" y="613" width="0.2404%" height="15" fill="rgb(251,28,20)" fg:x="415" fg:w="3"/><text x="33.5032%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="33.2532%" y="597" width="0.2404%" height="15" fill="rgb(210,223,40)" fg:x="415" fg:w="3"/><text x="33.5032%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="33.2532%" y="581" width="0.2404%" height="15" fill="rgb(216,137,22)" fg:x="415" fg:w="3"/><text x="33.5032%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="33.4135%" y="565" width="0.0801%" height="15" fill="rgb(247,39,34)" fg:x="417" fg:w="1"/><text x="33.6635%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="33.4135%" y="549" width="0.0801%" height="15" fill="rgb(239,43,50)" fg:x="417" fg:w="1"/><text x="33.6635%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5 samples, 0.40%)</title><rect x="33.4936%" y="693" width="0.4006%" height="15" fill="rgb(241,212,9)" fg:x="418" fg:w="5"/><text x="33.7436%" y="703.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (5 samples, 0.40%)</title><rect x="33.4936%" y="677" width="0.4006%" height="15" fill="rgb(205,8,2)" fg:x="418" fg:w="5"/><text x="33.7436%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (20 samples, 1.60%)</title><rect x="32.5321%" y="725" width="1.6026%" height="15" fill="rgb(217,173,54)" fg:x="406" fg:w="20"/><text x="32.7821%" y="735.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19 samples, 1.52%)</title><rect x="32.6122%" y="709" width="1.5224%" height="15" fill="rgb(208,149,52)" fg:x="407" fg:w="19"/><text x="32.8622%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="33.8942%" y="693" width="0.2404%" height="15" fill="rgb(239,99,40)" fg:x="423" fg:w="3"/><text x="34.1442%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.9744%" y="677" width="0.1603%" height="15" fill="rgb(233,214,26)" fg:x="424" fg:w="2"/><text x="34.2244%" y="687.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="33.9744%" y="661" width="0.1603%" height="15" fill="rgb(231,225,37)" fg:x="424" fg:w="2"/><text x="34.2244%" y="671.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="34.2147%" y="709" width="0.0801%" height="15" fill="rgb(252,55,35)" fg:x="427" fg:w="1"/><text x="34.4647%" y="719.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="34.1346%" y="725" width="0.3205%" height="15" fill="rgb(239,43,18)" fg:x="426" fg:w="4"/><text x="34.3846%" y="735.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="34.2949%" y="709" width="0.1603%" height="15" fill="rgb(251,125,49)" fg:x="428" fg:w="2"/><text x="34.5449%" y="719.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (126 samples, 10.10%)</title><rect x="24.7596%" y="837" width="10.0962%" height="15" fill="rgb(212,83,54)" fg:x="309" fg:w="126"/><text x="25.0096%" y="847.50">engine::interna..</text></g><g><title>engine::session::SavesEntities::check_for_changes (124 samples, 9.94%)</title><rect x="24.9199%" y="821" width="9.9359%" height="15" fill="rgb(250,75,6)" fg:x="311" fg:w="124"/><text x="25.1699%" y="831.50">engine::sessio..</text></g><g><title>kernel::model::any_entity_changes (93 samples, 7.45%)</title><rect x="27.4038%" y="805" width="7.4519%" height="15" fill="rgb(252,36,40)" fg:x="342" fg:w="93"/><text x="27.6538%" y="815.50">kernel::mo..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (30 samples, 2.40%)</title><rect x="32.4519%" y="789" width="2.4038%" height="15" fill="rgb(230,91,51)" fg:x="405" fg:w="30"/><text x="32.7019%" y="799.50">se..</text></g><g><title>serde_json::de::from_trait (30 samples, 2.40%)</title><rect x="32.4519%" y="773" width="2.4038%" height="15" fill="rgb(212,92,28)" fg:x="405" fg:w="30"/><text x="32.7019%" y="783.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (30 samples, 2.40%)</title><rect x="32.4519%" y="757" width="2.4038%" height="15" fill="rgb(227,13,22)" fg:x="405" fg:w="30"/><text x="32.7019%" y="767.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (29 samples, 2.32%)</title><rect x="32.5321%" y="741" width="2.3237%" height="15" fill="rgb(239,204,32)" fg:x="406" fg:w="29"/><text x="32.7821%" y="751.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="34.4551%" y="725" width="0.4006%" height="15" fill="rgb(228,49,41)" fg:x="430" fg:w="5"/><text x="34.7051%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="34.6154%" y="709" width="0.2404%" height="15" fill="rgb(206,95,6)" fg:x="432" fg:w="3"/><text x="34.8654%" y="719.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="34.6154%" y="693" width="0.2404%" height="15" fill="rgb(251,20,14)" fg:x="432" fg:w="3"/><text x="34.8654%" y="703.50"></text></g><g><title>engine::session::Session::world (2 samples, 0.16%)</title><rect x="34.8558%" y="837" width="0.1603%" height="15" fill="rgb(214,99,28)" fg:x="435" fg:w="2"/><text x="35.1058%" y="847.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="34.8558%" y="821" width="0.1603%" height="15" fill="rgb(239,122,54)" fg:x="435" fg:w="2"/><text x="35.1058%" y="831.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="34.9359%" y="805" width="0.0801%" height="15" fill="rgb(218,217,46)" fg:x="436" fg:w="1"/><text x="35.1859%" y="815.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="34.9359%" y="789" width="0.0801%" height="15" fill="rgb(249,106,28)" fg:x="436" fg:w="1"/><text x="35.1859%" y="799.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.9359%" y="773" width="0.0801%" height="15" fill="rgb(250,158,18)" fg:x="436" fg:w="1"/><text x="35.1859%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.9359%" y="757" width="0.0801%" height="15" fill="rgb(226,137,29)" fg:x="436" fg:w="1"/><text x="35.1859%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.9359%" y="741" width="0.0801%" height="15" fill="rgb(210,188,1)" fg:x="436" fg:w="1"/><text x="35.1859%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.9359%" y="725" width="0.0801%" height="15" fill="rgb(227,84,42)" fg:x="436" fg:w="1"/><text x="35.1859%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.9359%" y="709" width="0.0801%" height="15" fill="rgb(222,147,48)" fg:x="436" fg:w="1"/><text x="35.1859%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.9359%" y="693" width="0.0801%" height="15" fill="rgb(241,150,43)" fg:x="436" fg:w="1"/><text x="35.1859%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.9359%" y="677" width="0.0801%" height="15" fill="rgb(206,139,52)" fg:x="436" fg:w="1"/><text x="35.1859%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.9359%" y="661" width="0.0801%" height="15" fill="rgb(230,63,14)" fg:x="436" fg:w="1"/><text x="35.1859%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.9359%" y="645" width="0.0801%" height="15" fill="rgb(247,8,20)" fg:x="436" fg:w="1"/><text x="35.1859%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.9359%" y="629" width="0.0801%" height="15" fill="rgb(213,115,4)" fg:x="436" fg:w="1"/><text x="35.1859%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.9359%" y="613" width="0.0801%" height="15" fill="rgb(241,79,49)" fg:x="436" fg:w="1"/><text x="35.1859%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.9359%" y="597" width="0.0801%" height="15" fill="rgb(222,42,35)" fg:x="436" fg:w="1"/><text x="35.1859%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.9359%" y="581" width="0.0801%" height="15" fill="rgb(247,59,23)" fg:x="436" fg:w="1"/><text x="35.1859%" y="591.50"></text></g><g><title>engine::session::Session::save_entity_changes (132 samples, 10.58%)</title><rect x="24.5192%" y="853" width="10.5769%" height="15" fill="rgb(247,93,18)" fg:x="306" fg:w="132"/><text x="24.7692%" y="863.50">engine::session..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="35.0160%" y="837" width="0.0801%" height="15" fill="rgb(249,107,47)" fg:x="437" fg:w="1"/><text x="35.2660%" y="847.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="35.0160%" y="821" width="0.0801%" height="15" fill="rgb(219,27,1)" fg:x="437" fg:w="1"/><text x="35.2660%" y="831.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="35.0160%" y="805" width="0.0801%" height="15" fill="rgb(217,82,32)" fg:x="437" fg:w="1"/><text x="35.2660%" y="815.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="35.0160%" y="789" width="0.0801%" height="15" fill="rgb(250,129,47)" fg:x="437" fg:w="1"/><text x="35.2660%" y="799.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="35.0160%" y="773" width="0.0801%" height="15" fill="rgb(253,88,35)" fg:x="437" fg:w="1"/><text x="35.2660%" y="783.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="35.0160%" y="757" width="0.0801%" height="15" fill="rgb(245,221,14)" fg:x="437" fg:w="1"/><text x="35.2660%" y="767.50"></text></g><g><title>engine::session::Session::close (133 samples, 10.66%)</title><rect x="24.5192%" y="869" width="10.6571%" height="15" fill="rgb(217,119,54)" fg:x="306" fg:w="133"/><text x="24.7692%" y="879.50">engine::session:..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="35.0962%" y="853" width="0.0801%" height="15" fill="rgb(247,128,31)" fg:x="438" fg:w="1"/><text x="35.3462%" y="863.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="35.0962%" y="837" width="0.0801%" height="15" fill="rgb(211,99,22)" fg:x="438" fg:w="1"/><text x="35.3462%" y="847.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="35.0962%" y="821" width="0.0801%" height="15" fill="rgb(212,20,17)" fg:x="438" fg:w="1"/><text x="35.3462%" y="831.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="35.0962%" y="805" width="0.0801%" height="15" fill="rgb(209,159,29)" fg:x="438" fg:w="1"/><text x="35.3462%" y="815.50"></text></g><g><title>clock_getres (1 samples, 0.08%)</title><rect x="35.0962%" y="789" width="0.0801%" height="15" fill="rgb(222,177,53)" fg:x="438" fg:w="1"/><text x="35.3462%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.1763%" y="677" width="0.0801%" height="15" fill="rgb(234,46,43)" fg:x="439" fg:w="1"/><text x="35.4263%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.2564%" y="677" width="0.0801%" height="15" fill="rgb(208,108,14)" fg:x="440" fg:w="1"/><text x="35.5064%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.2564%" y="661" width="0.0801%" height="15" fill="rgb(226,78,53)" fg:x="440" fg:w="1"/><text x="35.5064%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="35.3365%" y="677" width="0.0801%" height="15" fill="rgb(230,20,41)" fg:x="441" fg:w="1"/><text x="35.5865%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.3365%" y="661" width="0.0801%" height="15" fill="rgb(213,195,35)" fg:x="441" fg:w="1"/><text x="35.5865%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.3365%" y="645" width="0.0801%" height="15" fill="rgb(242,62,36)" fg:x="441" fg:w="1"/><text x="35.5865%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="35.4968%" y="661" width="0.0801%" height="15" fill="rgb(222,210,37)" fg:x="443" fg:w="1"/><text x="35.7468%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="35.4968%" y="645" width="0.0801%" height="15" fill="rgb(232,107,19)" fg:x="443" fg:w="1"/><text x="35.7468%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.4968%" y="629" width="0.0801%" height="15" fill="rgb(235,85,17)" fg:x="443" fg:w="1"/><text x="35.7468%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.5769%" y="645" width="0.0801%" height="15" fill="rgb(219,195,31)" fg:x="444" fg:w="1"/><text x="35.8269%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.6571%" y="629" width="0.0801%" height="15" fill="rgb(231,183,30)" fg:x="445" fg:w="1"/><text x="35.9071%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="35.1763%" y="693" width="0.6410%" height="15" fill="rgb(212,0,11)" fg:x="439" fg:w="8"/><text x="35.4263%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="35.4167%" y="677" width="0.4006%" height="15" fill="rgb(249,53,54)" fg:x="442" fg:w="5"/><text x="35.6667%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="35.5769%" y="661" width="0.2404%" height="15" fill="rgb(211,118,13)" fg:x="444" fg:w="3"/><text x="35.8269%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="35.6571%" y="645" width="0.1603%" height="15" fill="rgb(237,42,9)" fg:x="445" fg:w="2"/><text x="35.9071%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.7372%" y="629" width="0.0801%" height="15" fill="rgb(227,68,32)" fg:x="446" fg:w="1"/><text x="35.9872%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.7372%" y="613" width="0.0801%" height="15" fill="rgb(238,10,7)" fg:x="446" fg:w="1"/><text x="35.9872%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::surround::Surroundings&gt; (2 samples, 0.16%)</title><rect x="35.8173%" y="693" width="0.1603%" height="15" fill="rgb(224,42,12)" fg:x="447" fg:w="2"/><text x="36.0673%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="35.8173%" y="677" width="0.1603%" height="15" fill="rgb(252,190,5)" fg:x="447" fg:w="2"/><text x="36.0673%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (2 samples, 0.16%)</title><rect x="35.8173%" y="661" width="0.1603%" height="15" fill="rgb(220,214,39)" fg:x="447" fg:w="2"/><text x="36.0673%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.8974%" y="645" width="0.0801%" height="15" fill="rgb(247,98,4)" fg:x="448" fg:w="1"/><text x="36.1474%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.6186%" y="597" width="0.1603%" height="15" fill="rgb(211,60,12)" fg:x="457" fg:w="2"/><text x="36.8686%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="36.4583%" y="613" width="0.4006%" height="15" fill="rgb(224,42,10)" fg:x="455" fg:w="5"/><text x="36.7083%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.7788%" y="597" width="0.0801%" height="15" fill="rgb(217,167,4)" fg:x="459" fg:w="1"/><text x="37.0288%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.7788%" y="581" width="0.0801%" height="15" fill="rgb(253,18,17)" fg:x="459" fg:w="1"/><text x="37.0288%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.7788%" y="565" width="0.0801%" height="15" fill="rgb(249,186,44)" fg:x="459" fg:w="1"/><text x="37.0288%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.7788%" y="549" width="0.0801%" height="15" fill="rgb(254,124,54)" fg:x="459" fg:w="1"/><text x="37.0288%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.7788%" y="533" width="0.0801%" height="15" fill="rgb(220,124,39)" fg:x="459" fg:w="1"/><text x="37.0288%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.7788%" y="517" width="0.0801%" height="15" fill="rgb(225,96,46)" fg:x="459" fg:w="1"/><text x="37.0288%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.7788%" y="501" width="0.0801%" height="15" fill="rgb(221,106,12)" fg:x="459" fg:w="1"/><text x="37.0288%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.7788%" y="485" width="0.0801%" height="15" fill="rgb(227,133,23)" fg:x="459" fg:w="1"/><text x="37.0288%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.7788%" y="469" width="0.0801%" height="15" fill="rgb(216,44,52)" fg:x="459" fg:w="1"/><text x="37.0288%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.7788%" y="453" width="0.0801%" height="15" fill="rgb(239,149,7)" fg:x="459" fg:w="1"/><text x="37.0288%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.7788%" y="437" width="0.0801%" height="15" fill="rgb(211,157,31)" fg:x="459" fg:w="1"/><text x="37.0288%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.7788%" y="421" width="0.0801%" height="15" fill="rgb(206,215,22)" fg:x="459" fg:w="1"/><text x="37.0288%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.8590%" y="533" width="0.0801%" height="15" fill="rgb(208,113,15)" fg:x="460" fg:w="1"/><text x="37.1090%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.8590%" y="517" width="0.0801%" height="15" fill="rgb(207,189,15)" fg:x="460" fg:w="1"/><text x="37.1090%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.8590%" y="501" width="0.0801%" height="15" fill="rgb(231,115,4)" fg:x="460" fg:w="1"/><text x="37.1090%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.8590%" y="485" width="0.0801%" height="15" fill="rgb(253,117,2)" fg:x="460" fg:w="1"/><text x="37.1090%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.8590%" y="469" width="0.0801%" height="15" fill="rgb(248,48,24)" fg:x="460" fg:w="1"/><text x="37.1090%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.8590%" y="453" width="0.0801%" height="15" fill="rgb(241,28,46)" fg:x="460" fg:w="1"/><text x="37.1090%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.8590%" y="437" width="0.0801%" height="15" fill="rgb(216,165,52)" fg:x="460" fg:w="1"/><text x="37.1090%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="36.8590%" y="613" width="0.1603%" height="15" fill="rgb(220,222,34)" fg:x="460" fg:w="2"/><text x="37.1090%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="36.8590%" y="597" width="0.1603%" height="15" fill="rgb(247,222,49)" fg:x="460" fg:w="2"/><text x="37.1090%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="36.8590%" y="581" width="0.1603%" height="15" fill="rgb(240,10,31)" fg:x="460" fg:w="2"/><text x="37.1090%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="36.8590%" y="565" width="0.1603%" height="15" fill="rgb(221,199,35)" fg:x="460" fg:w="2"/><text x="37.1090%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="36.8590%" y="549" width="0.1603%" height="15" fill="rgb(230,223,11)" fg:x="460" fg:w="2"/><text x="37.1090%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="36.9391%" y="533" width="0.0801%" height="15" fill="rgb(218,82,45)" fg:x="461" fg:w="1"/><text x="37.1891%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="36.9391%" y="517" width="0.0801%" height="15" fill="rgb(233,213,33)" fg:x="461" fg:w="1"/><text x="37.1891%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.64%)</title><rect x="36.4583%" y="629" width="0.6410%" height="15" fill="rgb(210,143,52)" fg:x="455" fg:w="8"/><text x="36.7083%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.0192%" y="613" width="0.0801%" height="15" fill="rgb(206,95,4)" fg:x="462" fg:w="1"/><text x="37.2692%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.0994%" y="629" width="0.1603%" height="15" fill="rgb(246,164,46)" fg:x="463" fg:w="2"/><text x="37.3494%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.0994%" y="613" width="0.1603%" height="15" fill="rgb(213,210,47)" fg:x="463" fg:w="2"/><text x="37.3494%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="37.0994%" y="597" width="0.1603%" height="15" fill="rgb(210,12,38)" fg:x="463" fg:w="2"/><text x="37.3494%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="37.0994%" y="581" width="0.1603%" height="15" fill="rgb(252,192,54)" fg:x="463" fg:w="2"/><text x="37.3494%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="37.0994%" y="565" width="0.1603%" height="15" fill="rgb(242,92,6)" fg:x="463" fg:w="2"/><text x="37.3494%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="37.0994%" y="549" width="0.1603%" height="15" fill="rgb(253,154,15)" fg:x="463" fg:w="2"/><text x="37.3494%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="37.0994%" y="533" width="0.1603%" height="15" fill="rgb(209,20,43)" fg:x="463" fg:w="2"/><text x="37.3494%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="37.0994%" y="517" width="0.1603%" height="15" fill="rgb(232,28,49)" fg:x="463" fg:w="2"/><text x="37.3494%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="37.0994%" y="501" width="0.1603%" height="15" fill="rgb(248,131,53)" fg:x="463" fg:w="2"/><text x="37.3494%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="37.0994%" y="485" width="0.1603%" height="15" fill="rgb(214,16,30)" fg:x="463" fg:w="2"/><text x="37.3494%" y="495.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="37.0994%" y="469" width="0.1603%" height="15" fill="rgb(245,16,0)" fg:x="463" fg:w="2"/><text x="37.3494%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="37.0994%" y="453" width="0.1603%" height="15" fill="rgb(245,17,35)" fg:x="463" fg:w="2"/><text x="37.3494%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (13 samples, 1.04%)</title><rect x="36.3782%" y="645" width="1.0417%" height="15" fill="rgb(249,27,53)" fg:x="454" fg:w="13"/><text x="36.6282%" y="655.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="37.2596%" y="629" width="0.1603%" height="15" fill="rgb(214,73,24)" fg:x="465" fg:w="2"/><text x="37.5096%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.4199%" y="645" width="0.0801%" height="15" fill="rgb(223,84,37)" fg:x="467" fg:w="1"/><text x="37.6699%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.4199%" y="629" width="0.0801%" height="15" fill="rgb(210,109,28)" fg:x="467" fg:w="1"/><text x="37.6699%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.4199%" y="613" width="0.0801%" height="15" fill="rgb(208,186,6)" fg:x="467" fg:w="1"/><text x="37.6699%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.4199%" y="597" width="0.0801%" height="15" fill="rgb(235,201,30)" fg:x="467" fg:w="1"/><text x="37.6699%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.4199%" y="581" width="0.0801%" height="15" fill="rgb(216,198,48)" fg:x="467" fg:w="1"/><text x="37.6699%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="37.4199%" y="565" width="0.0801%" height="15" fill="rgb(254,186,25)" fg:x="467" fg:w="1"/><text x="37.6699%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="37.4199%" y="549" width="0.0801%" height="15" fill="rgb(227,87,5)" fg:x="467" fg:w="1"/><text x="37.6699%" y="559.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (22 samples, 1.76%)</title><rect x="35.9776%" y="693" width="1.7628%" height="15" fill="rgb(236,205,25)" fg:x="449" fg:w="22"/><text x="36.2276%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::modified (22 samples, 1.76%)</title><rect x="35.9776%" y="677" width="1.7628%" height="15" fill="rgb(229,99,32)" fg:x="449" fg:w="22"/><text x="36.2276%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (19 samples, 1.52%)</title><rect x="36.2179%" y="661" width="1.5224%" height="15" fill="rgb(231,177,31)" fg:x="452" fg:w="19"/><text x="36.4679%" y="671.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="37.5000%" y="645" width="0.2404%" height="15" fill="rgb(246,15,2)" fg:x="468" fg:w="3"/><text x="37.7500%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (1 samples, 0.08%)</title><rect x="37.7404%" y="661" width="0.0801%" height="15" fill="rgb(207,39,15)" fg:x="471" fg:w="1"/><text x="37.9904%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="37.7404%" y="645" width="0.0801%" height="15" fill="rgb(207,44,9)" fg:x="471" fg:w="1"/><text x="37.9904%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="37.7404%" y="629" width="0.0801%" height="15" fill="rgb(225,224,33)" fg:x="471" fg:w="1"/><text x="37.9904%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.7404%" y="613" width="0.0801%" height="15" fill="rgb(252,151,3)" fg:x="471" fg:w="1"/><text x="37.9904%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.7404%" y="597" width="0.0801%" height="15" fill="rgb(211,140,13)" fg:x="471" fg:w="1"/><text x="37.9904%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.7404%" y="581" width="0.0801%" height="15" fill="rgb(239,225,17)" fg:x="471" fg:w="1"/><text x="37.9904%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.7404%" y="565" width="0.0801%" height="15" fill="rgb(223,170,52)" fg:x="471" fg:w="1"/><text x="37.9904%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.7404%" y="549" width="0.0801%" height="15" fill="rgb(212,64,21)" fg:x="471" fg:w="1"/><text x="37.9904%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.7404%" y="533" width="0.0801%" height="15" fill="rgb(236,126,48)" fg:x="471" fg:w="1"/><text x="37.9904%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.7404%" y="517" width="0.0801%" height="15" fill="rgb(209,135,11)" fg:x="471" fg:w="1"/><text x="37.9904%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.7404%" y="501" width="0.0801%" height="15" fill="rgb(228,126,40)" fg:x="471" fg:w="1"/><text x="37.9904%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.7404%" y="485" width="0.0801%" height="15" fill="rgb(205,196,36)" fg:x="471" fg:w="1"/><text x="37.9904%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.7404%" y="469" width="0.0801%" height="15" fill="rgb(243,160,33)" fg:x="471" fg:w="1"/><text x="37.9904%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.7404%" y="453" width="0.0801%" height="15" fill="rgb(210,84,20)" fg:x="471" fg:w="1"/><text x="37.9904%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.7404%" y="437" width="0.0801%" height="15" fill="rgb(228,213,30)" fg:x="471" fg:w="1"/><text x="37.9904%" y="447.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="37.9006%" y="597" width="0.0801%" height="15" fill="rgb(252,33,45)" fg:x="473" fg:w="1"/><text x="38.1506%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.9006%" y="581" width="0.0801%" height="15" fill="rgb(254,227,20)" fg:x="473" fg:w="1"/><text x="38.1506%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.9006%" y="565" width="0.0801%" height="15" fill="rgb(228,192,2)" fg:x="473" fg:w="1"/><text x="38.1506%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.9006%" y="549" width="0.0801%" height="15" fill="rgb(233,32,8)" fg:x="473" fg:w="1"/><text x="38.1506%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.9006%" y="533" width="0.0801%" height="15" fill="rgb(220,146,47)" fg:x="473" fg:w="1"/><text x="38.1506%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.9006%" y="517" width="0.0801%" height="15" fill="rgb(246,194,1)" fg:x="473" fg:w="1"/><text x="38.1506%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.9006%" y="501" width="0.0801%" height="15" fill="rgb(218,203,9)" fg:x="473" fg:w="1"/><text x="38.1506%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.9006%" y="485" width="0.0801%" height="15" fill="rgb(237,97,14)" fg:x="473" fg:w="1"/><text x="38.1506%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.9006%" y="469" width="0.0801%" height="15" fill="rgb(239,76,15)" fg:x="473" fg:w="1"/><text x="38.1506%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.9006%" y="453" width="0.0801%" height="15" fill="rgb(222,53,45)" fg:x="473" fg:w="1"/><text x="38.1506%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.9006%" y="437" width="0.0801%" height="15" fill="rgb(237,88,5)" fg:x="473" fg:w="1"/><text x="38.1506%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.9006%" y="421" width="0.0801%" height="15" fill="rgb(218,223,35)" fg:x="473" fg:w="1"/><text x="38.1506%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.9006%" y="405" width="0.0801%" height="15" fill="rgb(243,229,38)" fg:x="473" fg:w="1"/><text x="38.1506%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.9808%" y="501" width="0.0801%" height="15" fill="rgb(240,75,41)" fg:x="474" fg:w="1"/><text x="38.2308%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.9808%" y="485" width="0.0801%" height="15" fill="rgb(209,110,37)" fg:x="474" fg:w="1"/><text x="38.2308%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.9808%" y="469" width="0.0801%" height="15" fill="rgb(221,130,46)" fg:x="474" fg:w="1"/><text x="38.2308%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.9808%" y="453" width="0.0801%" height="15" fill="rgb(237,160,20)" fg:x="474" fg:w="1"/><text x="38.2308%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.9808%" y="437" width="0.0801%" height="15" fill="rgb(234,126,24)" fg:x="474" fg:w="1"/><text x="38.2308%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.9808%" y="421" width="0.0801%" height="15" fill="rgb(207,177,9)" fg:x="474" fg:w="1"/><text x="38.2308%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.9808%" y="405" width="0.0801%" height="15" fill="rgb(231,191,33)" fg:x="474" fg:w="1"/><text x="38.2308%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.9808%" y="389" width="0.0801%" height="15" fill="rgb(207,42,1)" fg:x="474" fg:w="1"/><text x="38.2308%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.9808%" y="373" width="0.0801%" height="15" fill="rgb(218,34,50)" fg:x="474" fg:w="1"/><text x="38.2308%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="37.9808%" y="357" width="0.0801%" height="15" fill="rgb(254,126,39)" fg:x="474" fg:w="1"/><text x="38.2308%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="37.9808%" y="341" width="0.0801%" height="15" fill="rgb(251,17,26)" fg:x="474" fg:w="1"/><text x="38.2308%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="37.9808%" y="581" width="0.1603%" height="15" fill="rgb(252,215,34)" fg:x="474" fg:w="2"/><text x="38.2308%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="37.9808%" y="565" width="0.1603%" height="15" fill="rgb(217,120,44)" fg:x="474" fg:w="2"/><text x="38.2308%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="37.9808%" y="549" width="0.1603%" height="15" fill="rgb(211,31,11)" fg:x="474" fg:w="2"/><text x="38.2308%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="37.9808%" y="533" width="0.1603%" height="15" fill="rgb(222,69,51)" fg:x="474" fg:w="2"/><text x="38.2308%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="37.9808%" y="517" width="0.1603%" height="15" fill="rgb(215,229,42)" fg:x="474" fg:w="2"/><text x="38.2308%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.0609%" y="501" width="0.0801%" height="15" fill="rgb(212,102,15)" fg:x="475" fg:w="1"/><text x="38.3109%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.0609%" y="485" width="0.0801%" height="15" fill="rgb(205,179,41)" fg:x="475" fg:w="1"/><text x="38.3109%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.0609%" y="469" width="0.0801%" height="15" fill="rgb(219,148,46)" fg:x="475" fg:w="1"/><text x="38.3109%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.0609%" y="453" width="0.0801%" height="15" fill="rgb(243,40,19)" fg:x="475" fg:w="1"/><text x="38.3109%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="38.0609%" y="437" width="0.0801%" height="15" fill="rgb(208,206,34)" fg:x="475" fg:w="1"/><text x="38.3109%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.0609%" y="421" width="0.0801%" height="15" fill="rgb(244,184,38)" fg:x="475" fg:w="1"/><text x="38.3109%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.0609%" y="405" width="0.0801%" height="15" fill="rgb(244,151,47)" fg:x="475" fg:w="1"/><text x="38.3109%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.0609%" y="389" width="0.0801%" height="15" fill="rgb(236,134,42)" fg:x="475" fg:w="1"/><text x="38.3109%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.1410%" y="533" width="0.0801%" height="15" fill="rgb(233,93,22)" fg:x="476" fg:w="1"/><text x="38.3910%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.1410%" y="517" width="0.0801%" height="15" fill="rgb(211,202,10)" fg:x="476" fg:w="1"/><text x="38.3910%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.1410%" y="501" width="0.0801%" height="15" fill="rgb(240,63,8)" fg:x="476" fg:w="1"/><text x="38.3910%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.1410%" y="485" width="0.0801%" height="15" fill="rgb(214,9,4)" fg:x="476" fg:w="1"/><text x="38.3910%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="38.1410%" y="581" width="0.1603%" height="15" fill="rgb(243,66,45)" fg:x="476" fg:w="2"/><text x="38.3910%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="38.1410%" y="565" width="0.1603%" height="15" fill="rgb(220,50,42)" fg:x="476" fg:w="2"/><text x="38.3910%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="38.1410%" y="549" width="0.1603%" height="15" fill="rgb(220,134,27)" fg:x="476" fg:w="2"/><text x="38.3910%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.2212%" y="533" width="0.0801%" height="15" fill="rgb(246,151,50)" fg:x="477" fg:w="1"/><text x="38.4712%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.2212%" y="517" width="0.0801%" height="15" fill="rgb(238,216,27)" fg:x="477" fg:w="1"/><text x="38.4712%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.2212%" y="501" width="0.0801%" height="15" fill="rgb(250,92,11)" fg:x="477" fg:w="1"/><text x="38.4712%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.2212%" y="485" width="0.0801%" height="15" fill="rgb(248,183,6)" fg:x="477" fg:w="1"/><text x="38.4712%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="38.2212%" y="469" width="0.0801%" height="15" fill="rgb(211,204,50)" fg:x="477" fg:w="1"/><text x="38.4712%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.2212%" y="453" width="0.0801%" height="15" fill="rgb(252,55,47)" fg:x="477" fg:w="1"/><text x="38.4712%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.2212%" y="437" width="0.0801%" height="15" fill="rgb(240,198,32)" fg:x="477" fg:w="1"/><text x="38.4712%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.2212%" y="421" width="0.0801%" height="15" fill="rgb(224,203,19)" fg:x="477" fg:w="1"/><text x="38.4712%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.2212%" y="405" width="0.0801%" height="15" fill="rgb(205,27,16)" fg:x="477" fg:w="1"/><text x="38.4712%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.2212%" y="389" width="0.0801%" height="15" fill="rgb(224,226,17)" fg:x="477" fg:w="1"/><text x="38.4712%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="38.2212%" y="373" width="0.0801%" height="15" fill="rgb(205,216,54)" fg:x="477" fg:w="1"/><text x="38.4712%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="38.3013%" y="485" width="0.0801%" height="15" fill="rgb(248,168,46)" fg:x="478" fg:w="1"/><text x="38.5513%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.3013%" y="469" width="0.0801%" height="15" fill="rgb(226,111,45)" fg:x="478" fg:w="1"/><text x="38.5513%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="38.3814%" y="437" width="0.0801%" height="15" fill="rgb(231,15,9)" fg:x="479" fg:w="1"/><text x="38.6314%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="38.3814%" y="421" width="0.0801%" height="15" fill="rgb(243,168,3)" fg:x="479" fg:w="1"/><text x="38.6314%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="38.3814%" y="405" width="0.0801%" height="15" fill="rgb(221,220,54)" fg:x="479" fg:w="1"/><text x="38.6314%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="38.3814%" y="389" width="0.0801%" height="15" fill="rgb(232,174,38)" fg:x="479" fg:w="1"/><text x="38.6314%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="38.3814%" y="373" width="0.0801%" height="15" fill="rgb(205,14,38)" fg:x="479" fg:w="1"/><text x="38.6314%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="38.3814%" y="357" width="0.0801%" height="15" fill="rgb(234,89,19)" fg:x="479" fg:w="1"/><text x="38.6314%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="38.3814%" y="341" width="0.0801%" height="15" fill="rgb(216,68,51)" fg:x="479" fg:w="1"/><text x="38.6314%" y="351.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="38.3013%" y="565" width="0.2404%" height="15" fill="rgb(213,49,2)" fg:x="478" fg:w="3"/><text x="38.5513%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="38.3013%" y="549" width="0.2404%" height="15" fill="rgb(242,146,30)" fg:x="478" fg:w="3"/><text x="38.5513%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="38.3013%" y="533" width="0.2404%" height="15" fill="rgb(224,188,11)" fg:x="478" fg:w="3"/><text x="38.5513%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="38.3013%" y="517" width="0.2404%" height="15" fill="rgb(213,159,11)" fg:x="478" fg:w="3"/><text x="38.5513%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="38.3013%" y="501" width="0.2404%" height="15" fill="rgb(229,13,31)" fg:x="478" fg:w="3"/><text x="38.5513%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="38.3814%" y="485" width="0.1603%" height="15" fill="rgb(209,103,11)" fg:x="479" fg:w="2"/><text x="38.6314%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="38.3814%" y="469" width="0.1603%" height="15" fill="rgb(206,3,4)" fg:x="479" fg:w="2"/><text x="38.6314%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="38.3814%" y="453" width="0.1603%" height="15" fill="rgb(252,10,49)" fg:x="479" fg:w="2"/><text x="38.6314%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="38.4615%" y="437" width="0.0801%" height="15" fill="rgb(217,160,32)" fg:x="480" fg:w="1"/><text x="38.7115%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="38.4615%" y="421" width="0.0801%" height="15" fill="rgb(249,196,0)" fg:x="480" fg:w="1"/><text x="38.7115%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.4615%" y="405" width="0.0801%" height="15" fill="rgb(213,17,48)" fg:x="480" fg:w="1"/><text x="38.7115%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.4615%" y="389" width="0.0801%" height="15" fill="rgb(206,42,46)" fg:x="480" fg:w="1"/><text x="38.7115%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="38.4615%" y="373" width="0.0801%" height="15" fill="rgb(212,105,24)" fg:x="480" fg:w="1"/><text x="38.7115%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="38.6218%" y="533" width="0.1603%" height="15" fill="rgb(243,216,30)" fg:x="482" fg:w="2"/><text x="38.8718%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.6218%" y="517" width="0.1603%" height="15" fill="rgb(207,121,3)" fg:x="482" fg:w="2"/><text x="38.8718%" y="527.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="38.6218%" y="501" width="0.1603%" height="15" fill="rgb(249,78,0)" fg:x="482" fg:w="2"/><text x="38.8718%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="38.6218%" y="485" width="0.1603%" height="15" fill="rgb(244,151,32)" fg:x="482" fg:w="2"/><text x="38.8718%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="38.6218%" y="469" width="0.1603%" height="15" fill="rgb(228,63,25)" fg:x="482" fg:w="2"/><text x="38.8718%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="38.7019%" y="453" width="0.0801%" height="15" fill="rgb(231,158,23)" fg:x="483" fg:w="1"/><text x="38.9519%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="38.7019%" y="437" width="0.0801%" height="15" fill="rgb(248,107,23)" fg:x="483" fg:w="1"/><text x="38.9519%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="38.7019%" y="421" width="0.0801%" height="15" fill="rgb(215,168,21)" fg:x="483" fg:w="1"/><text x="38.9519%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="38.7019%" y="405" width="0.0801%" height="15" fill="rgb(227,83,22)" fg:x="483" fg:w="1"/><text x="38.9519%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="38.7019%" y="389" width="0.0801%" height="15" fill="rgb(217,118,43)" fg:x="483" fg:w="1"/><text x="38.9519%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="38.7019%" y="373" width="0.0801%" height="15" fill="rgb(229,220,41)" fg:x="483" fg:w="1"/><text x="38.9519%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="38.7019%" y="357" width="0.0801%" height="15" fill="rgb(254,146,46)" fg:x="483" fg:w="1"/><text x="38.9519%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.7019%" y="341" width="0.0801%" height="15" fill="rgb(233,208,31)" fg:x="483" fg:w="1"/><text x="38.9519%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.7019%" y="325" width="0.0801%" height="15" fill="rgb(222,162,7)" fg:x="483" fg:w="1"/><text x="38.9519%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (12 samples, 0.96%)</title><rect x="37.9006%" y="629" width="0.9615%" height="15" fill="rgb(230,117,45)" fg:x="473" fg:w="12"/><text x="38.1506%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (12 samples, 0.96%)</title><rect x="37.9006%" y="613" width="0.9615%" height="15" fill="rgb(239,163,6)" fg:x="473" fg:w="12"/><text x="38.1506%" y="623.50"></text></g><g><title>engine::internal::Entities::add_persisted (11 samples, 0.88%)</title><rect x="37.9808%" y="597" width="0.8814%" height="15" fill="rgb(246,130,17)" fg:x="474" fg:w="11"/><text x="38.2308%" y="607.50"></text></g><g><title>kernel::model::entity::Entity::from_str (7 samples, 0.56%)</title><rect x="38.3013%" y="581" width="0.5609%" height="15" fill="rgb(216,84,5)" fg:x="478" fg:w="7"/><text x="38.5513%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="38.5417%" y="565" width="0.3205%" height="15" fill="rgb(230,200,21)" fg:x="481" fg:w="4"/><text x="38.7917%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="38.5417%" y="549" width="0.3205%" height="15" fill="rgb(224,2,8)" fg:x="481" fg:w="4"/><text x="38.7917%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.7821%" y="533" width="0.0801%" height="15" fill="rgb(238,178,10)" fg:x="484" fg:w="1"/><text x="39.0321%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.7821%" y="517" width="0.0801%" height="15" fill="rgb(242,153,24)" fg:x="484" fg:w="1"/><text x="39.0321%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.8622%" y="629" width="0.0801%" height="15" fill="rgb(242,32,48)" fg:x="485" fg:w="1"/><text x="39.1122%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.8622%" y="613" width="0.0801%" height="15" fill="rgb(227,36,0)" fg:x="485" fg:w="1"/><text x="39.1122%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.8622%" y="597" width="0.0801%" height="15" fill="rgb(251,33,35)" fg:x="485" fg:w="1"/><text x="39.1122%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.8622%" y="581" width="0.0801%" height="15" fill="rgb(232,168,51)" fg:x="485" fg:w="1"/><text x="39.1122%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.8622%" y="565" width="0.0801%" height="15" fill="rgb(228,56,10)" fg:x="485" fg:w="1"/><text x="39.1122%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.8622%" y="549" width="0.0801%" height="15" fill="rgb(231,10,26)" fg:x="485" fg:w="1"/><text x="39.1122%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.8622%" y="533" width="0.0801%" height="15" fill="rgb(226,202,12)" fg:x="485" fg:w="1"/><text x="39.1122%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.8622%" y="517" width="0.0801%" height="15" fill="rgb(251,49,21)" fg:x="485" fg:w="1"/><text x="39.1122%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.8622%" y="501" width="0.0801%" height="15" fill="rgb(206,228,28)" fg:x="485" fg:w="1"/><text x="39.1122%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.8622%" y="485" width="0.0801%" height="15" fill="rgb(205,198,31)" fg:x="485" fg:w="1"/><text x="39.1122%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.8622%" y="469" width="0.0801%" height="15" fill="rgb(213,69,1)" fg:x="485" fg:w="1"/><text x="39.1122%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.8622%" y="453" width="0.0801%" height="15" fill="rgb(209,177,9)" fg:x="485" fg:w="1"/><text x="39.1122%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.8622%" y="437" width="0.0801%" height="15" fill="rgb(227,119,30)" fg:x="485" fg:w="1"/><text x="39.1122%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.8622%" y="421" width="0.0801%" height="15" fill="rgb(234,106,41)" fg:x="485" fg:w="1"/><text x="39.1122%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.8622%" y="405" width="0.0801%" height="15" fill="rgb(244,103,47)" fg:x="485" fg:w="1"/><text x="39.1122%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.9423%" y="597" width="0.0801%" height="15" fill="rgb(212,211,25)" fg:x="486" fg:w="1"/><text x="39.1923%" y="607.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (18 samples, 1.44%)</title><rect x="37.7404%" y="677" width="1.4423%" height="15" fill="rgb(208,63,53)" fg:x="471" fg:w="18"/><text x="37.9904%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (17 samples, 1.36%)</title><rect x="37.8205%" y="661" width="1.3622%" height="15" fill="rgb(213,176,21)" fg:x="472" fg:w="17"/><text x="38.0705%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (17 samples, 1.36%)</title><rect x="37.8205%" y="645" width="1.3622%" height="15" fill="rgb(243,124,12)" fg:x="472" fg:w="17"/><text x="38.0705%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="38.9423%" y="629" width="0.2404%" height="15" fill="rgb(239,2,35)" fg:x="486" fg:w="3"/><text x="39.1923%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="38.9423%" y="613" width="0.2404%" height="15" fill="rgb(253,169,22)" fg:x="486" fg:w="3"/><text x="39.1923%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.0224%" y="597" width="0.1603%" height="15" fill="rgb(254,51,12)" fg:x="487" fg:w="2"/><text x="39.2724%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.0224%" y="581" width="0.1603%" height="15" fill="rgb(244,17,47)" fg:x="487" fg:w="2"/><text x="39.2724%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="39.1026%" y="565" width="0.0801%" height="15" fill="rgb(251,45,46)" fg:x="488" fg:w="1"/><text x="39.3526%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.1026%" y="549" width="0.0801%" height="15" fill="rgb(223,87,43)" fg:x="488" fg:w="1"/><text x="39.3526%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="39.1827%" y="661" width="0.0801%" height="15" fill="rgb(230,132,31)" fg:x="489" fg:w="1"/><text x="39.4327%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="39.1827%" y="645" width="0.0801%" height="15" fill="rgb(206,99,1)" fg:x="489" fg:w="1"/><text x="39.4327%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="39.1827%" y="629" width="0.0801%" height="15" fill="rgb(227,110,25)" fg:x="489" fg:w="1"/><text x="39.4327%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="39.1827%" y="613" width="0.0801%" height="15" fill="rgb(217,182,7)" fg:x="489" fg:w="1"/><text x="39.4327%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.1827%" y="597" width="0.0801%" height="15" fill="rgb(250,176,4)" fg:x="489" fg:w="1"/><text x="39.4327%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="39.1827%" y="581" width="0.0801%" height="15" fill="rgb(244,98,30)" fg:x="489" fg:w="1"/><text x="39.4327%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="39.1827%" y="565" width="0.0801%" height="15" fill="rgb(228,150,42)" fg:x="489" fg:w="1"/><text x="39.4327%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="39.1827%" y="549" width="0.0801%" height="15" fill="rgb(231,91,46)" fg:x="489" fg:w="1"/><text x="39.4327%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.1827%" y="533" width="0.0801%" height="15" fill="rgb(252,161,32)" fg:x="489" fg:w="1"/><text x="39.4327%" y="543.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (20 samples, 1.60%)</title><rect x="37.7404%" y="693" width="1.6026%" height="15" fill="rgb(236,69,41)" fg:x="471" fg:w="20"/><text x="37.9904%" y="703.50"></text></g><g><title>engine::session::Session::world (2 samples, 0.16%)</title><rect x="39.1827%" y="677" width="0.1603%" height="15" fill="rgb(212,160,3)" fg:x="489" fg:w="2"/><text x="39.4327%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="39.2628%" y="661" width="0.0801%" height="15" fill="rgb(216,5,50)" fg:x="490" fg:w="1"/><text x="39.5128%" y="671.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="39.3429%" y="661" width="0.0801%" height="15" fill="rgb(241,138,25)" fg:x="491" fg:w="1"/><text x="39.5929%" y="671.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="39.7436%" y="549" width="0.2404%" height="15" fill="rgb(239,42,18)" fg:x="496" fg:w="3"/><text x="39.9936%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="39.5833%" y="597" width="0.4808%" height="15" fill="rgb(239,40,7)" fg:x="494" fg:w="6"/><text x="39.8333%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="39.6635%" y="581" width="0.4006%" height="15" fill="rgb(239,11,31)" fg:x="495" fg:w="5"/><text x="39.9135%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="39.6635%" y="565" width="0.4006%" height="15" fill="rgb(224,77,40)" fg:x="495" fg:w="5"/><text x="39.9135%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="39.9840%" y="549" width="0.0801%" height="15" fill="rgb(226,15,5)" fg:x="499" fg:w="1"/><text x="40.2340%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.0641%" y="597" width="0.0801%" height="15" fill="rgb(254,188,5)" fg:x="500" fg:w="1"/><text x="40.3141%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="39.5032%" y="629" width="0.7212%" height="15" fill="rgb(241,148,52)" fg:x="493" fg:w="9"/><text x="39.7532%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="39.5833%" y="613" width="0.6410%" height="15" fill="rgb(251,48,36)" fg:x="494" fg:w="8"/><text x="39.8333%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="40.1442%" y="597" width="0.0801%" height="15" fill="rgb(243,83,13)" fg:x="501" fg:w="1"/><text x="40.3942%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="40.1442%" y="581" width="0.0801%" height="15" fill="rgb(210,105,0)" fg:x="501" fg:w="1"/><text x="40.3942%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="40.1442%" y="565" width="0.0801%" height="15" fill="rgb(239,60,36)" fg:x="501" fg:w="1"/><text x="40.3942%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (11 samples, 0.88%)</title><rect x="39.4231%" y="661" width="0.8814%" height="15" fill="rgb(210,20,0)" fg:x="492" fg:w="11"/><text x="39.6731%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.80%)</title><rect x="39.5032%" y="645" width="0.8013%" height="15" fill="rgb(244,26,53)" fg:x="493" fg:w="10"/><text x="39.7532%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.2244%" y="629" width="0.0801%" height="15" fill="rgb(240,100,49)" fg:x="502" fg:w="1"/><text x="40.4744%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.3045%" y="645" width="0.0801%" height="15" fill="rgb(250,46,45)" fg:x="503" fg:w="1"/><text x="40.5545%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.3045%" y="629" width="0.0801%" height="15" fill="rgb(220,181,29)" fg:x="503" fg:w="1"/><text x="40.5545%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.3045%" y="613" width="0.0801%" height="15" fill="rgb(213,137,33)" fg:x="503" fg:w="1"/><text x="40.5545%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.3045%" y="597" width="0.0801%" height="15" fill="rgb(213,27,48)" fg:x="503" fg:w="1"/><text x="40.5545%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.3045%" y="581" width="0.0801%" height="15" fill="rgb(245,180,39)" fg:x="503" fg:w="1"/><text x="40.5545%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.3045%" y="565" width="0.0801%" height="15" fill="rgb(212,158,42)" fg:x="503" fg:w="1"/><text x="40.5545%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.3045%" y="549" width="0.0801%" height="15" fill="rgb(228,193,18)" fg:x="503" fg:w="1"/><text x="40.5545%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.3045%" y="533" width="0.0801%" height="15" fill="rgb(245,172,29)" fg:x="503" fg:w="1"/><text x="40.5545%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.3045%" y="517" width="0.0801%" height="15" fill="rgb(207,98,24)" fg:x="503" fg:w="1"/><text x="40.5545%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.3045%" y="501" width="0.0801%" height="15" fill="rgb(249,92,26)" fg:x="503" fg:w="1"/><text x="40.5545%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.3045%" y="485" width="0.0801%" height="15" fill="rgb(217,176,26)" fg:x="503" fg:w="1"/><text x="40.5545%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.3045%" y="469" width="0.0801%" height="15" fill="rgb(221,8,39)" fg:x="503" fg:w="1"/><text x="40.5545%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="40.6250%" y="613" width="0.1603%" height="15" fill="rgb(208,90,18)" fg:x="507" fg:w="2"/><text x="40.8750%" y="623.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="40.7051%" y="597" width="0.0801%" height="15" fill="rgb(207,202,30)" fg:x="508" fg:w="1"/><text x="40.9551%" y="607.50"></text></g><g><title>__libc_malloc (8 samples, 0.64%)</title><rect x="40.7853%" y="613" width="0.6410%" height="15" fill="rgb(231,124,22)" fg:x="509" fg:w="8"/><text x="41.0353%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.08%)</title><rect x="41.4263%" y="613" width="0.0801%" height="15" fill="rgb(206,15,5)" fg:x="517" fg:w="1"/><text x="41.6763%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 1.12%)</title><rect x="40.5449%" y="629" width="1.1218%" height="15" fill="rgb(239,16,52)" fg:x="506" fg:w="14"/><text x="40.7949%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.16%)</title><rect x="41.5064%" y="613" width="0.1603%" height="15" fill="rgb(245,213,29)" fg:x="518" fg:w="2"/><text x="41.7564%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="41.5865%" y="597" width="0.0801%" height="15" fill="rgb(213,203,36)" fg:x="519" fg:w="1"/><text x="41.8365%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="41.5865%" y="581" width="0.0801%" height="15" fill="rgb(209,55,18)" fg:x="519" fg:w="1"/><text x="41.8365%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.5865%" y="565" width="0.0801%" height="15" fill="rgb(207,133,49)" fg:x="519" fg:w="1"/><text x="41.8365%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.5865%" y="549" width="0.0801%" height="15" fill="rgb(240,33,46)" fg:x="519" fg:w="1"/><text x="41.8365%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.5865%" y="533" width="0.0801%" height="15" fill="rgb(212,35,2)" fg:x="519" fg:w="1"/><text x="41.8365%" y="543.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3 samples, 0.24%)</title><rect x="41.6667%" y="629" width="0.2404%" height="15" fill="rgb(231,119,28)" fg:x="520" fg:w="3"/><text x="41.9167%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="41.6667%" y="613" width="0.2404%" height="15" fill="rgb(252,178,7)" fg:x="520" fg:w="3"/><text x="41.9167%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="41.7468%" y="597" width="0.1603%" height="15" fill="rgb(251,91,4)" fg:x="521" fg:w="2"/><text x="41.9968%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="41.7468%" y="581" width="0.1603%" height="15" fill="rgb(233,122,19)" fg:x="521" fg:w="2"/><text x="41.9968%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="41.7468%" y="565" width="0.1603%" height="15" fill="rgb(231,208,46)" fg:x="521" fg:w="2"/><text x="41.9968%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.9071%" y="629" width="0.0801%" height="15" fill="rgb(243,15,41)" fg:x="523" fg:w="1"/><text x="42.1571%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.9872%" y="597" width="0.0801%" height="15" fill="rgb(210,32,43)" fg:x="524" fg:w="1"/><text x="42.2372%" y="607.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="41.9872%" y="629" width="0.2404%" height="15" fill="rgb(222,177,15)" fg:x="524" fg:w="3"/><text x="42.2372%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="41.9872%" y="613" width="0.2404%" height="15" fill="rgb(244,121,34)" fg:x="524" fg:w="3"/><text x="42.2372%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="42.0673%" y="597" width="0.1603%" height="15" fill="rgb(234,138,4)" fg:x="525" fg:w="2"/><text x="42.3173%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (2 samples, 0.16%)</title><rect x="42.0673%" y="581" width="0.1603%" height="15" fill="rgb(240,97,48)" fg:x="525" fg:w="2"/><text x="42.3173%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="42.0673%" y="565" width="0.1603%" height="15" fill="rgb(237,65,54)" fg:x="525" fg:w="2"/><text x="42.3173%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="42.3878%" y="501" width="0.1603%" height="15" fill="rgb(214,25,24)" fg:x="529" fg:w="2"/><text x="42.6378%" y="511.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="42.4679%" y="485" width="0.0801%" height="15" fill="rgb(213,5,3)" fg:x="530" fg:w="1"/><text x="42.7179%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.6282%" y="485" width="0.0801%" height="15" fill="rgb(219,81,29)" fg:x="532" fg:w="1"/><text x="42.8782%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.6282%" y="469" width="0.0801%" height="15" fill="rgb(220,43,48)" fg:x="532" fg:w="1"/><text x="42.8782%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.6282%" y="453" width="0.0801%" height="15" fill="rgb(239,157,2)" fg:x="532" fg:w="1"/><text x="42.8782%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.6282%" y="437" width="0.0801%" height="15" fill="rgb(213,104,43)" fg:x="532" fg:w="1"/><text x="42.8782%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.6282%" y="421" width="0.0801%" height="15" fill="rgb(237,84,9)" fg:x="532" fg:w="1"/><text x="42.8782%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="42.6282%" y="405" width="0.0801%" height="15" fill="rgb(252,6,33)" fg:x="532" fg:w="1"/><text x="42.8782%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="42.6282%" y="389" width="0.0801%" height="15" fill="rgb(251,172,22)" fg:x="532" fg:w="1"/><text x="42.8782%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="42.7083%" y="357" width="0.1603%" height="15" fill="rgb(244,91,53)" fg:x="533" fg:w="2"/><text x="42.9583%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="42.7885%" y="341" width="0.0801%" height="15" fill="rgb(219,29,30)" fg:x="534" fg:w="1"/><text x="43.0385%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="42.7885%" y="325" width="0.0801%" height="15" fill="rgb(213,3,15)" fg:x="534" fg:w="1"/><text x="43.0385%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="42.7885%" y="309" width="0.0801%" height="15" fill="rgb(208,25,28)" fg:x="534" fg:w="1"/><text x="43.0385%" y="319.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="42.7885%" y="293" width="0.0801%" height="15" fill="rgb(252,144,25)" fg:x="534" fg:w="1"/><text x="43.0385%" y="303.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="42.7885%" y="277" width="0.0801%" height="15" fill="rgb(226,220,25)" fg:x="534" fg:w="1"/><text x="43.0385%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.7885%" y="261" width="0.0801%" height="15" fill="rgb(212,131,28)" fg:x="534" fg:w="1"/><text x="43.0385%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.7885%" y="245" width="0.0801%" height="15" fill="rgb(219,143,52)" fg:x="534" fg:w="1"/><text x="43.0385%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="42.7885%" y="229" width="0.0801%" height="15" fill="rgb(215,56,7)" fg:x="534" fg:w="1"/><text x="43.0385%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="42.7885%" y="213" width="0.0801%" height="15" fill="rgb(239,59,51)" fg:x="534" fg:w="1"/><text x="43.0385%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="42.7885%" y="197" width="0.0801%" height="15" fill="rgb(209,215,4)" fg:x="534" fg:w="1"/><text x="43.0385%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="42.7885%" y="181" width="0.0801%" height="15" fill="rgb(221,118,39)" fg:x="534" fg:w="1"/><text x="43.0385%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="42.7885%" y="165" width="0.0801%" height="15" fill="rgb(236,6,44)" fg:x="534" fg:w="1"/><text x="43.0385%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="42.7885%" y="149" width="0.0801%" height="15" fill="rgb(216,122,9)" fg:x="534" fg:w="1"/><text x="43.0385%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="42.7885%" y="133" width="0.0801%" height="15" fill="rgb(244,134,42)" fg:x="534" fg:w="1"/><text x="43.0385%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="42.7885%" y="117" width="0.0801%" height="15" fill="rgb(209,189,35)" fg:x="534" fg:w="1"/><text x="43.0385%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="42.7885%" y="101" width="0.0801%" height="15" fill="rgb(250,47,36)" fg:x="534" fg:w="1"/><text x="43.0385%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="42.7885%" y="85" width="0.0801%" height="15" fill="rgb(252,112,4)" fg:x="534" fg:w="1"/><text x="43.0385%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="42.7885%" y="69" width="0.0801%" height="15" fill="rgb(221,79,51)" fg:x="534" fg:w="1"/><text x="43.0385%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="42.7885%" y="53" width="0.0801%" height="15" fill="rgb(232,65,53)" fg:x="534" fg:w="1"/><text x="43.0385%" y="63.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="42.7885%" y="37" width="0.0801%" height="15" fill="rgb(211,37,7)" fg:x="534" fg:w="1"/><text x="43.0385%" y="47.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="42.3878%" y="549" width="0.5609%" height="15" fill="rgb(234,221,18)" fg:x="529" fg:w="7"/><text x="42.6378%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (7 samples, 0.56%)</title><rect x="42.3878%" y="533" width="0.5609%" height="15" fill="rgb(220,158,26)" fg:x="529" fg:w="7"/><text x="42.6378%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (7 samples, 0.56%)</title><rect x="42.3878%" y="517" width="0.5609%" height="15" fill="rgb(220,70,6)" fg:x="529" fg:w="7"/><text x="42.6378%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="42.5481%" y="501" width="0.4006%" height="15" fill="rgb(250,39,48)" fg:x="531" fg:w="5"/><text x="42.7981%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="42.7083%" y="485" width="0.2404%" height="15" fill="rgb(206,40,27)" fg:x="533" fg:w="3"/><text x="42.9583%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="42.7083%" y="469" width="0.2404%" height="15" fill="rgb(247,80,36)" fg:x="533" fg:w="3"/><text x="42.9583%" y="479.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="42.7083%" y="453" width="0.2404%" height="15" fill="rgb(222,9,20)" fg:x="533" fg:w="3"/><text x="42.9583%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="42.7083%" y="437" width="0.2404%" height="15" fill="rgb(217,26,45)" fg:x="533" fg:w="3"/><text x="42.9583%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="42.7083%" y="421" width="0.2404%" height="15" fill="rgb(221,67,14)" fg:x="533" fg:w="3"/><text x="42.9583%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="42.7083%" y="405" width="0.2404%" height="15" fill="rgb(248,100,24)" fg:x="533" fg:w="3"/><text x="42.9583%" y="415.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="42.7083%" y="389" width="0.2404%" height="15" fill="rgb(230,187,16)" fg:x="533" fg:w="3"/><text x="42.9583%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="42.7083%" y="373" width="0.2404%" height="15" fill="rgb(205,108,13)" fg:x="533" fg:w="3"/><text x="42.9583%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.8686%" y="357" width="0.0801%" height="15" fill="rgb(235,71,51)" fg:x="535" fg:w="1"/><text x="43.1186%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.8686%" y="341" width="0.0801%" height="15" fill="rgb(251,172,48)" fg:x="535" fg:w="1"/><text x="43.1186%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="42.8686%" y="325" width="0.0801%" height="15" fill="rgb(240,96,49)" fg:x="535" fg:w="1"/><text x="43.1186%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="42.8686%" y="309" width="0.0801%" height="15" fill="rgb(235,46,36)" fg:x="535" fg:w="1"/><text x="43.1186%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="42.8686%" y="293" width="0.0801%" height="15" fill="rgb(244,3,49)" fg:x="535" fg:w="1"/><text x="43.1186%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="42.8686%" y="277" width="0.0801%" height="15" fill="rgb(206,78,54)" fg:x="535" fg:w="1"/><text x="43.1186%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="42.8686%" y="261" width="0.0801%" height="15" fill="rgb(208,85,42)" fg:x="535" fg:w="1"/><text x="43.1186%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="42.8686%" y="245" width="0.0801%" height="15" fill="rgb(219,196,21)" fg:x="535" fg:w="1"/><text x="43.1186%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="42.8686%" y="229" width="0.0801%" height="15" fill="rgb(238,19,9)" fg:x="535" fg:w="1"/><text x="43.1186%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="42.8686%" y="213" width="0.0801%" height="15" fill="rgb(206,86,13)" fg:x="535" fg:w="1"/><text x="43.1186%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="42.8686%" y="197" width="0.0801%" height="15" fill="rgb(214,123,40)" fg:x="535" fg:w="1"/><text x="43.1186%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="42.8686%" y="181" width="0.0801%" height="15" fill="rgb(243,53,5)" fg:x="535" fg:w="1"/><text x="43.1186%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="42.8686%" y="165" width="0.0801%" height="15" fill="rgb(254,186,31)" fg:x="535" fg:w="1"/><text x="43.1186%" y="175.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="42.8686%" y="149" width="0.0801%" height="15" fill="rgb(221,216,25)" fg:x="535" fg:w="1"/><text x="43.1186%" y="159.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="42.8686%" y="133" width="0.0801%" height="15" fill="rgb(248,107,42)" fg:x="535" fg:w="1"/><text x="43.1186%" y="143.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="42.9487%" y="533" width="0.0801%" height="15" fill="rgb(221,85,43)" fg:x="536" fg:w="1"/><text x="43.1987%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.0288%" y="533" width="0.0801%" height="15" fill="rgb(225,34,24)" fg:x="537" fg:w="1"/><text x="43.2788%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.1891%" y="341" width="0.0801%" height="15" fill="rgb(211,119,1)" fg:x="539" fg:w="1"/><text x="43.4391%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.1891%" y="325" width="0.0801%" height="15" fill="rgb(254,216,46)" fg:x="539" fg:w="1"/><text x="43.4391%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.1891%" y="309" width="0.0801%" height="15" fill="rgb(238,11,38)" fg:x="539" fg:w="1"/><text x="43.4391%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.1891%" y="293" width="0.0801%" height="15" fill="rgb(233,50,15)" fg:x="539" fg:w="1"/><text x="43.4391%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.1891%" y="277" width="0.0801%" height="15" fill="rgb(217,181,29)" fg:x="539" fg:w="1"/><text x="43.4391%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.1891%" y="261" width="0.0801%" height="15" fill="rgb(214,56,3)" fg:x="539" fg:w="1"/><text x="43.4391%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.1891%" y="245" width="0.0801%" height="15" fill="rgb(230,69,45)" fg:x="539" fg:w="1"/><text x="43.4391%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.1891%" y="229" width="0.0801%" height="15" fill="rgb(224,201,50)" fg:x="539" fg:w="1"/><text x="43.4391%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.1891%" y="213" width="0.0801%" height="15" fill="rgb(217,228,18)" fg:x="539" fg:w="1"/><text x="43.4391%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.1891%" y="197" width="0.0801%" height="15" fill="rgb(239,33,44)" fg:x="539" fg:w="1"/><text x="43.4391%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.1891%" y="181" width="0.0801%" height="15" fill="rgb(248,210,23)" fg:x="539" fg:w="1"/><text x="43.4391%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.1891%" y="165" width="0.0801%" height="15" fill="rgb(253,135,8)" fg:x="539" fg:w="1"/><text x="43.4391%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.1891%" y="149" width="0.0801%" height="15" fill="rgb(217,98,21)" fg:x="539" fg:w="1"/><text x="43.4391%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.1891%" y="133" width="0.0801%" height="15" fill="rgb(253,130,21)" fg:x="539" fg:w="1"/><text x="43.4391%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.1891%" y="117" width="0.0801%" height="15" fill="rgb(207,81,54)" fg:x="539" fg:w="1"/><text x="43.4391%" y="127.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="43.1891%" y="405" width="0.1603%" height="15" fill="rgb(232,48,33)" fg:x="539" fg:w="2"/><text x="43.4391%" y="415.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="43.1891%" y="389" width="0.1603%" height="15" fill="rgb(211,9,35)" fg:x="539" fg:w="2"/><text x="43.4391%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="43.1891%" y="373" width="0.1603%" height="15" fill="rgb(205,152,21)" fg:x="539" fg:w="2"/><text x="43.4391%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="43.1891%" y="357" width="0.1603%" height="15" fill="rgb(249,21,27)" fg:x="539" fg:w="2"/><text x="43.4391%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.2692%" y="341" width="0.0801%" height="15" fill="rgb(252,29,24)" fg:x="540" fg:w="1"/><text x="43.5192%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.3494%" y="293" width="0.0801%" height="15" fill="rgb(230,130,50)" fg:x="541" fg:w="1"/><text x="43.5994%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.4295%" y="261" width="0.0801%" height="15" fill="rgb(239,144,14)" fg:x="542" fg:w="1"/><text x="43.6795%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="43.4295%" y="245" width="0.0801%" height="15" fill="rgb(227,111,50)" fg:x="542" fg:w="1"/><text x="43.6795%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="43.4295%" y="229" width="0.0801%" height="15" fill="rgb(254,84,20)" fg:x="542" fg:w="1"/><text x="43.6795%" y="239.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (5 samples, 0.40%)</title><rect x="43.1891%" y="437" width="0.4006%" height="15" fill="rgb(232,90,48)" fg:x="539" fg:w="5"/><text x="43.4391%" y="447.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.40%)</title><rect x="43.1891%" y="421" width="0.4006%" height="15" fill="rgb(253,63,47)" fg:x="539" fg:w="5"/><text x="43.4391%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="43.3494%" y="405" width="0.2404%" height="15" fill="rgb(251,146,35)" fg:x="541" fg:w="3"/><text x="43.5994%" y="415.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="43.3494%" y="389" width="0.2404%" height="15" fill="rgb(229,192,35)" fg:x="541" fg:w="3"/><text x="43.5994%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="43.3494%" y="373" width="0.2404%" height="15" fill="rgb(225,68,9)" fg:x="541" fg:w="3"/><text x="43.5994%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="43.3494%" y="357" width="0.2404%" height="15" fill="rgb(214,97,34)" fg:x="541" fg:w="3"/><text x="43.5994%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="43.3494%" y="341" width="0.2404%" height="15" fill="rgb(253,31,26)" fg:x="541" fg:w="3"/><text x="43.5994%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="43.3494%" y="325" width="0.2404%" height="15" fill="rgb(225,151,47)" fg:x="541" fg:w="3"/><text x="43.5994%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="43.3494%" y="309" width="0.2404%" height="15" fill="rgb(206,185,9)" fg:x="541" fg:w="3"/><text x="43.5994%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="43.4295%" y="293" width="0.1603%" height="15" fill="rgb(249,65,17)" fg:x="542" fg:w="2"/><text x="43.6795%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.4295%" y="277" width="0.1603%" height="15" fill="rgb(220,110,10)" fg:x="542" fg:w="2"/><text x="43.6795%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.5096%" y="261" width="0.0801%" height="15" fill="rgb(222,198,49)" fg:x="543" fg:w="1"/><text x="43.7596%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.5096%" y="245" width="0.0801%" height="15" fill="rgb(239,81,13)" fg:x="543" fg:w="1"/><text x="43.7596%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.5897%" y="261" width="0.0801%" height="15" fill="rgb(216,128,11)" fg:x="544" fg:w="1"/><text x="43.8397%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="43.5897%" y="437" width="0.1603%" height="15" fill="rgb(247,156,8)" fg:x="544" fg:w="2"/><text x="43.8397%" y="447.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="43.5897%" y="421" width="0.1603%" height="15" fill="rgb(219,173,1)" fg:x="544" fg:w="2"/><text x="43.8397%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="43.5897%" y="405" width="0.1603%" height="15" fill="rgb(227,42,24)" fg:x="544" fg:w="2"/><text x="43.8397%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="43.5897%" y="389" width="0.1603%" height="15" fill="rgb(253,219,50)" fg:x="544" fg:w="2"/><text x="43.8397%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.5897%" y="373" width="0.1603%" height="15" fill="rgb(215,191,54)" fg:x="544" fg:w="2"/><text x="43.8397%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="43.5897%" y="357" width="0.1603%" height="15" fill="rgb(238,83,12)" fg:x="544" fg:w="2"/><text x="43.8397%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.5897%" y="341" width="0.1603%" height="15" fill="rgb(205,124,9)" fg:x="544" fg:w="2"/><text x="43.8397%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="43.5897%" y="325" width="0.1603%" height="15" fill="rgb(253,174,7)" fg:x="544" fg:w="2"/><text x="43.8397%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.5897%" y="309" width="0.1603%" height="15" fill="rgb(206,134,49)" fg:x="544" fg:w="2"/><text x="43.8397%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="43.5897%" y="293" width="0.1603%" height="15" fill="rgb(221,89,20)" fg:x="544" fg:w="2"/><text x="43.8397%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.5897%" y="277" width="0.1603%" height="15" fill="rgb(240,205,13)" fg:x="544" fg:w="2"/><text x="43.8397%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.6699%" y="261" width="0.0801%" height="15" fill="rgb(237,174,32)" fg:x="545" fg:w="1"/><text x="43.9199%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.6699%" y="245" width="0.0801%" height="15" fill="rgb(226,12,15)" fg:x="545" fg:w="1"/><text x="43.9199%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.7500%" y="373" width="0.0801%" height="15" fill="rgb(245,160,52)" fg:x="546" fg:w="1"/><text x="44.0000%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.7500%" y="357" width="0.0801%" height="15" fill="rgb(253,80,21)" fg:x="546" fg:w="1"/><text x="44.0000%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="43.7500%" y="341" width="0.0801%" height="15" fill="rgb(231,225,22)" fg:x="546" fg:w="1"/><text x="44.0000%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="43.8301%" y="325" width="0.0801%" height="15" fill="rgb(253,185,12)" fg:x="547" fg:w="1"/><text x="44.0801%" y="335.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="43.7500%" y="421" width="0.3205%" height="15" fill="rgb(234,197,21)" fg:x="546" fg:w="4"/><text x="44.0000%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="43.7500%" y="405" width="0.3205%" height="15" fill="rgb(210,47,30)" fg:x="546" fg:w="4"/><text x="44.0000%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="43.7500%" y="389" width="0.3205%" height="15" fill="rgb(246,139,27)" fg:x="546" fg:w="4"/><text x="44.0000%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="43.8301%" y="373" width="0.2404%" height="15" fill="rgb(226,130,16)" fg:x="547" fg:w="3"/><text x="44.0801%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="43.8301%" y="357" width="0.2404%" height="15" fill="rgb(237,208,20)" fg:x="547" fg:w="3"/><text x="44.0801%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="43.8301%" y="341" width="0.2404%" height="15" fill="rgb(245,186,28)" fg:x="547" fg:w="3"/><text x="44.0801%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="43.9103%" y="325" width="0.1603%" height="15" fill="rgb(238,105,39)" fg:x="548" fg:w="2"/><text x="44.1603%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="43.9103%" y="309" width="0.1603%" height="15" fill="rgb(253,228,11)" fg:x="548" fg:w="2"/><text x="44.1603%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="43.9103%" y="293" width="0.1603%" height="15" fill="rgb(224,136,38)" fg:x="548" fg:w="2"/><text x="44.1603%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="43.9103%" y="277" width="0.1603%" height="15" fill="rgb(211,3,25)" fg:x="548" fg:w="2"/><text x="44.1603%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="43.9103%" y="261" width="0.1603%" height="15" fill="rgb(238,66,34)" fg:x="548" fg:w="2"/><text x="44.1603%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="43.9103%" y="245" width="0.1603%" height="15" fill="rgb(223,188,11)" fg:x="548" fg:w="2"/><text x="44.1603%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.9904%" y="229" width="0.0801%" height="15" fill="rgb(221,10,35)" fg:x="549" fg:w="1"/><text x="44.2404%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="43.9904%" y="213" width="0.0801%" height="15" fill="rgb(223,18,44)" fg:x="549" fg:w="1"/><text x="44.2404%" y="223.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="43.9904%" y="197" width="0.0801%" height="15" fill="rgb(220,97,41)" fg:x="549" fg:w="1"/><text x="44.2404%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.0705%" y="389" width="0.0801%" height="15" fill="rgb(206,95,45)" fg:x="550" fg:w="1"/><text x="44.3205%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.0705%" y="373" width="0.0801%" height="15" fill="rgb(209,96,13)" fg:x="550" fg:w="1"/><text x="44.3205%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="44.1506%" y="341" width="0.0801%" height="15" fill="rgb(237,39,34)" fg:x="551" fg:w="1"/><text x="44.4006%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="44.1506%" y="325" width="0.0801%" height="15" fill="rgb(213,49,47)" fg:x="551" fg:w="1"/><text x="44.4006%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="44.1506%" y="309" width="0.0801%" height="15" fill="rgb(205,107,27)" fg:x="551" fg:w="1"/><text x="44.4006%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="44.1506%" y="293" width="0.0801%" height="15" fill="rgb(212,142,9)" fg:x="551" fg:w="1"/><text x="44.4006%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="44.1506%" y="277" width="0.0801%" height="15" fill="rgb(226,182,0)" fg:x="551" fg:w="1"/><text x="44.4006%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="44.1506%" y="261" width="0.0801%" height="15" fill="rgb(231,3,53)" fg:x="551" fg:w="1"/><text x="44.4006%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="44.1506%" y="245" width="0.0801%" height="15" fill="rgb(246,111,28)" fg:x="551" fg:w="1"/><text x="44.4006%" y="255.50"></text></g><g><title>core::iter::adapters::try_process (24 samples, 1.92%)</title><rect x="42.3878%" y="565" width="1.9231%" height="15" fill="rgb(254,183,7)" fg:x="529" fg:w="24"/><text x="42.6378%" y="575.50">c..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (17 samples, 1.36%)</title><rect x="42.9487%" y="549" width="1.3622%" height="15" fill="rgb(247,177,28)" fg:x="536" fg:w="17"/><text x="43.1987%" y="559.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (15 samples, 1.20%)</title><rect x="43.1090%" y="533" width="1.2019%" height="15" fill="rgb(244,43,1)" fg:x="538" fg:w="15"/><text x="43.3590%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (15 samples, 1.20%)</title><rect x="43.1090%" y="517" width="1.2019%" height="15" fill="rgb(207,2,35)" fg:x="538" fg:w="15"/><text x="43.3590%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (14 samples, 1.12%)</title><rect x="43.1891%" y="501" width="1.1218%" height="15" fill="rgb(213,83,22)" fg:x="539" fg:w="14"/><text x="43.4391%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (14 samples, 1.12%)</title><rect x="43.1891%" y="485" width="1.1218%" height="15" fill="rgb(246,212,13)" fg:x="539" fg:w="14"/><text x="43.4391%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (14 samples, 1.12%)</title><rect x="43.1891%" y="469" width="1.1218%" height="15" fill="rgb(213,127,46)" fg:x="539" fg:w="14"/><text x="43.4391%" y="479.50"></text></g><g><title>engine::internal::Entities::add_persisted (14 samples, 1.12%)</title><rect x="43.1891%" y="453" width="1.1218%" height="15" fill="rgb(219,215,39)" fg:x="539" fg:w="14"/><text x="43.4391%" y="463.50"></text></g><g><title>kernel::model::entity::Entity::from_str (7 samples, 0.56%)</title><rect x="43.7500%" y="437" width="0.5609%" height="15" fill="rgb(227,99,17)" fg:x="546" fg:w="7"/><text x="44.0000%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="44.0705%" y="421" width="0.2404%" height="15" fill="rgb(208,155,18)" fg:x="550" fg:w="3"/><text x="44.3205%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="44.0705%" y="405" width="0.2404%" height="15" fill="rgb(223,204,38)" fg:x="550" fg:w="3"/><text x="44.3205%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="44.1506%" y="389" width="0.1603%" height="15" fill="rgb(212,114,21)" fg:x="551" fg:w="2"/><text x="44.4006%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.1506%" y="373" width="0.1603%" height="15" fill="rgb(250,74,13)" fg:x="551" fg:w="2"/><text x="44.4006%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="44.1506%" y="357" width="0.1603%" height="15" fill="rgb(234,7,1)" fg:x="551" fg:w="2"/><text x="44.4006%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.2308%" y="341" width="0.0801%" height="15" fill="rgb(207,138,31)" fg:x="552" fg:w="1"/><text x="44.4808%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="44.2308%" y="325" width="0.0801%" height="15" fill="rgb(215,186,42)" fg:x="552" fg:w="1"/><text x="44.4808%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="44.2308%" y="309" width="0.0801%" height="15" fill="rgb(229,205,49)" fg:x="552" fg:w="1"/><text x="44.4808%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.2308%" y="293" width="0.0801%" height="15" fill="rgb(216,156,32)" fg:x="552" fg:w="1"/><text x="44.4808%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="44.2308%" y="277" width="0.0801%" height="15" fill="rgb(238,7,21)" fg:x="552" fg:w="1"/><text x="44.4808%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="44.2308%" y="261" width="0.0801%" height="15" fill="rgb(249,190,22)" fg:x="552" fg:w="1"/><text x="44.4808%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.2308%" y="245" width="0.0801%" height="15" fill="rgb(253,51,31)" fg:x="552" fg:w="1"/><text x="44.4808%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.2308%" y="229" width="0.0801%" height="15" fill="rgb(237,90,54)" fg:x="552" fg:w="1"/><text x="44.4808%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (3 samples, 0.24%)</title><rect x="44.3109%" y="565" width="0.2404%" height="15" fill="rgb(250,214,33)" fg:x="553" fg:w="3"/><text x="44.5609%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="44.3910%" y="549" width="0.1603%" height="15" fill="rgb(237,10,49)" fg:x="554" fg:w="2"/><text x="44.6410%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.4712%" y="533" width="0.0801%" height="15" fill="rgb(241,56,36)" fg:x="555" fg:w="1"/><text x="44.7212%" y="543.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.6314%" y="533" width="0.0801%" height="15" fill="rgb(227,164,12)" fg:x="557" fg:w="1"/><text x="44.8814%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.6314%" y="517" width="0.0801%" height="15" fill="rgb(249,149,35)" fg:x="557" fg:w="1"/><text x="44.8814%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.6314%" y="501" width="0.0801%" height="15" fill="rgb(238,227,50)" fg:x="557" fg:w="1"/><text x="44.8814%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.6314%" y="485" width="0.0801%" height="15" fill="rgb(235,102,45)" fg:x="557" fg:w="1"/><text x="44.8814%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.6314%" y="469" width="0.0801%" height="15" fill="rgb(211,10,38)" fg:x="557" fg:w="1"/><text x="44.8814%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.6314%" y="453" width="0.0801%" height="15" fill="rgb(219,77,48)" fg:x="557" fg:w="1"/><text x="44.8814%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.6314%" y="437" width="0.0801%" height="15" fill="rgb(246,6,15)" fg:x="557" fg:w="1"/><text x="44.8814%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.6314%" y="421" width="0.0801%" height="15" fill="rgb(207,220,2)" fg:x="557" fg:w="1"/><text x="44.8814%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.6314%" y="405" width="0.0801%" height="15" fill="rgb(242,48,14)" fg:x="557" fg:w="1"/><text x="44.8814%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.6314%" y="389" width="0.0801%" height="15" fill="rgb(218,19,27)" fg:x="557" fg:w="1"/><text x="44.8814%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.6314%" y="373" width="0.0801%" height="15" fill="rgb(228,0,35)" fg:x="557" fg:w="1"/><text x="44.8814%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.6314%" y="357" width="0.0801%" height="15" fill="rgb(244,142,54)" fg:x="557" fg:w="1"/><text x="44.8814%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.6314%" y="341" width="0.0801%" height="15" fill="rgb(243,217,40)" fg:x="557" fg:w="1"/><text x="44.8814%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.6314%" y="325" width="0.0801%" height="15" fill="rgb(207,114,16)" fg:x="557" fg:w="1"/><text x="44.8814%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.6314%" y="309" width="0.0801%" height="15" fill="rgb(224,33,25)" fg:x="557" fg:w="1"/><text x="44.8814%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.6314%" y="293" width="0.0801%" height="15" fill="rgb(230,93,54)" fg:x="557" fg:w="1"/><text x="44.8814%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="44.8718%" y="469" width="0.0801%" height="15" fill="rgb(224,56,24)" fg:x="560" fg:w="1"/><text x="45.1218%" y="479.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="44.8718%" y="453" width="0.0801%" height="15" fill="rgb(235,189,50)" fg:x="560" fg:w="1"/><text x="45.1218%" y="463.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (4 samples, 0.32%)</title><rect x="44.7115%" y="533" width="0.3205%" height="15" fill="rgb(242,173,8)" fg:x="558" fg:w="4"/><text x="44.9615%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.32%)</title><rect x="44.7115%" y="517" width="0.3205%" height="15" fill="rgb(209,206,10)" fg:x="558" fg:w="4"/><text x="44.9615%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="44.7115%" y="501" width="0.3205%" height="15" fill="rgb(213,182,44)" fg:x="558" fg:w="4"/><text x="44.9615%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (3 samples, 0.24%)</title><rect x="44.7917%" y="485" width="0.2404%" height="15" fill="rgb(243,51,15)" fg:x="559" fg:w="3"/><text x="45.0417%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.9519%" y="469" width="0.0801%" height="15" fill="rgb(241,13,14)" fg:x="561" fg:w="1"/><text x="45.2019%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="45.0321%" y="533" width="0.0801%" height="15" fill="rgb(239,147,24)" fg:x="562" fg:w="1"/><text x="45.2821%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="45.0321%" y="517" width="0.0801%" height="15" fill="rgb(223,129,16)" fg:x="562" fg:w="1"/><text x="45.2821%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="45.2724%" y="501" width="0.0801%" height="15" fill="rgb(209,169,13)" fg:x="565" fg:w="1"/><text x="45.5224%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.2724%" y="485" width="0.0801%" height="15" fill="rgb(235,159,41)" fg:x="565" fg:w="1"/><text x="45.5224%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="45.4327%" y="421" width="0.0801%" height="15" fill="rgb(223,219,48)" fg:x="567" fg:w="1"/><text x="45.6827%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.5128%" y="421" width="0.0801%" height="15" fill="rgb(236,80,13)" fg:x="568" fg:w="1"/><text x="45.7628%" y="431.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (41 samples, 3.29%)</title><rect x="42.3878%" y="581" width="3.2853%" height="15" fill="rgb(213,5,6)" fg:x="529" fg:w="41"/><text x="42.6378%" y="591.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (14 samples, 1.12%)</title><rect x="44.5513%" y="565" width="1.1218%" height="15" fill="rgb(205,59,21)" fg:x="556" fg:w="14"/><text x="44.8013%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (14 samples, 1.12%)</title><rect x="44.5513%" y="549" width="1.1218%" height="15" fill="rgb(247,137,35)" fg:x="556" fg:w="14"/><text x="44.8013%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="45.1122%" y="533" width="0.5609%" height="15" fill="rgb(242,208,28)" fg:x="563" fg:w="7"/><text x="45.3622%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="45.1122%" y="517" width="0.5609%" height="15" fill="rgb(245,62,25)" fg:x="563" fg:w="7"/><text x="45.3622%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (4 samples, 0.32%)</title><rect x="45.3526%" y="501" width="0.3205%" height="15" fill="rgb(233,99,54)" fg:x="566" fg:w="4"/><text x="45.6026%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (4 samples, 0.32%)</title><rect x="45.3526%" y="485" width="0.3205%" height="15" fill="rgb(213,10,37)" fg:x="566" fg:w="4"/><text x="45.6026%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="45.4327%" y="469" width="0.2404%" height="15" fill="rgb(235,143,30)" fg:x="567" fg:w="3"/><text x="45.6827%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="45.4327%" y="453" width="0.2404%" height="15" fill="rgb(250,146,33)" fg:x="567" fg:w="3"/><text x="45.6827%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="45.4327%" y="437" width="0.2404%" height="15" fill="rgb(226,198,42)" fg:x="567" fg:w="3"/><text x="45.6827%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="45.5929%" y="421" width="0.0801%" height="15" fill="rgb(222,55,6)" fg:x="569" fg:w="1"/><text x="45.8429%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.8333%" y="389" width="0.0801%" height="15" fill="rgb(213,224,31)" fg:x="572" fg:w="1"/><text x="46.0833%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.8333%" y="373" width="0.0801%" height="15" fill="rgb(226,103,35)" fg:x="572" fg:w="1"/><text x="46.0833%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.8333%" y="357" width="0.0801%" height="15" fill="rgb(205,66,45)" fg:x="572" fg:w="1"/><text x="46.0833%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="45.8333%" y="341" width="0.0801%" height="15" fill="rgb(226,51,42)" fg:x="572" fg:w="1"/><text x="46.0833%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="45.8333%" y="325" width="0.0801%" height="15" fill="rgb(206,69,1)" fg:x="572" fg:w="1"/><text x="46.0833%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="45.8333%" y="309" width="0.0801%" height="15" fill="rgb(213,228,47)" fg:x="572" fg:w="1"/><text x="46.0833%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.8333%" y="293" width="0.0801%" height="15" fill="rgb(224,204,18)" fg:x="572" fg:w="1"/><text x="46.0833%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="45.8333%" y="485" width="0.1603%" height="15" fill="rgb(253,187,47)" fg:x="572" fg:w="2"/><text x="46.0833%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="45.8333%" y="469" width="0.1603%" height="15" fill="rgb(232,61,2)" fg:x="572" fg:w="2"/><text x="46.0833%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="45.8333%" y="453" width="0.1603%" height="15" fill="rgb(213,132,35)" fg:x="572" fg:w="2"/><text x="46.0833%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="45.8333%" y="437" width="0.1603%" height="15" fill="rgb(247,33,21)" fg:x="572" fg:w="2"/><text x="46.0833%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="45.8333%" y="421" width="0.1603%" height="15" fill="rgb(233,71,46)" fg:x="572" fg:w="2"/><text x="46.0833%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="45.8333%" y="405" width="0.1603%" height="15" fill="rgb(222,173,43)" fg:x="572" fg:w="2"/><text x="46.0833%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="45.9135%" y="389" width="0.0801%" height="15" fill="rgb(249,218,47)" fg:x="573" fg:w="1"/><text x="46.1635%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="45.9135%" y="373" width="0.0801%" height="15" fill="rgb(254,185,48)" fg:x="573" fg:w="1"/><text x="46.1635%" y="383.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="45.7532%" y="533" width="0.3205%" height="15" fill="rgb(252,165,50)" fg:x="571" fg:w="4"/><text x="46.0032%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="45.7532%" y="517" width="0.3205%" height="15" fill="rgb(206,219,6)" fg:x="571" fg:w="4"/><text x="46.0032%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="45.7532%" y="501" width="0.3205%" height="15" fill="rgb(212,212,45)" fg:x="571" fg:w="4"/><text x="46.0032%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.9936%" y="485" width="0.0801%" height="15" fill="rgb(221,31,9)" fg:x="574" fg:w="1"/><text x="46.2436%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="46.2340%" y="389" width="0.0801%" height="15" fill="rgb(234,198,39)" fg:x="577" fg:w="1"/><text x="46.4840%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.2340%" y="373" width="0.0801%" height="15" fill="rgb(252,145,46)" fg:x="577" fg:w="1"/><text x="46.4840%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.3141%" y="357" width="0.0801%" height="15" fill="rgb(237,149,0)" fg:x="578" fg:w="1"/><text x="46.5641%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.3141%" y="341" width="0.0801%" height="15" fill="rgb(229,65,5)" fg:x="578" fg:w="1"/><text x="46.5641%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.3141%" y="325" width="0.0801%" height="15" fill="rgb(235,60,36)" fg:x="578" fg:w="1"/><text x="46.5641%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.3141%" y="309" width="0.0801%" height="15" fill="rgb(222,47,18)" fg:x="578" fg:w="1"/><text x="46.5641%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.3141%" y="293" width="0.0801%" height="15" fill="rgb(235,114,22)" fg:x="578" fg:w="1"/><text x="46.5641%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.3141%" y="277" width="0.0801%" height="15" fill="rgb(209,167,11)" fg:x="578" fg:w="1"/><text x="46.5641%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.3141%" y="261" width="0.0801%" height="15" fill="rgb(251,73,18)" fg:x="578" fg:w="1"/><text x="46.5641%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.3141%" y="245" width="0.0801%" height="15" fill="rgb(217,60,17)" fg:x="578" fg:w="1"/><text x="46.5641%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.3141%" y="229" width="0.0801%" height="15" fill="rgb(224,36,37)" fg:x="578" fg:w="1"/><text x="46.5641%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.3141%" y="213" width="0.0801%" height="15" fill="rgb(211,21,32)" fg:x="578" fg:w="1"/><text x="46.5641%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="46.3141%" y="197" width="0.0801%" height="15" fill="rgb(231,55,48)" fg:x="578" fg:w="1"/><text x="46.5641%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="46.3141%" y="181" width="0.0801%" height="15" fill="rgb(227,42,18)" fg:x="578" fg:w="1"/><text x="46.5641%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="46.3141%" y="165" width="0.0801%" height="15" fill="rgb(217,2,27)" fg:x="578" fg:w="1"/><text x="46.5641%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="46.3141%" y="149" width="0.0801%" height="15" fill="rgb(251,138,23)" fg:x="578" fg:w="1"/><text x="46.5641%" y="159.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="46.3141%" y="133" width="0.0801%" height="15" fill="rgb(226,184,11)" fg:x="578" fg:w="1"/><text x="46.5641%" y="143.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="46.3141%" y="117" width="0.0801%" height="15" fill="rgb(242,142,12)" fg:x="578" fg:w="1"/><text x="46.5641%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="46.3942%" y="357" width="0.0801%" height="15" fill="rgb(234,187,18)" fg:x="579" fg:w="1"/><text x="46.6442%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="46.2340%" y="405" width="0.4006%" height="15" fill="rgb(237,44,42)" fg:x="577" fg:w="5"/><text x="46.4840%" y="415.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="46.3141%" y="389" width="0.3205%" height="15" fill="rgb(211,90,23)" fg:x="578" fg:w="4"/><text x="46.5641%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="46.3141%" y="373" width="0.3205%" height="15" fill="rgb(207,81,18)" fg:x="578" fg:w="4"/><text x="46.5641%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="46.4744%" y="357" width="0.1603%" height="15" fill="rgb(222,107,28)" fg:x="580" fg:w="2"/><text x="46.7244%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="46.4744%" y="341" width="0.1603%" height="15" fill="rgb(237,83,52)" fg:x="580" fg:w="2"/><text x="46.7244%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="46.4744%" y="325" width="0.1603%" height="15" fill="rgb(208,67,11)" fg:x="580" fg:w="2"/><text x="46.7244%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="46.4744%" y="309" width="0.1603%" height="15" fill="rgb(249,157,49)" fg:x="580" fg:w="2"/><text x="46.7244%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="46.4744%" y="293" width="0.1603%" height="15" fill="rgb(243,200,1)" fg:x="580" fg:w="2"/><text x="46.7244%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="46.4744%" y="277" width="0.1603%" height="15" fill="rgb(225,162,37)" fg:x="580" fg:w="2"/><text x="46.7244%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.5545%" y="261" width="0.0801%" height="15" fill="rgb(242,92,13)" fg:x="581" fg:w="1"/><text x="46.8045%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.5545%" y="245" width="0.0801%" height="15" fill="rgb(220,43,36)" fg:x="581" fg:w="1"/><text x="46.8045%" y="255.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="46.6346%" y="389" width="0.0801%" height="15" fill="rgb(213,165,48)" fg:x="582" fg:w="1"/><text x="46.8846%" y="399.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (9 samples, 0.72%)</title><rect x="46.2340%" y="421" width="0.7212%" height="15" fill="rgb(227,200,9)" fg:x="577" fg:w="9"/><text x="46.4840%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="46.6346%" y="405" width="0.3205%" height="15" fill="rgb(221,222,28)" fg:x="582" fg:w="4"/><text x="46.8846%" y="415.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="46.7147%" y="389" width="0.2404%" height="15" fill="rgb(223,142,26)" fg:x="583" fg:w="3"/><text x="46.9647%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="46.7147%" y="373" width="0.2404%" height="15" fill="rgb(243,46,9)" fg:x="583" fg:w="3"/><text x="46.9647%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="46.7147%" y="357" width="0.2404%" height="15" fill="rgb(250,56,11)" fg:x="583" fg:w="3"/><text x="46.9647%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="46.7147%" y="341" width="0.2404%" height="15" fill="rgb(229,113,5)" fg:x="583" fg:w="3"/><text x="46.9647%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="46.7147%" y="325" width="0.2404%" height="15" fill="rgb(244,108,28)" fg:x="583" fg:w="3"/><text x="46.9647%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="46.7147%" y="309" width="0.2404%" height="15" fill="rgb(242,119,50)" fg:x="583" fg:w="3"/><text x="46.9647%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="46.7147%" y="293" width="0.2404%" height="15" fill="rgb(224,164,23)" fg:x="583" fg:w="3"/><text x="46.9647%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="46.7147%" y="277" width="0.2404%" height="15" fill="rgb(214,227,44)" fg:x="583" fg:w="3"/><text x="46.9647%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="46.7949%" y="261" width="0.1603%" height="15" fill="rgb(238,202,4)" fg:x="584" fg:w="2"/><text x="47.0449%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="46.7949%" y="245" width="0.1603%" height="15" fill="rgb(213,190,30)" fg:x="584" fg:w="2"/><text x="47.0449%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.8750%" y="229" width="0.0801%" height="15" fill="rgb(239,15,2)" fg:x="585" fg:w="1"/><text x="47.1250%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.8750%" y="213" width="0.0801%" height="15" fill="rgb(249,229,4)" fg:x="585" fg:w="1"/><text x="47.1250%" y="223.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (10 samples, 0.80%)</title><rect x="46.2340%" y="437" width="0.8013%" height="15" fill="rgb(239,75,44)" fg:x="577" fg:w="10"/><text x="46.4840%" y="447.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="46.9551%" y="421" width="0.0801%" height="15" fill="rgb(251,206,23)" fg:x="586" fg:w="1"/><text x="47.2051%" y="431.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="46.9551%" y="405" width="0.0801%" height="15" fill="rgb(215,208,0)" fg:x="586" fg:w="1"/><text x="47.2051%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="47.1154%" y="389" width="0.2404%" height="15" fill="rgb(230,75,50)" fg:x="588" fg:w="3"/><text x="47.3654%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="47.1955%" y="373" width="0.1603%" height="15" fill="rgb(246,180,39)" fg:x="589" fg:w="2"/><text x="47.4455%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="47.1955%" y="357" width="0.1603%" height="15" fill="rgb(249,175,24)" fg:x="589" fg:w="2"/><text x="47.4455%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="47.1955%" y="341" width="0.1603%" height="15" fill="rgb(247,176,22)" fg:x="589" fg:w="2"/><text x="47.4455%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="47.3558%" y="389" width="0.0801%" height="15" fill="rgb(241,100,24)" fg:x="591" fg:w="1"/><text x="47.6058%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.4359%" y="293" width="0.0801%" height="15" fill="rgb(233,4,35)" fg:x="592" fg:w="1"/><text x="47.6859%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.4359%" y="277" width="0.0801%" height="15" fill="rgb(211,164,46)" fg:x="592" fg:w="1"/><text x="47.6859%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="47.0353%" y="437" width="0.5609%" height="15" fill="rgb(242,99,53)" fg:x="587" fg:w="7"/><text x="47.2853%" y="447.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="47.0353%" y="421" width="0.5609%" height="15" fill="rgb(243,45,33)" fg:x="587" fg:w="7"/><text x="47.2853%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="47.1154%" y="405" width="0.4808%" height="15" fill="rgb(217,55,21)" fg:x="588" fg:w="6"/><text x="47.3654%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="47.4359%" y="389" width="0.1603%" height="15" fill="rgb(245,145,46)" fg:x="592" fg:w="2"/><text x="47.6859%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="47.4359%" y="373" width="0.1603%" height="15" fill="rgb(215,112,45)" fg:x="592" fg:w="2"/><text x="47.6859%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="47.4359%" y="357" width="0.1603%" height="15" fill="rgb(228,104,16)" fg:x="592" fg:w="2"/><text x="47.6859%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="47.4359%" y="341" width="0.1603%" height="15" fill="rgb(239,186,38)" fg:x="592" fg:w="2"/><text x="47.6859%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="47.4359%" y="325" width="0.1603%" height="15" fill="rgb(228,38,35)" fg:x="592" fg:w="2"/><text x="47.6859%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="47.4359%" y="309" width="0.1603%" height="15" fill="rgb(251,42,40)" fg:x="592" fg:w="2"/><text x="47.6859%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.5160%" y="293" width="0.0801%" height="15" fill="rgb(210,51,19)" fg:x="593" fg:w="1"/><text x="47.7660%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.5160%" y="277" width="0.0801%" height="15" fill="rgb(236,94,42)" fg:x="593" fg:w="1"/><text x="47.7660%" y="287.50"></text></g><g><title>engine::internal::EntityMap::add_entity (7 samples, 0.56%)</title><rect x="47.5962%" y="437" width="0.5609%" height="15" fill="rgb(239,167,16)" fg:x="594" fg:w="7"/><text x="47.8462%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.56%)</title><rect x="47.5962%" y="421" width="0.5609%" height="15" fill="rgb(252,175,31)" fg:x="594" fg:w="7"/><text x="47.8462%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.56%)</title><rect x="47.5962%" y="405" width="0.5609%" height="15" fill="rgb(206,166,30)" fg:x="594" fg:w="7"/><text x="47.8462%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.56%)</title><rect x="47.5962%" y="389" width="0.5609%" height="15" fill="rgb(206,209,37)" fg:x="594" fg:w="7"/><text x="47.8462%" y="399.50"></text></g><g><title>__libc_malloc (6 samples, 0.48%)</title><rect x="47.6763%" y="373" width="0.4808%" height="15" fill="rgb(226,91,4)" fg:x="595" fg:w="6"/><text x="47.9263%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="48.1571%" y="373" width="0.0801%" height="15" fill="rgb(222,167,0)" fg:x="601" fg:w="1"/><text x="48.4071%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="48.1571%" y="357" width="0.0801%" height="15" fill="rgb(211,70,14)" fg:x="601" fg:w="1"/><text x="48.4071%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="48.3173%" y="341" width="0.2404%" height="15" fill="rgb(214,84,42)" fg:x="603" fg:w="3"/><text x="48.5673%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="48.3974%" y="325" width="0.1603%" height="15" fill="rgb(235,157,37)" fg:x="604" fg:w="2"/><text x="48.6474%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="48.5577%" y="341" width="0.1603%" height="15" fill="rgb(225,13,6)" fg:x="606" fg:w="2"/><text x="48.8077%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="48.5577%" y="325" width="0.1603%" height="15" fill="rgb(205,202,1)" fg:x="606" fg:w="2"/><text x="48.8077%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="48.6378%" y="309" width="0.0801%" height="15" fill="rgb(232,195,26)" fg:x="607" fg:w="1"/><text x="48.8878%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="48.7981%" y="277" width="0.0801%" height="15" fill="rgb(208,102,26)" fg:x="609" fg:w="1"/><text x="49.0481%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="48.7981%" y="261" width="0.0801%" height="15" fill="rgb(215,41,39)" fg:x="609" fg:w="1"/><text x="49.0481%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="48.7981%" y="293" width="0.2404%" height="15" fill="rgb(247,139,11)" fg:x="609" fg:w="3"/><text x="49.0481%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="48.8782%" y="277" width="0.1603%" height="15" fill="rgb(243,99,6)" fg:x="610" fg:w="2"/><text x="49.1282%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.9583%" y="261" width="0.0801%" height="15" fill="rgb(230,168,48)" fg:x="611" fg:w="1"/><text x="49.2083%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="48.9583%" y="245" width="0.0801%" height="15" fill="rgb(238,227,13)" fg:x="611" fg:w="1"/><text x="49.2083%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.9583%" y="229" width="0.0801%" height="15" fill="rgb(209,109,13)" fg:x="611" fg:w="1"/><text x="49.2083%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="48.9583%" y="213" width="0.0801%" height="15" fill="rgb(228,195,1)" fg:x="611" fg:w="1"/><text x="49.2083%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.9583%" y="197" width="0.0801%" height="15" fill="rgb(230,218,0)" fg:x="611" fg:w="1"/><text x="49.2083%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="48.9583%" y="181" width="0.0801%" height="15" fill="rgb(206,1,45)" fg:x="611" fg:w="1"/><text x="49.2083%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.9583%" y="165" width="0.0801%" height="15" fill="rgb(209,124,26)" fg:x="611" fg:w="1"/><text x="49.2083%" y="175.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.96%)</title><rect x="48.1571%" y="421" width="0.9615%" height="15" fill="rgb(220,59,8)" fg:x="601" fg:w="12"/><text x="48.4071%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12 samples, 0.96%)</title><rect x="48.1571%" y="405" width="0.9615%" height="15" fill="rgb(251,41,37)" fg:x="601" fg:w="12"/><text x="48.4071%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="48.1571%" y="389" width="0.9615%" height="15" fill="rgb(239,152,21)" fg:x="601" fg:w="12"/><text x="48.4071%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.88%)</title><rect x="48.2372%" y="373" width="0.8814%" height="15" fill="rgb(226,32,1)" fg:x="602" fg:w="11"/><text x="48.4872%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="48.3173%" y="357" width="0.8013%" height="15" fill="rgb(230,154,36)" fg:x="603" fg:w="10"/><text x="48.5673%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="48.7179%" y="341" width="0.4006%" height="15" fill="rgb(208,228,43)" fg:x="608" fg:w="5"/><text x="48.9679%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="48.7179%" y="325" width="0.4006%" height="15" fill="rgb(214,203,3)" fg:x="608" fg:w="5"/><text x="48.9679%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="48.7981%" y="309" width="0.3205%" height="15" fill="rgb(207,149,29)" fg:x="609" fg:w="4"/><text x="49.0481%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="49.0385%" y="293" width="0.0801%" height="15" fill="rgb(250,105,7)" fg:x="612" fg:w="1"/><text x="49.2885%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="49.0385%" y="277" width="0.0801%" height="15" fill="rgb(232,222,16)" fg:x="612" fg:w="1"/><text x="49.2885%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="49.0385%" y="261" width="0.0801%" height="15" fill="rgb(209,32,24)" fg:x="612" fg:w="1"/><text x="49.2885%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="49.0385%" y="245" width="0.0801%" height="15" fill="rgb(225,13,6)" fg:x="612" fg:w="1"/><text x="49.2885%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="49.1186%" y="389" width="0.0801%" height="15" fill="rgb(245,226,26)" fg:x="613" fg:w="1"/><text x="49.3686%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.1987%" y="357" width="0.0801%" height="15" fill="rgb(229,178,27)" fg:x="614" fg:w="1"/><text x="49.4487%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="49.1987%" y="341" width="0.0801%" height="15" fill="rgb(205,227,28)" fg:x="614" fg:w="1"/><text x="49.4487%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="49.2788%" y="245" width="0.0801%" height="15" fill="rgb(210,191,45)" fg:x="615" fg:w="1"/><text x="49.5288%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="49.2788%" y="277" width="0.1603%" height="15" fill="rgb(206,124,16)" fg:x="615" fg:w="2"/><text x="49.5288%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="49.2788%" y="261" width="0.1603%" height="15" fill="rgb(210,162,0)" fg:x="615" fg:w="2"/><text x="49.5288%" y="271.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="49.3590%" y="245" width="0.0801%" height="15" fill="rgb(211,54,38)" fg:x="616" fg:w="1"/><text x="49.6090%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="49.3590%" y="229" width="0.0801%" height="15" fill="rgb(248,192,3)" fg:x="616" fg:w="1"/><text x="49.6090%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="49.3590%" y="213" width="0.0801%" height="15" fill="rgb(233,187,18)" fg:x="616" fg:w="1"/><text x="49.6090%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="49.3590%" y="197" width="0.0801%" height="15" fill="rgb(237,208,14)" fg:x="616" fg:w="1"/><text x="49.6090%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="49.3590%" y="181" width="0.0801%" height="15" fill="rgb(212,77,1)" fg:x="616" fg:w="1"/><text x="49.6090%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="49.3590%" y="165" width="0.0801%" height="15" fill="rgb(210,163,22)" fg:x="616" fg:w="1"/><text x="49.6090%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.3590%" y="149" width="0.0801%" height="15" fill="rgb(250,58,28)" fg:x="616" fg:w="1"/><text x="49.6090%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="49.2788%" y="309" width="0.2404%" height="15" fill="rgb(254,28,41)" fg:x="615" fg:w="3"/><text x="49.5288%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="49.2788%" y="293" width="0.2404%" height="15" fill="rgb(237,162,36)" fg:x="615" fg:w="3"/><text x="49.5288%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.4391%" y="277" width="0.0801%" height="15" fill="rgb(232,56,6)" fg:x="617" fg:w="1"/><text x="49.6891%" y="287.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="49.5192%" y="245" width="0.0801%" height="15" fill="rgb(216,127,42)" fg:x="618" fg:w="1"/><text x="49.7692%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="49.5192%" y="229" width="0.0801%" height="15" fill="rgb(241,69,15)" fg:x="618" fg:w="1"/><text x="49.7692%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="49.2788%" y="341" width="0.4006%" height="15" fill="rgb(227,180,19)" fg:x="615" fg:w="5"/><text x="49.5288%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="49.2788%" y="325" width="0.4006%" height="15" fill="rgb(231,188,29)" fg:x="615" fg:w="5"/><text x="49.5288%" y="335.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="49.5192%" y="309" width="0.1603%" height="15" fill="rgb(224,176,27)" fg:x="618" fg:w="2"/><text x="49.7692%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="49.5192%" y="293" width="0.1603%" height="15" fill="rgb(249,214,19)" fg:x="618" fg:w="2"/><text x="49.7692%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="49.5192%" y="277" width="0.1603%" height="15" fill="rgb(240,0,4)" fg:x="618" fg:w="2"/><text x="49.7692%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="49.5192%" y="261" width="0.1603%" height="15" fill="rgb(233,28,41)" fg:x="618" fg:w="2"/><text x="49.7692%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.5994%" y="245" width="0.0801%" height="15" fill="rgb(220,90,51)" fg:x="619" fg:w="1"/><text x="49.8494%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="49.6795%" y="341" width="0.0801%" height="15" fill="rgb(250,52,22)" fg:x="620" fg:w="1"/><text x="49.9295%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="49.6795%" y="325" width="0.0801%" height="15" fill="rgb(231,152,36)" fg:x="620" fg:w="1"/><text x="49.9295%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="49.6795%" y="309" width="0.0801%" height="15" fill="rgb(250,218,4)" fg:x="620" fg:w="1"/><text x="49.9295%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="49.6795%" y="293" width="0.0801%" height="15" fill="rgb(210,38,21)" fg:x="620" fg:w="1"/><text x="49.9295%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="49.6795%" y="277" width="0.0801%" height="15" fill="rgb(230,75,13)" fg:x="620" fg:w="1"/><text x="49.9295%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="49.6795%" y="261" width="0.0801%" height="15" fill="rgb(250,68,53)" fg:x="620" fg:w="1"/><text x="49.9295%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="49.6795%" y="245" width="0.0801%" height="15" fill="rgb(250,210,16)" fg:x="620" fg:w="1"/><text x="49.9295%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="49.9199%" y="261" width="0.1603%" height="15" fill="rgb(240,132,5)" fg:x="623" fg:w="2"/><text x="50.1699%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.0000%" y="245" width="0.0801%" height="15" fill="rgb(222,148,48)" fg:x="624" fg:w="1"/><text x="50.2500%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.0000%" y="229" width="0.0801%" height="15" fill="rgb(247,181,24)" fg:x="624" fg:w="1"/><text x="50.2500%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (12 samples, 0.96%)</title><rect x="49.1987%" y="389" width="0.9615%" height="15" fill="rgb(239,5,31)" fg:x="614" fg:w="12"/><text x="49.4487%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.96%)</title><rect x="49.1987%" y="373" width="0.9615%" height="15" fill="rgb(241,152,38)" fg:x="614" fg:w="12"/><text x="49.4487%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (11 samples, 0.88%)</title><rect x="49.2788%" y="357" width="0.8814%" height="15" fill="rgb(246,200,37)" fg:x="615" fg:w="11"/><text x="49.5288%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="49.7596%" y="341" width="0.4006%" height="15" fill="rgb(243,210,26)" fg:x="621" fg:w="5"/><text x="50.0096%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="49.7596%" y="325" width="0.4006%" height="15" fill="rgb(222,22,22)" fg:x="621" fg:w="5"/><text x="50.0096%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.32%)</title><rect x="49.8397%" y="309" width="0.3205%" height="15" fill="rgb(208,129,28)" fg:x="622" fg:w="4"/><text x="50.0897%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="49.8397%" y="293" width="0.3205%" height="15" fill="rgb(254,169,28)" fg:x="622" fg:w="4"/><text x="50.0897%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="49.8397%" y="277" width="0.3205%" height="15" fill="rgb(225,45,17)" fg:x="622" fg:w="4"/><text x="50.0897%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="50.0801%" y="261" width="0.0801%" height="15" fill="rgb(232,199,2)" fg:x="625" fg:w="1"/><text x="50.3301%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.0801%" y="245" width="0.0801%" height="15" fill="rgb(235,33,40)" fg:x="625" fg:w="1"/><text x="50.3301%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.0801%" y="229" width="0.0801%" height="15" fill="rgb(237,89,50)" fg:x="625" fg:w="1"/><text x="50.3301%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="50.0801%" y="213" width="0.0801%" height="15" fill="rgb(238,126,5)" fg:x="625" fg:w="1"/><text x="50.3301%" y="223.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (53 samples, 4.25%)</title><rect x="46.0737%" y="533" width="4.2468%" height="15" fill="rgb(247,214,42)" fg:x="575" fg:w="53"/><text x="46.3237%" y="543.50">&lt;plug..</text></g><g><title>core::iter::adapters::try_process (53 samples, 4.25%)</title><rect x="46.0737%" y="517" width="4.2468%" height="15" fill="rgb(238,60,45)" fg:x="575" fg:w="53"/><text x="46.3237%" y="527.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (53 samples, 4.25%)</title><rect x="46.0737%" y="501" width="4.2468%" height="15" fill="rgb(225,69,44)" fg:x="575" fg:w="53"/><text x="46.3237%" y="511.50">&lt;allo..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (51 samples, 4.09%)</title><rect x="46.2340%" y="485" width="4.0865%" height="15" fill="rgb(241,13,44)" fg:x="577" fg:w="51"/><text x="46.4840%" y="495.50">&lt;eng..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (51 samples, 4.09%)</title><rect x="46.2340%" y="469" width="4.0865%" height="15" fill="rgb(227,121,22)" fg:x="577" fg:w="51"/><text x="46.4840%" y="479.50">&lt;eng..</text></g><g><title>engine::internal::Entities::add_persisted (51 samples, 4.09%)</title><rect x="46.2340%" y="453" width="4.0865%" height="15" fill="rgb(231,160,23)" fg:x="577" fg:w="51"/><text x="46.4840%" y="463.50">engi..</text></g><g><title>kernel::model::entity::Entity::from_str (27 samples, 2.16%)</title><rect x="48.1571%" y="437" width="2.1635%" height="15" fill="rgb(250,179,43)" fg:x="601" fg:w="27"/><text x="48.4071%" y="447.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (15 samples, 1.20%)</title><rect x="49.1186%" y="421" width="1.2019%" height="15" fill="rgb(233,54,46)" fg:x="613" fg:w="15"/><text x="49.3686%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (15 samples, 1.20%)</title><rect x="49.1186%" y="405" width="1.2019%" height="15" fill="rgb(247,120,42)" fg:x="613" fg:w="15"/><text x="49.3686%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="50.1603%" y="389" width="0.1603%" height="15" fill="rgb(221,219,12)" fg:x="626" fg:w="2"/><text x="50.4103%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.2404%" y="373" width="0.0801%" height="15" fill="rgb(211,126,8)" fg:x="627" fg:w="1"/><text x="50.4904%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="50.2404%" y="357" width="0.0801%" height="15" fill="rgb(218,154,33)" fg:x="627" fg:w="1"/><text x="50.4904%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="50.2404%" y="341" width="0.0801%" height="15" fill="rgb(212,199,16)" fg:x="627" fg:w="1"/><text x="50.4904%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.3205%" y="533" width="0.0801%" height="15" fill="rgb(236,215,46)" fg:x="628" fg:w="1"/><text x="50.5705%" y="543.50"></text></g><g><title>plugins_core::tools::get_contained_keys (61 samples, 4.89%)</title><rect x="45.6731%" y="581" width="4.8878%" height="15" fill="rgb(232,32,22)" fg:x="570" fg:w="61"/><text x="45.9231%" y="591.50">plugin..</text></g><g><title>kernel::model::entry::Entry::scope (61 samples, 4.89%)</title><rect x="45.6731%" y="565" width="4.8878%" height="15" fill="rgb(234,79,15)" fg:x="570" fg:w="61"/><text x="45.9231%" y="575.50">kernel..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (61 samples, 4.89%)</title><rect x="45.6731%" y="549" width="4.8878%" height="15" fill="rgb(235,187,47)" fg:x="570" fg:w="61"/><text x="45.9231%" y="559.50">kernel..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="50.4006%" y="533" width="0.1603%" height="15" fill="rgb(244,69,37)" fg:x="629" fg:w="2"/><text x="50.6506%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="50.4006%" y="517" width="0.1603%" height="15" fill="rgb(249,140,25)" fg:x="629" fg:w="2"/><text x="50.6506%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="50.4006%" y="501" width="0.1603%" height="15" fill="rgb(213,69,8)" fg:x="629" fg:w="2"/><text x="50.6506%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="50.4808%" y="485" width="0.0801%" height="15" fill="rgb(220,136,2)" fg:x="630" fg:w="1"/><text x="50.7308%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="50.4808%" y="469" width="0.0801%" height="15" fill="rgb(237,50,36)" fg:x="630" fg:w="1"/><text x="50.7308%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.4808%" y="453" width="0.0801%" height="15" fill="rgb(226,18,11)" fg:x="630" fg:w="1"/><text x="50.7308%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="50.6410%" y="565" width="0.0801%" height="15" fill="rgb(243,156,2)" fg:x="632" fg:w="1"/><text x="50.8910%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (106 samples, 8.49%)</title><rect x="42.3077%" y="613" width="8.4936%" height="15" fill="rgb(218,8,34)" fg:x="528" fg:w="106"/><text x="42.5577%" y="623.50">&lt;alloc::vec:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (106 samples, 8.49%)</title><rect x="42.3077%" y="597" width="8.4936%" height="15" fill="rgb(250,94,35)" fg:x="528" fg:w="106"/><text x="42.5577%" y="607.50">&lt;core::iter:..</text></g><g><title>plugins_core::tools::get_occupant_keys (3 samples, 0.24%)</title><rect x="50.5609%" y="581" width="0.2404%" height="15" fill="rgb(229,127,21)" fg:x="631" fg:w="3"/><text x="50.8109%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="50.7212%" y="565" width="0.0801%" height="15" fill="rgb(234,49,5)" fg:x="633" fg:w="1"/><text x="50.9712%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="50.7212%" y="549" width="0.0801%" height="15" fill="rgb(248,12,16)" fg:x="633" fg:w="1"/><text x="50.9712%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="50.7212%" y="533" width="0.0801%" height="15" fill="rgb(208,220,31)" fg:x="633" fg:w="1"/><text x="50.9712%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.0417%" y="565" width="0.0801%" height="15" fill="rgb(243,184,0)" fg:x="637" fg:w="1"/><text x="51.2917%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.0417%" y="549" width="0.0801%" height="15" fill="rgb(217,38,21)" fg:x="637" fg:w="1"/><text x="51.2917%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.0417%" y="533" width="0.0801%" height="15" fill="rgb(239,120,45)" fg:x="637" fg:w="1"/><text x="51.2917%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.0417%" y="517" width="0.0801%" height="15" fill="rgb(235,33,2)" fg:x="637" fg:w="1"/><text x="51.2917%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.0417%" y="501" width="0.0801%" height="15" fill="rgb(249,161,5)" fg:x="637" fg:w="1"/><text x="51.2917%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.0417%" y="485" width="0.0801%" height="15" fill="rgb(250,165,48)" fg:x="637" fg:w="1"/><text x="51.2917%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.0417%" y="469" width="0.0801%" height="15" fill="rgb(221,23,45)" fg:x="637" fg:w="1"/><text x="51.2917%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.0417%" y="453" width="0.0801%" height="15" fill="rgb(217,108,46)" fg:x="637" fg:w="1"/><text x="51.2917%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.0417%" y="437" width="0.0801%" height="15" fill="rgb(254,26,35)" fg:x="637" fg:w="1"/><text x="51.2917%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.0417%" y="421" width="0.0801%" height="15" fill="rgb(218,223,28)" fg:x="637" fg:w="1"/><text x="51.2917%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.0417%" y="405" width="0.0801%" height="15" fill="rgb(242,27,47)" fg:x="637" fg:w="1"/><text x="51.2917%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.0417%" y="389" width="0.0801%" height="15" fill="rgb(218,39,35)" fg:x="637" fg:w="1"/><text x="51.2917%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (4 samples, 0.32%)</title><rect x="51.1218%" y="549" width="0.3205%" height="15" fill="rgb(232,127,16)" fg:x="638" fg:w="4"/><text x="51.3718%" y="559.50"></text></g><g><title>engine::internal::Maps::lookup_entity (3 samples, 0.24%)</title><rect x="51.2019%" y="533" width="0.2404%" height="15" fill="rgb(231,219,51)" fg:x="639" fg:w="3"/><text x="51.4519%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="51.3622%" y="517" width="0.0801%" height="15" fill="rgb(217,220,46)" fg:x="641" fg:w="1"/><text x="51.6122%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.5224%" y="341" width="0.0801%" height="15" fill="rgb(230,75,1)" fg:x="643" fg:w="1"/><text x="51.7724%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.5224%" y="325" width="0.0801%" height="15" fill="rgb(218,2,8)" fg:x="643" fg:w="1"/><text x="51.7724%" y="335.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="51.5224%" y="309" width="0.0801%" height="15" fill="rgb(206,111,30)" fg:x="643" fg:w="1"/><text x="51.7724%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="51.5224%" y="293" width="0.0801%" height="15" fill="rgb(209,135,6)" fg:x="643" fg:w="1"/><text x="51.7724%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="51.5224%" y="277" width="0.0801%" height="15" fill="rgb(205,169,10)" fg:x="643" fg:w="1"/><text x="51.7724%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="51.5224%" y="261" width="0.0801%" height="15" fill="rgb(212,204,38)" fg:x="643" fg:w="1"/><text x="51.7724%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="51.5224%" y="245" width="0.0801%" height="15" fill="rgb(205,199,14)" fg:x="643" fg:w="1"/><text x="51.7724%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="51.5224%" y="229" width="0.0801%" height="15" fill="rgb(212,4,6)" fg:x="643" fg:w="1"/><text x="51.7724%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="51.5224%" y="213" width="0.0801%" height="15" fill="rgb(250,15,10)" fg:x="643" fg:w="1"/><text x="51.7724%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="51.5224%" y="197" width="0.0801%" height="15" fill="rgb(212,49,51)" fg:x="643" fg:w="1"/><text x="51.7724%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="51.5224%" y="181" width="0.0801%" height="15" fill="rgb(235,21,9)" fg:x="643" fg:w="1"/><text x="51.7724%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="51.5224%" y="165" width="0.0801%" height="15" fill="rgb(251,31,32)" fg:x="643" fg:w="1"/><text x="51.7724%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="51.5224%" y="149" width="0.0801%" height="15" fill="rgb(246,23,9)" fg:x="643" fg:w="1"/><text x="51.7724%" y="159.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="51.5224%" y="133" width="0.0801%" height="15" fill="rgb(225,216,14)" fg:x="643" fg:w="1"/><text x="51.7724%" y="143.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="51.5224%" y="117" width="0.0801%" height="15" fill="rgb(215,200,26)" fg:x="643" fg:w="1"/><text x="51.7724%" y="127.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="51.5224%" y="405" width="0.1603%" height="15" fill="rgb(237,130,47)" fg:x="643" fg:w="2"/><text x="51.7724%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="51.5224%" y="389" width="0.1603%" height="15" fill="rgb(247,74,14)" fg:x="643" fg:w="2"/><text x="51.7724%" y="399.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="51.5224%" y="373" width="0.1603%" height="15" fill="rgb(254,97,46)" fg:x="643" fg:w="2"/><text x="51.7724%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="51.5224%" y="357" width="0.1603%" height="15" fill="rgb(234,191,1)" fg:x="643" fg:w="2"/><text x="51.7724%" y="367.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="51.6026%" y="341" width="0.0801%" height="15" fill="rgb(215,165,14)" fg:x="644" fg:w="1"/><text x="51.8526%" y="351.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="51.6026%" y="325" width="0.0801%" height="15" fill="rgb(230,182,6)" fg:x="644" fg:w="1"/><text x="51.8526%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.6026%" y="309" width="0.0801%" height="15" fill="rgb(210,127,39)" fg:x="644" fg:w="1"/><text x="51.8526%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.6026%" y="293" width="0.0801%" height="15" fill="rgb(223,212,51)" fg:x="644" fg:w="1"/><text x="51.8526%" y="303.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="51.6026%" y="277" width="0.0801%" height="15" fill="rgb(226,176,43)" fg:x="644" fg:w="1"/><text x="51.8526%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="51.6026%" y="261" width="0.0801%" height="15" fill="rgb(222,155,4)" fg:x="644" fg:w="1"/><text x="51.8526%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="51.6026%" y="245" width="0.0801%" height="15" fill="rgb(215,149,7)" fg:x="644" fg:w="1"/><text x="51.8526%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="51.6026%" y="229" width="0.0801%" height="15" fill="rgb(252,199,23)" fg:x="644" fg:w="1"/><text x="51.8526%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="51.6026%" y="213" width="0.0801%" height="15" fill="rgb(245,52,29)" fg:x="644" fg:w="1"/><text x="51.8526%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="51.6026%" y="197" width="0.0801%" height="15" fill="rgb(221,228,19)" fg:x="644" fg:w="1"/><text x="51.8526%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="51.6026%" y="181" width="0.0801%" height="15" fill="rgb(253,101,6)" fg:x="644" fg:w="1"/><text x="51.8526%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="51.6026%" y="165" width="0.0801%" height="15" fill="rgb(211,130,8)" fg:x="644" fg:w="1"/><text x="51.8526%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="51.6026%" y="149" width="0.0801%" height="15" fill="rgb(238,37,53)" fg:x="644" fg:w="1"/><text x="51.8526%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="51.6026%" y="133" width="0.0801%" height="15" fill="rgb(235,145,5)" fg:x="644" fg:w="1"/><text x="51.8526%" y="143.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="51.6026%" y="117" width="0.0801%" height="15" fill="rgb(244,12,43)" fg:x="644" fg:w="1"/><text x="51.8526%" y="127.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="51.6026%" y="101" width="0.0801%" height="15" fill="rgb(246,195,24)" fg:x="644" fg:w="1"/><text x="51.8526%" y="111.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="51.6026%" y="85" width="0.0801%" height="15" fill="rgb(235,163,6)" fg:x="644" fg:w="1"/><text x="51.8526%" y="95.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (8 samples, 0.64%)</title><rect x="51.1218%" y="565" width="0.6410%" height="15" fill="rgb(236,218,17)" fg:x="638" fg:w="8"/><text x="51.3718%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="51.4423%" y="549" width="0.3205%" height="15" fill="rgb(235,12,38)" fg:x="642" fg:w="4"/><text x="51.6923%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.32%)</title><rect x="51.4423%" y="533" width="0.3205%" height="15" fill="rgb(225,195,33)" fg:x="642" fg:w="4"/><text x="51.6923%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.32%)</title><rect x="51.4423%" y="517" width="0.3205%" height="15" fill="rgb(238,54,35)" fg:x="642" fg:w="4"/><text x="51.6923%" y="527.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="51.4423%" y="501" width="0.3205%" height="15" fill="rgb(238,33,7)" fg:x="642" fg:w="4"/><text x="51.6923%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="51.4423%" y="485" width="0.3205%" height="15" fill="rgb(245,5,14)" fg:x="642" fg:w="4"/><text x="51.6923%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="51.4423%" y="469" width="0.3205%" height="15" fill="rgb(251,95,31)" fg:x="642" fg:w="4"/><text x="51.6923%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.32%)</title><rect x="51.4423%" y="453" width="0.3205%" height="15" fill="rgb(222,15,46)" fg:x="642" fg:w="4"/><text x="51.6923%" y="463.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="51.4423%" y="437" width="0.3205%" height="15" fill="rgb(226,182,24)" fg:x="642" fg:w="4"/><text x="51.6923%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="51.5224%" y="421" width="0.2404%" height="15" fill="rgb(229,105,41)" fg:x="643" fg:w="3"/><text x="51.7724%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.6827%" y="405" width="0.0801%" height="15" fill="rgb(216,99,53)" fg:x="645" fg:w="1"/><text x="51.9327%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.6827%" y="389" width="0.0801%" height="15" fill="rgb(253,26,20)" fg:x="645" fg:w="1"/><text x="51.9327%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="51.6827%" y="373" width="0.0801%" height="15" fill="rgb(249,155,28)" fg:x="645" fg:w="1"/><text x="51.9327%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="51.6827%" y="357" width="0.0801%" height="15" fill="rgb(241,221,2)" fg:x="645" fg:w="1"/><text x="51.9327%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="51.6827%" y="341" width="0.0801%" height="15" fill="rgb(219,124,6)" fg:x="645" fg:w="1"/><text x="51.9327%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="51.6827%" y="325" width="0.0801%" height="15" fill="rgb(233,37,6)" fg:x="645" fg:w="1"/><text x="51.9327%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="51.6827%" y="309" width="0.0801%" height="15" fill="rgb(238,20,14)" fg:x="645" fg:w="1"/><text x="51.9327%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="52.2436%" y="453" width="0.0801%" height="15" fill="rgb(232,106,27)" fg:x="652" fg:w="1"/><text x="52.4936%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="53.3654%" y="229" width="0.1603%" height="15" fill="rgb(246,157,24)" fg:x="666" fg:w="2"/><text x="53.6154%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="53.3654%" y="213" width="0.1603%" height="15" fill="rgb(214,153,10)" fg:x="666" fg:w="2"/><text x="53.6154%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.4455%" y="197" width="0.0801%" height="15" fill="rgb(212,94,6)" fg:x="667" fg:w="1"/><text x="53.6955%" y="207.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (5 samples, 0.40%)</title><rect x="53.3654%" y="261" width="0.4006%" height="15" fill="rgb(254,25,27)" fg:x="666" fg:w="5"/><text x="53.6154%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="53.3654%" y="245" width="0.4006%" height="15" fill="rgb(250,43,52)" fg:x="666" fg:w="5"/><text x="53.6154%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="53.5256%" y="229" width="0.2404%" height="15" fill="rgb(221,226,40)" fg:x="668" fg:w="3"/><text x="53.7756%" y="239.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="53.5256%" y="213" width="0.2404%" height="15" fill="rgb(235,162,34)" fg:x="668" fg:w="3"/><text x="53.7756%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.64%)</title><rect x="53.2853%" y="277" width="0.6410%" height="15" fill="rgb(239,24,26)" fg:x="665" fg:w="8"/><text x="53.5353%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="53.7660%" y="261" width="0.1603%" height="15" fill="rgb(244,226,11)" fg:x="671" fg:w="2"/><text x="54.0160%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="53.8462%" y="245" width="0.0801%" height="15" fill="rgb(225,23,10)" fg:x="672" fg:w="1"/><text x="54.0962%" y="255.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (12 samples, 0.96%)</title><rect x="53.2051%" y="309" width="0.9615%" height="15" fill="rgb(249,125,6)" fg:x="664" fg:w="12"/><text x="53.4551%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (11 samples, 0.88%)</title><rect x="53.2853%" y="293" width="0.8814%" height="15" fill="rgb(246,212,12)" fg:x="665" fg:w="11"/><text x="53.5353%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="53.9263%" y="277" width="0.2404%" height="15" fill="rgb(230,43,32)" fg:x="673" fg:w="3"/><text x="54.1763%" y="287.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="53.9263%" y="261" width="0.2404%" height="15" fill="rgb(210,95,23)" fg:x="673" fg:w="3"/><text x="54.1763%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="54.1667%" y="293" width="0.0801%" height="15" fill="rgb(229,103,33)" fg:x="676" fg:w="1"/><text x="54.4167%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 1.36%)</title><rect x="53.0449%" y="325" width="1.3622%" height="15" fill="rgb(222,104,27)" fg:x="662" fg:w="17"/><text x="53.2949%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="54.1667%" y="309" width="0.2404%" height="15" fill="rgb(239,221,23)" fg:x="676" fg:w="3"/><text x="54.4167%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="54.2468%" y="293" width="0.1603%" height="15" fill="rgb(222,98,21)" fg:x="677" fg:w="2"/><text x="54.4968%" y="303.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (20 samples, 1.60%)</title><rect x="52.8846%" y="357" width="1.6026%" height="15" fill="rgb(231,101,20)" fg:x="660" fg:w="20"/><text x="53.1346%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (18 samples, 1.44%)</title><rect x="53.0449%" y="341" width="1.4423%" height="15" fill="rgb(215,150,22)" fg:x="662" fg:w="18"/><text x="53.2949%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="54.4071%" y="325" width="0.0801%" height="15" fill="rgb(248,3,34)" fg:x="679" fg:w="1"/><text x="54.6571%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.4071%" y="309" width="0.0801%" height="15" fill="rgb(220,141,21)" fg:x="679" fg:w="1"/><text x="54.6571%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.4872%" y="357" width="0.0801%" height="15" fill="rgb(223,41,48)" fg:x="680" fg:w="1"/><text x="54.7372%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.4872%" y="341" width="0.0801%" height="15" fill="rgb(247,12,5)" fg:x="680" fg:w="1"/><text x="54.7372%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 2.08%)</title><rect x="52.7244%" y="373" width="2.0833%" height="15" fill="rgb(206,173,10)" fg:x="658" fg:w="26"/><text x="52.9744%" y="383.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="54.5673%" y="357" width="0.2404%" height="15" fill="rgb(233,214,37)" fg:x="681" fg:w="3"/><text x="54.8173%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="54.5673%" y="341" width="0.2404%" height="15" fill="rgb(238,86,43)" fg:x="681" fg:w="3"/><text x="54.8173%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="54.7276%" y="325" width="0.0801%" height="15" fill="rgb(212,182,8)" fg:x="683" fg:w="1"/><text x="54.9776%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (28 samples, 2.24%)</title><rect x="52.7244%" y="389" width="2.2436%" height="15" fill="rgb(240,91,47)" fg:x="658" fg:w="28"/><text x="52.9744%" y="399.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="54.8077%" y="373" width="0.1603%" height="15" fill="rgb(209,138,26)" fg:x="684" fg:w="2"/><text x="55.0577%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="54.8077%" y="357" width="0.1603%" height="15" fill="rgb(231,163,20)" fg:x="684" fg:w="2"/><text x="55.0577%" y="367.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (33 samples, 2.64%)</title><rect x="52.4840%" y="405" width="2.6442%" height="15" fill="rgb(214,91,54)" fg:x="655" fg:w="33"/><text x="52.7340%" y="415.50">&lt;r..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="54.9679%" y="389" width="0.1603%" height="15" fill="rgb(230,32,17)" fg:x="686" fg:w="2"/><text x="55.2179%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="54.9679%" y="373" width="0.1603%" height="15" fill="rgb(231,34,34)" fg:x="686" fg:w="2"/><text x="55.2179%" y="383.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="55.0481%" y="357" width="0.0801%" height="15" fill="rgb(224,228,27)" fg:x="687" fg:w="1"/><text x="55.2981%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="55.0481%" y="341" width="0.0801%" height="15" fill="rgb(219,35,40)" fg:x="687" fg:w="1"/><text x="55.2981%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="55.0481%" y="325" width="0.0801%" height="15" fill="rgb(234,42,8)" fg:x="687" fg:w="1"/><text x="55.2981%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="55.1282%" y="405" width="0.2404%" height="15" fill="rgb(226,75,22)" fg:x="688" fg:w="3"/><text x="55.3782%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="55.3686%" y="389" width="0.0801%" height="15" fill="rgb(242,203,28)" fg:x="691" fg:w="1"/><text x="55.6186%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="55.3686%" y="373" width="0.0801%" height="15" fill="rgb(221,3,9)" fg:x="691" fg:w="1"/><text x="55.6186%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (40 samples, 3.21%)</title><rect x="52.3237%" y="421" width="3.2051%" height="15" fill="rgb(214,34,31)" fg:x="653" fg:w="40"/><text x="52.5737%" y="431.50">&lt;co..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="55.3686%" y="405" width="0.1603%" height="15" fill="rgb(252,119,15)" fg:x="691" fg:w="2"/><text x="55.6186%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.4487%" y="389" width="0.0801%" height="15" fill="rgb(244,224,31)" fg:x="692" fg:w="1"/><text x="55.6987%" y="399.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (41 samples, 3.29%)</title><rect x="52.3237%" y="453" width="3.2853%" height="15" fill="rgb(215,8,51)" fg:x="653" fg:w="41"/><text x="52.5737%" y="463.50">&lt;rp..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (41 samples, 3.29%)</title><rect x="52.3237%" y="437" width="3.2853%" height="15" fill="rgb(207,24,1)" fg:x="653" fg:w="41"/><text x="52.5737%" y="447.50">&lt;st..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="55.5288%" y="421" width="0.0801%" height="15" fill="rgb(245,90,0)" fg:x="693" fg:w="1"/><text x="55.7788%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.5288%" y="405" width="0.0801%" height="15" fill="rgb(246,43,48)" fg:x="693" fg:w="1"/><text x="55.7788%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="55.6891%" y="421" width="0.0801%" height="15" fill="rgb(252,218,10)" fg:x="695" fg:w="1"/><text x="55.9391%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (49 samples, 3.93%)</title><rect x="51.9231%" y="469" width="3.9263%" height="15" fill="rgb(231,24,35)" fg:x="648" fg:w="49"/><text x="52.1731%" y="479.50">&lt;cor..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="55.6090%" y="453" width="0.2404%" height="15" fill="rgb(225,66,19)" fg:x="694" fg:w="3"/><text x="55.8590%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="55.6090%" y="437" width="0.2404%" height="15" fill="rgb(214,96,51)" fg:x="694" fg:w="3"/><text x="55.8590%" y="447.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="55.7692%" y="421" width="0.0801%" height="15" fill="rgb(251,151,47)" fg:x="696" fg:w="1"/><text x="56.0192%" y="431.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (53 samples, 4.25%)</title><rect x="51.8429%" y="501" width="4.2468%" height="15" fill="rgb(236,79,14)" fg:x="647" fg:w="53"/><text x="52.0929%" y="511.50">&lt;rpc_..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (52 samples, 4.17%)</title><rect x="51.9231%" y="485" width="4.1667%" height="15" fill="rgb(210,205,11)" fg:x="648" fg:w="52"/><text x="52.1731%" y="495.50">&lt;std:..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="55.8494%" y="469" width="0.2404%" height="15" fill="rgb(233,142,53)" fg:x="697" fg:w="3"/><text x="56.0994%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="55.9295%" y="453" width="0.1603%" height="15" fill="rgb(212,116,48)" fg:x="698" fg:w="2"/><text x="56.1795%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="56.1699%" y="485" width="0.1603%" height="15" fill="rgb(234,55,33)" fg:x="701" fg:w="2"/><text x="56.4199%" y="495.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (58 samples, 4.65%)</title><rect x="51.7628%" y="549" width="4.6474%" height="15" fill="rgb(253,92,27)" fg:x="646" fg:w="58"/><text x="52.0128%" y="559.50">&lt;rpc_..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (58 samples, 4.65%)</title><rect x="51.7628%" y="533" width="4.6474%" height="15" fill="rgb(220,7,35)" fg:x="646" fg:w="58"/><text x="52.0128%" y="543.50">&lt;std:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (58 samples, 4.65%)</title><rect x="51.7628%" y="517" width="4.6474%" height="15" fill="rgb(246,124,6)" fg:x="646" fg:w="58"/><text x="52.0128%" y="527.50">&lt;core..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="56.0897%" y="501" width="0.3205%" height="15" fill="rgb(212,111,51)" fg:x="700" fg:w="4"/><text x="56.3397%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.3301%" y="485" width="0.0801%" height="15" fill="rgb(253,116,7)" fg:x="703" fg:w="1"/><text x="56.5801%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.5705%" y="501" width="0.0801%" height="15" fill="rgb(213,145,18)" fg:x="706" fg:w="1"/><text x="56.8205%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.6506%" y="501" width="0.0801%" height="15" fill="rgb(219,149,7)" fg:x="707" fg:w="1"/><text x="56.9006%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.6506%" y="485" width="0.0801%" height="15" fill="rgb(225,156,20)" fg:x="707" fg:w="1"/><text x="56.9006%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="56.7308%" y="501" width="0.1603%" height="15" fill="rgb(211,98,19)" fg:x="708" fg:w="2"/><text x="56.9808%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="56.7308%" y="485" width="0.1603%" height="15" fill="rgb(231,192,31)" fg:x="708" fg:w="2"/><text x="56.9808%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.8109%" y="469" width="0.0801%" height="15" fill="rgb(249,95,19)" fg:x="709" fg:w="1"/><text x="57.0609%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="56.8910%" y="501" width="0.1603%" height="15" fill="rgb(247,101,36)" fg:x="710" fg:w="2"/><text x="57.1410%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="56.8910%" y="485" width="0.1603%" height="15" fill="rgb(221,45,43)" fg:x="710" fg:w="2"/><text x="57.1410%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.9712%" y="469" width="0.0801%" height="15" fill="rgb(220,42,1)" fg:x="711" fg:w="1"/><text x="57.2212%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.2917%" y="485" width="0.1603%" height="15" fill="rgb(236,19,24)" fg:x="715" fg:w="2"/><text x="57.5417%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.4519%" y="485" width="0.0801%" height="15" fill="rgb(225,192,6)" fg:x="717" fg:w="1"/><text x="57.7019%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.4519%" y="469" width="0.0801%" height="15" fill="rgb(242,30,19)" fg:x="717" fg:w="1"/><text x="57.7019%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.6122%" y="453" width="0.1603%" height="15" fill="rgb(240,36,6)" fg:x="719" fg:w="2"/><text x="57.8622%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="57.7724%" y="453" width="0.4006%" height="15" fill="rgb(246,40,28)" fg:x="721" fg:w="5"/><text x="58.0224%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="57.7724%" y="437" width="0.4006%" height="15" fill="rgb(225,155,33)" fg:x="721" fg:w="5"/><text x="58.0224%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="57.9327%" y="421" width="0.2404%" height="15" fill="rgb(240,65,18)" fg:x="723" fg:w="3"/><text x="58.1827%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="57.9327%" y="405" width="0.2404%" height="15" fill="rgb(217,0,48)" fg:x="723" fg:w="3"/><text x="58.1827%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.0929%" y="389" width="0.0801%" height="15" fill="rgb(217,80,15)" fg:x="725" fg:w="1"/><text x="58.3429%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="58.3333%" y="437" width="0.1603%" height="15" fill="rgb(253,43,51)" fg:x="728" fg:w="2"/><text x="58.5833%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.4936%" y="421" width="0.0801%" height="15" fill="rgb(246,60,4)" fg:x="730" fg:w="1"/><text x="58.7436%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.4936%" y="405" width="0.0801%" height="15" fill="rgb(230,40,54)" fg:x="730" fg:w="1"/><text x="58.7436%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="58.7340%" y="373" width="0.0801%" height="15" fill="rgb(208,20,44)" fg:x="733" fg:w="1"/><text x="58.9840%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="58.8141%" y="357" width="0.3205%" height="15" fill="rgb(230,22,22)" fg:x="734" fg:w="4"/><text x="59.0641%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="58.8942%" y="341" width="0.2404%" height="15" fill="rgb(207,57,4)" fg:x="735" fg:w="3"/><text x="59.1442%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="58.9744%" y="325" width="0.1603%" height="15" fill="rgb(242,130,33)" fg:x="736" fg:w="2"/><text x="59.2244%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="59.2949%" y="341" width="0.0801%" height="15" fill="rgb(218,66,43)" fg:x="740" fg:w="1"/><text x="59.5449%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.04%)</title><rect x="58.4936%" y="437" width="1.0417%" height="15" fill="rgb(236,105,16)" fg:x="730" fg:w="13"/><text x="58.7436%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="58.5737%" y="421" width="0.9615%" height="15" fill="rgb(230,46,15)" fg:x="731" fg:w="12"/><text x="58.8237%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.88%)</title><rect x="58.6538%" y="405" width="0.8814%" height="15" fill="rgb(251,172,40)" fg:x="732" fg:w="11"/><text x="58.9038%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="58.6538%" y="389" width="0.8814%" height="15" fill="rgb(225,217,32)" fg:x="732" fg:w="11"/><text x="58.9038%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="58.8141%" y="373" width="0.7212%" height="15" fill="rgb(243,10,29)" fg:x="734" fg:w="9"/><text x="59.0641%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="59.1346%" y="357" width="0.4006%" height="15" fill="rgb(207,102,10)" fg:x="738" fg:w="5"/><text x="59.3846%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="59.3750%" y="341" width="0.1603%" height="15" fill="rgb(241,125,5)" fg:x="741" fg:w="2"/><text x="59.6250%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.4551%" y="325" width="0.0801%" height="15" fill="rgb(230,125,29)" fg:x="742" fg:w="1"/><text x="59.7051%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.4551%" y="309" width="0.0801%" height="15" fill="rgb(223,65,44)" fg:x="742" fg:w="1"/><text x="59.7051%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.4551%" y="293" width="0.0801%" height="15" fill="rgb(224,188,28)" fg:x="742" fg:w="1"/><text x="59.7051%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (25 samples, 2.00%)</title><rect x="57.6122%" y="469" width="2.0032%" height="15" fill="rgb(254,197,27)" fg:x="719" fg:w="25"/><text x="57.8622%" y="479.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.44%)</title><rect x="58.1731%" y="453" width="1.4423%" height="15" fill="rgb(220,200,25)" fg:x="726" fg:w="18"/><text x="58.4231%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.5353%" y="437" width="0.0801%" height="15" fill="rgb(239,225,54)" fg:x="743" fg:w="1"/><text x="59.7853%" y="447.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (100 samples, 8.01%)</title><rect x="51.7628%" y="565" width="8.0128%" height="15" fill="rgb(211,59,40)" fg:x="646" fg:w="100"/><text x="52.0128%" y="575.50">&lt;rpc_proto:..</text></g><g><title>kernel::model::EntityPtr::to_json_value (42 samples, 3.37%)</title><rect x="56.4103%" y="549" width="3.3654%" height="15" fill="rgb(213,176,46)" fg:x="704" fg:w="42"/><text x="56.6603%" y="559.50">ker..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (42 samples, 3.37%)</title><rect x="56.4103%" y="533" width="3.3654%" height="15" fill="rgb(226,99,4)" fg:x="704" fg:w="42"/><text x="56.6603%" y="543.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (42 samples, 3.37%)</title><rect x="56.4103%" y="517" width="3.3654%" height="15" fill="rgb(239,203,43)" fg:x="704" fg:w="42"/><text x="56.6603%" y="527.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (34 samples, 2.72%)</title><rect x="57.0513%" y="501" width="2.7244%" height="15" fill="rgb(246,1,45)" fg:x="712" fg:w="34"/><text x="57.3013%" y="511.50">se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (28 samples, 2.24%)</title><rect x="57.5321%" y="485" width="2.2436%" height="15" fill="rgb(231,42,52)" fg:x="718" fg:w="28"/><text x="57.7821%" y="495.50">s..</text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="59.6154%" y="469" width="0.1603%" height="15" fill="rgb(240,13,50)" fg:x="744" fg:w="2"/><text x="59.8654%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (220 samples, 17.63%)</title><rect x="42.2276%" y="629" width="17.6282%" height="15" fill="rgb(225,81,14)" fg:x="527" fg:w="220"/><text x="42.4776%" y="639.50">core::iter::adapters::try_p..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (113 samples, 9.05%)</title><rect x="50.8013%" y="613" width="9.0545%" height="15" fill="rgb(216,182,23)" fg:x="634" fg:w="113"/><text x="51.0513%" y="623.50">alloc::vec::i..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (111 samples, 8.89%)</title><rect x="50.9615%" y="597" width="8.8942%" height="15" fill="rgb(233,137,19)" fg:x="636" fg:w="111"/><text x="51.2115%" y="607.50">&lt;core::iter::..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (111 samples, 8.89%)</title><rect x="50.9615%" y="581" width="8.8942%" height="15" fill="rgb(242,61,46)" fg:x="636" fg:w="111"/><text x="51.2115%" y="591.50">plugins_rpc::..</text></g><g><title>rpc_proto::&lt;impl core::convert::From&lt;&amp;rpc_proto::EntityKey&gt; for kernel::model::base::EntityKey&gt;::from (1 samples, 0.08%)</title><rect x="59.7756%" y="565" width="0.0801%" height="15" fill="rgb(221,168,51)" fg:x="746" fg:w="1"/><text x="60.0256%" y="575.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="59.7756%" y="549" width="0.0801%" height="15" fill="rgb(238,48,15)" fg:x="746" fg:w="1"/><text x="60.0256%" y="559.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (244 samples, 19.55%)</title><rect x="40.3846%" y="645" width="19.5513%" height="15" fill="rgb(216,13,16)" fg:x="504" fg:w="244"/><text x="40.6346%" y="655.50">&lt;plugins_rpc::sessions::Session..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.8558%" y="629" width="0.0801%" height="15" fill="rgb(223,185,34)" fg:x="747" fg:w="1"/><text x="60.1058%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.8558%" y="613" width="0.0801%" height="15" fill="rgb(228,94,42)" fg:x="747" fg:w="1"/><text x="60.1058%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="59.8558%" y="597" width="0.0801%" height="15" fill="rgb(218,166,43)" fg:x="747" fg:w="1"/><text x="60.1058%" y="607.50"></text></g><g><title>&lt;rpc_proto::Surroundings as core::convert::TryFrom&lt;&amp;kernel::surround::Surroundings&gt;&gt;::try_from (1 samples, 0.08%)</title><rect x="59.9359%" y="645" width="0.0801%" height="15" fill="rgb(232,30,50)" fg:x="748" fg:w="1"/><text x="60.1859%" y="655.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="59.9359%" y="629" width="0.0801%" height="15" fill="rgb(245,206,45)" fg:x="748" fg:w="1"/><text x="60.1859%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="59.9359%" y="613" width="0.0801%" height="15" fill="rgb(220,56,22)" fg:x="748" fg:w="1"/><text x="60.1859%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="59.9359%" y="597" width="0.0801%" height="15" fill="rgb(239,129,38)" fg:x="748" fg:w="1"/><text x="60.1859%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="59.9359%" y="581" width="0.0801%" height="15" fill="rgb(207,68,41)" fg:x="748" fg:w="1"/><text x="60.1859%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="59.9359%" y="565" width="0.0801%" height="15" fill="rgb(221,21,7)" fg:x="748" fg:w="1"/><text x="60.1859%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="60.0160%" y="645" width="0.1603%" height="15" fill="rgb(240,33,25)" fg:x="749" fg:w="2"/><text x="60.2660%" y="655.50"></text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (261 samples, 20.91%)</title><rect x="39.3429%" y="693" width="20.9135%" height="15" fill="rgb(242,119,10)" fg:x="491" fg:w="261"/><text x="39.5929%" y="703.50">kernel::plugins::SessionPlugins::..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (261 samples, 20.91%)</title><rect x="39.3429%" y="677" width="20.9135%" height="15" fill="rgb(214,149,40)" fg:x="491" fg:w="261"/><text x="39.5929%" y="687.50">&lt;plugins_dynlib::DynamicPlugin as..</text></g><g><title>plugins_rpc::querying::have_surroundings (249 samples, 19.95%)</title><rect x="40.3045%" y="661" width="19.9519%" height="15" fill="rgb(228,25,36)" fg:x="503" fg:w="249"/><text x="40.5545%" y="671.50">plugins_rpc::querying::have_sur..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="60.1763%" y="645" width="0.0801%" height="15" fill="rgb(222,59,15)" fg:x="751" fg:w="1"/><text x="60.4263%" y="655.50"></text></g><g><title>rpc_proto::&lt;impl core::convert::Into&lt;rpc_proto::EntityKey&gt; for kernel::model::base::EntityKey&gt;::into (1 samples, 0.08%)</title><rect x="60.1763%" y="629" width="0.0801%" height="15" fill="rgb(218,170,0)" fg:x="751" fg:w="1"/><text x="60.4263%" y="639.50"></text></g><g><title>kernel::model::base::&lt;impl core::convert::From&lt;kernel::model::base::EntityKey&gt; for alloc::string::String&gt;::from (1 samples, 0.08%)</title><rect x="60.1763%" y="613" width="0.0801%" height="15" fill="rgb(232,173,23)" fg:x="751" fg:w="1"/><text x="60.4263%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.3365%" y="597" width="0.0801%" height="15" fill="rgb(218,116,1)" fg:x="753" fg:w="1"/><text x="60.5865%" y="607.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (316 samples, 25.32%)</title><rect x="35.1763%" y="709" width="25.3205%" height="15" fill="rgb(207,34,4)" fg:x="439" fg:w="316"/><text x="35.4263%" y="719.50">&lt;engine::perform::StandardPerformer as k..</text></g><g><title>kernel::plugins::mw::apply_middleware (3 samples, 0.24%)</title><rect x="60.2564%" y="693" width="0.2404%" height="15" fill="rgb(229,54,52)" fg:x="752" fg:w="3"/><text x="60.5064%" y="703.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="60.2564%" y="677" width="0.2404%" height="15" fill="rgb(211,86,23)" fg:x="752" fg:w="3"/><text x="60.5064%" y="687.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (3 samples, 0.24%)</title><rect x="60.2564%" y="661" width="0.2404%" height="15" fill="rgb(254,153,34)" fg:x="752" fg:w="3"/><text x="60.5064%" y="671.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="60.2564%" y="645" width="0.2404%" height="15" fill="rgb(219,220,14)" fg:x="752" fg:w="3"/><text x="60.5064%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="60.2564%" y="629" width="0.2404%" height="15" fill="rgb(247,8,26)" fg:x="752" fg:w="3"/><text x="60.5064%" y="639.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="60.2564%" y="613" width="0.2404%" height="15" fill="rgb(213,129,42)" fg:x="752" fg:w="3"/><text x="60.5064%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="60.4167%" y="597" width="0.0801%" height="15" fill="rgb(225,95,41)" fg:x="754" fg:w="1"/><text x="60.6667%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="60.4167%" y="581" width="0.0801%" height="15" fill="rgb(215,134,24)" fg:x="754" fg:w="1"/><text x="60.6667%" y="591.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (1 samples, 0.08%)</title><rect x="60.4167%" y="565" width="0.0801%" height="15" fill="rgb(235,23,54)" fg:x="754" fg:w="1"/><text x="60.6667%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="60.4968%" y="661" width="0.0801%" height="15" fill="rgb(229,96,31)" fg:x="755" fg:w="1"/><text x="60.7468%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="60.5769%" y="613" width="0.0801%" height="15" fill="rgb(206,111,12)" fg:x="756" fg:w="1"/><text x="60.8269%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="60.5769%" y="597" width="0.0801%" height="15" fill="rgb(222,177,8)" fg:x="756" fg:w="1"/><text x="60.8269%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="60.5769%" y="581" width="0.0801%" height="15" fill="rgb(251,36,52)" fg:x="756" fg:w="1"/><text x="60.8269%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.5769%" y="565" width="0.0801%" height="15" fill="rgb(216,182,29)" fg:x="756" fg:w="1"/><text x="60.8269%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.5769%" y="549" width="0.0801%" height="15" fill="rgb(241,145,50)" fg:x="756" fg:w="1"/><text x="60.8269%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.5769%" y="533" width="0.0801%" height="15" fill="rgb(231,71,35)" fg:x="756" fg:w="1"/><text x="60.8269%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.5769%" y="517" width="0.0801%" height="15" fill="rgb(218,22,17)" fg:x="756" fg:w="1"/><text x="60.8269%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="60.5769%" y="501" width="0.0801%" height="15" fill="rgb(225,227,6)" fg:x="756" fg:w="1"/><text x="60.8269%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.5769%" y="485" width="0.0801%" height="15" fill="rgb(224,204,17)" fg:x="756" fg:w="1"/><text x="60.8269%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.5769%" y="469" width="0.0801%" height="15" fill="rgb(227,61,28)" fg:x="756" fg:w="1"/><text x="60.8269%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.5769%" y="453" width="0.0801%" height="15" fill="rgb(242,148,23)" fg:x="756" fg:w="1"/><text x="60.8269%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.5769%" y="437" width="0.0801%" height="15" fill="rgb(237,105,33)" fg:x="756" fg:w="1"/><text x="60.8269%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.5769%" y="421" width="0.0801%" height="15" fill="rgb(238,218,40)" fg:x="756" fg:w="1"/><text x="60.8269%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="60.5769%" y="405" width="0.0801%" height="15" fill="rgb(209,126,11)" fg:x="756" fg:w="1"/><text x="60.8269%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="60.5769%" y="389" width="0.0801%" height="15" fill="rgb(245,90,11)" fg:x="756" fg:w="1"/><text x="60.8269%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.6571%" y="565" width="0.0801%" height="15" fill="rgb(211,195,10)" fg:x="757" fg:w="1"/><text x="60.9071%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.6571%" y="549" width="0.0801%" height="15" fill="rgb(231,45,45)" fg:x="757" fg:w="1"/><text x="60.9071%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.6571%" y="533" width="0.0801%" height="15" fill="rgb(246,100,43)" fg:x="757" fg:w="1"/><text x="60.9071%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.6571%" y="517" width="0.0801%" height="15" fill="rgb(241,193,8)" fg:x="757" fg:w="1"/><text x="60.9071%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.6571%" y="501" width="0.0801%" height="15" fill="rgb(208,76,19)" fg:x="757" fg:w="1"/><text x="60.9071%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="60.5769%" y="645" width="0.2404%" height="15" fill="rgb(223,69,40)" fg:x="756" fg:w="3"/><text x="60.8269%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="60.5769%" y="629" width="0.2404%" height="15" fill="rgb(207,120,39)" fg:x="756" fg:w="3"/><text x="60.8269%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="60.6571%" y="613" width="0.1603%" height="15" fill="rgb(212,209,28)" fg:x="757" fg:w="2"/><text x="60.9071%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="60.6571%" y="597" width="0.1603%" height="15" fill="rgb(246,82,29)" fg:x="757" fg:w="2"/><text x="60.9071%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="60.6571%" y="581" width="0.1603%" height="15" fill="rgb(239,6,40)" fg:x="757" fg:w="2"/><text x="60.9071%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.7372%" y="565" width="0.0801%" height="15" fill="rgb(228,181,35)" fg:x="758" fg:w="1"/><text x="60.9872%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.7372%" y="549" width="0.0801%" height="15" fill="rgb(238,151,2)" fg:x="758" fg:w="1"/><text x="60.9872%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.7372%" y="533" width="0.0801%" height="15" fill="rgb(236,94,18)" fg:x="758" fg:w="1"/><text x="60.9872%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.7372%" y="517" width="0.0801%" height="15" fill="rgb(208,38,14)" fg:x="758" fg:w="1"/><text x="60.9872%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.8173%" y="597" width="0.0801%" height="15" fill="rgb(234,215,27)" fg:x="759" fg:w="1"/><text x="61.0673%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="60.8974%" y="517" width="0.0801%" height="15" fill="rgb(254,211,53)" fg:x="760" fg:w="1"/><text x="61.1474%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="60.8974%" y="549" width="0.1603%" height="15" fill="rgb(216,175,11)" fg:x="760" fg:w="2"/><text x="61.1474%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="60.8974%" y="533" width="0.1603%" height="15" fill="rgb(246,179,26)" fg:x="760" fg:w="2"/><text x="61.1474%" y="543.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="60.9776%" y="517" width="0.0801%" height="15" fill="rgb(249,19,52)" fg:x="761" fg:w="1"/><text x="61.2276%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.9776%" y="501" width="0.0801%" height="15" fill="rgb(230,42,52)" fg:x="761" fg:w="1"/><text x="61.2276%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.9776%" y="485" width="0.0801%" height="15" fill="rgb(221,171,0)" fg:x="761" fg:w="1"/><text x="61.2276%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.9776%" y="469" width="0.0801%" height="15" fill="rgb(222,177,40)" fg:x="761" fg:w="1"/><text x="61.2276%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="61.0577%" y="549" width="0.2404%" height="15" fill="rgb(247,34,16)" fg:x="762" fg:w="3"/><text x="61.3077%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="61.0577%" y="533" width="0.2404%" height="15" fill="rgb(213,217,37)" fg:x="762" fg:w="3"/><text x="61.3077%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="61.1378%" y="517" width="0.1603%" height="15" fill="rgb(231,189,24)" fg:x="763" fg:w="2"/><text x="61.3878%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="61.1378%" y="501" width="0.1603%" height="15" fill="rgb(214,22,9)" fg:x="763" fg:w="2"/><text x="61.3878%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="61.1378%" y="485" width="0.1603%" height="15" fill="rgb(212,70,22)" fg:x="763" fg:w="2"/><text x="61.3878%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="61.2179%" y="469" width="0.0801%" height="15" fill="rgb(249,64,51)" fg:x="764" fg:w="1"/><text x="61.4679%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.2981%" y="517" width="0.0801%" height="15" fill="rgb(249,148,20)" fg:x="765" fg:w="1"/><text x="61.5481%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.2981%" y="501" width="0.0801%" height="15" fill="rgb(246,46,48)" fg:x="765" fg:w="1"/><text x="61.5481%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.2981%" y="485" width="0.0801%" height="15" fill="rgb(217,34,48)" fg:x="765" fg:w="1"/><text x="61.5481%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="60.8974%" y="597" width="0.5609%" height="15" fill="rgb(222,45,26)" fg:x="760" fg:w="7"/><text x="61.1474%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="60.8974%" y="581" width="0.5609%" height="15" fill="rgb(230,201,36)" fg:x="760" fg:w="7"/><text x="61.1474%" y="591.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="60.8974%" y="565" width="0.5609%" height="15" fill="rgb(217,30,43)" fg:x="760" fg:w="7"/><text x="61.1474%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.2981%" y="549" width="0.1603%" height="15" fill="rgb(230,197,40)" fg:x="765" fg:w="2"/><text x="61.5481%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="61.2981%" y="533" width="0.1603%" height="15" fill="rgb(239,181,18)" fg:x="765" fg:w="2"/><text x="61.5481%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="61.3782%" y="517" width="0.0801%" height="15" fill="rgb(222,60,39)" fg:x="766" fg:w="1"/><text x="61.6282%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.3782%" y="501" width="0.0801%" height="15" fill="rgb(210,60,22)" fg:x="766" fg:w="1"/><text x="61.6282%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.3782%" y="485" width="0.0801%" height="15" fill="rgb(239,213,48)" fg:x="766" fg:w="1"/><text x="61.6282%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="61.3782%" y="469" width="0.0801%" height="15" fill="rgb(253,214,23)" fg:x="766" fg:w="1"/><text x="61.6282%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.3782%" y="453" width="0.0801%" height="15" fill="rgb(211,98,45)" fg:x="766" fg:w="1"/><text x="61.6282%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.3782%" y="437" width="0.0801%" height="15" fill="rgb(239,130,44)" fg:x="766" fg:w="1"/><text x="61.6282%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="61.3782%" y="421" width="0.0801%" height="15" fill="rgb(222,181,35)" fg:x="766" fg:w="1"/><text x="61.6282%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.3782%" y="405" width="0.0801%" height="15" fill="rgb(219,219,49)" fg:x="766" fg:w="1"/><text x="61.6282%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.3782%" y="389" width="0.0801%" height="15" fill="rgb(227,161,51)" fg:x="766" fg:w="1"/><text x="61.6282%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="61.3782%" y="373" width="0.0801%" height="15" fill="rgb(239,112,27)" fg:x="766" fg:w="1"/><text x="61.6282%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.3782%" y="357" width="0.0801%" height="15" fill="rgb(248,122,18)" fg:x="766" fg:w="1"/><text x="61.6282%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.3782%" y="341" width="0.0801%" height="15" fill="rgb(245,130,23)" fg:x="766" fg:w="1"/><text x="61.6282%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (13 samples, 1.04%)</title><rect x="60.4968%" y="677" width="1.0417%" height="15" fill="rgb(211,225,28)" fg:x="755" fg:w="13"/><text x="60.7468%" y="687.50"></text></g><g><title>engine::internal::Entities::add_persisted (12 samples, 0.96%)</title><rect x="60.5769%" y="661" width="0.9615%" height="15" fill="rgb(242,105,44)" fg:x="756" fg:w="12"/><text x="60.8269%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::from_str (9 samples, 0.72%)</title><rect x="60.8173%" y="645" width="0.7212%" height="15" fill="rgb(216,183,46)" fg:x="759" fg:w="9"/><text x="61.0673%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="60.8173%" y="629" width="0.7212%" height="15" fill="rgb(227,112,9)" fg:x="759" fg:w="9"/><text x="61.0673%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="60.8173%" y="613" width="0.7212%" height="15" fill="rgb(244,21,0)" fg:x="759" fg:w="9"/><text x="61.0673%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.4583%" y="597" width="0.0801%" height="15" fill="rgb(236,185,14)" fg:x="767" fg:w="1"/><text x="61.7083%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.4583%" y="581" width="0.0801%" height="15" fill="rgb(236,170,30)" fg:x="767" fg:w="1"/><text x="61.7083%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.5385%" y="677" width="0.0801%" height="15" fill="rgb(209,198,51)" fg:x="768" fg:w="1"/><text x="61.7885%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (15 samples, 1.20%)</title><rect x="60.4968%" y="693" width="1.2019%" height="15" fill="rgb(205,171,26)" fg:x="755" fg:w="15"/><text x="60.7468%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="61.6186%" y="677" width="0.0801%" height="15" fill="rgb(246,41,49)" fg:x="769" fg:w="1"/><text x="61.8686%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="61.6186%" y="661" width="0.0801%" height="15" fill="rgb(240,229,12)" fg:x="769" fg:w="1"/><text x="61.8686%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="61.6186%" y="645" width="0.0801%" height="15" fill="rgb(212,8,54)" fg:x="769" fg:w="1"/><text x="61.8686%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="61.6186%" y="629" width="0.0801%" height="15" fill="rgb(230,114,13)" fg:x="769" fg:w="1"/><text x="61.8686%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="61.6186%" y="613" width="0.0801%" height="15" fill="rgb(229,130,28)" fg:x="769" fg:w="1"/><text x="61.8686%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="61.6186%" y="597" width="0.0801%" height="15" fill="rgb(206,139,15)" fg:x="769" fg:w="1"/><text x="61.8686%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="61.6186%" y="581" width="0.0801%" height="15" fill="rgb(241,188,35)" fg:x="769" fg:w="1"/><text x="61.8686%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="61.6186%" y="565" width="0.0801%" height="15" fill="rgb(208,224,26)" fg:x="769" fg:w="1"/><text x="61.8686%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="61.6186%" y="549" width="0.0801%" height="15" fill="rgb(251,131,28)" fg:x="769" fg:w="1"/><text x="61.8686%" y="559.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="61.6186%" y="533" width="0.0801%" height="15" fill="rgb(208,153,1)" fg:x="769" fg:w="1"/><text x="61.8686%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="61.6186%" y="517" width="0.0801%" height="15" fill="rgb(234,33,36)" fg:x="769" fg:w="1"/><text x="61.8686%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="61.6186%" y="501" width="0.0801%" height="15" fill="rgb(246,42,29)" fg:x="769" fg:w="1"/><text x="61.8686%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="61.6186%" y="485" width="0.0801%" height="15" fill="rgb(251,114,16)" fg:x="769" fg:w="1"/><text x="61.8686%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="61.6186%" y="469" width="0.0801%" height="15" fill="rgb(233,13,38)" fg:x="769" fg:w="1"/><text x="61.8686%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="61.6186%" y="453" width="0.0801%" height="15" fill="rgb(247,120,19)" fg:x="769" fg:w="1"/><text x="61.8686%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="61.6186%" y="437" width="0.0801%" height="15" fill="rgb(205,11,16)" fg:x="769" fg:w="1"/><text x="61.8686%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="61.6186%" y="421" width="0.0801%" height="15" fill="rgb(228,185,19)" fg:x="769" fg:w="1"/><text x="61.8686%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="61.6186%" y="405" width="0.0801%" height="15" fill="rgb(239,88,52)" fg:x="769" fg:w="1"/><text x="61.8686%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="61.6186%" y="389" width="0.0801%" height="15" fill="rgb(219,23,1)" fg:x="769" fg:w="1"/><text x="61.8686%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="61.6186%" y="373" width="0.0801%" height="15" fill="rgb(253,177,16)" fg:x="769" fg:w="1"/><text x="61.8686%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="61.6186%" y="357" width="0.0801%" height="15" fill="rgb(225,150,40)" fg:x="769" fg:w="1"/><text x="61.8686%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="61.6186%" y="341" width="0.0801%" height="15" fill="rgb(208,108,30)" fg:x="769" fg:w="1"/><text x="61.8686%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="61.6186%" y="325" width="0.0801%" height="15" fill="rgb(214,122,4)" fg:x="769" fg:w="1"/><text x="61.8686%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.08%)</title><rect x="61.6186%" y="309" width="0.0801%" height="15" fill="rgb(229,74,37)" fg:x="769" fg:w="1"/><text x="61.8686%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.7788%" y="597" width="0.0801%" height="15" fill="rgb(233,61,41)" fg:x="771" fg:w="1"/><text x="62.0288%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.7788%" y="581" width="0.0801%" height="15" fill="rgb(238,191,5)" fg:x="771" fg:w="1"/><text x="62.0288%" y="591.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (334 samples, 26.76%)</title><rect x="35.1763%" y="741" width="26.7628%" height="15" fill="rgb(233,78,24)" fg:x="439" fg:w="334"/><text x="35.4263%" y="751.50">&lt;plugins_core::carrying::CarryingPlugin as ..</text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (334 samples, 26.76%)</title><rect x="35.1763%" y="725" width="26.7628%" height="15" fill="rgb(211,142,8)" fg:x="439" fg:w="334"/><text x="35.4263%" y="735.50">&lt;engine::perform::StandardPerformer as kern..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (18 samples, 1.44%)</title><rect x="60.4968%" y="709" width="1.4423%" height="15" fill="rgb(253,38,53)" fg:x="755" fg:w="18"/><text x="60.7468%" y="719.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (3 samples, 0.24%)</title><rect x="61.6987%" y="693" width="0.2404%" height="15" fill="rgb(234,63,51)" fg:x="770" fg:w="3"/><text x="61.9487%" y="703.50"></text></g><g><title>engine::users::model::username_to_key (3 samples, 0.24%)</title><rect x="61.6987%" y="677" width="0.2404%" height="15" fill="rgb(205,23,31)" fg:x="770" fg:w="3"/><text x="61.9487%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="61.6987%" y="661" width="0.2404%" height="15" fill="rgb(210,184,50)" fg:x="770" fg:w="3"/><text x="61.9487%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="61.7788%" y="645" width="0.1603%" height="15" fill="rgb(222,112,26)" fg:x="771" fg:w="2"/><text x="62.0288%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="61.7788%" y="629" width="0.1603%" height="15" fill="rgb(250,98,18)" fg:x="771" fg:w="2"/><text x="62.0288%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="61.7788%" y="613" width="0.1603%" height="15" fill="rgb(250,34,12)" fg:x="771" fg:w="2"/><text x="62.0288%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="61.8590%" y="597" width="0.0801%" height="15" fill="rgb(236,141,30)" fg:x="772" fg:w="1"/><text x="62.1090%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (335 samples, 26.84%)</title><rect x="35.1763%" y="757" width="26.8429%" height="15" fill="rgb(246,134,38)" fg:x="439" fg:w="335"/><text x="35.4263%" y="767.50">&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="61.9391%" y="741" width="0.0801%" height="15" fill="rgb(240,114,4)" fg:x="773" fg:w="1"/><text x="62.1891%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.9391%" y="725" width="0.0801%" height="15" fill="rgb(243,113,39)" fg:x="773" fg:w="1"/><text x="62.1891%" y="735.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (337 samples, 27.00%)</title><rect x="35.1763%" y="805" width="27.0032%" height="15" fill="rgb(239,215,4)" fg:x="439" fg:w="337"/><text x="35.4263%" y="815.50">&lt;kernel::plugins::SessionPlugins as kernel:..</text></g><g><title>core::iter::adapters::try_process (337 samples, 27.00%)</title><rect x="35.1763%" y="789" width="27.0032%" height="15" fill="rgb(236,229,45)" fg:x="439" fg:w="337"/><text x="35.4263%" y="799.50">core::iter::adapters::try_process</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (337 samples, 27.00%)</title><rect x="35.1763%" y="773" width="27.0032%" height="15" fill="rgb(242,2,6)" fg:x="439" fg:w="337"/><text x="35.4263%" y="783.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_fro..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="62.0192%" y="757" width="0.1603%" height="15" fill="rgb(239,108,21)" fg:x="774" fg:w="2"/><text x="62.2692%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="62.0994%" y="741" width="0.0801%" height="15" fill="rgb(215,168,34)" fg:x="775" fg:w="1"/><text x="62.3494%" y="751.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.1795%" y="661" width="0.0801%" height="15" fill="rgb(238,31,17)" fg:x="776" fg:w="1"/><text x="62.4295%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.1795%" y="645" width="0.0801%" height="15" fill="rgb(220,133,11)" fg:x="776" fg:w="1"/><text x="62.4295%" y="655.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="62.1795%" y="629" width="0.0801%" height="15" fill="rgb(212,158,23)" fg:x="776" fg:w="1"/><text x="62.4295%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="62.1795%" y="613" width="0.0801%" height="15" fill="rgb(223,172,7)" fg:x="776" fg:w="1"/><text x="62.4295%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="62.1795%" y="597" width="0.0801%" height="15" fill="rgb(244,3,52)" fg:x="776" fg:w="1"/><text x="62.4295%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="62.1795%" y="581" width="0.0801%" height="15" fill="rgb(207,69,27)" fg:x="776" fg:w="1"/><text x="62.4295%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="62.1795%" y="565" width="0.0801%" height="15" fill="rgb(213,136,45)" fg:x="776" fg:w="1"/><text x="62.4295%" y="575.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (339 samples, 27.16%)</title><rect x="35.1763%" y="869" width="27.1635%" height="15" fill="rgb(218,79,17)" fg:x="439" fg:w="339"/><text x="35.4263%" y="879.50">engine::session::Session::evaluate_and_perfo..</text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (339 samples, 27.16%)</title><rect x="35.1763%" y="853" width="27.1635%" height="15" fill="rgb(216,106,36)" fg:x="439" fg:w="339"/><text x="35.4263%" y="863.50">&lt;engine::session::Session as kernel::actions..</text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (339 samples, 27.16%)</title><rect x="35.1763%" y="837" width="27.1635%" height="15" fill="rgb(251,27,45)" fg:x="439" fg:w="339"/><text x="35.4263%" y="847.50">&lt;engine::perform::StandardPerformer as kerne..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (339 samples, 27.16%)</title><rect x="35.1763%" y="821" width="27.1635%" height="15" fill="rgb(232,21,34)" fg:x="439" fg:w="339"/><text x="35.4263%" y="831.50">engine::perform::StandardPerformer::evaluate..</text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="62.1795%" y="805" width="0.1603%" height="15" fill="rgb(249,191,16)" fg:x="776" fg:w="2"/><text x="62.4295%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="62.1795%" y="789" width="0.1603%" height="15" fill="rgb(224,88,20)" fg:x="776" fg:w="2"/><text x="62.4295%" y="799.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="62.1795%" y="773" width="0.1603%" height="15" fill="rgb(237,93,27)" fg:x="776" fg:w="2"/><text x="62.4295%" y="783.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="62.1795%" y="757" width="0.1603%" height="15" fill="rgb(226,198,48)" fg:x="776" fg:w="2"/><text x="62.4295%" y="767.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="62.1795%" y="741" width="0.1603%" height="15" fill="rgb(207,162,53)" fg:x="776" fg:w="2"/><text x="62.4295%" y="751.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (2 samples, 0.16%)</title><rect x="62.1795%" y="725" width="0.1603%" height="15" fill="rgb(207,169,9)" fg:x="776" fg:w="2"/><text x="62.4295%" y="735.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.16%)</title><rect x="62.1795%" y="709" width="0.1603%" height="15" fill="rgb(224,166,46)" fg:x="776" fg:w="2"/><text x="62.4295%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="62.1795%" y="693" width="0.1603%" height="15" fill="rgb(233,26,6)" fg:x="776" fg:w="2"/><text x="62.4295%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="62.1795%" y="677" width="0.1603%" height="15" fill="rgb(218,106,45)" fg:x="776" fg:w="2"/><text x="62.4295%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="62.2596%" y="661" width="0.0801%" height="15" fill="rgb(240,217,4)" fg:x="777" fg:w="1"/><text x="62.5096%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.2596%" y="645" width="0.0801%" height="15" fill="rgb(246,171,10)" fg:x="777" fg:w="1"/><text x="62.5096%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.2596%" y="629" width="0.0801%" height="15" fill="rgb(223,197,30)" fg:x="777" fg:w="1"/><text x="62.5096%" y="639.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="62.2596%" y="613" width="0.0801%" height="15" fill="rgb(207,92,16)" fg:x="777" fg:w="1"/><text x="62.5096%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="62.2596%" y="597" width="0.0801%" height="15" fill="rgb(211,6,44)" fg:x="777" fg:w="1"/><text x="62.5096%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="62.2596%" y="581" width="0.0801%" height="15" fill="rgb(219,139,2)" fg:x="777" fg:w="1"/><text x="62.5096%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="62.2596%" y="565" width="0.0801%" height="15" fill="rgb(224,103,21)" fg:x="777" fg:w="1"/><text x="62.5096%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="62.2596%" y="549" width="0.0801%" height="15" fill="rgb(254,110,48)" fg:x="777" fg:w="1"/><text x="62.5096%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="62.2596%" y="533" width="0.0801%" height="15" fill="rgb(212,88,19)" fg:x="777" fg:w="1"/><text x="62.5096%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="62.2596%" y="517" width="0.0801%" height="15" fill="rgb(248,103,6)" fg:x="777" fg:w="1"/><text x="62.5096%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="62.2596%" y="501" width="0.0801%" height="15" fill="rgb(214,53,46)" fg:x="777" fg:w="1"/><text x="62.5096%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.08%)</title><rect x="62.2596%" y="485" width="0.0801%" height="15" fill="rgb(236,190,24)" fg:x="777" fg:w="1"/><text x="62.5096%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (780 samples, 62.50%)</title><rect x="0.0000%" y="917" width="62.5000%" height="15" fill="rgb(254,58,28)" fg:x="0" fg:w="780"/><text x="0.2500%" y="927.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (780 samples, 62.50%)</title><rect x="0.0000%" y="901" width="62.5000%" height="15" fill="rgb(243,63,27)" fg:x="0" fg:w="780"/><text x="0.2500%" y="911.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (780 samples, 62.50%)</title><rect x="0.0000%" y="885" width="62.5000%" height="15" fill="rgb(206,81,20)" fg:x="0" fg:w="780"/><text x="0.2500%" y="895.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (2 samples, 0.16%)</title><rect x="62.3397%" y="869" width="0.1603%" height="15" fill="rgb(252,69,51)" fg:x="778" fg:w="2"/><text x="62.5897%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="62.3397%" y="853" width="0.1603%" height="15" fill="rgb(222,213,4)" fg:x="778" fg:w="2"/><text x="62.5897%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="62.4199%" y="837" width="0.0801%" height="15" fill="rgb(226,198,12)" fg:x="779" fg:w="1"/><text x="62.6699%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="62.5000%" y="853" width="0.0801%" height="15" fill="rgb(248,115,11)" fg:x="780" fg:w="1"/><text x="62.7500%" y="863.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="62.5000%" y="837" width="0.0801%" height="15" fill="rgb(221,148,54)" fg:x="780" fg:w="1"/><text x="62.7500%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="62.5000%" y="821" width="0.0801%" height="15" fill="rgb(214,209,51)" fg:x="780" fg:w="1"/><text x="62.7500%" y="831.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="62.6603%" y="757" width="0.2404%" height="15" fill="rgb(249,116,53)" fg:x="782" fg:w="3"/><text x="62.9103%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.8205%" y="741" width="0.0801%" height="15" fill="rgb(248,170,1)" fg:x="784" fg:w="1"/><text x="63.0705%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.9808%" y="741" width="0.0801%" height="15" fill="rgb(244,105,10)" fg:x="786" fg:w="1"/><text x="63.2308%" y="751.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="63.0609%" y="709" width="0.1603%" height="15" fill="rgb(229,100,5)" fg:x="787" fg:w="2"/><text x="63.3109%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="62.9006%" y="757" width="0.4006%" height="15" fill="rgb(233,221,39)" fg:x="785" fg:w="5"/><text x="63.1506%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="63.0609%" y="741" width="0.2404%" height="15" fill="rgb(233,88,21)" fg:x="787" fg:w="3"/><text x="63.3109%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="63.0609%" y="725" width="0.2404%" height="15" fill="rgb(206,13,0)" fg:x="787" fg:w="3"/><text x="63.3109%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="63.2212%" y="709" width="0.0801%" height="15" fill="rgb(242,15,35)" fg:x="789" fg:w="1"/><text x="63.4712%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.2212%" y="693" width="0.0801%" height="15" fill="rgb(247,142,41)" fg:x="789" fg:w="1"/><text x="63.4712%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="62.6603%" y="773" width="0.7212%" height="15" fill="rgb(245,51,29)" fg:x="782" fg:w="9"/><text x="62.9103%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::Write::write_fmt::Adapter&lt;std::sys::unix::stdio::Stderr&gt;&gt; (1 samples, 0.08%)</title><rect x="63.3013%" y="757" width="0.0801%" height="15" fill="rgb(228,209,43)" fg:x="790" fg:w="1"/><text x="63.5513%" y="767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.88%)</title><rect x="62.5801%" y="805" width="0.8814%" height="15" fill="rgb(233,185,9)" fg:x="781" fg:w="11"/><text x="62.8301%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.88%)</title><rect x="62.5801%" y="789" width="0.8814%" height="15" fill="rgb(226,93,0)" fg:x="781" fg:w="11"/><text x="62.8301%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.3814%" y="773" width="0.0801%" height="15" fill="rgb(245,194,43)" fg:x="791" fg:w="1"/><text x="63.6314%" y="783.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.04%)</title><rect x="62.5000%" y="869" width="1.0417%" height="15" fill="rgb(211,145,34)" fg:x="780" fg:w="13"/><text x="62.7500%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::State&gt; (12 samples, 0.96%)</title><rect x="62.5801%" y="853" width="0.9615%" height="15" fill="rgb(231,228,28)" fg:x="781" fg:w="12"/><text x="62.8301%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.96%)</title><rect x="62.5801%" y="837" width="0.9615%" height="15" fill="rgb(236,149,4)" fg:x="781" fg:w="12"/><text x="62.8301%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (12 samples, 0.96%)</title><rect x="62.5801%" y="821" width="0.9615%" height="15" fill="rgb(234,114,38)" fg:x="781" fg:w="12"/><text x="62.8301%" y="831.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.4615%" y="805" width="0.0801%" height="15" fill="rgb(246,132,51)" fg:x="792" fg:w="1"/><text x="63.7115%" y="815.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="63.6218%" y="789" width="0.0801%" height="15" fill="rgb(251,137,22)" fg:x="794" fg:w="1"/><text x="63.8718%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="63.6218%" y="773" width="0.0801%" height="15" fill="rgb(243,59,52)" fg:x="794" fg:w="1"/><text x="63.8718%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="63.6218%" y="757" width="0.0801%" height="15" fill="rgb(239,56,28)" fg:x="794" fg:w="1"/><text x="63.8718%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="63.6218%" y="741" width="0.0801%" height="15" fill="rgb(218,168,27)" fg:x="794" fg:w="1"/><text x="63.8718%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="63.6218%" y="725" width="0.0801%" height="15" fill="rgb(232,165,11)" fg:x="794" fg:w="1"/><text x="63.8718%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.6218%" y="709" width="0.0801%" height="15" fill="rgb(253,55,41)" fg:x="794" fg:w="1"/><text x="63.8718%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.6218%" y="693" width="0.0801%" height="15" fill="rgb(233,206,24)" fg:x="794" fg:w="1"/><text x="63.8718%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.6218%" y="677" width="0.0801%" height="15" fill="rgb(220,199,8)" fg:x="794" fg:w="1"/><text x="63.8718%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.6218%" y="661" width="0.0801%" height="15" fill="rgb(254,65,26)" fg:x="794" fg:w="1"/><text x="63.8718%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.6218%" y="645" width="0.0801%" height="15" fill="rgb(253,102,23)" fg:x="794" fg:w="1"/><text x="63.8718%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.6218%" y="629" width="0.0801%" height="15" fill="rgb(231,103,35)" fg:x="794" fg:w="1"/><text x="63.8718%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.6218%" y="613" width="0.0801%" height="15" fill="rgb(238,26,10)" fg:x="794" fg:w="1"/><text x="63.8718%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.6218%" y="597" width="0.0801%" height="15" fill="rgb(234,191,34)" fg:x="794" fg:w="1"/><text x="63.8718%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.6218%" y="581" width="0.0801%" height="15" fill="rgb(206,210,9)" fg:x="794" fg:w="1"/><text x="63.8718%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.6218%" y="565" width="0.0801%" height="15" fill="rgb(219,155,3)" fg:x="794" fg:w="1"/><text x="63.8718%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.6218%" y="549" width="0.0801%" height="15" fill="rgb(221,62,52)" fg:x="794" fg:w="1"/><text x="63.8718%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.6218%" y="533" width="0.0801%" height="15" fill="rgb(215,197,36)" fg:x="794" fg:w="1"/><text x="63.8718%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.6218%" y="517" width="0.0801%" height="15" fill="rgb(226,222,6)" fg:x="794" fg:w="1"/><text x="63.8718%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.6218%" y="501" width="0.0801%" height="15" fill="rgb(215,58,28)" fg:x="794" fg:w="1"/><text x="63.8718%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.6218%" y="485" width="0.0801%" height="15" fill="rgb(212,148,2)" fg:x="794" fg:w="1"/><text x="63.8718%" y="495.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="63.7019%" y="773" width="0.3205%" height="15" fill="rgb(208,21,42)" fg:x="795" fg:w="4"/><text x="63.9519%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="63.7019%" y="757" width="0.3205%" height="15" fill="rgb(209,107,26)" fg:x="795" fg:w="4"/><text x="63.9519%" y="767.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="63.7019%" y="741" width="0.3205%" height="15" fill="rgb(254,60,47)" fg:x="795" fg:w="4"/><text x="63.9519%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="63.7821%" y="725" width="0.2404%" height="15" fill="rgb(207,226,45)" fg:x="796" fg:w="3"/><text x="64.0321%" y="735.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="63.8622%" y="709" width="0.1603%" height="15" fill="rgb(223,124,22)" fg:x="797" fg:w="2"/><text x="64.1122%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="63.8622%" y="693" width="0.1603%" height="15" fill="rgb(240,162,13)" fg:x="797" fg:w="2"/><text x="64.1122%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.9423%" y="677" width="0.0801%" height="15" fill="rgb(244,199,31)" fg:x="798" fg:w="1"/><text x="64.1923%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="63.9423%" y="661" width="0.0801%" height="15" fill="rgb(207,92,16)" fg:x="798" fg:w="1"/><text x="64.1923%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.9423%" y="645" width="0.0801%" height="15" fill="rgb(215,31,19)" fg:x="798" fg:w="1"/><text x="64.1923%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (7 samples, 0.56%)</title><rect x="63.5417%" y="837" width="0.5609%" height="15" fill="rgb(245,118,14)" fg:x="793" fg:w="7"/><text x="63.7917%" y="847.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (6 samples, 0.48%)</title><rect x="63.6218%" y="821" width="0.4808%" height="15" fill="rgb(248,12,46)" fg:x="794" fg:w="6"/><text x="63.8718%" y="831.50"></text></g><g><title>engine::internal::Entities::add_persisted (6 samples, 0.48%)</title><rect x="63.6218%" y="805" width="0.4808%" height="15" fill="rgb(209,119,0)" fg:x="794" fg:w="6"/><text x="63.8718%" y="815.50"></text></g><g><title>kernel::model::entity::Entity::from_str (5 samples, 0.40%)</title><rect x="63.7019%" y="789" width="0.4006%" height="15" fill="rgb(254,51,44)" fg:x="795" fg:w="5"/><text x="63.9519%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.0224%" y="773" width="0.0801%" height="15" fill="rgb(253,182,35)" fg:x="799" fg:w="1"/><text x="64.2724%" y="783.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.0224%" y="757" width="0.0801%" height="15" fill="rgb(205,198,39)" fg:x="799" fg:w="1"/><text x="64.2724%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.0224%" y="741" width="0.0801%" height="15" fill="rgb(251,175,48)" fg:x="799" fg:w="1"/><text x="64.2724%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="64.2628%" y="805" width="0.0801%" height="15" fill="rgb(239,38,17)" fg:x="802" fg:w="1"/><text x="64.5128%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="64.2628%" y="789" width="0.0801%" height="15" fill="rgb(212,101,8)" fg:x="802" fg:w="1"/><text x="64.5128%" y="799.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="64.2628%" y="773" width="0.0801%" height="15" fill="rgb(228,35,17)" fg:x="802" fg:w="1"/><text x="64.5128%" y="783.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="64.2628%" y="757" width="0.0801%" height="15" fill="rgb(214,95,8)" fg:x="802" fg:w="1"/><text x="64.5128%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="64.2628%" y="741" width="0.0801%" height="15" fill="rgb(210,176,35)" fg:x="802" fg:w="1"/><text x="64.5128%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="64.2628%" y="725" width="0.0801%" height="15" fill="rgb(226,4,3)" fg:x="802" fg:w="1"/><text x="64.5128%" y="735.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="64.2628%" y="709" width="0.0801%" height="15" fill="rgb(232,133,14)" fg:x="802" fg:w="1"/><text x="64.5128%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="64.2628%" y="693" width="0.0801%" height="15" fill="rgb(250,191,8)" fg:x="802" fg:w="1"/><text x="64.5128%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="64.2628%" y="677" width="0.0801%" height="15" fill="rgb(213,12,45)" fg:x="802" fg:w="1"/><text x="64.5128%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="64.2628%" y="661" width="0.0801%" height="15" fill="rgb(233,78,26)" fg:x="802" fg:w="1"/><text x="64.5128%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="64.2628%" y="645" width="0.0801%" height="15" fill="rgb(245,222,11)" fg:x="802" fg:w="1"/><text x="64.5128%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="64.2628%" y="629" width="0.0801%" height="15" fill="rgb(216,174,12)" fg:x="802" fg:w="1"/><text x="64.5128%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="64.2628%" y="613" width="0.0801%" height="15" fill="rgb(213,15,9)" fg:x="802" fg:w="1"/><text x="64.5128%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="64.2628%" y="597" width="0.0801%" height="15" fill="rgb(238,103,32)" fg:x="802" fg:w="1"/><text x="64.5128%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="64.2628%" y="581" width="0.0801%" height="15" fill="rgb(245,85,15)" fg:x="802" fg:w="1"/><text x="64.5128%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="64.2628%" y="565" width="0.0801%" height="15" fill="rgb(254,204,5)" fg:x="802" fg:w="1"/><text x="64.5128%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="64.2628%" y="549" width="0.0801%" height="15" fill="rgb(231,178,15)" fg:x="802" fg:w="1"/><text x="64.5128%" y="559.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="64.2628%" y="533" width="0.0801%" height="15" fill="rgb(248,151,3)" fg:x="802" fg:w="1"/><text x="64.5128%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="64.2628%" y="517" width="0.0801%" height="15" fill="rgb(250,139,13)" fg:x="802" fg:w="1"/><text x="64.5128%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.3429%" y="789" width="0.0801%" height="15" fill="rgb(243,107,53)" fg:x="803" fg:w="1"/><text x="64.5929%" y="799.50"></text></g><g><title>libloading::os::unix::Library::open (6 samples, 0.48%)</title><rect x="64.3429%" y="805" width="0.4808%" height="15" fill="rgb(232,81,15)" fg:x="803" fg:w="6"/><text x="64.5929%" y="815.50"></text></g><g><title>dlopen (5 samples, 0.40%)</title><rect x="64.4231%" y="789" width="0.4006%" height="15" fill="rgb(225,187,48)" fg:x="804" fg:w="5"/><text x="64.6731%" y="799.50"></text></g><g><title>_dl_catch_error (5 samples, 0.40%)</title><rect x="64.4231%" y="773" width="0.4006%" height="15" fill="rgb(205,116,12)" fg:x="804" fg:w="5"/><text x="64.6731%" y="783.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.40%)</title><rect x="64.4231%" y="757" width="0.4006%" height="15" fill="rgb(220,222,31)" fg:x="804" fg:w="5"/><text x="64.6731%" y="767.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="64.5032%" y="741" width="0.3205%" height="15" fill="rgb(233,187,49)" fg:x="805" fg:w="4"/><text x="64.7532%" y="751.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="64.5032%" y="725" width="0.3205%" height="15" fill="rgb(211,168,53)" fg:x="805" fg:w="4"/><text x="64.7532%" y="735.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (17 samples, 1.36%)</title><rect x="63.5417%" y="869" width="1.3622%" height="15" fill="rgb(206,160,16)" fg:x="793" fg:w="17"/><text x="63.7917%" y="879.50"></text></g><g><title>engine::session::Session::new (17 samples, 1.36%)</title><rect x="63.5417%" y="853" width="1.3622%" height="15" fill="rgb(254,164,13)" fg:x="793" fg:w="17"/><text x="63.7917%" y="863.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (10 samples, 0.80%)</title><rect x="64.1026%" y="837" width="0.8013%" height="15" fill="rgb(229,45,30)" fg:x="800" fg:w="10"/><text x="64.3526%" y="847.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (9 samples, 0.72%)</title><rect x="64.1827%" y="821" width="0.7212%" height="15" fill="rgb(237,32,10)" fg:x="801" fg:w="9"/><text x="64.4327%" y="831.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="64.8237%" y="805" width="0.0801%" height="15" fill="rgb(251,20,47)" fg:x="809" fg:w="1"/><text x="65.0737%" y="815.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="64.8237%" y="789" width="0.0801%" height="15" fill="rgb(251,116,12)" fg:x="809" fg:w="1"/><text x="65.0737%" y="799.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="64.9038%" y="853" width="0.0801%" height="15" fill="rgb(214,227,27)" fg:x="810" fg:w="1"/><text x="65.1538%" y="863.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.9840%" y="853" width="0.1603%" height="15" fill="rgb(248,10,53)" fg:x="811" fg:w="2"/><text x="65.2340%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.9840%" y="837" width="0.1603%" height="15" fill="rgb(221,176,25)" fg:x="811" fg:w="2"/><text x="65.2340%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.9840%" y="821" width="0.1603%" height="15" fill="rgb(205,70,46)" fg:x="811" fg:w="2"/><text x="65.2340%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="64.9840%" y="805" width="0.1603%" height="15" fill="rgb(217,45,38)" fg:x="811" fg:w="2"/><text x="65.2340%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="64.9840%" y="789" width="0.1603%" height="15" fill="rgb(243,6,54)" fg:x="811" fg:w="2"/><text x="65.2340%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="64.9840%" y="773" width="0.1603%" height="15" fill="rgb(242,76,23)" fg:x="811" fg:w="2"/><text x="65.2340%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="64.9840%" y="757" width="0.1603%" height="15" fill="rgb(239,166,0)" fg:x="811" fg:w="2"/><text x="65.2340%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="64.9840%" y="741" width="0.1603%" height="15" fill="rgb(238,174,32)" fg:x="811" fg:w="2"/><text x="65.2340%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="64.9840%" y="725" width="0.1603%" height="15" fill="rgb(238,124,44)" fg:x="811" fg:w="2"/><text x="65.2340%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="64.9840%" y="709" width="0.1603%" height="15" fill="rgb(206,185,9)" fg:x="811" fg:w="2"/><text x="65.2340%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="64.9840%" y="693" width="0.1603%" height="15" fill="rgb(215,157,17)" fg:x="811" fg:w="2"/><text x="65.2340%" y="703.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="64.9840%" y="677" width="0.1603%" height="15" fill="rgb(251,17,29)" fg:x="811" fg:w="2"/><text x="65.2340%" y="687.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="64.9840%" y="661" width="0.1603%" height="15" fill="rgb(227,113,27)" fg:x="811" fg:w="2"/><text x="65.2340%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="65.1442%" y="853" width="0.0801%" height="15" fill="rgb(217,226,24)" fg:x="813" fg:w="1"/><text x="65.3942%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="65.1442%" y="837" width="0.0801%" height="15" fill="rgb(251,99,38)" fg:x="813" fg:w="1"/><text x="65.3942%" y="847.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.1442%" y="821" width="0.0801%" height="15" fill="rgb(231,147,19)" fg:x="813" fg:w="1"/><text x="65.3942%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::surround::Surroundings&gt; (1 samples, 0.08%)</title><rect x="65.2244%" y="853" width="0.0801%" height="15" fill="rgb(230,86,8)" fg:x="814" fg:w="1"/><text x="65.4744%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="65.2244%" y="837" width="0.0801%" height="15" fill="rgb(237,159,39)" fg:x="814" fg:w="1"/><text x="65.4744%" y="847.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="65.2244%" y="821" width="0.0801%" height="15" fill="rgb(247,179,47)" fg:x="814" fg:w="1"/><text x="65.4744%" y="831.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="65.3045%" y="821" width="0.0801%" height="15" fill="rgb(253,152,26)" fg:x="815" fg:w="1"/><text x="65.5545%" y="831.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="65.3045%" y="805" width="0.0801%" height="15" fill="rgb(222,211,15)" fg:x="815" fg:w="1"/><text x="65.5545%" y="815.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="65.3045%" y="789" width="0.0801%" height="15" fill="rgb(236,193,6)" fg:x="815" fg:w="1"/><text x="65.5545%" y="799.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.3045%" y="773" width="0.0801%" height="15" fill="rgb(226,206,10)" fg:x="815" fg:w="1"/><text x="65.5545%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.3045%" y="757" width="0.0801%" height="15" fill="rgb(213,125,22)" fg:x="815" fg:w="1"/><text x="65.5545%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.3045%" y="741" width="0.0801%" height="15" fill="rgb(221,66,28)" fg:x="815" fg:w="1"/><text x="65.5545%" y="751.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="65.3846%" y="773" width="0.2404%" height="15" fill="rgb(222,84,53)" fg:x="816" fg:w="3"/><text x="65.6346%" y="783.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="65.3846%" y="757" width="0.2404%" height="15" fill="rgb(243,50,15)" fg:x="816" fg:w="3"/><text x="65.6346%" y="767.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="65.3846%" y="741" width="0.2404%" height="15" fill="rgb(208,184,23)" fg:x="816" fg:w="3"/><text x="65.6346%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="65.5449%" y="725" width="0.0801%" height="15" fill="rgb(221,83,2)" fg:x="818" fg:w="1"/><text x="65.7949%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="65.5449%" y="709" width="0.0801%" height="15" fill="rgb(236,53,24)" fg:x="818" fg:w="1"/><text x="65.7949%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="65.6250%" y="757" width="0.2404%" height="15" fill="rgb(244,171,29)" fg:x="819" fg:w="3"/><text x="65.8750%" y="767.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="65.7051%" y="741" width="0.1603%" height="15" fill="rgb(205,19,11)" fg:x="820" fg:w="2"/><text x="65.9551%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="65.7051%" y="725" width="0.1603%" height="15" fill="rgb(207,108,29)" fg:x="820" fg:w="2"/><text x="65.9551%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="65.7853%" y="709" width="0.0801%" height="15" fill="rgb(236,215,43)" fg:x="821" fg:w="1"/><text x="66.0353%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="65.9455%" y="741" width="0.0801%" height="15" fill="rgb(213,58,35)" fg:x="823" fg:w="1"/><text x="66.1955%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="65.9455%" y="725" width="0.0801%" height="15" fill="rgb(220,211,46)" fg:x="823" fg:w="1"/><text x="66.1955%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="65.9455%" y="709" width="0.0801%" height="15" fill="rgb(212,134,16)" fg:x="823" fg:w="1"/><text x="66.1955%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="66.0256%" y="725" width="0.0801%" height="15" fill="rgb(232,90,44)" fg:x="824" fg:w="1"/><text x="66.2756%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="66.0256%" y="709" width="0.0801%" height="15" fill="rgb(212,18,36)" fg:x="824" fg:w="1"/><text x="66.2756%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="66.0256%" y="693" width="0.0801%" height="15" fill="rgb(206,112,24)" fg:x="824" fg:w="1"/><text x="66.2756%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="66.1058%" y="677" width="0.1603%" height="15" fill="rgb(238,223,40)" fg:x="825" fg:w="2"/><text x="66.3558%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="66.1058%" y="661" width="0.1603%" height="15" fill="rgb(226,169,20)" fg:x="825" fg:w="2"/><text x="66.3558%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="66.2660%" y="677" width="0.1603%" height="15" fill="rgb(241,64,52)" fg:x="827" fg:w="2"/><text x="66.5160%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="66.2660%" y="661" width="0.1603%" height="15" fill="rgb(228,120,25)" fg:x="827" fg:w="2"/><text x="66.5160%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="66.3462%" y="645" width="0.0801%" height="15" fill="rgb(234,108,19)" fg:x="828" fg:w="1"/><text x="66.5962%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="66.1058%" y="693" width="0.4006%" height="15" fill="rgb(236,133,29)" fg:x="825" fg:w="5"/><text x="66.3558%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="66.4263%" y="677" width="0.0801%" height="15" fill="rgb(246,174,53)" fg:x="829" fg:w="1"/><text x="66.6763%" y="687.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (15 samples, 1.20%)</title><rect x="65.3846%" y="789" width="1.2019%" height="15" fill="rgb(210,105,35)" fg:x="816" fg:w="15"/><text x="65.6346%" y="799.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="65.6250%" y="773" width="0.9615%" height="15" fill="rgb(225,27,26)" fg:x="819" fg:w="12"/><text x="65.8750%" y="783.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="65.8654%" y="757" width="0.7212%" height="15" fill="rgb(233,2,39)" fg:x="822" fg:w="9"/><text x="66.1154%" y="767.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="66.0256%" y="741" width="0.5609%" height="15" fill="rgb(219,164,26)" fg:x="824" fg:w="7"/><text x="66.2756%" y="751.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="66.1058%" y="725" width="0.4808%" height="15" fill="rgb(236,211,5)" fg:x="825" fg:w="6"/><text x="66.3558%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="66.1058%" y="709" width="0.4808%" height="15" fill="rgb(244,227,23)" fg:x="825" fg:w="6"/><text x="66.3558%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="66.5064%" y="693" width="0.0801%" height="15" fill="rgb(230,184,8)" fg:x="830" fg:w="1"/><text x="66.7564%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="66.5064%" y="677" width="0.0801%" height="15" fill="rgb(217,125,48)" fg:x="830" fg:w="1"/><text x="66.7564%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.5064%" y="661" width="0.0801%" height="15" fill="rgb(223,192,47)" fg:x="830" fg:w="1"/><text x="66.7564%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="66.5064%" y="645" width="0.0801%" height="15" fill="rgb(226,119,10)" fg:x="830" fg:w="1"/><text x="66.7564%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="66.5064%" y="629" width="0.0801%" height="15" fill="rgb(221,49,29)" fg:x="830" fg:w="1"/><text x="66.7564%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="66.5064%" y="613" width="0.0801%" height="15" fill="rgb(217,205,19)" fg:x="830" fg:w="1"/><text x="66.7564%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.5865%" y="757" width="0.0801%" height="15" fill="rgb(242,104,7)" fg:x="831" fg:w="1"/><text x="66.8365%" y="767.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.6667%" y="709" width="0.0801%" height="15" fill="rgb(209,154,48)" fg:x="832" fg:w="1"/><text x="66.9167%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.6667%" y="693" width="0.0801%" height="15" fill="rgb(219,213,46)" fg:x="832" fg:w="1"/><text x="66.9167%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.7468%" y="677" width="0.0801%" height="15" fill="rgb(229,105,38)" fg:x="833" fg:w="1"/><text x="66.9968%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="66.5865%" y="789" width="0.3205%" height="15" fill="rgb(205,151,5)" fg:x="831" fg:w="4"/><text x="66.8365%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="66.5865%" y="773" width="0.3205%" height="15" fill="rgb(248,115,40)" fg:x="831" fg:w="4"/><text x="66.8365%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="66.6667%" y="757" width="0.2404%" height="15" fill="rgb(206,179,2)" fg:x="832" fg:w="3"/><text x="66.9167%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="66.6667%" y="741" width="0.2404%" height="15" fill="rgb(230,103,24)" fg:x="832" fg:w="3"/><text x="66.9167%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="66.6667%" y="725" width="0.2404%" height="15" fill="rgb(218,152,4)" fg:x="832" fg:w="3"/><text x="66.9167%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="66.7468%" y="709" width="0.1603%" height="15" fill="rgb(236,161,54)" fg:x="833" fg:w="2"/><text x="66.9968%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="66.7468%" y="693" width="0.1603%" height="15" fill="rgb(226,65,17)" fg:x="833" fg:w="2"/><text x="66.9968%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.8269%" y="677" width="0.0801%" height="15" fill="rgb(221,134,44)" fg:x="834" fg:w="1"/><text x="67.0769%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.8269%" y="661" width="0.0801%" height="15" fill="rgb(251,129,4)" fg:x="834" fg:w="1"/><text x="67.0769%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.8269%" y="645" width="0.0801%" height="15" fill="rgb(244,32,34)" fg:x="834" fg:w="1"/><text x="67.0769%" y="655.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="66.9071%" y="773" width="0.0801%" height="15" fill="rgb(251,224,37)" fg:x="835" fg:w="1"/><text x="67.1571%" y="783.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="66.9071%" y="757" width="0.0801%" height="15" fill="rgb(248,117,31)" fg:x="835" fg:w="1"/><text x="67.1571%" y="767.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="66.9071%" y="741" width="0.0801%" height="15" fill="rgb(222,208,37)" fg:x="835" fg:w="1"/><text x="67.1571%" y="751.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="66.9872%" y="693" width="0.1603%" height="15" fill="rgb(234,211,25)" fg:x="836" fg:w="2"/><text x="67.2372%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="67.0673%" y="677" width="0.0801%" height="15" fill="rgb(211,72,6)" fg:x="837" fg:w="1"/><text x="67.3173%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="67.0673%" y="661" width="0.0801%" height="15" fill="rgb(249,198,38)" fg:x="837" fg:w="1"/><text x="67.3173%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.0673%" y="645" width="0.0801%" height="15" fill="rgb(221,86,51)" fg:x="837" fg:w="1"/><text x="67.3173%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.0673%" y="629" width="0.0801%" height="15" fill="rgb(226,178,43)" fg:x="837" fg:w="1"/><text x="67.3173%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="67.0673%" y="613" width="0.0801%" height="15" fill="rgb(215,145,7)" fg:x="837" fg:w="1"/><text x="67.3173%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="67.3077%" y="677" width="0.0801%" height="15" fill="rgb(250,202,36)" fg:x="840" fg:w="1"/><text x="67.5577%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="67.3878%" y="613" width="0.0801%" height="15" fill="rgb(215,86,13)" fg:x="841" fg:w="1"/><text x="67.6378%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="66.9872%" y="709" width="0.5609%" height="15" fill="rgb(221,134,12)" fg:x="836" fg:w="7"/><text x="67.2372%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="67.1474%" y="693" width="0.4006%" height="15" fill="rgb(213,82,10)" fg:x="838" fg:w="5"/><text x="67.3974%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="67.3878%" y="677" width="0.1603%" height="15" fill="rgb(214,142,0)" fg:x="841" fg:w="2"/><text x="67.6378%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="67.3878%" y="661" width="0.1603%" height="15" fill="rgb(205,145,9)" fg:x="841" fg:w="2"/><text x="67.6378%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="67.3878%" y="645" width="0.1603%" height="15" fill="rgb(244,214,8)" fg:x="841" fg:w="2"/><text x="67.6378%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="67.3878%" y="629" width="0.1603%" height="15" fill="rgb(224,72,51)" fg:x="841" fg:w="2"/><text x="67.6378%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="67.4679%" y="613" width="0.0801%" height="15" fill="rgb(233,137,37)" fg:x="842" fg:w="1"/><text x="67.7179%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="67.4679%" y="597" width="0.0801%" height="15" fill="rgb(208,71,28)" fg:x="842" fg:w="1"/><text x="67.7179%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="67.4679%" y="581" width="0.0801%" height="15" fill="rgb(226,31,7)" fg:x="842" fg:w="1"/><text x="67.7179%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.4679%" y="565" width="0.0801%" height="15" fill="rgb(229,62,18)" fg:x="842" fg:w="1"/><text x="67.7179%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.4679%" y="549" width="0.0801%" height="15" fill="rgb(226,74,28)" fg:x="842" fg:w="1"/><text x="67.7179%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.4679%" y="533" width="0.0801%" height="15" fill="rgb(214,170,18)" fg:x="842" fg:w="1"/><text x="67.7179%" y="543.50"></text></g><g><title>engine::session::Session::flush (29 samples, 2.32%)</title><rect x="65.3045%" y="853" width="2.3237%" height="15" fill="rgb(227,229,35)" fg:x="815" fg:w="29"/><text x="65.5545%" y="863.50">e..</text></g><g><title>engine::session::Session::save_entity_changes (29 samples, 2.32%)</title><rect x="65.3045%" y="837" width="2.3237%" height="15" fill="rgb(225,181,39)" fg:x="815" fg:w="29"/><text x="65.5545%" y="847.50">e..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (28 samples, 2.24%)</title><rect x="65.3846%" y="821" width="2.2436%" height="15" fill="rgb(253,124,44)" fg:x="816" fg:w="28"/><text x="65.6346%" y="831.50">e..</text></g><g><title>engine::session::SavesEntities::check_for_changes (28 samples, 2.24%)</title><rect x="65.3846%" y="805" width="2.2436%" height="15" fill="rgb(220,75,18)" fg:x="816" fg:w="28"/><text x="65.6346%" y="815.50">e..</text></g><g><title>kernel::model::any_entity_changes (9 samples, 0.72%)</title><rect x="66.9071%" y="789" width="0.7212%" height="15" fill="rgb(239,175,43)" fg:x="835" fg:w="9"/><text x="67.1571%" y="799.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.64%)</title><rect x="66.9872%" y="773" width="0.6410%" height="15" fill="rgb(228,112,50)" fg:x="836" fg:w="8"/><text x="67.2372%" y="783.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.64%)</title><rect x="66.9872%" y="757" width="0.6410%" height="15" fill="rgb(232,105,36)" fg:x="836" fg:w="8"/><text x="67.2372%" y="767.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.64%)</title><rect x="66.9872%" y="741" width="0.6410%" height="15" fill="rgb(227,137,47)" fg:x="836" fg:w="8"/><text x="67.2372%" y="751.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="66.9872%" y="725" width="0.6410%" height="15" fill="rgb(217,51,9)" fg:x="836" fg:w="8"/><text x="67.2372%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.5481%" y="709" width="0.0801%" height="15" fill="rgb(245,117,0)" fg:x="843" fg:w="1"/><text x="67.7981%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="67.7885%" y="773" width="0.0801%" height="15" fill="rgb(252,52,30)" fg:x="846" fg:w="1"/><text x="68.0385%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="67.7885%" y="757" width="0.0801%" height="15" fill="rgb(227,85,33)" fg:x="846" fg:w="1"/><text x="68.0385%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.7885%" y="741" width="0.0801%" height="15" fill="rgb(220,157,20)" fg:x="846" fg:w="1"/><text x="68.0385%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.7885%" y="725" width="0.0801%" height="15" fill="rgb(254,14,34)" fg:x="846" fg:w="1"/><text x="68.0385%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.7885%" y="709" width="0.0801%" height="15" fill="rgb(216,103,41)" fg:x="846" fg:w="1"/><text x="68.0385%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.8686%" y="741" width="0.0801%" height="15" fill="rgb(245,221,9)" fg:x="847" fg:w="1"/><text x="68.1186%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.8686%" y="725" width="0.0801%" height="15" fill="rgb(254,136,47)" fg:x="847" fg:w="1"/><text x="68.1186%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.8686%" y="709" width="0.0801%" height="15" fill="rgb(235,71,46)" fg:x="847" fg:w="1"/><text x="68.1186%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.8686%" y="693" width="0.0801%" height="15" fill="rgb(242,154,29)" fg:x="847" fg:w="1"/><text x="68.1186%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.8686%" y="677" width="0.0801%" height="15" fill="rgb(210,65,31)" fg:x="847" fg:w="1"/><text x="68.1186%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.8686%" y="661" width="0.0801%" height="15" fill="rgb(244,9,50)" fg:x="847" fg:w="1"/><text x="68.1186%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="67.7083%" y="837" width="0.3205%" height="15" fill="rgb(215,141,38)" fg:x="845" fg:w="4"/><text x="67.9583%" y="847.50"></text></g><g><title>engine::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="67.7083%" y="821" width="0.3205%" height="15" fill="rgb(241,129,6)" fg:x="845" fg:w="4"/><text x="67.9583%" y="831.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="67.7885%" y="805" width="0.2404%" height="15" fill="rgb(253,169,4)" fg:x="846" fg:w="3"/><text x="68.0385%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="67.7885%" y="789" width="0.2404%" height="15" fill="rgb(237,82,36)" fg:x="846" fg:w="3"/><text x="68.0385%" y="799.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="67.8686%" y="773" width="0.1603%" height="15" fill="rgb(209,171,11)" fg:x="847" fg:w="2"/><text x="68.1186%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="67.8686%" y="757" width="0.1603%" height="15" fill="rgb(242,19,22)" fg:x="847" fg:w="2"/><text x="68.1186%" y="767.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="67.9487%" y="741" width="0.0801%" height="15" fill="rgb(251,122,24)" fg:x="848" fg:w="1"/><text x="68.1987%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="67.9487%" y="725" width="0.0801%" height="15" fill="rgb(226,166,42)" fg:x="848" fg:w="1"/><text x="68.1987%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="67.9487%" y="709" width="0.0801%" height="15" fill="rgb(244,101,48)" fg:x="848" fg:w="1"/><text x="68.1987%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="67.9487%" y="693" width="0.0801%" height="15" fill="rgb(227,125,1)" fg:x="848" fg:w="1"/><text x="68.1987%" y="703.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="68.0288%" y="773" width="0.0801%" height="15" fill="rgb(206,79,43)" fg:x="849" fg:w="1"/><text x="68.2788%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="68.0288%" y="757" width="0.0801%" height="15" fill="rgb(241,109,41)" fg:x="849" fg:w="1"/><text x="68.2788%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="68.0288%" y="741" width="0.0801%" height="15" fill="rgb(219,73,4)" fg:x="849" fg:w="1"/><text x="68.2788%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="68.0288%" y="821" width="0.1603%" height="15" fill="rgb(239,25,41)" fg:x="849" fg:w="2"/><text x="68.2788%" y="831.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="68.0288%" y="805" width="0.1603%" height="15" fill="rgb(208,88,46)" fg:x="849" fg:w="2"/><text x="68.2788%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="68.0288%" y="789" width="0.1603%" height="15" fill="rgb(239,184,9)" fg:x="849" fg:w="2"/><text x="68.2788%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="68.1090%" y="773" width="0.0801%" height="15" fill="rgb(223,114,13)" fg:x="850" fg:w="1"/><text x="68.3590%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="68.1090%" y="757" width="0.0801%" height="15" fill="rgb(214,28,42)" fg:x="850" fg:w="1"/><text x="68.3590%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.1090%" y="741" width="0.0801%" height="15" fill="rgb(252,32,44)" fg:x="850" fg:w="1"/><text x="68.3590%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="68.1090%" y="725" width="0.0801%" height="15" fill="rgb(231,159,4)" fg:x="850" fg:w="1"/><text x="68.3590%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.1090%" y="709" width="0.0801%" height="15" fill="rgb(210,35,26)" fg:x="850" fg:w="1"/><text x="68.3590%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.1090%" y="693" width="0.0801%" height="15" fill="rgb(208,190,37)" fg:x="850" fg:w="1"/><text x="68.3590%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.1090%" y="677" width="0.0801%" height="15" fill="rgb(226,148,22)" fg:x="850" fg:w="1"/><text x="68.3590%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.1090%" y="661" width="0.0801%" height="15" fill="rgb(242,153,24)" fg:x="850" fg:w="1"/><text x="68.3590%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="68.1891%" y="821" width="0.0801%" height="15" fill="rgb(213,133,7)" fg:x="851" fg:w="1"/><text x="68.4391%" y="831.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="68.1891%" y="805" width="0.0801%" height="15" fill="rgb(248,206,18)" fg:x="851" fg:w="1"/><text x="68.4391%" y="815.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="68.1891%" y="789" width="0.0801%" height="15" fill="rgb(233,157,4)" fg:x="851" fg:w="1"/><text x="68.4391%" y="799.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="68.1891%" y="773" width="0.0801%" height="15" fill="rgb(249,179,32)" fg:x="851" fg:w="1"/><text x="68.4391%" y="783.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="68.1891%" y="757" width="0.0801%" height="15" fill="rgb(248,69,35)" fg:x="851" fg:w="1"/><text x="68.4391%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="68.1891%" y="741" width="0.0801%" height="15" fill="rgb(249,158,38)" fg:x="851" fg:w="1"/><text x="68.4391%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.1891%" y="725" width="0.0801%" height="15" fill="rgb(223,18,43)" fg:x="851" fg:w="1"/><text x="68.4391%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.2692%" y="805" width="0.0801%" height="15" fill="rgb(238,42,45)" fg:x="852" fg:w="1"/><text x="68.5192%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.3494%" y="725" width="0.0801%" height="15" fill="rgb(219,65,47)" fg:x="853" fg:w="1"/><text x="68.5994%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.3494%" y="709" width="0.0801%" height="15" fill="rgb(248,153,12)" fg:x="853" fg:w="1"/><text x="68.5994%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.3494%" y="693" width="0.0801%" height="15" fill="rgb(240,118,4)" fg:x="853" fg:w="1"/><text x="68.5994%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.3494%" y="677" width="0.0801%" height="15" fill="rgb(250,96,34)" fg:x="853" fg:w="1"/><text x="68.5994%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.3494%" y="661" width="0.0801%" height="15" fill="rgb(221,15,4)" fg:x="853" fg:w="1"/><text x="68.5994%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.3494%" y="645" width="0.0801%" height="15" fill="rgb(217,149,33)" fg:x="853" fg:w="1"/><text x="68.5994%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.3494%" y="629" width="0.0801%" height="15" fill="rgb(213,58,29)" fg:x="853" fg:w="1"/><text x="68.5994%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.3494%" y="613" width="0.0801%" height="15" fill="rgb(236,218,9)" fg:x="853" fg:w="1"/><text x="68.5994%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.3494%" y="597" width="0.0801%" height="15" fill="rgb(248,40,19)" fg:x="853" fg:w="1"/><text x="68.5994%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.3494%" y="581" width="0.0801%" height="15" fill="rgb(212,17,6)" fg:x="853" fg:w="1"/><text x="68.5994%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.3494%" y="565" width="0.0801%" height="15" fill="rgb(206,212,20)" fg:x="853" fg:w="1"/><text x="68.5994%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.3494%" y="549" width="0.0801%" height="15" fill="rgb(229,80,37)" fg:x="853" fg:w="1"/><text x="68.5994%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.3494%" y="533" width="0.0801%" height="15" fill="rgb(253,8,37)" fg:x="853" fg:w="1"/><text x="68.5994%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.3494%" y="517" width="0.0801%" height="15" fill="rgb(215,16,43)" fg:x="853" fg:w="1"/><text x="68.5994%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.3494%" y="501" width="0.0801%" height="15" fill="rgb(236,219,16)" fg:x="853" fg:w="1"/><text x="68.5994%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.3494%" y="485" width="0.0801%" height="15" fill="rgb(251,0,3)" fg:x="853" fg:w="1"/><text x="68.5994%" y="495.50"></text></g><g><title>plugins_core::build::Build::holding (12 samples, 0.96%)</title><rect x="67.6282%" y="853" width="0.9615%" height="15" fill="rgb(207,133,37)" fg:x="844" fg:w="12"/><text x="67.8782%" y="863.50"></text></g><g><title>plugins_core::tools::set_container (7 samples, 0.56%)</title><rect x="68.0288%" y="837" width="0.5609%" height="15" fill="rgb(250,143,20)" fg:x="849" fg:w="7"/><text x="68.2788%" y="847.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="68.2692%" y="821" width="0.3205%" height="15" fill="rgb(242,19,50)" fg:x="852" fg:w="4"/><text x="68.5192%" y="831.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="68.3494%" y="805" width="0.2404%" height="15" fill="rgb(206,124,43)" fg:x="853" fg:w="3"/><text x="68.5994%" y="815.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="68.3494%" y="789" width="0.2404%" height="15" fill="rgb(229,4,38)" fg:x="853" fg:w="3"/><text x="68.5994%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="68.3494%" y="773" width="0.2404%" height="15" fill="rgb(247,220,45)" fg:x="853" fg:w="3"/><text x="68.5994%" y="783.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="68.3494%" y="757" width="0.2404%" height="15" fill="rgb(247,195,0)" fg:x="853" fg:w="3"/><text x="68.5994%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="68.3494%" y="741" width="0.2404%" height="15" fill="rgb(252,12,19)" fg:x="853" fg:w="3"/><text x="68.5994%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.4295%" y="725" width="0.1603%" height="15" fill="rgb(222,49,50)" fg:x="854" fg:w="2"/><text x="68.6795%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.4295%" y="709" width="0.1603%" height="15" fill="rgb(209,157,28)" fg:x="854" fg:w="2"/><text x="68.6795%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.4295%" y="693" width="0.1603%" height="15" fill="rgb(238,174,24)" fg:x="854" fg:w="2"/><text x="68.6795%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.4295%" y="677" width="0.1603%" height="15" fill="rgb(224,17,28)" fg:x="854" fg:w="2"/><text x="68.6795%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="68.4295%" y="661" width="0.1603%" height="15" fill="rgb(249,7,29)" fg:x="854" fg:w="2"/><text x="68.6795%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.4295%" y="645" width="0.1603%" height="15" fill="rgb(243,178,4)" fg:x="854" fg:w="2"/><text x="68.6795%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.5096%" y="629" width="0.0801%" height="15" fill="rgb(246,138,35)" fg:x="855" fg:w="1"/><text x="68.7596%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.5096%" y="613" width="0.0801%" height="15" fill="rgb(251,85,18)" fg:x="855" fg:w="1"/><text x="68.7596%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.5096%" y="597" width="0.0801%" height="15" fill="rgb(254,55,9)" fg:x="855" fg:w="1"/><text x="68.7596%" y="607.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="68.5897%" y="853" width="0.0801%" height="15" fill="rgb(248,4,50)" fg:x="856" fg:w="1"/><text x="68.8397%" y="863.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="68.5897%" y="837" width="0.0801%" height="15" fill="rgb(215,208,14)" fg:x="856" fg:w="1"/><text x="68.8397%" y="847.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="68.5897%" y="821" width="0.0801%" height="15" fill="rgb(218,37,18)" fg:x="856" fg:w="1"/><text x="68.8397%" y="831.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="68.5897%" y="805" width="0.0801%" height="15" fill="rgb(206,104,13)" fg:x="856" fg:w="1"/><text x="68.8397%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.5897%" y="789" width="0.0801%" height="15" fill="rgb(248,94,22)" fg:x="856" fg:w="1"/><text x="68.8397%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="68.6699%" y="837" width="0.0801%" height="15" fill="rgb(235,42,46)" fg:x="857" fg:w="1"/><text x="68.9199%" y="847.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="68.6699%" y="821" width="0.0801%" height="15" fill="rgb(220,228,48)" fg:x="857" fg:w="1"/><text x="68.9199%" y="831.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="68.6699%" y="805" width="0.0801%" height="15" fill="rgb(216,58,12)" fg:x="857" fg:w="1"/><text x="68.9199%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="68.6699%" y="789" width="0.0801%" height="15" fill="rgb(223,97,52)" fg:x="857" fg:w="1"/><text x="68.9199%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="68.6699%" y="773" width="0.0801%" height="15" fill="rgb(208,159,17)" fg:x="857" fg:w="1"/><text x="68.9199%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="68.6699%" y="757" width="0.0801%" height="15" fill="rgb(215,172,9)" fg:x="857" fg:w="1"/><text x="68.9199%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.6699%" y="741" width="0.0801%" height="15" fill="rgb(252,175,30)" fg:x="857" fg:w="1"/><text x="68.9199%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.6699%" y="725" width="0.0801%" height="15" fill="rgb(209,159,10)" fg:x="857" fg:w="1"/><text x="68.9199%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.6699%" y="709" width="0.0801%" height="15" fill="rgb(229,73,51)" fg:x="857" fg:w="1"/><text x="68.9199%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.6699%" y="693" width="0.0801%" height="15" fill="rgb(208,212,43)" fg:x="857" fg:w="1"/><text x="68.9199%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="68.6699%" y="677" width="0.0801%" height="15" fill="rgb(254,123,53)" fg:x="857" fg:w="1"/><text x="68.9199%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.6699%" y="661" width="0.0801%" height="15" fill="rgb(254,128,49)" fg:x="857" fg:w="1"/><text x="68.9199%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.6699%" y="645" width="0.0801%" height="15" fill="rgb(246,16,16)" fg:x="857" fg:w="1"/><text x="68.9199%" y="655.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="68.9103%" y="789" width="0.1603%" height="15" fill="rgb(209,200,1)" fg:x="860" fg:w="2"/><text x="69.1603%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="68.9103%" y="773" width="0.1603%" height="15" fill="rgb(235,9,3)" fg:x="860" fg:w="2"/><text x="69.1603%" y="783.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="68.9103%" y="757" width="0.1603%" height="15" fill="rgb(233,121,54)" fg:x="860" fg:w="2"/><text x="69.1603%" y="767.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="68.9904%" y="741" width="0.0801%" height="15" fill="rgb(236,80,25)" fg:x="861" fg:w="1"/><text x="69.2404%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="68.9904%" y="725" width="0.0801%" height="15" fill="rgb(220,44,24)" fg:x="861" fg:w="1"/><text x="69.2404%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="68.9904%" y="709" width="0.0801%" height="15" fill="rgb(236,225,16)" fg:x="861" fg:w="1"/><text x="69.2404%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="68.9904%" y="693" width="0.0801%" height="15" fill="rgb(237,140,0)" fg:x="861" fg:w="1"/><text x="69.2404%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.9904%" y="677" width="0.0801%" height="15" fill="rgb(243,225,53)" fg:x="861" fg:w="1"/><text x="69.2404%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.9904%" y="661" width="0.0801%" height="15" fill="rgb(240,140,30)" fg:x="861" fg:w="1"/><text x="69.2404%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="69.0705%" y="725" width="0.0801%" height="15" fill="rgb(217,51,16)" fg:x="862" fg:w="1"/><text x="69.3205%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="69.0705%" y="709" width="0.0801%" height="15" fill="rgb(245,75,50)" fg:x="862" fg:w="1"/><text x="69.3205%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="69.0705%" y="693" width="0.0801%" height="15" fill="rgb(208,174,22)" fg:x="862" fg:w="1"/><text x="69.3205%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.0705%" y="677" width="0.0801%" height="15" fill="rgb(219,98,50)" fg:x="862" fg:w="1"/><text x="69.3205%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.0705%" y="661" width="0.0801%" height="15" fill="rgb(243,138,3)" fg:x="862" fg:w="1"/><text x="69.3205%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.0705%" y="645" width="0.0801%" height="15" fill="rgb(243,132,26)" fg:x="862" fg:w="1"/><text x="69.3205%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.0705%" y="629" width="0.0801%" height="15" fill="rgb(250,201,8)" fg:x="862" fg:w="1"/><text x="69.3205%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.0705%" y="613" width="0.0801%" height="15" fill="rgb(213,91,26)" fg:x="862" fg:w="1"/><text x="69.3205%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.0705%" y="597" width="0.0801%" height="15" fill="rgb(229,117,1)" fg:x="862" fg:w="1"/><text x="69.3205%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="69.0705%" y="773" width="0.1603%" height="15" fill="rgb(229,24,6)" fg:x="862" fg:w="2"/><text x="69.3205%" y="783.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="69.0705%" y="757" width="0.1603%" height="15" fill="rgb(206,69,11)" fg:x="862" fg:w="2"/><text x="69.3205%" y="767.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="69.0705%" y="741" width="0.1603%" height="15" fill="rgb(234,111,34)" fg:x="862" fg:w="2"/><text x="69.3205%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="69.1506%" y="725" width="0.0801%" height="15" fill="rgb(213,187,51)" fg:x="863" fg:w="1"/><text x="69.4006%" y="735.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="69.1506%" y="709" width="0.0801%" height="15" fill="rgb(207,45,11)" fg:x="863" fg:w="1"/><text x="69.4006%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="69.1506%" y="693" width="0.0801%" height="15" fill="rgb(225,151,47)" fg:x="863" fg:w="1"/><text x="69.4006%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.1506%" y="677" width="0.0801%" height="15" fill="rgb(211,226,5)" fg:x="863" fg:w="1"/><text x="69.4006%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="69.2308%" y="725" width="0.1603%" height="15" fill="rgb(214,83,52)" fg:x="864" fg:w="2"/><text x="69.4808%" y="735.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="69.3109%" y="709" width="0.0801%" height="15" fill="rgb(229,49,53)" fg:x="865" fg:w="1"/><text x="69.5609%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="69.3109%" y="693" width="0.0801%" height="15" fill="rgb(246,8,28)" fg:x="865" fg:w="1"/><text x="69.5609%" y="703.50"></text></g><g><title>core::iter::adapters::try_process (9 samples, 0.72%)</title><rect x="68.7500%" y="837" width="0.7212%" height="15" fill="rgb(207,28,41)" fg:x="858" fg:w="9"/><text x="69.0000%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.72%)</title><rect x="68.7500%" y="821" width="0.7212%" height="15" fill="rgb(254,22,25)" fg:x="858" fg:w="9"/><text x="69.0000%" y="831.50"></text></g><g><title>plugins_core::build::QuickThing::make (8 samples, 0.64%)</title><rect x="68.8301%" y="805" width="0.6410%" height="15" fill="rgb(209,120,42)" fg:x="859" fg:w="8"/><text x="69.0801%" y="815.50"></text></g><g><title>plugins_core::build::Build::leads_to (5 samples, 0.40%)</title><rect x="69.0705%" y="789" width="0.4006%" height="15" fill="rgb(216,194,18)" fg:x="862" fg:w="5"/><text x="69.3205%" y="799.50"></text></g><g><title>plugins_core::tools::leads_to (3 samples, 0.24%)</title><rect x="69.2308%" y="773" width="0.2404%" height="15" fill="rgb(213,70,17)" fg:x="864" fg:w="3"/><text x="69.4808%" y="783.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="69.2308%" y="757" width="0.2404%" height="15" fill="rgb(228,66,19)" fg:x="864" fg:w="3"/><text x="69.4808%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="69.2308%" y="741" width="0.2404%" height="15" fill="rgb(236,221,54)" fg:x="864" fg:w="3"/><text x="69.4808%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="69.3910%" y="725" width="0.0801%" height="15" fill="rgb(207,175,15)" fg:x="866" fg:w="1"/><text x="69.6410%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="69.3910%" y="709" width="0.0801%" height="15" fill="rgb(234,76,8)" fg:x="866" fg:w="1"/><text x="69.6410%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="69.3910%" y="693" width="0.0801%" height="15" fill="rgb(243,106,0)" fg:x="866" fg:w="1"/><text x="69.6410%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.3910%" y="677" width="0.0801%" height="15" fill="rgb(208,48,19)" fg:x="866" fg:w="1"/><text x="69.6410%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.3910%" y="661" width="0.0801%" height="15" fill="rgb(251,50,29)" fg:x="866" fg:w="1"/><text x="69.6410%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.3910%" y="645" width="0.0801%" height="15" fill="rgb(222,31,49)" fg:x="866" fg:w="1"/><text x="69.6410%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.3910%" y="629" width="0.0801%" height="15" fill="rgb(232,33,18)" fg:x="866" fg:w="1"/><text x="69.6410%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.3910%" y="613" width="0.0801%" height="15" fill="rgb(209,1,44)" fg:x="866" fg:w="1"/><text x="69.6410%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.3910%" y="597" width="0.0801%" height="15" fill="rgb(211,7,1)" fg:x="866" fg:w="1"/><text x="69.6410%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.3910%" y="581" width="0.0801%" height="15" fill="rgb(224,111,27)" fg:x="866" fg:w="1"/><text x="69.6410%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.3910%" y="565" width="0.0801%" height="15" fill="rgb(252,195,39)" fg:x="866" fg:w="1"/><text x="69.6410%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.3910%" y="549" width="0.0801%" height="15" fill="rgb(237,198,5)" fg:x="866" fg:w="1"/><text x="69.6410%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.3910%" y="533" width="0.0801%" height="15" fill="rgb(232,148,1)" fg:x="866" fg:w="1"/><text x="69.6410%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.3910%" y="517" width="0.0801%" height="15" fill="rgb(249,41,3)" fg:x="866" fg:w="1"/><text x="69.6410%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.3910%" y="501" width="0.0801%" height="15" fill="rgb(215,14,33)" fg:x="866" fg:w="1"/><text x="69.6410%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.3910%" y="485" width="0.0801%" height="15" fill="rgb(209,146,24)" fg:x="866" fg:w="1"/><text x="69.6410%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.3910%" y="469" width="0.0801%" height="15" fill="rgb(219,51,47)" fg:x="866" fg:w="1"/><text x="69.6410%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="69.4712%" y="837" width="0.0801%" height="15" fill="rgb(234,217,40)" fg:x="867" fg:w="1"/><text x="69.7212%" y="847.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.4712%" y="821" width="0.0801%" height="15" fill="rgb(228,34,26)" fg:x="867" fg:w="1"/><text x="69.7212%" y="831.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="69.5513%" y="805" width="0.2404%" height="15" fill="rgb(224,50,29)" fg:x="868" fg:w="3"/><text x="69.8013%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="69.5513%" y="789" width="0.2404%" height="15" fill="rgb(205,79,51)" fg:x="868" fg:w="3"/><text x="69.8013%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="69.5513%" y="773" width="0.2404%" height="15" fill="rgb(218,136,28)" fg:x="868" fg:w="3"/><text x="69.8013%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="69.7115%" y="757" width="0.0801%" height="15" fill="rgb(220,150,10)" fg:x="870" fg:w="1"/><text x="69.9615%" y="767.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="70.0321%" y="741" width="0.1603%" height="15" fill="rgb(242,158,47)" fg:x="874" fg:w="2"/><text x="70.2821%" y="751.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="70.0321%" y="725" width="0.1603%" height="15" fill="rgb(209,68,0)" fg:x="874" fg:w="2"/><text x="70.2821%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="70.1122%" y="709" width="0.0801%" height="15" fill="rgb(208,13,41)" fg:x="875" fg:w="1"/><text x="70.3622%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="70.1122%" y="693" width="0.0801%" height="15" fill="rgb(226,201,7)" fg:x="875" fg:w="1"/><text x="70.3622%" y="703.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="69.9519%" y="757" width="0.3205%" height="15" fill="rgb(236,103,26)" fg:x="873" fg:w="4"/><text x="70.2019%" y="767.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="70.1923%" y="741" width="0.0801%" height="15" fill="rgb(243,162,8)" fg:x="876" fg:w="1"/><text x="70.4423%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="70.1923%" y="725" width="0.0801%" height="15" fill="rgb(237,225,11)" fg:x="876" fg:w="1"/><text x="70.4423%" y="735.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="70.4327%" y="741" width="0.0801%" height="15" fill="rgb(247,186,32)" fg:x="879" fg:w="1"/><text x="70.6827%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="70.4327%" y="725" width="0.0801%" height="15" fill="rgb(215,26,28)" fg:x="879" fg:w="1"/><text x="70.6827%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="70.4327%" y="709" width="0.0801%" height="15" fill="rgb(208,121,6)" fg:x="879" fg:w="1"/><text x="70.6827%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="70.5128%" y="725" width="0.1603%" height="15" fill="rgb(225,91,3)" fg:x="880" fg:w="2"/><text x="70.7628%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="70.5929%" y="709" width="0.0801%" height="15" fill="rgb(246,119,36)" fg:x="881" fg:w="1"/><text x="70.8429%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="70.5929%" y="693" width="0.0801%" height="15" fill="rgb(254,173,2)" fg:x="881" fg:w="1"/><text x="70.8429%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="70.5929%" y="677" width="0.0801%" height="15" fill="rgb(209,87,54)" fg:x="881" fg:w="1"/><text x="70.8429%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="70.8333%" y="677" width="0.0801%" height="15" fill="rgb(223,216,20)" fg:x="884" fg:w="1"/><text x="71.0833%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="70.8333%" y="661" width="0.0801%" height="15" fill="rgb(220,31,8)" fg:x="884" fg:w="1"/><text x="71.0833%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="70.8333%" y="645" width="0.0801%" height="15" fill="rgb(220,185,15)" fg:x="884" fg:w="1"/><text x="71.0833%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="70.8333%" y="629" width="0.0801%" height="15" fill="rgb(247,190,50)" fg:x="884" fg:w="1"/><text x="71.0833%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="70.9135%" y="677" width="0.2404%" height="15" fill="rgb(239,173,47)" fg:x="885" fg:w="3"/><text x="71.1635%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="70.9936%" y="661" width="0.1603%" height="15" fill="rgb(218,190,42)" fg:x="886" fg:w="2"/><text x="71.2436%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="70.9936%" y="645" width="0.1603%" height="15" fill="rgb(251,207,16)" fg:x="886" fg:w="2"/><text x="71.2436%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="70.9936%" y="629" width="0.1603%" height="15" fill="rgb(222,199,47)" fg:x="886" fg:w="2"/><text x="71.2436%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="70.9936%" y="613" width="0.1603%" height="15" fill="rgb(245,190,7)" fg:x="886" fg:w="2"/><text x="71.2436%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="70.9936%" y="597" width="0.1603%" height="15" fill="rgb(239,85,38)" fg:x="886" fg:w="2"/><text x="71.2436%" y="607.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="70.9936%" y="581" width="0.1603%" height="15" fill="rgb(229,69,51)" fg:x="886" fg:w="2"/><text x="71.2436%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="70.7532%" y="709" width="0.5609%" height="15" fill="rgb(231,104,51)" fg:x="883" fg:w="7"/><text x="71.0032%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="70.8333%" y="693" width="0.4808%" height="15" fill="rgb(235,49,4)" fg:x="884" fg:w="6"/><text x="71.0833%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="71.1538%" y="677" width="0.1603%" height="15" fill="rgb(246,166,20)" fg:x="888" fg:w="2"/><text x="71.4038%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="71.1538%" y="661" width="0.1603%" height="15" fill="rgb(230,119,37)" fg:x="888" fg:w="2"/><text x="71.4038%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.2340%" y="645" width="0.0801%" height="15" fill="rgb(234,77,34)" fg:x="889" fg:w="1"/><text x="71.4840%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="71.2340%" y="629" width="0.0801%" height="15" fill="rgb(211,222,33)" fg:x="889" fg:w="1"/><text x="71.4840%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="71.2340%" y="613" width="0.0801%" height="15" fill="rgb(226,45,42)" fg:x="889" fg:w="1"/><text x="71.4840%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="71.2340%" y="597" width="0.0801%" height="15" fill="rgb(215,174,28)" fg:x="889" fg:w="1"/><text x="71.4840%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="70.5128%" y="741" width="0.8814%" height="15" fill="rgb(254,173,49)" fg:x="880" fg:w="11"/><text x="70.7628%" y="751.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="70.6731%" y="725" width="0.7212%" height="15" fill="rgb(229,191,6)" fg:x="882" fg:w="9"/><text x="70.9231%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="71.3141%" y="709" width="0.0801%" height="15" fill="rgb(212,145,22)" fg:x="890" fg:w="1"/><text x="71.5641%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="71.3141%" y="693" width="0.0801%" height="15" fill="rgb(226,6,51)" fg:x="890" fg:w="1"/><text x="71.5641%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.3141%" y="677" width="0.0801%" height="15" fill="rgb(227,128,8)" fg:x="890" fg:w="1"/><text x="71.5641%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="71.3942%" y="709" width="0.1603%" height="15" fill="rgb(205,24,10)" fg:x="891" fg:w="2"/><text x="71.6442%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="71.3942%" y="693" width="0.1603%" height="15" fill="rgb(217,147,27)" fg:x="891" fg:w="2"/><text x="71.6442%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="71.3942%" y="677" width="0.1603%" height="15" fill="rgb(250,82,42)" fg:x="891" fg:w="2"/><text x="71.6442%" y="687.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="71.3942%" y="661" width="0.1603%" height="15" fill="rgb(248,93,17)" fg:x="891" fg:w="2"/><text x="71.6442%" y="671.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (22 samples, 1.76%)</title><rect x="69.8718%" y="773" width="1.7628%" height="15" fill="rgb(254,212,40)" fg:x="872" fg:w="22"/><text x="70.1218%" y="783.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.36%)</title><rect x="70.2724%" y="757" width="1.3622%" height="15" fill="rgb(229,209,2)" fg:x="877" fg:w="17"/><text x="70.5224%" y="767.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="71.3942%" y="741" width="0.2404%" height="15" fill="rgb(211,50,43)" fg:x="891" fg:w="3"/><text x="71.6442%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="71.3942%" y="725" width="0.2404%" height="15" fill="rgb(245,196,29)" fg:x="891" fg:w="3"/><text x="71.6442%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="71.5545%" y="709" width="0.0801%" height="15" fill="rgb(216,132,13)" fg:x="893" fg:w="1"/><text x="71.8045%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.7949%" y="645" width="0.0801%" height="15" fill="rgb(251,108,21)" fg:x="896" fg:w="1"/><text x="72.0449%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.7949%" y="629" width="0.0801%" height="15" fill="rgb(229,174,54)" fg:x="896" fg:w="1"/><text x="72.0449%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="71.6346%" y="773" width="0.3205%" height="15" fill="rgb(211,175,47)" fg:x="894" fg:w="4"/><text x="71.8846%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="71.6346%" y="757" width="0.3205%" height="15" fill="rgb(234,5,37)" fg:x="894" fg:w="4"/><text x="71.8846%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="71.7147%" y="741" width="0.2404%" height="15" fill="rgb(244,150,43)" fg:x="895" fg:w="3"/><text x="71.9647%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="71.7147%" y="725" width="0.2404%" height="15" fill="rgb(242,172,38)" fg:x="895" fg:w="3"/><text x="71.9647%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="71.7147%" y="709" width="0.2404%" height="15" fill="rgb(205,27,8)" fg:x="895" fg:w="3"/><text x="71.9647%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="71.7949%" y="693" width="0.1603%" height="15" fill="rgb(217,57,3)" fg:x="896" fg:w="2"/><text x="72.0449%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="71.7949%" y="677" width="0.1603%" height="15" fill="rgb(242,21,38)" fg:x="896" fg:w="2"/><text x="72.0449%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="71.7949%" y="661" width="0.1603%" height="15" fill="rgb(209,64,43)" fg:x="896" fg:w="2"/><text x="72.0449%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.8750%" y="645" width="0.0801%" height="15" fill="rgb(222,2,46)" fg:x="897" fg:w="1"/><text x="72.1250%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.9551%" y="725" width="0.0801%" height="15" fill="rgb(218,19,44)" fg:x="898" fg:w="1"/><text x="72.2051%" y="735.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="72.0353%" y="725" width="0.0801%" height="15" fill="rgb(240,203,42)" fg:x="899" fg:w="1"/><text x="72.2853%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="72.0353%" y="709" width="0.0801%" height="15" fill="rgb(229,23,45)" fg:x="899" fg:w="1"/><text x="72.2853%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.0353%" y="693" width="0.0801%" height="15" fill="rgb(205,228,51)" fg:x="899" fg:w="1"/><text x="72.2853%" y="703.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="72.1154%" y="725" width="0.0801%" height="15" fill="rgb(239,36,20)" fg:x="900" fg:w="1"/><text x="72.3654%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="72.1154%" y="709" width="0.0801%" height="15" fill="rgb(248,172,27)" fg:x="900" fg:w="1"/><text x="72.3654%" y="719.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="72.1955%" y="725" width="0.1603%" height="15" fill="rgb(244,55,32)" fg:x="901" fg:w="2"/><text x="72.4455%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="72.2756%" y="709" width="0.0801%" height="15" fill="rgb(215,97,16)" fg:x="902" fg:w="1"/><text x="72.5256%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.2756%" y="693" width="0.0801%" height="15" fill="rgb(224,80,29)" fg:x="902" fg:w="1"/><text x="72.5256%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="72.3558%" y="677" width="0.0801%" height="15" fill="rgb(216,93,47)" fg:x="903" fg:w="1"/><text x="72.6058%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="72.3558%" y="661" width="0.0801%" height="15" fill="rgb(238,159,10)" fg:x="903" fg:w="1"/><text x="72.6058%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.3558%" y="645" width="0.0801%" height="15" fill="rgb(223,98,29)" fg:x="903" fg:w="1"/><text x="72.6058%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.5160%" y="645" width="0.0801%" height="15" fill="rgb(210,176,23)" fg:x="905" fg:w="1"/><text x="72.7660%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="72.5962%" y="645" width="0.0801%" height="15" fill="rgb(242,162,27)" fg:x="906" fg:w="1"/><text x="72.8462%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="72.5962%" y="629" width="0.0801%" height="15" fill="rgb(245,109,32)" fg:x="906" fg:w="1"/><text x="72.8462%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="72.3558%" y="693" width="0.4808%" height="15" fill="rgb(248,87,8)" fg:x="903" fg:w="6"/><text x="72.6058%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="72.4359%" y="677" width="0.4006%" height="15" fill="rgb(250,160,50)" fg:x="904" fg:w="5"/><text x="72.6859%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="72.4359%" y="661" width="0.4006%" height="15" fill="rgb(246,165,25)" fg:x="904" fg:w="5"/><text x="72.6859%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="72.6763%" y="645" width="0.1603%" height="15" fill="rgb(249,219,3)" fg:x="907" fg:w="2"/><text x="72.9263%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="72.7564%" y="629" width="0.0801%" height="15" fill="rgb(226,66,5)" fg:x="908" fg:w="1"/><text x="73.0064%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="72.7564%" y="613" width="0.0801%" height="15" fill="rgb(250,220,43)" fg:x="908" fg:w="1"/><text x="73.0064%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="72.7564%" y="597" width="0.0801%" height="15" fill="rgb(225,111,31)" fg:x="908" fg:w="1"/><text x="73.0064%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="72.7564%" y="581" width="0.0801%" height="15" fill="rgb(248,106,18)" fg:x="908" fg:w="1"/><text x="73.0064%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="72.7564%" y="565" width="0.0801%" height="15" fill="rgb(220,226,45)" fg:x="908" fg:w="1"/><text x="73.0064%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.7564%" y="549" width="0.0801%" height="15" fill="rgb(208,58,53)" fg:x="908" fg:w="1"/><text x="73.0064%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.7564%" y="533" width="0.0801%" height="15" fill="rgb(209,133,1)" fg:x="908" fg:w="1"/><text x="73.0064%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.7564%" y="517" width="0.0801%" height="15" fill="rgb(228,216,27)" fg:x="908" fg:w="1"/><text x="73.0064%" y="527.50"></text></g><g><title>engine::session::Session::flush (42 samples, 3.37%)</title><rect x="69.5513%" y="837" width="3.3654%" height="15" fill="rgb(238,155,2)" fg:x="868" fg:w="42"/><text x="69.8013%" y="847.50">eng..</text></g><g><title>engine::session::Session::save_entity_changes (42 samples, 3.37%)</title><rect x="69.5513%" y="821" width="3.3654%" height="15" fill="rgb(244,99,37)" fg:x="868" fg:w="42"/><text x="69.8013%" y="831.50">eng..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (39 samples, 3.12%)</title><rect x="69.7917%" y="805" width="3.1250%" height="15" fill="rgb(254,32,3)" fg:x="871" fg:w="39"/><text x="70.0417%" y="815.50">eng..</text></g><g><title>engine::session::SavesEntities::check_for_changes (39 samples, 3.12%)</title><rect x="69.7917%" y="789" width="3.1250%" height="15" fill="rgb(234,46,50)" fg:x="871" fg:w="39"/><text x="70.0417%" y="799.50">eng..</text></g><g><title>kernel::model::any_entity_changes (12 samples, 0.96%)</title><rect x="71.9551%" y="773" width="0.9615%" height="15" fill="rgb(232,118,51)" fg:x="898" fg:w="12"/><text x="72.2051%" y="783.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (12 samples, 0.96%)</title><rect x="71.9551%" y="757" width="0.9615%" height="15" fill="rgb(207,24,32)" fg:x="898" fg:w="12"/><text x="72.2051%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.96%)</title><rect x="71.9551%" y="741" width="0.9615%" height="15" fill="rgb(208,107,43)" fg:x="898" fg:w="12"/><text x="72.2051%" y="751.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.56%)</title><rect x="72.3558%" y="725" width="0.5609%" height="15" fill="rgb(231,28,9)" fg:x="903" fg:w="7"/><text x="72.6058%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="72.3558%" y="709" width="0.5609%" height="15" fill="rgb(241,204,15)" fg:x="903" fg:w="7"/><text x="72.6058%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.8365%" y="693" width="0.0801%" height="15" fill="rgb(214,54,15)" fg:x="909" fg:w="1"/><text x="73.0865%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.9167%" y="677" width="0.0801%" height="15" fill="rgb(230,12,28)" fg:x="910" fg:w="1"/><text x="73.1667%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.9167%" y="661" width="0.0801%" height="15" fill="rgb(221,171,5)" fg:x="910" fg:w="1"/><text x="73.1667%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.9167%" y="725" width="0.1603%" height="15" fill="rgb(207,72,25)" fg:x="910" fg:w="2"/><text x="73.1667%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.9167%" y="709" width="0.1603%" height="15" fill="rgb(249,79,37)" fg:x="910" fg:w="2"/><text x="73.1667%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.9167%" y="693" width="0.1603%" height="15" fill="rgb(209,98,49)" fg:x="910" fg:w="2"/><text x="73.1667%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.9968%" y="677" width="0.0801%" height="15" fill="rgb(221,62,13)" fg:x="911" fg:w="1"/><text x="73.2468%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="72.9167%" y="773" width="0.2404%" height="15" fill="rgb(223,39,6)" fg:x="910" fg:w="3"/><text x="73.1667%" y="783.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="72.9167%" y="757" width="0.2404%" height="15" fill="rgb(246,163,20)" fg:x="910" fg:w="3"/><text x="73.1667%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="72.9167%" y="741" width="0.2404%" height="15" fill="rgb(211,111,29)" fg:x="910" fg:w="3"/><text x="73.1667%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.0769%" y="725" width="0.0801%" height="15" fill="rgb(243,118,5)" fg:x="912" fg:w="1"/><text x="73.3269%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.0769%" y="709" width="0.0801%" height="15" fill="rgb(240,144,52)" fg:x="912" fg:w="1"/><text x="73.3269%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.0769%" y="693" width="0.0801%" height="15" fill="rgb(244,158,36)" fg:x="912" fg:w="1"/><text x="73.3269%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.0769%" y="677" width="0.0801%" height="15" fill="rgb(241,109,37)" fg:x="912" fg:w="1"/><text x="73.3269%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="73.0769%" y="661" width="0.0801%" height="15" fill="rgb(213,95,32)" fg:x="912" fg:w="1"/><text x="73.3269%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.0769%" y="645" width="0.0801%" height="15" fill="rgb(252,193,9)" fg:x="912" fg:w="1"/><text x="73.3269%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.0769%" y="629" width="0.0801%" height="15" fill="rgb(225,213,21)" fg:x="912" fg:w="1"/><text x="73.3269%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="73.0769%" y="613" width="0.0801%" height="15" fill="rgb(220,172,46)" fg:x="912" fg:w="1"/><text x="73.3269%" y="623.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="72.9167%" y="789" width="0.3205%" height="15" fill="rgb(235,75,41)" fg:x="910" fg:w="4"/><text x="73.1667%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="73.1571%" y="773" width="0.0801%" height="15" fill="rgb(213,86,9)" fg:x="913" fg:w="1"/><text x="73.4071%" y="783.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="73.1571%" y="757" width="0.0801%" height="15" fill="rgb(238,127,51)" fg:x="913" fg:w="1"/><text x="73.4071%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="73.1571%" y="741" width="0.0801%" height="15" fill="rgb(215,2,54)" fg:x="913" fg:w="1"/><text x="73.4071%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.1571%" y="725" width="0.0801%" height="15" fill="rgb(245,80,6)" fg:x="913" fg:w="1"/><text x="73.4071%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="73.1571%" y="709" width="0.0801%" height="15" fill="rgb(233,106,42)" fg:x="913" fg:w="1"/><text x="73.4071%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.1571%" y="693" width="0.0801%" height="15" fill="rgb(244,86,38)" fg:x="913" fg:w="1"/><text x="73.4071%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.1571%" y="677" width="0.0801%" height="15" fill="rgb(242,167,7)" fg:x="913" fg:w="1"/><text x="73.4071%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.80%)</title><rect x="72.9167%" y="821" width="0.8013%" height="15" fill="rgb(218,216,3)" fg:x="910" fg:w="10"/><text x="73.1667%" y="831.50"></text></g><g><title>engine::internal::Entities::add_entity (10 samples, 0.80%)</title><rect x="72.9167%" y="805" width="0.8013%" height="15" fill="rgb(206,136,36)" fg:x="910" fg:w="10"/><text x="73.1667%" y="815.50"></text></g><g><title>engine::internal::EntityMap::add_entity (6 samples, 0.48%)</title><rect x="73.2372%" y="789" width="0.4808%" height="15" fill="rgb(206,206,15)" fg:x="914" fg:w="6"/><text x="73.4872%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.48%)</title><rect x="73.2372%" y="773" width="0.4808%" height="15" fill="rgb(207,163,34)" fg:x="914" fg:w="6"/><text x="73.4872%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.48%)</title><rect x="73.2372%" y="757" width="0.4808%" height="15" fill="rgb(240,127,22)" fg:x="914" fg:w="6"/><text x="73.4872%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.48%)</title><rect x="73.2372%" y="741" width="0.4808%" height="15" fill="rgb(227,49,5)" fg:x="914" fg:w="6"/><text x="73.4872%" y="751.50"></text></g><g><title>__libc_malloc (6 samples, 0.48%)</title><rect x="73.2372%" y="725" width="0.4808%" height="15" fill="rgb(231,8,6)" fg:x="914" fg:w="6"/><text x="73.4872%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="73.7179%" y="725" width="0.1603%" height="15" fill="rgb(223,21,24)" fg:x="920" fg:w="2"/><text x="73.9679%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.7981%" y="709" width="0.0801%" height="15" fill="rgb(244,44,52)" fg:x="921" fg:w="1"/><text x="74.0481%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.7981%" y="693" width="0.0801%" height="15" fill="rgb(207,73,28)" fg:x="921" fg:w="1"/><text x="74.0481%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.7981%" y="677" width="0.0801%" height="15" fill="rgb(234,215,10)" fg:x="921" fg:w="1"/><text x="74.0481%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="73.7179%" y="773" width="0.2404%" height="15" fill="rgb(236,85,3)" fg:x="920" fg:w="3"/><text x="73.9679%" y="783.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="73.7179%" y="757" width="0.2404%" height="15" fill="rgb(236,102,39)" fg:x="920" fg:w="3"/><text x="73.9679%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="73.7179%" y="741" width="0.2404%" height="15" fill="rgb(243,50,8)" fg:x="920" fg:w="3"/><text x="73.9679%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.8782%" y="725" width="0.0801%" height="15" fill="rgb(207,111,4)" fg:x="922" fg:w="1"/><text x="74.1282%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.8782%" y="709" width="0.0801%" height="15" fill="rgb(230,52,42)" fg:x="922" fg:w="1"/><text x="74.1282%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.8782%" y="693" width="0.0801%" height="15" fill="rgb(252,178,50)" fg:x="922" fg:w="1"/><text x="74.1282%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.8782%" y="677" width="0.0801%" height="15" fill="rgb(234,46,35)" fg:x="922" fg:w="1"/><text x="74.1282%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="73.8782%" y="661" width="0.0801%" height="15" fill="rgb(228,69,37)" fg:x="922" fg:w="1"/><text x="74.1282%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.8782%" y="645" width="0.0801%" height="15" fill="rgb(221,21,11)" fg:x="922" fg:w="1"/><text x="74.1282%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.8782%" y="629" width="0.0801%" height="15" fill="rgb(223,56,9)" fg:x="922" fg:w="1"/><text x="74.1282%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.8782%" y="613" width="0.0801%" height="15" fill="rgb(234,30,19)" fg:x="922" fg:w="1"/><text x="74.1282%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.8782%" y="597" width="0.0801%" height="15" fill="rgb(211,64,54)" fg:x="922" fg:w="1"/><text x="74.1282%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.8782%" y="581" width="0.0801%" height="15" fill="rgb(250,189,5)" fg:x="922" fg:w="1"/><text x="74.1282%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.9583%" y="709" width="0.0801%" height="15" fill="rgb(214,180,13)" fg:x="923" fg:w="1"/><text x="74.2083%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.9583%" y="693" width="0.0801%" height="15" fill="rgb(238,40,40)" fg:x="923" fg:w="1"/><text x="74.2083%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.9583%" y="677" width="0.0801%" height="15" fill="rgb(214,101,38)" fg:x="923" fg:w="1"/><text x="74.2083%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.9583%" y="661" width="0.0801%" height="15" fill="rgb(242,65,53)" fg:x="923" fg:w="1"/><text x="74.2083%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.9583%" y="645" width="0.0801%" height="15" fill="rgb(230,22,45)" fg:x="923" fg:w="1"/><text x="74.2083%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="73.9583%" y="725" width="0.2404%" height="15" fill="rgb(223,77,1)" fg:x="923" fg:w="3"/><text x="74.2083%" y="735.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="74.0385%" y="709" width="0.1603%" height="15" fill="rgb(227,33,37)" fg:x="924" fg:w="2"/><text x="74.2885%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="73.7179%" y="805" width="0.5609%" height="15" fill="rgb(224,148,39)" fg:x="920" fg:w="7"/><text x="73.9679%" y="815.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (7 samples, 0.56%)</title><rect x="73.7179%" y="789" width="0.5609%" height="15" fill="rgb(232,212,39)" fg:x="920" fg:w="7"/><text x="73.9679%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="73.9583%" y="773" width="0.3205%" height="15" fill="rgb(251,172,7)" fg:x="923" fg:w="4"/><text x="74.2083%" y="783.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="73.9583%" y="757" width="0.3205%" height="15" fill="rgb(219,39,9)" fg:x="923" fg:w="4"/><text x="74.2083%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="73.9583%" y="741" width="0.3205%" height="15" fill="rgb(228,118,14)" fg:x="923" fg:w="4"/><text x="74.2083%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.1987%" y="725" width="0.0801%" height="15" fill="rgb(207,140,10)" fg:x="926" fg:w="1"/><text x="74.4487%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.1987%" y="709" width="0.0801%" height="15" fill="rgb(227,111,53)" fg:x="926" fg:w="1"/><text x="74.4487%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.1987%" y="693" width="0.0801%" height="15" fill="rgb(216,165,16)" fg:x="926" fg:w="1"/><text x="74.4487%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.1987%" y="677" width="0.0801%" height="15" fill="rgb(226,111,18)" fg:x="926" fg:w="1"/><text x="74.4487%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.1987%" y="661" width="0.0801%" height="15" fill="rgb(251,27,17)" fg:x="926" fg:w="1"/><text x="74.4487%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.1987%" y="645" width="0.0801%" height="15" fill="rgb(254,69,9)" fg:x="926" fg:w="1"/><text x="74.4487%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.1987%" y="629" width="0.0801%" height="15" fill="rgb(234,140,37)" fg:x="926" fg:w="1"/><text x="74.4487%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.1987%" y="613" width="0.0801%" height="15" fill="rgb(220,93,8)" fg:x="926" fg:w="1"/><text x="74.4487%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.1987%" y="597" width="0.0801%" height="15" fill="rgb(236,113,3)" fg:x="926" fg:w="1"/><text x="74.4487%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.1987%" y="581" width="0.0801%" height="15" fill="rgb(234,108,23)" fg:x="926" fg:w="1"/><text x="74.4487%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.2788%" y="789" width="0.0801%" height="15" fill="rgb(205,114,34)" fg:x="927" fg:w="1"/><text x="74.5288%" y="799.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="74.2788%" y="773" width="0.0801%" height="15" fill="rgb(236,200,45)" fg:x="927" fg:w="1"/><text x="74.5288%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="74.2788%" y="757" width="0.0801%" height="15" fill="rgb(227,194,29)" fg:x="927" fg:w="1"/><text x="74.5288%" y="767.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="74.3590%" y="789" width="0.0801%" height="15" fill="rgb(250,76,42)" fg:x="928" fg:w="1"/><text x="74.6090%" y="799.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="74.3590%" y="773" width="0.0801%" height="15" fill="rgb(208,128,8)" fg:x="928" fg:w="1"/><text x="74.6090%" y="783.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="74.3590%" y="757" width="0.0801%" height="15" fill="rgb(229,209,35)" fg:x="928" fg:w="1"/><text x="74.6090%" y="767.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="74.3590%" y="741" width="0.0801%" height="15" fill="rgb(215,39,53)" fg:x="928" fg:w="1"/><text x="74.6090%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="74.3590%" y="725" width="0.0801%" height="15" fill="rgb(219,123,41)" fg:x="928" fg:w="1"/><text x="74.6090%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.3590%" y="709" width="0.0801%" height="15" fill="rgb(212,158,18)" fg:x="928" fg:w="1"/><text x="74.6090%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.3590%" y="693" width="0.0801%" height="15" fill="rgb(234,196,53)" fg:x="928" fg:w="1"/><text x="74.6090%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="74.2788%" y="805" width="0.2404%" height="15" fill="rgb(210,139,12)" fg:x="927" fg:w="3"/><text x="74.5288%" y="815.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="74.4391%" y="789" width="0.0801%" height="15" fill="rgb(220,116,54)" fg:x="929" fg:w="1"/><text x="74.6891%" y="799.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="74.4391%" y="773" width="0.0801%" height="15" fill="rgb(247,103,28)" fg:x="929" fg:w="1"/><text x="74.6891%" y="783.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="74.4391%" y="757" width="0.0801%" height="15" fill="rgb(253,156,45)" fg:x="929" fg:w="1"/><text x="74.6891%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="74.4391%" y="741" width="0.0801%" height="15" fill="rgb(237,157,52)" fg:x="929" fg:w="1"/><text x="74.6891%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="74.5192%" y="741" width="0.0801%" height="15" fill="rgb(253,112,16)" fg:x="930" fg:w="1"/><text x="74.7692%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.5994%" y="645" width="0.0801%" height="15" fill="rgb(234,70,18)" fg:x="931" fg:w="1"/><text x="74.8494%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.5994%" y="709" width="0.1603%" height="15" fill="rgb(247,138,19)" fg:x="931" fg:w="2"/><text x="74.8494%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.5994%" y="693" width="0.1603%" height="15" fill="rgb(207,171,1)" fg:x="931" fg:w="2"/><text x="74.8494%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.5994%" y="677" width="0.1603%" height="15" fill="rgb(239,213,3)" fg:x="931" fg:w="2"/><text x="74.8494%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.5994%" y="661" width="0.1603%" height="15" fill="rgb(226,112,4)" fg:x="931" fg:w="2"/><text x="74.8494%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.6795%" y="645" width="0.0801%" height="15" fill="rgb(252,170,12)" fg:x="932" fg:w="1"/><text x="74.9295%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.6795%" y="629" width="0.0801%" height="15" fill="rgb(241,106,13)" fg:x="932" fg:w="1"/><text x="74.9295%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.6795%" y="613" width="0.0801%" height="15" fill="rgb(225,73,23)" fg:x="932" fg:w="1"/><text x="74.9295%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.6795%" y="597" width="0.0801%" height="15" fill="rgb(251,227,29)" fg:x="932" fg:w="1"/><text x="74.9295%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.6795%" y="581" width="0.0801%" height="15" fill="rgb(237,144,13)" fg:x="932" fg:w="1"/><text x="74.9295%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.6795%" y="565" width="0.0801%" height="15" fill="rgb(232,106,46)" fg:x="932" fg:w="1"/><text x="74.9295%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.6795%" y="549" width="0.0801%" height="15" fill="rgb(245,154,53)" fg:x="932" fg:w="1"/><text x="74.9295%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.6795%" y="533" width="0.0801%" height="15" fill="rgb(212,119,47)" fg:x="932" fg:w="1"/><text x="74.9295%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.6795%" y="517" width="0.0801%" height="15" fill="rgb(253,135,25)" fg:x="932" fg:w="1"/><text x="74.9295%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.6795%" y="501" width="0.0801%" height="15" fill="rgb(253,208,39)" fg:x="932" fg:w="1"/><text x="74.9295%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.6795%" y="485" width="0.0801%" height="15" fill="rgb(226,64,12)" fg:x="932" fg:w="1"/><text x="74.9295%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.6795%" y="469" width="0.0801%" height="15" fill="rgb(214,162,37)" fg:x="932" fg:w="1"/><text x="74.9295%" y="479.50"></text></g><g><title>plugins_core::build::Build::holding (25 samples, 2.00%)</title><rect x="72.9167%" y="837" width="2.0032%" height="15" fill="rgb(250,104,5)" fg:x="910" fg:w="25"/><text x="73.1667%" y="847.50">p..</text></g><g><title>plugins_core::tools::set_container (15 samples, 1.20%)</title><rect x="73.7179%" y="821" width="1.2019%" height="15" fill="rgb(220,202,50)" fg:x="920" fg:w="15"/><text x="73.9679%" y="831.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.40%)</title><rect x="74.5192%" y="805" width="0.4006%" height="15" fill="rgb(248,67,38)" fg:x="930" fg:w="5"/><text x="74.7692%" y="815.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="74.5192%" y="789" width="0.4006%" height="15" fill="rgb(242,94,35)" fg:x="930" fg:w="5"/><text x="74.7692%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.40%)</title><rect x="74.5192%" y="773" width="0.4006%" height="15" fill="rgb(209,78,37)" fg:x="930" fg:w="5"/><text x="74.7692%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="74.5192%" y="757" width="0.4006%" height="15" fill="rgb(230,126,47)" fg:x="930" fg:w="5"/><text x="74.7692%" y="767.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="74.5994%" y="741" width="0.3205%" height="15" fill="rgb(222,110,35)" fg:x="931" fg:w="4"/><text x="74.8494%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="74.5994%" y="725" width="0.3205%" height="15" fill="rgb(233,154,20)" fg:x="931" fg:w="4"/><text x="74.8494%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="74.7596%" y="709" width="0.1603%" height="15" fill="rgb(223,53,50)" fg:x="933" fg:w="2"/><text x="75.0096%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.7596%" y="693" width="0.1603%" height="15" fill="rgb(251,27,26)" fg:x="933" fg:w="2"/><text x="75.0096%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="74.7596%" y="677" width="0.1603%" height="15" fill="rgb(223,189,16)" fg:x="933" fg:w="2"/><text x="75.0096%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.7596%" y="661" width="0.1603%" height="15" fill="rgb(207,5,54)" fg:x="933" fg:w="2"/><text x="75.0096%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="74.7596%" y="645" width="0.1603%" height="15" fill="rgb(254,124,50)" fg:x="933" fg:w="2"/><text x="75.0096%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.7596%" y="629" width="0.1603%" height="15" fill="rgb(253,193,24)" fg:x="933" fg:w="2"/><text x="75.0096%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="74.7596%" y="613" width="0.1603%" height="15" fill="rgb(235,170,24)" fg:x="933" fg:w="2"/><text x="75.0096%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.7596%" y="597" width="0.1603%" height="15" fill="rgb(222,212,52)" fg:x="933" fg:w="2"/><text x="75.0096%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="74.8397%" y="581" width="0.0801%" height="15" fill="rgb(223,17,45)" fg:x="934" fg:w="1"/><text x="75.0897%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.8397%" y="565" width="0.0801%" height="15" fill="rgb(227,103,26)" fg:x="934" fg:w="1"/><text x="75.0897%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.9199%" y="725" width="0.0801%" height="15" fill="rgb(251,151,25)" fg:x="935" fg:w="1"/><text x="75.1699%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.9199%" y="709" width="0.0801%" height="15" fill="rgb(248,144,29)" fg:x="935" fg:w="1"/><text x="75.1699%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.9199%" y="693" width="0.0801%" height="15" fill="rgb(245,97,16)" fg:x="935" fg:w="1"/><text x="75.1699%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.9199%" y="677" width="0.0801%" height="15" fill="rgb(220,200,29)" fg:x="935" fg:w="1"/><text x="75.1699%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.9199%" y="661" width="0.0801%" height="15" fill="rgb(206,38,29)" fg:x="935" fg:w="1"/><text x="75.1699%" y="671.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="74.9199%" y="789" width="0.2404%" height="15" fill="rgb(245,19,52)" fg:x="935" fg:w="3"/><text x="75.1699%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="74.9199%" y="773" width="0.2404%" height="15" fill="rgb(205,67,43)" fg:x="935" fg:w="3"/><text x="75.1699%" y="783.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="74.9199%" y="757" width="0.2404%" height="15" fill="rgb(217,128,23)" fg:x="935" fg:w="3"/><text x="75.1699%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="74.9199%" y="741" width="0.2404%" height="15" fill="rgb(210,109,28)" fg:x="935" fg:w="3"/><text x="75.1699%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.0000%" y="725" width="0.1603%" height="15" fill="rgb(233,181,7)" fg:x="936" fg:w="2"/><text x="75.2500%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.0000%" y="709" width="0.1603%" height="15" fill="rgb(244,11,22)" fg:x="936" fg:w="2"/><text x="75.2500%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.0801%" y="693" width="0.0801%" height="15" fill="rgb(205,124,54)" fg:x="937" fg:w="1"/><text x="75.3301%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.0801%" y="677" width="0.0801%" height="15" fill="rgb(218,21,27)" fg:x="937" fg:w="1"/><text x="75.3301%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="75.0801%" y="661" width="0.0801%" height="15" fill="rgb(224,153,33)" fg:x="937" fg:w="1"/><text x="75.3301%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.0801%" y="645" width="0.0801%" height="15" fill="rgb(240,219,28)" fg:x="937" fg:w="1"/><text x="75.3301%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.0801%" y="629" width="0.0801%" height="15" fill="rgb(214,80,29)" fg:x="937" fg:w="1"/><text x="75.3301%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.0801%" y="613" width="0.0801%" height="15" fill="rgb(247,148,44)" fg:x="937" fg:w="1"/><text x="75.3301%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.0801%" y="597" width="0.0801%" height="15" fill="rgb(243,110,30)" fg:x="937" fg:w="1"/><text x="75.3301%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.0801%" y="581" width="0.0801%" height="15" fill="rgb(243,173,41)" fg:x="937" fg:w="1"/><text x="75.3301%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.32%)</title><rect x="74.9199%" y="837" width="0.3205%" height="15" fill="rgb(225,160,47)" fg:x="935" fg:w="4"/><text x="75.1699%" y="847.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="74.9199%" y="821" width="0.3205%" height="15" fill="rgb(215,44,21)" fg:x="935" fg:w="4"/><text x="75.1699%" y="831.50"></text></g><g><title>engine::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="74.9199%" y="805" width="0.3205%" height="15" fill="rgb(248,90,3)" fg:x="935" fg:w="4"/><text x="75.1699%" y="815.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="75.1603%" y="789" width="0.0801%" height="15" fill="rgb(220,196,49)" fg:x="938" fg:w="1"/><text x="75.4103%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (1 samples, 0.08%)</title><rect x="75.1603%" y="773" width="0.0801%" height="15" fill="rgb(217,138,14)" fg:x="938" fg:w="1"/><text x="75.4103%" y="783.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.3205%" y="693" width="0.0801%" height="15" fill="rgb(219,111,20)" fg:x="940" fg:w="1"/><text x="75.5705%" y="703.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="75.2404%" y="805" width="0.2404%" height="15" fill="rgb(218,114,4)" fg:x="939" fg:w="3"/><text x="75.4904%" y="815.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="75.2404%" y="789" width="0.2404%" height="15" fill="rgb(238,133,3)" fg:x="939" fg:w="3"/><text x="75.4904%" y="799.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="75.2404%" y="773" width="0.2404%" height="15" fill="rgb(224,95,0)" fg:x="939" fg:w="3"/><text x="75.4904%" y="783.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="75.2404%" y="757" width="0.2404%" height="15" fill="rgb(220,169,35)" fg:x="939" fg:w="3"/><text x="75.4904%" y="767.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="75.2404%" y="741" width="0.2404%" height="15" fill="rgb(242,116,47)" fg:x="939" fg:w="3"/><text x="75.4904%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="75.2404%" y="725" width="0.2404%" height="15" fill="rgb(251,42,20)" fg:x="939" fg:w="3"/><text x="75.4904%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="75.2404%" y="709" width="0.2404%" height="15" fill="rgb(234,7,34)" fg:x="939" fg:w="3"/><text x="75.4904%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="75.4006%" y="693" width="0.0801%" height="15" fill="rgb(243,208,13)" fg:x="941" fg:w="1"/><text x="75.6506%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.4006%" y="677" width="0.0801%" height="15" fill="rgb(227,33,28)" fg:x="941" fg:w="1"/><text x="75.6506%" y="687.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="75.4006%" y="661" width="0.0801%" height="15" fill="rgb(250,47,37)" fg:x="941" fg:w="1"/><text x="75.6506%" y="671.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="75.2404%" y="837" width="0.3205%" height="15" fill="rgb(235,111,52)" fg:x="939" fg:w="4"/><text x="75.4904%" y="847.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="75.2404%" y="821" width="0.3205%" height="15" fill="rgb(223,64,28)" fg:x="939" fg:w="4"/><text x="75.4904%" y="831.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="75.4808%" y="805" width="0.0801%" height="15" fill="rgb(236,67,22)" fg:x="942" fg:w="1"/><text x="75.7308%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="75.5609%" y="805" width="0.0801%" height="15" fill="rgb(243,79,24)" fg:x="943" fg:w="1"/><text x="75.8109%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="75.5609%" y="789" width="0.0801%" height="15" fill="rgb(241,225,22)" fg:x="943" fg:w="1"/><text x="75.8109%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="75.5609%" y="773" width="0.0801%" height="15" fill="rgb(228,214,26)" fg:x="943" fg:w="1"/><text x="75.8109%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="75.5609%" y="757" width="0.0801%" height="15" fill="rgb(219,84,52)" fg:x="943" fg:w="1"/><text x="75.8109%" y="767.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="75.5609%" y="741" width="0.0801%" height="15" fill="rgb(220,12,22)" fg:x="943" fg:w="1"/><text x="75.8109%" y="751.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="75.5609%" y="725" width="0.0801%" height="15" fill="rgb(219,9,49)" fg:x="943" fg:w="1"/><text x="75.8109%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="75.5609%" y="709" width="0.0801%" height="15" fill="rgb(237,40,43)" fg:x="943" fg:w="1"/><text x="75.8109%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="75.5609%" y="693" width="0.0801%" height="15" fill="rgb(212,189,32)" fg:x="943" fg:w="1"/><text x="75.8109%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="75.5609%" y="677" width="0.0801%" height="15" fill="rgb(247,48,9)" fg:x="943" fg:w="1"/><text x="75.8109%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="75.5609%" y="661" width="0.0801%" height="15" fill="rgb(247,112,3)" fg:x="943" fg:w="1"/><text x="75.8109%" y="671.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="75.5609%" y="645" width="0.0801%" height="15" fill="rgb(243,110,18)" fg:x="943" fg:w="1"/><text x="75.8109%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="75.5609%" y="629" width="0.0801%" height="15" fill="rgb(233,223,44)" fg:x="943" fg:w="1"/><text x="75.8109%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="75.5609%" y="613" width="0.0801%" height="15" fill="rgb(245,160,20)" fg:x="943" fg:w="1"/><text x="75.8109%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="75.5609%" y="597" width="0.0801%" height="15" fill="rgb(225,37,1)" fg:x="943" fg:w="1"/><text x="75.8109%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.5609%" y="581" width="0.0801%" height="15" fill="rgb(253,227,39)" fg:x="943" fg:w="1"/><text x="75.8109%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.5609%" y="565" width="0.0801%" height="15" fill="rgb(240,179,26)" fg:x="943" fg:w="1"/><text x="75.8109%" y="575.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="75.5609%" y="549" width="0.0801%" height="15" fill="rgb(237,212,23)" fg:x="943" fg:w="1"/><text x="75.8109%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="75.5609%" y="533" width="0.0801%" height="15" fill="rgb(221,38,11)" fg:x="943" fg:w="1"/><text x="75.8109%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="75.5609%" y="517" width="0.0801%" height="15" fill="rgb(215,85,6)" fg:x="943" fg:w="1"/><text x="75.8109%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="75.5609%" y="501" width="0.0801%" height="15" fill="rgb(239,64,14)" fg:x="943" fg:w="1"/><text x="75.8109%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="75.5609%" y="485" width="0.0801%" height="15" fill="rgb(215,150,32)" fg:x="943" fg:w="1"/><text x="75.8109%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="75.5609%" y="469" width="0.0801%" height="15" fill="rgb(238,15,13)" fg:x="943" fg:w="1"/><text x="75.8109%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="75.5609%" y="453" width="0.0801%" height="15" fill="rgb(251,87,8)" fg:x="943" fg:w="1"/><text x="75.8109%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="75.5609%" y="437" width="0.0801%" height="15" fill="rgb(206,86,1)" fg:x="943" fg:w="1"/><text x="75.8109%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.5609%" y="421" width="0.0801%" height="15" fill="rgb(208,151,45)" fg:x="943" fg:w="1"/><text x="75.8109%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="75.5609%" y="405" width="0.0801%" height="15" fill="rgb(231,181,24)" fg:x="943" fg:w="1"/><text x="75.8109%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="75.5609%" y="389" width="0.0801%" height="15" fill="rgb(240,106,29)" fg:x="943" fg:w="1"/><text x="75.8109%" y="399.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="75.5609%" y="373" width="0.0801%" height="15" fill="rgb(227,166,11)" fg:x="943" fg:w="1"/><text x="75.8109%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="75.5609%" y="357" width="0.0801%" height="15" fill="rgb(254,14,34)" fg:x="943" fg:w="1"/><text x="75.8109%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="75.7212%" y="773" width="0.1603%" height="15" fill="rgb(223,222,6)" fg:x="945" fg:w="2"/><text x="75.9712%" y="783.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="75.7212%" y="757" width="0.1603%" height="15" fill="rgb(245,69,24)" fg:x="945" fg:w="2"/><text x="75.9712%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="75.7212%" y="741" width="0.1603%" height="15" fill="rgb(213,193,7)" fg:x="945" fg:w="2"/><text x="75.9712%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.7212%" y="725" width="0.1603%" height="15" fill="rgb(237,92,51)" fg:x="945" fg:w="2"/><text x="75.9712%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.7212%" y="709" width="0.1603%" height="15" fill="rgb(225,194,6)" fg:x="945" fg:w="2"/><text x="75.9712%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.7212%" y="693" width="0.1603%" height="15" fill="rgb(205,159,49)" fg:x="945" fg:w="2"/><text x="75.9712%" y="703.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="75.7212%" y="677" width="0.1603%" height="15" fill="rgb(219,69,2)" fg:x="945" fg:w="2"/><text x="75.9712%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="75.8814%" y="757" width="0.0801%" height="15" fill="rgb(215,107,24)" fg:x="947" fg:w="1"/><text x="76.1314%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="75.8814%" y="741" width="0.0801%" height="15" fill="rgb(249,208,29)" fg:x="947" fg:w="1"/><text x="76.1314%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.8814%" y="725" width="0.0801%" height="15" fill="rgb(213,147,10)" fg:x="947" fg:w="1"/><text x="76.1314%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.8814%" y="709" width="0.0801%" height="15" fill="rgb(254,140,42)" fg:x="947" fg:w="1"/><text x="76.1314%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.8814%" y="693" width="0.0801%" height="15" fill="rgb(249,9,15)" fg:x="947" fg:w="1"/><text x="76.1314%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.8814%" y="677" width="0.0801%" height="15" fill="rgb(210,19,33)" fg:x="947" fg:w="1"/><text x="76.1314%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="75.5609%" y="821" width="0.4808%" height="15" fill="rgb(241,121,22)" fg:x="943" fg:w="6"/><text x="75.8109%" y="831.50"></text></g><g><title>engine::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="75.6410%" y="805" width="0.4006%" height="15" fill="rgb(244,69,52)" fg:x="944" fg:w="5"/><text x="75.8910%" y="815.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="75.6410%" y="789" width="0.4006%" height="15" fill="rgb(244,191,54)" fg:x="944" fg:w="5"/><text x="75.8910%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="75.8814%" y="773" width="0.1603%" height="15" fill="rgb(250,3,53)" fg:x="947" fg:w="2"/><text x="76.1314%" y="783.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="75.9615%" y="757" width="0.0801%" height="15" fill="rgb(205,77,3)" fg:x="948" fg:w="1"/><text x="76.2115%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="75.9615%" y="741" width="0.0801%" height="15" fill="rgb(207,155,3)" fg:x="948" fg:w="1"/><text x="76.2115%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="75.9615%" y="725" width="0.0801%" height="15" fill="rgb(224,79,2)" fg:x="948" fg:w="1"/><text x="76.2115%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.9615%" y="709" width="0.0801%" height="15" fill="rgb(243,172,5)" fg:x="948" fg:w="1"/><text x="76.2115%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="75.9615%" y="693" width="0.0801%" height="15" fill="rgb(217,23,43)" fg:x="948" fg:w="1"/><text x="76.2115%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.9615%" y="677" width="0.0801%" height="15" fill="rgb(223,109,20)" fg:x="948" fg:w="1"/><text x="76.2115%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="75.9615%" y="661" width="0.0801%" height="15" fill="rgb(232,159,21)" fg:x="948" fg:w="1"/><text x="76.2115%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="75.9615%" y="645" width="0.0801%" height="15" fill="rgb(219,58,2)" fg:x="948" fg:w="1"/><text x="76.2115%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.0417%" y="677" width="0.0801%" height="15" fill="rgb(241,56,8)" fg:x="949" fg:w="1"/><text x="76.2917%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="76.0417%" y="805" width="0.1603%" height="15" fill="rgb(249,10,27)" fg:x="949" fg:w="2"/><text x="76.2917%" y="815.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="76.0417%" y="789" width="0.1603%" height="15" fill="rgb(248,177,5)" fg:x="949" fg:w="2"/><text x="76.2917%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="76.0417%" y="773" width="0.1603%" height="15" fill="rgb(239,12,30)" fg:x="949" fg:w="2"/><text x="76.2917%" y="783.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="76.0417%" y="757" width="0.1603%" height="15" fill="rgb(229,164,25)" fg:x="949" fg:w="2"/><text x="76.2917%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="76.0417%" y="741" width="0.1603%" height="15" fill="rgb(231,217,50)" fg:x="949" fg:w="2"/><text x="76.2917%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.0417%" y="725" width="0.1603%" height="15" fill="rgb(247,99,32)" fg:x="949" fg:w="2"/><text x="76.2917%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.0417%" y="709" width="0.1603%" height="15" fill="rgb(240,74,50)" fg:x="949" fg:w="2"/><text x="76.2917%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.0417%" y="693" width="0.1603%" height="15" fill="rgb(218,54,8)" fg:x="949" fg:w="2"/><text x="76.2917%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.1218%" y="677" width="0.0801%" height="15" fill="rgb(227,132,20)" fg:x="950" fg:w="1"/><text x="76.3718%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="76.2019%" y="805" width="0.0801%" height="15" fill="rgb(232,134,12)" fg:x="951" fg:w="1"/><text x="76.4519%" y="815.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::ops::deref::Deref&gt;::deref (1 samples, 0.08%)</title><rect x="76.2019%" y="789" width="0.0801%" height="15" fill="rgb(250,129,18)" fg:x="951" fg:w="1"/><text x="76.4519%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="76.2821%" y="805" width="0.0801%" height="15" fill="rgb(232,129,47)" fg:x="952" fg:w="1"/><text x="76.5321%" y="815.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="76.2821%" y="789" width="0.0801%" height="15" fill="rgb(230,31,40)" fg:x="952" fg:w="1"/><text x="76.5321%" y="799.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.2821%" y="773" width="0.0801%" height="15" fill="rgb(232,126,10)" fg:x="952" fg:w="1"/><text x="76.5321%" y="783.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="76.2821%" y="757" width="0.0801%" height="15" fill="rgb(205,46,31)" fg:x="952" fg:w="1"/><text x="76.5321%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.2821%" y="741" width="0.0801%" height="15" fill="rgb(232,37,37)" fg:x="952" fg:w="1"/><text x="76.5321%" y="751.50"></text></g><g><title>plugins_core::build::Build::occupying (11 samples, 0.88%)</title><rect x="75.5609%" y="837" width="0.8814%" height="15" fill="rgb(240,91,16)" fg:x="943" fg:w="11"/><text x="75.8109%" y="847.50"></text></g><g><title>plugins_core::tools::set_occupying (5 samples, 0.40%)</title><rect x="76.0417%" y="821" width="0.4006%" height="15" fill="rgb(224,160,9)" fg:x="949" fg:w="5"/><text x="76.2917%" y="831.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (1 samples, 0.08%)</title><rect x="76.3622%" y="805" width="0.0801%" height="15" fill="rgb(215,116,14)" fg:x="953" fg:w="1"/><text x="76.6122%" y="815.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="76.3622%" y="789" width="0.0801%" height="15" fill="rgb(235,46,36)" fg:x="953" fg:w="1"/><text x="76.6122%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="76.3622%" y="773" width="0.0801%" height="15" fill="rgb(238,39,28)" fg:x="953" fg:w="1"/><text x="76.6122%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="76.3622%" y="757" width="0.0801%" height="15" fill="rgb(242,125,29)" fg:x="953" fg:w="1"/><text x="76.6122%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="76.3622%" y="741" width="0.0801%" height="15" fill="rgb(238,211,30)" fg:x="953" fg:w="1"/><text x="76.6122%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.3622%" y="725" width="0.0801%" height="15" fill="rgb(227,201,28)" fg:x="953" fg:w="1"/><text x="76.6122%" y="735.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="76.4423%" y="757" width="0.0801%" height="15" fill="rgb(238,77,29)" fg:x="954" fg:w="1"/><text x="76.6923%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.4423%" y="741" width="0.0801%" height="15" fill="rgb(213,221,40)" fg:x="954" fg:w="1"/><text x="76.6923%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="76.5224%" y="757" width="0.0801%" height="15" fill="rgb(226,220,44)" fg:x="955" fg:w="1"/><text x="76.7724%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.5224%" y="741" width="0.0801%" height="15" fill="rgb(228,90,23)" fg:x="955" fg:w="1"/><text x="76.7724%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.5224%" y="725" width="0.0801%" height="15" fill="rgb(235,72,29)" fg:x="955" fg:w="1"/><text x="76.7724%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.5224%" y="709" width="0.0801%" height="15" fill="rgb(248,117,39)" fg:x="955" fg:w="1"/><text x="76.7724%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.5224%" y="693" width="0.0801%" height="15" fill="rgb(225,43,28)" fg:x="955" fg:w="1"/><text x="76.7724%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.5224%" y="677" width="0.0801%" height="15" fill="rgb(240,93,4)" fg:x="955" fg:w="1"/><text x="76.7724%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.5224%" y="661" width="0.0801%" height="15" fill="rgb(234,178,27)" fg:x="955" fg:w="1"/><text x="76.7724%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.5224%" y="645" width="0.0801%" height="15" fill="rgb(254,88,22)" fg:x="955" fg:w="1"/><text x="76.7724%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.5224%" y="629" width="0.0801%" height="15" fill="rgb(240,206,50)" fg:x="955" fg:w="1"/><text x="76.7724%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.5224%" y="613" width="0.0801%" height="15" fill="rgb(249,103,8)" fg:x="955" fg:w="1"/><text x="76.7724%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.5224%" y="597" width="0.0801%" height="15" fill="rgb(241,178,36)" fg:x="955" fg:w="1"/><text x="76.7724%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.5224%" y="581" width="0.0801%" height="15" fill="rgb(246,110,15)" fg:x="955" fg:w="1"/><text x="76.7724%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.5224%" y="565" width="0.0801%" height="15" fill="rgb(207,14,43)" fg:x="955" fg:w="1"/><text x="76.7724%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.5224%" y="549" width="0.0801%" height="15" fill="rgb(253,219,19)" fg:x="955" fg:w="1"/><text x="76.7724%" y="559.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="76.5224%" y="533" width="0.0801%" height="15" fill="rgb(216,126,5)" fg:x="955" fg:w="1"/><text x="76.7724%" y="543.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="76.5224%" y="517" width="0.0801%" height="15" fill="rgb(218,78,42)" fg:x="955" fg:w="1"/><text x="76.7724%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.6026%" y="693" width="0.0801%" height="15" fill="rgb(215,154,40)" fg:x="956" fg:w="1"/><text x="76.8526%" y="703.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (101 samples, 8.09%)</title><rect x="68.6699%" y="853" width="8.0929%" height="15" fill="rgb(235,129,32)" fg:x="857" fg:w="101"/><text x="68.9199%" y="863.50">plugins_cor..</text></g><g><title>plugins_core::build::Build::with_username (4 samples, 0.32%)</title><rect x="76.4423%" y="837" width="0.3205%" height="15" fill="rgb(218,51,8)" fg:x="954" fg:w="4"/><text x="76.6923%" y="847.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="76.4423%" y="821" width="0.3205%" height="15" fill="rgb(245,48,4)" fg:x="954" fg:w="4"/><text x="76.6923%" y="831.50"></text></g><g><title>engine::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="76.4423%" y="805" width="0.3205%" height="15" fill="rgb(250,175,12)" fg:x="954" fg:w="4"/><text x="76.6923%" y="815.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="76.4423%" y="789" width="0.3205%" height="15" fill="rgb(237,95,40)" fg:x="954" fg:w="4"/><text x="76.6923%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="76.4423%" y="773" width="0.3205%" height="15" fill="rgb(244,120,0)" fg:x="954" fg:w="4"/><text x="76.6923%" y="783.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="76.6026%" y="757" width="0.1603%" height="15" fill="rgb(241,19,42)" fg:x="956" fg:w="2"/><text x="76.8526%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="76.6026%" y="741" width="0.1603%" height="15" fill="rgb(217,174,48)" fg:x="956" fg:w="2"/><text x="76.8526%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="76.6026%" y="725" width="0.1603%" height="15" fill="rgb(239,36,38)" fg:x="956" fg:w="2"/><text x="76.8526%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="76.6026%" y="709" width="0.1603%" height="15" fill="rgb(220,63,49)" fg:x="956" fg:w="2"/><text x="76.8526%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.6827%" y="693" width="0.0801%" height="15" fill="rgb(240,101,13)" fg:x="957" fg:w="1"/><text x="76.9327%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.6827%" y="677" width="0.0801%" height="15" fill="rgb(209,184,51)" fg:x="957" fg:w="1"/><text x="76.9327%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.6827%" y="661" width="0.0801%" height="15" fill="rgb(206,136,39)" fg:x="957" fg:w="1"/><text x="76.9327%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.6827%" y="645" width="0.0801%" height="15" fill="rgb(254,47,45)" fg:x="957" fg:w="1"/><text x="76.9327%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="76.7628%" y="821" width="0.1603%" height="15" fill="rgb(252,103,20)" fg:x="958" fg:w="2"/><text x="77.0128%" y="831.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="76.8429%" y="805" width="0.0801%" height="15" fill="rgb(230,69,12)" fg:x="959" fg:w="1"/><text x="77.0929%" y="815.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="76.8429%" y="789" width="0.0801%" height="15" fill="rgb(219,2,28)" fg:x="959" fg:w="1"/><text x="77.0929%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="76.8429%" y="773" width="0.0801%" height="15" fill="rgb(210,9,12)" fg:x="959" fg:w="1"/><text x="77.0929%" y="783.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="76.8429%" y="757" width="0.0801%" height="15" fill="rgb(235,99,33)" fg:x="959" fg:w="1"/><text x="77.0929%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.8429%" y="741" width="0.0801%" height="15" fill="rgb(230,11,38)" fg:x="959" fg:w="1"/><text x="77.0929%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.8429%" y="725" width="0.0801%" height="15" fill="rgb(217,129,0)" fg:x="959" fg:w="1"/><text x="77.0929%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.8429%" y="709" width="0.0801%" height="15" fill="rgb(222,198,4)" fg:x="959" fg:w="1"/><text x="77.0929%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.8429%" y="693" width="0.0801%" height="15" fill="rgb(246,170,27)" fg:x="959" fg:w="1"/><text x="77.0929%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.8429%" y="677" width="0.0801%" height="15" fill="rgb(229,17,28)" fg:x="959" fg:w="1"/><text x="77.0929%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.8429%" y="661" width="0.0801%" height="15" fill="rgb(233,198,48)" fg:x="959" fg:w="1"/><text x="77.0929%" y="671.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (151 samples, 12.10%)</title><rect x="64.9038%" y="869" width="12.0994%" height="15" fill="rgb(238,103,23)" fg:x="810" fg:w="151"/><text x="65.1538%" y="879.50">&lt;tests::HoldingKey..</text></g><g><title>plugins_core::build::BuildSurroundings::make (3 samples, 0.24%)</title><rect x="76.7628%" y="853" width="0.2404%" height="15" fill="rgb(206,91,41)" fg:x="958" fg:w="3"/><text x="77.0128%" y="863.50"></text></g><g><title>plugins_core::build::QuickThing::make (3 samples, 0.24%)</title><rect x="76.7628%" y="837" width="0.2404%" height="15" fill="rgb(227,34,25)" fg:x="958" fg:w="3"/><text x="77.0128%" y="847.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="76.9231%" y="821" width="0.0801%" height="15" fill="rgb(210,110,44)" fg:x="960" fg:w="1"/><text x="77.1731%" y="831.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.0833%" y="821" width="0.0801%" height="15" fill="rgb(216,189,8)" fg:x="962" fg:w="1"/><text x="77.3333%" y="831.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="77.0032%" y="837" width="0.2404%" height="15" fill="rgb(234,9,46)" fg:x="961" fg:w="3"/><text x="77.2532%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.1635%" y="821" width="0.0801%" height="15" fill="rgb(251,200,5)" fg:x="963" fg:w="1"/><text x="77.4135%" y="831.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="77.1635%" y="805" width="0.0801%" height="15" fill="rgb(238,165,37)" fg:x="963" fg:w="1"/><text x="77.4135%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="77.1635%" y="789" width="0.0801%" height="15" fill="rgb(232,77,38)" fg:x="963" fg:w="1"/><text x="77.4135%" y="799.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="77.2436%" y="837" width="0.0801%" height="15" fill="rgb(253,179,33)" fg:x="964" fg:w="1"/><text x="77.4936%" y="847.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="77.2436%" y="821" width="0.0801%" height="15" fill="rgb(240,13,35)" fg:x="964" fg:w="1"/><text x="77.4936%" y="831.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.2436%" y="805" width="0.0801%" height="15" fill="rgb(242,150,49)" fg:x="964" fg:w="1"/><text x="77.4936%" y="815.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.2436%" y="789" width="0.0801%" height="15" fill="rgb(237,176,28)" fg:x="964" fg:w="1"/><text x="77.4936%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.2436%" y="773" width="0.0801%" height="15" fill="rgb(214,176,33)" fg:x="964" fg:w="1"/><text x="77.4936%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.2436%" y="757" width="0.0801%" height="15" fill="rgb(214,25,12)" fg:x="964" fg:w="1"/><text x="77.4936%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="77.4038%" y="805" width="0.1603%" height="15" fill="rgb(238,190,20)" fg:x="966" fg:w="2"/><text x="77.6538%" y="815.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="77.4038%" y="789" width="0.1603%" height="15" fill="rgb(208,11,19)" fg:x="966" fg:w="2"/><text x="77.6538%" y="799.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="77.4038%" y="773" width="0.1603%" height="15" fill="rgb(239,90,4)" fg:x="966" fg:w="2"/><text x="77.6538%" y="783.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.4840%" y="757" width="0.0801%" height="15" fill="rgb(248,110,3)" fg:x="967" fg:w="1"/><text x="77.7340%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.4840%" y="741" width="0.0801%" height="15" fill="rgb(210,41,30)" fg:x="967" fg:w="1"/><text x="77.7340%" y="751.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="77.5641%" y="789" width="0.4006%" height="15" fill="rgb(239,36,8)" fg:x="968" fg:w="5"/><text x="77.8141%" y="799.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="77.6442%" y="773" width="0.3205%" height="15" fill="rgb(237,201,47)" fg:x="969" fg:w="4"/><text x="77.8942%" y="783.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="77.7244%" y="757" width="0.2404%" height="15" fill="rgb(224,140,29)" fg:x="970" fg:w="3"/><text x="77.9744%" y="767.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="77.8045%" y="741" width="0.1603%" height="15" fill="rgb(231,209,17)" fg:x="971" fg:w="2"/><text x="78.0545%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="77.8045%" y="725" width="0.1603%" height="15" fill="rgb(249,196,1)" fg:x="971" fg:w="2"/><text x="78.0545%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.8846%" y="709" width="0.0801%" height="15" fill="rgb(223,207,51)" fg:x="972" fg:w="1"/><text x="78.1346%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.8846%" y="693" width="0.0801%" height="15" fill="rgb(210,14,40)" fg:x="972" fg:w="1"/><text x="78.1346%" y="703.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.8846%" y="677" width="0.0801%" height="15" fill="rgb(250,20,52)" fg:x="972" fg:w="1"/><text x="78.1346%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="78.0449%" y="773" width="0.1603%" height="15" fill="rgb(241,46,11)" fg:x="974" fg:w="2"/><text x="78.2949%" y="783.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="78.0449%" y="757" width="0.1603%" height="15" fill="rgb(219,105,5)" fg:x="974" fg:w="2"/><text x="78.2949%" y="767.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="78.2051%" y="757" width="0.0801%" height="15" fill="rgb(252,77,35)" fg:x="976" fg:w="1"/><text x="78.4551%" y="767.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="78.2051%" y="741" width="0.0801%" height="15" fill="rgb(243,119,2)" fg:x="976" fg:w="1"/><text x="78.4551%" y="751.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.2051%" y="725" width="0.0801%" height="15" fill="rgb(206,82,28)" fg:x="976" fg:w="1"/><text x="78.4551%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.2051%" y="709" width="0.0801%" height="15" fill="rgb(227,120,12)" fg:x="976" fg:w="1"/><text x="78.4551%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.2853%" y="757" width="0.0801%" height="15" fill="rgb(229,134,41)" fg:x="977" fg:w="1"/><text x="78.5353%" y="767.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.2853%" y="741" width="0.0801%" height="15" fill="rgb(239,96,32)" fg:x="977" fg:w="1"/><text x="78.5353%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.2853%" y="725" width="0.0801%" height="15" fill="rgb(225,46,27)" fg:x="977" fg:w="1"/><text x="78.5353%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="78.3654%" y="741" width="0.0801%" height="15" fill="rgb(215,168,2)" fg:x="978" fg:w="1"/><text x="78.6154%" y="751.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.4455%" y="725" width="0.0801%" height="15" fill="rgb(207,170,52)" fg:x="979" fg:w="1"/><text x="78.6955%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.4455%" y="709" width="0.0801%" height="15" fill="rgb(237,198,36)" fg:x="979" fg:w="1"/><text x="78.6955%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.4455%" y="693" width="0.0801%" height="15" fill="rgb(213,27,14)" fg:x="979" fg:w="1"/><text x="78.6955%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.4455%" y="677" width="0.0801%" height="15" fill="rgb(218,77,5)" fg:x="979" fg:w="1"/><text x="78.6955%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="78.5256%" y="693" width="0.0801%" height="15" fill="rgb(230,219,39)" fg:x="980" fg:w="1"/><text x="78.7756%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="78.2051%" y="773" width="0.5609%" height="15" fill="rgb(245,177,7)" fg:x="976" fg:w="7"/><text x="78.4551%" y="783.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="78.3654%" y="757" width="0.4006%" height="15" fill="rgb(246,44,46)" fg:x="978" fg:w="5"/><text x="78.6154%" y="767.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="78.4455%" y="741" width="0.3205%" height="15" fill="rgb(207,173,15)" fg:x="979" fg:w="4"/><text x="78.6955%" y="751.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="78.5256%" y="725" width="0.2404%" height="15" fill="rgb(245,170,50)" fg:x="980" fg:w="3"/><text x="78.7756%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="78.5256%" y="709" width="0.2404%" height="15" fill="rgb(233,156,21)" fg:x="980" fg:w="3"/><text x="78.7756%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="78.6058%" y="693" width="0.1603%" height="15" fill="rgb(253,146,27)" fg:x="981" fg:w="2"/><text x="78.8558%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="78.6058%" y="677" width="0.1603%" height="15" fill="rgb(247,66,29)" fg:x="981" fg:w="2"/><text x="78.8558%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="78.6058%" y="661" width="0.1603%" height="15" fill="rgb(218,207,26)" fg:x="981" fg:w="2"/><text x="78.8558%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.6859%" y="645" width="0.0801%" height="15" fill="rgb(234,93,26)" fg:x="982" fg:w="1"/><text x="78.9359%" y="655.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (16 samples, 1.28%)</title><rect x="77.5641%" y="805" width="1.2821%" height="15" fill="rgb(214,75,48)" fg:x="968" fg:w="16"/><text x="77.8141%" y="815.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="77.9647%" y="789" width="0.8814%" height="15" fill="rgb(229,119,22)" fg:x="973" fg:w="11"/><text x="78.2147%" y="799.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.7660%" y="773" width="0.0801%" height="15" fill="rgb(226,153,19)" fg:x="983" fg:w="1"/><text x="79.0160%" y="783.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.7660%" y="757" width="0.0801%" height="15" fill="rgb(220,204,36)" fg:x="983" fg:w="1"/><text x="79.0160%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.7660%" y="741" width="0.0801%" height="15" fill="rgb(253,181,43)" fg:x="983" fg:w="1"/><text x="79.0160%" y="751.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="78.8462%" y="757" width="0.1603%" height="15" fill="rgb(211,41,51)" fg:x="984" fg:w="2"/><text x="79.0962%" y="767.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.0064%" y="757" width="0.0801%" height="15" fill="rgb(207,215,0)" fg:x="986" fg:w="1"/><text x="79.2564%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.0865%" y="725" width="0.0801%" height="15" fill="rgb(212,153,10)" fg:x="987" fg:w="1"/><text x="79.3365%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="78.8462%" y="805" width="0.4006%" height="15" fill="rgb(251,171,36)" fg:x="984" fg:w="5"/><text x="79.0962%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="78.8462%" y="789" width="0.4006%" height="15" fill="rgb(225,219,41)" fg:x="984" fg:w="5"/><text x="79.0962%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="78.8462%" y="773" width="0.4006%" height="15" fill="rgb(208,200,1)" fg:x="984" fg:w="5"/><text x="79.0962%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.0865%" y="757" width="0.1603%" height="15" fill="rgb(206,75,47)" fg:x="987" fg:w="2"/><text x="79.3365%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.0865%" y="741" width="0.1603%" height="15" fill="rgb(248,3,16)" fg:x="987" fg:w="2"/><text x="79.3365%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.1667%" y="725" width="0.0801%" height="15" fill="rgb(242,157,36)" fg:x="988" fg:w="1"/><text x="79.4167%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.1667%" y="709" width="0.0801%" height="15" fill="rgb(215,175,11)" fg:x="988" fg:w="1"/><text x="79.4167%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.1667%" y="693" width="0.0801%" height="15" fill="rgb(252,222,22)" fg:x="988" fg:w="1"/><text x="79.4167%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.1667%" y="677" width="0.0801%" height="15" fill="rgb(250,121,35)" fg:x="988" fg:w="1"/><text x="79.4167%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.1667%" y="661" width="0.0801%" height="15" fill="rgb(233,120,49)" fg:x="988" fg:w="1"/><text x="79.4167%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.2468%" y="741" width="0.0801%" height="15" fill="rgb(205,201,14)" fg:x="989" fg:w="1"/><text x="79.4968%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.2468%" y="725" width="0.0801%" height="15" fill="rgb(219,58,45)" fg:x="989" fg:w="1"/><text x="79.4968%" y="735.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="79.3269%" y="725" width="0.1603%" height="15" fill="rgb(251,65,12)" fg:x="990" fg:w="2"/><text x="79.5769%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.4872%" y="725" width="0.0801%" height="15" fill="rgb(224,47,31)" fg:x="992" fg:w="1"/><text x="79.7372%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.5673%" y="709" width="0.0801%" height="15" fill="rgb(233,74,26)" fg:x="993" fg:w="1"/><text x="79.8173%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="79.7276%" y="693" width="0.0801%" height="15" fill="rgb(231,211,31)" fg:x="995" fg:w="1"/><text x="79.9776%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="79.7276%" y="677" width="0.0801%" height="15" fill="rgb(239,167,5)" fg:x="995" fg:w="1"/><text x="79.9776%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.7276%" y="661" width="0.0801%" height="15" fill="rgb(241,85,0)" fg:x="995" fg:w="1"/><text x="79.9776%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.8077%" y="677" width="0.0801%" height="15" fill="rgb(229,130,21)" fg:x="996" fg:w="1"/><text x="80.0577%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="79.2468%" y="773" width="0.7212%" height="15" fill="rgb(254,84,49)" fg:x="989" fg:w="9"/><text x="79.4968%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.72%)</title><rect x="79.2468%" y="757" width="0.7212%" height="15" fill="rgb(235,85,21)" fg:x="989" fg:w="9"/><text x="79.4968%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="79.3269%" y="741" width="0.6410%" height="15" fill="rgb(246,128,52)" fg:x="990" fg:w="8"/><text x="79.5769%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="79.5673%" y="725" width="0.4006%" height="15" fill="rgb(243,114,49)" fg:x="993" fg:w="5"/><text x="79.8173%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="79.6474%" y="709" width="0.3205%" height="15" fill="rgb(240,224,22)" fg:x="994" fg:w="4"/><text x="79.8974%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.8077%" y="693" width="0.1603%" height="15" fill="rgb(247,201,52)" fg:x="996" fg:w="2"/><text x="80.0577%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.8878%" y="677" width="0.0801%" height="15" fill="rgb(231,70,45)" fg:x="997" fg:w="1"/><text x="80.1378%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.8878%" y="661" width="0.0801%" height="15" fill="rgb(217,215,20)" fg:x="997" fg:w="1"/><text x="80.1378%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.8878%" y="645" width="0.0801%" height="15" fill="rgb(226,170,30)" fg:x="997" fg:w="1"/><text x="80.1378%" y="655.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.16%)</title><rect x="80.2885%" y="709" width="0.1603%" height="15" fill="rgb(220,190,43)" fg:x="1002" fg:w="2"/><text x="80.5385%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="80.2885%" y="693" width="0.1603%" height="15" fill="rgb(218,20,18)" fg:x="1002" fg:w="2"/><text x="80.5385%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="80.3686%" y="677" width="0.0801%" height="15" fill="rgb(245,37,26)" fg:x="1003" fg:w="1"/><text x="80.6186%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="80.4487%" y="709" width="0.1603%" height="15" fill="rgb(241,127,29)" fg:x="1004" fg:w="2"/><text x="80.6987%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="80.4487%" y="693" width="0.1603%" height="15" fill="rgb(241,33,26)" fg:x="1004" fg:w="2"/><text x="80.6987%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="80.5288%" y="677" width="0.0801%" height="15" fill="rgb(220,106,21)" fg:x="1005" fg:w="1"/><text x="80.7788%" y="687.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (18 samples, 1.44%)</title><rect x="79.2468%" y="789" width="1.4423%" height="15" fill="rgb(225,125,35)" fg:x="989" fg:w="18"/><text x="79.4968%" y="799.50"></text></g><g><title>treediff::diff::diff (9 samples, 0.72%)</title><rect x="79.9679%" y="773" width="0.7212%" height="15" fill="rgb(248,80,22)" fg:x="998" fg:w="9"/><text x="80.2179%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.72%)</title><rect x="79.9679%" y="757" width="0.7212%" height="15" fill="rgb(231,117,39)" fg:x="998" fg:w="9"/><text x="80.2179%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.72%)</title><rect x="79.9679%" y="741" width="0.7212%" height="15" fill="rgb(239,183,16)" fg:x="998" fg:w="9"/><text x="80.2179%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="80.2885%" y="725" width="0.4006%" height="15" fill="rgb(221,61,19)" fg:x="1002" fg:w="5"/><text x="80.5385%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="80.6090%" y="709" width="0.0801%" height="15" fill="rgb(239,196,44)" fg:x="1006" fg:w="1"/><text x="80.8590%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.6891%" y="757" width="0.0801%" height="15" fill="rgb(206,113,19)" fg:x="1007" fg:w="1"/><text x="80.9391%" y="767.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.6891%" y="741" width="0.0801%" height="15" fill="rgb(245,114,12)" fg:x="1007" fg:w="1"/><text x="80.9391%" y="751.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="80.7692%" y="725" width="0.0801%" height="15" fill="rgb(247,89,39)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="80.7692%" y="709" width="0.0801%" height="15" fill="rgb(213,85,14)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="719.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="80.7692%" y="757" width="0.1603%" height="15" fill="rgb(249,206,33)" fg:x="1008" fg:w="2"/><text x="81.0192%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="80.7692%" y="741" width="0.1603%" height="15" fill="rgb(235,167,47)" fg:x="1008" fg:w="2"/><text x="81.0192%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.8494%" y="725" width="0.0801%" height="15" fill="rgb(217,177,16)" fg:x="1009" fg:w="1"/><text x="81.0994%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="81.0096%" y="725" width="0.0801%" height="15" fill="rgb(250,228,29)" fg:x="1011" fg:w="1"/><text x="81.2596%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="81.0897%" y="709" width="0.1603%" height="15" fill="rgb(216,195,42)" fg:x="1012" fg:w="2"/><text x="81.3397%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="81.0897%" y="693" width="0.1603%" height="15" fill="rgb(232,192,32)" fg:x="1012" fg:w="2"/><text x="81.3397%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.1699%" y="677" width="0.0801%" height="15" fill="rgb(211,8,47)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="81.3301%" y="693" width="0.0801%" height="15" fill="rgb(251,201,9)" fg:x="1015" fg:w="1"/><text x="81.5801%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.4103%" y="677" width="0.0801%" height="15" fill="rgb(206,185,47)" fg:x="1016" fg:w="1"/><text x="81.6603%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.4103%" y="661" width="0.0801%" height="15" fill="rgb(245,54,32)" fg:x="1016" fg:w="1"/><text x="81.6603%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="81.4103%" y="645" width="0.0801%" height="15" fill="rgb(208,1,8)" fg:x="1016" fg:w="1"/><text x="81.6603%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="81.4904%" y="661" width="0.0801%" height="15" fill="rgb(228,57,24)" fg:x="1017" fg:w="1"/><text x="81.7404%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="81.6506%" y="629" width="0.0801%" height="15" fill="rgb(251,24,8)" fg:x="1019" fg:w="1"/><text x="81.9006%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.96%)</title><rect x="80.9295%" y="757" width="0.9615%" height="15" fill="rgb(236,196,50)" fg:x="1010" fg:w="12"/><text x="81.1795%" y="767.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="80.9295%" y="741" width="0.9615%" height="15" fill="rgb(246,222,29)" fg:x="1010" fg:w="12"/><text x="81.1795%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="81.0897%" y="725" width="0.8013%" height="15" fill="rgb(211,34,40)" fg:x="1012" fg:w="10"/><text x="81.3397%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="81.2500%" y="709" width="0.6410%" height="15" fill="rgb(210,66,51)" fg:x="1014" fg:w="8"/><text x="81.5000%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="81.4103%" y="693" width="0.4808%" height="15" fill="rgb(250,56,43)" fg:x="1016" fg:w="6"/><text x="81.6603%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="81.4904%" y="677" width="0.4006%" height="15" fill="rgb(240,111,50)" fg:x="1017" fg:w="5"/><text x="81.7404%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="81.5705%" y="661" width="0.3205%" height="15" fill="rgb(209,117,13)" fg:x="1018" fg:w="4"/><text x="81.8205%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="81.6506%" y="645" width="0.2404%" height="15" fill="rgb(232,164,45)" fg:x="1019" fg:w="3"/><text x="81.9006%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="81.7308%" y="629" width="0.1603%" height="15" fill="rgb(205,69,32)" fg:x="1020" fg:w="2"/><text x="81.9808%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="81.7308%" y="613" width="0.1603%" height="15" fill="rgb(240,147,45)" fg:x="1020" fg:w="2"/><text x="81.9808%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="81.8109%" y="597" width="0.0801%" height="15" fill="rgb(221,94,48)" fg:x="1021" fg:w="1"/><text x="82.0609%" y="607.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (16 samples, 1.28%)</title><rect x="80.6891%" y="789" width="1.2821%" height="15" fill="rgb(249,209,17)" fg:x="1007" fg:w="16"/><text x="80.9391%" y="799.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (16 samples, 1.28%)</title><rect x="80.6891%" y="773" width="1.2821%" height="15" fill="rgb(228,57,28)" fg:x="1007" fg:w="16"/><text x="80.9391%" y="783.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="81.8910%" y="757" width="0.0801%" height="15" fill="rgb(250,133,26)" fg:x="1022" fg:w="1"/><text x="82.1410%" y="767.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="81.8910%" y="741" width="0.0801%" height="15" fill="rgb(254,15,16)" fg:x="1022" fg:w="1"/><text x="82.1410%" y="751.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="82.3718%" y="533" width="0.0801%" height="15" fill="rgb(209,147,42)" fg:x="1028" fg:w="1"/><text x="82.6218%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="82.2115%" y="565" width="0.4006%" height="15" fill="rgb(208,5,29)" fg:x="1026" fg:w="5"/><text x="82.4615%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="82.2115%" y="549" width="0.4006%" height="15" fill="rgb(250,73,31)" fg:x="1026" fg:w="5"/><text x="82.4615%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="82.4519%" y="533" width="0.1603%" height="15" fill="rgb(238,45,10)" fg:x="1029" fg:w="2"/><text x="82.7019%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="82.4519%" y="517" width="0.1603%" height="15" fill="rgb(214,104,5)" fg:x="1029" fg:w="2"/><text x="82.7019%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="82.4519%" y="501" width="0.1603%" height="15" fill="rgb(242,217,19)" fg:x="1029" fg:w="2"/><text x="82.7019%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="82.6122%" y="565" width="0.0801%" height="15" fill="rgb(246,113,27)" fg:x="1031" fg:w="1"/><text x="82.8622%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="82.6122%" y="549" width="0.0801%" height="15" fill="rgb(221,34,27)" fg:x="1031" fg:w="1"/><text x="82.8622%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="82.1314%" y="629" width="0.6410%" height="15" fill="rgb(246,109,6)" fg:x="1025" fg:w="8"/><text x="82.3814%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="82.1314%" y="613" width="0.6410%" height="15" fill="rgb(217,12,25)" fg:x="1025" fg:w="8"/><text x="82.3814%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="82.1314%" y="597" width="0.6410%" height="15" fill="rgb(250,195,5)" fg:x="1025" fg:w="8"/><text x="82.3814%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="82.2115%" y="581" width="0.5609%" height="15" fill="rgb(244,140,45)" fg:x="1026" fg:w="7"/><text x="82.4615%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.6923%" y="565" width="0.0801%" height="15" fill="rgb(230,64,14)" fg:x="1032" fg:w="1"/><text x="82.9423%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="82.7724%" y="629" width="0.1603%" height="15" fill="rgb(206,27,27)" fg:x="1033" fg:w="2"/><text x="83.0224%" y="639.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="82.8526%" y="613" width="0.0801%" height="15" fill="rgb(230,14,50)" fg:x="1034" fg:w="1"/><text x="83.1026%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="82.1314%" y="661" width="0.8814%" height="15" fill="rgb(237,172,14)" fg:x="1025" fg:w="11"/><text x="82.3814%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="82.1314%" y="645" width="0.8814%" height="15" fill="rgb(209,25,21)" fg:x="1025" fg:w="11"/><text x="82.3814%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.9327%" y="629" width="0.0801%" height="15" fill="rgb(248,148,22)" fg:x="1035" fg:w="1"/><text x="83.1827%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.9327%" y="613" width="0.0801%" height="15" fill="rgb(234,100,22)" fg:x="1035" fg:w="1"/><text x="83.1827%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.9327%" y="597" width="0.0801%" height="15" fill="rgb(210,20,30)" fg:x="1035" fg:w="1"/><text x="83.1827%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.04%)</title><rect x="82.0513%" y="693" width="1.0417%" height="15" fill="rgb(232,58,0)" fg:x="1024" fg:w="13"/><text x="82.3013%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="82.1314%" y="677" width="0.9615%" height="15" fill="rgb(221,68,13)" fg:x="1025" fg:w="12"/><text x="82.3814%" y="687.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="83.0128%" y="661" width="0.0801%" height="15" fill="rgb(231,194,11)" fg:x="1036" fg:w="1"/><text x="83.2628%" y="671.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="83.0128%" y="645" width="0.0801%" height="15" fill="rgb(235,51,41)" fg:x="1036" fg:w="1"/><text x="83.2628%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.12%)</title><rect x="82.0513%" y="725" width="1.1218%" height="15" fill="rgb(240,50,32)" fg:x="1024" fg:w="14"/><text x="82.3013%" y="735.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.12%)</title><rect x="82.0513%" y="709" width="1.1218%" height="15" fill="rgb(240,185,36)" fg:x="1024" fg:w="14"/><text x="82.3013%" y="719.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="83.0929%" y="693" width="0.0801%" height="15" fill="rgb(211,168,15)" fg:x="1037" fg:w="1"/><text x="83.3429%" y="703.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (76 samples, 6.09%)</title><rect x="77.3237%" y="837" width="6.0897%" height="15" fill="rgb(221,70,0)" fg:x="965" fg:w="76"/><text x="77.5737%" y="847.50">engine::..</text></g><g><title>engine::session::SavesEntities::check_for_changes (75 samples, 6.01%)</title><rect x="77.4038%" y="821" width="6.0096%" height="15" fill="rgb(205,21,33)" fg:x="966" fg:w="75"/><text x="77.6538%" y="831.50">engine::..</text></g><g><title>kernel::model::any_entity_changes (52 samples, 4.17%)</title><rect x="79.2468%" y="805" width="4.1667%" height="15" fill="rgb(225,106,10)" fg:x="989" fg:w="52"/><text x="79.4968%" y="815.50">kerne..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (18 samples, 1.44%)</title><rect x="81.9712%" y="789" width="1.4423%" height="15" fill="rgb(236,200,50)" fg:x="1023" fg:w="18"/><text x="82.2212%" y="799.50"></text></g><g><title>serde_json::de::from_trait (18 samples, 1.44%)</title><rect x="81.9712%" y="773" width="1.4423%" height="15" fill="rgb(249,93,23)" fg:x="1023" fg:w="18"/><text x="82.2212%" y="783.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.44%)</title><rect x="81.9712%" y="757" width="1.4423%" height="15" fill="rgb(244,115,35)" fg:x="1023" fg:w="18"/><text x="82.2212%" y="767.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18 samples, 1.44%)</title><rect x="81.9712%" y="741" width="1.4423%" height="15" fill="rgb(231,129,47)" fg:x="1023" fg:w="18"/><text x="82.2212%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="83.1731%" y="725" width="0.2404%" height="15" fill="rgb(225,160,50)" fg:x="1038" fg:w="3"/><text x="83.4231%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="83.2532%" y="709" width="0.1603%" height="15" fill="rgb(218,135,23)" fg:x="1039" fg:w="2"/><text x="83.5032%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.3333%" y="693" width="0.0801%" height="15" fill="rgb(227,119,14)" fg:x="1040" fg:w="1"/><text x="83.5833%" y="703.50"></text></g><g><title>engine::session::Session::save_entity_changes (81 samples, 6.49%)</title><rect x="77.0032%" y="853" width="6.4904%" height="15" fill="rgb(242,138,13)" fg:x="961" fg:w="81"/><text x="77.2532%" y="863.50">engine::s..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="83.4135%" y="837" width="0.0801%" height="15" fill="rgb(215,11,16)" fg:x="1041" fg:w="1"/><text x="83.6635%" y="847.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="83.4135%" y="821" width="0.0801%" height="15" fill="rgb(234,170,50)" fg:x="1041" fg:w="1"/><text x="83.6635%" y="831.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="83.4135%" y="805" width="0.0801%" height="15" fill="rgb(233,34,20)" fg:x="1041" fg:w="1"/><text x="83.6635%" y="815.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="83.4135%" y="789" width="0.0801%" height="15" fill="rgb(237,100,45)" fg:x="1041" fg:w="1"/><text x="83.6635%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="83.4135%" y="773" width="0.0801%" height="15" fill="rgb(231,184,36)" fg:x="1041" fg:w="1"/><text x="83.6635%" y="783.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="83.4135%" y="757" width="0.0801%" height="15" fill="rgb(252,93,2)" fg:x="1041" fg:w="1"/><text x="83.6635%" y="767.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="83.4135%" y="741" width="0.0801%" height="15" fill="rgb(248,176,47)" fg:x="1041" fg:w="1"/><text x="83.6635%" y="751.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="83.4135%" y="725" width="0.0801%" height="15" fill="rgb(249,125,23)" fg:x="1041" fg:w="1"/><text x="83.6635%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="83.4135%" y="709" width="0.0801%" height="15" fill="rgb(239,67,42)" fg:x="1041" fg:w="1"/><text x="83.6635%" y="719.50"></text></g><g><title>engine::session::Session::close (82 samples, 6.57%)</title><rect x="77.0032%" y="869" width="6.5705%" height="15" fill="rgb(244,162,4)" fg:x="961" fg:w="82"/><text x="77.2532%" y="879.50">engine::s..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="83.4936%" y="853" width="0.0801%" height="15" fill="rgb(214,150,38)" fg:x="1042" fg:w="1"/><text x="83.7436%" y="863.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="83.5737%" y="741" width="0.0801%" height="15" fill="rgb(228,211,28)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="751.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="83.5737%" y="725" width="0.0801%" height="15" fill="rgb(212,98,48)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="735.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="83.5737%" y="709" width="0.0801%" height="15" fill="rgb(213,45,13)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="719.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="83.5737%" y="693" width="0.0801%" height="15" fill="rgb(218,35,29)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="83.8141%" y="677" width="0.0801%" height="15" fill="rgb(244,13,3)" fg:x="1046" fg:w="1"/><text x="84.0641%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.8141%" y="661" width="0.0801%" height="15" fill="rgb(235,170,19)" fg:x="1046" fg:w="1"/><text x="84.0641%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.8141%" y="645" width="0.0801%" height="15" fill="rgb(233,193,43)" fg:x="1046" fg:w="1"/><text x="84.0641%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.8141%" y="629" width="0.0801%" height="15" fill="rgb(228,223,20)" fg:x="1046" fg:w="1"/><text x="84.0641%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="83.6538%" y="693" width="0.3205%" height="15" fill="rgb(208,85,54)" fg:x="1044" fg:w="4"/><text x="83.9038%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.8942%" y="677" width="0.0801%" height="15" fill="rgb(254,14,45)" fg:x="1047" fg:w="1"/><text x="84.1442%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.8942%" y="661" width="0.0801%" height="15" fill="rgb(247,99,29)" fg:x="1047" fg:w="1"/><text x="84.1442%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.8942%" y="645" width="0.0801%" height="15" fill="rgb(225,180,54)" fg:x="1047" fg:w="1"/><text x="84.1442%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::surround::Surroundings&gt; (1 samples, 0.08%)</title><rect x="83.9744%" y="693" width="0.0801%" height="15" fill="rgb(239,88,43)" fg:x="1048" fg:w="1"/><text x="84.2244%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="83.9744%" y="677" width="0.0801%" height="15" fill="rgb(209,47,11)" fg:x="1048" fg:w="1"/><text x="84.2244%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="83.9744%" y="661" width="0.0801%" height="15" fill="rgb(219,179,23)" fg:x="1048" fg:w="1"/><text x="84.2244%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.9744%" y="645" width="0.0801%" height="15" fill="rgb(213,183,19)" fg:x="1048" fg:w="1"/><text x="84.2244%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.2147%" y="581" width="0.0801%" height="15" fill="rgb(210,11,9)" fg:x="1051" fg:w="1"/><text x="84.4647%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.2147%" y="565" width="0.0801%" height="15" fill="rgb(239,194,16)" fg:x="1051" fg:w="1"/><text x="84.4647%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.2147%" y="549" width="0.0801%" height="15" fill="rgb(246,23,50)" fg:x="1051" fg:w="1"/><text x="84.4647%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.2147%" y="533" width="0.0801%" height="15" fill="rgb(245,10,41)" fg:x="1051" fg:w="1"/><text x="84.4647%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.2147%" y="517" width="0.0801%" height="15" fill="rgb(228,43,24)" fg:x="1051" fg:w="1"/><text x="84.4647%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="84.2147%" y="501" width="0.0801%" height="15" fill="rgb(220,151,0)" fg:x="1051" fg:w="1"/><text x="84.4647%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="84.2147%" y="485" width="0.0801%" height="15" fill="rgb(232,219,10)" fg:x="1051" fg:w="1"/><text x="84.4647%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="84.1346%" y="597" width="0.3205%" height="15" fill="rgb(227,217,48)" fg:x="1050" fg:w="4"/><text x="84.3846%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="84.2949%" y="581" width="0.1603%" height="15" fill="rgb(210,66,35)" fg:x="1052" fg:w="2"/><text x="84.5449%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.4551%" y="597" width="0.0801%" height="15" fill="rgb(254,6,7)" fg:x="1054" fg:w="1"/><text x="84.7051%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.4551%" y="581" width="0.0801%" height="15" fill="rgb(235,222,42)" fg:x="1054" fg:w="1"/><text x="84.7051%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.4551%" y="565" width="0.0801%" height="15" fill="rgb(245,126,5)" fg:x="1054" fg:w="1"/><text x="84.7051%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.4551%" y="549" width="0.0801%" height="15" fill="rgb(215,73,17)" fg:x="1054" fg:w="1"/><text x="84.7051%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.4551%" y="533" width="0.0801%" height="15" fill="rgb(219,198,52)" fg:x="1054" fg:w="1"/><text x="84.7051%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.4551%" y="517" width="0.0801%" height="15" fill="rgb(217,159,18)" fg:x="1054" fg:w="1"/><text x="84.7051%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.4551%" y="501" width="0.0801%" height="15" fill="rgb(212,177,18)" fg:x="1054" fg:w="1"/><text x="84.7051%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.4551%" y="485" width="0.0801%" height="15" fill="rgb(241,10,11)" fg:x="1054" fg:w="1"/><text x="84.7051%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.4551%" y="469" width="0.0801%" height="15" fill="rgb(232,114,35)" fg:x="1054" fg:w="1"/><text x="84.7051%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.4551%" y="453" width="0.0801%" height="15" fill="rgb(238,222,8)" fg:x="1054" fg:w="1"/><text x="84.7051%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.4551%" y="437" width="0.0801%" height="15" fill="rgb(251,153,44)" fg:x="1054" fg:w="1"/><text x="84.7051%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4551%" y="421" width="0.0801%" height="15" fill="rgb(210,140,51)" fg:x="1054" fg:w="1"/><text x="84.7051%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="84.0545%" y="613" width="0.5609%" height="15" fill="rgb(222,63,0)" fg:x="1049" fg:w="7"/><text x="84.3045%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.5353%" y="597" width="0.0801%" height="15" fill="rgb(240,18,40)" fg:x="1055" fg:w="1"/><text x="84.7853%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.6154%" y="533" width="0.0801%" height="15" fill="rgb(237,88,16)" fg:x="1056" fg:w="1"/><text x="84.8654%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.6154%" y="517" width="0.0801%" height="15" fill="rgb(251,117,13)" fg:x="1056" fg:w="1"/><text x="84.8654%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.6154%" y="501" width="0.0801%" height="15" fill="rgb(251,228,8)" fg:x="1056" fg:w="1"/><text x="84.8654%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.6154%" y="485" width="0.0801%" height="15" fill="rgb(205,107,49)" fg:x="1056" fg:w="1"/><text x="84.8654%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.6154%" y="469" width="0.0801%" height="15" fill="rgb(238,72,41)" fg:x="1056" fg:w="1"/><text x="84.8654%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.6154%" y="453" width="0.0801%" height="15" fill="rgb(248,183,52)" fg:x="1056" fg:w="1"/><text x="84.8654%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.6154%" y="437" width="0.0801%" height="15" fill="rgb(215,58,20)" fg:x="1056" fg:w="1"/><text x="84.8654%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="84.6154%" y="613" width="0.1603%" height="15" fill="rgb(209,49,13)" fg:x="1056" fg:w="2"/><text x="84.8654%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="84.6154%" y="597" width="0.1603%" height="15" fill="rgb(208,113,17)" fg:x="1056" fg:w="2"/><text x="84.8654%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="84.6154%" y="581" width="0.1603%" height="15" fill="rgb(208,14,22)" fg:x="1056" fg:w="2"/><text x="84.8654%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="84.6154%" y="565" width="0.1603%" height="15" fill="rgb(222,95,2)" fg:x="1056" fg:w="2"/><text x="84.8654%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="84.6154%" y="549" width="0.1603%" height="15" fill="rgb(253,180,37)" fg:x="1056" fg:w="2"/><text x="84.8654%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="84.6955%" y="533" width="0.0801%" height="15" fill="rgb(250,81,33)" fg:x="1057" fg:w="1"/><text x="84.9455%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="84.6955%" y="517" width="0.0801%" height="15" fill="rgb(251,151,41)" fg:x="1057" fg:w="1"/><text x="84.9455%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (10 samples, 0.80%)</title><rect x="84.0545%" y="629" width="0.8013%" height="15" fill="rgb(210,135,17)" fg:x="1049" fg:w="10"/><text x="84.3045%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.7756%" y="613" width="0.0801%" height="15" fill="rgb(239,21,29)" fg:x="1058" fg:w="1"/><text x="85.0256%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (11 samples, 0.88%)</title><rect x="84.0545%" y="645" width="0.8814%" height="15" fill="rgb(231,215,16)" fg:x="1049" fg:w="11"/><text x="84.3045%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.8558%" y="629" width="0.0801%" height="15" fill="rgb(239,151,54)" fg:x="1059" fg:w="1"/><text x="85.1058%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.8558%" y="613" width="0.0801%" height="15" fill="rgb(222,122,38)" fg:x="1059" fg:w="1"/><text x="85.1058%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.8558%" y="597" width="0.0801%" height="15" fill="rgb(243,128,1)" fg:x="1059" fg:w="1"/><text x="85.1058%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.8558%" y="581" width="0.0801%" height="15" fill="rgb(225,74,21)" fg:x="1059" fg:w="1"/><text x="85.1058%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.8558%" y="565" width="0.0801%" height="15" fill="rgb(216,210,10)" fg:x="1059" fg:w="1"/><text x="85.1058%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.8558%" y="549" width="0.0801%" height="15" fill="rgb(228,76,19)" fg:x="1059" fg:w="1"/><text x="85.1058%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.8558%" y="533" width="0.0801%" height="15" fill="rgb(236,80,34)" fg:x="1059" fg:w="1"/><text x="85.1058%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.8558%" y="517" width="0.0801%" height="15" fill="rgb(225,173,23)" fg:x="1059" fg:w="1"/><text x="85.1058%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.8558%" y="501" width="0.0801%" height="15" fill="rgb(253,38,1)" fg:x="1059" fg:w="1"/><text x="85.1058%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.8558%" y="485" width="0.0801%" height="15" fill="rgb(206,155,35)" fg:x="1059" fg:w="1"/><text x="85.1058%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.8558%" y="469" width="0.0801%" height="15" fill="rgb(254,27,53)" fg:x="1059" fg:w="1"/><text x="85.1058%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.8558%" y="453" width="0.0801%" height="15" fill="rgb(225,52,41)" fg:x="1059" fg:w="1"/><text x="85.1058%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9359%" y="645" width="0.0801%" height="15" fill="rgb(244,53,18)" fg:x="1060" fg:w="1"/><text x="85.1859%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.9359%" y="629" width="0.0801%" height="15" fill="rgb(254,206,48)" fg:x="1060" fg:w="1"/><text x="85.1859%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9359%" y="613" width="0.0801%" height="15" fill="rgb(236,182,23)" fg:x="1060" fg:w="1"/><text x="85.1859%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9359%" y="597" width="0.0801%" height="15" fill="rgb(236,191,37)" fg:x="1060" fg:w="1"/><text x="85.1859%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.9359%" y="581" width="0.0801%" height="15" fill="rgb(245,53,8)" fg:x="1060" fg:w="1"/><text x="85.1859%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.9359%" y="565" width="0.0801%" height="15" fill="rgb(245,147,9)" fg:x="1060" fg:w="1"/><text x="85.1859%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.9359%" y="549" width="0.0801%" height="15" fill="rgb(218,24,48)" fg:x="1060" fg:w="1"/><text x="85.1859%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.9359%" y="533" width="0.0801%" height="15" fill="rgb(254,23,9)" fg:x="1060" fg:w="1"/><text x="85.1859%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.9359%" y="517" width="0.0801%" height="15" fill="rgb(244,105,9)" fg:x="1060" fg:w="1"/><text x="85.1859%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.9359%" y="501" width="0.0801%" height="15" fill="rgb(212,142,22)" fg:x="1060" fg:w="1"/><text x="85.1859%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.9359%" y="485" width="0.0801%" height="15" fill="rgb(221,114,49)" fg:x="1060" fg:w="1"/><text x="85.1859%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.9359%" y="469" width="0.0801%" height="15" fill="rgb(223,210,25)" fg:x="1060" fg:w="1"/><text x="85.1859%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.9359%" y="453" width="0.0801%" height="15" fill="rgb(235,162,44)" fg:x="1060" fg:w="1"/><text x="85.1859%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.9359%" y="437" width="0.0801%" height="15" fill="rgb(237,65,45)" fg:x="1060" fg:w="1"/><text x="85.1859%" y="447.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (14 samples, 1.12%)</title><rect x="84.0545%" y="693" width="1.1218%" height="15" fill="rgb(208,79,9)" fg:x="1049" fg:w="14"/><text x="84.3045%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::modified (14 samples, 1.12%)</title><rect x="84.0545%" y="677" width="1.1218%" height="15" fill="rgb(215,228,8)" fg:x="1049" fg:w="14"/><text x="84.3045%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (14 samples, 1.12%)</title><rect x="84.0545%" y="661" width="1.1218%" height="15" fill="rgb(205,185,17)" fg:x="1049" fg:w="14"/><text x="84.3045%" y="671.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="85.0160%" y="645" width="0.1603%" height="15" fill="rgb(213,62,36)" fg:x="1061" fg:w="2"/><text x="85.2660%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (1 samples, 0.08%)</title><rect x="85.1763%" y="661" width="0.0801%" height="15" fill="rgb(209,34,9)" fg:x="1063" fg:w="1"/><text x="85.4263%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="85.1763%" y="645" width="0.0801%" height="15" fill="rgb(246,151,27)" fg:x="1063" fg:w="1"/><text x="85.4263%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="85.1763%" y="629" width="0.0801%" height="15" fill="rgb(218,206,3)" fg:x="1063" fg:w="1"/><text x="85.4263%" y="639.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="85.1763%" y="613" width="0.0801%" height="15" fill="rgb(242,202,1)" fg:x="1063" fg:w="1"/><text x="85.4263%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.4167%" y="549" width="0.0801%" height="15" fill="rgb(227,185,16)" fg:x="1066" fg:w="1"/><text x="85.6667%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.4167%" y="533" width="0.0801%" height="15" fill="rgb(241,1,14)" fg:x="1066" fg:w="1"/><text x="85.6667%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.4167%" y="517" width="0.0801%" height="15" fill="rgb(212,113,25)" fg:x="1066" fg:w="1"/><text x="85.6667%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.4167%" y="501" width="0.0801%" height="15" fill="rgb(247,37,43)" fg:x="1066" fg:w="1"/><text x="85.6667%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.4167%" y="485" width="0.0801%" height="15" fill="rgb(226,54,8)" fg:x="1066" fg:w="1"/><text x="85.6667%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.4167%" y="469" width="0.0801%" height="15" fill="rgb(251,205,25)" fg:x="1066" fg:w="1"/><text x="85.6667%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.4167%" y="453" width="0.0801%" height="15" fill="rgb(246,87,35)" fg:x="1066" fg:w="1"/><text x="85.6667%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.4167%" y="437" width="0.0801%" height="15" fill="rgb(251,145,46)" fg:x="1066" fg:w="1"/><text x="85.6667%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.4167%" y="421" width="0.0801%" height="15" fill="rgb(210,210,33)" fg:x="1066" fg:w="1"/><text x="85.6667%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.4167%" y="405" width="0.0801%" height="15" fill="rgb(221,151,11)" fg:x="1066" fg:w="1"/><text x="85.6667%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.4167%" y="389" width="0.0801%" height="15" fill="rgb(208,160,28)" fg:x="1066" fg:w="1"/><text x="85.6667%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4968%" y="453" width="0.0801%" height="15" fill="rgb(243,69,29)" fg:x="1067" fg:w="1"/><text x="85.7468%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="85.4167%" y="581" width="0.2404%" height="15" fill="rgb(224,144,4)" fg:x="1066" fg:w="3"/><text x="85.6667%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="85.4167%" y="565" width="0.2404%" height="15" fill="rgb(211,140,38)" fg:x="1066" fg:w="3"/><text x="85.6667%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="85.4968%" y="549" width="0.1603%" height="15" fill="rgb(252,189,15)" fg:x="1067" fg:w="2"/><text x="85.7468%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="85.4968%" y="533" width="0.1603%" height="15" fill="rgb(251,175,23)" fg:x="1067" fg:w="2"/><text x="85.7468%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.4968%" y="517" width="0.1603%" height="15" fill="rgb(212,184,11)" fg:x="1067" fg:w="2"/><text x="85.7468%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="85.4968%" y="501" width="0.1603%" height="15" fill="rgb(217,205,6)" fg:x="1067" fg:w="2"/><text x="85.7468%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="85.4968%" y="485" width="0.1603%" height="15" fill="rgb(235,45,45)" fg:x="1067" fg:w="2"/><text x="85.7468%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="85.4968%" y="469" width="0.1603%" height="15" fill="rgb(211,157,53)" fg:x="1067" fg:w="2"/><text x="85.7468%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.5769%" y="453" width="0.0801%" height="15" fill="rgb(212,13,8)" fg:x="1068" fg:w="1"/><text x="85.8269%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.5769%" y="437" width="0.0801%" height="15" fill="rgb(218,80,36)" fg:x="1068" fg:w="1"/><text x="85.8269%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.5769%" y="421" width="0.0801%" height="15" fill="rgb(211,123,43)" fg:x="1068" fg:w="1"/><text x="85.8269%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.5769%" y="405" width="0.0801%" height="15" fill="rgb(206,165,2)" fg:x="1068" fg:w="1"/><text x="85.8269%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.5769%" y="389" width="0.0801%" height="15" fill="rgb(248,63,35)" fg:x="1068" fg:w="1"/><text x="85.8269%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.5769%" y="373" width="0.0801%" height="15" fill="rgb(219,133,41)" fg:x="1068" fg:w="1"/><text x="85.8269%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.5769%" y="357" width="0.0801%" height="15" fill="rgb(206,175,46)" fg:x="1068" fg:w="1"/><text x="85.8269%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.5769%" y="341" width="0.0801%" height="15" fill="rgb(224,41,35)" fg:x="1068" fg:w="1"/><text x="85.8269%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.5769%" y="325" width="0.0801%" height="15" fill="rgb(226,113,24)" fg:x="1068" fg:w="1"/><text x="85.8269%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.5769%" y="309" width="0.0801%" height="15" fill="rgb(219,51,41)" fg:x="1068" fg:w="1"/><text x="85.8269%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.5769%" y="293" width="0.0801%" height="15" fill="rgb(220,145,47)" fg:x="1068" fg:w="1"/><text x="85.8269%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.5769%" y="277" width="0.0801%" height="15" fill="rgb(239,121,47)" fg:x="1068" fg:w="1"/><text x="85.8269%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="85.6571%" y="485" width="0.1603%" height="15" fill="rgb(207,60,40)" fg:x="1069" fg:w="2"/><text x="85.9071%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="85.6571%" y="469" width="0.1603%" height="15" fill="rgb(224,229,11)" fg:x="1069" fg:w="2"/><text x="85.9071%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.8173%" y="437" width="0.0801%" height="15" fill="rgb(252,28,32)" fg:x="1071" fg:w="1"/><text x="86.0673%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.8173%" y="421" width="0.0801%" height="15" fill="rgb(207,52,49)" fg:x="1071" fg:w="1"/><text x="86.0673%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.8173%" y="405" width="0.0801%" height="15" fill="rgb(243,51,50)" fg:x="1071" fg:w="1"/><text x="86.0673%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="85.8173%" y="389" width="0.0801%" height="15" fill="rgb(212,92,21)" fg:x="1071" fg:w="1"/><text x="86.0673%" y="399.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="85.6571%" y="565" width="0.3205%" height="15" fill="rgb(230,183,50)" fg:x="1069" fg:w="4"/><text x="85.9071%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="85.6571%" y="549" width="0.3205%" height="15" fill="rgb(225,48,9)" fg:x="1069" fg:w="4"/><text x="85.9071%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="85.6571%" y="533" width="0.3205%" height="15" fill="rgb(254,44,4)" fg:x="1069" fg:w="4"/><text x="85.9071%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="85.6571%" y="517" width="0.3205%" height="15" fill="rgb(252,128,37)" fg:x="1069" fg:w="4"/><text x="85.9071%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="85.6571%" y="501" width="0.3205%" height="15" fill="rgb(227,178,8)" fg:x="1069" fg:w="4"/><text x="85.9071%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="85.8173%" y="485" width="0.1603%" height="15" fill="rgb(205,206,32)" fg:x="1071" fg:w="2"/><text x="86.0673%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="85.8173%" y="469" width="0.1603%" height="15" fill="rgb(220,218,22)" fg:x="1071" fg:w="2"/><text x="86.0673%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="85.8173%" y="453" width="0.1603%" height="15" fill="rgb(236,41,28)" fg:x="1071" fg:w="2"/><text x="86.0673%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.8974%" y="437" width="0.0801%" height="15" fill="rgb(219,37,7)" fg:x="1072" fg:w="1"/><text x="86.1474%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.8974%" y="421" width="0.0801%" height="15" fill="rgb(206,160,15)" fg:x="1072" fg:w="1"/><text x="86.1474%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.8974%" y="405" width="0.0801%" height="15" fill="rgb(208,82,21)" fg:x="1072" fg:w="1"/><text x="86.1474%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.8974%" y="389" width="0.0801%" height="15" fill="rgb(226,130,25)" fg:x="1072" fg:w="1"/><text x="86.1474%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="85.9776%" y="533" width="0.1603%" height="15" fill="rgb(212,72,24)" fg:x="1073" fg:w="2"/><text x="86.2276%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.9776%" y="517" width="0.1603%" height="15" fill="rgb(206,28,16)" fg:x="1073" fg:w="2"/><text x="86.2276%" y="527.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.0577%" y="501" width="0.0801%" height="15" fill="rgb(249,41,5)" fg:x="1074" fg:w="1"/><text x="86.3077%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0577%" y="485" width="0.0801%" height="15" fill="rgb(233,96,48)" fg:x="1074" fg:w="1"/><text x="86.3077%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="86.0577%" y="469" width="0.0801%" height="15" fill="rgb(240,198,11)" fg:x="1074" fg:w="1"/><text x="86.3077%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (11 samples, 0.88%)</title><rect x="85.3365%" y="629" width="0.8814%" height="15" fill="rgb(209,175,35)" fg:x="1065" fg:w="11"/><text x="85.5865%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (11 samples, 0.88%)</title><rect x="85.3365%" y="613" width="0.8814%" height="15" fill="rgb(214,40,51)" fg:x="1065" fg:w="11"/><text x="85.5865%" y="623.50"></text></g><g><title>engine::internal::Entities::add_persisted (11 samples, 0.88%)</title><rect x="85.3365%" y="597" width="0.8814%" height="15" fill="rgb(252,56,4)" fg:x="1065" fg:w="11"/><text x="85.5865%" y="607.50"></text></g><g><title>kernel::model::entity::Entity::from_str (7 samples, 0.56%)</title><rect x="85.6571%" y="581" width="0.5609%" height="15" fill="rgb(219,131,5)" fg:x="1069" fg:w="7"/><text x="85.9071%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="85.9776%" y="565" width="0.2404%" height="15" fill="rgb(223,67,53)" fg:x="1073" fg:w="3"/><text x="86.2276%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="85.9776%" y="549" width="0.2404%" height="15" fill="rgb(227,154,8)" fg:x="1073" fg:w="3"/><text x="86.2276%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.1378%" y="533" width="0.0801%" height="15" fill="rgb(216,174,51)" fg:x="1075" fg:w="1"/><text x="86.3878%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.1378%" y="517" width="0.0801%" height="15" fill="rgb(239,60,34)" fg:x="1075" fg:w="1"/><text x="86.3878%" y="527.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (14 samples, 1.12%)</title><rect x="85.1763%" y="677" width="1.1218%" height="15" fill="rgb(236,165,48)" fg:x="1063" fg:w="14"/><text x="85.4263%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (13 samples, 1.04%)</title><rect x="85.2564%" y="661" width="1.0417%" height="15" fill="rgb(210,37,26)" fg:x="1064" fg:w="13"/><text x="85.5064%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (13 samples, 1.04%)</title><rect x="85.2564%" y="645" width="1.0417%" height="15" fill="rgb(211,3,17)" fg:x="1064" fg:w="13"/><text x="85.5064%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="86.2179%" y="629" width="0.0801%" height="15" fill="rgb(234,88,49)" fg:x="1076" fg:w="1"/><text x="86.4679%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.2179%" y="613" width="0.0801%" height="15" fill="rgb(233,40,17)" fg:x="1076" fg:w="1"/><text x="86.4679%" y="623.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (15 samples, 1.20%)</title><rect x="85.1763%" y="693" width="1.2019%" height="15" fill="rgb(235,127,31)" fg:x="1063" fg:w="15"/><text x="85.4263%" y="703.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="86.2981%" y="677" width="0.0801%" height="15" fill="rgb(248,167,17)" fg:x="1077" fg:w="1"/><text x="86.5481%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="86.2981%" y="661" width="0.0801%" height="15" fill="rgb(218,179,8)" fg:x="1077" fg:w="1"/><text x="86.5481%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="86.2981%" y="645" width="0.0801%" height="15" fill="rgb(216,92,14)" fg:x="1077" fg:w="1"/><text x="86.5481%" y="655.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="86.2981%" y="629" width="0.0801%" height="15" fill="rgb(221,198,46)" fg:x="1077" fg:w="1"/><text x="86.5481%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="86.8590%" y="565" width="0.1603%" height="15" fill="rgb(244,7,25)" fg:x="1084" fg:w="2"/><text x="87.1090%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="86.9391%" y="549" width="0.0801%" height="15" fill="rgb(233,75,6)" fg:x="1085" fg:w="1"/><text x="87.1891%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="86.6987%" y="597" width="0.4006%" height="15" fill="rgb(240,189,41)" fg:x="1082" fg:w="5"/><text x="86.9487%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="86.8590%" y="581" width="0.2404%" height="15" fill="rgb(237,157,21)" fg:x="1084" fg:w="3"/><text x="87.1090%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.0192%" y="565" width="0.0801%" height="15" fill="rgb(210,136,49)" fg:x="1086" fg:w="1"/><text x="87.2692%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.0994%" y="597" width="0.0801%" height="15" fill="rgb(210,68,29)" fg:x="1087" fg:w="1"/><text x="87.3494%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="86.6987%" y="613" width="0.5609%" height="15" fill="rgb(247,207,20)" fg:x="1082" fg:w="7"/><text x="86.9487%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="87.1795%" y="597" width="0.0801%" height="15" fill="rgb(224,73,48)" fg:x="1088" fg:w="1"/><text x="87.4295%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="87.1795%" y="581" width="0.0801%" height="15" fill="rgb(215,136,47)" fg:x="1088" fg:w="1"/><text x="87.4295%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.1795%" y="565" width="0.0801%" height="15" fill="rgb(232,222,16)" fg:x="1088" fg:w="1"/><text x="87.4295%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.96%)</title><rect x="86.6186%" y="629" width="0.9615%" height="15" fill="rgb(249,202,47)" fg:x="1081" fg:w="12"/><text x="86.8686%" y="639.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="87.2596%" y="613" width="0.3205%" height="15" fill="rgb(236,56,8)" fg:x="1089" fg:w="4"/><text x="87.5096%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (16 samples, 1.28%)</title><rect x="86.4583%" y="661" width="1.2821%" height="15" fill="rgb(222,6,3)" fg:x="1079" fg:w="16"/><text x="86.7083%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.12%)</title><rect x="86.6186%" y="645" width="1.1218%" height="15" fill="rgb(254,222,28)" fg:x="1081" fg:w="14"/><text x="86.8686%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="87.5801%" y="629" width="0.1603%" height="15" fill="rgb(219,57,23)" fg:x="1093" fg:w="2"/><text x="87.8301%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="87.7404%" y="613" width="0.0801%" height="15" fill="rgb(251,106,48)" fg:x="1095" fg:w="1"/><text x="87.9904%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="87.7404%" y="629" width="0.3205%" height="15" fill="rgb(242,2,23)" fg:x="1095" fg:w="4"/><text x="87.9904%" y="639.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="87.8205%" y="613" width="0.2404%" height="15" fill="rgb(212,109,31)" fg:x="1096" fg:w="3"/><text x="88.0705%" y="623.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="88.0609%" y="629" width="0.0801%" height="15" fill="rgb(241,9,22)" fg:x="1099" fg:w="1"/><text x="88.3109%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="88.0609%" y="613" width="0.0801%" height="15" fill="rgb(209,64,27)" fg:x="1099" fg:w="1"/><text x="88.3109%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="88.2212%" y="565" width="0.1603%" height="15" fill="rgb(248,13,44)" fg:x="1101" fg:w="2"/><text x="88.4712%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="88.3814%" y="549" width="0.0801%" height="15" fill="rgb(213,86,6)" fg:x="1103" fg:w="1"/><text x="88.6314%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (1 samples, 0.08%)</title><rect x="88.3814%" y="533" width="0.0801%" height="15" fill="rgb(247,11,18)" fg:x="1103" fg:w="1"/><text x="88.6314%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="88.3814%" y="517" width="0.0801%" height="15" fill="rgb(252,31,11)" fg:x="1103" fg:w="1"/><text x="88.6314%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="88.3814%" y="501" width="0.0801%" height="15" fill="rgb(215,63,51)" fg:x="1103" fg:w="1"/><text x="88.6314%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="88.3814%" y="485" width="0.0801%" height="15" fill="rgb(222,180,4)" fg:x="1103" fg:w="1"/><text x="88.6314%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="88.3814%" y="469" width="0.0801%" height="15" fill="rgb(233,4,23)" fg:x="1103" fg:w="1"/><text x="88.6314%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.3814%" y="453" width="0.0801%" height="15" fill="rgb(230,116,22)" fg:x="1103" fg:w="1"/><text x="88.6314%" y="463.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.08%)</title><rect x="88.3814%" y="437" width="0.0801%" height="15" fill="rgb(222,20,14)" fg:x="1103" fg:w="1"/><text x="88.6314%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.4615%" y="517" width="0.0801%" height="15" fill="rgb(210,176,43)" fg:x="1104" fg:w="1"/><text x="88.7115%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.4615%" y="501" width="0.0801%" height="15" fill="rgb(219,67,32)" fg:x="1104" fg:w="1"/><text x="88.7115%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.4615%" y="485" width="0.0801%" height="15" fill="rgb(228,91,39)" fg:x="1104" fg:w="1"/><text x="88.7115%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.4615%" y="469" width="0.0801%" height="15" fill="rgb(254,63,14)" fg:x="1104" fg:w="1"/><text x="88.7115%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.4615%" y="453" width="0.0801%" height="15" fill="rgb(216,171,39)" fg:x="1104" fg:w="1"/><text x="88.7115%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.4615%" y="437" width="0.0801%" height="15" fill="rgb(248,68,25)" fg:x="1104" fg:w="1"/><text x="88.7115%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.4615%" y="421" width="0.0801%" height="15" fill="rgb(239,63,16)" fg:x="1104" fg:w="1"/><text x="88.7115%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.4615%" y="405" width="0.0801%" height="15" fill="rgb(225,111,43)" fg:x="1104" fg:w="1"/><text x="88.7115%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.4615%" y="389" width="0.0801%" height="15" fill="rgb(246,165,17)" fg:x="1104" fg:w="1"/><text x="88.7115%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.4615%" y="373" width="0.0801%" height="15" fill="rgb(208,124,1)" fg:x="1104" fg:w="1"/><text x="88.7115%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.4615%" y="357" width="0.0801%" height="15" fill="rgb(234,147,33)" fg:x="1104" fg:w="1"/><text x="88.7115%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.4615%" y="341" width="0.0801%" height="15" fill="rgb(240,86,30)" fg:x="1104" fg:w="1"/><text x="88.7115%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.5417%" y="517" width="0.0801%" height="15" fill="rgb(237,34,51)" fg:x="1105" fg:w="1"/><text x="88.7917%" y="527.50"></text></g><g><title>kernel::model::entity::EntityRef::key (1 samples, 0.08%)</title><rect x="88.6218%" y="517" width="0.0801%" height="15" fill="rgb(232,131,41)" fg:x="1106" fg:w="1"/><text x="88.8718%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="88.7019%" y="501" width="0.0801%" height="15" fill="rgb(227,129,53)" fg:x="1107" fg:w="1"/><text x="88.9519%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.7821%" y="421" width="0.0801%" height="15" fill="rgb(230,90,35)" fg:x="1108" fg:w="1"/><text x="89.0321%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="88.7821%" y="437" width="0.1603%" height="15" fill="rgb(248,88,27)" fg:x="1108" fg:w="2"/><text x="89.0321%" y="447.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="88.8622%" y="421" width="0.0801%" height="15" fill="rgb(223,18,17)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="88.8622%" y="405" width="0.0801%" height="15" fill="rgb(241,11,10)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="415.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="88.8622%" y="389" width="0.0801%" height="15" fill="rgb(232,111,52)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.8622%" y="373" width="0.0801%" height="15" fill="rgb(228,67,8)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.8622%" y="357" width="0.0801%" height="15" fill="rgb(251,168,31)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.8622%" y="341" width="0.0801%" height="15" fill="rgb(249,164,11)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.8622%" y="325" width="0.0801%" height="15" fill="rgb(239,81,9)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.8622%" y="309" width="0.0801%" height="15" fill="rgb(222,145,38)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.8622%" y="293" width="0.0801%" height="15" fill="rgb(238,80,54)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.8622%" y="277" width="0.0801%" height="15" fill="rgb(237,116,16)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="88.8622%" y="261" width="0.0801%" height="15" fill="rgb(218,135,19)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.8622%" y="245" width="0.0801%" height="15" fill="rgb(216,207,44)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.8622%" y="229" width="0.0801%" height="15" fill="rgb(226,152,40)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.9423%" y="389" width="0.0801%" height="15" fill="rgb(219,98,35)" fg:x="1110" fg:w="1"/><text x="89.1923%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.9423%" y="373" width="0.0801%" height="15" fill="rgb(222,136,46)" fg:x="1110" fg:w="1"/><text x="89.1923%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.9423%" y="357" width="0.0801%" height="15" fill="rgb(222,71,8)" fg:x="1110" fg:w="1"/><text x="89.1923%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.9423%" y="341" width="0.0801%" height="15" fill="rgb(209,89,53)" fg:x="1110" fg:w="1"/><text x="89.1923%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.9423%" y="325" width="0.0801%" height="15" fill="rgb(210,97,51)" fg:x="1110" fg:w="1"/><text x="89.1923%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.9423%" y="309" width="0.0801%" height="15" fill="rgb(248,65,21)" fg:x="1110" fg:w="1"/><text x="89.1923%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="88.9423%" y="437" width="0.1603%" height="15" fill="rgb(222,5,31)" fg:x="1110" fg:w="2"/><text x="89.1923%" y="447.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="88.9423%" y="421" width="0.1603%" height="15" fill="rgb(241,16,30)" fg:x="1110" fg:w="2"/><text x="89.1923%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="88.9423%" y="405" width="0.1603%" height="15" fill="rgb(215,86,30)" fg:x="1110" fg:w="2"/><text x="89.1923%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.0224%" y="389" width="0.0801%" height="15" fill="rgb(235,26,44)" fg:x="1111" fg:w="1"/><text x="89.2724%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.0224%" y="373" width="0.0801%" height="15" fill="rgb(228,147,14)" fg:x="1111" fg:w="1"/><text x="89.2724%" y="383.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="89.1026%" y="421" width="0.0801%" height="15" fill="rgb(253,38,50)" fg:x="1112" fg:w="1"/><text x="89.3526%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.1026%" y="405" width="0.0801%" height="15" fill="rgb(251,151,16)" fg:x="1112" fg:w="1"/><text x="89.3526%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.1026%" y="389" width="0.0801%" height="15" fill="rgb(224,64,19)" fg:x="1112" fg:w="1"/><text x="89.3526%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.1026%" y="373" width="0.0801%" height="15" fill="rgb(235,214,47)" fg:x="1112" fg:w="1"/><text x="89.3526%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.1026%" y="357" width="0.0801%" height="15" fill="rgb(218,15,19)" fg:x="1112" fg:w="1"/><text x="89.3526%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.1026%" y="341" width="0.0801%" height="15" fill="rgb(247,209,3)" fg:x="1112" fg:w="1"/><text x="89.3526%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.1026%" y="325" width="0.0801%" height="15" fill="rgb(217,29,2)" fg:x="1112" fg:w="1"/><text x="89.3526%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.1026%" y="309" width="0.0801%" height="15" fill="rgb(234,9,9)" fg:x="1112" fg:w="1"/><text x="89.3526%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.1026%" y="293" width="0.0801%" height="15" fill="rgb(207,43,14)" fg:x="1112" fg:w="1"/><text x="89.3526%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.1026%" y="277" width="0.0801%" height="15" fill="rgb(216,219,36)" fg:x="1112" fg:w="1"/><text x="89.3526%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="89.1827%" y="389" width="0.0801%" height="15" fill="rgb(238,12,26)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.1827%" y="373" width="0.0801%" height="15" fill="rgb(226,67,30)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.1827%" y="357" width="0.0801%" height="15" fill="rgb(229,154,7)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.1827%" y="341" width="0.0801%" height="15" fill="rgb(249,90,18)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.1827%" y="325" width="0.0801%" height="15" fill="rgb(223,53,15)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="89.1827%" y="309" width="0.0801%" height="15" fill="rgb(253,86,38)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.1827%" y="293" width="0.0801%" height="15" fill="rgb(222,198,9)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.1827%" y="277" width="0.0801%" height="15" fill="rgb(240,146,25)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="89.1827%" y="261" width="0.0801%" height="15" fill="rgb(225,38,10)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.1827%" y="245" width="0.0801%" height="15" fill="rgb(246,93,4)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.1827%" y="229" width="0.0801%" height="15" fill="rgb(222,55,18)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="89.1827%" y="213" width="0.0801%" height="15" fill="rgb(233,137,48)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.1827%" y="197" width="0.0801%" height="15" fill="rgb(214,8,54)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.1827%" y="181" width="0.0801%" height="15" fill="rgb(206,75,4)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="89.1827%" y="165" width="0.0801%" height="15" fill="rgb(238,171,14)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.1827%" y="149" width="0.0801%" height="15" fill="rgb(233,70,41)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.1827%" y="133" width="0.0801%" height="15" fill="rgb(214,68,36)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="89.1827%" y="117" width="0.0801%" height="15" fill="rgb(223,29,5)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="127.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.1827%" y="101" width="0.0801%" height="15" fill="rgb(251,22,40)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="111.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.1827%" y="85" width="0.0801%" height="15" fill="rgb(210,67,41)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="95.50"></text></g><g><title>core::iter::adapters::try_process (12 samples, 0.96%)</title><rect x="88.3814%" y="565" width="0.9615%" height="15" fill="rgb(225,177,31)" fg:x="1103" fg:w="12"/><text x="88.6314%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (11 samples, 0.88%)</title><rect x="88.4615%" y="549" width="0.8814%" height="15" fill="rgb(221,229,11)" fg:x="1104" fg:w="11"/><text x="88.7115%" y="559.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (11 samples, 0.88%)</title><rect x="88.4615%" y="533" width="0.8814%" height="15" fill="rgb(247,172,52)" fg:x="1104" fg:w="11"/><text x="88.7115%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (8 samples, 0.64%)</title><rect x="88.7019%" y="517" width="0.6410%" height="15" fill="rgb(212,73,19)" fg:x="1107" fg:w="8"/><text x="88.9519%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="88.7821%" y="501" width="0.5609%" height="15" fill="rgb(244,7,46)" fg:x="1108" fg:w="7"/><text x="89.0321%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (7 samples, 0.56%)</title><rect x="88.7821%" y="485" width="0.5609%" height="15" fill="rgb(230,113,20)" fg:x="1108" fg:w="7"/><text x="89.0321%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (7 samples, 0.56%)</title><rect x="88.7821%" y="469" width="0.5609%" height="15" fill="rgb(209,97,30)" fg:x="1108" fg:w="7"/><text x="89.0321%" y="479.50"></text></g><g><title>engine::internal::Entities::add_persisted (7 samples, 0.56%)</title><rect x="88.7821%" y="453" width="0.5609%" height="15" fill="rgb(243,89,12)" fg:x="1108" fg:w="7"/><text x="89.0321%" y="463.50"></text></g><g><title>kernel::model::entity::Entity::from_str (3 samples, 0.24%)</title><rect x="89.1026%" y="437" width="0.2404%" height="15" fill="rgb(228,32,19)" fg:x="1112" fg:w="3"/><text x="89.3526%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="89.1827%" y="421" width="0.1603%" height="15" fill="rgb(248,25,17)" fg:x="1113" fg:w="2"/><text x="89.4327%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.1827%" y="405" width="0.1603%" height="15" fill="rgb(232,161,29)" fg:x="1113" fg:w="2"/><text x="89.4327%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.2628%" y="389" width="0.0801%" height="15" fill="rgb(251,192,11)" fg:x="1114" fg:w="1"/><text x="89.5128%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.2628%" y="373" width="0.0801%" height="15" fill="rgb(240,47,32)" fg:x="1114" fg:w="1"/><text x="89.5128%" y="383.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="89.2628%" y="357" width="0.0801%" height="15" fill="rgb(250,16,45)" fg:x="1114" fg:w="1"/><text x="89.5128%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::HasScopes&gt;::into_scopes (1 samples, 0.08%)</title><rect x="89.3429%" y="549" width="0.0801%" height="15" fill="rgb(227,217,42)" fg:x="1115" fg:w="1"/><text x="89.5929%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.4231%" y="501" width="0.0801%" height="15" fill="rgb(206,82,54)" fg:x="1116" fg:w="1"/><text x="89.6731%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.4231%" y="485" width="0.0801%" height="15" fill="rgb(243,145,25)" fg:x="1116" fg:w="1"/><text x="89.6731%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.4231%" y="469" width="0.0801%" height="15" fill="rgb(207,166,24)" fg:x="1116" fg:w="1"/><text x="89.6731%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.4231%" y="453" width="0.0801%" height="15" fill="rgb(215,191,44)" fg:x="1116" fg:w="1"/><text x="89.6731%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.4231%" y="437" width="0.0801%" height="15" fill="rgb(234,218,51)" fg:x="1116" fg:w="1"/><text x="89.6731%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.4231%" y="421" width="0.0801%" height="15" fill="rgb(245,133,21)" fg:x="1116" fg:w="1"/><text x="89.6731%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.4231%" y="405" width="0.0801%" height="15" fill="rgb(230,136,45)" fg:x="1116" fg:w="1"/><text x="89.6731%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.4231%" y="389" width="0.0801%" height="15" fill="rgb(247,63,43)" fg:x="1116" fg:w="1"/><text x="89.6731%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.4231%" y="373" width="0.0801%" height="15" fill="rgb(254,223,31)" fg:x="1116" fg:w="1"/><text x="89.6731%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.4231%" y="357" width="0.0801%" height="15" fill="rgb(236,185,0)" fg:x="1116" fg:w="1"/><text x="89.6731%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.4231%" y="341" width="0.0801%" height="15" fill="rgb(231,139,46)" fg:x="1116" fg:w="1"/><text x="89.6731%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.4231%" y="325" width="0.0801%" height="15" fill="rgb(236,147,31)" fg:x="1116" fg:w="1"/><text x="89.6731%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.4231%" y="309" width="0.0801%" height="15" fill="rgb(225,222,22)" fg:x="1116" fg:w="1"/><text x="89.6731%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.4231%" y="293" width="0.0801%" height="15" fill="rgb(225,193,14)" fg:x="1116" fg:w="1"/><text x="89.6731%" y="303.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="89.4231%" y="533" width="0.1603%" height="15" fill="rgb(253,193,46)" fg:x="1116" fg:w="2"/><text x="89.6731%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.4231%" y="517" width="0.1603%" height="15" fill="rgb(218,187,39)" fg:x="1116" fg:w="2"/><text x="89.6731%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.5032%" y="501" width="0.0801%" height="15" fill="rgb(227,162,48)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="89.5833%" y="533" width="0.0801%" height="15" fill="rgb(222,25,5)" fg:x="1118" fg:w="1"/><text x="89.8333%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="89.5833%" y="517" width="0.0801%" height="15" fill="rgb(211,205,16)" fg:x="1118" fg:w="1"/><text x="89.8333%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="89.5833%" y="501" width="0.0801%" height="15" fill="rgb(244,191,2)" fg:x="1118" fg:w="1"/><text x="89.8333%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="89.5833%" y="485" width="0.0801%" height="15" fill="rgb(248,159,12)" fg:x="1118" fg:w="1"/><text x="89.8333%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="89.5833%" y="469" width="0.0801%" height="15" fill="rgb(235,204,17)" fg:x="1118" fg:w="1"/><text x="89.8333%" y="479.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="89.5833%" y="453" width="0.0801%" height="15" fill="rgb(240,21,27)" fg:x="1118" fg:w="1"/><text x="89.8333%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.6635%" y="501" width="0.0801%" height="15" fill="rgb(224,170,31)" fg:x="1119" fg:w="1"/><text x="89.9135%" y="511.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (21 samples, 1.68%)</title><rect x="88.2212%" y="581" width="1.6827%" height="15" fill="rgb(223,145,32)" fg:x="1101" fg:w="21"/><text x="88.4712%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.56%)</title><rect x="89.3429%" y="565" width="0.5609%" height="15" fill="rgb(243,100,5)" fg:x="1115" fg:w="7"/><text x="89.5929%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="89.4231%" y="549" width="0.4808%" height="15" fill="rgb(242,131,51)" fg:x="1116" fg:w="6"/><text x="89.6731%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="89.6635%" y="533" width="0.2404%" height="15" fill="rgb(223,156,46)" fg:x="1119" fg:w="3"/><text x="89.9135%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="89.6635%" y="517" width="0.2404%" height="15" fill="rgb(215,10,40)" fg:x="1119" fg:w="3"/><text x="89.9135%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="89.7436%" y="501" width="0.1603%" height="15" fill="rgb(233,155,0)" fg:x="1120" fg:w="2"/><text x="89.9936%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="89.7436%" y="485" width="0.1603%" height="15" fill="rgb(247,78,6)" fg:x="1120" fg:w="2"/><text x="89.9936%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="89.7436%" y="469" width="0.1603%" height="15" fill="rgb(237,217,21)" fg:x="1120" fg:w="2"/><text x="89.9936%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="89.7436%" y="453" width="0.1603%" height="15" fill="rgb(212,1,21)" fg:x="1120" fg:w="2"/><text x="89.9936%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.7436%" y="437" width="0.1603%" height="15" fill="rgb(213,7,14)" fg:x="1120" fg:w="2"/><text x="89.9936%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="89.7436%" y="421" width="0.1603%" height="15" fill="rgb(225,84,14)" fg:x="1120" fg:w="2"/><text x="89.9936%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="90.0641%" y="565" width="0.0801%" height="15" fill="rgb(239,216,39)" fg:x="1124" fg:w="1"/><text x="90.3141%" y="575.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.1442%" y="533" width="0.0801%" height="15" fill="rgb(253,29,23)" fg:x="1125" fg:w="1"/><text x="90.3942%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.1442%" y="517" width="0.0801%" height="15" fill="rgb(220,167,50)" fg:x="1125" fg:w="1"/><text x="90.3942%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.1442%" y="501" width="0.0801%" height="15" fill="rgb(232,141,1)" fg:x="1125" fg:w="1"/><text x="90.3942%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.1442%" y="485" width="0.0801%" height="15" fill="rgb(222,210,1)" fg:x="1125" fg:w="1"/><text x="90.3942%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.1442%" y="469" width="0.0801%" height="15" fill="rgb(219,84,10)" fg:x="1125" fg:w="1"/><text x="90.3942%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.1442%" y="453" width="0.0801%" height="15" fill="rgb(245,188,6)" fg:x="1125" fg:w="1"/><text x="90.3942%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.1442%" y="437" width="0.0801%" height="15" fill="rgb(252,139,39)" fg:x="1125" fg:w="1"/><text x="90.3942%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.1442%" y="421" width="0.0801%" height="15" fill="rgb(218,42,26)" fg:x="1125" fg:w="1"/><text x="90.3942%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.1442%" y="405" width="0.0801%" height="15" fill="rgb(237,226,51)" fg:x="1125" fg:w="1"/><text x="90.3942%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.1442%" y="389" width="0.0801%" height="15" fill="rgb(246,15,17)" fg:x="1125" fg:w="1"/><text x="90.3942%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.1442%" y="373" width="0.0801%" height="15" fill="rgb(228,170,42)" fg:x="1125" fg:w="1"/><text x="90.3942%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.1442%" y="357" width="0.0801%" height="15" fill="rgb(248,118,53)" fg:x="1125" fg:w="1"/><text x="90.3942%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.1442%" y="341" width="0.0801%" height="15" fill="rgb(207,30,10)" fg:x="1125" fg:w="1"/><text x="90.3942%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.1442%" y="325" width="0.0801%" height="15" fill="rgb(217,104,38)" fg:x="1125" fg:w="1"/><text x="90.3942%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.1442%" y="309" width="0.0801%" height="15" fill="rgb(211,165,26)" fg:x="1125" fg:w="1"/><text x="90.3942%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.1442%" y="293" width="0.0801%" height="15" fill="rgb(247,38,9)" fg:x="1125" fg:w="1"/><text x="90.3942%" y="303.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (2 samples, 0.16%)</title><rect x="90.2244%" y="453" width="0.1603%" height="15" fill="rgb(218,187,8)" fg:x="1126" fg:w="2"/><text x="90.4744%" y="463.50"></text></g><g><title>kernel::model::base::EntityKey::key_to_string (1 samples, 0.08%)</title><rect x="90.3045%" y="437" width="0.0801%" height="15" fill="rgb(247,94,28)" fg:x="1127" fg:w="1"/><text x="90.5545%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="90.4647%" y="261" width="0.0801%" height="15" fill="rgb(218,173,30)" fg:x="1129" fg:w="1"/><text x="90.7147%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.5449%" y="261" width="0.0801%" height="15" fill="rgb(245,45,36)" fg:x="1130" fg:w="1"/><text x="90.7949%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="90.4647%" y="405" width="0.3205%" height="15" fill="rgb(221,172,44)" fg:x="1129" fg:w="4"/><text x="90.7147%" y="415.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="90.4647%" y="389" width="0.3205%" height="15" fill="rgb(222,45,12)" fg:x="1129" fg:w="4"/><text x="90.7147%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="90.4647%" y="373" width="0.3205%" height="15" fill="rgb(250,10,22)" fg:x="1129" fg:w="4"/><text x="90.7147%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="90.4647%" y="357" width="0.3205%" height="15" fill="rgb(239,27,0)" fg:x="1129" fg:w="4"/><text x="90.7147%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="90.4647%" y="341" width="0.3205%" height="15" fill="rgb(223,118,22)" fg:x="1129" fg:w="4"/><text x="90.7147%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="90.4647%" y="325" width="0.3205%" height="15" fill="rgb(251,81,25)" fg:x="1129" fg:w="4"/><text x="90.7147%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="90.4647%" y="309" width="0.3205%" height="15" fill="rgb(237,225,53)" fg:x="1129" fg:w="4"/><text x="90.7147%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="90.4647%" y="293" width="0.3205%" height="15" fill="rgb(237,186,51)" fg:x="1129" fg:w="4"/><text x="90.7147%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="90.4647%" y="277" width="0.3205%" height="15" fill="rgb(247,209,11)" fg:x="1129" fg:w="4"/><text x="90.7147%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="90.6250%" y="261" width="0.1603%" height="15" fill="rgb(223,109,27)" fg:x="1131" fg:w="2"/><text x="90.8750%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="90.6250%" y="245" width="0.1603%" height="15" fill="rgb(246,181,13)" fg:x="1131" fg:w="2"/><text x="90.8750%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="90.6250%" y="229" width="0.1603%" height="15" fill="rgb(234,57,44)" fg:x="1131" fg:w="2"/><text x="90.8750%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="90.6250%" y="213" width="0.1603%" height="15" fill="rgb(211,227,50)" fg:x="1131" fg:w="2"/><text x="90.8750%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.7051%" y="197" width="0.0801%" height="15" fill="rgb(254,57,34)" fg:x="1132" fg:w="1"/><text x="90.9551%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.7051%" y="181" width="0.0801%" height="15" fill="rgb(227,212,26)" fg:x="1132" fg:w="1"/><text x="90.9551%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.7853%" y="293" width="0.0801%" height="15" fill="rgb(244,169,44)" fg:x="1133" fg:w="1"/><text x="91.0353%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="90.7853%" y="357" width="0.1603%" height="15" fill="rgb(236,135,50)" fg:x="1133" fg:w="2"/><text x="91.0353%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="90.7853%" y="341" width="0.1603%" height="15" fill="rgb(241,89,30)" fg:x="1133" fg:w="2"/><text x="91.0353%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="90.7853%" y="325" width="0.1603%" height="15" fill="rgb(206,113,34)" fg:x="1133" fg:w="2"/><text x="91.0353%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="90.7853%" y="309" width="0.1603%" height="15" fill="rgb(218,104,52)" fg:x="1133" fg:w="2"/><text x="91.0353%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.8654%" y="293" width="0.0801%" height="15" fill="rgb(223,82,32)" fg:x="1134" fg:w="1"/><text x="91.1154%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.8654%" y="277" width="0.0801%" height="15" fill="rgb(249,219,30)" fg:x="1134" fg:w="1"/><text x="91.1154%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.8654%" y="261" width="0.0801%" height="15" fill="rgb(233,141,21)" fg:x="1134" fg:w="1"/><text x="91.1154%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.8654%" y="245" width="0.0801%" height="15" fill="rgb(252,87,44)" fg:x="1134" fg:w="1"/><text x="91.1154%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.8654%" y="229" width="0.0801%" height="15" fill="rgb(229,48,33)" fg:x="1134" fg:w="1"/><text x="91.1154%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="90.8654%" y="213" width="0.0801%" height="15" fill="rgb(229,23,22)" fg:x="1134" fg:w="1"/><text x="91.1154%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="90.8654%" y="197" width="0.0801%" height="15" fill="rgb(244,116,16)" fg:x="1134" fg:w="1"/><text x="91.1154%" y="207.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (7 samples, 0.56%)</title><rect x="90.4647%" y="437" width="0.5609%" height="15" fill="rgb(247,45,10)" fg:x="1129" fg:w="7"/><text x="90.7147%" y="447.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (7 samples, 0.56%)</title><rect x="90.4647%" y="421" width="0.5609%" height="15" fill="rgb(228,60,29)" fg:x="1129" fg:w="7"/><text x="90.7147%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="90.7853%" y="405" width="0.2404%" height="15" fill="rgb(205,129,15)" fg:x="1133" fg:w="3"/><text x="91.0353%" y="415.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="90.7853%" y="389" width="0.2404%" height="15" fill="rgb(206,229,4)" fg:x="1133" fg:w="3"/><text x="91.0353%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="90.7853%" y="373" width="0.2404%" height="15" fill="rgb(249,191,30)" fg:x="1133" fg:w="3"/><text x="91.0353%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.9455%" y="357" width="0.0801%" height="15" fill="rgb(250,84,54)" fg:x="1135" fg:w="1"/><text x="91.1955%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.9455%" y="341" width="0.0801%" height="15" fill="rgb(207,25,53)" fg:x="1135" fg:w="1"/><text x="91.1955%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.9455%" y="325" width="0.0801%" height="15" fill="rgb(235,40,8)" fg:x="1135" fg:w="1"/><text x="91.1955%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.9455%" y="309" width="0.0801%" height="15" fill="rgb(226,169,33)" fg:x="1135" fg:w="1"/><text x="91.1955%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.9455%" y="293" width="0.0801%" height="15" fill="rgb(238,110,8)" fg:x="1135" fg:w="1"/><text x="91.1955%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.0256%" y="325" width="0.0801%" height="15" fill="rgb(251,206,12)" fg:x="1136" fg:w="1"/><text x="91.2756%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.0256%" y="309" width="0.0801%" height="15" fill="rgb(248,171,18)" fg:x="1136" fg:w="1"/><text x="91.2756%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.0256%" y="293" width="0.0801%" height="15" fill="rgb(213,65,46)" fg:x="1136" fg:w="1"/><text x="91.2756%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.0256%" y="277" width="0.0801%" height="15" fill="rgb(211,154,15)" fg:x="1136" fg:w="1"/><text x="91.2756%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.0256%" y="261" width="0.0801%" height="15" fill="rgb(217,75,43)" fg:x="1136" fg:w="1"/><text x="91.2756%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.0256%" y="245" width="0.0801%" height="15" fill="rgb(230,32,33)" fg:x="1136" fg:w="1"/><text x="91.2756%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="91.0256%" y="229" width="0.0801%" height="15" fill="rgb(221,100,16)" fg:x="1136" fg:w="1"/><text x="91.2756%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="91.0256%" y="213" width="0.0801%" height="15" fill="rgb(212,129,47)" fg:x="1136" fg:w="1"/><text x="91.2756%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="91.0256%" y="389" width="0.1603%" height="15" fill="rgb(239,217,47)" fg:x="1136" fg:w="2"/><text x="91.2756%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="91.0256%" y="373" width="0.1603%" height="15" fill="rgb(230,84,24)" fg:x="1136" fg:w="2"/><text x="91.2756%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="91.0256%" y="357" width="0.1603%" height="15" fill="rgb(214,153,51)" fg:x="1136" fg:w="2"/><text x="91.2756%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="91.0256%" y="341" width="0.1603%" height="15" fill="rgb(231,6,35)" fg:x="1136" fg:w="2"/><text x="91.2756%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.1058%" y="325" width="0.0801%" height="15" fill="rgb(229,122,30)" fg:x="1137" fg:w="1"/><text x="91.3558%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.1058%" y="309" width="0.0801%" height="15" fill="rgb(234,71,10)" fg:x="1137" fg:w="1"/><text x="91.3558%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.1058%" y="293" width="0.0801%" height="15" fill="rgb(215,173,26)" fg:x="1137" fg:w="1"/><text x="91.3558%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.1058%" y="277" width="0.0801%" height="15" fill="rgb(248,118,52)" fg:x="1137" fg:w="1"/><text x="91.3558%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.1058%" y="261" width="0.0801%" height="15" fill="rgb(237,55,46)" fg:x="1137" fg:w="1"/><text x="91.3558%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.1058%" y="245" width="0.0801%" height="15" fill="rgb(243,214,43)" fg:x="1137" fg:w="1"/><text x="91.3558%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.1058%" y="229" width="0.0801%" height="15" fill="rgb(252,123,30)" fg:x="1137" fg:w="1"/><text x="91.3558%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.1058%" y="213" width="0.0801%" height="15" fill="rgb(215,73,39)" fg:x="1137" fg:w="1"/><text x="91.3558%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.1058%" y="197" width="0.0801%" height="15" fill="rgb(251,194,29)" fg:x="1137" fg:w="1"/><text x="91.3558%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.1058%" y="181" width="0.0801%" height="15" fill="rgb(224,58,52)" fg:x="1137" fg:w="1"/><text x="91.3558%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.1058%" y="165" width="0.0801%" height="15" fill="rgb(248,106,46)" fg:x="1137" fg:w="1"/><text x="91.3558%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.1058%" y="149" width="0.0801%" height="15" fill="rgb(223,80,29)" fg:x="1137" fg:w="1"/><text x="91.3558%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.1859%" y="293" width="0.0801%" height="15" fill="rgb(243,137,9)" fg:x="1138" fg:w="1"/><text x="91.4359%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="91.0256%" y="437" width="0.3205%" height="15" fill="rgb(235,121,28)" fg:x="1136" fg:w="4"/><text x="91.2756%" y="447.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="91.0256%" y="421" width="0.3205%" height="15" fill="rgb(219,121,41)" fg:x="1136" fg:w="4"/><text x="91.2756%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="91.0256%" y="405" width="0.3205%" height="15" fill="rgb(251,60,6)" fg:x="1136" fg:w="4"/><text x="91.2756%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="91.1859%" y="389" width="0.1603%" height="15" fill="rgb(208,12,30)" fg:x="1138" fg:w="2"/><text x="91.4359%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.1859%" y="373" width="0.1603%" height="15" fill="rgb(207,176,36)" fg:x="1138" fg:w="2"/><text x="91.4359%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="91.1859%" y="357" width="0.1603%" height="15" fill="rgb(211,188,29)" fg:x="1138" fg:w="2"/><text x="91.4359%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.1859%" y="341" width="0.1603%" height="15" fill="rgb(220,184,37)" fg:x="1138" fg:w="2"/><text x="91.4359%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="91.1859%" y="325" width="0.1603%" height="15" fill="rgb(239,87,37)" fg:x="1138" fg:w="2"/><text x="91.4359%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.1859%" y="309" width="0.1603%" height="15" fill="rgb(232,113,44)" fg:x="1138" fg:w="2"/><text x="91.4359%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.2660%" y="293" width="0.0801%" height="15" fill="rgb(246,25,39)" fg:x="1139" fg:w="1"/><text x="91.5160%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.2660%" y="277" width="0.0801%" height="15" fill="rgb(247,30,13)" fg:x="1139" fg:w="1"/><text x="91.5160%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.2660%" y="261" width="0.0801%" height="15" fill="rgb(230,176,35)" fg:x="1139" fg:w="1"/><text x="91.5160%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.2660%" y="245" width="0.0801%" height="15" fill="rgb(222,23,18)" fg:x="1139" fg:w="1"/><text x="91.5160%" y="255.50"></text></g><g><title>engine::internal::EntityMap::add_entity (5 samples, 0.40%)</title><rect x="91.3462%" y="437" width="0.4006%" height="15" fill="rgb(234,86,8)" fg:x="1140" fg:w="5"/><text x="91.5962%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.40%)</title><rect x="91.3462%" y="421" width="0.4006%" height="15" fill="rgb(206,218,47)" fg:x="1140" fg:w="5"/><text x="91.5962%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.40%)</title><rect x="91.3462%" y="405" width="0.4006%" height="15" fill="rgb(229,35,31)" fg:x="1140" fg:w="5"/><text x="91.5962%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.40%)</title><rect x="91.3462%" y="389" width="0.4006%" height="15" fill="rgb(242,81,7)" fg:x="1140" fg:w="5"/><text x="91.5962%" y="399.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="91.3462%" y="373" width="0.4006%" height="15" fill="rgb(231,11,35)" fg:x="1140" fg:w="5"/><text x="91.5962%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="91.7468%" y="357" width="0.0801%" height="15" fill="rgb(219,218,17)" fg:x="1145" fg:w="1"/><text x="91.9968%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="91.7468%" y="373" width="0.2404%" height="15" fill="rgb(221,83,32)" fg:x="1145" fg:w="3"/><text x="91.9968%" y="383.50"></text></g><g><title>__rdl_alloc (2 samples, 0.16%)</title><rect x="91.8269%" y="357" width="0.1603%" height="15" fill="rgb(233,49,54)" fg:x="1146" fg:w="2"/><text x="92.0769%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.16%)</title><rect x="91.8269%" y="341" width="0.1603%" height="15" fill="rgb(206,18,51)" fg:x="1146" fg:w="2"/><text x="92.0769%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.9872%" y="373" width="0.0801%" height="15" fill="rgb(249,193,15)" fg:x="1148" fg:w="1"/><text x="92.2372%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.0673%" y="341" width="0.0801%" height="15" fill="rgb(245,186,19)" fg:x="1149" fg:w="1"/><text x="92.3173%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.1474%" y="309" width="0.0801%" height="15" fill="rgb(230,4,24)" fg:x="1150" fg:w="1"/><text x="92.3974%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.2276%" y="277" width="0.0801%" height="15" fill="rgb(234,75,27)" fg:x="1151" fg:w="1"/><text x="92.4776%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.2276%" y="261" width="0.0801%" height="15" fill="rgb(244,187,35)" fg:x="1151" fg:w="1"/><text x="92.4776%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.3077%" y="277" width="0.0801%" height="15" fill="rgb(241,97,43)" fg:x="1152" fg:w="1"/><text x="92.5577%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.3077%" y="261" width="0.0801%" height="15" fill="rgb(236,94,2)" fg:x="1152" fg:w="1"/><text x="92.5577%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.3077%" y="245" width="0.0801%" height="15" fill="rgb(231,175,7)" fg:x="1152" fg:w="1"/><text x="92.5577%" y="255.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="92.3878%" y="261" width="0.0801%" height="15" fill="rgb(236,89,47)" fg:x="1153" fg:w="1"/><text x="92.6378%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.5481%" y="181" width="0.0801%" height="15" fill="rgb(213,191,37)" fg:x="1155" fg:w="1"/><text x="92.7981%" y="191.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.5481%" y="165" width="0.0801%" height="15" fill="rgb(252,0,34)" fg:x="1155" fg:w="1"/><text x="92.7981%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.5481%" y="149" width="0.0801%" height="15" fill="rgb(208,145,44)" fg:x="1155" fg:w="1"/><text x="92.7981%" y="159.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.96%)</title><rect x="91.7468%" y="421" width="0.9615%" height="15" fill="rgb(227,95,50)" fg:x="1145" fg:w="12"/><text x="91.9968%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12 samples, 0.96%)</title><rect x="91.7468%" y="405" width="0.9615%" height="15" fill="rgb(222,136,24)" fg:x="1145" fg:w="12"/><text x="91.9968%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="91.7468%" y="389" width="0.9615%" height="15" fill="rgb(218,105,10)" fg:x="1145" fg:w="12"/><text x="91.9968%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="92.0673%" y="373" width="0.6410%" height="15" fill="rgb(216,65,28)" fg:x="1149" fg:w="8"/><text x="92.3173%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="92.0673%" y="357" width="0.6410%" height="15" fill="rgb(229,6,28)" fg:x="1149" fg:w="8"/><text x="92.3173%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="92.1474%" y="341" width="0.5609%" height="15" fill="rgb(222,160,42)" fg:x="1150" fg:w="7"/><text x="92.3974%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="92.1474%" y="325" width="0.5609%" height="15" fill="rgb(235,83,49)" fg:x="1150" fg:w="7"/><text x="92.3974%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="92.2276%" y="309" width="0.4808%" height="15" fill="rgb(236,86,36)" fg:x="1151" fg:w="6"/><text x="92.4776%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="92.2276%" y="293" width="0.4808%" height="15" fill="rgb(236,19,41)" fg:x="1151" fg:w="6"/><text x="92.4776%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="92.3878%" y="277" width="0.3205%" height="15" fill="rgb(217,71,31)" fg:x="1153" fg:w="4"/><text x="92.6378%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="92.4679%" y="261" width="0.2404%" height="15" fill="rgb(236,209,25)" fg:x="1154" fg:w="3"/><text x="92.7179%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="92.4679%" y="245" width="0.2404%" height="15" fill="rgb(247,104,21)" fg:x="1154" fg:w="3"/><text x="92.7179%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="92.5481%" y="229" width="0.1603%" height="15" fill="rgb(243,80,38)" fg:x="1155" fg:w="2"/><text x="92.7981%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="92.5481%" y="213" width="0.1603%" height="15" fill="rgb(232,109,38)" fg:x="1155" fg:w="2"/><text x="92.7981%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="92.5481%" y="197" width="0.1603%" height="15" fill="rgb(212,177,53)" fg:x="1155" fg:w="2"/><text x="92.7981%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.6282%" y="181" width="0.0801%" height="15" fill="rgb(227,30,34)" fg:x="1156" fg:w="1"/><text x="92.8782%" y="191.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="92.7083%" y="341" width="0.0801%" height="15" fill="rgb(205,175,25)" fg:x="1157" fg:w="1"/><text x="92.9583%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="92.7083%" y="325" width="0.0801%" height="15" fill="rgb(249,39,54)" fg:x="1157" fg:w="1"/><text x="92.9583%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.7083%" y="357" width="0.1603%" height="15" fill="rgb(215,54,37)" fg:x="1157" fg:w="2"/><text x="92.9583%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.7885%" y="341" width="0.0801%" height="15" fill="rgb(205,60,46)" fg:x="1158" fg:w="1"/><text x="93.0385%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="92.8686%" y="341" width="0.3205%" height="15" fill="rgb(238,89,29)" fg:x="1159" fg:w="4"/><text x="93.1186%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="92.8686%" y="325" width="0.3205%" height="15" fill="rgb(212,48,10)" fg:x="1159" fg:w="4"/><text x="93.1186%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="92.9487%" y="309" width="0.2404%" height="15" fill="rgb(237,186,28)" fg:x="1160" fg:w="3"/><text x="93.1987%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="92.9487%" y="293" width="0.2404%" height="15" fill="rgb(237,204,4)" fg:x="1160" fg:w="3"/><text x="93.1987%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="92.9487%" y="277" width="0.2404%" height="15" fill="rgb(237,15,47)" fg:x="1160" fg:w="3"/><text x="93.1987%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="92.9487%" y="261" width="0.2404%" height="15" fill="rgb(244,110,25)" fg:x="1160" fg:w="3"/><text x="93.1987%" y="271.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="93.0288%" y="245" width="0.1603%" height="15" fill="rgb(241,12,16)" fg:x="1161" fg:w="2"/><text x="93.2788%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="93.0288%" y="229" width="0.1603%" height="15" fill="rgb(235,25,9)" fg:x="1161" fg:w="2"/><text x="93.2788%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.0288%" y="213" width="0.1603%" height="15" fill="rgb(245,159,19)" fg:x="1161" fg:w="2"/><text x="93.2788%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="93.1090%" y="197" width="0.0801%" height="15" fill="rgb(236,63,32)" fg:x="1162" fg:w="1"/><text x="93.3590%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="93.1891%" y="341" width="0.0801%" height="15" fill="rgb(235,32,52)" fg:x="1163" fg:w="1"/><text x="93.4391%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="93.1891%" y="325" width="0.0801%" height="15" fill="rgb(209,176,21)" fg:x="1163" fg:w="1"/><text x="93.4391%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="93.1891%" y="309" width="0.0801%" height="15" fill="rgb(205,90,42)" fg:x="1163" fg:w="1"/><text x="93.4391%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="93.1891%" y="293" width="0.0801%" height="15" fill="rgb(213,132,16)" fg:x="1163" fg:w="1"/><text x="93.4391%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="93.1891%" y="277" width="0.0801%" height="15" fill="rgb(232,11,22)" fg:x="1163" fg:w="1"/><text x="93.4391%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="93.1891%" y="261" width="0.0801%" height="15" fill="rgb(248,167,41)" fg:x="1163" fg:w="1"/><text x="93.4391%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="93.1891%" y="245" width="0.0801%" height="15" fill="rgb(209,127,6)" fg:x="1163" fg:w="1"/><text x="93.4391%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.3494%" y="213" width="0.0801%" height="15" fill="rgb(246,210,34)" fg:x="1165" fg:w="1"/><text x="93.5994%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.3494%" y="197" width="0.0801%" height="15" fill="rgb(238,165,13)" fg:x="1165" fg:w="1"/><text x="93.5994%" y="207.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (41 samples, 3.29%)</title><rect x="90.2244%" y="533" width="3.2853%" height="15" fill="rgb(233,98,15)" fg:x="1126" fg:w="41"/><text x="90.4744%" y="543.50">&lt;pl..</text></g><g><title>core::iter::adapters::try_process (41 samples, 3.29%)</title><rect x="90.2244%" y="517" width="3.2853%" height="15" fill="rgb(215,215,51)" fg:x="1126" fg:w="41"/><text x="90.4744%" y="527.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (41 samples, 3.29%)</title><rect x="90.2244%" y="501" width="3.2853%" height="15" fill="rgb(217,161,25)" fg:x="1126" fg:w="41"/><text x="90.4744%" y="511.50">&lt;al..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (41 samples, 3.29%)</title><rect x="90.2244%" y="485" width="3.2853%" height="15" fill="rgb(217,167,48)" fg:x="1126" fg:w="41"/><text x="90.4744%" y="495.50">&lt;en..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (41 samples, 3.29%)</title><rect x="90.2244%" y="469" width="3.2853%" height="15" fill="rgb(205,163,34)" fg:x="1126" fg:w="41"/><text x="90.4744%" y="479.50">&lt;en..</text></g><g><title>engine::internal::Entities::add_persisted (39 samples, 3.12%)</title><rect x="90.3846%" y="453" width="3.1250%" height="15" fill="rgb(241,197,31)" fg:x="1128" fg:w="39"/><text x="90.6346%" y="463.50">eng..</text></g><g><title>kernel::model::entity::Entity::from_str (22 samples, 1.76%)</title><rect x="91.7468%" y="437" width="1.7628%" height="15" fill="rgb(225,123,11)" fg:x="1145" fg:w="22"/><text x="91.9968%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.80%)</title><rect x="92.7083%" y="421" width="0.8013%" height="15" fill="rgb(217,4,20)" fg:x="1157" fg:w="10"/><text x="92.9583%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="92.7083%" y="405" width="0.8013%" height="15" fill="rgb(215,55,9)" fg:x="1157" fg:w="10"/><text x="92.9583%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (10 samples, 0.80%)</title><rect x="92.7083%" y="389" width="0.8013%" height="15" fill="rgb(218,165,5)" fg:x="1157" fg:w="10"/><text x="92.9583%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="92.7083%" y="373" width="0.8013%" height="15" fill="rgb(222,175,15)" fg:x="1157" fg:w="10"/><text x="92.9583%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.64%)</title><rect x="92.8686%" y="357" width="0.6410%" height="15" fill="rgb(223,85,34)" fg:x="1159" fg:w="8"/><text x="93.1186%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="93.2692%" y="341" width="0.2404%" height="15" fill="rgb(234,228,29)" fg:x="1164" fg:w="3"/><text x="93.5192%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="93.2692%" y="325" width="0.2404%" height="15" fill="rgb(239,7,28)" fg:x="1164" fg:w="3"/><text x="93.5192%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="93.2692%" y="309" width="0.2404%" height="15" fill="rgb(252,222,53)" fg:x="1164" fg:w="3"/><text x="93.5192%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="93.2692%" y="293" width="0.2404%" height="15" fill="rgb(232,146,44)" fg:x="1164" fg:w="3"/><text x="93.5192%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="93.2692%" y="277" width="0.2404%" height="15" fill="rgb(243,223,53)" fg:x="1164" fg:w="3"/><text x="93.5192%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="93.3494%" y="261" width="0.1603%" height="15" fill="rgb(219,128,25)" fg:x="1165" fg:w="2"/><text x="93.5994%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.3494%" y="245" width="0.1603%" height="15" fill="rgb(223,56,32)" fg:x="1165" fg:w="2"/><text x="93.5994%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.3494%" y="229" width="0.1603%" height="15" fill="rgb(237,41,3)" fg:x="1165" fg:w="2"/><text x="93.5994%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="93.4295%" y="213" width="0.0801%" height="15" fill="rgb(235,138,9)" fg:x="1166" fg:w="1"/><text x="93.6795%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.4295%" y="197" width="0.0801%" height="15" fill="rgb(214,131,10)" fg:x="1166" fg:w="1"/><text x="93.6795%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.4295%" y="181" width="0.0801%" height="15" fill="rgb(229,89,7)" fg:x="1166" fg:w="1"/><text x="93.6795%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="93.4295%" y="165" width="0.0801%" height="15" fill="rgb(240,24,42)" fg:x="1166" fg:w="1"/><text x="93.6795%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.4295%" y="149" width="0.0801%" height="15" fill="rgb(243,188,54)" fg:x="1166" fg:w="1"/><text x="93.6795%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.4295%" y="133" width="0.0801%" height="15" fill="rgb(246,92,22)" fg:x="1166" fg:w="1"/><text x="93.6795%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.4295%" y="117" width="0.0801%" height="15" fill="rgb(211,176,51)" fg:x="1166" fg:w="1"/><text x="93.6795%" y="127.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="93.6699%" y="501" width="0.0801%" height="15" fill="rgb(246,207,34)" fg:x="1169" fg:w="1"/><text x="93.9199%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.6699%" y="485" width="0.0801%" height="15" fill="rgb(239,95,2)" fg:x="1169" fg:w="1"/><text x="93.9199%" y="495.50"></text></g><g><title>plugins_core::tools::get_contained_keys (50 samples, 4.01%)</title><rect x="89.9038%" y="581" width="4.0064%" height="15" fill="rgb(211,124,25)" fg:x="1122" fg:w="50"/><text x="90.1538%" y="591.50">plug..</text></g><g><title>kernel::model::entry::Entry::scope (47 samples, 3.77%)</title><rect x="90.1442%" y="565" width="3.7660%" height="15" fill="rgb(231,221,19)" fg:x="1125" fg:w="47"/><text x="90.3942%" y="575.50">kern..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (47 samples, 3.77%)</title><rect x="90.1442%" y="549" width="3.7660%" height="15" fill="rgb(239,183,19)" fg:x="1125" fg:w="47"/><text x="90.3942%" y="559.50">kern..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="93.5096%" y="533" width="0.4006%" height="15" fill="rgb(221,130,29)" fg:x="1167" fg:w="5"/><text x="93.7596%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="93.5096%" y="517" width="0.4006%" height="15" fill="rgb(206,130,36)" fg:x="1167" fg:w="5"/><text x="93.7596%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="93.7500%" y="501" width="0.1603%" height="15" fill="rgb(215,70,19)" fg:x="1170" fg:w="2"/><text x="94.0000%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="93.7500%" y="485" width="0.1603%" height="15" fill="rgb(244,16,43)" fg:x="1170" fg:w="2"/><text x="94.0000%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="93.7500%" y="469" width="0.1603%" height="15" fill="rgb(222,115,32)" fg:x="1170" fg:w="2"/><text x="94.0000%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.7500%" y="453" width="0.1603%" height="15" fill="rgb(247,48,25)" fg:x="1170" fg:w="2"/><text x="94.0000%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.7500%" y="437" width="0.1603%" height="15" fill="rgb(226,180,51)" fg:x="1170" fg:w="2"/><text x="94.0000%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.8301%" y="421" width="0.0801%" height="15" fill="rgb(217,142,42)" fg:x="1171" fg:w="1"/><text x="94.0801%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (72 samples, 5.77%)</title><rect x="88.2212%" y="613" width="5.7692%" height="15" fill="rgb(220,178,3)" fg:x="1101" fg:w="72"/><text x="88.4712%" y="623.50">&lt;alloc:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (72 samples, 5.77%)</title><rect x="88.2212%" y="597" width="5.7692%" height="15" fill="rgb(217,221,4)" fg:x="1101" fg:w="72"/><text x="88.4712%" y="607.50">&lt;core::..</text></g><g><title>plugins_core::tools::get_occupant_keys (1 samples, 0.08%)</title><rect x="93.9103%" y="581" width="0.0801%" height="15" fill="rgb(237,63,43)" fg:x="1172" fg:w="1"/><text x="94.1603%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="93.9103%" y="565" width="0.0801%" height="15" fill="rgb(220,57,8)" fg:x="1172" fg:w="1"/><text x="94.1603%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="93.9103%" y="549" width="0.0801%" height="15" fill="rgb(254,186,27)" fg:x="1172" fg:w="1"/><text x="94.1603%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.9103%" y="533" width="0.0801%" height="15" fill="rgb(251,57,28)" fg:x="1172" fg:w="1"/><text x="94.1603%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.9103%" y="517" width="0.0801%" height="15" fill="rgb(215,228,0)" fg:x="1172" fg:w="1"/><text x="94.1603%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.4712%" y="485" width="0.0801%" height="15" fill="rgb(237,218,39)" fg:x="1179" fg:w="1"/><text x="94.7212%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.4712%" y="469" width="0.0801%" height="15" fill="rgb(207,2,54)" fg:x="1179" fg:w="1"/><text x="94.7212%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.4712%" y="453" width="0.0801%" height="15" fill="rgb(232,76,50)" fg:x="1179" fg:w="1"/><text x="94.7212%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.4712%" y="437" width="0.0801%" height="15" fill="rgb(211,85,31)" fg:x="1179" fg:w="1"/><text x="94.7212%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.4712%" y="421" width="0.0801%" height="15" fill="rgb(223,210,27)" fg:x="1179" fg:w="1"/><text x="94.7212%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.4712%" y="405" width="0.0801%" height="15" fill="rgb(254,36,8)" fg:x="1179" fg:w="1"/><text x="94.7212%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.4712%" y="389" width="0.0801%" height="15" fill="rgb(213,4,25)" fg:x="1179" fg:w="1"/><text x="94.7212%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="94.4712%" y="565" width="0.1603%" height="15" fill="rgb(224,2,39)" fg:x="1179" fg:w="2"/><text x="94.7212%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="94.4712%" y="549" width="0.1603%" height="15" fill="rgb(208,8,39)" fg:x="1179" fg:w="2"/><text x="94.7212%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="94.4712%" y="533" width="0.1603%" height="15" fill="rgb(216,226,3)" fg:x="1179" fg:w="2"/><text x="94.7212%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="94.4712%" y="517" width="0.1603%" height="15" fill="rgb(249,139,31)" fg:x="1179" fg:w="2"/><text x="94.7212%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="94.4712%" y="501" width="0.1603%" height="15" fill="rgb(242,170,35)" fg:x="1179" fg:w="2"/><text x="94.7212%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="94.5513%" y="485" width="0.0801%" height="15" fill="rgb(238,14,9)" fg:x="1180" fg:w="1"/><text x="94.8013%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="94.5513%" y="469" width="0.0801%" height="15" fill="rgb(251,81,46)" fg:x="1180" fg:w="1"/><text x="94.8013%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="94.6314%" y="549" width="0.0801%" height="15" fill="rgb(230,23,4)" fg:x="1181" fg:w="1"/><text x="94.8814%" y="559.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="94.6314%" y="533" width="0.0801%" height="15" fill="rgb(211,85,25)" fg:x="1181" fg:w="1"/><text x="94.8814%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (3 samples, 0.24%)</title><rect x="94.7115%" y="405" width="0.2404%" height="15" fill="rgb(252,23,31)" fg:x="1182" fg:w="3"/><text x="94.9615%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="94.7115%" y="389" width="0.2404%" height="15" fill="rgb(234,163,38)" fg:x="1182" fg:w="3"/><text x="94.9615%" y="399.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="94.7115%" y="373" width="0.2404%" height="15" fill="rgb(210,190,50)" fg:x="1182" fg:w="3"/><text x="94.9615%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="94.7115%" y="357" width="0.2404%" height="15" fill="rgb(228,158,3)" fg:x="1182" fg:w="3"/><text x="94.9615%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="94.7115%" y="341" width="0.2404%" height="15" fill="rgb(216,130,0)" fg:x="1182" fg:w="3"/><text x="94.9615%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="94.7115%" y="325" width="0.2404%" height="15" fill="rgb(224,184,10)" fg:x="1182" fg:w="3"/><text x="94.9615%" y="335.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.24%)</title><rect x="94.7115%" y="309" width="0.2404%" height="15" fill="rgb(214,202,18)" fg:x="1182" fg:w="3"/><text x="94.9615%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.24%)</title><rect x="94.7115%" y="293" width="0.2404%" height="15" fill="rgb(213,229,54)" fg:x="1182" fg:w="3"/><text x="94.9615%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.24%)</title><rect x="94.7115%" y="277" width="0.2404%" height="15" fill="rgb(246,120,0)" fg:x="1182" fg:w="3"/><text x="94.9615%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.24%)</title><rect x="94.7115%" y="261" width="0.2404%" height="15" fill="rgb(237,6,15)" fg:x="1182" fg:w="3"/><text x="94.9615%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.24%)</title><rect x="94.7115%" y="245" width="0.2404%" height="15" fill="rgb(252,156,15)" fg:x="1182" fg:w="3"/><text x="94.9615%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.24%)</title><rect x="94.7115%" y="229" width="0.2404%" height="15" fill="rgb(249,78,18)" fg:x="1182" fg:w="3"/><text x="94.9615%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="94.7115%" y="213" width="0.2404%" height="15" fill="rgb(230,223,44)" fg:x="1182" fg:w="3"/><text x="94.9615%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.24%)</title><rect x="94.7115%" y="197" width="0.2404%" height="15" fill="rgb(230,222,32)" fg:x="1182" fg:w="3"/><text x="94.9615%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="94.7115%" y="181" width="0.2404%" height="15" fill="rgb(247,54,6)" fg:x="1182" fg:w="3"/><text x="94.9615%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="94.7917%" y="165" width="0.1603%" height="15" fill="rgb(247,115,45)" fg:x="1183" fg:w="2"/><text x="95.0417%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="94.7917%" y="149" width="0.1603%" height="15" fill="rgb(213,203,37)" fg:x="1183" fg:w="2"/><text x="95.0417%" y="159.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="94.7917%" y="133" width="0.1603%" height="15" fill="rgb(248,188,18)" fg:x="1183" fg:w="2"/><text x="95.0417%" y="143.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="94.7917%" y="117" width="0.1603%" height="15" fill="rgb(206,80,8)" fg:x="1183" fg:w="2"/><text x="95.0417%" y="127.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (5 samples, 0.40%)</title><rect x="94.6314%" y="565" width="0.4006%" height="15" fill="rgb(245,217,31)" fg:x="1181" fg:w="5"/><text x="94.8814%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="94.7115%" y="549" width="0.3205%" height="15" fill="rgb(220,193,15)" fg:x="1182" fg:w="4"/><text x="94.9615%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.32%)</title><rect x="94.7115%" y="533" width="0.3205%" height="15" fill="rgb(226,7,19)" fg:x="1182" fg:w="4"/><text x="94.9615%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.32%)</title><rect x="94.7115%" y="517" width="0.3205%" height="15" fill="rgb(222,145,31)" fg:x="1182" fg:w="4"/><text x="94.9615%" y="527.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="94.7115%" y="501" width="0.3205%" height="15" fill="rgb(241,193,36)" fg:x="1182" fg:w="4"/><text x="94.9615%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="94.7115%" y="485" width="0.3205%" height="15" fill="rgb(225,123,33)" fg:x="1182" fg:w="4"/><text x="94.9615%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="94.7115%" y="469" width="0.3205%" height="15" fill="rgb(246,136,38)" fg:x="1182" fg:w="4"/><text x="94.9615%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.32%)</title><rect x="94.7115%" y="453" width="0.3205%" height="15" fill="rgb(243,56,24)" fg:x="1182" fg:w="4"/><text x="94.9615%" y="463.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="94.7115%" y="437" width="0.3205%" height="15" fill="rgb(215,147,2)" fg:x="1182" fg:w="4"/><text x="94.9615%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="94.7115%" y="421" width="0.3205%" height="15" fill="rgb(209,155,27)" fg:x="1182" fg:w="4"/><text x="94.9615%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="94.9519%" y="405" width="0.0801%" height="15" fill="rgb(222,177,11)" fg:x="1185" fg:w="1"/><text x="95.2019%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="94.9519%" y="389" width="0.0801%" height="15" fill="rgb(212,227,15)" fg:x="1185" fg:w="1"/><text x="95.2019%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="94.9519%" y="373" width="0.0801%" height="15" fill="rgb(214,138,20)" fg:x="1185" fg:w="1"/><text x="95.2019%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="94.9519%" y="357" width="0.0801%" height="15" fill="rgb(221,170,31)" fg:x="1185" fg:w="1"/><text x="95.2019%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="94.9519%" y="341" width="0.0801%" height="15" fill="rgb(253,207,5)" fg:x="1185" fg:w="1"/><text x="95.2019%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="94.9519%" y="325" width="0.0801%" height="15" fill="rgb(212,64,37)" fg:x="1185" fg:w="1"/><text x="95.2019%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="94.9519%" y="309" width="0.0801%" height="15" fill="rgb(208,113,51)" fg:x="1185" fg:w="1"/><text x="95.2019%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="94.9519%" y="293" width="0.0801%" height="15" fill="rgb(237,15,5)" fg:x="1185" fg:w="1"/><text x="95.2019%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="94.9519%" y="277" width="0.0801%" height="15" fill="rgb(238,33,18)" fg:x="1185" fg:w="1"/><text x="95.2019%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="94.9519%" y="261" width="0.0801%" height="15" fill="rgb(253,206,50)" fg:x="1185" fg:w="1"/><text x="95.2019%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="94.9519%" y="245" width="0.0801%" height="15" fill="rgb(242,158,43)" fg:x="1185" fg:w="1"/><text x="95.2019%" y="255.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.08%)</title><rect x="94.9519%" y="229" width="0.0801%" height="15" fill="rgb(213,125,27)" fg:x="1185" fg:w="1"/><text x="95.2019%" y="239.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (3 samples, 0.24%)</title><rect x="95.7532%" y="213" width="0.2404%" height="15" fill="rgb(233,161,31)" fg:x="1195" fg:w="3"/><text x="96.0032%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="95.7532%" y="277" width="0.3205%" height="15" fill="rgb(218,135,6)" fg:x="1195" fg:w="4"/><text x="96.0032%" y="287.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (4 samples, 0.32%)</title><rect x="95.7532%" y="261" width="0.3205%" height="15" fill="rgb(222,73,53)" fg:x="1195" fg:w="4"/><text x="96.0032%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="95.7532%" y="245" width="0.3205%" height="15" fill="rgb(229,66,53)" fg:x="1195" fg:w="4"/><text x="96.0032%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="95.7532%" y="229" width="0.3205%" height="15" fill="rgb(208,128,19)" fg:x="1195" fg:w="4"/><text x="96.0032%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.9936%" y="213" width="0.0801%" height="15" fill="rgb(235,70,27)" fg:x="1198" fg:w="1"/><text x="96.2436%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.9936%" y="197" width="0.0801%" height="15" fill="rgb(241,130,30)" fg:x="1198" fg:w="1"/><text x="96.2436%" y="207.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (5 samples, 0.40%)</title><rect x="95.7532%" y="309" width="0.4006%" height="15" fill="rgb(222,57,48)" fg:x="1195" fg:w="5"/><text x="96.0032%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="95.7532%" y="293" width="0.4006%" height="15" fill="rgb(225,204,29)" fg:x="1195" fg:w="5"/><text x="96.0032%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="96.0737%" y="277" width="0.0801%" height="15" fill="rgb(240,196,35)" fg:x="1199" fg:w="1"/><text x="96.3237%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.48%)</title><rect x="95.7532%" y="325" width="0.4808%" height="15" fill="rgb(215,150,16)" fg:x="1195" fg:w="6"/><text x="96.0032%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.1538%" y="309" width="0.0801%" height="15" fill="rgb(209,170,13)" fg:x="1200" fg:w="1"/><text x="96.4038%" y="319.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (8 samples, 0.64%)</title><rect x="95.7532%" y="357" width="0.6410%" height="15" fill="rgb(235,75,31)" fg:x="1195" fg:w="8"/><text x="96.0032%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="95.7532%" y="341" width="0.6410%" height="15" fill="rgb(252,1,47)" fg:x="1195" fg:w="8"/><text x="96.0032%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="96.2340%" y="325" width="0.1603%" height="15" fill="rgb(241,2,36)" fg:x="1201" fg:w="2"/><text x="96.4840%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.3141%" y="309" width="0.0801%" height="15" fill="rgb(236,191,4)" fg:x="1202" fg:w="1"/><text x="96.5641%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="96.3942%" y="341" width="0.1603%" height="15" fill="rgb(212,65,35)" fg:x="1203" fg:w="2"/><text x="96.6442%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="96.4744%" y="325" width="0.0801%" height="15" fill="rgb(209,49,33)" fg:x="1204" fg:w="1"/><text x="96.7244%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (11 samples, 0.88%)</title><rect x="95.7532%" y="389" width="0.8814%" height="15" fill="rgb(208,36,46)" fg:x="1195" fg:w="11"/><text x="96.0032%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.88%)</title><rect x="95.7532%" y="373" width="0.8814%" height="15" fill="rgb(210,125,2)" fg:x="1195" fg:w="11"/><text x="96.0032%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="96.3942%" y="357" width="0.2404%" height="15" fill="rgb(225,62,6)" fg:x="1203" fg:w="3"/><text x="96.6442%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.5545%" y="341" width="0.0801%" height="15" fill="rgb(210,54,27)" fg:x="1205" fg:w="1"/><text x="96.8045%" y="351.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (13 samples, 1.04%)</title><rect x="95.6731%" y="405" width="1.0417%" height="15" fill="rgb(249,189,52)" fg:x="1194" fg:w="13"/><text x="95.9231%" y="415.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="96.6346%" y="389" width="0.0801%" height="15" fill="rgb(225,134,40)" fg:x="1206" fg:w="1"/><text x="96.8846%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="96.6346%" y="373" width="0.0801%" height="15" fill="rgb(206,13,37)" fg:x="1206" fg:w="1"/><text x="96.8846%" y="383.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="96.6346%" y="357" width="0.0801%" height="15" fill="rgb(232,114,28)" fg:x="1206" fg:w="1"/><text x="96.8846%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="96.6346%" y="341" width="0.0801%" height="15" fill="rgb(253,215,8)" fg:x="1206" fg:w="1"/><text x="96.8846%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="96.6346%" y="325" width="0.0801%" height="15" fill="rgb(254,64,19)" fg:x="1206" fg:w="1"/><text x="96.8846%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.6346%" y="309" width="0.0801%" height="15" fill="rgb(242,18,46)" fg:x="1206" fg:w="1"/><text x="96.8846%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="96.6346%" y="293" width="0.0801%" height="15" fill="rgb(239,192,30)" fg:x="1206" fg:w="1"/><text x="96.8846%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="96.6346%" y="277" width="0.0801%" height="15" fill="rgb(232,73,14)" fg:x="1206" fg:w="1"/><text x="96.8846%" y="287.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (15 samples, 1.20%)</title><rect x="95.5929%" y="453" width="1.2019%" height="15" fill="rgb(225,51,9)" fg:x="1193" fg:w="15"/><text x="95.8429%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (15 samples, 1.20%)</title><rect x="95.5929%" y="437" width="1.2019%" height="15" fill="rgb(242,217,54)" fg:x="1193" fg:w="15"/><text x="95.8429%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 1.12%)</title><rect x="95.6731%" y="421" width="1.1218%" height="15" fill="rgb(216,93,3)" fg:x="1194" fg:w="14"/><text x="95.9231%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.7147%" y="405" width="0.0801%" height="15" fill="rgb(230,119,33)" fg:x="1207" fg:w="1"/><text x="96.9647%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 1.76%)</title><rect x="95.1923%" y="469" width="1.7628%" height="15" fill="rgb(238,170,27)" fg:x="1188" fg:w="22"/><text x="95.4423%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="96.7949%" y="453" width="0.1603%" height="15" fill="rgb(229,8,2)" fg:x="1208" fg:w="2"/><text x="97.0449%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="96.7949%" y="437" width="0.1603%" height="15" fill="rgb(205,214,42)" fg:x="1208" fg:w="2"/><text x="97.0449%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="96.8750%" y="421" width="0.0801%" height="15" fill="rgb(245,113,1)" fg:x="1209" fg:w="1"/><text x="97.1250%" y="431.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (25 samples, 2.00%)</title><rect x="95.1923%" y="501" width="2.0032%" height="15" fill="rgb(252,50,2)" fg:x="1188" fg:w="25"/><text x="95.4423%" y="511.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (25 samples, 2.00%)</title><rect x="95.1923%" y="485" width="2.0032%" height="15" fill="rgb(225,122,24)" fg:x="1188" fg:w="25"/><text x="95.4423%" y="495.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="96.9551%" y="469" width="0.2404%" height="15" fill="rgb(234,129,31)" fg:x="1210" fg:w="3"/><text x="97.2051%" y="479.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="96.9551%" y="453" width="0.2404%" height="15" fill="rgb(219,177,4)" fg:x="1210" fg:w="3"/><text x="97.2051%" y="463.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (28 samples, 2.24%)</title><rect x="95.0321%" y="549" width="2.2436%" height="15" fill="rgb(225,142,27)" fg:x="1186" fg:w="28"/><text x="95.2821%" y="559.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (28 samples, 2.24%)</title><rect x="95.0321%" y="533" width="2.2436%" height="15" fill="rgb(205,107,51)" fg:x="1186" fg:w="28"/><text x="95.2821%" y="543.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27 samples, 2.16%)</title><rect x="95.1122%" y="517" width="2.1635%" height="15" fill="rgb(236,223,15)" fg:x="1187" fg:w="27"/><text x="95.3622%" y="527.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.1955%" y="501" width="0.0801%" height="15" fill="rgb(235,133,11)" fg:x="1213" fg:w="1"/><text x="97.4455%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.1955%" y="485" width="0.0801%" height="15" fill="rgb(247,172,13)" fg:x="1213" fg:w="1"/><text x="97.4455%" y="495.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="97.1955%" y="469" width="0.0801%" height="15" fill="rgb(233,191,41)" fg:x="1213" fg:w="1"/><text x="97.4455%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="97.3558%" y="501" width="0.4006%" height="15" fill="rgb(250,65,16)" fg:x="1215" fg:w="5"/><text x="97.6058%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.6763%" y="485" width="0.0801%" height="15" fill="rgb(206,10,27)" fg:x="1219" fg:w="1"/><text x="97.9263%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="97.7564%" y="501" width="0.1603%" height="15" fill="rgb(212,96,22)" fg:x="1220" fg:w="2"/><text x="98.0064%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="97.7564%" y="485" width="0.1603%" height="15" fill="rgb(206,50,0)" fg:x="1220" fg:w="2"/><text x="98.0064%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.7564%" y="469" width="0.1603%" height="15" fill="rgb(249,105,52)" fg:x="1220" fg:w="2"/><text x="98.0064%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.8365%" y="453" width="0.0801%" height="15" fill="rgb(216,93,51)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="97.8365%" y="437" width="0.0801%" height="15" fill="rgb(217,172,13)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="97.8365%" y="421" width="0.0801%" height="15" fill="rgb(235,199,38)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.9968%" y="485" width="0.1603%" height="15" fill="rgb(221,97,33)" fg:x="1223" fg:w="2"/><text x="98.2468%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.9968%" y="469" width="0.1603%" height="15" fill="rgb(205,156,50)" fg:x="1223" fg:w="2"/><text x="98.2468%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.0769%" y="453" width="0.0801%" height="15" fill="rgb(215,142,19)" fg:x="1224" fg:w="1"/><text x="98.3269%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="98.1571%" y="469" width="0.0801%" height="15" fill="rgb(232,170,7)" fg:x="1225" fg:w="1"/><text x="98.4071%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.2372%" y="453" width="0.1603%" height="15" fill="rgb(223,50,17)" fg:x="1226" fg:w="2"/><text x="98.4872%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.2372%" y="437" width="0.1603%" height="15" fill="rgb(230,103,46)" fg:x="1226" fg:w="2"/><text x="98.4872%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="98.2372%" y="421" width="0.1603%" height="15" fill="rgb(254,30,34)" fg:x="1226" fg:w="2"/><text x="98.4872%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="98.3974%" y="437" width="0.0801%" height="15" fill="rgb(235,198,1)" fg:x="1228" fg:w="1"/><text x="98.6474%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.3974%" y="421" width="0.0801%" height="15" fill="rgb(217,105,47)" fg:x="1228" fg:w="1"/><text x="98.6474%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="98.3974%" y="453" width="0.1603%" height="15" fill="rgb(231,18,12)" fg:x="1228" fg:w="2"/><text x="98.6474%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="98.4776%" y="437" width="0.0801%" height="15" fill="rgb(218,196,1)" fg:x="1229" fg:w="1"/><text x="98.7276%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="98.4776%" y="421" width="0.0801%" height="15" fill="rgb(210,32,3)" fg:x="1229" fg:w="1"/><text x="98.7276%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.6378%" y="389" width="0.0801%" height="15" fill="rgb(227,178,30)" fg:x="1231" fg:w="1"/><text x="98.8878%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.6378%" y="373" width="0.0801%" height="15" fill="rgb(231,140,27)" fg:x="1231" fg:w="1"/><text x="98.8878%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.7981%" y="357" width="0.1603%" height="15" fill="rgb(206,66,35)" fg:x="1233" fg:w="2"/><text x="99.0481%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.8782%" y="341" width="0.0801%" height="15" fill="rgb(212,34,2)" fg:x="1234" fg:w="1"/><text x="99.1282%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="98.9583%" y="341" width="0.0801%" height="15" fill="rgb(207,201,33)" fg:x="1235" fg:w="1"/><text x="99.2083%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="98.6378%" y="405" width="0.4808%" height="15" fill="rgb(221,135,32)" fg:x="1231" fg:w="6"/><text x="98.8878%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="98.7179%" y="389" width="0.4006%" height="15" fill="rgb(206,77,31)" fg:x="1232" fg:w="5"/><text x="98.9679%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="98.7981%" y="373" width="0.3205%" height="15" fill="rgb(252,198,50)" fg:x="1233" fg:w="4"/><text x="99.0481%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="98.9583%" y="357" width="0.1603%" height="15" fill="rgb(206,79,27)" fg:x="1235" fg:w="2"/><text x="99.2083%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.0385%" y="341" width="0.0801%" height="15" fill="rgb(228,108,9)" fg:x="1236" fg:w="1"/><text x="99.2885%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="98.5577%" y="437" width="0.6410%" height="15" fill="rgb(213,9,39)" fg:x="1230" fg:w="8"/><text x="98.8077%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="98.6378%" y="421" width="0.5609%" height="15" fill="rgb(252,51,13)" fg:x="1231" fg:w="7"/><text x="98.8878%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.1186%" y="405" width="0.0801%" height="15" fill="rgb(218,202,39)" fg:x="1237" fg:w="1"/><text x="99.3686%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.04%)</title><rect x="98.2372%" y="469" width="1.0417%" height="15" fill="rgb(214,122,21)" fg:x="1226" fg:w="13"/><text x="98.4872%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="98.5577%" y="453" width="0.7212%" height="15" fill="rgb(217,205,48)" fg:x="1230" fg:w="9"/><text x="98.8077%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.1987%" y="437" width="0.0801%" height="15" fill="rgb(230,216,13)" fg:x="1238" fg:w="1"/><text x="99.4487%" y="447.50"></text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (162 samples, 12.98%)</title><rect x="86.3782%" y="693" width="12.9808%" height="15" fill="rgb(249,118,4)" fg:x="1078" fg:w="162"/><text x="86.6282%" y="703.50">kernel::plugins::Ses..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (162 samples, 12.98%)</title><rect x="86.3782%" y="677" width="12.9808%" height="15" fill="rgb(212,207,40)" fg:x="1078" fg:w="162"/><text x="86.6282%" y="687.50">&lt;plugins_dynlib::Dyn..</text></g><g><title>plugins_rpc::querying::have_surroundings (145 samples, 11.62%)</title><rect x="87.7404%" y="661" width="11.6186%" height="15" fill="rgb(217,156,26)" fg:x="1095" fg:w="145"/><text x="87.9904%" y="671.50">plugins_rpc::quer..</text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (145 samples, 11.62%)</title><rect x="87.7404%" y="645" width="11.6186%" height="15" fill="rgb(226,86,34)" fg:x="1095" fg:w="145"/><text x="87.9904%" y="655.50">&lt;plugins_rpc::ses..</text></g><g><title>core::iter::adapters::try_process (140 samples, 11.22%)</title><rect x="88.1410%" y="629" width="11.2179%" height="15" fill="rgb(217,111,30)" fg:x="1100" fg:w="140"/><text x="88.3910%" y="639.50">core::iter::adapt..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (67 samples, 5.37%)</title><rect x="93.9904%" y="613" width="5.3686%" height="15" fill="rgb(228,64,18)" fg:x="1173" fg:w="67"/><text x="94.2404%" y="623.50">alloc::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (65 samples, 5.21%)</title><rect x="94.1506%" y="597" width="5.2083%" height="15" fill="rgb(254,217,48)" fg:x="1175" fg:w="65"/><text x="94.4006%" y="607.50">&lt;core:..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (64 samples, 5.13%)</title><rect x="94.2308%" y="581" width="5.1282%" height="15" fill="rgb(226,156,48)" fg:x="1176" fg:w="64"/><text x="94.4808%" y="591.50">plugin..</text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (54 samples, 4.33%)</title><rect x="95.0321%" y="565" width="4.3269%" height="15" fill="rgb(236,168,20)" fg:x="1186" fg:w="54"/><text x="95.2821%" y="575.50">&lt;rpc_..</text></g><g><title>kernel::model::EntityPtr::to_json_value (26 samples, 2.08%)</title><rect x="97.2756%" y="549" width="2.0833%" height="15" fill="rgb(239,210,33)" fg:x="1214" fg:w="26"/><text x="97.5256%" y="559.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (26 samples, 2.08%)</title><rect x="97.2756%" y="533" width="2.0833%" height="15" fill="rgb(242,85,17)" fg:x="1214" fg:w="26"/><text x="97.5256%" y="543.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (26 samples, 2.08%)</title><rect x="97.2756%" y="517" width="2.0833%" height="15" fill="rgb(221,196,15)" fg:x="1214" fg:w="26"/><text x="97.5256%" y="527.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (18 samples, 1.44%)</title><rect x="97.9167%" y="501" width="1.4423%" height="15" fill="rgb(249,76,21)" fg:x="1222" fg:w="18"/><text x="98.1667%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="98.1571%" y="485" width="1.2019%" height="15" fill="rgb(243,67,29)" fg:x="1225" fg:w="15"/><text x="98.4071%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.2788%" y="469" width="0.0801%" height="15" fill="rgb(240,159,2)" fg:x="1239" fg:w="1"/><text x="99.5288%" y="479.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (197 samples, 15.79%)</title><rect x="83.6538%" y="709" width="15.7853%" height="15" fill="rgb(244,64,3)" fg:x="1044" fg:w="197"/><text x="83.9038%" y="719.50">&lt;engine::perform::Standa..</text></g><g><title>kernel::plugins::mw::apply_middleware (1 samples, 0.08%)</title><rect x="99.3590%" y="693" width="0.0801%" height="15" fill="rgb(220,86,40)" fg:x="1240" fg:w="1"/><text x="99.6090%" y="703.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="99.3590%" y="677" width="0.0801%" height="15" fill="rgb(222,194,51)" fg:x="1240" fg:w="1"/><text x="99.6090%" y="687.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="99.3590%" y="661" width="0.0801%" height="15" fill="rgb(207,154,19)" fg:x="1240" fg:w="1"/><text x="99.6090%" y="671.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="99.3590%" y="645" width="0.0801%" height="15" fill="rgb(206,178,36)" fg:x="1240" fg:w="1"/><text x="99.6090%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="99.3590%" y="629" width="0.0801%" height="15" fill="rgb(218,8,24)" fg:x="1240" fg:w="1"/><text x="99.6090%" y="639.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="99.3590%" y="613" width="0.0801%" height="15" fill="rgb(226,83,41)" fg:x="1240" fg:w="1"/><text x="99.6090%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="99.3590%" y="597" width="0.0801%" height="15" fill="rgb(224,23,22)" fg:x="1240" fg:w="1"/><text x="99.6090%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="99.3590%" y="581" width="0.0801%" height="15" fill="rgb(218,198,45)" fg:x="1240" fg:w="1"/><text x="99.6090%" y="591.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (1 samples, 0.08%)</title><rect x="99.3590%" y="565" width="0.0801%" height="15" fill="rgb(249,147,41)" fg:x="1240" fg:w="1"/><text x="99.6090%" y="575.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="99.3590%" y="549" width="0.0801%" height="15" fill="rgb(244,224,13)" fg:x="1240" fg:w="1"/><text x="99.6090%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.3590%" y="533" width="0.0801%" height="15" fill="rgb(225,97,27)" fg:x="1240" fg:w="1"/><text x="99.6090%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.3590%" y="517" width="0.0801%" height="15" fill="rgb(254,64,0)" fg:x="1240" fg:w="1"/><text x="99.6090%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="99.4391%" y="645" width="0.0801%" height="15" fill="rgb(208,130,43)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="99.4391%" y="629" width="0.0801%" height="15" fill="rgb(247,91,25)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="99.4391%" y="613" width="0.0801%" height="15" fill="rgb(215,218,42)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="99.4391%" y="597" width="0.0801%" height="15" fill="rgb(233,9,24)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.4391%" y="581" width="0.0801%" height="15" fill="rgb(252,105,38)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.4391%" y="565" width="0.0801%" height="15" fill="rgb(225,40,49)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4391%" y="549" width="0.0801%" height="15" fill="rgb(232,196,19)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.4391%" y="533" width="0.0801%" height="15" fill="rgb(207,35,15)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4391%" y="517" width="0.0801%" height="15" fill="rgb(238,68,36)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.4391%" y="501" width="0.0801%" height="15" fill="rgb(205,158,20)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4391%" y="485" width="0.0801%" height="15" fill="rgb(232,32,22)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.4391%" y="469" width="0.0801%" height="15" fill="rgb(210,169,6)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4391%" y="453" width="0.0801%" height="15" fill="rgb(229,28,12)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.5192%" y="549" width="0.0801%" height="15" fill="rgb(229,78,10)" fg:x="1242" fg:w="1"/><text x="99.7692%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5192%" y="533" width="0.0801%" height="15" fill="rgb(223,139,54)" fg:x="1242" fg:w="1"/><text x="99.7692%" y="543.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.5192%" y="517" width="0.0801%" height="15" fill="rgb(207,110,4)" fg:x="1242" fg:w="1"/><text x="99.7692%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.5192%" y="501" width="0.0801%" height="15" fill="rgb(248,30,41)" fg:x="1242" fg:w="1"/><text x="99.7692%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.5192%" y="485" width="0.0801%" height="15" fill="rgb(235,54,25)" fg:x="1242" fg:w="1"/><text x="99.7692%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5192%" y="469" width="0.0801%" height="15" fill="rgb(213,107,41)" fg:x="1242" fg:w="1"/><text x="99.7692%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.5192%" y="453" width="0.0801%" height="15" fill="rgb(237,102,9)" fg:x="1242" fg:w="1"/><text x="99.7692%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.5192%" y="437" width="0.0801%" height="15" fill="rgb(252,137,49)" fg:x="1242" fg:w="1"/><text x="99.7692%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="99.5192%" y="421" width="0.0801%" height="15" fill="rgb(233,202,33)" fg:x="1242" fg:w="1"/><text x="99.7692%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="99.4391%" y="693" width="0.2404%" height="15" fill="rgb(223,14,51)" fg:x="1241" fg:w="3"/><text x="99.6891%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (3 samples, 0.24%)</title><rect x="99.4391%" y="677" width="0.2404%" height="15" fill="rgb(248,70,23)" fg:x="1241" fg:w="3"/><text x="99.6891%" y="687.50"></text></g><g><title>engine::internal::Entities::add_persisted (3 samples, 0.24%)</title><rect x="99.4391%" y="661" width="0.2404%" height="15" fill="rgb(209,207,47)" fg:x="1241" fg:w="3"/><text x="99.6891%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::from_str (2 samples, 0.16%)</title><rect x="99.5192%" y="645" width="0.1603%" height="15" fill="rgb(245,124,2)" fg:x="1242" fg:w="2"/><text x="99.7692%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.5192%" y="629" width="0.1603%" height="15" fill="rgb(249,208,11)" fg:x="1242" fg:w="2"/><text x="99.7692%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.5192%" y="613" width="0.1603%" height="15" fill="rgb(247,112,7)" fg:x="1242" fg:w="2"/><text x="99.7692%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="99.5192%" y="597" width="0.1603%" height="15" fill="rgb(209,192,31)" fg:x="1242" fg:w="2"/><text x="99.7692%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.5192%" y="581" width="0.1603%" height="15" fill="rgb(236,55,19)" fg:x="1242" fg:w="2"/><text x="99.7692%" y="591.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.5192%" y="565" width="0.1603%" height="15" fill="rgb(252,89,41)" fg:x="1242" fg:w="2"/><text x="99.7692%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.5994%" y="549" width="0.0801%" height="15" fill="rgb(220,172,14)" fg:x="1243" fg:w="1"/><text x="99.8494%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.5994%" y="533" width="0.0801%" height="15" fill="rgb(252,65,2)" fg:x="1243" fg:w="1"/><text x="99.8494%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.5994%" y="517" width="0.0801%" height="15" fill="rgb(250,20,8)" fg:x="1243" fg:w="1"/><text x="99.8494%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.5994%" y="501" width="0.0801%" height="15" fill="rgb(234,149,13)" fg:x="1243" fg:w="1"/><text x="99.8494%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.5994%" y="485" width="0.0801%" height="15" fill="rgb(223,219,12)" fg:x="1243" fg:w="1"/><text x="99.8494%" y="495.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (1 samples, 0.08%)</title><rect x="99.6795%" y="693" width="0.0801%" height="15" fill="rgb(234,13,49)" fg:x="1244" fg:w="1"/><text x="99.9295%" y="703.50"></text></g><g><title>engine::users::model::username_to_key (1 samples, 0.08%)</title><rect x="99.6795%" y="677" width="0.0801%" height="15" fill="rgb(214,41,25)" fg:x="1244" fg:w="1"/><text x="99.9295%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="99.6795%" y="661" width="0.0801%" height="15" fill="rgb(232,198,52)" fg:x="1244" fg:w="1"/><text x="99.9295%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.6795%" y="645" width="0.0801%" height="15" fill="rgb(236,111,46)" fg:x="1244" fg:w="1"/><text x="99.9295%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.6795%" y="629" width="0.0801%" height="15" fill="rgb(253,30,20)" fg:x="1244" fg:w="1"/><text x="99.9295%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.6795%" y="613" width="0.0801%" height="15" fill="rgb(247,141,17)" fg:x="1244" fg:w="1"/><text x="99.9295%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.6795%" y="597" width="0.0801%" height="15" fill="rgb(214,195,21)" fg:x="1244" fg:w="1"/><text x="99.9295%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="99.6795%" y="581" width="0.0801%" height="15" fill="rgb(214,98,12)" fg:x="1244" fg:w="1"/><text x="99.9295%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="99.7596%" y="693" width="0.0801%" height="15" fill="rgb(239,4,26)" fg:x="1245" fg:w="1"/><text x="100.0096%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="99.7596%" y="677" width="0.0801%" height="15" fill="rgb(234,210,35)" fg:x="1245" fg:w="1"/><text x="100.0096%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.7596%" y="661" width="0.0801%" height="15" fill="rgb(252,178,27)" fg:x="1245" fg:w="1"/><text x="100.0096%" y="671.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (204 samples, 16.35%)</title><rect x="83.5737%" y="869" width="16.3462%" height="15" fill="rgb(217,50,1)" fg:x="1043" fg:w="204"/><text x="83.8237%" y="879.50">engine::session::Session:..</text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (204 samples, 16.35%)</title><rect x="83.5737%" y="853" width="16.3462%" height="15" fill="rgb(233,137,5)" fg:x="1043" fg:w="204"/><text x="83.8237%" y="863.50">&lt;engine::session::Session..</text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (204 samples, 16.35%)</title><rect x="83.5737%" y="837" width="16.3462%" height="15" fill="rgb(217,227,25)" fg:x="1043" fg:w="204"/><text x="83.8237%" y="847.50">&lt;engine::perform::Standar..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (204 samples, 16.35%)</title><rect x="83.5737%" y="821" width="16.3462%" height="15" fill="rgb(242,89,38)" fg:x="1043" fg:w="204"/><text x="83.8237%" y="831.50">engine::perform::Standard..</text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (204 samples, 16.35%)</title><rect x="83.5737%" y="805" width="16.3462%" height="15" fill="rgb(212,190,30)" fg:x="1043" fg:w="204"/><text x="83.8237%" y="815.50">&lt;kernel::plugins::Session..</text></g><g><title>core::iter::adapters::try_process (204 samples, 16.35%)</title><rect x="83.5737%" y="789" width="16.3462%" height="15" fill="rgb(222,120,8)" fg:x="1043" fg:w="204"/><text x="83.8237%" y="799.50">core::iter::adapters::try..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (204 samples, 16.35%)</title><rect x="83.5737%" y="773" width="16.3462%" height="15" fill="rgb(227,181,9)" fg:x="1043" fg:w="204"/><text x="83.8237%" y="783.50">&lt;alloc::vec::Vec&lt;T&gt; as al..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (204 samples, 16.35%)</title><rect x="83.5737%" y="757" width="16.3462%" height="15" fill="rgb(222,125,29)" fg:x="1043" fg:w="204"/><text x="83.8237%" y="767.50">&lt;core::iter::adapters::Ge..</text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (203 samples, 16.27%)</title><rect x="83.6538%" y="741" width="16.2660%" height="15" fill="rgb(215,153,31)" fg:x="1044" fg:w="203"/><text x="83.9038%" y="751.50">&lt;plugins_core::carrying::..</text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (203 samples, 16.27%)</title><rect x="83.6538%" y="725" width="16.2660%" height="15" fill="rgb(228,77,30)" fg:x="1044" fg:w="203"/><text x="83.9038%" y="735.50">&lt;engine::perform::Standar..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (6 samples, 0.48%)</title><rect x="99.4391%" y="709" width="0.4808%" height="15" fill="rgb(226,110,9)" fg:x="1241" fg:w="6"/><text x="99.6891%" y="719.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="99.8397%" y="693" width="0.0801%" height="15" fill="rgb(219,111,7)" fg:x="1246" fg:w="1"/><text x="100.0897%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="99.8397%" y="677" width="0.0801%" height="15" fill="rgb(229,167,25)" fg:x="1246" fg:w="1"/><text x="100.0897%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="99.8397%" y="661" width="0.0801%" height="15" fill="rgb(209,77,43)" fg:x="1246" fg:w="1"/><text x="100.0897%" y="671.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="99.8397%" y="645" width="0.0801%" height="15" fill="rgb(233,70,39)" fg:x="1246" fg:w="1"/><text x="100.0897%" y="655.50"></text></g><g><title>all (1,248 samples, 100%)</title><rect x="0.0000%" y="1221" width="100.0000%" height="15" fill="rgb(207,171,44)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1231.50"></text></g><g><title>simple-484c7248 (1,248 samples, 100.00%)</title><rect x="0.0000%" y="1205" width="100.0000%" height="15" fill="rgb(244,91,6)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1215.50">simple-484c7248</text></g><g><title>_start (1,248 samples, 100.00%)</title><rect x="0.0000%" y="1189" width="100.0000%" height="15" fill="rgb(234,136,12)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1199.50">_start</text></g><g><title>__libc_start_main (1,248 samples, 100.00%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(216,210,38)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1183.50">__libc_start_main</text></g><g><title>main (1,248 samples, 100.00%)</title><rect x="0.0000%" y="1157" width="100.0000%" height="15" fill="rgb(241,227,7)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1167.50">main</text></g><g><title>std::rt::lang_start_internal (1,248 samples, 100.00%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(241,222,11)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1151.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,248 samples, 100.00%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(246,86,18)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1135.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,248 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(224,151,49)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1119.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,248 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(235,4,41)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1103.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,248 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(218,30,52)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1087.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,248 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(205,124,51)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1071.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,248 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(237,126,51)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1055.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,248 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(225,32,46)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1039.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,248 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(251,60,49)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1023.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,248 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(234,18,23)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1007.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,248 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(234,25,23)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="991.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,248 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(210,43,52)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="975.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,248 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(237,198,21)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="959.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,248 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(211,20,34)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="943.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (468 samples, 37.50%)</title><rect x="62.5000%" y="917" width="37.5000%" height="15" fill="rgb(221,155,50)" fg:x="780" fg:w="468"/><text x="62.7500%" y="927.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::R..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (468 samples, 37.50%)</title><rect x="62.5000%" y="901" width="37.5000%" height="15" fill="rgb(213,214,53)" fg:x="780" fg:w="468"/><text x="62.7500%" y="911.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (468 samples, 37.50%)</title><rect x="62.5000%" y="885" width="37.5000%" height="15" fill="rgb(215,229,48)" fg:x="780" fg:w="468"/><text x="62.7500%" y="895.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="99.9199%" y="869" width="0.0801%" height="15" fill="rgb(243,88,5)" fg:x="1247" fg:w="1"/><text x="100.1699%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="99.9199%" y="853" width="0.0801%" height="15" fill="rgb(216,199,8)" fg:x="1247" fg:w="1"/><text x="100.1699%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.9199%" y="837" width="0.0801%" height="15" fill="rgb(241,22,4)" fg:x="1247" fg:w="1"/><text x="100.1699%" y="847.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="99.9199%" y="821" width="0.0801%" height="15" fill="rgb(209,190,22)" fg:x="1247" fg:w="1"/><text x="100.1699%" y="831.50"></text></g></svg></svg>