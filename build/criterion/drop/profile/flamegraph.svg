<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1110" onload="init(evt)" viewBox="0 0 1200 1110" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1110" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1093.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1093.00"> </text><svg id="frames" x="10" width="1180" total_samples="1231"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.0812%" y="693" width="0.0812%" height="15" fill="rgb(245,75,19)" fg:x="1" fg:w="1"/><text x="0.3312%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.0812%" y="677" width="0.0812%" height="15" fill="rgb(250,191,31)" fg:x="1" fg:w="1"/><text x="0.3312%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="0.1625%" y="693" width="0.0812%" height="15" fill="rgb(224,11,50)" fg:x="2" fg:w="1"/><text x="0.4125%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.5686%" y="581" width="0.0812%" height="15" fill="rgb(231,171,7)" fg:x="7" fg:w="1"/><text x="0.8186%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.5686%" y="565" width="0.0812%" height="15" fill="rgb(252,214,10)" fg:x="7" fg:w="1"/><text x="0.8186%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="0.5686%" y="549" width="0.0812%" height="15" fill="rgb(249,45,46)" fg:x="7" fg:w="1"/><text x="0.8186%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.6499%" y="581" width="0.0812%" height="15" fill="rgb(240,173,7)" fg:x="8" fg:w="1"/><text x="0.8999%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.7311%" y="565" width="0.0812%" height="15" fill="rgb(235,214,13)" fg:x="9" fg:w="1"/><text x="0.9811%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.7311%" y="549" width="0.0812%" height="15" fill="rgb(245,156,8)" fg:x="9" fg:w="1"/><text x="0.9811%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.8123%" y="549" width="0.1625%" height="15" fill="rgb(235,46,12)" fg:x="10" fg:w="2"/><text x="1.0623%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.9748%" y="549" width="0.0812%" height="15" fill="rgb(221,81,14)" fg:x="12" fg:w="1"/><text x="1.2248%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.89%)</title><rect x="0.4062%" y="613" width="0.8936%" height="15" fill="rgb(238,207,9)" fg:x="5" fg:w="11"/><text x="0.6562%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="0.5686%" y="597" width="0.7311%" height="15" fill="rgb(224,129,35)" fg:x="7" fg:w="9"/><text x="0.8186%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="0.7311%" y="581" width="0.5686%" height="15" fill="rgb(243,218,34)" fg:x="9" fg:w="7"/><text x="0.9811%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="0.8123%" y="565" width="0.4874%" height="15" fill="rgb(220,166,13)" fg:x="10" fg:w="6"/><text x="1.0623%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="1.0561%" y="549" width="0.2437%" height="15" fill="rgb(227,167,49)" fg:x="13" fg:w="3"/><text x="1.3061%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.1373%" y="533" width="0.1625%" height="15" fill="rgb(234,142,12)" fg:x="14" fg:w="2"/><text x="1.3873%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.06%)</title><rect x="0.3249%" y="629" width="1.0561%" height="15" fill="rgb(207,100,48)" fg:x="4" fg:w="13"/><text x="0.5749%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.2998%" y="613" width="0.0812%" height="15" fill="rgb(210,25,14)" fg:x="16" fg:w="1"/><text x="1.5498%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.22%)</title><rect x="0.3249%" y="645" width="1.2185%" height="15" fill="rgb(246,116,27)" fg:x="4" fg:w="15"/><text x="0.5749%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.3810%" y="629" width="0.1625%" height="15" fill="rgb(214,193,42)" fg:x="17" fg:w="2"/><text x="1.6310%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::state::State&gt;&gt; (17 samples, 1.38%)</title><rect x="0.2437%" y="693" width="1.3810%" height="15" fill="rgb(214,122,8)" fg:x="3" fg:w="17"/><text x="0.4937%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.38%)</title><rect x="0.2437%" y="677" width="1.3810%" height="15" fill="rgb(244,173,18)" fg:x="3" fg:w="17"/><text x="0.4937%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (16 samples, 1.30%)</title><rect x="0.3249%" y="661" width="1.2998%" height="15" fill="rgb(232,68,19)" fg:x="4" fg:w="16"/><text x="0.5749%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.5435%" y="645" width="0.0812%" height="15" fill="rgb(236,224,1)" fg:x="19" fg:w="1"/><text x="1.7935%" y="655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.71%)</title><rect x="0.0812%" y="709" width="1.7059%" height="15" fill="rgb(240,11,8)" fg:x="1" fg:w="21"/><text x="0.3312%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryEntityStorage&gt; (2 samples, 0.16%)</title><rect x="1.6247%" y="693" width="0.1625%" height="15" fill="rgb(244,159,20)" fg:x="20" fg:w="2"/><text x="1.8747%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.7059%" y="677" width="0.0812%" height="15" fill="rgb(240,223,54)" fg:x="21" fg:w="1"/><text x="1.9559%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="1.9496%" y="517" width="0.0812%" height="15" fill="rgb(237,146,5)" fg:x="24" fg:w="1"/><text x="2.1996%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="1.9496%" y="501" width="0.0812%" height="15" fill="rgb(218,221,32)" fg:x="24" fg:w="1"/><text x="2.1996%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="1.8684%" y="629" width="0.2437%" height="15" fill="rgb(244,96,26)" fg:x="23" fg:w="3"/><text x="2.1184%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="1.8684%" y="613" width="0.2437%" height="15" fill="rgb(245,184,37)" fg:x="23" fg:w="3"/><text x="2.1184%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="1.8684%" y="597" width="0.2437%" height="15" fill="rgb(248,91,47)" fg:x="23" fg:w="3"/><text x="2.1184%" y="607.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="1.8684%" y="581" width="0.2437%" height="15" fill="rgb(243,199,8)" fg:x="23" fg:w="3"/><text x="2.1184%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="1.8684%" y="565" width="0.2437%" height="15" fill="rgb(249,12,15)" fg:x="23" fg:w="3"/><text x="2.1184%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="1.8684%" y="549" width="0.2437%" height="15" fill="rgb(245,97,12)" fg:x="23" fg:w="3"/><text x="2.1184%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="1.9496%" y="533" width="0.1625%" height="15" fill="rgb(244,61,1)" fg:x="24" fg:w="2"/><text x="2.1996%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.0309%" y="517" width="0.0812%" height="15" fill="rgb(222,194,10)" fg:x="25" fg:w="1"/><text x="2.2809%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="2.1121%" y="629" width="0.0812%" height="15" fill="rgb(226,178,8)" fg:x="26" fg:w="1"/><text x="2.3621%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="2.1121%" y="613" width="0.0812%" height="15" fill="rgb(241,32,34)" fg:x="26" fg:w="1"/><text x="2.3621%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="2.1121%" y="597" width="0.0812%" height="15" fill="rgb(254,26,6)" fg:x="26" fg:w="1"/><text x="2.3621%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="2.1121%" y="581" width="0.0812%" height="15" fill="rgb(249,71,11)" fg:x="26" fg:w="1"/><text x="2.3621%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="2.1121%" y="565" width="0.0812%" height="15" fill="rgb(232,170,27)" fg:x="26" fg:w="1"/><text x="2.3621%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="2.1121%" y="549" width="0.0812%" height="15" fill="rgb(214,223,17)" fg:x="26" fg:w="1"/><text x="2.3621%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="2.1121%" y="533" width="0.0812%" height="15" fill="rgb(250,18,15)" fg:x="26" fg:w="1"/><text x="2.3621%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="2.1121%" y="517" width="0.0812%" height="15" fill="rgb(212,153,51)" fg:x="26" fg:w="1"/><text x="2.3621%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="2.1121%" y="501" width="0.0812%" height="15" fill="rgb(219,194,12)" fg:x="26" fg:w="1"/><text x="2.3621%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="2.1121%" y="485" width="0.0812%" height="15" fill="rgb(212,58,17)" fg:x="26" fg:w="1"/><text x="2.3621%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="2.1121%" y="469" width="0.0812%" height="15" fill="rgb(254,5,10)" fg:x="26" fg:w="1"/><text x="2.3621%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.1121%" y="453" width="0.0812%" height="15" fill="rgb(246,91,7)" fg:x="26" fg:w="1"/><text x="2.3621%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.2746%" y="533" width="0.0812%" height="15" fill="rgb(218,108,49)" fg:x="28" fg:w="1"/><text x="2.5246%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.2746%" y="517" width="0.0812%" height="15" fill="rgb(238,123,20)" fg:x="28" fg:w="1"/><text x="2.5246%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="2.2746%" y="501" width="0.0812%" height="15" fill="rgb(231,69,23)" fg:x="28" fg:w="1"/><text x="2.5246%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="2.4370%" y="501" width="0.0812%" height="15" fill="rgb(230,209,3)" fg:x="30" fg:w="1"/><text x="2.6870%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.4370%" y="485" width="0.0812%" height="15" fill="rgb(231,19,0)" fg:x="30" fg:w="1"/><text x="2.6870%" y="495.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.49%)</title><rect x="2.1933%" y="613" width="0.4874%" height="15" fill="rgb(226,192,25)" fg:x="27" fg:w="6"/><text x="2.4433%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.49%)</title><rect x="2.1933%" y="597" width="0.4874%" height="15" fill="rgb(223,175,53)" fg:x="27" fg:w="6"/><text x="2.4433%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="2.1933%" y="581" width="0.4874%" height="15" fill="rgb(248,35,51)" fg:x="27" fg:w="6"/><text x="2.4433%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="2.2746%" y="565" width="0.4062%" height="15" fill="rgb(230,37,26)" fg:x="28" fg:w="5"/><text x="2.5246%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="2.2746%" y="549" width="0.4062%" height="15" fill="rgb(206,120,22)" fg:x="28" fg:w="5"/><text x="2.5246%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="2.3558%" y="533" width="0.3249%" height="15" fill="rgb(207,165,28)" fg:x="29" fg:w="4"/><text x="2.6058%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="2.3558%" y="517" width="0.3249%" height="15" fill="rgb(226,23,46)" fg:x="29" fg:w="4"/><text x="2.6058%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="2.5183%" y="501" width="0.1625%" height="15" fill="rgb(208,130,44)" fg:x="31" fg:w="2"/><text x="2.7683%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="2.5183%" y="485" width="0.1625%" height="15" fill="rgb(231,67,8)" fg:x="31" fg:w="2"/><text x="2.7683%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.5995%" y="469" width="0.0812%" height="15" fill="rgb(205,183,22)" fg:x="32" fg:w="1"/><text x="2.8495%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.7620%" y="549" width="0.0812%" height="15" fill="rgb(224,47,9)" fg:x="34" fg:w="1"/><text x="3.0120%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="3.0057%" y="533" width="0.0812%" height="15" fill="rgb(250,183,49)" fg:x="37" fg:w="1"/><text x="3.2557%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="3.0057%" y="517" width="0.0812%" height="15" fill="rgb(220,151,39)" fg:x="37" fg:w="1"/><text x="3.2557%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="3.0057%" y="501" width="0.0812%" height="15" fill="rgb(220,118,20)" fg:x="37" fg:w="1"/><text x="3.2557%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="3.0057%" y="485" width="0.0812%" height="15" fill="rgb(231,65,51)" fg:x="37" fg:w="1"/><text x="3.2557%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.0057%" y="469" width="0.0812%" height="15" fill="rgb(253,125,37)" fg:x="37" fg:w="1"/><text x="3.2557%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (16 samples, 1.30%)</title><rect x="1.8684%" y="677" width="1.2998%" height="15" fill="rgb(232,102,6)" fg:x="23" fg:w="16"/><text x="2.1184%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (16 samples, 1.30%)</title><rect x="1.8684%" y="661" width="1.2998%" height="15" fill="rgb(251,105,13)" fg:x="23" fg:w="16"/><text x="2.1184%" y="671.50"></text></g><g><title>engine::internal::Entities::add_persisted (16 samples, 1.30%)</title><rect x="1.8684%" y="645" width="1.2998%" height="15" fill="rgb(222,179,29)" fg:x="23" fg:w="16"/><text x="2.1184%" y="655.50"></text></g><g><title>kernel::model::entity::Entity::from_str (12 samples, 0.97%)</title><rect x="2.1933%" y="629" width="0.9748%" height="15" fill="rgb(229,180,53)" fg:x="27" fg:w="12"/><text x="2.4433%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.49%)</title><rect x="2.6807%" y="613" width="0.4874%" height="15" fill="rgb(238,104,13)" fg:x="33" fg:w="6"/><text x="2.9307%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="2.6807%" y="597" width="0.4874%" height="15" fill="rgb(210,130,5)" fg:x="33" fg:w="6"/><text x="2.9307%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.41%)</title><rect x="2.7620%" y="581" width="0.4062%" height="15" fill="rgb(233,87,49)" fg:x="34" fg:w="5"/><text x="3.0120%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="2.7620%" y="565" width="0.4062%" height="15" fill="rgb(243,34,9)" fg:x="34" fg:w="5"/><text x="3.0120%" y="575.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="2.8432%" y="549" width="0.3249%" height="15" fill="rgb(235,225,10)" fg:x="35" fg:w="4"/><text x="3.0932%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="3.0869%" y="533" width="0.0812%" height="15" fill="rgb(212,0,30)" fg:x="38" fg:w="1"/><text x="3.3369%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="3.0869%" y="517" width="0.0812%" height="15" fill="rgb(211,177,0)" fg:x="38" fg:w="1"/><text x="3.3369%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.0869%" y="501" width="0.0812%" height="15" fill="rgb(225,220,11)" fg:x="38" fg:w="1"/><text x="3.3369%" y="511.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="3.1682%" y="677" width="0.0812%" height="15" fill="rgb(215,10,13)" fg:x="39" fg:w="1"/><text x="3.4182%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="3.1682%" y="661" width="0.0812%" height="15" fill="rgb(240,177,14)" fg:x="39" fg:w="1"/><text x="3.4182%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="3.1682%" y="645" width="0.0812%" height="15" fill="rgb(243,7,39)" fg:x="39" fg:w="1"/><text x="3.4182%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="3.1682%" y="629" width="0.0812%" height="15" fill="rgb(212,99,0)" fg:x="39" fg:w="1"/><text x="3.4182%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="3.1682%" y="613" width="0.0812%" height="15" fill="rgb(225,162,48)" fg:x="39" fg:w="1"/><text x="3.4182%" y="623.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="3.2494%" y="677" width="0.0812%" height="15" fill="rgb(246,16,25)" fg:x="40" fg:w="1"/><text x="3.4994%" y="687.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="3.2494%" y="661" width="0.0812%" height="15" fill="rgb(220,150,2)" fg:x="40" fg:w="1"/><text x="3.4994%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="3.2494%" y="645" width="0.0812%" height="15" fill="rgb(237,113,11)" fg:x="40" fg:w="1"/><text x="3.4994%" y="655.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="3.2494%" y="629" width="0.0812%" height="15" fill="rgb(236,70,20)" fg:x="40" fg:w="1"/><text x="3.4994%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.2494%" y="613" width="0.0812%" height="15" fill="rgb(234,94,7)" fg:x="40" fg:w="1"/><text x="3.4994%" y="623.50"></text></g><g><title>dlerror (2 samples, 0.16%)</title><rect x="3.4931%" y="629" width="0.1625%" height="15" fill="rgb(250,221,0)" fg:x="43" fg:w="2"/><text x="3.7431%" y="639.50"></text></g><g><title>libloading::os::unix::Library::open (17 samples, 1.38%)</title><rect x="3.4119%" y="645" width="1.3810%" height="15" fill="rgb(245,149,46)" fg:x="42" fg:w="17"/><text x="3.6619%" y="655.50"></text></g><g><title>dlopen (14 samples, 1.14%)</title><rect x="3.6556%" y="629" width="1.1373%" height="15" fill="rgb(215,37,27)" fg:x="45" fg:w="14"/><text x="3.9056%" y="639.50"></text></g><g><title>_dl_catch_error (12 samples, 0.97%)</title><rect x="3.8180%" y="613" width="0.9748%" height="15" fill="rgb(232,65,3)" fg:x="47" fg:w="12"/><text x="4.0680%" y="623.50"></text></g><g><title>_dl_catch_exception (12 samples, 0.97%)</title><rect x="3.8180%" y="597" width="0.9748%" height="15" fill="rgb(214,2,16)" fg:x="47" fg:w="12"/><text x="4.0680%" y="607.50"></text></g><g><title>_dl_catch_exception (12 samples, 0.97%)</title><rect x="3.8180%" y="581" width="0.9748%" height="15" fill="rgb(227,131,50)" fg:x="47" fg:w="12"/><text x="4.0680%" y="591.50"></text></g><g><title>_dl_catch_exception (12 samples, 0.97%)</title><rect x="3.8180%" y="565" width="0.9748%" height="15" fill="rgb(247,131,45)" fg:x="47" fg:w="12"/><text x="4.0680%" y="575.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (19 samples, 1.54%)</title><rect x="3.3306%" y="677" width="1.5435%" height="15" fill="rgb(215,97,47)" fg:x="41" fg:w="19"/><text x="3.5806%" y="687.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (19 samples, 1.54%)</title><rect x="3.3306%" y="661" width="1.5435%" height="15" fill="rgb(233,143,12)" fg:x="41" fg:w="19"/><text x="3.5806%" y="671.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="4.7929%" y="645" width="0.0812%" height="15" fill="rgb(222,57,17)" fg:x="59" fg:w="1"/><text x="5.0429%" y="655.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="4.7929%" y="629" width="0.0812%" height="15" fill="rgb(214,119,38)" fg:x="59" fg:w="1"/><text x="5.0429%" y="639.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (39 samples, 3.17%)</title><rect x="1.7872%" y="709" width="3.1682%" height="15" fill="rgb(217,28,47)" fg:x="22" fg:w="39"/><text x="2.0372%" y="719.50">&lt;en..</text></g><g><title>engine::session::Session::new (39 samples, 3.17%)</title><rect x="1.7872%" y="693" width="3.1682%" height="15" fill="rgb(231,14,52)" fg:x="22" fg:w="39"/><text x="2.0372%" y="703.50">eng..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="4.8741%" y="677" width="0.0812%" height="15" fill="rgb(220,158,18)" fg:x="60" fg:w="1"/><text x="5.1241%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.8741%" y="661" width="0.0812%" height="15" fill="rgb(222,143,46)" fg:x="60" fg:w="1"/><text x="5.1241%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="4.8741%" y="645" width="0.0812%" height="15" fill="rgb(227,165,5)" fg:x="60" fg:w="1"/><text x="5.1241%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.9553%" y="693" width="0.0812%" height="15" fill="rgb(216,222,49)" fg:x="61" fg:w="1"/><text x="5.2053%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.08%)</title><rect x="5.0366%" y="693" width="0.0812%" height="15" fill="rgb(238,73,39)" fg:x="62" fg:w="1"/><text x="5.2866%" y="703.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="5.0366%" y="677" width="0.0812%" height="15" fill="rgb(252,115,9)" fg:x="62" fg:w="1"/><text x="5.2866%" y="687.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="5.0366%" y="661" width="0.0812%" height="15" fill="rgb(238,202,4)" fg:x="62" fg:w="1"/><text x="5.2866%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="5.1178%" y="661" width="0.0812%" height="15" fill="rgb(252,153,44)" fg:x="63" fg:w="1"/><text x="5.3678%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="5.1990%" y="549" width="0.0812%" height="15" fill="rgb(235,128,27)" fg:x="64" fg:w="1"/><text x="5.4490%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.1990%" y="533" width="0.0812%" height="15" fill="rgb(221,121,47)" fg:x="64" fg:w="1"/><text x="5.4490%" y="543.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="5.1990%" y="661" width="0.1625%" height="15" fill="rgb(247,211,47)" fg:x="64" fg:w="2"/><text x="5.4490%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="5.1990%" y="645" width="0.1625%" height="15" fill="rgb(252,47,49)" fg:x="64" fg:w="2"/><text x="5.4490%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="5.1990%" y="629" width="0.1625%" height="15" fill="rgb(219,119,53)" fg:x="64" fg:w="2"/><text x="5.4490%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="5.1990%" y="613" width="0.1625%" height="15" fill="rgb(243,165,53)" fg:x="64" fg:w="2"/><text x="5.4490%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="5.1990%" y="597" width="0.1625%" height="15" fill="rgb(230,12,35)" fg:x="64" fg:w="2"/><text x="5.4490%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::de::Deserialize for kernel::model::base::Acls&gt;::deserialize (2 samples, 0.16%)</title><rect x="5.1990%" y="581" width="0.1625%" height="15" fill="rgb(239,57,49)" fg:x="64" fg:w="2"/><text x="5.4490%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="5.1990%" y="565" width="0.1625%" height="15" fill="rgb(231,154,7)" fg:x="64" fg:w="2"/><text x="5.4490%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="5.2803%" y="549" width="0.0812%" height="15" fill="rgb(248,81,34)" fg:x="65" fg:w="1"/><text x="5.5303%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.41%)</title><rect x="5.5240%" y="613" width="0.4062%" height="15" fill="rgb(247,9,5)" fg:x="68" fg:w="5"/><text x="5.7740%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.41%)</title><rect x="5.5240%" y="597" width="0.4062%" height="15" fill="rgb(228,172,27)" fg:x="68" fg:w="5"/><text x="5.7740%" y="607.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="5.6864%" y="581" width="0.2437%" height="15" fill="rgb(230,57,44)" fg:x="70" fg:w="3"/><text x="5.9364%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="5.6864%" y="565" width="0.2437%" height="15" fill="rgb(249,35,22)" fg:x="70" fg:w="3"/><text x="5.9364%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="5.6864%" y="549" width="0.2437%" height="15" fill="rgb(250,137,27)" fg:x="70" fg:w="3"/><text x="5.9364%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="5.7677%" y="533" width="0.1625%" height="15" fill="rgb(251,57,31)" fg:x="71" fg:w="2"/><text x="6.0177%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="5.7677%" y="517" width="0.1625%" height="15" fill="rgb(238,60,0)" fg:x="71" fg:w="2"/><text x="6.0177%" y="527.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="5.7677%" y="501" width="0.1625%" height="15" fill="rgb(242,185,39)" fg:x="71" fg:w="2"/><text x="6.0177%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.0114%" y="597" width="0.1625%" height="15" fill="rgb(240,63,43)" fg:x="74" fg:w="2"/><text x="6.2614%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.0114%" y="581" width="0.1625%" height="15" fill="rgb(236,155,6)" fg:x="74" fg:w="2"/><text x="6.2614%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="6.0114%" y="565" width="0.1625%" height="15" fill="rgb(215,11,29)" fg:x="74" fg:w="2"/><text x="6.2614%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="6.0114%" y="549" width="0.1625%" height="15" fill="rgb(228,180,48)" fg:x="74" fg:w="2"/><text x="6.2614%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.0926%" y="533" width="0.0812%" height="15" fill="rgb(241,102,12)" fg:x="75" fg:w="1"/><text x="6.3426%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.0926%" y="517" width="0.0812%" height="15" fill="rgb(246,213,4)" fg:x="75" fg:w="1"/><text x="6.3426%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.0926%" y="501" width="0.0812%" height="15" fill="rgb(218,134,35)" fg:x="75" fg:w="1"/><text x="6.3426%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.3363%" y="549" width="0.1625%" height="15" fill="rgb(251,117,35)" fg:x="78" fg:w="2"/><text x="6.5863%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.3363%" y="533" width="0.1625%" height="15" fill="rgb(206,156,45)" fg:x="78" fg:w="2"/><text x="6.5863%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.4175%" y="517" width="0.0812%" height="15" fill="rgb(218,52,27)" fg:x="79" fg:w="1"/><text x="6.6675%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.4175%" y="501" width="0.0812%" height="15" fill="rgb(238,83,36)" fg:x="79" fg:w="1"/><text x="6.6675%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="6.4988%" y="549" width="0.0812%" height="15" fill="rgb(218,53,43)" fg:x="80" fg:w="1"/><text x="6.7488%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.4988%" y="533" width="0.0812%" height="15" fill="rgb(239,54,39)" fg:x="80" fg:w="1"/><text x="6.7488%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.41%)</title><rect x="6.2551%" y="581" width="0.4062%" height="15" fill="rgb(212,198,13)" fg:x="77" fg:w="5"/><text x="6.5051%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="6.2551%" y="565" width="0.4062%" height="15" fill="rgb(234,54,46)" fg:x="77" fg:w="5"/><text x="6.5051%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.5800%" y="549" width="0.0812%" height="15" fill="rgb(217,120,7)" fg:x="81" fg:w="1"/><text x="6.8300%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.5800%" y="533" width="0.0812%" height="15" fill="rgb(246,39,15)" fg:x="81" fg:w="1"/><text x="6.8300%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.5800%" y="517" width="0.0812%" height="15" fill="rgb(242,143,31)" fg:x="81" fg:w="1"/><text x="6.8300%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.6613%" y="581" width="0.0812%" height="15" fill="rgb(252,60,24)" fg:x="82" fg:w="1"/><text x="6.9113%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.6613%" y="565" width="0.0812%" height="15" fill="rgb(249,220,7)" fg:x="82" fg:w="1"/><text x="6.9113%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="6.8237%" y="565" width="0.0812%" height="15" fill="rgb(236,67,13)" fg:x="84" fg:w="1"/><text x="7.0737%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.8237%" y="549" width="0.0812%" height="15" fill="rgb(210,62,39)" fg:x="84" fg:w="1"/><text x="7.0737%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.8237%" y="533" width="0.0812%" height="15" fill="rgb(219,122,53)" fg:x="84" fg:w="1"/><text x="7.0737%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.8237%" y="517" width="0.0812%" height="15" fill="rgb(218,87,25)" fg:x="84" fg:w="1"/><text x="7.0737%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="6.9050%" y="565" width="0.1625%" height="15" fill="rgb(234,179,48)" fg:x="85" fg:w="2"/><text x="7.1550%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="6.9050%" y="549" width="0.1625%" height="15" fill="rgb(248,90,0)" fg:x="85" fg:w="2"/><text x="7.1550%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="6.9050%" y="533" width="0.1625%" height="15" fill="rgb(207,228,37)" fg:x="85" fg:w="2"/><text x="7.1550%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.9050%" y="517" width="0.1625%" height="15" fill="rgb(235,214,15)" fg:x="85" fg:w="2"/><text x="7.1550%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.9862%" y="501" width="0.0812%" height="15" fill="rgb(210,144,39)" fg:x="86" fg:w="1"/><text x="7.2362%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.06%)</title><rect x="6.1738%" y="597" width="1.0561%" height="15" fill="rgb(222,67,41)" fg:x="76" fg:w="13"/><text x="6.4238%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="6.7425%" y="581" width="0.4874%" height="15" fill="rgb(205,35,37)" fg:x="83" fg:w="6"/><text x="6.9925%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.0674%" y="565" width="0.1625%" height="15" fill="rgb(216,125,40)" fg:x="87" fg:w="2"/><text x="7.3174%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.1487%" y="549" width="0.0812%" height="15" fill="rgb(228,227,20)" fg:x="88" fg:w="1"/><text x="7.3987%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.1487%" y="533" width="0.0812%" height="15" fill="rgb(242,173,45)" fg:x="88" fg:w="1"/><text x="7.3987%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.54%)</title><rect x="5.9301%" y="613" width="1.5435%" height="15" fill="rgb(215,79,24)" fg:x="73" fg:w="19"/><text x="6.1801%" y="623.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="7.2299%" y="597" width="0.2437%" height="15" fill="rgb(238,164,38)" fg:x="89" fg:w="3"/><text x="7.4799%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="7.2299%" y="581" width="0.2437%" height="15" fill="rgb(245,196,38)" fg:x="89" fg:w="3"/><text x="7.4799%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="7.3111%" y="565" width="0.1625%" height="15" fill="rgb(231,217,29)" fg:x="90" fg:w="2"/><text x="7.5611%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="7.3924%" y="549" width="0.0812%" height="15" fill="rgb(245,6,4)" fg:x="91" fg:w="1"/><text x="7.6424%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.3924%" y="533" width="0.0812%" height="15" fill="rgb(214,76,49)" fg:x="91" fg:w="1"/><text x="7.6424%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="7.3924%" y="517" width="0.0812%" height="15" fill="rgb(205,96,12)" fg:x="91" fg:w="1"/><text x="7.6424%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (25 samples, 2.03%)</title><rect x="5.5240%" y="629" width="2.0309%" height="15" fill="rgb(243,131,4)" fg:x="68" fg:w="25"/><text x="5.7740%" y="639.50">&lt;..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.4736%" y="613" width="0.0812%" height="15" fill="rgb(214,114,4)" fg:x="92" fg:w="1"/><text x="7.7236%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.6361%" y="581" width="0.0812%" height="15" fill="rgb(234,215,15)" fg:x="94" fg:w="1"/><text x="7.8861%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="7.7173%" y="581" width="0.0812%" height="15" fill="rgb(250,216,45)" fg:x="95" fg:w="1"/><text x="7.9673%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.7173%" y="565" width="0.0812%" height="15" fill="rgb(236,128,4)" fg:x="95" fg:w="1"/><text x="7.9673%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="7.5548%" y="629" width="0.4062%" height="15" fill="rgb(234,50,33)" fg:x="93" fg:w="5"/><text x="7.8048%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.41%)</title><rect x="7.5548%" y="613" width="0.4062%" height="15" fill="rgb(253,131,37)" fg:x="93" fg:w="5"/><text x="7.8048%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="7.6361%" y="597" width="0.3249%" height="15" fill="rgb(218,55,27)" fg:x="94" fg:w="4"/><text x="7.8861%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="7.7985%" y="581" width="0.1625%" height="15" fill="rgb(241,220,28)" fg:x="96" fg:w="2"/><text x="8.0485%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="7.8798%" y="565" width="0.0812%" height="15" fill="rgb(241,90,48)" fg:x="97" fg:w="1"/><text x="8.1298%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="7.8798%" y="549" width="0.0812%" height="15" fill="rgb(216,43,37)" fg:x="97" fg:w="1"/><text x="8.1298%" y="559.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="7.9610%" y="613" width="0.0812%" height="15" fill="rgb(207,173,9)" fg:x="98" fg:w="1"/><text x="8.2110%" y="623.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="7.9610%" y="597" width="0.0812%" height="15" fill="rgb(240,126,30)" fg:x="98" fg:w="1"/><text x="8.2110%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="7.9610%" y="581" width="0.0812%" height="15" fill="rgb(228,178,53)" fg:x="98" fg:w="1"/><text x="8.2110%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.9610%" y="565" width="0.0812%" height="15" fill="rgb(217,33,4)" fg:x="98" fg:w="1"/><text x="8.2110%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.1235%" y="581" width="0.0812%" height="15" fill="rgb(206,124,34)" fg:x="100" fg:w="1"/><text x="8.3735%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.2047%" y="581" width="0.0812%" height="15" fill="rgb(208,122,53)" fg:x="101" fg:w="1"/><text x="8.4547%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.2047%" y="565" width="0.0812%" height="15" fill="rgb(215,202,26)" fg:x="101" fg:w="1"/><text x="8.4547%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="8.2047%" y="549" width="0.0812%" height="15" fill="rgb(232,198,31)" fg:x="101" fg:w="1"/><text x="8.4547%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="8.4484%" y="533" width="0.2437%" height="15" fill="rgb(222,23,35)" fg:x="104" fg:w="3"/><text x="8.6984%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="8.4484%" y="517" width="0.2437%" height="15" fill="rgb(242,27,53)" fg:x="104" fg:w="3"/><text x="8.6984%" y="527.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="8.4484%" y="501" width="0.2437%" height="15" fill="rgb(210,216,42)" fg:x="104" fg:w="3"/><text x="8.6984%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="8.6921%" y="533" width="0.0812%" height="15" fill="rgb(234,39,38)" fg:x="107" fg:w="1"/><text x="8.9421%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="8.6921%" y="517" width="0.0812%" height="15" fill="rgb(235,126,54)" fg:x="107" fg:w="1"/><text x="8.9421%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="8.8546%" y="501" width="0.1625%" height="15" fill="rgb(235,150,33)" fg:x="109" fg:w="2"/><text x="9.1046%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="8.8546%" y="485" width="0.1625%" height="15" fill="rgb(249,49,53)" fg:x="109" fg:w="2"/><text x="9.1046%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="8.8546%" y="469" width="0.1625%" height="15" fill="rgb(238,60,50)" fg:x="109" fg:w="2"/><text x="9.1046%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.0171%" y="469" width="0.0812%" height="15" fill="rgb(210,5,2)" fg:x="111" fg:w="1"/><text x="9.2671%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.0171%" y="453" width="0.0812%" height="15" fill="rgb(214,207,24)" fg:x="111" fg:w="1"/><text x="9.2671%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.0171%" y="437" width="0.0812%" height="15" fill="rgb(228,173,2)" fg:x="111" fg:w="1"/><text x="9.2671%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="9.2608%" y="437" width="0.2437%" height="15" fill="rgb(244,26,8)" fg:x="114" fg:w="3"/><text x="9.5108%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="9.2608%" y="421" width="0.2437%" height="15" fill="rgb(249,153,35)" fg:x="114" fg:w="3"/><text x="9.5108%" y="431.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="9.2608%" y="405" width="0.2437%" height="15" fill="rgb(221,215,40)" fg:x="114" fg:w="3"/><text x="9.5108%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="9.5045%" y="405" width="0.2437%" height="15" fill="rgb(238,106,35)" fg:x="117" fg:w="3"/><text x="9.7545%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="9.5045%" y="389" width="0.2437%" height="15" fill="rgb(207,195,21)" fg:x="117" fg:w="3"/><text x="9.7545%" y="399.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="9.5045%" y="373" width="0.2437%" height="15" fill="rgb(205,43,29)" fg:x="117" fg:w="3"/><text x="9.7545%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (19 samples, 1.54%)</title><rect x="8.2859%" y="565" width="1.5435%" height="15" fill="rgb(236,35,21)" fg:x="102" fg:w="19"/><text x="8.5359%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (17 samples, 1.38%)</title><rect x="8.4484%" y="549" width="1.3810%" height="15" fill="rgb(244,74,8)" fg:x="104" fg:w="17"/><text x="8.6984%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.06%)</title><rect x="8.7734%" y="533" width="1.0561%" height="15" fill="rgb(241,229,7)" fg:x="108" fg:w="13"/><text x="9.0234%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.06%)</title><rect x="8.7734%" y="517" width="1.0561%" height="15" fill="rgb(212,223,25)" fg:x="108" fg:w="13"/><text x="9.0234%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.81%)</title><rect x="9.0171%" y="501" width="0.8123%" height="15" fill="rgb(234,58,53)" fg:x="111" fg:w="10"/><text x="9.2671%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.81%)</title><rect x="9.0171%" y="485" width="0.8123%" height="15" fill="rgb(244,36,1)" fg:x="111" fg:w="10"/><text x="9.2671%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.73%)</title><rect x="9.0983%" y="469" width="0.7311%" height="15" fill="rgb(222,40,54)" fg:x="112" fg:w="9"/><text x="9.3483%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.65%)</title><rect x="9.1795%" y="453" width="0.6499%" height="15" fill="rgb(210,207,39)" fg:x="113" fg:w="8"/><text x="9.4295%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="9.5045%" y="437" width="0.3249%" height="15" fill="rgb(234,52,14)" fg:x="117" fg:w="4"/><text x="9.7545%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="9.5045%" y="421" width="0.3249%" height="15" fill="rgb(239,108,46)" fg:x="117" fg:w="4"/><text x="9.7545%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="9.7482%" y="405" width="0.0812%" height="15" fill="rgb(252,223,5)" fg:x="120" fg:w="1"/><text x="9.9982%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="9.7482%" y="389" width="0.0812%" height="15" fill="rgb(227,181,11)" fg:x="120" fg:w="1"/><text x="9.9982%" y="399.50"></text></g><g><title>engine::session::Session::flush (60 samples, 4.87%)</title><rect x="5.1178%" y="693" width="4.8741%" height="15" fill="rgb(248,126,40)" fg:x="63" fg:w="60"/><text x="5.3678%" y="703.50">engine..</text></g><g><title>engine::session::Session::save_entity_changes (60 samples, 4.87%)</title><rect x="5.1178%" y="677" width="4.8741%" height="15" fill="rgb(243,1,18)" fg:x="63" fg:w="60"/><text x="5.3678%" y="687.50">engine..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (57 samples, 4.63%)</title><rect x="5.3615%" y="661" width="4.6304%" height="15" fill="rgb(214,145,23)" fg:x="66" fg:w="57"/><text x="5.6115%" y="671.50">engin..</text></g><g><title>engine::session::SavesEntities::check_for_changes (56 samples, 4.55%)</title><rect x="5.4427%" y="645" width="4.5491%" height="15" fill="rgb(241,218,11)" fg:x="67" fg:w="56"/><text x="5.6927%" y="655.50">engin..</text></g><g><title>kernel::model::any_entity_changes (25 samples, 2.03%)</title><rect x="7.9610%" y="629" width="2.0309%" height="15" fill="rgb(214,219,24)" fg:x="98" fg:w="25"/><text x="8.2110%" y="639.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (24 samples, 1.95%)</title><rect x="8.0422%" y="613" width="1.9496%" height="15" fill="rgb(235,32,7)" fg:x="99" fg:w="24"/><text x="8.2922%" y="623.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (24 samples, 1.95%)</title><rect x="8.0422%" y="597" width="1.9496%" height="15" fill="rgb(227,121,28)" fg:x="99" fg:w="24"/><text x="8.2922%" y="607.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (21 samples, 1.71%)</title><rect x="8.2859%" y="581" width="1.7059%" height="15" fill="rgb(216,129,49)" fg:x="102" fg:w="21"/><text x="8.5359%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="9.8294%" y="565" width="0.1625%" height="15" fill="rgb(207,194,50)" fg:x="121" fg:w="2"/><text x="10.0794%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="9.8294%" y="549" width="0.1625%" height="15" fill="rgb(207,4,18)" fg:x="121" fg:w="2"/><text x="10.0794%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="9.8294%" y="533" width="0.1625%" height="15" fill="rgb(213,50,30)" fg:x="121" fg:w="2"/><text x="10.0794%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="10.0731%" y="661" width="0.0812%" height="15" fill="rgb(208,77,22)" fg:x="124" fg:w="1"/><text x="10.3231%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="10.0731%" y="645" width="0.0812%" height="15" fill="rgb(244,204,34)" fg:x="124" fg:w="1"/><text x="10.3231%" y="655.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="10.0731%" y="629" width="0.0812%" height="15" fill="rgb(230,20,17)" fg:x="124" fg:w="1"/><text x="10.3231%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="10.1543%" y="613" width="0.0812%" height="15" fill="rgb(237,83,15)" fg:x="125" fg:w="1"/><text x="10.4043%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="10.1543%" y="597" width="0.0812%" height="15" fill="rgb(221,109,25)" fg:x="125" fg:w="1"/><text x="10.4043%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.1543%" y="581" width="0.0812%" height="15" fill="rgb(205,194,52)" fg:x="125" fg:w="1"/><text x="10.4043%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.1543%" y="565" width="0.0812%" height="15" fill="rgb(244,173,54)" fg:x="125" fg:w="1"/><text x="10.4043%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.1543%" y="549" width="0.0812%" height="15" fill="rgb(227,181,18)" fg:x="125" fg:w="1"/><text x="10.4043%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.1543%" y="533" width="0.0812%" height="15" fill="rgb(238,36,30)" fg:x="125" fg:w="1"/><text x="10.4043%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="10.1543%" y="517" width="0.0812%" height="15" fill="rgb(254,85,0)" fg:x="125" fg:w="1"/><text x="10.4043%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.1543%" y="501" width="0.0812%" height="15" fill="rgb(247,63,33)" fg:x="125" fg:w="1"/><text x="10.4043%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.1543%" y="485" width="0.0812%" height="15" fill="rgb(220,7,54)" fg:x="125" fg:w="1"/><text x="10.4043%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.1543%" y="469" width="0.0812%" height="15" fill="rgb(238,227,21)" fg:x="125" fg:w="1"/><text x="10.4043%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="10.0731%" y="677" width="0.2437%" height="15" fill="rgb(237,29,31)" fg:x="124" fg:w="3"/><text x="10.3231%" y="687.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="10.1543%" y="661" width="0.1625%" height="15" fill="rgb(211,21,50)" fg:x="125" fg:w="2"/><text x="10.4043%" y="671.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="10.1543%" y="645" width="0.1625%" height="15" fill="rgb(239,119,2)" fg:x="125" fg:w="2"/><text x="10.4043%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="10.1543%" y="629" width="0.1625%" height="15" fill="rgb(250,2,39)" fg:x="125" fg:w="2"/><text x="10.4043%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="10.2356%" y="613" width="0.0812%" height="15" fill="rgb(244,46,53)" fg:x="126" fg:w="1"/><text x="10.4856%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="10.2356%" y="597" width="0.0812%" height="15" fill="rgb(209,21,19)" fg:x="126" fg:w="1"/><text x="10.4856%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.2356%" y="581" width="0.0812%" height="15" fill="rgb(236,145,4)" fg:x="126" fg:w="1"/><text x="10.4856%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.2356%" y="565" width="0.0812%" height="15" fill="rgb(220,133,36)" fg:x="126" fg:w="1"/><text x="10.4856%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="10.3168%" y="581" width="0.2437%" height="15" fill="rgb(244,18,3)" fg:x="127" fg:w="3"/><text x="10.5668%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="10.3168%" y="565" width="0.2437%" height="15" fill="rgb(232,171,48)" fg:x="127" fg:w="3"/><text x="10.5668%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="10.3168%" y="549" width="0.2437%" height="15" fill="rgb(223,223,53)" fg:x="127" fg:w="3"/><text x="10.5668%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="10.3981%" y="533" width="0.1625%" height="15" fill="rgb(246,92,13)" fg:x="128" fg:w="2"/><text x="10.6481%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.5605%" y="549" width="0.0812%" height="15" fill="rgb(229,171,10)" fg:x="130" fg:w="1"/><text x="10.8105%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="10.6418%" y="485" width="0.0812%" height="15" fill="rgb(213,131,26)" fg:x="131" fg:w="1"/><text x="10.8918%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.7230%" y="453" width="0.0812%" height="15" fill="rgb(242,87,54)" fg:x="132" fg:w="1"/><text x="10.9730%" y="463.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.57%)</title><rect x="10.3168%" y="661" width="0.5686%" height="15" fill="rgb(237,21,35)" fg:x="127" fg:w="7"/><text x="10.5668%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (7 samples, 0.57%)</title><rect x="10.3168%" y="645" width="0.5686%" height="15" fill="rgb(253,13,47)" fg:x="127" fg:w="7"/><text x="10.5668%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.57%)</title><rect x="10.3168%" y="629" width="0.5686%" height="15" fill="rgb(215,122,49)" fg:x="127" fg:w="7"/><text x="10.5668%" y="639.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.57%)</title><rect x="10.3168%" y="613" width="0.5686%" height="15" fill="rgb(209,179,30)" fg:x="127" fg:w="7"/><text x="10.5668%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.57%)</title><rect x="10.3168%" y="597" width="0.5686%" height="15" fill="rgb(235,100,24)" fg:x="127" fg:w="7"/><text x="10.5668%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="10.5605%" y="581" width="0.3249%" height="15" fill="rgb(209,67,24)" fg:x="130" fg:w="4"/><text x="10.8105%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="10.5605%" y="565" width="0.3249%" height="15" fill="rgb(206,74,32)" fg:x="130" fg:w="4"/><text x="10.8105%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="10.6418%" y="549" width="0.2437%" height="15" fill="rgb(212,45,25)" fg:x="131" fg:w="3"/><text x="10.8918%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="10.6418%" y="533" width="0.2437%" height="15" fill="rgb(239,26,3)" fg:x="131" fg:w="3"/><text x="10.8918%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="10.6418%" y="517" width="0.2437%" height="15" fill="rgb(218,36,15)" fg:x="131" fg:w="3"/><text x="10.8918%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="10.6418%" y="501" width="0.2437%" height="15" fill="rgb(206,108,24)" fg:x="131" fg:w="3"/><text x="10.8918%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="10.7230%" y="485" width="0.1625%" height="15" fill="rgb(234,204,42)" fg:x="132" fg:w="2"/><text x="10.9730%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="10.7230%" y="469" width="0.1625%" height="15" fill="rgb(229,2,11)" fg:x="132" fg:w="2"/><text x="10.9730%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.8042%" y="453" width="0.0812%" height="15" fill="rgb(221,20,48)" fg:x="133" fg:w="1"/><text x="11.0542%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.8042%" y="437" width="0.0812%" height="15" fill="rgb(244,164,10)" fg:x="133" fg:w="1"/><text x="11.0542%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.8042%" y="421" width="0.0812%" height="15" fill="rgb(243,229,2)" fg:x="133" fg:w="1"/><text x="11.0542%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.8042%" y="405" width="0.0812%" height="15" fill="rgb(232,131,37)" fg:x="133" fg:w="1"/><text x="11.0542%" y="415.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="10.8855%" y="661" width="0.1625%" height="15" fill="rgb(217,156,11)" fg:x="134" fg:w="2"/><text x="11.1355%" y="671.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="10.9667%" y="645" width="0.0812%" height="15" fill="rgb(239,99,48)" fg:x="135" fg:w="1"/><text x="11.2167%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.9667%" y="629" width="0.0812%" height="15" fill="rgb(231,209,9)" fg:x="135" fg:w="1"/><text x="11.2167%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.9667%" y="613" width="0.0812%" height="15" fill="rgb(254,97,27)" fg:x="135" fg:w="1"/><text x="11.2167%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="11.1292%" y="565" width="0.2437%" height="15" fill="rgb(223,151,38)" fg:x="137" fg:w="3"/><text x="11.3792%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="11.1292%" y="549" width="0.2437%" height="15" fill="rgb(219,206,35)" fg:x="137" fg:w="3"/><text x="11.3792%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="11.1292%" y="533" width="0.2437%" height="15" fill="rgb(216,130,31)" fg:x="137" fg:w="3"/><text x="11.3792%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="11.1292%" y="517" width="0.2437%" height="15" fill="rgb(251,97,34)" fg:x="137" fg:w="3"/><text x="11.3792%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="11.1292%" y="501" width="0.2437%" height="15" fill="rgb(246,159,47)" fg:x="137" fg:w="3"/><text x="11.3792%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.2916%" y="485" width="0.0812%" height="15" fill="rgb(232,87,10)" fg:x="139" fg:w="1"/><text x="11.5416%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.2916%" y="469" width="0.0812%" height="15" fill="rgb(249,1,37)" fg:x="139" fg:w="1"/><text x="11.5416%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.2916%" y="453" width="0.0812%" height="15" fill="rgb(239,135,14)" fg:x="139" fg:w="1"/><text x="11.5416%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.2916%" y="437" width="0.0812%" height="15" fill="rgb(253,116,46)" fg:x="139" fg:w="1"/><text x="11.5416%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.2916%" y="421" width="0.0812%" height="15" fill="rgb(222,217,37)" fg:x="139" fg:w="1"/><text x="11.5416%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.41%)</title><rect x="11.0479%" y="613" width="0.4062%" height="15" fill="rgb(252,96,8)" fg:x="136" fg:w="5"/><text x="11.2979%" y="623.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.41%)</title><rect x="11.0479%" y="597" width="0.4062%" height="15" fill="rgb(254,103,41)" fg:x="136" fg:w="5"/><text x="11.2979%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.41%)</title><rect x="11.0479%" y="581" width="0.4062%" height="15" fill="rgb(218,213,19)" fg:x="136" fg:w="5"/><text x="11.2979%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="11.3729%" y="565" width="0.0812%" height="15" fill="rgb(253,95,21)" fg:x="140" fg:w="1"/><text x="11.6229%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="11.3729%" y="549" width="0.0812%" height="15" fill="rgb(229,26,28)" fg:x="140" fg:w="1"/><text x="11.6229%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.3729%" y="533" width="0.0812%" height="15" fill="rgb(230,129,16)" fg:x="140" fg:w="1"/><text x="11.6229%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.3729%" y="517" width="0.0812%" height="15" fill="rgb(236,126,17)" fg:x="140" fg:w="1"/><text x="11.6229%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.4541%" y="501" width="0.0812%" height="15" fill="rgb(209,33,33)" fg:x="141" fg:w="1"/><text x="11.7041%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.4541%" y="485" width="0.0812%" height="15" fill="rgb(227,85,29)" fg:x="141" fg:w="1"/><text x="11.7041%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.4541%" y="469" width="0.0812%" height="15" fill="rgb(241,53,46)" fg:x="141" fg:w="1"/><text x="11.7041%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.4541%" y="453" width="0.0812%" height="15" fill="rgb(228,167,53)" fg:x="141" fg:w="1"/><text x="11.7041%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.4541%" y="437" width="0.0812%" height="15" fill="rgb(238,195,45)" fg:x="141" fg:w="1"/><text x="11.7041%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.4541%" y="421" width="0.0812%" height="15" fill="rgb(252,124,45)" fg:x="141" fg:w="1"/><text x="11.7041%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.4541%" y="405" width="0.0812%" height="15" fill="rgb(251,38,35)" fg:x="141" fg:w="1"/><text x="11.7041%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.4541%" y="389" width="0.0812%" height="15" fill="rgb(227,33,2)" fg:x="141" fg:w="1"/><text x="11.7041%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.4541%" y="373" width="0.0812%" height="15" fill="rgb(223,157,46)" fg:x="141" fg:w="1"/><text x="11.7041%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.4541%" y="357" width="0.0812%" height="15" fill="rgb(222,78,41)" fg:x="141" fg:w="1"/><text x="11.7041%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.4541%" y="341" width="0.0812%" height="15" fill="rgb(248,176,11)" fg:x="141" fg:w="1"/><text x="11.7041%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.4541%" y="325" width="0.0812%" height="15" fill="rgb(241,221,18)" fg:x="141" fg:w="1"/><text x="11.7041%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.4541%" y="309" width="0.0812%" height="15" fill="rgb(218,85,22)" fg:x="141" fg:w="1"/><text x="11.7041%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.4541%" y="549" width="0.1625%" height="15" fill="rgb(222,223,7)" fg:x="141" fg:w="2"/><text x="11.7041%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.4541%" y="533" width="0.1625%" height="15" fill="rgb(254,59,39)" fg:x="141" fg:w="2"/><text x="11.7041%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.4541%" y="517" width="0.1625%" height="15" fill="rgb(247,100,27)" fg:x="141" fg:w="2"/><text x="11.7041%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.5353%" y="501" width="0.0812%" height="15" fill="rgb(237,207,10)" fg:x="142" fg:w="1"/><text x="11.7853%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.5353%" y="485" width="0.0812%" height="15" fill="rgb(220,121,28)" fg:x="142" fg:w="1"/><text x="11.7853%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.5353%" y="469" width="0.0812%" height="15" fill="rgb(213,223,20)" fg:x="142" fg:w="1"/><text x="11.7853%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.5353%" y="453" width="0.0812%" height="15" fill="rgb(205,121,27)" fg:x="142" fg:w="1"/><text x="11.7853%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.5353%" y="437" width="0.0812%" height="15" fill="rgb(253,24,53)" fg:x="142" fg:w="1"/><text x="11.7853%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="11.5353%" y="421" width="0.0812%" height="15" fill="rgb(224,224,47)" fg:x="142" fg:w="1"/><text x="11.7853%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="11.5353%" y="405" width="0.0812%" height="15" fill="rgb(250,125,36)" fg:x="142" fg:w="1"/><text x="11.7853%" y="415.50"></text></g><g><title>plugins_core::build::Build::holding (21 samples, 1.71%)</title><rect x="9.9919%" y="693" width="1.7059%" height="15" fill="rgb(240,144,38)" fg:x="123" fg:w="21"/><text x="10.2419%" y="703.50"></text></g><g><title>plugins_core::tools::set_container (17 samples, 1.38%)</title><rect x="10.3168%" y="677" width="1.3810%" height="15" fill="rgb(250,15,50)" fg:x="127" fg:w="17"/><text x="10.5668%" y="687.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (8 samples, 0.65%)</title><rect x="11.0479%" y="661" width="0.6499%" height="15" fill="rgb(210,24,26)" fg:x="136" fg:w="8"/><text x="11.2979%" y="671.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.65%)</title><rect x="11.0479%" y="645" width="0.6499%" height="15" fill="rgb(234,53,53)" fg:x="136" fg:w="8"/><text x="11.2979%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (8 samples, 0.65%)</title><rect x="11.0479%" y="629" width="0.6499%" height="15" fill="rgb(208,108,28)" fg:x="136" fg:w="8"/><text x="11.2979%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="11.4541%" y="613" width="0.2437%" height="15" fill="rgb(227,143,7)" fg:x="141" fg:w="3"/><text x="11.7041%" y="623.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="11.4541%" y="597" width="0.2437%" height="15" fill="rgb(238,189,38)" fg:x="141" fg:w="3"/><text x="11.7041%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="11.4541%" y="581" width="0.2437%" height="15" fill="rgb(222,69,15)" fg:x="141" fg:w="3"/><text x="11.7041%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="11.4541%" y="565" width="0.2437%" height="15" fill="rgb(213,169,7)" fg:x="141" fg:w="3"/><text x="11.7041%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.6166%" y="549" width="0.0812%" height="15" fill="rgb(251,219,4)" fg:x="143" fg:w="1"/><text x="11.8666%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="11.6978%" y="629" width="0.0812%" height="15" fill="rgb(241,55,40)" fg:x="144" fg:w="1"/><text x="11.9478%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="11.6978%" y="613" width="0.0812%" height="15" fill="rgb(243,57,30)" fg:x="144" fg:w="1"/><text x="11.9478%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.6978%" y="597" width="0.0812%" height="15" fill="rgb(234,50,30)" fg:x="144" fg:w="1"/><text x="11.9478%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.6978%" y="581" width="0.0812%" height="15" fill="rgb(239,23,42)" fg:x="144" fg:w="1"/><text x="11.9478%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.6978%" y="565" width="0.0812%" height="15" fill="rgb(217,38,19)" fg:x="144" fg:w="1"/><text x="11.9478%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.6978%" y="549" width="0.0812%" height="15" fill="rgb(215,179,16)" fg:x="144" fg:w="1"/><text x="11.9478%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.6978%" y="533" width="0.0812%" height="15" fill="rgb(254,21,37)" fg:x="144" fg:w="1"/><text x="11.9478%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="11.6978%" y="517" width="0.0812%" height="15" fill="rgb(219,207,48)" fg:x="144" fg:w="1"/><text x="11.9478%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.6978%" y="501" width="0.0812%" height="15" fill="rgb(227,225,41)" fg:x="144" fg:w="1"/><text x="11.9478%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="11.6978%" y="485" width="0.0812%" height="15" fill="rgb(223,130,1)" fg:x="144" fg:w="1"/><text x="11.9478%" y="495.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="11.6978%" y="693" width="0.1625%" height="15" fill="rgb(249,54,42)" fg:x="144" fg:w="2"/><text x="11.9478%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="11.6978%" y="677" width="0.1625%" height="15" fill="rgb(248,69,25)" fg:x="144" fg:w="2"/><text x="11.9478%" y="687.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="11.6978%" y="661" width="0.1625%" height="15" fill="rgb(234,21,32)" fg:x="144" fg:w="2"/><text x="11.9478%" y="671.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="11.6978%" y="645" width="0.1625%" height="15" fill="rgb(252,136,6)" fg:x="144" fg:w="2"/><text x="11.9478%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="11.7790%" y="629" width="0.0812%" height="15" fill="rgb(245,87,12)" fg:x="145" fg:w="1"/><text x="12.0290%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="11.7790%" y="613" width="0.0812%" height="15" fill="rgb(208,12,15)" fg:x="145" fg:w="1"/><text x="12.0290%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="11.7790%" y="597" width="0.0812%" height="15" fill="rgb(250,98,2)" fg:x="145" fg:w="1"/><text x="12.0290%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.7790%" y="581" width="0.0812%" height="15" fill="rgb(205,213,15)" fg:x="145" fg:w="1"/><text x="12.0290%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.7790%" y="565" width="0.0812%" height="15" fill="rgb(248,192,44)" fg:x="145" fg:w="1"/><text x="12.0290%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.7790%" y="549" width="0.0812%" height="15" fill="rgb(221,89,17)" fg:x="145" fg:w="1"/><text x="12.0290%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.7790%" y="533" width="0.0812%" height="15" fill="rgb(209,55,3)" fg:x="145" fg:w="1"/><text x="12.0290%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.7790%" y="517" width="0.0812%" height="15" fill="rgb(247,23,45)" fg:x="145" fg:w="1"/><text x="12.0290%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.7790%" y="501" width="0.0812%" height="15" fill="rgb(235,152,23)" fg:x="145" fg:w="1"/><text x="12.0290%" y="511.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="11.8603%" y="613" width="0.0812%" height="15" fill="rgb(244,63,13)" fg:x="146" fg:w="1"/><text x="12.1103%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="11.8603%" y="597" width="0.0812%" height="15" fill="rgb(227,30,37)" fg:x="146" fg:w="1"/><text x="12.1103%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="11.8603%" y="677" width="0.1625%" height="15" fill="rgb(224,49,42)" fg:x="146" fg:w="2"/><text x="12.1103%" y="687.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="11.8603%" y="661" width="0.1625%" height="15" fill="rgb(218,129,5)" fg:x="146" fg:w="2"/><text x="12.1103%" y="671.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="11.8603%" y="645" width="0.1625%" height="15" fill="rgb(240,199,54)" fg:x="146" fg:w="2"/><text x="12.1103%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="11.8603%" y="629" width="0.1625%" height="15" fill="rgb(234,31,13)" fg:x="146" fg:w="2"/><text x="12.1103%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="11.9415%" y="613" width="0.0812%" height="15" fill="rgb(219,73,54)" fg:x="147" fg:w="1"/><text x="12.1915%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.9415%" y="597" width="0.0812%" height="15" fill="rgb(251,162,10)" fg:x="147" fg:w="1"/><text x="12.1915%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.9415%" y="581" width="0.0812%" height="15" fill="rgb(240,138,47)" fg:x="147" fg:w="1"/><text x="12.1915%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.9415%" y="565" width="0.0812%" height="15" fill="rgb(216,138,26)" fg:x="147" fg:w="1"/><text x="12.1915%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.9415%" y="549" width="0.0812%" height="15" fill="rgb(243,17,35)" fg:x="147" fg:w="1"/><text x="12.1915%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="12.0227%" y="629" width="0.0812%" height="15" fill="rgb(241,60,18)" fg:x="148" fg:w="1"/><text x="12.2727%" y="639.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="12.1040%" y="549" width="0.0812%" height="15" fill="rgb(234,2,44)" fg:x="149" fg:w="1"/><text x="12.3540%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.2665%" y="453" width="0.0812%" height="15" fill="rgb(225,225,33)" fg:x="151" fg:w="1"/><text x="12.5165%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.2665%" y="437" width="0.0812%" height="15" fill="rgb(234,50,31)" fg:x="151" fg:w="1"/><text x="12.5165%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.2665%" y="469" width="0.1625%" height="15" fill="rgb(249,6,25)" fg:x="151" fg:w="2"/><text x="12.5165%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.3477%" y="453" width="0.0812%" height="15" fill="rgb(241,5,17)" fg:x="152" fg:w="1"/><text x="12.5977%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="12.1852%" y="517" width="0.3249%" height="15" fill="rgb(207,116,10)" fg:x="150" fg:w="4"/><text x="12.4352%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="12.1852%" y="501" width="0.3249%" height="15" fill="rgb(222,128,18)" fg:x="150" fg:w="4"/><text x="12.4352%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="12.1852%" y="485" width="0.3249%" height="15" fill="rgb(229,109,25)" fg:x="150" fg:w="4"/><text x="12.4352%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.4289%" y="469" width="0.0812%" height="15" fill="rgb(222,102,25)" fg:x="153" fg:w="1"/><text x="12.6789%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.4289%" y="453" width="0.0812%" height="15" fill="rgb(239,211,5)" fg:x="153" fg:w="1"/><text x="12.6789%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.4289%" y="437" width="0.0812%" height="15" fill="rgb(223,136,26)" fg:x="153" fg:w="1"/><text x="12.6789%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.4289%" y="421" width="0.0812%" height="15" fill="rgb(227,30,15)" fg:x="153" fg:w="1"/><text x="12.6789%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.4289%" y="405" width="0.0812%" height="15" fill="rgb(247,76,4)" fg:x="153" fg:w="1"/><text x="12.6789%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.4289%" y="389" width="0.0812%" height="15" fill="rgb(245,38,48)" fg:x="153" fg:w="1"/><text x="12.6789%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.4289%" y="373" width="0.0812%" height="15" fill="rgb(210,220,14)" fg:x="153" fg:w="1"/><text x="12.6789%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.4289%" y="357" width="0.0812%" height="15" fill="rgb(224,60,51)" fg:x="153" fg:w="1"/><text x="12.6789%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.4289%" y="341" width="0.0812%" height="15" fill="rgb(212,133,49)" fg:x="153" fg:w="1"/><text x="12.6789%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.4289%" y="325" width="0.0812%" height="15" fill="rgb(231,39,22)" fg:x="153" fg:w="1"/><text x="12.6789%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.4289%" y="309" width="0.0812%" height="15" fill="rgb(236,173,22)" fg:x="153" fg:w="1"/><text x="12.6789%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.4289%" y="293" width="0.0812%" height="15" fill="rgb(210,70,0)" fg:x="153" fg:w="1"/><text x="12.6789%" y="303.50"></text></g><g><title>plugins_core::build::Build::into_entry (6 samples, 0.49%)</title><rect x="12.1040%" y="629" width="0.4874%" height="15" fill="rgb(215,170,11)" fg:x="149" fg:w="6"/><text x="12.3540%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.49%)</title><rect x="12.1040%" y="613" width="0.4874%" height="15" fill="rgb(220,154,28)" fg:x="149" fg:w="6"/><text x="12.3540%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (6 samples, 0.49%)</title><rect x="12.1040%" y="597" width="0.4874%" height="15" fill="rgb(240,160,41)" fg:x="149" fg:w="6"/><text x="12.3540%" y="607.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (6 samples, 0.49%)</title><rect x="12.1040%" y="581" width="0.4874%" height="15" fill="rgb(243,215,41)" fg:x="149" fg:w="6"/><text x="12.3540%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.49%)</title><rect x="12.1040%" y="565" width="0.4874%" height="15" fill="rgb(214,208,31)" fg:x="149" fg:w="6"/><text x="12.3540%" y="575.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.41%)</title><rect x="12.1852%" y="549" width="0.4062%" height="15" fill="rgb(247,57,22)" fg:x="150" fg:w="5"/><text x="12.4352%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.41%)</title><rect x="12.1852%" y="533" width="0.4062%" height="15" fill="rgb(228,73,52)" fg:x="150" fg:w="5"/><text x="12.4352%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.5102%" y="517" width="0.0812%" height="15" fill="rgb(252,60,9)" fg:x="154" fg:w="1"/><text x="12.7602%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.5102%" y="501" width="0.0812%" height="15" fill="rgb(233,9,51)" fg:x="154" fg:w="1"/><text x="12.7602%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.5102%" y="485" width="0.0812%" height="15" fill="rgb(223,67,14)" fg:x="154" fg:w="1"/><text x="12.7602%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.5102%" y="469" width="0.0812%" height="15" fill="rgb(222,86,2)" fg:x="154" fg:w="1"/><text x="12.7602%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.5914%" y="469" width="0.0812%" height="15" fill="rgb(243,58,54)" fg:x="155" fg:w="1"/><text x="12.8414%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.5914%" y="453" width="0.0812%" height="15" fill="rgb(210,200,39)" fg:x="155" fg:w="1"/><text x="12.8414%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.5914%" y="437" width="0.0812%" height="15" fill="rgb(238,135,9)" fg:x="155" fg:w="1"/><text x="12.8414%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.5914%" y="421" width="0.0812%" height="15" fill="rgb(232,179,7)" fg:x="155" fg:w="1"/><text x="12.8414%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.5914%" y="405" width="0.0812%" height="15" fill="rgb(245,65,41)" fg:x="155" fg:w="1"/><text x="12.8414%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.5914%" y="389" width="0.0812%" height="15" fill="rgb(227,43,8)" fg:x="155" fg:w="1"/><text x="12.8414%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.5914%" y="373" width="0.0812%" height="15" fill="rgb(235,91,14)" fg:x="155" fg:w="1"/><text x="12.8414%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.5914%" y="357" width="0.0812%" height="15" fill="rgb(235,219,31)" fg:x="155" fg:w="1"/><text x="12.8414%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.5914%" y="341" width="0.0812%" height="15" fill="rgb(227,121,25)" fg:x="155" fg:w="1"/><text x="12.8414%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.5914%" y="325" width="0.0812%" height="15" fill="rgb(254,129,24)" fg:x="155" fg:w="1"/><text x="12.8414%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.5914%" y="309" width="0.0812%" height="15" fill="rgb(226,144,49)" fg:x="155" fg:w="1"/><text x="12.8414%" y="319.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="12.5914%" y="293" width="0.0812%" height="15" fill="rgb(214,187,32)" fg:x="155" fg:w="1"/><text x="12.8414%" y="303.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="12.5914%" y="277" width="0.0812%" height="15" fill="rgb(243,129,46)" fg:x="155" fg:w="1"/><text x="12.8414%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="12.5914%" y="565" width="0.1625%" height="15" fill="rgb(221,185,35)" fg:x="155" fg:w="2"/><text x="12.8414%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="12.5914%" y="549" width="0.1625%" height="15" fill="rgb(205,0,32)" fg:x="155" fg:w="2"/><text x="12.8414%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="12.5914%" y="533" width="0.1625%" height="15" fill="rgb(229,179,12)" fg:x="155" fg:w="2"/><text x="12.8414%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.5914%" y="517" width="0.1625%" height="15" fill="rgb(252,107,19)" fg:x="155" fg:w="2"/><text x="12.8414%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.5914%" y="501" width="0.1625%" height="15" fill="rgb(220,95,27)" fg:x="155" fg:w="2"/><text x="12.8414%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.5914%" y="485" width="0.1625%" height="15" fill="rgb(240,113,40)" fg:x="155" fg:w="2"/><text x="12.8414%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.6726%" y="469" width="0.0812%" height="15" fill="rgb(208,4,43)" fg:x="156" fg:w="1"/><text x="12.9226%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="12.7539%" y="533" width="0.0812%" height="15" fill="rgb(247,189,30)" fg:x="157" fg:w="1"/><text x="13.0039%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.7539%" y="517" width="0.0812%" height="15" fill="rgb(231,157,17)" fg:x="157" fg:w="1"/><text x="13.0039%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="12.5914%" y="613" width="0.3249%" height="15" fill="rgb(224,139,6)" fg:x="155" fg:w="4"/><text x="12.8414%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="12.5914%" y="597" width="0.3249%" height="15" fill="rgb(223,83,16)" fg:x="155" fg:w="4"/><text x="12.8414%" y="607.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="12.5914%" y="581" width="0.3249%" height="15" fill="rgb(232,211,20)" fg:x="155" fg:w="4"/><text x="12.8414%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="12.7539%" y="565" width="0.1625%" height="15" fill="rgb(225,203,35)" fg:x="157" fg:w="2"/><text x="13.0039%" y="575.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="12.7539%" y="549" width="0.1625%" height="15" fill="rgb(215,211,44)" fg:x="157" fg:w="2"/><text x="13.0039%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="12.8351%" y="533" width="0.0812%" height="15" fill="rgb(248,213,26)" fg:x="158" fg:w="1"/><text x="13.0851%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.8351%" y="517" width="0.0812%" height="15" fill="rgb(214,23,52)" fg:x="158" fg:w="1"/><text x="13.0851%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.8351%" y="501" width="0.0812%" height="15" fill="rgb(225,173,50)" fg:x="158" fg:w="1"/><text x="13.0851%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.8351%" y="485" width="0.0812%" height="15" fill="rgb(206,150,22)" fg:x="158" fg:w="1"/><text x="13.0851%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.8351%" y="469" width="0.0812%" height="15" fill="rgb(239,64,23)" fg:x="158" fg:w="1"/><text x="13.0851%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.8351%" y="453" width="0.0812%" height="15" fill="rgb(242,50,38)" fg:x="158" fg:w="1"/><text x="13.0851%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.8351%" y="437" width="0.0812%" height="15" fill="rgb(217,91,15)" fg:x="158" fg:w="1"/><text x="13.0851%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.8351%" y="421" width="0.0812%" height="15" fill="rgb(230,172,6)" fg:x="158" fg:w="1"/><text x="13.0851%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.8351%" y="405" width="0.0812%" height="15" fill="rgb(221,98,26)" fg:x="158" fg:w="1"/><text x="13.0851%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.8351%" y="389" width="0.0812%" height="15" fill="rgb(227,210,45)" fg:x="158" fg:w="1"/><text x="13.0851%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.8351%" y="373" width="0.0812%" height="15" fill="rgb(206,8,30)" fg:x="158" fg:w="1"/><text x="13.0851%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.8351%" y="357" width="0.0812%" height="15" fill="rgb(241,219,17)" fg:x="158" fg:w="1"/><text x="13.0851%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.8351%" y="341" width="0.0812%" height="15" fill="rgb(247,121,29)" fg:x="158" fg:w="1"/><text x="13.0851%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.8351%" y="325" width="0.0812%" height="15" fill="rgb(219,169,49)" fg:x="158" fg:w="1"/><text x="13.0851%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.8351%" y="309" width="0.0812%" height="15" fill="rgb(253,49,49)" fg:x="158" fg:w="1"/><text x="13.0851%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.8351%" y="293" width="0.0812%" height="15" fill="rgb(217,178,3)" fg:x="158" fg:w="1"/><text x="13.0851%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.8351%" y="277" width="0.0812%" height="15" fill="rgb(234,73,37)" fg:x="158" fg:w="1"/><text x="13.0851%" y="287.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="12.9163%" y="597" width="0.1625%" height="15" fill="rgb(250,98,22)" fg:x="159" fg:w="2"/><text x="13.1663%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="12.9163%" y="581" width="0.1625%" height="15" fill="rgb(220,108,37)" fg:x="159" fg:w="2"/><text x="13.1663%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="12.9163%" y="565" width="0.1625%" height="15" fill="rgb(225,168,10)" fg:x="159" fg:w="2"/><text x="13.1663%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="12.9163%" y="549" width="0.1625%" height="15" fill="rgb(247,215,21)" fg:x="159" fg:w="2"/><text x="13.1663%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="12.9163%" y="533" width="0.1625%" height="15" fill="rgb(253,189,31)" fg:x="159" fg:w="2"/><text x="13.1663%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.9976%" y="517" width="0.0812%" height="15" fill="rgb(241,54,22)" fg:x="160" fg:w="1"/><text x="13.2476%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.9976%" y="501" width="0.0812%" height="15" fill="rgb(211,87,4)" fg:x="160" fg:w="1"/><text x="13.2476%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.9976%" y="485" width="0.0812%" height="15" fill="rgb(245,112,24)" fg:x="160" fg:w="1"/><text x="13.2476%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.9976%" y="469" width="0.0812%" height="15" fill="rgb(235,190,41)" fg:x="160" fg:w="1"/><text x="13.2476%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="12.9976%" y="453" width="0.0812%" height="15" fill="rgb(214,89,8)" fg:x="160" fg:w="1"/><text x="13.2476%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.9976%" y="437" width="0.0812%" height="15" fill="rgb(249,155,35)" fg:x="160" fg:w="1"/><text x="13.2476%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.9976%" y="421" width="0.0812%" height="15" fill="rgb(249,88,26)" fg:x="160" fg:w="1"/><text x="13.2476%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.9976%" y="405" width="0.0812%" height="15" fill="rgb(232,56,8)" fg:x="160" fg:w="1"/><text x="13.2476%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.9976%" y="389" width="0.0812%" height="15" fill="rgb(240,95,3)" fg:x="160" fg:w="1"/><text x="13.2476%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.9976%" y="373" width="0.0812%" height="15" fill="rgb(222,44,28)" fg:x="160" fg:w="1"/><text x="13.2476%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="12.9976%" y="357" width="0.0812%" height="15" fill="rgb(234,16,30)" fg:x="160" fg:w="1"/><text x="13.2476%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.1600%" y="581" width="0.0812%" height="15" fill="rgb(223,26,17)" fg:x="162" fg:w="1"/><text x="13.4100%" y="591.50"></text></g><g><title>plugins_core::build::Build::leads_to (9 samples, 0.73%)</title><rect x="12.5914%" y="629" width="0.7311%" height="15" fill="rgb(239,187,47)" fg:x="155" fg:w="9"/><text x="12.8414%" y="639.50"></text></g><g><title>plugins_core::tools::leads_to (5 samples, 0.41%)</title><rect x="12.9163%" y="613" width="0.4062%" height="15" fill="rgb(247,102,50)" fg:x="159" fg:w="5"/><text x="13.1663%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="13.0788%" y="597" width="0.2437%" height="15" fill="rgb(231,216,22)" fg:x="161" fg:w="3"/><text x="13.3288%" y="607.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="13.2413%" y="581" width="0.0812%" height="15" fill="rgb(216,201,26)" fg:x="163" fg:w="1"/><text x="13.4913%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.2413%" y="565" width="0.0812%" height="15" fill="rgb(214,186,23)" fg:x="163" fg:w="1"/><text x="13.4913%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="13.2413%" y="549" width="0.0812%" height="15" fill="rgb(235,184,4)" fg:x="163" fg:w="1"/><text x="13.4913%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.2413%" y="533" width="0.0812%" height="15" fill="rgb(244,46,17)" fg:x="163" fg:w="1"/><text x="13.4913%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="13.3225%" y="469" width="0.0812%" height="15" fill="rgb(248,74,46)" fg:x="164" fg:w="1"/><text x="13.5725%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.3225%" y="453" width="0.0812%" height="15" fill="rgb(243,79,5)" fg:x="164" fg:w="1"/><text x="13.5725%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.3225%" y="437" width="0.0812%" height="15" fill="rgb(213,148,1)" fg:x="164" fg:w="1"/><text x="13.5725%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="13.3225%" y="421" width="0.0812%" height="15" fill="rgb(221,30,0)" fg:x="164" fg:w="1"/><text x="13.5725%" y="431.50"></text></g><g><title>core::iter::adapters::try_process (18 samples, 1.46%)</title><rect x="12.0227%" y="677" width="1.4622%" height="15" fill="rgb(207,85,29)" fg:x="148" fg:w="18"/><text x="12.2727%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (18 samples, 1.46%)</title><rect x="12.0227%" y="661" width="1.4622%" height="15" fill="rgb(239,31,46)" fg:x="148" fg:w="18"/><text x="12.2727%" y="671.50"></text></g><g><title>plugins_core::build::QuickThing::make (18 samples, 1.46%)</title><rect x="12.0227%" y="645" width="1.4622%" height="15" fill="rgb(219,6,1)" fg:x="148" fg:w="18"/><text x="12.2727%" y="655.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="13.3225%" y="629" width="0.1625%" height="15" fill="rgb(229,90,29)" fg:x="164" fg:w="2"/><text x="13.5725%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="13.3225%" y="613" width="0.1625%" height="15" fill="rgb(242,201,42)" fg:x="164" fg:w="2"/><text x="13.5725%" y="623.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="13.3225%" y="597" width="0.1625%" height="15" fill="rgb(243,80,54)" fg:x="164" fg:w="2"/><text x="13.5725%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="13.3225%" y="581" width="0.1625%" height="15" fill="rgb(223,166,15)" fg:x="164" fg:w="2"/><text x="13.5725%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="13.3225%" y="565" width="0.1625%" height="15" fill="rgb(238,78,27)" fg:x="164" fg:w="2"/><text x="13.5725%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="13.3225%" y="549" width="0.1625%" height="15" fill="rgb(235,28,43)" fg:x="164" fg:w="2"/><text x="13.5725%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="13.3225%" y="533" width="0.1625%" height="15" fill="rgb(240,210,28)" fg:x="164" fg:w="2"/><text x="13.5725%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="13.3225%" y="517" width="0.1625%" height="15" fill="rgb(253,6,46)" fg:x="164" fg:w="2"/><text x="13.5725%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="13.3225%" y="501" width="0.1625%" height="15" fill="rgb(250,159,47)" fg:x="164" fg:w="2"/><text x="13.5725%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="13.3225%" y="485" width="0.1625%" height="15" fill="rgb(216,139,2)" fg:x="164" fg:w="2"/><text x="13.5725%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.4037%" y="469" width="0.0812%" height="15" fill="rgb(221,124,44)" fg:x="165" fg:w="1"/><text x="13.6537%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="13.4850%" y="645" width="0.0812%" height="15" fill="rgb(205,37,22)" fg:x="166" fg:w="1"/><text x="13.7350%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="13.5662%" y="645" width="0.0812%" height="15" fill="rgb(250,55,8)" fg:x="167" fg:w="1"/><text x="13.8162%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.5662%" y="629" width="0.0812%" height="15" fill="rgb(215,83,48)" fg:x="167" fg:w="1"/><text x="13.8162%" y="639.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="13.6474%" y="613" width="0.0812%" height="15" fill="rgb(253,2,32)" fg:x="168" fg:w="1"/><text x="13.8974%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="13.6474%" y="629" width="0.1625%" height="15" fill="rgb(236,67,28)" fg:x="168" fg:w="2"/><text x="13.8974%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.7287%" y="613" width="0.0812%" height="15" fill="rgb(252,55,15)" fg:x="169" fg:w="1"/><text x="13.9787%" y="623.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="13.6474%" y="645" width="0.2437%" height="15" fill="rgb(243,173,17)" fg:x="168" fg:w="3"/><text x="13.8974%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.8099%" y="629" width="0.0812%" height="15" fill="rgb(215,212,13)" fg:x="170" fg:w="1"/><text x="14.0599%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="14.0536%" y="597" width="0.1625%" height="15" fill="rgb(253,176,6)" fg:x="173" fg:w="2"/><text x="14.3036%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="14.0536%" y="581" width="0.1625%" height="15" fill="rgb(236,105,26)" fg:x="173" fg:w="2"/><text x="14.3036%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.1348%" y="565" width="0.0812%" height="15" fill="rgb(239,226,32)" fg:x="174" fg:w="1"/><text x="14.3848%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.1348%" y="549" width="0.0812%" height="15" fill="rgb(236,104,51)" fg:x="174" fg:w="1"/><text x="14.3848%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="14.2161%" y="581" width="0.0812%" height="15" fill="rgb(220,172,33)" fg:x="175" fg:w="1"/><text x="14.4661%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.41%)</title><rect x="14.2973%" y="581" width="0.4062%" height="15" fill="rgb(224,182,25)" fg:x="176" fg:w="5"/><text x="14.5473%" y="591.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="14.3786%" y="565" width="0.3249%" height="15" fill="rgb(236,184,24)" fg:x="177" fg:w="4"/><text x="14.6286%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="14.4598%" y="549" width="0.2437%" height="15" fill="rgb(241,221,14)" fg:x="178" fg:w="3"/><text x="14.7098%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="14.4598%" y="533" width="0.2437%" height="15" fill="rgb(227,146,5)" fg:x="178" fg:w="3"/><text x="14.7098%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="14.4598%" y="517" width="0.2437%" height="15" fill="rgb(214,15,23)" fg:x="178" fg:w="3"/><text x="14.7098%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="14.4598%" y="501" width="0.2437%" height="15" fill="rgb(233,157,31)" fg:x="178" fg:w="3"/><text x="14.7098%" y="511.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="14.4598%" y="485" width="0.2437%" height="15" fill="rgb(211,27,52)" fg:x="178" fg:w="3"/><text x="14.7098%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="14.7035%" y="565" width="0.0812%" height="15" fill="rgb(212,223,15)" fg:x="181" fg:w="1"/><text x="14.9535%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.7035%" y="549" width="0.0812%" height="15" fill="rgb(254,211,0)" fg:x="181" fg:w="1"/><text x="14.9535%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.7035%" y="533" width="0.0812%" height="15" fill="rgb(205,43,38)" fg:x="181" fg:w="1"/><text x="14.9535%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.7035%" y="517" width="0.0812%" height="15" fill="rgb(242,206,46)" fg:x="181" fg:w="1"/><text x="14.9535%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="14.7847%" y="565" width="0.0812%" height="15" fill="rgb(220,221,12)" fg:x="182" fg:w="1"/><text x="15.0347%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.7847%" y="549" width="0.0812%" height="15" fill="rgb(217,156,35)" fg:x="182" fg:w="1"/><text x="15.0347%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.7847%" y="533" width="0.0812%" height="15" fill="rgb(207,181,49)" fg:x="182" fg:w="1"/><text x="15.0347%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.7847%" y="517" width="0.0812%" height="15" fill="rgb(235,103,47)" fg:x="182" fg:w="1"/><text x="15.0347%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="14.8660%" y="549" width="0.1625%" height="15" fill="rgb(222,63,28)" fg:x="183" fg:w="2"/><text x="15.1160%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="14.8660%" y="533" width="0.1625%" height="15" fill="rgb(244,137,21)" fg:x="183" fg:w="2"/><text x="15.1160%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="15.0284%" y="533" width="0.1625%" height="15" fill="rgb(228,35,27)" fg:x="185" fg:w="2"/><text x="15.2784%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="15.0284%" y="517" width="0.1625%" height="15" fill="rgb(226,191,41)" fg:x="185" fg:w="2"/><text x="15.2784%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="15.1909%" y="517" width="0.1625%" height="15" fill="rgb(210,154,3)" fg:x="187" fg:w="2"/><text x="15.4409%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.2721%" y="501" width="0.0812%" height="15" fill="rgb(216,60,49)" fg:x="188" fg:w="1"/><text x="15.5221%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.2721%" y="485" width="0.0812%" height="15" fill="rgb(226,17,20)" fg:x="188" fg:w="1"/><text x="15.5221%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="15.3534%" y="501" width="0.0812%" height="15" fill="rgb(206,115,35)" fg:x="189" fg:w="1"/><text x="15.6034%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.3534%" y="485" width="0.0812%" height="15" fill="rgb(227,88,1)" fg:x="189" fg:w="1"/><text x="15.6034%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.3534%" y="469" width="0.0812%" height="15" fill="rgb(230,222,24)" fg:x="189" fg:w="1"/><text x="15.6034%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="15.0284%" y="549" width="0.4874%" height="15" fill="rgb(214,124,32)" fg:x="185" fg:w="6"/><text x="15.2784%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="15.1909%" y="533" width="0.3249%" height="15" fill="rgb(240,41,36)" fg:x="187" fg:w="4"/><text x="15.4409%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="15.3534%" y="517" width="0.1625%" height="15" fill="rgb(221,17,52)" fg:x="189" fg:w="2"/><text x="15.6034%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="15.4346%" y="501" width="0.0812%" height="15" fill="rgb(252,70,16)" fg:x="190" fg:w="1"/><text x="15.6846%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.4346%" y="485" width="0.0812%" height="15" fill="rgb(250,177,4)" fg:x="190" fg:w="1"/><text x="15.6846%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.4346%" y="469" width="0.0812%" height="15" fill="rgb(240,188,47)" fg:x="190" fg:w="1"/><text x="15.6846%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.4346%" y="453" width="0.0812%" height="15" fill="rgb(215,92,12)" fg:x="190" fg:w="1"/><text x="15.6846%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.89%)</title><rect x="14.7035%" y="581" width="0.8936%" height="15" fill="rgb(242,110,29)" fg:x="181" fg:w="11"/><text x="14.9535%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.73%)</title><rect x="14.8660%" y="565" width="0.7311%" height="15" fill="rgb(208,211,26)" fg:x="183" fg:w="9"/><text x="15.1160%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.5158%" y="549" width="0.0812%" height="15" fill="rgb(244,147,6)" fg:x="191" fg:w="1"/><text x="15.7658%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.5158%" y="533" width="0.0812%" height="15" fill="rgb(211,130,42)" fg:x="191" fg:w="1"/><text x="15.7658%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.5158%" y="517" width="0.0812%" height="15" fill="rgb(220,63,1)" fg:x="191" fg:w="1"/><text x="15.7658%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.46%)</title><rect x="14.2161%" y="597" width="1.4622%" height="15" fill="rgb(241,212,30)" fg:x="175" fg:w="18"/><text x="14.4661%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.5971%" y="581" width="0.0812%" height="15" fill="rgb(233,153,17)" fg:x="192" fg:w="1"/><text x="15.8471%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (22 samples, 1.79%)</title><rect x="13.9724%" y="613" width="1.7872%" height="15" fill="rgb(236,3,10)" fg:x="172" fg:w="22"/><text x="14.2224%" y="623.50">&lt;..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.6783%" y="597" width="0.0812%" height="15" fill="rgb(232,41,21)" fg:x="193" fg:w="1"/><text x="15.9283%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.6783%" y="581" width="0.0812%" height="15" fill="rgb(206,63,51)" fg:x="193" fg:w="1"/><text x="15.9283%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.6783%" y="565" width="0.0812%" height="15" fill="rgb(250,214,3)" fg:x="193" fg:w="1"/><text x="15.9283%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="15.6783%" y="549" width="0.0812%" height="15" fill="rgb(254,89,27)" fg:x="193" fg:w="1"/><text x="15.9283%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="15.6783%" y="533" width="0.0812%" height="15" fill="rgb(249,41,14)" fg:x="193" fg:w="1"/><text x="15.9283%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.8408%" y="581" width="0.0812%" height="15" fill="rgb(221,196,51)" fg:x="195" fg:w="1"/><text x="16.0908%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.8408%" y="565" width="0.0812%" height="15" fill="rgb(214,116,26)" fg:x="195" fg:w="1"/><text x="16.0908%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.1657%" y="549" width="0.0812%" height="15" fill="rgb(236,67,7)" fg:x="199" fg:w="1"/><text x="16.4157%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.1657%" y="533" width="0.0812%" height="15" fill="rgb(253,179,32)" fg:x="199" fg:w="1"/><text x="16.4157%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="16.3282%" y="533" width="0.0812%" height="15" fill="rgb(218,33,15)" fg:x="201" fg:w="1"/><text x="16.5782%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.3282%" y="517" width="0.0812%" height="15" fill="rgb(217,202,41)" fg:x="201" fg:w="1"/><text x="16.5782%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.3282%" y="501" width="0.0812%" height="15" fill="rgb(234,133,5)" fg:x="201" fg:w="1"/><text x="16.5782%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.3282%" y="485" width="0.0812%" height="15" fill="rgb(240,47,40)" fg:x="201" fg:w="1"/><text x="16.5782%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="16.4907%" y="485" width="0.1625%" height="15" fill="rgb(234,166,26)" fg:x="203" fg:w="2"/><text x="16.7407%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.5719%" y="469" width="0.0812%" height="15" fill="rgb(244,125,51)" fg:x="204" fg:w="1"/><text x="16.8219%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="15.7595%" y="613" width="0.9748%" height="15" fill="rgb(229,171,11)" fg:x="194" fg:w="12"/><text x="16.0095%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.97%)</title><rect x="15.7595%" y="597" width="0.9748%" height="15" fill="rgb(224,38,45)" fg:x="194" fg:w="12"/><text x="16.0095%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="15.9220%" y="581" width="0.8123%" height="15" fill="rgb(237,27,7)" fg:x="196" fg:w="10"/><text x="16.1720%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="15.9220%" y="565" width="0.8123%" height="15" fill="rgb(216,52,7)" fg:x="196" fg:w="10"/><text x="16.1720%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="16.2470%" y="549" width="0.4874%" height="15" fill="rgb(243,11,11)" fg:x="200" fg:w="6"/><text x="16.4970%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="16.4094%" y="533" width="0.3249%" height="15" fill="rgb(253,167,20)" fg:x="202" fg:w="4"/><text x="16.6594%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="16.4094%" y="517" width="0.3249%" height="15" fill="rgb(215,207,5)" fg:x="202" fg:w="4"/><text x="16.6594%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="16.4907%" y="501" width="0.2437%" height="15" fill="rgb(252,127,31)" fg:x="203" fg:w="3"/><text x="16.7407%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.6531%" y="485" width="0.0812%" height="15" fill="rgb(209,106,27)" fg:x="205" fg:w="1"/><text x="16.9031%" y="495.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="16.7344%" y="597" width="0.0812%" height="15" fill="rgb(214,220,18)" fg:x="206" fg:w="1"/><text x="16.9844%" y="607.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="16.7344%" y="581" width="0.0812%" height="15" fill="rgb(237,89,12)" fg:x="206" fg:w="1"/><text x="16.9844%" y="591.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="16.7344%" y="565" width="0.0812%" height="15" fill="rgb(209,167,36)" fg:x="206" fg:w="1"/><text x="16.9844%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="16.8156%" y="565" width="0.3249%" height="15" fill="rgb(243,45,22)" fg:x="207" fg:w="4"/><text x="17.0656%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.0593%" y="549" width="0.0812%" height="15" fill="rgb(239,2,46)" fg:x="210" fg:w="1"/><text x="17.3093%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="17.1405%" y="565" width="0.1625%" height="15" fill="rgb(241,101,0)" fg:x="211" fg:w="2"/><text x="17.3905%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.2218%" y="549" width="0.0812%" height="15" fill="rgb(244,34,31)" fg:x="212" fg:w="1"/><text x="17.4718%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.2218%" y="533" width="0.0812%" height="15" fill="rgb(248,23,22)" fg:x="212" fg:w="1"/><text x="17.4718%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="17.4655%" y="501" width="0.0812%" height="15" fill="rgb(218,27,48)" fg:x="215" fg:w="1"/><text x="17.7155%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.4655%" y="485" width="0.0812%" height="15" fill="rgb(232,78,1)" fg:x="215" fg:w="1"/><text x="17.7155%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="17.4655%" y="517" width="0.1625%" height="15" fill="rgb(233,169,12)" fg:x="215" fg:w="2"/><text x="17.7155%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="17.5467%" y="501" width="0.0812%" height="15" fill="rgb(225,222,54)" fg:x="216" fg:w="1"/><text x="17.7967%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="17.5467%" y="485" width="0.0812%" height="15" fill="rgb(245,126,29)" fg:x="216" fg:w="1"/><text x="17.7967%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.5467%" y="469" width="0.0812%" height="15" fill="rgb(241,63,48)" fg:x="216" fg:w="1"/><text x="17.7967%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.5467%" y="453" width="0.0812%" height="15" fill="rgb(235,126,38)" fg:x="216" fg:w="1"/><text x="17.7967%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.5467%" y="437" width="0.0812%" height="15" fill="rgb(232,96,49)" fg:x="216" fg:w="1"/><text x="17.7967%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="17.6279%" y="485" width="0.1625%" height="15" fill="rgb(211,146,40)" fg:x="217" fg:w="2"/><text x="17.8779%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.8716%" y="453" width="0.0812%" height="15" fill="rgb(247,93,44)" fg:x="220" fg:w="1"/><text x="18.1216%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="17.9529%" y="437" width="0.1625%" height="15" fill="rgb(251,41,49)" fg:x="221" fg:w="2"/><text x="18.2029%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="17.9529%" y="421" width="0.1625%" height="15" fill="rgb(218,155,12)" fg:x="221" fg:w="2"/><text x="18.2029%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="17.9529%" y="405" width="0.1625%" height="15" fill="rgb(221,161,30)" fg:x="221" fg:w="2"/><text x="18.2029%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="17.9529%" y="389" width="0.1625%" height="15" fill="rgb(221,179,11)" fg:x="221" fg:w="2"/><text x="18.2029%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="17.9529%" y="373" width="0.1625%" height="15" fill="rgb(224,170,48)" fg:x="221" fg:w="2"/><text x="18.2029%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="17.9529%" y="357" width="0.1625%" height="15" fill="rgb(223,117,5)" fg:x="221" fg:w="2"/><text x="18.2029%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.73%)</title><rect x="17.4655%" y="533" width="0.7311%" height="15" fill="rgb(209,52,20)" fg:x="215" fg:w="9"/><text x="17.7155%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.57%)</title><rect x="17.6279%" y="517" width="0.5686%" height="15" fill="rgb(209,19,41)" fg:x="217" fg:w="7"/><text x="17.8779%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.57%)</title><rect x="17.6279%" y="501" width="0.5686%" height="15" fill="rgb(210,177,12)" fg:x="217" fg:w="7"/><text x="17.8779%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.41%)</title><rect x="17.7904%" y="485" width="0.4062%" height="15" fill="rgb(211,159,37)" fg:x="219" fg:w="5"/><text x="18.0404%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="17.8716%" y="469" width="0.3249%" height="15" fill="rgb(209,20,2)" fg:x="220" fg:w="4"/><text x="18.1216%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="17.9529%" y="453" width="0.2437%" height="15" fill="rgb(244,3,46)" fg:x="221" fg:w="3"/><text x="18.2029%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.1154%" y="437" width="0.0812%" height="15" fill="rgb(220,94,38)" fg:x="223" fg:w="1"/><text x="18.3654%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.1966%" y="517" width="0.0812%" height="15" fill="rgb(253,14,31)" fg:x="224" fg:w="1"/><text x="18.4466%" y="527.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (55 samples, 4.47%)</title><rect x="13.8911%" y="645" width="4.4679%" height="15" fill="rgb(234,176,13)" fg:x="171" fg:w="55"/><text x="14.1411%" y="655.50">engin..</text></g><g><title>engine::session::SavesEntities::check_for_changes (55 samples, 4.47%)</title><rect x="13.8911%" y="629" width="4.4679%" height="15" fill="rgb(218,62,25)" fg:x="171" fg:w="55"/><text x="14.1411%" y="639.50">engin..</text></g><g><title>kernel::model::any_entity_changes (20 samples, 1.62%)</title><rect x="16.7344%" y="613" width="1.6247%" height="15" fill="rgb(216,124,40)" fg:x="206" fg:w="20"/><text x="16.9844%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (19 samples, 1.54%)</title><rect x="16.8156%" y="597" width="1.5435%" height="15" fill="rgb(228,170,12)" fg:x="207" fg:w="19"/><text x="17.0656%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 1.54%)</title><rect x="16.8156%" y="581" width="1.5435%" height="15" fill="rgb(231,226,5)" fg:x="207" fg:w="19"/><text x="17.0656%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.06%)</title><rect x="17.3030%" y="565" width="1.0561%" height="15" fill="rgb(237,122,22)" fg:x="213" fg:w="13"/><text x="17.5530%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (11 samples, 0.89%)</title><rect x="17.4655%" y="549" width="0.8936%" height="15" fill="rgb(209,185,25)" fg:x="215" fg:w="11"/><text x="17.7155%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="18.1966%" y="533" width="0.1625%" height="15" fill="rgb(228,200,32)" fg:x="224" fg:w="2"/><text x="18.4466%" y="543.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="18.2778%" y="517" width="0.0812%" height="15" fill="rgb(217,140,10)" fg:x="225" fg:w="1"/><text x="18.5278%" y="527.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="18.2778%" y="501" width="0.0812%" height="15" fill="rgb(253,17,24)" fg:x="225" fg:w="1"/><text x="18.5278%" y="511.50"></text></g><g><title>engine::session::Session::flush (61 samples, 4.96%)</title><rect x="13.4850%" y="677" width="4.9553%" height="15" fill="rgb(212,61,6)" fg:x="166" fg:w="61"/><text x="13.7350%" y="687.50">engine..</text></g><g><title>engine::session::Session::save_entity_changes (61 samples, 4.96%)</title><rect x="13.4850%" y="661" width="4.9553%" height="15" fill="rgb(205,14,25)" fg:x="166" fg:w="61"/><text x="13.7350%" y="671.50">engine..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="18.3591%" y="645" width="0.0812%" height="15" fill="rgb(232,69,41)" fg:x="226" fg:w="1"/><text x="18.6091%" y="655.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="18.3591%" y="629" width="0.0812%" height="15" fill="rgb(241,106,47)" fg:x="226" fg:w="1"/><text x="18.6091%" y="639.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="18.3591%" y="613" width="0.0812%" height="15" fill="rgb(210,213,53)" fg:x="226" fg:w="1"/><text x="18.6091%" y="623.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="18.3591%" y="597" width="0.0812%" height="15" fill="rgb(253,175,27)" fg:x="226" fg:w="1"/><text x="18.6091%" y="607.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="18.3591%" y="581" width="0.0812%" height="15" fill="rgb(211,171,24)" fg:x="226" fg:w="1"/><text x="18.6091%" y="591.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="18.3591%" y="565" width="0.0812%" height="15" fill="rgb(229,80,7)" fg:x="226" fg:w="1"/><text x="18.6091%" y="575.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="18.3591%" y="549" width="0.0812%" height="15" fill="rgb(212,46,39)" fg:x="226" fg:w="1"/><text x="18.6091%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="18.4403%" y="645" width="0.0812%" height="15" fill="rgb(240,80,45)" fg:x="227" fg:w="1"/><text x="18.6903%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="18.4403%" y="629" width="0.0812%" height="15" fill="rgb(253,177,40)" fg:x="227" fg:w="1"/><text x="18.6903%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="18.4403%" y="613" width="0.0812%" height="15" fill="rgb(249,200,15)" fg:x="227" fg:w="1"/><text x="18.6903%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="18.4403%" y="597" width="0.0812%" height="15" fill="rgb(217,78,26)" fg:x="227" fg:w="1"/><text x="18.6903%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.4403%" y="581" width="0.0812%" height="15" fill="rgb(254,151,32)" fg:x="227" fg:w="1"/><text x="18.6903%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.4403%" y="565" width="0.0812%" height="15" fill="rgb(226,165,27)" fg:x="227" fg:w="1"/><text x="18.6903%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="18.4403%" y="549" width="0.0812%" height="15" fill="rgb(250,206,4)" fg:x="227" fg:w="1"/><text x="18.6903%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="18.4403%" y="533" width="0.0812%" height="15" fill="rgb(231,229,27)" fg:x="227" fg:w="1"/><text x="18.6903%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.4403%" y="517" width="0.0812%" height="15" fill="rgb(239,217,8)" fg:x="227" fg:w="1"/><text x="18.6903%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.4403%" y="501" width="0.0812%" height="15" fill="rgb(225,204,27)" fg:x="227" fg:w="1"/><text x="18.6903%" y="511.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="18.4403%" y="485" width="0.0812%" height="15" fill="rgb(230,56,32)" fg:x="227" fg:w="1"/><text x="18.6903%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="18.4403%" y="469" width="0.0812%" height="15" fill="rgb(222,56,27)" fg:x="227" fg:w="1"/><text x="18.6903%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.4403%" y="453" width="0.0812%" height="15" fill="rgb(253,108,27)" fg:x="227" fg:w="1"/><text x="18.6903%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.4403%" y="437" width="0.0812%" height="15" fill="rgb(212,87,36)" fg:x="227" fg:w="1"/><text x="18.6903%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.4403%" y="421" width="0.0812%" height="15" fill="rgb(247,82,36)" fg:x="227" fg:w="1"/><text x="18.6903%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.4403%" y="405" width="0.0812%" height="15" fill="rgb(222,143,9)" fg:x="227" fg:w="1"/><text x="18.6903%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="18.4403%" y="389" width="0.0812%" height="15" fill="rgb(238,162,48)" fg:x="227" fg:w="1"/><text x="18.6903%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="18.4403%" y="373" width="0.0812%" height="15" fill="rgb(221,59,43)" fg:x="227" fg:w="1"/><text x="18.6903%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="18.4403%" y="357" width="0.0812%" height="15" fill="rgb(205,166,41)" fg:x="227" fg:w="1"/><text x="18.6903%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="18.4403%" y="341" width="0.0812%" height="15" fill="rgb(241,186,40)" fg:x="227" fg:w="1"/><text x="18.6903%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="18.4403%" y="325" width="0.0812%" height="15" fill="rgb(216,119,35)" fg:x="227" fg:w="1"/><text x="18.6903%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="18.4403%" y="309" width="0.0812%" height="15" fill="rgb(208,68,38)" fg:x="227" fg:w="1"/><text x="18.6903%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="18.4403%" y="293" width="0.0812%" height="15" fill="rgb(217,113,1)" fg:x="227" fg:w="1"/><text x="18.6903%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="18.4403%" y="277" width="0.0812%" height="15" fill="rgb(242,153,3)" fg:x="227" fg:w="1"/><text x="18.6903%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.4403%" y="261" width="0.0812%" height="15" fill="rgb(229,76,35)" fg:x="227" fg:w="1"/><text x="18.6903%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="18.4403%" y="245" width="0.0812%" height="15" fill="rgb(229,125,34)" fg:x="227" fg:w="1"/><text x="18.6903%" y="255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="18.4403%" y="229" width="0.0812%" height="15" fill="rgb(238,179,36)" fg:x="227" fg:w="1"/><text x="18.6903%" y="239.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="18.4403%" y="213" width="0.0812%" height="15" fill="rgb(244,183,19)" fg:x="227" fg:w="1"/><text x="18.6903%" y="223.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="18.4403%" y="197" width="0.0812%" height="15" fill="rgb(216,85,49)" fg:x="227" fg:w="1"/><text x="18.6903%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.6028%" y="565" width="0.0812%" height="15" fill="rgb(208,161,47)" fg:x="229" fg:w="1"/><text x="18.8528%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.6028%" y="549" width="0.0812%" height="15" fill="rgb(233,210,18)" fg:x="229" fg:w="1"/><text x="18.8528%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.6028%" y="533" width="0.0812%" height="15" fill="rgb(205,104,42)" fg:x="229" fg:w="1"/><text x="18.8528%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.6028%" y="517" width="0.0812%" height="15" fill="rgb(248,90,43)" fg:x="229" fg:w="1"/><text x="18.8528%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.6028%" y="501" width="0.0812%" height="15" fill="rgb(206,198,11)" fg:x="229" fg:w="1"/><text x="18.8528%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.6028%" y="485" width="0.0812%" height="15" fill="rgb(239,165,27)" fg:x="229" fg:w="1"/><text x="18.8528%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.6028%" y="469" width="0.0812%" height="15" fill="rgb(246,44,32)" fg:x="229" fg:w="1"/><text x="18.8528%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="18.6028%" y="453" width="0.0812%" height="15" fill="rgb(252,65,42)" fg:x="229" fg:w="1"/><text x="18.8528%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="18.6028%" y="437" width="0.0812%" height="15" fill="rgb(246,197,18)" fg:x="229" fg:w="1"/><text x="18.8528%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="18.6028%" y="613" width="0.1625%" height="15" fill="rgb(216,192,4)" fg:x="229" fg:w="2"/><text x="18.8528%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="18.6028%" y="597" width="0.1625%" height="15" fill="rgb(208,117,10)" fg:x="229" fg:w="2"/><text x="18.8528%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="18.6028%" y="581" width="0.1625%" height="15" fill="rgb(240,61,47)" fg:x="229" fg:w="2"/><text x="18.8528%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.6840%" y="565" width="0.0812%" height="15" fill="rgb(228,178,21)" fg:x="230" fg:w="1"/><text x="18.9340%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.6840%" y="549" width="0.0812%" height="15" fill="rgb(219,96,54)" fg:x="230" fg:w="1"/><text x="18.9340%" y="559.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="18.6028%" y="629" width="0.3249%" height="15" fill="rgb(250,177,24)" fg:x="229" fg:w="4"/><text x="18.8528%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="18.7652%" y="613" width="0.1625%" height="15" fill="rgb(242,154,46)" fg:x="231" fg:w="2"/><text x="19.0152%" y="623.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="18.7652%" y="597" width="0.1625%" height="15" fill="rgb(226,176,29)" fg:x="231" fg:w="2"/><text x="19.0152%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="18.7652%" y="581" width="0.1625%" height="15" fill="rgb(226,29,2)" fg:x="231" fg:w="2"/><text x="19.0152%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="18.8465%" y="565" width="0.0812%" height="15" fill="rgb(237,104,14)" fg:x="232" fg:w="1"/><text x="19.0965%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.8465%" y="549" width="0.0812%" height="15" fill="rgb(245,207,31)" fg:x="232" fg:w="1"/><text x="19.0965%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.8465%" y="533" width="0.0812%" height="15" fill="rgb(229,211,45)" fg:x="232" fg:w="1"/><text x="19.0965%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.06%)</title><rect x="18.4403%" y="661" width="1.0561%" height="15" fill="rgb(229,113,15)" fg:x="227" fg:w="13"/><text x="18.6903%" y="671.50"></text></g><g><title>engine::internal::Entities::add_entity (12 samples, 0.97%)</title><rect x="18.5215%" y="645" width="0.9748%" height="15" fill="rgb(237,147,15)" fg:x="228" fg:w="12"/><text x="18.7715%" y="655.50"></text></g><g><title>engine::internal::EntityMap::add_entity (7 samples, 0.57%)</title><rect x="18.9277%" y="629" width="0.5686%" height="15" fill="rgb(244,120,12)" fg:x="233" fg:w="7"/><text x="19.1777%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.57%)</title><rect x="18.9277%" y="613" width="0.5686%" height="15" fill="rgb(205,120,12)" fg:x="233" fg:w="7"/><text x="19.1777%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.57%)</title><rect x="18.9277%" y="597" width="0.5686%" height="15" fill="rgb(231,26,45)" fg:x="233" fg:w="7"/><text x="19.1777%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.57%)</title><rect x="18.9277%" y="581" width="0.5686%" height="15" fill="rgb(246,98,1)" fg:x="233" fg:w="7"/><text x="19.1777%" y="591.50"></text></g><g><title>__libc_malloc (7 samples, 0.57%)</title><rect x="18.9277%" y="565" width="0.5686%" height="15" fill="rgb(207,68,45)" fg:x="233" fg:w="7"/><text x="19.1777%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="19.4963%" y="645" width="0.0812%" height="15" fill="rgb(231,27,38)" fg:x="240" fg:w="1"/><text x="19.7463%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="19.4963%" y="629" width="0.0812%" height="15" fill="rgb(214,223,3)" fg:x="240" fg:w="1"/><text x="19.7463%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.4963%" y="613" width="0.0812%" height="15" fill="rgb(228,195,46)" fg:x="240" fg:w="1"/><text x="19.7463%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="19.5776%" y="645" width="0.0812%" height="15" fill="rgb(231,100,42)" fg:x="241" fg:w="1"/><text x="19.8276%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="19.5776%" y="629" width="0.0812%" height="15" fill="rgb(236,53,4)" fg:x="241" fg:w="1"/><text x="19.8276%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.5776%" y="613" width="0.0812%" height="15" fill="rgb(230,152,12)" fg:x="241" fg:w="1"/><text x="19.8276%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.6588%" y="549" width="0.0812%" height="15" fill="rgb(226,101,19)" fg:x="242" fg:w="1"/><text x="19.9088%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.6588%" y="533" width="0.0812%" height="15" fill="rgb(250,149,32)" fg:x="242" fg:w="1"/><text x="19.9088%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.6588%" y="517" width="0.0812%" height="15" fill="rgb(232,178,12)" fg:x="242" fg:w="1"/><text x="19.9088%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.6588%" y="501" width="0.0812%" height="15" fill="rgb(246,151,17)" fg:x="242" fg:w="1"/><text x="19.9088%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="19.6588%" y="565" width="0.3249%" height="15" fill="rgb(252,17,51)" fg:x="242" fg:w="4"/><text x="19.9088%" y="575.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="19.7400%" y="549" width="0.2437%" height="15" fill="rgb(250,207,23)" fg:x="243" fg:w="3"/><text x="19.9900%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="19.9838%" y="565" width="0.0812%" height="15" fill="rgb(205,27,5)" fg:x="246" fg:w="1"/><text x="20.2338%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="19.9838%" y="549" width="0.0812%" height="15" fill="rgb(224,32,19)" fg:x="246" fg:w="1"/><text x="20.2338%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.9838%" y="533" width="0.0812%" height="15" fill="rgb(247,214,40)" fg:x="246" fg:w="1"/><text x="20.2338%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.9838%" y="517" width="0.0812%" height="15" fill="rgb(239,199,17)" fg:x="246" fg:w="1"/><text x="20.2338%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.9838%" y="501" width="0.0812%" height="15" fill="rgb(251,159,9)" fg:x="246" fg:w="1"/><text x="20.2338%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.9838%" y="485" width="0.0812%" height="15" fill="rgb(225,78,32)" fg:x="246" fg:w="1"/><text x="20.2338%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.9838%" y="469" width="0.0812%" height="15" fill="rgb(206,97,47)" fg:x="246" fg:w="1"/><text x="20.2338%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.49%)</title><rect x="19.6588%" y="613" width="0.4874%" height="15" fill="rgb(227,107,4)" fg:x="242" fg:w="6"/><text x="19.9088%" y="623.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.49%)</title><rect x="19.6588%" y="597" width="0.4874%" height="15" fill="rgb(241,146,50)" fg:x="242" fg:w="6"/><text x="19.9088%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.49%)</title><rect x="19.6588%" y="581" width="0.4874%" height="15" fill="rgb(232,92,30)" fg:x="242" fg:w="6"/><text x="19.9088%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.0650%" y="565" width="0.0812%" height="15" fill="rgb(222,0,40)" fg:x="247" fg:w="1"/><text x="20.3150%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.0650%" y="549" width="0.0812%" height="15" fill="rgb(219,54,33)" fg:x="247" fg:w="1"/><text x="20.3150%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.0650%" y="533" width="0.0812%" height="15" fill="rgb(226,209,28)" fg:x="247" fg:w="1"/><text x="20.3150%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.0650%" y="517" width="0.0812%" height="15" fill="rgb(254,205,35)" fg:x="247" fg:w="1"/><text x="20.3150%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.1462%" y="565" width="0.0812%" height="15" fill="rgb(230,159,3)" fg:x="248" fg:w="1"/><text x="20.3962%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.1462%" y="549" width="0.0812%" height="15" fill="rgb(232,190,24)" fg:x="248" fg:w="1"/><text x="20.3962%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.1462%" y="533" width="0.0812%" height="15" fill="rgb(217,227,44)" fg:x="248" fg:w="1"/><text x="20.3962%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.1462%" y="517" width="0.0812%" height="15" fill="rgb(236,211,1)" fg:x="248" fg:w="1"/><text x="20.3962%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.65%)</title><rect x="19.6588%" y="645" width="0.6499%" height="15" fill="rgb(250,127,46)" fg:x="242" fg:w="8"/><text x="19.9088%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (8 samples, 0.65%)</title><rect x="19.6588%" y="629" width="0.6499%" height="15" fill="rgb(229,213,6)" fg:x="242" fg:w="8"/><text x="19.9088%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="20.1462%" y="613" width="0.1625%" height="15" fill="rgb(237,15,36)" fg:x="248" fg:w="2"/><text x="20.3962%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="20.1462%" y="597" width="0.1625%" height="15" fill="rgb(213,131,41)" fg:x="248" fg:w="2"/><text x="20.3962%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="20.1462%" y="581" width="0.1625%" height="15" fill="rgb(225,82,44)" fg:x="248" fg:w="2"/><text x="20.3962%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="20.2275%" y="565" width="0.0812%" height="15" fill="rgb(249,42,11)" fg:x="249" fg:w="1"/><text x="20.4775%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="20.2275%" y="549" width="0.0812%" height="15" fill="rgb(253,11,29)" fg:x="249" fg:w="1"/><text x="20.4775%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.2275%" y="533" width="0.0812%" height="15" fill="rgb(206,8,54)" fg:x="249" fg:w="1"/><text x="20.4775%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.2275%" y="517" width="0.0812%" height="15" fill="rgb(222,186,2)" fg:x="249" fg:w="1"/><text x="20.4775%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.2275%" y="501" width="0.0812%" height="15" fill="rgb(221,206,53)" fg:x="249" fg:w="1"/><text x="20.4775%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="20.3087%" y="645" width="0.1625%" height="15" fill="rgb(230,150,21)" fg:x="250" fg:w="2"/><text x="20.5587%" y="655.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="20.3087%" y="629" width="0.1625%" height="15" fill="rgb(253,202,10)" fg:x="250" fg:w="2"/><text x="20.5587%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="20.3087%" y="613" width="0.1625%" height="15" fill="rgb(238,109,40)" fg:x="250" fg:w="2"/><text x="20.5587%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="20.3087%" y="597" width="0.1625%" height="15" fill="rgb(247,120,22)" fg:x="250" fg:w="2"/><text x="20.5587%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="20.4712%" y="629" width="0.0812%" height="15" fill="rgb(207,43,30)" fg:x="252" fg:w="1"/><text x="20.7212%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="20.4712%" y="613" width="0.0812%" height="15" fill="rgb(213,211,24)" fg:x="252" fg:w="1"/><text x="20.7212%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.6336%" y="549" width="0.0812%" height="15" fill="rgb(239,73,39)" fg:x="254" fg:w="1"/><text x="20.8836%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.6336%" y="533" width="0.0812%" height="15" fill="rgb(245,182,19)" fg:x="254" fg:w="1"/><text x="20.8836%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.6336%" y="517" width="0.0812%" height="15" fill="rgb(247,143,26)" fg:x="254" fg:w="1"/><text x="20.8836%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.6336%" y="501" width="0.0812%" height="15" fill="rgb(228,191,23)" fg:x="254" fg:w="1"/><text x="20.8836%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.6336%" y="485" width="0.0812%" height="15" fill="rgb(253,165,31)" fg:x="254" fg:w="1"/><text x="20.8836%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="20.5524%" y="597" width="0.3249%" height="15" fill="rgb(234,138,20)" fg:x="253" fg:w="4"/><text x="20.8024%" y="607.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="20.5524%" y="581" width="0.3249%" height="15" fill="rgb(218,191,29)" fg:x="253" fg:w="4"/><text x="20.8024%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="20.6336%" y="565" width="0.2437%" height="15" fill="rgb(221,157,19)" fg:x="254" fg:w="3"/><text x="20.8836%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.7149%" y="549" width="0.1625%" height="15" fill="rgb(237,26,42)" fg:x="255" fg:w="2"/><text x="20.9649%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.7149%" y="533" width="0.1625%" height="15" fill="rgb(220,163,24)" fg:x="255" fg:w="2"/><text x="20.9649%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.7149%" y="517" width="0.1625%" height="15" fill="rgb(242,115,20)" fg:x="255" fg:w="2"/><text x="20.9649%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.7149%" y="501" width="0.1625%" height="15" fill="rgb(210,206,9)" fg:x="255" fg:w="2"/><text x="20.9649%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="20.7149%" y="485" width="0.1625%" height="15" fill="rgb(208,71,17)" fg:x="255" fg:w="2"/><text x="20.9649%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.7149%" y="469" width="0.1625%" height="15" fill="rgb(233,7,5)" fg:x="255" fg:w="2"/><text x="20.9649%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.7149%" y="453" width="0.1625%" height="15" fill="rgb(207,92,33)" fg:x="255" fg:w="2"/><text x="20.9649%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.7149%" y="437" width="0.1625%" height="15" fill="rgb(218,87,9)" fg:x="255" fg:w="2"/><text x="20.9649%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.7961%" y="421" width="0.0812%" height="15" fill="rgb(219,47,37)" fg:x="256" fg:w="1"/><text x="21.0461%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.7961%" y="405" width="0.0812%" height="15" fill="rgb(221,152,34)" fg:x="256" fg:w="1"/><text x="21.0461%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="20.7961%" y="389" width="0.0812%" height="15" fill="rgb(235,176,21)" fg:x="256" fg:w="1"/><text x="21.0461%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="20.8773%" y="581" width="0.0812%" height="15" fill="rgb(232,212,21)" fg:x="257" fg:w="1"/><text x="21.1273%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.8773%" y="565" width="0.0812%" height="15" fill="rgb(245,82,39)" fg:x="257" fg:w="1"/><text x="21.1273%" y="575.50"></text></g><g><title>plugins_core::build::Build::holding (32 samples, 2.60%)</title><rect x="18.4403%" y="677" width="2.5995%" height="15" fill="rgb(241,52,51)" fg:x="227" fg:w="32"/><text x="18.6903%" y="687.50">pl..</text></g><g><title>plugins_core::tools::set_container (19 samples, 1.54%)</title><rect x="19.4963%" y="661" width="1.5435%" height="15" fill="rgb(219,91,24)" fg:x="240" fg:w="19"/><text x="19.7463%" y="671.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.57%)</title><rect x="20.4712%" y="645" width="0.5686%" height="15" fill="rgb(241,142,12)" fg:x="252" fg:w="7"/><text x="20.7212%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.49%)</title><rect x="20.5524%" y="629" width="0.4874%" height="15" fill="rgb(230,27,9)" fg:x="253" fg:w="6"/><text x="20.8024%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.49%)</title><rect x="20.5524%" y="613" width="0.4874%" height="15" fill="rgb(249,181,32)" fg:x="253" fg:w="6"/><text x="20.8024%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="20.8773%" y="597" width="0.1625%" height="15" fill="rgb(230,107,3)" fg:x="257" fg:w="2"/><text x="21.1273%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="20.9586%" y="581" width="0.0812%" height="15" fill="rgb(246,204,14)" fg:x="258" fg:w="1"/><text x="21.2086%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="20.9586%" y="565" width="0.0812%" height="15" fill="rgb(213,192,47)" fg:x="258" fg:w="1"/><text x="21.2086%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.9586%" y="549" width="0.0812%" height="15" fill="rgb(240,44,36)" fg:x="258" fg:w="1"/><text x="21.2086%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.9586%" y="533" width="0.0812%" height="15" fill="rgb(244,209,38)" fg:x="258" fg:w="1"/><text x="21.2086%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.9586%" y="517" width="0.0812%" height="15" fill="rgb(219,34,37)" fg:x="258" fg:w="1"/><text x="21.2086%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.9586%" y="501" width="0.0812%" height="15" fill="rgb(210,28,6)" fg:x="258" fg:w="1"/><text x="21.2086%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="20.9586%" y="485" width="0.0812%" height="15" fill="rgb(244,110,52)" fg:x="258" fg:w="1"/><text x="21.2086%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.9586%" y="469" width="0.0812%" height="15" fill="rgb(254,124,47)" fg:x="258" fg:w="1"/><text x="21.2086%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.9586%" y="453" width="0.0812%" height="15" fill="rgb(254,110,13)" fg:x="258" fg:w="1"/><text x="21.2086%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.0398%" y="517" width="0.0812%" height="15" fill="rgb(252,57,21)" fg:x="259" fg:w="1"/><text x="21.2898%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.0398%" y="501" width="0.0812%" height="15" fill="rgb(242,60,45)" fg:x="259" fg:w="1"/><text x="21.2898%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.0398%" y="565" width="0.1625%" height="15" fill="rgb(234,49,30)" fg:x="259" fg:w="2"/><text x="21.2898%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.0398%" y="549" width="0.1625%" height="15" fill="rgb(218,98,6)" fg:x="259" fg:w="2"/><text x="21.2898%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.0398%" y="533" width="0.1625%" height="15" fill="rgb(220,174,29)" fg:x="259" fg:w="2"/><text x="21.2898%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.1210%" y="517" width="0.0812%" height="15" fill="rgb(236,163,23)" fg:x="260" fg:w="1"/><text x="21.3710%" y="527.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="21.0398%" y="677" width="0.2437%" height="15" fill="rgb(242,114,45)" fg:x="259" fg:w="3"/><text x="21.2898%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="21.0398%" y="661" width="0.2437%" height="15" fill="rgb(232,10,53)" fg:x="259" fg:w="3"/><text x="21.2898%" y="671.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="21.0398%" y="645" width="0.2437%" height="15" fill="rgb(245,108,29)" fg:x="259" fg:w="3"/><text x="21.2898%" y="655.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="21.0398%" y="629" width="0.2437%" height="15" fill="rgb(240,89,53)" fg:x="259" fg:w="3"/><text x="21.2898%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="21.0398%" y="613" width="0.2437%" height="15" fill="rgb(226,60,45)" fg:x="259" fg:w="3"/><text x="21.2898%" y="623.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="21.0398%" y="597" width="0.2437%" height="15" fill="rgb(230,41,44)" fg:x="259" fg:w="3"/><text x="21.2898%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="21.0398%" y="581" width="0.2437%" height="15" fill="rgb(230,26,20)" fg:x="259" fg:w="3"/><text x="21.2898%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.2023%" y="565" width="0.0812%" height="15" fill="rgb(237,170,32)" fg:x="261" fg:w="1"/><text x="21.4523%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.2023%" y="549" width="0.0812%" height="15" fill="rgb(212,35,42)" fg:x="261" fg:w="1"/><text x="21.4523%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.2023%" y="533" width="0.0812%" height="15" fill="rgb(227,31,34)" fg:x="261" fg:w="1"/><text x="21.4523%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.2023%" y="517" width="0.0812%" height="15" fill="rgb(216,19,18)" fg:x="261" fg:w="1"/><text x="21.4523%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="21.2023%" y="501" width="0.0812%" height="15" fill="rgb(211,133,42)" fg:x="261" fg:w="1"/><text x="21.4523%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.2023%" y="485" width="0.0812%" height="15" fill="rgb(244,66,13)" fg:x="261" fg:w="1"/><text x="21.4523%" y="495.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="21.2835%" y="677" width="0.1625%" height="15" fill="rgb(218,185,50)" fg:x="262" fg:w="2"/><text x="21.5335%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="21.2835%" y="661" width="0.1625%" height="15" fill="rgb(219,149,13)" fg:x="262" fg:w="2"/><text x="21.5335%" y="671.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (2 samples, 0.16%)</title><rect x="21.2835%" y="645" width="0.1625%" height="15" fill="rgb(221,125,0)" fg:x="262" fg:w="2"/><text x="21.5335%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="21.4460%" y="629" width="0.0812%" height="15" fill="rgb(247,126,27)" fg:x="264" fg:w="1"/><text x="21.6960%" y="639.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="21.4460%" y="613" width="0.0812%" height="15" fill="rgb(250,138,30)" fg:x="264" fg:w="1"/><text x="21.6960%" y="623.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="21.4460%" y="597" width="0.0812%" height="15" fill="rgb(230,151,9)" fg:x="264" fg:w="1"/><text x="21.6960%" y="607.50"></text></g><g><title>plugins_core::build::Build::new (2 samples, 0.16%)</title><rect x="21.4460%" y="677" width="0.1625%" height="15" fill="rgb(233,80,38)" fg:x="264" fg:w="2"/><text x="21.6960%" y="687.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="21.4460%" y="661" width="0.1625%" height="15" fill="rgb(232,68,43)" fg:x="264" fg:w="2"/><text x="21.6960%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (2 samples, 0.16%)</title><rect x="21.4460%" y="645" width="0.1625%" height="15" fill="rgb(254,5,50)" fg:x="264" fg:w="2"/><text x="21.6960%" y="655.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="21.5272%" y="629" width="0.0812%" height="15" fill="rgb(225,45,5)" fg:x="265" fg:w="1"/><text x="21.7772%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="21.6084%" y="645" width="0.0812%" height="15" fill="rgb(239,22,3)" fg:x="266" fg:w="1"/><text x="21.8584%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="21.6084%" y="629" width="0.0812%" height="15" fill="rgb(243,129,0)" fg:x="266" fg:w="1"/><text x="21.8584%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="21.6897%" y="581" width="0.0812%" height="15" fill="rgb(223,164,0)" fg:x="267" fg:w="1"/><text x="21.9397%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.6897%" y="565" width="0.0812%" height="15" fill="rgb(221,46,29)" fg:x="267" fg:w="1"/><text x="21.9397%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.7709%" y="517" width="0.0812%" height="15" fill="rgb(205,97,47)" fg:x="268" fg:w="1"/><text x="22.0209%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.7709%" y="501" width="0.0812%" height="15" fill="rgb(249,14,8)" fg:x="268" fg:w="1"/><text x="22.0209%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.7709%" y="485" width="0.0812%" height="15" fill="rgb(216,77,3)" fg:x="268" fg:w="1"/><text x="22.0209%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="21.6084%" y="661" width="0.3249%" height="15" fill="rgb(206,168,54)" fg:x="266" fg:w="4"/><text x="21.8584%" y="671.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="21.6897%" y="645" width="0.2437%" height="15" fill="rgb(236,3,41)" fg:x="267" fg:w="3"/><text x="21.9397%" y="655.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="21.6897%" y="629" width="0.2437%" height="15" fill="rgb(231,132,24)" fg:x="267" fg:w="3"/><text x="21.9397%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="21.6897%" y="613" width="0.2437%" height="15" fill="rgb(227,221,40)" fg:x="267" fg:w="3"/><text x="21.9397%" y="623.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="21.6897%" y="597" width="0.2437%" height="15" fill="rgb(233,151,11)" fg:x="267" fg:w="3"/><text x="21.9397%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="21.7709%" y="581" width="0.1625%" height="15" fill="rgb(247,81,35)" fg:x="268" fg:w="2"/><text x="22.0209%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.7709%" y="565" width="0.1625%" height="15" fill="rgb(243,128,48)" fg:x="268" fg:w="2"/><text x="22.0209%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.7709%" y="549" width="0.1625%" height="15" fill="rgb(253,16,10)" fg:x="268" fg:w="2"/><text x="22.0209%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.7709%" y="533" width="0.1625%" height="15" fill="rgb(228,67,27)" fg:x="268" fg:w="2"/><text x="22.0209%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.8522%" y="517" width="0.0812%" height="15" fill="rgb(231,105,25)" fg:x="269" fg:w="1"/><text x="22.1022%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.8522%" y="501" width="0.0812%" height="15" fill="rgb(213,166,47)" fg:x="269" fg:w="1"/><text x="22.1022%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.8522%" y="485" width="0.0812%" height="15" fill="rgb(209,27,10)" fg:x="269" fg:w="1"/><text x="22.1022%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.8522%" y="469" width="0.0812%" height="15" fill="rgb(241,44,30)" fg:x="269" fg:w="1"/><text x="22.1022%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.8522%" y="453" width="0.0812%" height="15" fill="rgb(223,216,15)" fg:x="269" fg:w="1"/><text x="22.1022%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.8522%" y="437" width="0.0812%" height="15" fill="rgb(227,14,7)" fg:x="269" fg:w="1"/><text x="22.1022%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.8522%" y="421" width="0.0812%" height="15" fill="rgb(237,14,5)" fg:x="269" fg:w="1"/><text x="22.1022%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.8522%" y="405" width="0.0812%" height="15" fill="rgb(232,14,36)" fg:x="269" fg:w="1"/><text x="22.1022%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.8522%" y="389" width="0.0812%" height="15" fill="rgb(234,0,38)" fg:x="269" fg:w="1"/><text x="22.1022%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.8522%" y="373" width="0.0812%" height="15" fill="rgb(207,170,14)" fg:x="269" fg:w="1"/><text x="22.1022%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.8522%" y="357" width="0.0812%" height="15" fill="rgb(252,45,13)" fg:x="269" fg:w="1"/><text x="22.1022%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.8522%" y="341" width="0.0812%" height="15" fill="rgb(213,142,7)" fg:x="269" fg:w="1"/><text x="22.1022%" y="351.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="21.9334%" y="645" width="0.1625%" height="15" fill="rgb(216,157,23)" fg:x="270" fg:w="2"/><text x="22.1834%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="22.0146%" y="629" width="0.0812%" height="15" fill="rgb(212,145,33)" fg:x="271" fg:w="1"/><text x="22.2646%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="22.0146%" y="613" width="0.0812%" height="15" fill="rgb(233,26,13)" fg:x="271" fg:w="1"/><text x="22.2646%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="22.0146%" y="597" width="0.0812%" height="15" fill="rgb(219,196,19)" fg:x="271" fg:w="1"/><text x="22.2646%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="22.0146%" y="581" width="0.0812%" height="15" fill="rgb(246,56,21)" fg:x="271" fg:w="1"/><text x="22.2646%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.0146%" y="565" width="0.0812%" height="15" fill="rgb(222,28,53)" fg:x="271" fg:w="1"/><text x="22.2646%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.0146%" y="549" width="0.0812%" height="15" fill="rgb(224,5,27)" fg:x="271" fg:w="1"/><text x="22.2646%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.0146%" y="533" width="0.0812%" height="15" fill="rgb(220,153,33)" fg:x="271" fg:w="1"/><text x="22.2646%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.0146%" y="517" width="0.0812%" height="15" fill="rgb(226,58,19)" fg:x="271" fg:w="1"/><text x="22.2646%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.0146%" y="501" width="0.0812%" height="15" fill="rgb(239,112,23)" fg:x="271" fg:w="1"/><text x="22.2646%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.0146%" y="485" width="0.0812%" height="15" fill="rgb(251,213,20)" fg:x="271" fg:w="1"/><text x="22.2646%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.0146%" y="469" width="0.0812%" height="15" fill="rgb(215,181,21)" fg:x="271" fg:w="1"/><text x="22.2646%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.0146%" y="453" width="0.0812%" height="15" fill="rgb(240,8,35)" fg:x="271" fg:w="1"/><text x="22.2646%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="22.0959%" y="645" width="0.1625%" height="15" fill="rgb(232,203,3)" fg:x="272" fg:w="2"/><text x="22.3459%" y="655.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (2 samples, 0.16%)</title><rect x="22.0959%" y="629" width="0.1625%" height="15" fill="rgb(214,202,43)" fg:x="272" fg:w="2"/><text x="22.3459%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.1771%" y="613" width="0.0812%" height="15" fill="rgb(254,35,11)" fg:x="273" fg:w="1"/><text x="22.4271%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.1771%" y="597" width="0.0812%" height="15" fill="rgb(239,173,13)" fg:x="273" fg:w="1"/><text x="22.4271%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="22.2583%" y="597" width="0.0812%" height="15" fill="rgb(220,141,0)" fg:x="274" fg:w="1"/><text x="22.5083%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="22.2583%" y="581" width="0.0812%" height="15" fill="rgb(210,98,12)" fg:x="274" fg:w="1"/><text x="22.5083%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="22.2583%" y="565" width="0.0812%" height="15" fill="rgb(254,153,22)" fg:x="274" fg:w="1"/><text x="22.5083%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.2583%" y="549" width="0.0812%" height="15" fill="rgb(247,223,17)" fg:x="274" fg:w="1"/><text x="22.5083%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.2583%" y="533" width="0.0812%" height="15" fill="rgb(246,56,7)" fg:x="274" fg:w="1"/><text x="22.5083%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.2583%" y="517" width="0.0812%" height="15" fill="rgb(240,226,12)" fg:x="274" fg:w="1"/><text x="22.5083%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.2583%" y="501" width="0.0812%" height="15" fill="rgb(205,87,46)" fg:x="274" fg:w="1"/><text x="22.5083%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.2583%" y="485" width="0.0812%" height="15" fill="rgb(245,214,51)" fg:x="274" fg:w="1"/><text x="22.5083%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.2583%" y="469" width="0.0812%" height="15" fill="rgb(223,172,33)" fg:x="274" fg:w="1"/><text x="22.5083%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.2583%" y="453" width="0.0812%" height="15" fill="rgb(227,203,34)" fg:x="274" fg:w="1"/><text x="22.5083%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.2583%" y="437" width="0.0812%" height="15" fill="rgb(248,143,44)" fg:x="274" fg:w="1"/><text x="22.5083%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.2583%" y="421" width="0.0812%" height="15" fill="rgb(226,162,5)" fg:x="274" fg:w="1"/><text x="22.5083%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.2583%" y="405" width="0.0812%" height="15" fill="rgb(211,143,1)" fg:x="274" fg:w="1"/><text x="22.5083%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.2583%" y="389" width="0.0812%" height="15" fill="rgb(224,96,15)" fg:x="274" fg:w="1"/><text x="22.5083%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.2583%" y="373" width="0.0812%" height="15" fill="rgb(222,4,38)" fg:x="274" fg:w="1"/><text x="22.5083%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.2583%" y="357" width="0.0812%" height="15" fill="rgb(253,228,15)" fg:x="274" fg:w="1"/><text x="22.5083%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.2583%" y="341" width="0.0812%" height="15" fill="rgb(242,194,12)" fg:x="274" fg:w="1"/><text x="22.5083%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.2583%" y="325" width="0.0812%" height="15" fill="rgb(214,177,31)" fg:x="274" fg:w="1"/><text x="22.5083%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.2583%" y="309" width="0.0812%" height="15" fill="rgb(226,58,51)" fg:x="274" fg:w="1"/><text x="22.5083%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.2583%" y="293" width="0.0812%" height="15" fill="rgb(250,119,16)" fg:x="274" fg:w="1"/><text x="22.5083%" y="303.50"></text></g><g><title>plugins_core::build::Build::occupying (10 samples, 0.81%)</title><rect x="21.6084%" y="677" width="0.8123%" height="15" fill="rgb(223,128,53)" fg:x="266" fg:w="10"/><text x="21.8584%" y="687.50"></text></g><g><title>plugins_core::tools::set_occupying (6 samples, 0.49%)</title><rect x="21.9334%" y="661" width="0.4874%" height="15" fill="rgb(251,199,15)" fg:x="270" fg:w="6"/><text x="22.1834%" y="671.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (2 samples, 0.16%)</title><rect x="22.2583%" y="645" width="0.1625%" height="15" fill="rgb(235,168,42)" fg:x="274" fg:w="2"/><text x="22.5083%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="22.2583%" y="629" width="0.1625%" height="15" fill="rgb(250,210,17)" fg:x="274" fg:w="2"/><text x="22.5083%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="22.2583%" y="613" width="0.1625%" height="15" fill="rgb(226,36,41)" fg:x="274" fg:w="2"/><text x="22.5083%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="22.3396%" y="597" width="0.0812%" height="15" fill="rgb(225,87,10)" fg:x="275" fg:w="1"/><text x="22.5896%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="22.3396%" y="581" width="0.0812%" height="15" fill="rgb(228,83,9)" fg:x="275" fg:w="1"/><text x="22.5896%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="22.3396%" y="565" width="0.0812%" height="15" fill="rgb(225,16,36)" fg:x="275" fg:w="1"/><text x="22.5896%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="22.3396%" y="549" width="0.0812%" height="15" fill="rgb(242,198,13)" fg:x="275" fg:w="1"/><text x="22.5896%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="22.3396%" y="533" width="0.0812%" height="15" fill="rgb(239,25,51)" fg:x="275" fg:w="1"/><text x="22.5896%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.3396%" y="517" width="0.0812%" height="15" fill="rgb(239,28,37)" fg:x="275" fg:w="1"/><text x="22.5896%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.3396%" y="501" width="0.0812%" height="15" fill="rgb(234,70,17)" fg:x="275" fg:w="1"/><text x="22.5896%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.3396%" y="485" width="0.0812%" height="15" fill="rgb(231,215,53)" fg:x="275" fg:w="1"/><text x="22.5896%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="22.4208%" y="645" width="0.0812%" height="15" fill="rgb(218,140,42)" fg:x="276" fg:w="1"/><text x="22.6708%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="22.4208%" y="629" width="0.0812%" height="15" fill="rgb(233,227,45)" fg:x="276" fg:w="1"/><text x="22.6708%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="22.4208%" y="613" width="0.0812%" height="15" fill="rgb(225,189,21)" fg:x="276" fg:w="1"/><text x="22.6708%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="22.4208%" y="597" width="0.0812%" height="15" fill="rgb(237,176,54)" fg:x="276" fg:w="1"/><text x="22.6708%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="22.4208%" y="581" width="0.0812%" height="15" fill="rgb(215,131,46)" fg:x="276" fg:w="1"/><text x="22.6708%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="22.4208%" y="565" width="0.0812%" height="15" fill="rgb(218,95,20)" fg:x="276" fg:w="1"/><text x="22.6708%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="22.4208%" y="549" width="0.0812%" height="15" fill="rgb(208,198,12)" fg:x="276" fg:w="1"/><text x="22.6708%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="22.4208%" y="533" width="0.0812%" height="15" fill="rgb(239,107,50)" fg:x="276" fg:w="1"/><text x="22.6708%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="22.4208%" y="517" width="0.0812%" height="15" fill="rgb(240,217,37)" fg:x="276" fg:w="1"/><text x="22.6708%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.5020%" y="565" width="0.0812%" height="15" fill="rgb(242,197,49)" fg:x="277" fg:w="1"/><text x="22.7520%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.5020%" y="549" width="0.0812%" height="15" fill="rgb(219,171,17)" fg:x="277" fg:w="1"/><text x="22.7520%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.5020%" y="533" width="0.0812%" height="15" fill="rgb(209,81,40)" fg:x="277" fg:w="1"/><text x="22.7520%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.5020%" y="517" width="0.0812%" height="15" fill="rgb(237,156,30)" fg:x="277" fg:w="1"/><text x="22.7520%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="22.5020%" y="613" width="0.1625%" height="15" fill="rgb(212,127,16)" fg:x="277" fg:w="2"/><text x="22.7520%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="22.5020%" y="597" width="0.1625%" height="15" fill="rgb(226,66,32)" fg:x="277" fg:w="2"/><text x="22.7520%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="22.5020%" y="581" width="0.1625%" height="15" fill="rgb(245,22,46)" fg:x="277" fg:w="2"/><text x="22.7520%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.5833%" y="565" width="0.0812%" height="15" fill="rgb(210,112,21)" fg:x="278" fg:w="1"/><text x="22.8333%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.5833%" y="549" width="0.0812%" height="15" fill="rgb(207,118,39)" fg:x="278" fg:w="1"/><text x="22.8333%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.5833%" y="533" width="0.0812%" height="15" fill="rgb(205,206,35)" fg:x="278" fg:w="1"/><text x="22.8333%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.5833%" y="517" width="0.0812%" height="15" fill="rgb(222,120,2)" fg:x="278" fg:w="1"/><text x="22.8333%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.5833%" y="501" width="0.0812%" height="15" fill="rgb(205,38,18)" fg:x="278" fg:w="1"/><text x="22.8333%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.5833%" y="485" width="0.0812%" height="15" fill="rgb(226,61,2)" fg:x="278" fg:w="1"/><text x="22.8333%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.5833%" y="469" width="0.0812%" height="15" fill="rgb(242,161,23)" fg:x="278" fg:w="1"/><text x="22.8333%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.5833%" y="453" width="0.0812%" height="15" fill="rgb(213,13,52)" fg:x="278" fg:w="1"/><text x="22.8333%" y="463.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="22.6645%" y="597" width="0.1625%" height="15" fill="rgb(246,209,47)" fg:x="279" fg:w="2"/><text x="22.9145%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="22.6645%" y="581" width="0.1625%" height="15" fill="rgb(214,41,3)" fg:x="279" fg:w="2"/><text x="22.9145%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="22.6645%" y="565" width="0.1625%" height="15" fill="rgb(236,119,38)" fg:x="279" fg:w="2"/><text x="22.9145%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.6645%" y="549" width="0.1625%" height="15" fill="rgb(218,50,11)" fg:x="279" fg:w="2"/><text x="22.9145%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="22.7457%" y="533" width="0.0812%" height="15" fill="rgb(228,38,11)" fg:x="280" fg:w="1"/><text x="22.9957%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.7457%" y="517" width="0.0812%" height="15" fill="rgb(212,13,9)" fg:x="280" fg:w="1"/><text x="22.9957%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.49%)</title><rect x="22.4208%" y="661" width="0.4874%" height="15" fill="rgb(208,211,9)" fg:x="276" fg:w="6"/><text x="22.6708%" y="671.50"></text></g><g><title>engine::internal::Entities::add_entity (5 samples, 0.41%)</title><rect x="22.5020%" y="645" width="0.4062%" height="15" fill="rgb(239,39,32)" fg:x="277" fg:w="5"/><text x="22.7520%" y="655.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (5 samples, 0.41%)</title><rect x="22.5020%" y="629" width="0.4062%" height="15" fill="rgb(254,179,26)" fg:x="277" fg:w="5"/><text x="22.7520%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="22.6645%" y="613" width="0.2437%" height="15" fill="rgb(249,165,28)" fg:x="279" fg:w="3"/><text x="22.9145%" y="623.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="22.8270%" y="597" width="0.0812%" height="15" fill="rgb(225,59,50)" fg:x="281" fg:w="1"/><text x="23.0770%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="22.8270%" y="581" width="0.0812%" height="15" fill="rgb(209,122,5)" fg:x="281" fg:w="1"/><text x="23.0770%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="22.8270%" y="565" width="0.0812%" height="15" fill="rgb(214,65,34)" fg:x="281" fg:w="1"/><text x="23.0770%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="22.8270%" y="549" width="0.0812%" height="15" fill="rgb(249,183,32)" fg:x="281" fg:w="1"/><text x="23.0770%" y="559.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (137 samples, 11.13%)</title><rect x="11.8603%" y="693" width="11.1292%" height="15" fill="rgb(218,122,24)" fg:x="146" fg:w="137"/><text x="12.1103%" y="703.50">plugins_core::bu..</text></g><g><title>plugins_core::build::Build::with_username (7 samples, 0.57%)</title><rect x="22.4208%" y="677" width="0.5686%" height="15" fill="rgb(224,109,18)" fg:x="276" fg:w="7"/><text x="22.6708%" y="687.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="22.9082%" y="661" width="0.0812%" height="15" fill="rgb(210,68,50)" fg:x="282" fg:w="1"/><text x="23.1582%" y="671.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="22.9082%" y="645" width="0.0812%" height="15" fill="rgb(212,184,34)" fg:x="282" fg:w="1"/><text x="23.1582%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::users::model::Usernames&gt;&gt; (1 samples, 0.08%)</title><rect x="22.9082%" y="629" width="0.0812%" height="15" fill="rgb(238,105,48)" fg:x="282" fg:w="1"/><text x="23.1582%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="22.9894%" y="613" width="0.0812%" height="15" fill="rgb(222,134,54)" fg:x="283" fg:w="1"/><text x="23.2394%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="22.9894%" y="597" width="0.0812%" height="15" fill="rgb(246,24,43)" fg:x="283" fg:w="1"/><text x="23.2394%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="22.9894%" y="581" width="0.0812%" height="15" fill="rgb(227,169,22)" fg:x="283" fg:w="1"/><text x="23.2394%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.9894%" y="565" width="0.0812%" height="15" fill="rgb(253,152,4)" fg:x="283" fg:w="1"/><text x="23.2394%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.9894%" y="549" width="0.0812%" height="15" fill="rgb(219,158,36)" fg:x="283" fg:w="1"/><text x="23.2394%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.9894%" y="533" width="0.0812%" height="15" fill="rgb(251,128,40)" fg:x="283" fg:w="1"/><text x="23.2394%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.9894%" y="517" width="0.0812%" height="15" fill="rgb(254,101,39)" fg:x="283" fg:w="1"/><text x="23.2394%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.9894%" y="501" width="0.0812%" height="15" fill="rgb(221,168,40)" fg:x="283" fg:w="1"/><text x="23.2394%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.9894%" y="485" width="0.0812%" height="15" fill="rgb(221,14,27)" fg:x="283" fg:w="1"/><text x="23.2394%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.9894%" y="469" width="0.0812%" height="15" fill="rgb(207,36,43)" fg:x="283" fg:w="1"/><text x="23.2394%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.9894%" y="453" width="0.0812%" height="15" fill="rgb(240,172,53)" fg:x="283" fg:w="1"/><text x="23.2394%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.9894%" y="437" width="0.0812%" height="15" fill="rgb(241,138,43)" fg:x="283" fg:w="1"/><text x="23.2394%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="23.0707%" y="597" width="0.0812%" height="15" fill="rgb(227,78,19)" fg:x="284" fg:w="1"/><text x="23.3207%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.0707%" y="581" width="0.0812%" height="15" fill="rgb(215,127,44)" fg:x="284" fg:w="1"/><text x="23.3207%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.0707%" y="565" width="0.0812%" height="15" fill="rgb(227,13,10)" fg:x="284" fg:w="1"/><text x="23.3207%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.0707%" y="549" width="0.0812%" height="15" fill="rgb(249,177,6)" fg:x="284" fg:w="1"/><text x="23.3207%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.0707%" y="533" width="0.0812%" height="15" fill="rgb(215,154,26)" fg:x="284" fg:w="1"/><text x="23.3207%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.0707%" y="517" width="0.0812%" height="15" fill="rgb(250,168,20)" fg:x="284" fg:w="1"/><text x="23.3207%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="23.0707%" y="501" width="0.0812%" height="15" fill="rgb(222,53,38)" fg:x="284" fg:w="1"/><text x="23.3207%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.0707%" y="485" width="0.0812%" height="15" fill="rgb(245,154,5)" fg:x="284" fg:w="1"/><text x="23.3207%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.0707%" y="469" width="0.0812%" height="15" fill="rgb(214,89,50)" fg:x="284" fg:w="1"/><text x="23.3207%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.0707%" y="453" width="0.0812%" height="15" fill="rgb(232,73,14)" fg:x="284" fg:w="1"/><text x="23.3207%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.0707%" y="437" width="0.0812%" height="15" fill="rgb(230,101,20)" fg:x="284" fg:w="1"/><text x="23.3207%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.0707%" y="421" width="0.0812%" height="15" fill="rgb(208,56,28)" fg:x="284" fg:w="1"/><text x="23.3207%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="23.0707%" y="405" width="0.0812%" height="15" fill="rgb(247,205,22)" fg:x="284" fg:w="1"/><text x="23.3207%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="23.1519%" y="565" width="0.0812%" height="15" fill="rgb(252,109,51)" fg:x="285" fg:w="1"/><text x="23.4019%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.1519%" y="549" width="0.0812%" height="15" fill="rgb(220,40,24)" fg:x="285" fg:w="1"/><text x="23.4019%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.1519%" y="533" width="0.0812%" height="15" fill="rgb(251,108,7)" fg:x="285" fg:w="1"/><text x="23.4019%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="23.2331%" y="469" width="0.0812%" height="15" fill="rgb(238,102,51)" fg:x="286" fg:w="1"/><text x="23.4831%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.2331%" y="453" width="0.0812%" height="15" fill="rgb(219,149,34)" fg:x="286" fg:w="1"/><text x="23.4831%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.41%)</title><rect x="22.9894%" y="661" width="0.4062%" height="15" fill="rgb(239,70,0)" fg:x="283" fg:w="5"/><text x="23.2394%" y="671.50"></text></g><g><title>engine::internal::Entities::add_entity (5 samples, 0.41%)</title><rect x="22.9894%" y="645" width="0.4062%" height="15" fill="rgb(246,214,23)" fg:x="283" fg:w="5"/><text x="23.2394%" y="655.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (5 samples, 0.41%)</title><rect x="22.9894%" y="629" width="0.4062%" height="15" fill="rgb(239,221,51)" fg:x="283" fg:w="5"/><text x="23.2394%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="23.0707%" y="613" width="0.3249%" height="15" fill="rgb(254,62,14)" fg:x="284" fg:w="4"/><text x="23.3207%" y="623.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="23.1519%" y="597" width="0.2437%" height="15" fill="rgb(253,57,33)" fg:x="285" fg:w="3"/><text x="23.4019%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="23.1519%" y="581" width="0.2437%" height="15" fill="rgb(229,34,6)" fg:x="285" fg:w="3"/><text x="23.4019%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="23.2331%" y="565" width="0.1625%" height="15" fill="rgb(235,191,23)" fg:x="286" fg:w="2"/><text x="23.4831%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="23.2331%" y="549" width="0.1625%" height="15" fill="rgb(217,207,27)" fg:x="286" fg:w="2"/><text x="23.4831%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="23.2331%" y="533" width="0.1625%" height="15" fill="rgb(232,41,44)" fg:x="286" fg:w="2"/><text x="23.4831%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="23.2331%" y="517" width="0.1625%" height="15" fill="rgb(221,188,19)" fg:x="286" fg:w="2"/><text x="23.4831%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="23.2331%" y="501" width="0.1625%" height="15" fill="rgb(245,180,45)" fg:x="286" fg:w="2"/><text x="23.4831%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="23.2331%" y="485" width="0.1625%" height="15" fill="rgb(250,220,42)" fg:x="286" fg:w="2"/><text x="23.4831%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.3144%" y="469" width="0.0812%" height="15" fill="rgb(234,16,34)" fg:x="287" fg:w="1"/><text x="23.5644%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="23.3144%" y="453" width="0.0812%" height="15" fill="rgb(233,217,23)" fg:x="287" fg:w="1"/><text x="23.5644%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.3144%" y="437" width="0.0812%" height="15" fill="rgb(209,22,46)" fg:x="287" fg:w="1"/><text x="23.5644%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.3956%" y="613" width="0.0812%" height="15" fill="rgb(213,101,18)" fg:x="288" fg:w="1"/><text x="23.6456%" y="623.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (7 samples, 0.57%)</title><rect x="22.9894%" y="693" width="0.5686%" height="15" fill="rgb(215,179,52)" fg:x="283" fg:w="7"/><text x="23.2394%" y="703.50"></text></g><g><title>plugins_core::build::QuickThing::make (7 samples, 0.57%)</title><rect x="22.9894%" y="677" width="0.5686%" height="15" fill="rgb(223,50,25)" fg:x="283" fg:w="7"/><text x="23.2394%" y="687.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="23.3956%" y="661" width="0.1625%" height="15" fill="rgb(224,51,44)" fg:x="288" fg:w="2"/><text x="23.6456%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="23.3956%" y="645" width="0.1625%" height="15" fill="rgb(224,13,54)" fg:x="288" fg:w="2"/><text x="23.6456%" y="655.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="23.3956%" y="629" width="0.1625%" height="15" fill="rgb(219,58,47)" fg:x="288" fg:w="2"/><text x="23.6456%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="23.4768%" y="613" width="0.0812%" height="15" fill="rgb(246,124,34)" fg:x="289" fg:w="1"/><text x="23.7268%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="23.4768%" y="597" width="0.0812%" height="15" fill="rgb(245,109,25)" fg:x="289" fg:w="1"/><text x="23.7268%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.4768%" y="581" width="0.0812%" height="15" fill="rgb(235,48,23)" fg:x="289" fg:w="1"/><text x="23.7268%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="23.4768%" y="565" width="0.0812%" height="15" fill="rgb(229,203,36)" fg:x="289" fg:w="1"/><text x="23.7268%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.4768%" y="549" width="0.0812%" height="15" fill="rgb(234,180,9)" fg:x="289" fg:w="1"/><text x="23.7268%" y="559.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (230 samples, 18.68%)</title><rect x="4.9553%" y="709" width="18.6840%" height="15" fill="rgb(228,98,45)" fg:x="61" fg:w="230"/><text x="5.2053%" y="719.50">&lt;tests::HoldingKeyInVessel as..</text></g><g><title>plugins_core::build::BuildSurroundings::route (1 samples, 0.08%)</title><rect x="23.5581%" y="693" width="0.0812%" height="15" fill="rgb(240,24,36)" fg:x="290" fg:w="1"/><text x="23.8081%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="23.6393%" y="709" width="0.0812%" height="15" fill="rgb(227,154,19)" fg:x="291" fg:w="1"/><text x="23.8893%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="23.6393%" y="693" width="0.0812%" height="15" fill="rgb(231,2,48)" fg:x="291" fg:w="1"/><text x="23.8893%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="23.6393%" y="677" width="0.0812%" height="15" fill="rgb(219,216,0)" fg:x="291" fg:w="1"/><text x="23.8893%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="23.6393%" y="661" width="0.0812%" height="15" fill="rgb(251,88,0)" fg:x="291" fg:w="1"/><text x="23.8893%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.6393%" y="645" width="0.0812%" height="15" fill="rgb(242,45,45)" fg:x="291" fg:w="1"/><text x="23.8893%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="23.8018%" y="693" width="0.0812%" height="15" fill="rgb(218,149,45)" fg:x="293" fg:w="1"/><text x="24.0518%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="23.8018%" y="677" width="0.0812%" height="15" fill="rgb(247,194,10)" fg:x="293" fg:w="1"/><text x="24.0518%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.8018%" y="661" width="0.0812%" height="15" fill="rgb(234,33,37)" fg:x="293" fg:w="1"/><text x="24.0518%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.8018%" y="645" width="0.0812%" height="15" fill="rgb(218,61,13)" fg:x="293" fg:w="1"/><text x="24.0518%" y="655.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="23.8018%" y="629" width="0.0812%" height="15" fill="rgb(210,80,52)" fg:x="293" fg:w="1"/><text x="24.0518%" y="639.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="23.8018%" y="613" width="0.0812%" height="15" fill="rgb(218,203,27)" fg:x="293" fg:w="1"/><text x="24.0518%" y="623.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="23.8018%" y="597" width="0.0812%" height="15" fill="rgb(209,126,33)" fg:x="293" fg:w="1"/><text x="24.0518%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="23.8018%" y="581" width="0.0812%" height="15" fill="rgb(234,173,41)" fg:x="293" fg:w="1"/><text x="24.0518%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.8018%" y="565" width="0.0812%" height="15" fill="rgb(228,166,9)" fg:x="293" fg:w="1"/><text x="24.0518%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.8018%" y="549" width="0.0812%" height="15" fill="rgb(208,124,43)" fg:x="293" fg:w="1"/><text x="24.0518%" y="559.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="23.8018%" y="533" width="0.0812%" height="15" fill="rgb(212,154,38)" fg:x="293" fg:w="1"/><text x="24.0518%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="23.8830%" y="677" width="0.1625%" height="15" fill="rgb(246,179,35)" fg:x="294" fg:w="2"/><text x="24.1330%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="23.8830%" y="661" width="0.1625%" height="15" fill="rgb(251,3,50)" fg:x="294" fg:w="2"/><text x="24.1330%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="23.8830%" y="645" width="0.1625%" height="15" fill="rgb(219,96,8)" fg:x="294" fg:w="2"/><text x="24.1330%" y="655.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="23.8830%" y="629" width="0.1625%" height="15" fill="rgb(251,216,33)" fg:x="294" fg:w="2"/><text x="24.1330%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="24.0455%" y="677" width="0.0812%" height="15" fill="rgb(243,145,29)" fg:x="296" fg:w="1"/><text x="24.2955%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="24.0455%" y="661" width="0.0812%" height="15" fill="rgb(210,75,20)" fg:x="296" fg:w="1"/><text x="24.2955%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="24.0455%" y="645" width="0.0812%" height="15" fill="rgb(235,56,8)" fg:x="296" fg:w="1"/><text x="24.2955%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="24.0455%" y="629" width="0.0812%" height="15" fill="rgb(226,175,49)" fg:x="296" fg:w="1"/><text x="24.2955%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="24.0455%" y="613" width="0.0812%" height="15" fill="rgb(242,204,23)" fg:x="296" fg:w="1"/><text x="24.2955%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="24.0455%" y="597" width="0.0812%" height="15" fill="rgb(225,104,24)" fg:x="296" fg:w="1"/><text x="24.2955%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="24.0455%" y="581" width="0.0812%" height="15" fill="rgb(253,34,1)" fg:x="296" fg:w="1"/><text x="24.2955%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="24.0455%" y="565" width="0.0812%" height="15" fill="rgb(233,199,23)" fg:x="296" fg:w="1"/><text x="24.2955%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="24.0455%" y="549" width="0.0812%" height="15" fill="rgb(247,7,51)" fg:x="296" fg:w="1"/><text x="24.2955%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="24.0455%" y="533" width="0.0812%" height="15" fill="rgb(214,146,12)" fg:x="296" fg:w="1"/><text x="24.2955%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.0455%" y="517" width="0.0812%" height="15" fill="rgb(234,181,43)" fg:x="296" fg:w="1"/><text x="24.2955%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.0455%" y="501" width="0.0812%" height="15" fill="rgb(239,148,6)" fg:x="296" fg:w="1"/><text x="24.2955%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="24.0455%" y="485" width="0.0812%" height="15" fill="rgb(206,151,17)" fg:x="296" fg:w="1"/><text x="24.2955%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="24.0455%" y="469" width="0.0812%" height="15" fill="rgb(213,215,10)" fg:x="296" fg:w="1"/><text x="24.2955%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="24.0455%" y="453" width="0.0812%" height="15" fill="rgb(215,220,44)" fg:x="296" fg:w="1"/><text x="24.2955%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="24.0455%" y="437" width="0.0812%" height="15" fill="rgb(245,205,37)" fg:x="296" fg:w="1"/><text x="24.2955%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="24.0455%" y="421" width="0.0812%" height="15" fill="rgb(245,130,43)" fg:x="296" fg:w="1"/><text x="24.2955%" y="431.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="24.1267%" y="677" width="0.0812%" height="15" fill="rgb(231,227,38)" fg:x="297" fg:w="1"/><text x="24.3767%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.1267%" y="661" width="0.0812%" height="15" fill="rgb(233,185,4)" fg:x="297" fg:w="1"/><text x="24.3767%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.1267%" y="645" width="0.0812%" height="15" fill="rgb(224,154,43)" fg:x="297" fg:w="1"/><text x="24.3767%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.1267%" y="629" width="0.0812%" height="15" fill="rgb(235,156,15)" fg:x="297" fg:w="1"/><text x="24.3767%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.1267%" y="613" width="0.0812%" height="15" fill="rgb(211,55,43)" fg:x="297" fg:w="1"/><text x="24.3767%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.1267%" y="597" width="0.0812%" height="15" fill="rgb(247,149,40)" fg:x="297" fg:w="1"/><text x="24.3767%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.1267%" y="581" width="0.0812%" height="15" fill="rgb(232,171,16)" fg:x="297" fg:w="1"/><text x="24.3767%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.1267%" y="565" width="0.0812%" height="15" fill="rgb(215,117,49)" fg:x="297" fg:w="1"/><text x="24.3767%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.1267%" y="549" width="0.0812%" height="15" fill="rgb(246,194,11)" fg:x="297" fg:w="1"/><text x="24.3767%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.1267%" y="533" width="0.0812%" height="15" fill="rgb(242,101,44)" fg:x="297" fg:w="1"/><text x="24.3767%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.1267%" y="517" width="0.0812%" height="15" fill="rgb(226,174,6)" fg:x="297" fg:w="1"/><text x="24.3767%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.1267%" y="501" width="0.0812%" height="15" fill="rgb(213,150,20)" fg:x="297" fg:w="1"/><text x="24.3767%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.1267%" y="485" width="0.0812%" height="15" fill="rgb(222,124,42)" fg:x="297" fg:w="1"/><text x="24.3767%" y="495.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="24.2080%" y="677" width="0.0812%" height="15" fill="rgb(250,19,47)" fg:x="298" fg:w="1"/><text x="24.4580%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="24.2080%" y="661" width="0.0812%" height="15" fill="rgb(241,217,19)" fg:x="298" fg:w="1"/><text x="24.4580%" y="671.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="24.2080%" y="645" width="0.0812%" height="15" fill="rgb(207,210,34)" fg:x="298" fg:w="1"/><text x="24.4580%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.2080%" y="629" width="0.0812%" height="15" fill="rgb(244,45,4)" fg:x="298" fg:w="1"/><text x="24.4580%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.2080%" y="613" width="0.0812%" height="15" fill="rgb(252,134,50)" fg:x="298" fg:w="1"/><text x="24.4580%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.2080%" y="597" width="0.0812%" height="15" fill="rgb(238,74,2)" fg:x="298" fg:w="1"/><text x="24.4580%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.2080%" y="581" width="0.0812%" height="15" fill="rgb(226,58,46)" fg:x="298" fg:w="1"/><text x="24.4580%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.2080%" y="565" width="0.0812%" height="15" fill="rgb(232,83,35)" fg:x="298" fg:w="1"/><text x="24.4580%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.2080%" y="549" width="0.0812%" height="15" fill="rgb(212,148,47)" fg:x="298" fg:w="1"/><text x="24.4580%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.2080%" y="533" width="0.0812%" height="15" fill="rgb(235,29,1)" fg:x="298" fg:w="1"/><text x="24.4580%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.2080%" y="517" width="0.0812%" height="15" fill="rgb(247,55,37)" fg:x="298" fg:w="1"/><text x="24.4580%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.2080%" y="501" width="0.0812%" height="15" fill="rgb(222,48,3)" fg:x="298" fg:w="1"/><text x="24.4580%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.2080%" y="485" width="0.0812%" height="15" fill="rgb(234,21,33)" fg:x="298" fg:w="1"/><text x="24.4580%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.2080%" y="469" width="0.0812%" height="15" fill="rgb(247,178,53)" fg:x="298" fg:w="1"/><text x="24.4580%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.2080%" y="453" width="0.0812%" height="15" fill="rgb(225,75,7)" fg:x="298" fg:w="1"/><text x="24.4580%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::HasScopes&gt;::into_scopes (1 samples, 0.08%)</title><rect x="24.2892%" y="645" width="0.0812%" height="15" fill="rgb(219,199,7)" fg:x="299" fg:w="1"/><text x="24.5392%" y="655.50"></text></g><g><title>engine::identifiers::model::get_gid (3 samples, 0.24%)</title><rect x="24.2892%" y="677" width="0.2437%" height="15" fill="rgb(209,93,42)" fg:x="299" fg:w="3"/><text x="24.5392%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="24.2892%" y="661" width="0.2437%" height="15" fill="rgb(240,175,17)" fg:x="299" fg:w="3"/><text x="24.5392%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="24.3704%" y="645" width="0.1625%" height="15" fill="rgb(232,106,7)" fg:x="300" fg:w="2"/><text x="24.6204%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.4517%" y="629" width="0.0812%" height="15" fill="rgb(242,106,43)" fg:x="301" fg:w="1"/><text x="24.7017%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.4517%" y="613" width="0.0812%" height="15" fill="rgb(242,61,37)" fg:x="301" fg:w="1"/><text x="24.7017%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.6141%" y="645" width="0.0812%" height="15" fill="rgb(205,72,10)" fg:x="303" fg:w="1"/><text x="24.8641%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.6141%" y="629" width="0.0812%" height="15" fill="rgb(214,184,36)" fg:x="303" fg:w="1"/><text x="24.8641%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.6141%" y="613" width="0.0812%" height="15" fill="rgb(206,107,18)" fg:x="303" fg:w="1"/><text x="24.8641%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.6141%" y="597" width="0.0812%" height="15" fill="rgb(210,75,5)" fg:x="303" fg:w="1"/><text x="24.8641%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.6141%" y="581" width="0.0812%" height="15" fill="rgb(205,3,19)" fg:x="303" fg:w="1"/><text x="24.8641%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.6141%" y="565" width="0.0812%" height="15" fill="rgb(207,181,42)" fg:x="303" fg:w="1"/><text x="24.8641%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.6141%" y="549" width="0.0812%" height="15" fill="rgb(229,179,43)" fg:x="303" fg:w="1"/><text x="24.8641%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.6141%" y="533" width="0.0812%" height="15" fill="rgb(246,95,30)" fg:x="303" fg:w="1"/><text x="24.8641%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.6141%" y="517" width="0.0812%" height="15" fill="rgb(234,144,45)" fg:x="303" fg:w="1"/><text x="24.8641%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.6141%" y="501" width="0.0812%" height="15" fill="rgb(250,54,25)" fg:x="303" fg:w="1"/><text x="24.8641%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.6141%" y="485" width="0.0812%" height="15" fill="rgb(215,195,40)" fg:x="303" fg:w="1"/><text x="24.8641%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.6141%" y="469" width="0.0812%" height="15" fill="rgb(233,188,42)" fg:x="303" fg:w="1"/><text x="24.8641%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="24.6954%" y="645" width="0.0812%" height="15" fill="rgb(247,227,35)" fg:x="304" fg:w="1"/><text x="24.9454%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="24.6954%" y="629" width="0.0812%" height="15" fill="rgb(249,124,27)" fg:x="304" fg:w="1"/><text x="24.9454%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="24.6954%" y="613" width="0.0812%" height="15" fill="rgb(219,207,25)" fg:x="304" fg:w="1"/><text x="24.9454%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="24.6954%" y="597" width="0.0812%" height="15" fill="rgb(241,216,47)" fg:x="304" fg:w="1"/><text x="24.9454%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="24.6954%" y="581" width="0.0812%" height="15" fill="rgb(233,82,50)" fg:x="304" fg:w="1"/><text x="24.9454%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="24.7766%" y="629" width="0.0812%" height="15" fill="rgb(232,63,2)" fg:x="305" fg:w="1"/><text x="25.0266%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="24.7766%" y="613" width="0.0812%" height="15" fill="rgb(236,184,28)" fg:x="305" fg:w="1"/><text x="25.0266%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="24.7766%" y="597" width="0.0812%" height="15" fill="rgb(254,63,27)" fg:x="305" fg:w="1"/><text x="25.0266%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="24.7766%" y="581" width="0.0812%" height="15" fill="rgb(253,106,28)" fg:x="305" fg:w="1"/><text x="25.0266%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.7766%" y="565" width="0.0812%" height="15" fill="rgb(225,141,39)" fg:x="305" fg:w="1"/><text x="25.0266%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="24.9391%" y="613" width="0.0812%" height="15" fill="rgb(222,157,20)" fg:x="307" fg:w="1"/><text x="25.1891%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="25.1015%" y="565" width="0.0812%" height="15" fill="rgb(210,190,9)" fg:x="309" fg:w="1"/><text x="25.3515%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.1015%" y="549" width="0.0812%" height="15" fill="rgb(242,167,7)" fg:x="309" fg:w="1"/><text x="25.3515%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.1015%" y="533" width="0.0812%" height="15" fill="rgb(227,82,41)" fg:x="309" fg:w="1"/><text x="25.3515%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.1015%" y="517" width="0.0812%" height="15" fill="rgb(222,131,13)" fg:x="309" fg:w="1"/><text x="25.3515%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="25.1015%" y="581" width="0.2437%" height="15" fill="rgb(221,98,26)" fg:x="309" fg:w="3"/><text x="25.3515%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="25.1828%" y="565" width="0.1625%" height="15" fill="rgb(251,63,52)" fg:x="310" fg:w="2"/><text x="25.4328%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.2640%" y="549" width="0.0812%" height="15" fill="rgb(246,25,43)" fg:x="311" fg:w="1"/><text x="25.5140%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.2640%" y="533" width="0.0812%" height="15" fill="rgb(247,167,15)" fg:x="311" fg:w="1"/><text x="25.5140%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="25.1015%" y="597" width="0.3249%" height="15" fill="rgb(240,104,42)" fg:x="309" fg:w="4"/><text x="25.3515%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.3452%" y="581" width="0.0812%" height="15" fill="rgb(224,54,6)" fg:x="312" fg:w="1"/><text x="25.5952%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.3452%" y="565" width="0.0812%" height="15" fill="rgb(244,108,35)" fg:x="312" fg:w="1"/><text x="25.5952%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="25.3452%" y="549" width="0.0812%" height="15" fill="rgb(216,154,2)" fg:x="312" fg:w="1"/><text x="25.5952%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="25.4265%" y="597" width="0.2437%" height="15" fill="rgb(222,8,47)" fg:x="313" fg:w="3"/><text x="25.6765%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.5890%" y="581" width="0.0812%" height="15" fill="rgb(252,93,1)" fg:x="315" fg:w="1"/><text x="25.8390%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="25.6702%" y="565" width="0.1625%" height="15" fill="rgb(223,226,51)" fg:x="316" fg:w="2"/><text x="25.9202%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.7514%" y="549" width="0.0812%" height="15" fill="rgb(206,147,9)" fg:x="317" fg:w="1"/><text x="26.0014%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.7514%" y="533" width="0.0812%" height="15" fill="rgb(248,180,41)" fg:x="317" fg:w="1"/><text x="26.0014%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="25.8327%" y="549" width="0.1625%" height="15" fill="rgb(209,47,50)" fg:x="318" fg:w="2"/><text x="26.0827%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="25.9951%" y="533" width="0.0812%" height="15" fill="rgb(243,65,31)" fg:x="320" fg:w="1"/><text x="26.2451%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.9951%" y="517" width="0.0812%" height="15" fill="rgb(228,128,1)" fg:x="320" fg:w="1"/><text x="26.2451%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.9951%" y="501" width="0.0812%" height="15" fill="rgb(231,192,16)" fg:x="320" fg:w="1"/><text x="26.2451%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="25.9951%" y="485" width="0.0812%" height="15" fill="rgb(224,26,40)" fg:x="320" fg:w="1"/><text x="26.2451%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="26.0764%" y="533" width="0.1625%" height="15" fill="rgb(214,192,17)" fg:x="321" fg:w="2"/><text x="26.3264%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="26.0764%" y="517" width="0.1625%" height="15" fill="rgb(225,147,18)" fg:x="321" fg:w="2"/><text x="26.3264%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="26.0764%" y="501" width="0.1625%" height="15" fill="rgb(205,35,11)" fg:x="321" fg:w="2"/><text x="26.3264%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="26.1576%" y="485" width="0.0812%" height="15" fill="rgb(242,40,42)" fg:x="322" fg:w="1"/><text x="26.4076%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="25.9951%" y="549" width="0.3249%" height="15" fill="rgb(250,170,13)" fg:x="320" fg:w="4"/><text x="26.2451%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.2388%" y="533" width="0.0812%" height="15" fill="rgb(240,161,28)" fg:x="323" fg:w="1"/><text x="26.4888%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.73%)</title><rect x="25.6702%" y="581" width="0.7311%" height="15" fill="rgb(245,179,12)" fg:x="316" fg:w="9"/><text x="25.9202%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.57%)</title><rect x="25.8327%" y="565" width="0.5686%" height="15" fill="rgb(250,92,32)" fg:x="318" fg:w="7"/><text x="26.0827%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.3201%" y="549" width="0.0812%" height="15" fill="rgb(233,10,40)" fg:x="324" fg:w="1"/><text x="26.5701%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.3201%" y="533" width="0.0812%" height="15" fill="rgb(217,98,1)" fg:x="324" fg:w="1"/><text x="26.5701%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.3201%" y="517" width="0.0812%" height="15" fill="rgb(238,202,7)" fg:x="324" fg:w="1"/><text x="26.5701%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.46%)</title><rect x="25.0203%" y="613" width="1.4622%" height="15" fill="rgb(222,91,3)" fg:x="308" fg:w="18"/><text x="25.2703%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="25.6702%" y="597" width="0.8123%" height="15" fill="rgb(211,170,49)" fg:x="316" fg:w="10"/><text x="25.9202%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.4013%" y="581" width="0.0812%" height="15" fill="rgb(253,139,18)" fg:x="325" fg:w="1"/><text x="26.6513%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.79%)</title><rect x="24.8578%" y="629" width="1.7872%" height="15" fill="rgb(222,4,43)" fg:x="306" fg:w="22"/><text x="25.1078%" y="639.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="26.4825%" y="613" width="0.1625%" height="15" fill="rgb(207,205,12)" fg:x="326" fg:w="2"/><text x="26.7325%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="26.4825%" y="597" width="0.1625%" height="15" fill="rgb(216,159,46)" fg:x="326" fg:w="2"/><text x="26.7325%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.5638%" y="581" width="0.0812%" height="15" fill="rgb(236,115,1)" fg:x="327" fg:w="1"/><text x="26.8138%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.5638%" y="565" width="0.0812%" height="15" fill="rgb(251,35,33)" fg:x="327" fg:w="1"/><text x="26.8138%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.5638%" y="549" width="0.0812%" height="15" fill="rgb(248,62,51)" fg:x="327" fg:w="1"/><text x="26.8138%" y="559.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (24 samples, 1.95%)</title><rect x="24.7766%" y="645" width="1.9496%" height="15" fill="rgb(254,180,19)" fg:x="305" fg:w="24"/><text x="25.0266%" y="655.50">&lt;..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.6450%" y="629" width="0.0812%" height="15" fill="rgb(217,100,32)" fg:x="328" fg:w="1"/><text x="26.8950%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.6450%" y="613" width="0.0812%" height="15" fill="rgb(224,71,22)" fg:x="328" fg:w="1"/><text x="26.8950%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.6450%" y="597" width="0.0812%" height="15" fill="rgb(251,185,33)" fg:x="328" fg:w="1"/><text x="26.8950%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.7262%" y="613" width="0.0812%" height="15" fill="rgb(209,75,48)" fg:x="329" fg:w="1"/><text x="26.9762%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.9699%" y="597" width="0.0812%" height="15" fill="rgb(253,190,16)" fg:x="332" fg:w="1"/><text x="27.2199%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.0512%" y="581" width="0.0812%" height="15" fill="rgb(226,140,1)" fg:x="333" fg:w="1"/><text x="27.3012%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.1324%" y="565" width="0.0812%" height="15" fill="rgb(206,75,30)" fg:x="334" fg:w="1"/><text x="27.3824%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="26.7262%" y="645" width="0.5686%" height="15" fill="rgb(231,208,37)" fg:x="329" fg:w="7"/><text x="26.9762%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.57%)</title><rect x="26.7262%" y="629" width="0.5686%" height="15" fill="rgb(238,136,40)" fg:x="329" fg:w="7"/><text x="26.9762%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="26.8075%" y="613" width="0.4874%" height="15" fill="rgb(247,137,17)" fg:x="330" fg:w="6"/><text x="27.0575%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="27.0512%" y="597" width="0.2437%" height="15" fill="rgb(240,60,40)" fg:x="333" fg:w="3"/><text x="27.3012%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="27.1324%" y="581" width="0.1625%" height="15" fill="rgb(236,68,50)" fg:x="334" fg:w="2"/><text x="27.3824%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.2136%" y="565" width="0.0812%" height="15" fill="rgb(230,42,12)" fg:x="335" fg:w="1"/><text x="27.4636%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.5386%" y="549" width="0.0812%" height="15" fill="rgb(219,16,16)" fg:x="339" fg:w="1"/><text x="27.7886%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="27.7011%" y="533" width="0.1625%" height="15" fill="rgb(220,38,35)" fg:x="341" fg:w="2"/><text x="27.9511%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="27.8635%" y="533" width="0.0812%" height="15" fill="rgb(228,33,1)" fg:x="343" fg:w="1"/><text x="28.1135%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.8635%" y="517" width="0.0812%" height="15" fill="rgb(241,46,31)" fg:x="343" fg:w="1"/><text x="28.1135%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.8635%" y="501" width="0.0812%" height="15" fill="rgb(232,58,20)" fg:x="343" fg:w="1"/><text x="28.1135%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.9448%" y="517" width="0.0812%" height="15" fill="rgb(206,228,53)" fg:x="344" fg:w="1"/><text x="28.1948%" y="527.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="28.1072%" y="501" width="0.3249%" height="15" fill="rgb(206,88,33)" fg:x="346" fg:w="4"/><text x="28.3572%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.14%)</title><rect x="27.3761%" y="613" width="1.1373%" height="15" fill="rgb(238,69,7)" fg:x="337" fg:w="14"/><text x="27.6261%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.14%)</title><rect x="27.3761%" y="597" width="1.1373%" height="15" fill="rgb(250,21,46)" fg:x="337" fg:w="14"/><text x="27.6261%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.14%)</title><rect x="27.3761%" y="581" width="1.1373%" height="15" fill="rgb(215,212,21)" fg:x="337" fg:w="14"/><text x="27.6261%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="27.5386%" y="565" width="0.9748%" height="15" fill="rgb(211,35,12)" fg:x="339" fg:w="12"/><text x="27.7886%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.89%)</title><rect x="27.6198%" y="549" width="0.8936%" height="15" fill="rgb(231,184,16)" fg:x="340" fg:w="11"/><text x="27.8698%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="27.9448%" y="533" width="0.5686%" height="15" fill="rgb(242,140,15)" fg:x="344" fg:w="7"/><text x="28.1948%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="28.0260%" y="517" width="0.4874%" height="15" fill="rgb(220,37,14)" fg:x="345" fg:w="6"/><text x="28.2760%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.4322%" y="501" width="0.0812%" height="15" fill="rgb(223,146,22)" fg:x="350" fg:w="1"/><text x="28.6822%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="28.7571%" y="565" width="0.1625%" height="15" fill="rgb(216,132,15)" fg:x="354" fg:w="2"/><text x="29.0071%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="28.8383%" y="549" width="0.0812%" height="15" fill="rgb(248,83,5)" fg:x="355" fg:w="1"/><text x="29.0883%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.41%)</title><rect x="28.5946%" y="581" width="0.4062%" height="15" fill="rgb(231,206,48)" fg:x="352" fg:w="5"/><text x="28.8446%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="28.9196%" y="565" width="0.0812%" height="15" fill="rgb(253,185,37)" fg:x="356" fg:w="1"/><text x="29.1696%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.57%)</title><rect x="28.5134%" y="597" width="0.5686%" height="15" fill="rgb(208,21,44)" fg:x="351" fg:w="7"/><text x="28.7634%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="29.0008%" y="581" width="0.0812%" height="15" fill="rgb(236,125,4)" fg:x="357" fg:w="1"/><text x="29.2508%" y="591.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (24 samples, 1.95%)</title><rect x="27.2949%" y="629" width="1.9496%" height="15" fill="rgb(226,134,25)" fg:x="336" fg:w="24"/><text x="27.5449%" y="639.50">&lt;..</text></g><g><title>treediff::diff::diff (9 samples, 0.73%)</title><rect x="28.5134%" y="613" width="0.7311%" height="15" fill="rgb(250,201,12)" fg:x="351" fg:w="9"/><text x="28.7634%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="29.0820%" y="597" width="0.1625%" height="15" fill="rgb(225,92,18)" fg:x="358" fg:w="2"/><text x="29.3320%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="29.0820%" y="581" width="0.1625%" height="15" fill="rgb(227,35,22)" fg:x="358" fg:w="2"/><text x="29.3320%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.1633%" y="565" width="0.0812%" height="15" fill="rgb(214,180,52)" fg:x="359" fg:w="1"/><text x="29.4133%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="29.2445%" y="629" width="0.0812%" height="15" fill="rgb(233,55,38)" fg:x="360" fg:w="1"/><text x="29.4945%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.2445%" y="613" width="0.0812%" height="15" fill="rgb(249,171,43)" fg:x="360" fg:w="1"/><text x="29.4945%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.4070%" y="597" width="0.0812%" height="15" fill="rgb(239,87,2)" fg:x="362" fg:w="1"/><text x="29.6570%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="29.4882%" y="597" width="0.3249%" height="15" fill="rgb(248,141,5)" fg:x="363" fg:w="4"/><text x="29.7382%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="29.5695%" y="581" width="0.2437%" height="15" fill="rgb(238,33,42)" fg:x="364" fg:w="3"/><text x="29.8195%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="29.6507%" y="565" width="0.1625%" height="15" fill="rgb(231,57,19)" fg:x="365" fg:w="2"/><text x="29.9007%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="29.8132%" y="597" width="0.1625%" height="15" fill="rgb(214,78,53)" fg:x="367" fg:w="2"/><text x="30.0632%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="29.8132%" y="581" width="0.1625%" height="15" fill="rgb(206,132,29)" fg:x="367" fg:w="2"/><text x="30.0632%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.8944%" y="565" width="0.0812%" height="15" fill="rgb(248,174,31)" fg:x="368" fg:w="1"/><text x="30.1444%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="29.9756%" y="597" width="0.1625%" height="15" fill="rgb(221,87,13)" fg:x="369" fg:w="2"/><text x="30.2256%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="30.1381%" y="597" width="0.0812%" height="15" fill="rgb(223,197,17)" fg:x="371" fg:w="1"/><text x="30.3881%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.1381%" y="581" width="0.0812%" height="15" fill="rgb(220,144,50)" fg:x="371" fg:w="1"/><text x="30.3881%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.1381%" y="565" width="0.0812%" height="15" fill="rgb(244,201,11)" fg:x="371" fg:w="1"/><text x="30.3881%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="30.3006%" y="581" width="0.0812%" height="15" fill="rgb(249,81,34)" fg:x="373" fg:w="1"/><text x="30.5506%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="30.4630%" y="549" width="0.1625%" height="15" fill="rgb(205,161,12)" fg:x="375" fg:w="2"/><text x="30.7130%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.5443%" y="533" width="0.0812%" height="15" fill="rgb(252,139,50)" fg:x="376" fg:w="1"/><text x="30.7943%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.5443%" y="517" width="0.0812%" height="15" fill="rgb(205,169,14)" fg:x="376" fg:w="1"/><text x="30.7943%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.6255%" y="501" width="0.0812%" height="15" fill="rgb(248,198,33)" fg:x="377" fg:w="1"/><text x="30.8755%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.6255%" y="485" width="0.0812%" height="15" fill="rgb(236,23,21)" fg:x="377" fg:w="1"/><text x="30.8755%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="30.6255%" y="549" width="0.2437%" height="15" fill="rgb(231,13,38)" fg:x="377" fg:w="3"/><text x="30.8755%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="30.6255%" y="533" width="0.2437%" height="15" fill="rgb(239,139,21)" fg:x="377" fg:w="3"/><text x="30.8755%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="30.6255%" y="517" width="0.2437%" height="15" fill="rgb(222,164,45)" fg:x="377" fg:w="3"/><text x="30.8755%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="30.7067%" y="501" width="0.1625%" height="15" fill="rgb(230,52,27)" fg:x="378" fg:w="2"/><text x="30.9567%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.7880%" y="485" width="0.0812%" height="15" fill="rgb(227,143,42)" fg:x="379" fg:w="1"/><text x="31.0380%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="30.9504%" y="453" width="0.1625%" height="15" fill="rgb(249,127,1)" fg:x="381" fg:w="2"/><text x="31.2004%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.0317%" y="437" width="0.0812%" height="15" fill="rgb(243,107,26)" fg:x="382" fg:w="1"/><text x="31.2817%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="30.8692%" y="533" width="0.3249%" height="15" fill="rgb(225,7,45)" fg:x="380" fg:w="4"/><text x="31.1192%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="30.8692%" y="517" width="0.3249%" height="15" fill="rgb(241,88,38)" fg:x="380" fg:w="4"/><text x="31.1192%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="30.9504%" y="501" width="0.2437%" height="15" fill="rgb(226,121,9)" fg:x="381" fg:w="3"/><text x="31.2004%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="30.9504%" y="485" width="0.2437%" height="15" fill="rgb(253,60,29)" fg:x="381" fg:w="3"/><text x="31.2004%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="30.9504%" y="469" width="0.2437%" height="15" fill="rgb(244,181,39)" fg:x="381" fg:w="3"/><text x="31.2004%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="31.1129%" y="453" width="0.0812%" height="15" fill="rgb(252,203,31)" fg:x="383" fg:w="1"/><text x="31.3629%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="31.1129%" y="437" width="0.0812%" height="15" fill="rgb(224,120,8)" fg:x="383" fg:w="1"/><text x="31.3629%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.1129%" y="421" width="0.0812%" height="15" fill="rgb(205,171,54)" fg:x="383" fg:w="1"/><text x="31.3629%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.1129%" y="405" width="0.0812%" height="15" fill="rgb(235,89,11)" fg:x="383" fg:w="1"/><text x="31.3629%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.1129%" y="389" width="0.0812%" height="15" fill="rgb(212,180,28)" fg:x="383" fg:w="1"/><text x="31.3629%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.81%)</title><rect x="30.4630%" y="565" width="0.8123%" height="15" fill="rgb(247,84,49)" fg:x="375" fg:w="10"/><text x="30.7130%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.41%)</title><rect x="30.8692%" y="549" width="0.4062%" height="15" fill="rgb(236,187,52)" fg:x="380" fg:w="5"/><text x="31.1192%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.1942%" y="533" width="0.0812%" height="15" fill="rgb(227,24,15)" fg:x="384" fg:w="1"/><text x="31.4442%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 1.06%)</title><rect x="30.3818%" y="581" width="1.0561%" height="15" fill="rgb(227,211,13)" fg:x="374" fg:w="13"/><text x="30.6318%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="31.2754%" y="565" width="0.1625%" height="15" fill="rgb(245,52,14)" fg:x="385" fg:w="2"/><text x="31.5254%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.3566%" y="549" width="0.0812%" height="15" fill="rgb(225,185,13)" fg:x="386" fg:w="1"/><text x="31.6066%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.4379%" y="581" width="0.0812%" height="15" fill="rgb(217,160,29)" fg:x="387" fg:w="1"/><text x="31.6879%" y="591.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (29 samples, 2.36%)</title><rect x="29.3258%" y="629" width="2.3558%" height="15" fill="rgb(216,115,53)" fg:x="361" fg:w="29"/><text x="29.5758%" y="639.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (29 samples, 2.36%)</title><rect x="29.3258%" y="613" width="2.3558%" height="15" fill="rgb(236,99,5)" fg:x="361" fg:w="29"/><text x="29.5758%" y="623.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (18 samples, 1.46%)</title><rect x="30.2193%" y="597" width="1.4622%" height="15" fill="rgb(222,60,38)" fg:x="372" fg:w="18"/><text x="30.4693%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="31.5191%" y="581" width="0.1625%" height="15" fill="rgb(212,82,22)" fg:x="388" fg:w="2"/><text x="31.7691%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="31.5191%" y="565" width="0.1625%" height="15" fill="rgb(214,48,28)" fg:x="388" fg:w="2"/><text x="31.7691%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.6003%" y="549" width="0.0812%" height="15" fill="rgb(245,196,50)" fg:x="389" fg:w="1"/><text x="31.8503%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="32.0877%" y="485" width="0.2437%" height="15" fill="rgb(225,159,46)" fg:x="395" fg:w="3"/><text x="32.3377%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="32.0877%" y="469" width="0.2437%" height="15" fill="rgb(207,195,48)" fg:x="395" fg:w="3"/><text x="32.3377%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="32.0877%" y="453" width="0.2437%" height="15" fill="rgb(240,73,3)" fg:x="395" fg:w="3"/><text x="32.3377%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.2502%" y="437" width="0.0812%" height="15" fill="rgb(245,57,23)" fg:x="397" fg:w="1"/><text x="32.5002%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.2502%" y="421" width="0.0812%" height="15" fill="rgb(240,75,18)" fg:x="397" fg:w="1"/><text x="32.5002%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="32.4939%" y="453" width="0.0812%" height="15" fill="rgb(238,168,12)" fg:x="400" fg:w="1"/><text x="32.7439%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="32.5751%" y="405" width="0.0812%" height="15" fill="rgb(226,20,40)" fg:x="401" fg:w="1"/><text x="32.8251%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="32.5751%" y="389" width="0.0812%" height="15" fill="rgb(224,130,35)" fg:x="401" fg:w="1"/><text x="32.8251%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.5751%" y="373" width="0.0812%" height="15" fill="rgb(225,63,41)" fg:x="401" fg:w="1"/><text x="32.8251%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.5751%" y="357" width="0.0812%" height="15" fill="rgb(219,3,3)" fg:x="401" fg:w="1"/><text x="32.8251%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.5751%" y="341" width="0.0812%" height="15" fill="rgb(218,157,4)" fg:x="401" fg:w="1"/><text x="32.8251%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="32.5751%" y="453" width="0.2437%" height="15" fill="rgb(232,76,36)" fg:x="401" fg:w="3"/><text x="32.8251%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="32.5751%" y="437" width="0.2437%" height="15" fill="rgb(247,36,0)" fg:x="401" fg:w="3"/><text x="32.8251%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="32.5751%" y="421" width="0.2437%" height="15" fill="rgb(205,2,34)" fg:x="401" fg:w="3"/><text x="32.8251%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="32.6564%" y="405" width="0.1625%" height="15" fill="rgb(239,136,13)" fg:x="402" fg:w="2"/><text x="32.9064%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="32.6564%" y="389" width="0.1625%" height="15" fill="rgb(253,122,12)" fg:x="402" fg:w="2"/><text x="32.9064%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="32.6564%" y="373" width="0.1625%" height="15" fill="rgb(222,174,7)" fg:x="402" fg:w="2"/><text x="32.9064%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="32.4127%" y="469" width="0.4874%" height="15" fill="rgb(208,191,42)" fg:x="399" fg:w="6"/><text x="32.6627%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.8188%" y="453" width="0.0812%" height="15" fill="rgb(237,212,15)" fg:x="404" fg:w="1"/><text x="33.0688%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="32.9001%" y="469" width="0.1625%" height="15" fill="rgb(215,65,20)" fg:x="405" fg:w="2"/><text x="33.1501%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="32.9001%" y="453" width="0.1625%" height="15" fill="rgb(232,103,11)" fg:x="405" fg:w="2"/><text x="33.1501%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.14%)</title><rect x="32.0877%" y="501" width="1.1373%" height="15" fill="rgb(235,148,18)" fg:x="395" fg:w="14"/><text x="32.3377%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.89%)</title><rect x="32.3314%" y="485" width="0.8936%" height="15" fill="rgb(240,173,7)" fg:x="398" fg:w="11"/><text x="32.5814%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.0626%" y="469" width="0.1625%" height="15" fill="rgb(228,182,25)" fg:x="407" fg:w="2"/><text x="33.3126%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.1438%" y="453" width="0.0812%" height="15" fill="rgb(247,3,52)" fg:x="408" fg:w="1"/><text x="33.3938%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.1438%" y="437" width="0.0812%" height="15" fill="rgb(226,155,8)" fg:x="408" fg:w="1"/><text x="33.3938%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="33.2250%" y="485" width="0.0812%" height="15" fill="rgb(243,195,38)" fg:x="409" fg:w="1"/><text x="33.4750%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="33.2250%" y="501" width="0.1625%" height="15" fill="rgb(254,181,33)" fg:x="409" fg:w="2"/><text x="33.4750%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.3063%" y="485" width="0.0812%" height="15" fill="rgb(232,98,23)" fg:x="410" fg:w="1"/><text x="33.5563%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (20 samples, 1.62%)</title><rect x="31.9253%" y="533" width="1.6247%" height="15" fill="rgb(205,23,10)" fg:x="393" fg:w="20"/><text x="32.1753%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18 samples, 1.46%)</title><rect x="32.0877%" y="517" width="1.4622%" height="15" fill="rgb(212,124,38)" fg:x="395" fg:w="18"/><text x="32.3377%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.3875%" y="501" width="0.1625%" height="15" fill="rgb(228,207,2)" fg:x="411" fg:w="2"/><text x="33.6375%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.3875%" y="485" width="0.1625%" height="15" fill="rgb(215,120,22)" fg:x="411" fg:w="2"/><text x="33.6375%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="33.3875%" y="469" width="0.1625%" height="15" fill="rgb(251,172,33)" fg:x="411" fg:w="2"/><text x="33.6375%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (23 samples, 1.87%)</title><rect x="31.7628%" y="565" width="1.8684%" height="15" fill="rgb(250,83,2)" fg:x="391" fg:w="23"/><text x="32.0128%" y="575.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (22 samples, 1.79%)</title><rect x="31.8440%" y="549" width="1.7872%" height="15" fill="rgb(210,132,53)" fg:x="392" fg:w="22"/><text x="32.0940%" y="559.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.5500%" y="533" width="0.0812%" height="15" fill="rgb(221,208,36)" fg:x="413" fg:w="1"/><text x="33.8000%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.5500%" y="517" width="0.0812%" height="15" fill="rgb(205,192,46)" fg:x="413" fg:w="1"/><text x="33.8000%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="33.6312%" y="565" width="0.2437%" height="15" fill="rgb(223,163,14)" fg:x="414" fg:w="3"/><text x="33.8812%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="33.7124%" y="549" width="0.1625%" height="15" fill="rgb(218,41,28)" fg:x="415" fg:w="2"/><text x="33.9624%" y="559.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (117 samples, 9.50%)</title><rect x="24.5329%" y="677" width="9.5045%" height="15" fill="rgb(235,104,10)" fg:x="302" fg:w="117"/><text x="24.7829%" y="687.50">engine::intern..</text></g><g><title>engine::session::SavesEntities::check_for_changes (117 samples, 9.50%)</title><rect x="24.5329%" y="661" width="9.5045%" height="15" fill="rgb(246,17,4)" fg:x="302" fg:w="117"/><text x="24.7829%" y="671.50">engine::sessio..</text></g><g><title>kernel::model::any_entity_changes (83 samples, 6.74%)</title><rect x="27.2949%" y="645" width="6.7425%" height="15" fill="rgb(240,7,16)" fg:x="336" fg:w="83"/><text x="27.5449%" y="655.50">kernel::m..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (29 samples, 2.36%)</title><rect x="31.6816%" y="629" width="2.3558%" height="15" fill="rgb(213,160,23)" fg:x="390" fg:w="29"/><text x="31.9316%" y="639.50">s..</text></g><g><title>serde_json::de::from_trait (29 samples, 2.36%)</title><rect x="31.6816%" y="613" width="2.3558%" height="15" fill="rgb(251,179,49)" fg:x="390" fg:w="29"/><text x="31.9316%" y="623.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (28 samples, 2.27%)</title><rect x="31.7628%" y="597" width="2.2746%" height="15" fill="rgb(247,198,10)" fg:x="391" fg:w="28"/><text x="32.0128%" y="607.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (28 samples, 2.27%)</title><rect x="31.7628%" y="581" width="2.2746%" height="15" fill="rgb(220,65,29)" fg:x="391" fg:w="28"/><text x="32.0128%" y="591.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.8749%" y="565" width="0.1625%" height="15" fill="rgb(237,171,28)" fg:x="417" fg:w="2"/><text x="34.1249%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.9561%" y="549" width="0.0812%" height="15" fill="rgb(228,44,26)" fg:x="418" fg:w="1"/><text x="34.2061%" y="559.50"></text></g><g><title>engine::session::Session::save_entity_changes (126 samples, 10.24%)</title><rect x="23.8830%" y="693" width="10.2356%" height="15" fill="rgb(216,210,27)" fg:x="294" fg:w="126"/><text x="24.1330%" y="703.50">engine::session..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="34.0374%" y="677" width="0.0812%" height="15" fill="rgb(252,10,17)" fg:x="419" fg:w="1"/><text x="34.2874%" y="687.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="34.0374%" y="661" width="0.0812%" height="15" fill="rgb(214,172,30)" fg:x="419" fg:w="1"/><text x="34.2874%" y="671.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="34.0374%" y="645" width="0.0812%" height="15" fill="rgb(253,130,48)" fg:x="419" fg:w="1"/><text x="34.2874%" y="655.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="34.0374%" y="629" width="0.0812%" height="15" fill="rgb(226,99,43)" fg:x="419" fg:w="1"/><text x="34.2874%" y="639.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="34.0374%" y="613" width="0.0812%" height="15" fill="rgb(239,111,26)" fg:x="419" fg:w="1"/><text x="34.2874%" y="623.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="34.0374%" y="597" width="0.0812%" height="15" fill="rgb(240,27,53)" fg:x="419" fg:w="1"/><text x="34.2874%" y="607.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.08%)</title><rect x="34.0374%" y="581" width="0.0812%" height="15" fill="rgb(254,163,12)" fg:x="419" fg:w="1"/><text x="34.2874%" y="591.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.08%)</title><rect x="34.0374%" y="565" width="0.0812%" height="15" fill="rgb(225,51,48)" fg:x="419" fg:w="1"/><text x="34.2874%" y="575.50"></text></g><g><title>engine::session::Session::close (129 samples, 10.48%)</title><rect x="23.7206%" y="709" width="10.4793%" height="15" fill="rgb(205,19,32)" fg:x="292" fg:w="129"/><text x="23.9706%" y="719.50">engine::session..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="34.1186%" y="693" width="0.0812%" height="15" fill="rgb(218,119,26)" fg:x="420" fg:w="1"/><text x="34.3686%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (1 samples, 0.08%)</title><rect x="34.4435%" y="629" width="0.0812%" height="15" fill="rgb(231,173,33)" fg:x="424" fg:w="1"/><text x="34.6935%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="34.4435%" y="613" width="0.0812%" height="15" fill="rgb(241,100,29)" fg:x="424" fg:w="1"/><text x="34.6935%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="34.4435%" y="597" width="0.0812%" height="15" fill="rgb(250,194,34)" fg:x="424" fg:w="1"/><text x="34.6935%" y="607.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="34.5248%" y="501" width="0.0812%" height="15" fill="rgb(215,23,50)" fg:x="425" fg:w="1"/><text x="34.7748%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="34.5248%" y="517" width="0.1625%" height="15" fill="rgb(206,49,37)" fg:x="425" fg:w="2"/><text x="34.7748%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="34.6060%" y="501" width="0.0812%" height="15" fill="rgb(247,39,21)" fg:x="426" fg:w="1"/><text x="34.8560%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="34.6060%" y="485" width="0.0812%" height="15" fill="rgb(209,220,15)" fg:x="426" fg:w="1"/><text x="34.8560%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.6060%" y="469" width="0.0812%" height="15" fill="rgb(206,41,33)" fg:x="426" fg:w="1"/><text x="34.8560%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.6060%" y="453" width="0.0812%" height="15" fill="rgb(221,225,45)" fg:x="426" fg:w="1"/><text x="34.8560%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.6060%" y="437" width="0.0812%" height="15" fill="rgb(216,27,18)" fg:x="426" fg:w="1"/><text x="34.8560%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.6060%" y="421" width="0.0812%" height="15" fill="rgb(250,193,34)" fg:x="426" fg:w="1"/><text x="34.8560%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.6060%" y="405" width="0.0812%" height="15" fill="rgb(227,215,20)" fg:x="426" fg:w="1"/><text x="34.8560%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="34.6872%" y="501" width="0.0812%" height="15" fill="rgb(242,211,27)" fg:x="427" fg:w="1"/><text x="34.9372%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.7685%" y="421" width="0.0812%" height="15" fill="rgb(229,190,30)" fg:x="428" fg:w="1"/><text x="35.0185%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.7685%" y="405" width="0.0812%" height="15" fill="rgb(253,31,29)" fg:x="428" fg:w="1"/><text x="35.0185%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (5 samples, 0.41%)</title><rect x="34.5248%" y="549" width="0.4062%" height="15" fill="rgb(229,177,52)" fg:x="425" fg:w="5"/><text x="34.7748%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.41%)</title><rect x="34.5248%" y="533" width="0.4062%" height="15" fill="rgb(226,88,8)" fg:x="425" fg:w="5"/><text x="34.7748%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="34.6872%" y="517" width="0.2437%" height="15" fill="rgb(214,55,27)" fg:x="427" fg:w="3"/><text x="34.9372%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="34.7685%" y="501" width="0.1625%" height="15" fill="rgb(233,202,5)" fg:x="428" fg:w="2"/><text x="35.0185%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="34.7685%" y="485" width="0.1625%" height="15" fill="rgb(251,49,30)" fg:x="428" fg:w="2"/><text x="35.0185%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.7685%" y="469" width="0.1625%" height="15" fill="rgb(235,18,52)" fg:x="428" fg:w="2"/><text x="35.0185%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.7685%" y="453" width="0.1625%" height="15" fill="rgb(250,111,51)" fg:x="428" fg:w="2"/><text x="35.0185%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.7685%" y="437" width="0.1625%" height="15" fill="rgb(218,13,25)" fg:x="428" fg:w="2"/><text x="35.0185%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.8497%" y="421" width="0.0812%" height="15" fill="rgb(248,96,7)" fg:x="429" fg:w="1"/><text x="35.0997%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.8497%" y="405" width="0.0812%" height="15" fill="rgb(217,31,15)" fg:x="429" fg:w="1"/><text x="35.0997%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.8497%" y="389" width="0.0812%" height="15" fill="rgb(228,59,49)" fg:x="429" fg:w="1"/><text x="35.0997%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.8497%" y="373" width="0.0812%" height="15" fill="rgb(210,152,38)" fg:x="429" fg:w="1"/><text x="35.0997%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.8497%" y="357" width="0.0812%" height="15" fill="rgb(206,71,11)" fg:x="429" fg:w="1"/><text x="35.0997%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.8497%" y="341" width="0.0812%" height="15" fill="rgb(244,199,5)" fg:x="429" fg:w="1"/><text x="35.0997%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.8497%" y="325" width="0.0812%" height="15" fill="rgb(253,49,1)" fg:x="429" fg:w="1"/><text x="35.0997%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.8497%" y="309" width="0.0812%" height="15" fill="rgb(225,206,40)" fg:x="429" fg:w="1"/><text x="35.0997%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.8497%" y="293" width="0.0812%" height="15" fill="rgb(243,116,47)" fg:x="429" fg:w="1"/><text x="35.0997%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.8497%" y="277" width="0.0812%" height="15" fill="rgb(219,225,16)" fg:x="429" fg:w="1"/><text x="35.0997%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.8497%" y="261" width="0.0812%" height="15" fill="rgb(233,29,47)" fg:x="429" fg:w="1"/><text x="35.0997%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="34.9310%" y="549" width="0.0812%" height="15" fill="rgb(250,179,18)" fg:x="430" fg:w="1"/><text x="35.1810%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.9310%" y="533" width="0.0812%" height="15" fill="rgb(215,176,6)" fg:x="430" fg:w="1"/><text x="35.1810%" y="543.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="35.0122%" y="549" width="0.0812%" height="15" fill="rgb(214,117,39)" fg:x="431" fg:w="1"/><text x="35.2622%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.0122%" y="533" width="0.0812%" height="15" fill="rgb(247,183,36)" fg:x="431" fg:w="1"/><text x="35.2622%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="35.0934%" y="421" width="0.0812%" height="15" fill="rgb(237,200,3)" fg:x="432" fg:w="1"/><text x="35.3434%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.0934%" y="405" width="0.0812%" height="15" fill="rgb(212,220,24)" fg:x="432" fg:w="1"/><text x="35.3434%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="35.1747%" y="405" width="0.0812%" height="15" fill="rgb(245,216,20)" fg:x="433" fg:w="1"/><text x="35.4247%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="35.1747%" y="389" width="0.0812%" height="15" fill="rgb(219,124,7)" fg:x="433" fg:w="1"/><text x="35.4247%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="35.1747%" y="373" width="0.0812%" height="15" fill="rgb(227,167,8)" fg:x="433" fg:w="1"/><text x="35.4247%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="35.1747%" y="357" width="0.0812%" height="15" fill="rgb(241,37,2)" fg:x="433" fg:w="1"/><text x="35.4247%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="35.1747%" y="341" width="0.0812%" height="15" fill="rgb(238,134,33)" fg:x="433" fg:w="1"/><text x="35.4247%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="35.1747%" y="325" width="0.0812%" height="15" fill="rgb(248,48,27)" fg:x="433" fg:w="1"/><text x="35.4247%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="35.1747%" y="309" width="0.0812%" height="15" fill="rgb(212,14,16)" fg:x="433" fg:w="1"/><text x="35.4247%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="35.1747%" y="293" width="0.0812%" height="15" fill="rgb(217,205,37)" fg:x="433" fg:w="1"/><text x="35.4247%" y="303.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="35.0934%" y="533" width="0.2437%" height="15" fill="rgb(233,185,47)" fg:x="432" fg:w="3"/><text x="35.3434%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="35.0934%" y="517" width="0.2437%" height="15" fill="rgb(244,88,8)" fg:x="432" fg:w="3"/><text x="35.3434%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="35.0934%" y="501" width="0.2437%" height="15" fill="rgb(213,0,20)" fg:x="432" fg:w="3"/><text x="35.3434%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="35.0934%" y="485" width="0.2437%" height="15" fill="rgb(238,159,36)" fg:x="432" fg:w="3"/><text x="35.3434%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="35.0934%" y="469" width="0.2437%" height="15" fill="rgb(253,173,17)" fg:x="432" fg:w="3"/><text x="35.3434%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="35.0934%" y="453" width="0.2437%" height="15" fill="rgb(221,23,28)" fg:x="432" fg:w="3"/><text x="35.3434%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="35.0934%" y="437" width="0.2437%" height="15" fill="rgb(218,113,15)" fg:x="432" fg:w="3"/><text x="35.3434%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="35.1747%" y="421" width="0.1625%" height="15" fill="rgb(233,58,3)" fg:x="433" fg:w="2"/><text x="35.4247%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="35.2559%" y="405" width="0.0812%" height="15" fill="rgb(250,46,35)" fg:x="434" fg:w="1"/><text x="35.5059%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="35.2559%" y="389" width="0.0812%" height="15" fill="rgb(210,169,11)" fg:x="434" fg:w="1"/><text x="35.5059%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="35.2559%" y="373" width="0.0812%" height="15" fill="rgb(246,88,19)" fg:x="434" fg:w="1"/><text x="35.5059%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.3371%" y="501" width="0.0812%" height="15" fill="rgb(206,81,49)" fg:x="435" fg:w="1"/><text x="35.5871%" y="511.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="35.4184%" y="357" width="0.0812%" height="15" fill="rgb(232,144,18)" fg:x="436" fg:w="1"/><text x="35.6684%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="35.4184%" y="341" width="0.0812%" height="15" fill="rgb(235,2,27)" fg:x="436" fg:w="1"/><text x="35.6684%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="35.4184%" y="421" width="0.1625%" height="15" fill="rgb(239,157,39)" fg:x="436" fg:w="2"/><text x="35.6684%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="35.4184%" y="405" width="0.1625%" height="15" fill="rgb(220,11,17)" fg:x="436" fg:w="2"/><text x="35.6684%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="35.4184%" y="389" width="0.1625%" height="15" fill="rgb(243,94,50)" fg:x="436" fg:w="2"/><text x="35.6684%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="35.4184%" y="373" width="0.1625%" height="15" fill="rgb(218,22,0)" fg:x="436" fg:w="2"/><text x="35.6684%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.4996%" y="357" width="0.0812%" height="15" fill="rgb(249,70,21)" fg:x="437" fg:w="1"/><text x="35.7496%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.4996%" y="341" width="0.0812%" height="15" fill="rgb(245,111,46)" fg:x="437" fg:w="1"/><text x="35.7496%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="35.4996%" y="325" width="0.0812%" height="15" fill="rgb(244,183,12)" fg:x="437" fg:w="1"/><text x="35.7496%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="35.4184%" y="453" width="0.2437%" height="15" fill="rgb(207,117,0)" fg:x="436" fg:w="3"/><text x="35.6684%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="35.4184%" y="437" width="0.2437%" height="15" fill="rgb(206,20,43)" fg:x="436" fg:w="3"/><text x="35.6684%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.5808%" y="421" width="0.0812%" height="15" fill="rgb(221,104,11)" fg:x="438" fg:w="1"/><text x="35.8308%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.5808%" y="405" width="0.0812%" height="15" fill="rgb(254,36,50)" fg:x="438" fg:w="1"/><text x="35.8308%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="35.5808%" y="389" width="0.0812%" height="15" fill="rgb(252,17,15)" fg:x="438" fg:w="1"/><text x="35.8308%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.7433%" y="389" width="0.0812%" height="15" fill="rgb(219,129,43)" fg:x="440" fg:w="1"/><text x="35.9933%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="35.6621%" y="453" width="0.2437%" height="15" fill="rgb(205,34,45)" fg:x="439" fg:w="3"/><text x="35.9121%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="35.6621%" y="437" width="0.2437%" height="15" fill="rgb(251,201,32)" fg:x="439" fg:w="3"/><text x="35.9121%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="35.6621%" y="421" width="0.2437%" height="15" fill="rgb(205,56,0)" fg:x="439" fg:w="3"/><text x="35.9121%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="35.6621%" y="405" width="0.2437%" height="15" fill="rgb(211,193,27)" fg:x="439" fg:w="3"/><text x="35.9121%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="35.8245%" y="389" width="0.0812%" height="15" fill="rgb(231,100,42)" fg:x="441" fg:w="1"/><text x="36.0745%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.8245%" y="373" width="0.0812%" height="15" fill="rgb(245,85,27)" fg:x="441" fg:w="1"/><text x="36.0745%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (18 samples, 1.46%)</title><rect x="34.5248%" y="597" width="1.4622%" height="15" fill="rgb(241,76,24)" fg:x="425" fg:w="18"/><text x="34.7748%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (18 samples, 1.46%)</title><rect x="34.5248%" y="581" width="1.4622%" height="15" fill="rgb(249,157,15)" fg:x="425" fg:w="18"/><text x="34.7748%" y="591.50"></text></g><g><title>engine::internal::Entities::add_persisted (18 samples, 1.46%)</title><rect x="34.5248%" y="565" width="1.4622%" height="15" fill="rgb(222,218,25)" fg:x="425" fg:w="18"/><text x="34.7748%" y="575.50"></text></g><g><title>kernel::model::entity::Entity::from_str (11 samples, 0.89%)</title><rect x="35.0934%" y="549" width="0.8936%" height="15" fill="rgb(252,156,52)" fg:x="432" fg:w="11"/><text x="35.3434%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.65%)</title><rect x="35.3371%" y="533" width="0.6499%" height="15" fill="rgb(211,185,7)" fg:x="435" fg:w="8"/><text x="35.5871%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.65%)</title><rect x="35.3371%" y="517" width="0.6499%" height="15" fill="rgb(234,108,24)" fg:x="435" fg:w="8"/><text x="35.5871%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.57%)</title><rect x="35.4184%" y="501" width="0.5686%" height="15" fill="rgb(227,218,2)" fg:x="436" fg:w="7"/><text x="35.6684%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.57%)</title><rect x="35.4184%" y="485" width="0.5686%" height="15" fill="rgb(224,0,36)" fg:x="436" fg:w="7"/><text x="35.6684%" y="495.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.57%)</title><rect x="35.4184%" y="469" width="0.5686%" height="15" fill="rgb(233,201,10)" fg:x="436" fg:w="7"/><text x="35.6684%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.9058%" y="453" width="0.0812%" height="15" fill="rgb(252,209,14)" fg:x="442" fg:w="1"/><text x="36.1558%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="35.9058%" y="437" width="0.0812%" height="15" fill="rgb(205,93,49)" fg:x="442" fg:w="1"/><text x="36.1558%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="35.9058%" y="421" width="0.0812%" height="15" fill="rgb(234,116,45)" fg:x="442" fg:w="1"/><text x="36.1558%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="35.9058%" y="405" width="0.0812%" height="15" fill="rgb(248,89,35)" fg:x="442" fg:w="1"/><text x="36.1558%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="35.9058%" y="389" width="0.0812%" height="15" fill="rgb(233,167,45)" fg:x="442" fg:w="1"/><text x="36.1558%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::SeqDeserializer as serde::de::SeqAccess&gt;::size_hint (1 samples, 0.08%)</title><rect x="35.9058%" y="373" width="0.0812%" height="15" fill="rgb(248,228,14)" fg:x="442" fg:w="1"/><text x="36.1558%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.0682%" y="565" width="0.0812%" height="15" fill="rgb(246,91,14)" fg:x="444" fg:w="1"/><text x="36.3182%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.0682%" y="549" width="0.0812%" height="15" fill="rgb(227,142,5)" fg:x="444" fg:w="1"/><text x="36.3182%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.0682%" y="533" width="0.0812%" height="15" fill="rgb(221,63,33)" fg:x="444" fg:w="1"/><text x="36.3182%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.0682%" y="517" width="0.0812%" height="15" fill="rgb(233,49,0)" fg:x="444" fg:w="1"/><text x="36.3182%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.0682%" y="501" width="0.0812%" height="15" fill="rgb(251,115,38)" fg:x="444" fg:w="1"/><text x="36.3182%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.0682%" y="485" width="0.0812%" height="15" fill="rgb(231,214,32)" fg:x="444" fg:w="1"/><text x="36.3182%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.0682%" y="469" width="0.0812%" height="15" fill="rgb(248,73,46)" fg:x="444" fg:w="1"/><text x="36.3182%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.0682%" y="453" width="0.0812%" height="15" fill="rgb(237,156,4)" fg:x="444" fg:w="1"/><text x="36.3182%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.0682%" y="437" width="0.0812%" height="15" fill="rgb(227,132,2)" fg:x="444" fg:w="1"/><text x="36.3182%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.0682%" y="421" width="0.0812%" height="15" fill="rgb(248,161,9)" fg:x="444" fg:w="1"/><text x="36.3182%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.0682%" y="405" width="0.0812%" height="15" fill="rgb(238,77,38)" fg:x="444" fg:w="1"/><text x="36.3182%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.0682%" y="389" width="0.0812%" height="15" fill="rgb(222,166,40)" fg:x="444" fg:w="1"/><text x="36.3182%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.0682%" y="373" width="0.0812%" height="15" fill="rgb(214,168,45)" fg:x="444" fg:w="1"/><text x="36.3182%" y="383.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="35.9870%" y="597" width="0.2437%" height="15" fill="rgb(226,64,37)" fg:x="443" fg:w="3"/><text x="36.2370%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.0682%" y="581" width="0.1625%" height="15" fill="rgb(232,210,43)" fg:x="444" fg:w="2"/><text x="36.3182%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.1495%" y="565" width="0.0812%" height="15" fill="rgb(214,76,33)" fg:x="445" fg:w="1"/><text x="36.3995%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="36.2307%" y="597" width="0.0812%" height="15" fill="rgb(210,78,5)" fg:x="446" fg:w="1"/><text x="36.4807%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="36.2307%" y="581" width="0.0812%" height="15" fill="rgb(211,107,37)" fg:x="446" fg:w="1"/><text x="36.4807%" y="591.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (25 samples, 2.03%)</title><rect x="34.3623%" y="645" width="2.0309%" height="15" fill="rgb(249,67,16)" fg:x="423" fg:w="25"/><text x="34.6123%" y="655.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::scope (23 samples, 1.87%)</title><rect x="34.5248%" y="629" width="1.8684%" height="15" fill="rgb(222,114,31)" fg:x="425" fg:w="23"/><text x="34.7748%" y="639.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (23 samples, 1.87%)</title><rect x="34.5248%" y="613" width="1.8684%" height="15" fill="rgb(242,118,19)" fg:x="425" fg:w="23"/><text x="34.7748%" y="623.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.3119%" y="597" width="0.0812%" height="15" fill="rgb(223,115,1)" fg:x="447" fg:w="1"/><text x="36.5619%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.3119%" y="581" width="0.0812%" height="15" fill="rgb(241,182,54)" fg:x="447" fg:w="1"/><text x="36.5619%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.08%)</title><rect x="36.3119%" y="565" width="0.0812%" height="15" fill="rgb(244,166,36)" fg:x="447" fg:w="1"/><text x="36.5619%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="36.3932%" y="597" width="0.0812%" height="15" fill="rgb(241,52,43)" fg:x="448" fg:w="1"/><text x="36.6432%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.3932%" y="581" width="0.0812%" height="15" fill="rgb(236,82,9)" fg:x="448" fg:w="1"/><text x="36.6432%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.3932%" y="565" width="0.0812%" height="15" fill="rgb(241,119,0)" fg:x="448" fg:w="1"/><text x="36.6432%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.3932%" y="549" width="0.0812%" height="15" fill="rgb(221,19,22)" fg:x="448" fg:w="1"/><text x="36.6432%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.3932%" y="533" width="0.0812%" height="15" fill="rgb(254,144,35)" fg:x="448" fg:w="1"/><text x="36.6432%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.3932%" y="517" width="0.0812%" height="15" fill="rgb(246,132,30)" fg:x="448" fg:w="1"/><text x="36.6432%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.3932%" y="501" width="0.0812%" height="15" fill="rgb(234,69,28)" fg:x="448" fg:w="1"/><text x="36.6432%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.3932%" y="485" width="0.0812%" height="15" fill="rgb(219,106,47)" fg:x="448" fg:w="1"/><text x="36.6432%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.3932%" y="469" width="0.0812%" height="15" fill="rgb(218,79,24)" fg:x="448" fg:w="1"/><text x="36.6432%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.3932%" y="453" width="0.0812%" height="15" fill="rgb(225,26,21)" fg:x="448" fg:w="1"/><text x="36.6432%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.3932%" y="437" width="0.0812%" height="15" fill="rgb(217,68,49)" fg:x="448" fg:w="1"/><text x="36.6432%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.3932%" y="421" width="0.0812%" height="15" fill="rgb(220,204,28)" fg:x="448" fg:w="1"/><text x="36.6432%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.3932%" y="405" width="0.0812%" height="15" fill="rgb(237,208,43)" fg:x="448" fg:w="1"/><text x="36.6432%" y="415.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (2 samples, 0.16%)</title><rect x="36.3932%" y="645" width="0.1625%" height="15" fill="rgb(213,97,42)" fg:x="448" fg:w="2"/><text x="36.6432%" y="655.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="36.3932%" y="629" width="0.1625%" height="15" fill="rgb(238,96,52)" fg:x="448" fg:w="2"/><text x="36.6432%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="36.3932%" y="613" width="0.1625%" height="15" fill="rgb(228,14,13)" fg:x="448" fg:w="2"/><text x="36.6432%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="36.4744%" y="597" width="0.0812%" height="15" fill="rgb(219,123,13)" fg:x="449" fg:w="1"/><text x="36.7244%" y="607.50"></text></g><g><title>&lt;engine::perform::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (28 samples, 2.27%)</title><rect x="34.3623%" y="661" width="2.2746%" height="15" fill="rgb(216,144,17)" fg:x="423" fg:w="28"/><text x="34.6123%" y="671.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="36.5556%" y="645" width="0.0812%" height="15" fill="rgb(230,228,29)" fg:x="450" fg:w="1"/><text x="36.8056%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.5556%" y="629" width="0.0812%" height="15" fill="rgb(233,18,5)" fg:x="450" fg:w="1"/><text x="36.8056%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="36.6369%" y="661" width="0.0812%" height="15" fill="rgb(233,197,12)" fg:x="451" fg:w="1"/><text x="36.8869%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="36.6369%" y="645" width="0.0812%" height="15" fill="rgb(234,140,29)" fg:x="451" fg:w="1"/><text x="36.8869%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="37.1243%" y="517" width="0.1625%" height="15" fill="rgb(233,113,19)" fg:x="457" fg:w="2"/><text x="37.3743%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="37.1243%" y="501" width="0.1625%" height="15" fill="rgb(246,209,13)" fg:x="457" fg:w="2"/><text x="37.3743%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="37.0431%" y="533" width="0.3249%" height="15" fill="rgb(242,79,54)" fg:x="456" fg:w="4"/><text x="37.2931%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.2868%" y="517" width="0.0812%" height="15" fill="rgb(219,73,16)" fg:x="459" fg:w="1"/><text x="37.5368%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.57%)</title><rect x="37.0431%" y="549" width="0.5686%" height="15" fill="rgb(224,52,10)" fg:x="456" fg:w="7"/><text x="37.2931%" y="559.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="37.3680%" y="533" width="0.2437%" height="15" fill="rgb(237,179,5)" fg:x="460" fg:w="3"/><text x="37.6180%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.73%)</title><rect x="37.0431%" y="565" width="0.7311%" height="15" fill="rgb(231,20,6)" fg:x="456" fg:w="9"/><text x="37.2931%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="37.6117%" y="549" width="0.1625%" height="15" fill="rgb(253,171,45)" fg:x="463" fg:w="2"/><text x="37.8617%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.89%)</title><rect x="37.0431%" y="581" width="0.8936%" height="15" fill="rgb(230,75,49)" fg:x="456" fg:w="11"/><text x="37.2931%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="37.7742%" y="565" width="0.1625%" height="15" fill="rgb(216,83,46)" fg:x="465" fg:w="2"/><text x="38.0242%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.14%)</title><rect x="36.8806%" y="597" width="1.1373%" height="15" fill="rgb(236,56,9)" fg:x="454" fg:w="14"/><text x="37.1306%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.9366%" y="581" width="0.0812%" height="15" fill="rgb(215,28,34)" fg:x="467" fg:w="1"/><text x="38.1866%" y="591.50"></text></g><g><title>__libc_free (6 samples, 0.49%)</title><rect x="38.0179%" y="597" width="0.4874%" height="15" fill="rgb(230,222,20)" fg:x="468" fg:w="6"/><text x="38.2679%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.79%)</title><rect x="36.7994%" y="613" width="1.7872%" height="15" fill="rgb(235,209,51)" fg:x="453" fg:w="22"/><text x="37.0494%" y="623.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="38.5053%" y="597" width="0.0812%" height="15" fill="rgb(235,167,1)" fg:x="474" fg:w="1"/><text x="38.7553%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (23 samples, 1.87%)</title><rect x="36.7994%" y="629" width="1.8684%" height="15" fill="rgb(248,220,0)" fg:x="453" fg:w="23"/><text x="37.0494%" y="639.50">c..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.5865%" y="613" width="0.0812%" height="15" fill="rgb(239,0,18)" fg:x="475" fg:w="1"/><text x="38.8365%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.9115%" y="581" width="0.0812%" height="15" fill="rgb(229,179,11)" fg:x="479" fg:w="1"/><text x="39.1615%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.49%)</title><rect x="38.8302%" y="597" width="0.4874%" height="15" fill="rgb(226,116,53)" fg:x="478" fg:w="6"/><text x="39.0802%" y="607.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="38.9927%" y="581" width="0.3249%" height="15" fill="rgb(218,1,49)" fg:x="480" fg:w="4"/><text x="39.2427%" y="591.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3 samples, 0.24%)</title><rect x="39.3176%" y="597" width="0.2437%" height="15" fill="rgb(208,184,47)" fg:x="484" fg:w="3"/><text x="39.5676%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="39.3176%" y="581" width="0.2437%" height="15" fill="rgb(238,174,3)" fg:x="484" fg:w="3"/><text x="39.5676%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="39.3176%" y="565" width="0.2437%" height="15" fill="rgb(247,188,6)" fg:x="484" fg:w="3"/><text x="39.5676%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="39.3176%" y="549" width="0.2437%" height="15" fill="rgb(211,165,46)" fg:x="484" fg:w="3"/><text x="39.5676%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="39.5613%" y="597" width="0.1625%" height="15" fill="rgb(222,190,10)" fg:x="487" fg:w="2"/><text x="39.8113%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="39.5613%" y="581" width="0.1625%" height="15" fill="rgb(206,185,3)" fg:x="487" fg:w="2"/><text x="39.8113%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.6426%" y="565" width="0.0812%" height="15" fill="rgb(244,125,37)" fg:x="488" fg:w="1"/><text x="39.8926%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="39.8050%" y="469" width="0.0812%" height="15" fill="rgb(211,43,7)" fg:x="490" fg:w="1"/><text x="40.0550%" y="479.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="39.8050%" y="453" width="0.0812%" height="15" fill="rgb(250,41,42)" fg:x="490" fg:w="1"/><text x="40.0550%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.8050%" y="437" width="0.0812%" height="15" fill="rgb(254,54,42)" fg:x="490" fg:w="1"/><text x="40.0550%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.8050%" y="421" width="0.0812%" height="15" fill="rgb(213,71,43)" fg:x="490" fg:w="1"/><text x="40.0550%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.8050%" y="405" width="0.0812%" height="15" fill="rgb(249,3,44)" fg:x="490" fg:w="1"/><text x="40.0550%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.8050%" y="389" width="0.0812%" height="15" fill="rgb(229,80,41)" fg:x="490" fg:w="1"/><text x="40.0550%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.8050%" y="373" width="0.0812%" height="15" fill="rgb(231,25,28)" fg:x="490" fg:w="1"/><text x="40.0550%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.8050%" y="357" width="0.0812%" height="15" fill="rgb(208,79,48)" fg:x="490" fg:w="1"/><text x="40.0550%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.8050%" y="341" width="0.0812%" height="15" fill="rgb(207,196,38)" fg:x="490" fg:w="1"/><text x="40.0550%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.8050%" y="325" width="0.0812%" height="15" fill="rgb(228,105,49)" fg:x="490" fg:w="1"/><text x="40.0550%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.8050%" y="309" width="0.0812%" height="15" fill="rgb(237,99,15)" fg:x="490" fg:w="1"/><text x="40.0550%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.8050%" y="293" width="0.0812%" height="15" fill="rgb(224,207,46)" fg:x="490" fg:w="1"/><text x="40.0550%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.8050%" y="277" width="0.0812%" height="15" fill="rgb(249,117,50)" fg:x="490" fg:w="1"/><text x="40.0550%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.8050%" y="261" width="0.0812%" height="15" fill="rgb(248,17,13)" fg:x="490" fg:w="1"/><text x="40.0550%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.8050%" y="245" width="0.0812%" height="15" fill="rgb(228,187,36)" fg:x="490" fg:w="1"/><text x="40.0550%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.8863%" y="469" width="0.0812%" height="15" fill="rgb(234,132,20)" fg:x="491" fg:w="1"/><text x="40.1363%" y="479.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (3 samples, 0.24%)</title><rect x="40.1300%" y="325" width="0.2437%" height="15" fill="rgb(209,170,46)" fg:x="494" fg:w="3"/><text x="40.3800%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="40.2112%" y="309" width="0.1625%" height="15" fill="rgb(237,23,19)" fg:x="495" fg:w="2"/><text x="40.4612%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="40.2924%" y="293" width="0.0812%" height="15" fill="rgb(227,21,26)" fg:x="496" fg:w="1"/><text x="40.5424%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="40.2924%" y="277" width="0.0812%" height="15" fill="rgb(222,220,48)" fg:x="496" fg:w="1"/><text x="40.5424%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.2924%" y="261" width="0.0812%" height="15" fill="rgb(214,9,16)" fg:x="496" fg:w="1"/><text x="40.5424%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.2924%" y="245" width="0.0812%" height="15" fill="rgb(209,73,30)" fg:x="496" fg:w="1"/><text x="40.5424%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="40.2924%" y="229" width="0.0812%" height="15" fill="rgb(207,20,33)" fg:x="496" fg:w="1"/><text x="40.5424%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="40.2924%" y="213" width="0.0812%" height="15" fill="rgb(219,153,12)" fg:x="496" fg:w="1"/><text x="40.5424%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="40.2924%" y="197" width="0.0812%" height="15" fill="rgb(235,97,25)" fg:x="496" fg:w="1"/><text x="40.5424%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="40.2924%" y="181" width="0.0812%" height="15" fill="rgb(244,30,34)" fg:x="496" fg:w="1"/><text x="40.5424%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="40.2924%" y="165" width="0.0812%" height="15" fill="rgb(214,106,45)" fg:x="496" fg:w="1"/><text x="40.5424%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="40.2924%" y="149" width="0.0812%" height="15" fill="rgb(226,41,9)" fg:x="496" fg:w="1"/><text x="40.5424%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="40.2924%" y="133" width="0.0812%" height="15" fill="rgb(253,139,29)" fg:x="496" fg:w="1"/><text x="40.5424%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="40.2924%" y="117" width="0.0812%" height="15" fill="rgb(213,205,39)" fg:x="496" fg:w="1"/><text x="40.5424%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="40.2924%" y="101" width="0.0812%" height="15" fill="rgb(209,27,10)" fg:x="496" fg:w="1"/><text x="40.5424%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="40.2924%" y="85" width="0.0812%" height="15" fill="rgb(249,142,16)" fg:x="496" fg:w="1"/><text x="40.5424%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="40.2924%" y="69" width="0.0812%" height="15" fill="rgb(242,65,12)" fg:x="496" fg:w="1"/><text x="40.5424%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="40.2924%" y="53" width="0.0812%" height="15" fill="rgb(232,48,10)" fg:x="496" fg:w="1"/><text x="40.5424%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="40.2924%" y="37" width="0.0812%" height="15" fill="rgb(253,67,19)" fg:x="496" fg:w="1"/><text x="40.5424%" y="47.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.65%)</title><rect x="39.8050%" y="517" width="0.6499%" height="15" fill="rgb(227,93,29)" fg:x="490" fg:w="8"/><text x="40.0550%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (8 samples, 0.65%)</title><rect x="39.8050%" y="501" width="0.6499%" height="15" fill="rgb(226,189,53)" fg:x="490" fg:w="8"/><text x="40.0550%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (8 samples, 0.65%)</title><rect x="39.8050%" y="485" width="0.6499%" height="15" fill="rgb(223,224,1)" fg:x="490" fg:w="8"/><text x="40.0550%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.49%)</title><rect x="39.9675%" y="469" width="0.4874%" height="15" fill="rgb(221,84,32)" fg:x="492" fg:w="6"/><text x="40.2175%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (6 samples, 0.49%)</title><rect x="39.9675%" y="453" width="0.4874%" height="15" fill="rgb(214,189,28)" fg:x="492" fg:w="6"/><text x="40.2175%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.49%)</title><rect x="39.9675%" y="437" width="0.4874%" height="15" fill="rgb(234,7,52)" fg:x="492" fg:w="6"/><text x="40.2175%" y="447.50"></text></g><g><title>core::fmt::write (6 samples, 0.49%)</title><rect x="39.9675%" y="421" width="0.4874%" height="15" fill="rgb(249,73,31)" fg:x="492" fg:w="6"/><text x="40.2175%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (6 samples, 0.49%)</title><rect x="39.9675%" y="405" width="0.4874%" height="15" fill="rgb(253,153,41)" fg:x="492" fg:w="6"/><text x="40.2175%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (6 samples, 0.49%)</title><rect x="39.9675%" y="389" width="0.4874%" height="15" fill="rgb(249,52,34)" fg:x="492" fg:w="6"/><text x="40.2175%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (5 samples, 0.41%)</title><rect x="40.0487%" y="373" width="0.4062%" height="15" fill="rgb(236,177,47)" fg:x="493" fg:w="5"/><text x="40.2987%" y="383.50"></text></g><g><title>core::fmt::write (5 samples, 0.41%)</title><rect x="40.0487%" y="357" width="0.4062%" height="15" fill="rgb(252,185,45)" fg:x="493" fg:w="5"/><text x="40.2987%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="40.1300%" y="341" width="0.3249%" height="15" fill="rgb(251,15,30)" fg:x="494" fg:w="4"/><text x="40.3800%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.3737%" y="325" width="0.0812%" height="15" fill="rgb(233,31,4)" fg:x="497" fg:w="1"/><text x="40.6237%" y="335.50"></text></g><g><title>&lt;&amp;kernel::model::EntityPtr as core::convert::Into&lt;kernel::model::entity::EntityRef&gt;&gt;::into (2 samples, 0.16%)</title><rect x="40.4549%" y="437" width="0.1625%" height="15" fill="rgb(254,44,24)" fg:x="498" fg:w="2"/><text x="40.7049%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="40.4549%" y="421" width="0.1625%" height="15" fill="rgb(218,54,1)" fg:x="498" fg:w="2"/><text x="40.7049%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="40.4549%" y="405" width="0.1625%" height="15" fill="rgb(243,209,39)" fg:x="498" fg:w="2"/><text x="40.7049%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="40.4549%" y="389" width="0.1625%" height="15" fill="rgb(206,75,33)" fg:x="498" fg:w="2"/><text x="40.7049%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="40.4549%" y="373" width="0.1625%" height="15" fill="rgb(223,108,18)" fg:x="498" fg:w="2"/><text x="40.7049%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="40.4549%" y="357" width="0.1625%" height="15" fill="rgb(244,89,31)" fg:x="498" fg:w="2"/><text x="40.7049%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="40.4549%" y="341" width="0.1625%" height="15" fill="rgb(222,167,27)" fg:x="498" fg:w="2"/><text x="40.7049%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="40.4549%" y="325" width="0.1625%" height="15" fill="rgb(247,41,16)" fg:x="498" fg:w="2"/><text x="40.7049%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="40.4549%" y="309" width="0.1625%" height="15" fill="rgb(233,168,40)" fg:x="498" fg:w="2"/><text x="40.7049%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="40.4549%" y="293" width="0.1625%" height="15" fill="rgb(205,211,8)" fg:x="498" fg:w="2"/><text x="40.7049%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="40.4549%" y="277" width="0.1625%" height="15" fill="rgb(238,105,11)" fg:x="498" fg:w="2"/><text x="40.7049%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="40.4549%" y="261" width="0.1625%" height="15" fill="rgb(223,142,52)" fg:x="498" fg:w="2"/><text x="40.7049%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="40.4549%" y="245" width="0.1625%" height="15" fill="rgb(238,51,33)" fg:x="498" fg:w="2"/><text x="40.7049%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="40.6174%" y="373" width="0.0812%" height="15" fill="rgb(231,188,43)" fg:x="500" fg:w="1"/><text x="40.8674%" y="383.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="40.6174%" y="357" width="0.0812%" height="15" fill="rgb(216,92,17)" fg:x="500" fg:w="1"/><text x="40.8674%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="40.6174%" y="341" width="0.0812%" height="15" fill="rgb(228,2,40)" fg:x="500" fg:w="1"/><text x="40.8674%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.6174%" y="325" width="0.0812%" height="15" fill="rgb(226,73,15)" fg:x="500" fg:w="1"/><text x="40.8674%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.6174%" y="309" width="0.0812%" height="15" fill="rgb(227,66,46)" fg:x="500" fg:w="1"/><text x="40.8674%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.6174%" y="293" width="0.0812%" height="15" fill="rgb(209,71,6)" fg:x="500" fg:w="1"/><text x="40.8674%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.6174%" y="277" width="0.0812%" height="15" fill="rgb(246,100,25)" fg:x="500" fg:w="1"/><text x="40.8674%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.6174%" y="261" width="0.0812%" height="15" fill="rgb(248,185,27)" fg:x="500" fg:w="1"/><text x="40.8674%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.6174%" y="245" width="0.0812%" height="15" fill="rgb(225,118,47)" fg:x="500" fg:w="1"/><text x="40.8674%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.6986%" y="325" width="0.0812%" height="15" fill="rgb(220,185,44)" fg:x="501" fg:w="1"/><text x="40.9486%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.6986%" y="309" width="0.0812%" height="15" fill="rgb(227,95,24)" fg:x="501" fg:w="1"/><text x="40.9486%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.6986%" y="293" width="0.0812%" height="15" fill="rgb(252,84,24)" fg:x="501" fg:w="1"/><text x="40.9486%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.6986%" y="277" width="0.0812%" height="15" fill="rgb(240,34,44)" fg:x="501" fg:w="1"/><text x="40.9486%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.6986%" y="261" width="0.0812%" height="15" fill="rgb(209,72,54)" fg:x="501" fg:w="1"/><text x="40.9486%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.6986%" y="245" width="0.0812%" height="15" fill="rgb(226,19,45)" fg:x="501" fg:w="1"/><text x="40.9486%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.6986%" y="229" width="0.0812%" height="15" fill="rgb(246,7,45)" fg:x="501" fg:w="1"/><text x="40.9486%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.6986%" y="213" width="0.0812%" height="15" fill="rgb(225,45,2)" fg:x="501" fg:w="1"/><text x="40.9486%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.6986%" y="197" width="0.0812%" height="15" fill="rgb(221,80,29)" fg:x="501" fg:w="1"/><text x="40.9486%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.6986%" y="181" width="0.0812%" height="15" fill="rgb(228,11,19)" fg:x="501" fg:w="1"/><text x="40.9486%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.6986%" y="165" width="0.0812%" height="15" fill="rgb(243,17,21)" fg:x="501" fg:w="1"/><text x="40.9486%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.6986%" y="149" width="0.0812%" height="15" fill="rgb(243,88,8)" fg:x="501" fg:w="1"/><text x="40.9486%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.6986%" y="133" width="0.0812%" height="15" fill="rgb(214,17,9)" fg:x="501" fg:w="1"/><text x="40.9486%" y="143.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="40.6986%" y="117" width="0.0812%" height="15" fill="rgb(232,169,15)" fg:x="501" fg:w="1"/><text x="40.9486%" y="127.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="40.6986%" y="101" width="0.0812%" height="15" fill="rgb(232,86,53)" fg:x="501" fg:w="1"/><text x="40.9486%" y="111.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="40.6174%" y="405" width="0.2437%" height="15" fill="rgb(222,100,4)" fg:x="500" fg:w="3"/><text x="40.8674%" y="415.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="40.6174%" y="389" width="0.2437%" height="15" fill="rgb(253,151,38)" fg:x="500" fg:w="3"/><text x="40.8674%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="40.6986%" y="373" width="0.1625%" height="15" fill="rgb(238,215,29)" fg:x="501" fg:w="2"/><text x="40.9486%" y="383.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="40.6986%" y="357" width="0.1625%" height="15" fill="rgb(205,128,53)" fg:x="501" fg:w="2"/><text x="40.9486%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="40.6986%" y="341" width="0.1625%" height="15" fill="rgb(248,183,14)" fg:x="501" fg:w="2"/><text x="40.9486%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.7799%" y="325" width="0.0812%" height="15" fill="rgb(244,172,35)" fg:x="502" fg:w="1"/><text x="41.0299%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.7799%" y="309" width="0.0812%" height="15" fill="rgb(234,93,19)" fg:x="502" fg:w="1"/><text x="41.0299%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.7799%" y="293" width="0.0812%" height="15" fill="rgb(227,109,7)" fg:x="502" fg:w="1"/><text x="41.0299%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.7799%" y="277" width="0.0812%" height="15" fill="rgb(233,136,54)" fg:x="502" fg:w="1"/><text x="41.0299%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="40.7799%" y="261" width="0.0812%" height="15" fill="rgb(233,19,40)" fg:x="502" fg:w="1"/><text x="41.0299%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.7799%" y="245" width="0.0812%" height="15" fill="rgb(247,41,18)" fg:x="502" fg:w="1"/><text x="41.0299%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.7799%" y="229" width="0.0812%" height="15" fill="rgb(220,34,34)" fg:x="502" fg:w="1"/><text x="41.0299%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.7799%" y="213" width="0.0812%" height="15" fill="rgb(222,135,32)" fg:x="502" fg:w="1"/><text x="41.0299%" y="223.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="40.7799%" y="197" width="0.0812%" height="15" fill="rgb(214,80,19)" fg:x="502" fg:w="1"/><text x="41.0299%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.8611%" y="357" width="0.0812%" height="15" fill="rgb(234,54,46)" fg:x="503" fg:w="1"/><text x="41.1111%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.8611%" y="341" width="0.0812%" height="15" fill="rgb(251,48,23)" fg:x="503" fg:w="1"/><text x="41.1111%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.8611%" y="325" width="0.0812%" height="15" fill="rgb(254,109,52)" fg:x="503" fg:w="1"/><text x="41.1111%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.8611%" y="309" width="0.0812%" height="15" fill="rgb(240,186,19)" fg:x="503" fg:w="1"/><text x="41.1111%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.8611%" y="293" width="0.0812%" height="15" fill="rgb(246,187,17)" fg:x="503" fg:w="1"/><text x="41.1111%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.8611%" y="277" width="0.0812%" height="15" fill="rgb(212,21,5)" fg:x="503" fg:w="1"/><text x="41.1111%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.9423%" y="261" width="0.0812%" height="15" fill="rgb(225,185,18)" fg:x="504" fg:w="1"/><text x="41.1923%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.9423%" y="245" width="0.0812%" height="15" fill="rgb(245,114,17)" fg:x="504" fg:w="1"/><text x="41.1923%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="40.9423%" y="229" width="0.0812%" height="15" fill="rgb(223,164,24)" fg:x="504" fg:w="1"/><text x="41.1923%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="40.8611%" y="405" width="0.3249%" height="15" fill="rgb(211,228,3)" fg:x="503" fg:w="4"/><text x="41.1111%" y="415.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="40.8611%" y="389" width="0.3249%" height="15" fill="rgb(223,16,38)" fg:x="503" fg:w="4"/><text x="41.1111%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="40.8611%" y="373" width="0.3249%" height="15" fill="rgb(207,31,54)" fg:x="503" fg:w="4"/><text x="41.1111%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="40.9423%" y="357" width="0.2437%" height="15" fill="rgb(220,39,11)" fg:x="504" fg:w="3"/><text x="41.1923%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.9423%" y="341" width="0.2437%" height="15" fill="rgb(235,185,0)" fg:x="504" fg:w="3"/><text x="41.1923%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="40.9423%" y="325" width="0.2437%" height="15" fill="rgb(249,39,18)" fg:x="504" fg:w="3"/><text x="41.1923%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.9423%" y="309" width="0.2437%" height="15" fill="rgb(240,110,33)" fg:x="504" fg:w="3"/><text x="41.1923%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="40.9423%" y="293" width="0.2437%" height="15" fill="rgb(210,92,42)" fg:x="504" fg:w="3"/><text x="41.1923%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.9423%" y="277" width="0.2437%" height="15" fill="rgb(218,215,28)" fg:x="504" fg:w="3"/><text x="41.1923%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.0236%" y="261" width="0.1625%" height="15" fill="rgb(238,215,36)" fg:x="505" fg:w="2"/><text x="41.2736%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.0236%" y="245" width="0.1625%" height="15" fill="rgb(220,31,10)" fg:x="505" fg:w="2"/><text x="41.2736%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.1048%" y="229" width="0.0812%" height="15" fill="rgb(212,93,14)" fg:x="506" fg:w="1"/><text x="41.3548%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.1048%" y="213" width="0.0812%" height="15" fill="rgb(254,207,2)" fg:x="506" fg:w="1"/><text x="41.3548%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="41.1048%" y="197" width="0.0812%" height="15" fill="rgb(205,57,44)" fg:x="506" fg:w="1"/><text x="41.3548%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.2673%" y="357" width="0.0812%" height="15" fill="rgb(226,151,19)" fg:x="508" fg:w="1"/><text x="41.5173%" y="367.50"></text></g><g><title>engine::internal::Entities::add_persisted (10 samples, 0.81%)</title><rect x="40.6174%" y="421" width="0.8123%" height="15" fill="rgb(230,72,30)" fg:x="500" fg:w="10"/><text x="40.8674%" y="431.50"></text></g><g><title>kernel::model::entity::Entity::from_str (3 samples, 0.24%)</title><rect x="41.1860%" y="405" width="0.2437%" height="15" fill="rgb(244,0,8)" fg:x="507" fg:w="3"/><text x="41.4360%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="41.1860%" y="389" width="0.2437%" height="15" fill="rgb(230,192,6)" fg:x="507" fg:w="3"/><text x="41.4360%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="41.1860%" y="373" width="0.2437%" height="15" fill="rgb(233,207,13)" fg:x="507" fg:w="3"/><text x="41.4360%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="41.3485%" y="357" width="0.0812%" height="15" fill="rgb(206,227,7)" fg:x="509" fg:w="1"/><text x="41.5985%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.3485%" y="341" width="0.0812%" height="15" fill="rgb(213,217,25)" fg:x="509" fg:w="1"/><text x="41.5985%" y="351.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="41.3485%" y="325" width="0.0812%" height="15" fill="rgb(249,75,4)" fg:x="509" fg:w="1"/><text x="41.5985%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.3485%" y="309" width="0.0812%" height="15" fill="rgb(225,114,18)" fg:x="509" fg:w="1"/><text x="41.5985%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="41.3485%" y="293" width="0.0812%" height="15" fill="rgb(211,162,40)" fg:x="509" fg:w="1"/><text x="41.5985%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="41.3485%" y="277" width="0.0812%" height="15" fill="rgb(206,49,29)" fg:x="509" fg:w="1"/><text x="41.5985%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.3485%" y="261" width="0.0812%" height="15" fill="rgb(244,8,6)" fg:x="509" fg:w="1"/><text x="41.5985%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="41.3485%" y="245" width="0.0812%" height="15" fill="rgb(231,194,28)" fg:x="509" fg:w="1"/><text x="41.5985%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="41.3485%" y="229" width="0.0812%" height="15" fill="rgb(210,69,5)" fg:x="509" fg:w="1"/><text x="41.5985%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.3485%" y="213" width="0.0812%" height="15" fill="rgb(216,186,12)" fg:x="509" fg:w="1"/><text x="41.5985%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="41.3485%" y="197" width="0.0812%" height="15" fill="rgb(238,61,15)" fg:x="509" fg:w="1"/><text x="41.5985%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="41.3485%" y="181" width="0.0812%" height="15" fill="rgb(226,104,1)" fg:x="509" fg:w="1"/><text x="41.5985%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.3485%" y="165" width="0.0812%" height="15" fill="rgb(229,128,15)" fg:x="509" fg:w="1"/><text x="41.5985%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="41.3485%" y="149" width="0.0812%" height="15" fill="rgb(247,110,15)" fg:x="509" fg:w="1"/><text x="41.5985%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="41.3485%" y="133" width="0.0812%" height="15" fill="rgb(210,74,48)" fg:x="509" fg:w="1"/><text x="41.5985%" y="143.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (13 samples, 1.06%)</title><rect x="40.4549%" y="453" width="1.0561%" height="15" fill="rgb(246,121,10)" fg:x="498" fg:w="13"/><text x="40.7049%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (11 samples, 0.89%)</title><rect x="40.6174%" y="437" width="0.8936%" height="15" fill="rgb(214,156,37)" fg:x="500" fg:w="11"/><text x="40.8674%" y="447.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="41.4297%" y="421" width="0.0812%" height="15" fill="rgb(214,210,34)" fg:x="510" fg:w="1"/><text x="41.6797%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="41.5110%" y="453" width="0.0812%" height="15" fill="rgb(237,93,35)" fg:x="511" fg:w="1"/><text x="41.7610%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="41.5110%" y="437" width="0.0812%" height="15" fill="rgb(206,36,8)" fg:x="511" fg:w="1"/><text x="41.7610%" y="447.50"></text></g><g><title>core::iter::adapters::try_process (23 samples, 1.87%)</title><rect x="39.8050%" y="533" width="1.8684%" height="15" fill="rgb(208,151,12)" fg:x="490" fg:w="23"/><text x="40.0550%" y="543.50">c..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (15 samples, 1.22%)</title><rect x="40.4549%" y="517" width="1.2185%" height="15" fill="rgb(225,133,52)" fg:x="498" fg:w="15"/><text x="40.7049%" y="527.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (15 samples, 1.22%)</title><rect x="40.4549%" y="501" width="1.2185%" height="15" fill="rgb(231,71,53)" fg:x="498" fg:w="15"/><text x="40.7049%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (15 samples, 1.22%)</title><rect x="40.4549%" y="485" width="1.2185%" height="15" fill="rgb(243,76,21)" fg:x="498" fg:w="15"/><text x="40.7049%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (15 samples, 1.22%)</title><rect x="40.4549%" y="469" width="1.2185%" height="15" fill="rgb(252,144,3)" fg:x="498" fg:w="15"/><text x="40.7049%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="41.5922%" y="453" width="0.0812%" height="15" fill="rgb(231,199,10)" fg:x="512" fg:w="1"/><text x="41.8422%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.5922%" y="437" width="0.0812%" height="15" fill="rgb(215,18,11)" fg:x="512" fg:w="1"/><text x="41.8422%" y="447.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.7547%" y="501" width="0.0812%" height="15" fill="rgb(241,65,24)" fg:x="514" fg:w="1"/><text x="42.0047%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.7547%" y="485" width="0.0812%" height="15" fill="rgb(251,192,38)" fg:x="514" fg:w="1"/><text x="42.0047%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.7547%" y="469" width="0.0812%" height="15" fill="rgb(205,9,35)" fg:x="514" fg:w="1"/><text x="42.0047%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.7547%" y="453" width="0.0812%" height="15" fill="rgb(229,225,49)" fg:x="514" fg:w="1"/><text x="42.0047%" y="463.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="41.8359%" y="501" width="0.1625%" height="15" fill="rgb(207,125,39)" fg:x="515" fg:w="2"/><text x="42.0859%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="41.8359%" y="485" width="0.1625%" height="15" fill="rgb(222,78,19)" fg:x="515" fg:w="2"/><text x="42.0859%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="41.8359%" y="469" width="0.1625%" height="15" fill="rgb(248,207,20)" fg:x="515" fg:w="2"/><text x="42.0859%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="41.8359%" y="453" width="0.1625%" height="15" fill="rgb(205,103,49)" fg:x="515" fg:w="2"/><text x="42.0859%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="41.9171%" y="437" width="0.0812%" height="15" fill="rgb(216,42,28)" fg:x="516" fg:w="1"/><text x="42.1671%" y="447.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="41.9984%" y="501" width="0.0812%" height="15" fill="rgb(213,205,53)" fg:x="517" fg:w="1"/><text x="42.2484%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="42.1608%" y="469" width="0.0812%" height="15" fill="rgb(239,140,53)" fg:x="519" fg:w="1"/><text x="42.4108%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.1608%" y="453" width="0.0812%" height="15" fill="rgb(248,95,9)" fg:x="519" fg:w="1"/><text x="42.4108%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.5670%" y="389" width="0.0812%" height="15" fill="rgb(254,58,47)" fg:x="524" fg:w="1"/><text x="42.8170%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.5670%" y="373" width="0.0812%" height="15" fill="rgb(234,227,14)" fg:x="524" fg:w="1"/><text x="42.8170%" y="383.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (36 samples, 2.92%)</title><rect x="39.8050%" y="549" width="2.9245%" height="15" fill="rgb(205,192,45)" fg:x="490" fg:w="36"/><text x="40.0550%" y="559.50">pl..</text></g><g><title>kernel::model::entry::Entry::scope (13 samples, 1.06%)</title><rect x="41.6734%" y="533" width="1.0561%" height="15" fill="rgb(253,187,31)" fg:x="513" fg:w="13"/><text x="41.9234%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (13 samples, 1.06%)</title><rect x="41.6734%" y="517" width="1.0561%" height="15" fill="rgb(222,6,32)" fg:x="513" fg:w="13"/><text x="41.9234%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.65%)</title><rect x="42.0796%" y="501" width="0.6499%" height="15" fill="rgb(249,190,19)" fg:x="518" fg:w="8"/><text x="42.3296%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.65%)</title><rect x="42.0796%" y="485" width="0.6499%" height="15" fill="rgb(251,28,20)" fg:x="518" fg:w="8"/><text x="42.3296%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (6 samples, 0.49%)</title><rect x="42.2421%" y="469" width="0.4874%" height="15" fill="rgb(210,223,40)" fg:x="520" fg:w="6"/><text x="42.4921%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (6 samples, 0.49%)</title><rect x="42.2421%" y="453" width="0.4874%" height="15" fill="rgb(216,137,22)" fg:x="520" fg:w="6"/><text x="42.4921%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (5 samples, 0.41%)</title><rect x="42.3233%" y="437" width="0.4062%" height="15" fill="rgb(247,39,34)" fg:x="521" fg:w="5"/><text x="42.5733%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.41%)</title><rect x="42.3233%" y="421" width="0.4062%" height="15" fill="rgb(239,43,50)" fg:x="521" fg:w="5"/><text x="42.5733%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="42.3233%" y="405" width="0.4062%" height="15" fill="rgb(241,212,9)" fg:x="521" fg:w="5"/><text x="42.5733%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="42.6483%" y="389" width="0.0812%" height="15" fill="rgb(205,8,2)" fg:x="525" fg:w="1"/><text x="42.8983%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="42.7295%" y="533" width="0.0812%" height="15" fill="rgb(217,173,54)" fg:x="526" fg:w="1"/><text x="42.9795%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="42.9732%" y="357" width="0.2437%" height="15" fill="rgb(208,149,52)" fg:x="529" fg:w="3"/><text x="43.2232%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="42.9732%" y="341" width="0.2437%" height="15" fill="rgb(239,99,40)" fg:x="529" fg:w="3"/><text x="43.2232%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="42.9732%" y="325" width="0.2437%" height="15" fill="rgb(233,214,26)" fg:x="529" fg:w="3"/><text x="43.2232%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="42.9732%" y="309" width="0.2437%" height="15" fill="rgb(231,225,37)" fg:x="529" fg:w="3"/><text x="43.2232%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="42.9732%" y="293" width="0.2437%" height="15" fill="rgb(252,55,35)" fg:x="529" fg:w="3"/><text x="43.2232%" y="303.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="42.9732%" y="277" width="0.2437%" height="15" fill="rgb(239,43,18)" fg:x="529" fg:w="3"/><text x="43.2232%" y="287.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="42.9732%" y="261" width="0.2437%" height="15" fill="rgb(251,125,49)" fg:x="529" fg:w="3"/><text x="43.2232%" y="271.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (6 samples, 0.49%)</title><rect x="42.8107%" y="501" width="0.4874%" height="15" fill="rgb(212,83,54)" fg:x="527" fg:w="6"/><text x="43.0607%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.49%)</title><rect x="42.8107%" y="485" width="0.4874%" height="15" fill="rgb(250,75,6)" fg:x="527" fg:w="6"/><text x="43.0607%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="42.9732%" y="469" width="0.3249%" height="15" fill="rgb(252,36,40)" fg:x="529" fg:w="4"/><text x="43.2232%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="42.9732%" y="453" width="0.3249%" height="15" fill="rgb(230,91,51)" fg:x="529" fg:w="4"/><text x="43.2232%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="42.9732%" y="437" width="0.3249%" height="15" fill="rgb(212,92,28)" fg:x="529" fg:w="4"/><text x="43.2232%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="42.9732%" y="421" width="0.3249%" height="15" fill="rgb(227,13,22)" fg:x="529" fg:w="4"/><text x="43.2232%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.32%)</title><rect x="42.9732%" y="405" width="0.3249%" height="15" fill="rgb(239,204,32)" fg:x="529" fg:w="4"/><text x="43.2232%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.32%)</title><rect x="42.9732%" y="389" width="0.3249%" height="15" fill="rgb(228,49,41)" fg:x="529" fg:w="4"/><text x="43.2232%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.32%)</title><rect x="42.9732%" y="373" width="0.3249%" height="15" fill="rgb(206,95,6)" fg:x="529" fg:w="4"/><text x="43.2232%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="43.2169%" y="357" width="0.0812%" height="15" fill="rgb(251,20,14)" fg:x="532" fg:w="1"/><text x="43.4669%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="43.2169%" y="341" width="0.0812%" height="15" fill="rgb(214,99,28)" fg:x="532" fg:w="1"/><text x="43.4669%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.4606%" y="245" width="0.0812%" height="15" fill="rgb(239,122,54)" fg:x="535" fg:w="1"/><text x="43.7106%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="43.4606%" y="293" width="0.2437%" height="15" fill="rgb(218,217,46)" fg:x="535" fg:w="3"/><text x="43.7106%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="43.4606%" y="277" width="0.2437%" height="15" fill="rgb(249,106,28)" fg:x="535" fg:w="3"/><text x="43.7106%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="43.4606%" y="261" width="0.2437%" height="15" fill="rgb(250,158,18)" fg:x="535" fg:w="3"/><text x="43.7106%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="43.5418%" y="245" width="0.1625%" height="15" fill="rgb(226,137,29)" fg:x="536" fg:w="2"/><text x="43.7918%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="43.4606%" y="373" width="0.3249%" height="15" fill="rgb(210,188,1)" fg:x="535" fg:w="4"/><text x="43.7106%" y="383.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="43.4606%" y="357" width="0.3249%" height="15" fill="rgb(227,84,42)" fg:x="535" fg:w="4"/><text x="43.7106%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="43.4606%" y="341" width="0.3249%" height="15" fill="rgb(222,147,48)" fg:x="535" fg:w="4"/><text x="43.7106%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="43.4606%" y="325" width="0.3249%" height="15" fill="rgb(241,150,43)" fg:x="535" fg:w="4"/><text x="43.7106%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="43.4606%" y="309" width="0.3249%" height="15" fill="rgb(206,139,52)" fg:x="535" fg:w="4"/><text x="43.7106%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.7043%" y="293" width="0.0812%" height="15" fill="rgb(230,63,14)" fg:x="538" fg:w="1"/><text x="43.9543%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.7043%" y="277" width="0.0812%" height="15" fill="rgb(247,8,20)" fg:x="538" fg:w="1"/><text x="43.9543%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.7043%" y="261" width="0.0812%" height="15" fill="rgb(213,115,4)" fg:x="538" fg:w="1"/><text x="43.9543%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.7043%" y="245" width="0.0812%" height="15" fill="rgb(241,79,49)" fg:x="538" fg:w="1"/><text x="43.9543%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.7043%" y="229" width="0.0812%" height="15" fill="rgb(222,42,35)" fg:x="538" fg:w="1"/><text x="43.9543%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.7043%" y="213" width="0.0812%" height="15" fill="rgb(247,59,23)" fg:x="538" fg:w="1"/><text x="43.9543%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.7043%" y="197" width="0.0812%" height="15" fill="rgb(247,93,18)" fg:x="538" fg:w="1"/><text x="43.9543%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.7043%" y="181" width="0.0812%" height="15" fill="rgb(249,107,47)" fg:x="538" fg:w="1"/><text x="43.9543%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.7043%" y="165" width="0.0812%" height="15" fill="rgb(219,27,1)" fg:x="538" fg:w="1"/><text x="43.9543%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.7043%" y="149" width="0.0812%" height="15" fill="rgb(217,82,32)" fg:x="538" fg:w="1"/><text x="43.9543%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.7043%" y="133" width="0.0812%" height="15" fill="rgb(250,129,47)" fg:x="538" fg:w="1"/><text x="43.9543%" y="143.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="43.7043%" y="117" width="0.0812%" height="15" fill="rgb(253,88,35)" fg:x="538" fg:w="1"/><text x="43.9543%" y="127.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="43.7855%" y="325" width="0.2437%" height="15" fill="rgb(245,221,14)" fg:x="539" fg:w="3"/><text x="44.0355%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="43.7855%" y="309" width="0.2437%" height="15" fill="rgb(217,119,54)" fg:x="539" fg:w="3"/><text x="44.0355%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="43.7855%" y="293" width="0.2437%" height="15" fill="rgb(247,128,31)" fg:x="539" fg:w="3"/><text x="44.0355%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="43.7855%" y="277" width="0.2437%" height="15" fill="rgb(211,99,22)" fg:x="539" fg:w="3"/><text x="44.0355%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="43.7855%" y="261" width="0.2437%" height="15" fill="rgb(212,20,17)" fg:x="539" fg:w="3"/><text x="44.0355%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="43.8668%" y="245" width="0.1625%" height="15" fill="rgb(209,159,29)" fg:x="540" fg:w="2"/><text x="44.1168%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="43.8668%" y="229" width="0.1625%" height="15" fill="rgb(222,177,53)" fg:x="540" fg:w="2"/><text x="44.1168%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="43.8668%" y="213" width="0.1625%" height="15" fill="rgb(234,46,43)" fg:x="540" fg:w="2"/><text x="44.1168%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="43.8668%" y="197" width="0.1625%" height="15" fill="rgb(208,108,14)" fg:x="540" fg:w="2"/><text x="44.1168%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="43.8668%" y="181" width="0.1625%" height="15" fill="rgb(226,78,53)" fg:x="540" fg:w="2"/><text x="44.1168%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="43.8668%" y="165" width="0.1625%" height="15" fill="rgb(230,20,41)" fg:x="540" fg:w="2"/><text x="44.1168%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="43.8668%" y="149" width="0.1625%" height="15" fill="rgb(213,195,35)" fg:x="540" fg:w="2"/><text x="44.1168%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="43.8668%" y="133" width="0.1625%" height="15" fill="rgb(242,62,36)" fg:x="540" fg:w="2"/><text x="44.1168%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="43.8668%" y="117" width="0.1625%" height="15" fill="rgb(222,210,37)" fg:x="540" fg:w="2"/><text x="44.1168%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="43.8668%" y="101" width="0.1625%" height="15" fill="rgb(232,107,19)" fg:x="540" fg:w="2"/><text x="44.1168%" y="111.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="43.8668%" y="85" width="0.1625%" height="15" fill="rgb(235,85,17)" fg:x="540" fg:w="2"/><text x="44.1168%" y="95.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="43.8668%" y="69" width="0.1625%" height="15" fill="rgb(219,195,31)" fg:x="540" fg:w="2"/><text x="44.1168%" y="79.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.0292%" y="229" width="0.0812%" height="15" fill="rgb(231,183,30)" fg:x="542" fg:w="1"/><text x="44.2792%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="44.0292%" y="213" width="0.0812%" height="15" fill="rgb(212,0,11)" fg:x="542" fg:w="1"/><text x="44.2792%" y="223.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (10 samples, 0.81%)</title><rect x="43.4606%" y="405" width="0.8123%" height="15" fill="rgb(249,53,54)" fg:x="535" fg:w="10"/><text x="43.7106%" y="415.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (10 samples, 0.81%)</title><rect x="43.4606%" y="389" width="0.8123%" height="15" fill="rgb(211,118,13)" fg:x="535" fg:w="10"/><text x="43.7106%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.49%)</title><rect x="43.7855%" y="373" width="0.4874%" height="15" fill="rgb(237,42,9)" fg:x="539" fg:w="6"/><text x="44.0355%" y="383.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.49%)</title><rect x="43.7855%" y="357" width="0.4874%" height="15" fill="rgb(227,68,32)" fg:x="539" fg:w="6"/><text x="44.0355%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.49%)</title><rect x="43.7855%" y="341" width="0.4874%" height="15" fill="rgb(238,10,7)" fg:x="539" fg:w="6"/><text x="44.0355%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="44.0292%" y="325" width="0.2437%" height="15" fill="rgb(224,42,12)" fg:x="542" fg:w="3"/><text x="44.2792%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="44.0292%" y="309" width="0.2437%" height="15" fill="rgb(252,190,5)" fg:x="542" fg:w="3"/><text x="44.2792%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="44.0292%" y="293" width="0.2437%" height="15" fill="rgb(220,214,39)" fg:x="542" fg:w="3"/><text x="44.2792%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="44.0292%" y="277" width="0.2437%" height="15" fill="rgb(247,98,4)" fg:x="542" fg:w="3"/><text x="44.2792%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="44.0292%" y="261" width="0.2437%" height="15" fill="rgb(211,60,12)" fg:x="542" fg:w="3"/><text x="44.2792%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="44.0292%" y="245" width="0.2437%" height="15" fill="rgb(224,42,10)" fg:x="542" fg:w="3"/><text x="44.2792%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="44.1105%" y="229" width="0.1625%" height="15" fill="rgb(217,167,4)" fg:x="543" fg:w="2"/><text x="44.3605%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.1105%" y="213" width="0.1625%" height="15" fill="rgb(253,18,17)" fg:x="543" fg:w="2"/><text x="44.3605%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="44.1105%" y="197" width="0.1625%" height="15" fill="rgb(249,186,44)" fg:x="543" fg:w="2"/><text x="44.3605%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.1917%" y="181" width="0.0812%" height="15" fill="rgb(254,124,54)" fg:x="544" fg:w="1"/><text x="44.4417%" y="191.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.5167%" y="293" width="0.0812%" height="15" fill="rgb(220,124,39)" fg:x="548" fg:w="1"/><text x="44.7667%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.5167%" y="277" width="0.0812%" height="15" fill="rgb(225,96,46)" fg:x="548" fg:w="1"/><text x="44.7667%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.5167%" y="261" width="0.0812%" height="15" fill="rgb(221,106,12)" fg:x="548" fg:w="1"/><text x="44.7667%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.5167%" y="245" width="0.0812%" height="15" fill="rgb(227,133,23)" fg:x="548" fg:w="1"/><text x="44.7667%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.5167%" y="229" width="0.0812%" height="15" fill="rgb(216,44,52)" fg:x="548" fg:w="1"/><text x="44.7667%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.5167%" y="213" width="0.0812%" height="15" fill="rgb(239,149,7)" fg:x="548" fg:w="1"/><text x="44.7667%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.5167%" y="197" width="0.0812%" height="15" fill="rgb(211,157,31)" fg:x="548" fg:w="1"/><text x="44.7667%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.5167%" y="181" width="0.0812%" height="15" fill="rgb(206,215,22)" fg:x="548" fg:w="1"/><text x="44.7667%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.5167%" y="165" width="0.0812%" height="15" fill="rgb(208,113,15)" fg:x="548" fg:w="1"/><text x="44.7667%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.5167%" y="149" width="0.0812%" height="15" fill="rgb(207,189,15)" fg:x="548" fg:w="1"/><text x="44.7667%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.5167%" y="133" width="0.0812%" height="15" fill="rgb(231,115,4)" fg:x="548" fg:w="1"/><text x="44.7667%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.5167%" y="117" width="0.0812%" height="15" fill="rgb(253,117,2)" fg:x="548" fg:w="1"/><text x="44.7667%" y="127.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.41%)</title><rect x="44.3542%" y="309" width="0.4062%" height="15" fill="rgb(248,48,24)" fg:x="546" fg:w="5"/><text x="44.6042%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="44.5979%" y="293" width="0.1625%" height="15" fill="rgb(241,28,46)" fg:x="549" fg:w="2"/><text x="44.8479%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.49%)</title><rect x="44.3542%" y="357" width="0.4874%" height="15" fill="rgb(216,165,52)" fg:x="546" fg:w="6"/><text x="44.6042%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.49%)</title><rect x="44.3542%" y="341" width="0.4874%" height="15" fill="rgb(220,222,34)" fg:x="546" fg:w="6"/><text x="44.6042%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.49%)</title><rect x="44.3542%" y="325" width="0.4874%" height="15" fill="rgb(247,222,49)" fg:x="546" fg:w="6"/><text x="44.6042%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.7604%" y="309" width="0.0812%" height="15" fill="rgb(240,10,31)" fg:x="551" fg:w="1"/><text x="45.0104%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="44.8416%" y="261" width="0.1625%" height="15" fill="rgb(221,199,35)" fg:x="552" fg:w="2"/><text x="45.0916%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (10 samples, 0.81%)</title><rect x="44.2729%" y="405" width="0.8123%" height="15" fill="rgb(230,223,11)" fg:x="545" fg:w="10"/><text x="44.5229%" y="415.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.81%)</title><rect x="44.2729%" y="389" width="0.8123%" height="15" fill="rgb(218,82,45)" fg:x="545" fg:w="10"/><text x="44.5229%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.81%)</title><rect x="44.2729%" y="373" width="0.8123%" height="15" fill="rgb(233,213,33)" fg:x="545" fg:w="10"/><text x="44.5229%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="44.8416%" y="357" width="0.2437%" height="15" fill="rgb(210,143,52)" fg:x="552" fg:w="3"/><text x="45.0916%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="44.8416%" y="341" width="0.2437%" height="15" fill="rgb(206,95,4)" fg:x="552" fg:w="3"/><text x="45.0916%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="44.8416%" y="325" width="0.2437%" height="15" fill="rgb(246,164,46)" fg:x="552" fg:w="3"/><text x="45.0916%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="44.8416%" y="309" width="0.2437%" height="15" fill="rgb(213,210,47)" fg:x="552" fg:w="3"/><text x="45.0916%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="44.8416%" y="293" width="0.2437%" height="15" fill="rgb(210,12,38)" fg:x="552" fg:w="3"/><text x="45.0916%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="44.8416%" y="277" width="0.2437%" height="15" fill="rgb(252,192,54)" fg:x="552" fg:w="3"/><text x="45.0916%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.0041%" y="261" width="0.0812%" height="15" fill="rgb(242,92,6)" fg:x="554" fg:w="1"/><text x="45.2541%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.0041%" y="245" width="0.0812%" height="15" fill="rgb(253,154,15)" fg:x="554" fg:w="1"/><text x="45.2541%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.0041%" y="229" width="0.0812%" height="15" fill="rgb(209,20,43)" fg:x="554" fg:w="1"/><text x="45.2541%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.0041%" y="213" width="0.0812%" height="15" fill="rgb(232,28,49)" fg:x="554" fg:w="1"/><text x="45.2541%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.0853%" y="405" width="0.0812%" height="15" fill="rgb(248,131,53)" fg:x="555" fg:w="1"/><text x="45.3353%" y="415.50"></text></g><g><title>engine::internal::EntityMap::add_entity (6 samples, 0.49%)</title><rect x="45.1665%" y="405" width="0.4874%" height="15" fill="rgb(214,16,30)" fg:x="556" fg:w="6"/><text x="45.4165%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.49%)</title><rect x="45.1665%" y="389" width="0.4874%" height="15" fill="rgb(245,16,0)" fg:x="556" fg:w="6"/><text x="45.4165%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.49%)</title><rect x="45.1665%" y="373" width="0.4874%" height="15" fill="rgb(245,17,35)" fg:x="556" fg:w="6"/><text x="45.4165%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.41%)</title><rect x="45.2478%" y="357" width="0.4062%" height="15" fill="rgb(249,27,53)" fg:x="557" fg:w="5"/><text x="45.4978%" y="367.50"></text></g><g><title>__libc_malloc (5 samples, 0.41%)</title><rect x="45.2478%" y="341" width="0.4062%" height="15" fill="rgb(214,73,24)" fg:x="557" fg:w="5"/><text x="45.4978%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="45.6539%" y="341" width="0.0812%" height="15" fill="rgb(223,84,37)" fg:x="562" fg:w="1"/><text x="45.9039%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="45.8164%" y="277" width="0.0812%" height="15" fill="rgb(210,109,28)" fg:x="564" fg:w="1"/><text x="46.0664%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.8164%" y="261" width="0.0812%" height="15" fill="rgb(208,186,6)" fg:x="564" fg:w="1"/><text x="46.0664%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.8976%" y="277" width="0.0812%" height="15" fill="rgb(235,201,30)" fg:x="565" fg:w="1"/><text x="46.1476%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.8976%" y="261" width="0.0812%" height="15" fill="rgb(216,198,48)" fg:x="565" fg:w="1"/><text x="46.1476%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.8976%" y="245" width="0.0812%" height="15" fill="rgb(254,186,25)" fg:x="565" fg:w="1"/><text x="46.1476%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.9789%" y="245" width="0.0812%" height="15" fill="rgb(227,87,5)" fg:x="566" fg:w="1"/><text x="46.2289%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.9789%" y="229" width="0.0812%" height="15" fill="rgb(236,205,25)" fg:x="566" fg:w="1"/><text x="46.2289%" y="239.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.65%)</title><rect x="45.6539%" y="389" width="0.6499%" height="15" fill="rgb(229,99,32)" fg:x="562" fg:w="8"/><text x="45.9039%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.65%)</title><rect x="45.6539%" y="373" width="0.6499%" height="15" fill="rgb(231,177,31)" fg:x="562" fg:w="8"/><text x="45.9039%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.65%)</title><rect x="45.6539%" y="357" width="0.6499%" height="15" fill="rgb(246,15,2)" fg:x="562" fg:w="8"/><text x="45.9039%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.57%)</title><rect x="45.7352%" y="341" width="0.5686%" height="15" fill="rgb(207,39,15)" fg:x="563" fg:w="7"/><text x="45.9852%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="45.7352%" y="325" width="0.5686%" height="15" fill="rgb(207,44,9)" fg:x="563" fg:w="7"/><text x="45.9852%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.57%)</title><rect x="45.7352%" y="309" width="0.5686%" height="15" fill="rgb(225,224,33)" fg:x="563" fg:w="7"/><text x="45.9852%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="45.7352%" y="293" width="0.5686%" height="15" fill="rgb(252,151,3)" fg:x="563" fg:w="7"/><text x="45.9852%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="45.9789%" y="277" width="0.3249%" height="15" fill="rgb(211,140,13)" fg:x="566" fg:w="4"/><text x="46.2289%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="45.9789%" y="261" width="0.3249%" height="15" fill="rgb(239,225,17)" fg:x="566" fg:w="4"/><text x="46.2289%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="46.0601%" y="245" width="0.2437%" height="15" fill="rgb(223,170,52)" fg:x="567" fg:w="3"/><text x="46.3101%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="46.1413%" y="229" width="0.1625%" height="15" fill="rgb(212,64,21)" fg:x="568" fg:w="2"/><text x="46.3913%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="46.1413%" y="213" width="0.1625%" height="15" fill="rgb(236,126,48)" fg:x="568" fg:w="2"/><text x="46.3913%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="46.2226%" y="197" width="0.0812%" height="15" fill="rgb(209,135,11)" fg:x="569" fg:w="1"/><text x="46.4726%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="46.2226%" y="181" width="0.0812%" height="15" fill="rgb(228,126,40)" fg:x="569" fg:w="1"/><text x="46.4726%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="46.2226%" y="165" width="0.0812%" height="15" fill="rgb(205,196,36)" fg:x="569" fg:w="1"/><text x="46.4726%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="46.5475%" y="325" width="0.0812%" height="15" fill="rgb(243,160,33)" fg:x="573" fg:w="1"/><text x="46.7975%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.6288%" y="325" width="0.0812%" height="15" fill="rgb(210,84,20)" fg:x="574" fg:w="1"/><text x="46.8788%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="46.6288%" y="309" width="0.0812%" height="15" fill="rgb(228,213,30)" fg:x="574" fg:w="1"/><text x="46.8788%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="46.6288%" y="293" width="0.0812%" height="15" fill="rgb(252,33,45)" fg:x="574" fg:w="1"/><text x="46.8788%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="46.7100%" y="309" width="0.1625%" height="15" fill="rgb(254,227,20)" fg:x="575" fg:w="2"/><text x="46.9600%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="46.7100%" y="293" width="0.1625%" height="15" fill="rgb(228,192,2)" fg:x="575" fg:w="2"/><text x="46.9600%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="46.7912%" y="277" width="0.0812%" height="15" fill="rgb(233,32,8)" fg:x="576" fg:w="1"/><text x="47.0412%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="46.7912%" y="261" width="0.0812%" height="15" fill="rgb(220,146,47)" fg:x="576" fg:w="1"/><text x="47.0412%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.7912%" y="245" width="0.0812%" height="15" fill="rgb(246,194,1)" fg:x="576" fg:w="1"/><text x="47.0412%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="46.8725%" y="309" width="0.0812%" height="15" fill="rgb(218,203,9)" fg:x="577" fg:w="1"/><text x="47.1225%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="46.8725%" y="293" width="0.0812%" height="15" fill="rgb(237,97,14)" fg:x="577" fg:w="1"/><text x="47.1225%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="46.8725%" y="277" width="0.0812%" height="15" fill="rgb(239,76,15)" fg:x="577" fg:w="1"/><text x="47.1225%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="46.8725%" y="261" width="0.0812%" height="15" fill="rgb(222,53,45)" fg:x="577" fg:w="1"/><text x="47.1225%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="46.9537%" y="293" width="0.0812%" height="15" fill="rgb(237,88,5)" fg:x="578" fg:w="1"/><text x="47.2037%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="47.0349%" y="229" width="0.1625%" height="15" fill="rgb(218,223,35)" fg:x="579" fg:w="2"/><text x="47.2849%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="47.1162%" y="213" width="0.0812%" height="15" fill="rgb(243,229,38)" fg:x="580" fg:w="1"/><text x="47.3662%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (10 samples, 0.81%)</title><rect x="46.4663%" y="357" width="0.8123%" height="15" fill="rgb(240,75,41)" fg:x="572" fg:w="10"/><text x="46.7163%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.81%)</title><rect x="46.4663%" y="341" width="0.8123%" height="15" fill="rgb(209,110,37)" fg:x="572" fg:w="10"/><text x="46.7163%" y="351.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.57%)</title><rect x="46.7100%" y="325" width="0.5686%" height="15" fill="rgb(221,130,46)" fg:x="575" fg:w="7"/><text x="46.9600%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="46.9537%" y="309" width="0.3249%" height="15" fill="rgb(237,160,20)" fg:x="578" fg:w="4"/><text x="47.2037%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="47.0349%" y="293" width="0.2437%" height="15" fill="rgb(234,126,24)" fg:x="579" fg:w="3"/><text x="47.2849%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="47.0349%" y="277" width="0.2437%" height="15" fill="rgb(207,177,9)" fg:x="579" fg:w="3"/><text x="47.2849%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="47.0349%" y="261" width="0.2437%" height="15" fill="rgb(231,191,33)" fg:x="579" fg:w="3"/><text x="47.2849%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="47.0349%" y="245" width="0.2437%" height="15" fill="rgb(207,42,1)" fg:x="579" fg:w="3"/><text x="47.2849%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="47.1974%" y="229" width="0.0812%" height="15" fill="rgb(218,34,50)" fg:x="581" fg:w="1"/><text x="47.4474%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.1974%" y="213" width="0.0812%" height="15" fill="rgb(254,126,39)" fg:x="581" fg:w="1"/><text x="47.4474%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="47.1974%" y="197" width="0.0812%" height="15" fill="rgb(251,17,26)" fg:x="581" fg:w="1"/><text x="47.4474%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="47.1974%" y="181" width="0.0812%" height="15" fill="rgb(252,215,34)" fg:x="581" fg:w="1"/><text x="47.4474%" y="191.50"></text></g><g><title>engine::internal::Entities::add_persisted (49 samples, 3.98%)</title><rect x="43.3794%" y="421" width="3.9805%" height="15" fill="rgb(217,120,44)" fg:x="534" fg:w="49"/><text x="43.6294%" y="431.50">engi..</text></g><g><title>kernel::model::entity::Entity::from_str (21 samples, 1.71%)</title><rect x="45.6539%" y="405" width="1.7059%" height="15" fill="rgb(211,31,11)" fg:x="562" fg:w="21"/><text x="45.9039%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (13 samples, 1.06%)</title><rect x="46.3038%" y="389" width="1.0561%" height="15" fill="rgb(222,69,51)" fg:x="570" fg:w="13"/><text x="46.5538%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.06%)</title><rect x="46.3038%" y="373" width="1.0561%" height="15" fill="rgb(215,229,42)" fg:x="570" fg:w="13"/><text x="46.5538%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.2786%" y="357" width="0.0812%" height="15" fill="rgb(212,102,15)" fg:x="582" fg:w="1"/><text x="47.5286%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.2786%" y="341" width="0.0812%" height="15" fill="rgb(205,179,41)" fg:x="582" fg:w="1"/><text x="47.5286%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="47.2786%" y="325" width="0.0812%" height="15" fill="rgb(219,148,46)" fg:x="582" fg:w="1"/><text x="47.5286%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (50 samples, 4.06%)</title><rect x="43.3794%" y="437" width="4.0617%" height="15" fill="rgb(243,40,19)" fg:x="534" fg:w="50"/><text x="43.6294%" y="447.50">&lt;eng..</text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="47.3599%" y="421" width="0.0812%" height="15" fill="rgb(208,206,34)" fg:x="583" fg:w="1"/><text x="47.6099%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (52 samples, 4.22%)</title><rect x="43.2981%" y="501" width="4.2242%" height="15" fill="rgb(244,184,38)" fg:x="533" fg:w="52"/><text x="43.5481%" y="511.50">&lt;plug..</text></g><g><title>core::iter::adapters::try_process (51 samples, 4.14%)</title><rect x="43.3794%" y="485" width="4.1430%" height="15" fill="rgb(244,151,47)" fg:x="534" fg:w="51"/><text x="43.6294%" y="495.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (51 samples, 4.14%)</title><rect x="43.3794%" y="469" width="4.1430%" height="15" fill="rgb(236,134,42)" fg:x="534" fg:w="51"/><text x="43.6294%" y="479.50">&lt;allo..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (51 samples, 4.14%)</title><rect x="43.3794%" y="453" width="4.1430%" height="15" fill="rgb(233,93,22)" fg:x="534" fg:w="51"/><text x="43.6294%" y="463.50">&lt;engi..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.4411%" y="437" width="0.0812%" height="15" fill="rgb(211,202,10)" fg:x="584" fg:w="1"/><text x="47.6911%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="47.5223%" y="501" width="0.1625%" height="15" fill="rgb(240,63,8)" fg:x="585" fg:w="2"/><text x="47.7723%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="47.6036%" y="485" width="0.0812%" height="15" fill="rgb(214,9,4)" fg:x="586" fg:w="1"/><text x="47.8536%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="47.6848%" y="501" width="0.0812%" height="15" fill="rgb(243,66,45)" fg:x="587" fg:w="1"/><text x="47.9348%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.0910%" y="389" width="0.0812%" height="15" fill="rgb(220,50,42)" fg:x="592" fg:w="1"/><text x="48.3410%" y="399.50"></text></g><g><title>plugins_core::tools::get_contained_keys (68 samples, 5.52%)</title><rect x="42.7295%" y="549" width="5.5240%" height="15" fill="rgb(220,134,27)" fg:x="526" fg:w="68"/><text x="42.9795%" y="559.50">plugins..</text></g><g><title>kernel::model::entry::Entry::scope (67 samples, 5.44%)</title><rect x="42.8107%" y="533" width="5.4427%" height="15" fill="rgb(246,151,50)" fg:x="527" fg:w="67"/><text x="43.0607%" y="543.50">kernel:..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (67 samples, 5.44%)</title><rect x="42.8107%" y="517" width="5.4427%" height="15" fill="rgb(238,216,27)" fg:x="527" fg:w="67"/><text x="43.0607%" y="527.50">kernel:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.49%)</title><rect x="47.7660%" y="501" width="0.4874%" height="15" fill="rgb(250,92,11)" fg:x="588" fg:w="6"/><text x="48.0160%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="47.7660%" y="485" width="0.4874%" height="15" fill="rgb(248,183,6)" fg:x="588" fg:w="6"/><text x="48.0160%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (5 samples, 0.41%)</title><rect x="47.8473%" y="469" width="0.4062%" height="15" fill="rgb(211,204,50)" fg:x="589" fg:w="5"/><text x="48.0973%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (5 samples, 0.41%)</title><rect x="47.8473%" y="453" width="0.4062%" height="15" fill="rgb(252,55,47)" fg:x="589" fg:w="5"/><text x="48.0973%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (4 samples, 0.32%)</title><rect x="47.9285%" y="437" width="0.3249%" height="15" fill="rgb(240,198,32)" fg:x="590" fg:w="4"/><text x="48.1785%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="47.9285%" y="421" width="0.3249%" height="15" fill="rgb(224,203,19)" fg:x="590" fg:w="4"/><text x="48.1785%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="47.9285%" y="405" width="0.3249%" height="15" fill="rgb(205,27,16)" fg:x="590" fg:w="4"/><text x="48.1785%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.1722%" y="389" width="0.0812%" height="15" fill="rgb(224,226,17)" fg:x="593" fg:w="1"/><text x="48.4222%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.3347%" y="533" width="0.0812%" height="15" fill="rgb(205,216,54)" fg:x="595" fg:w="1"/><text x="48.5847%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.4159%" y="469" width="0.0812%" height="15" fill="rgb(248,168,46)" fg:x="596" fg:w="1"/><text x="48.6659%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.4159%" y="453" width="0.0812%" height="15" fill="rgb(226,111,45)" fg:x="596" fg:w="1"/><text x="48.6659%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="48.4159%" y="437" width="0.0812%" height="15" fill="rgb(231,15,9)" fg:x="596" fg:w="1"/><text x="48.6659%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="48.4159%" y="421" width="0.0812%" height="15" fill="rgb(243,168,3)" fg:x="596" fg:w="1"/><text x="48.6659%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="48.4159%" y="405" width="0.0812%" height="15" fill="rgb(221,220,54)" fg:x="596" fg:w="1"/><text x="48.6659%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="48.4159%" y="389" width="0.0812%" height="15" fill="rgb(232,174,38)" fg:x="596" fg:w="1"/><text x="48.6659%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="48.4159%" y="373" width="0.0812%" height="15" fill="rgb(205,14,38)" fg:x="596" fg:w="1"/><text x="48.6659%" y="383.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="48.4159%" y="501" width="0.1625%" height="15" fill="rgb(234,89,19)" fg:x="596" fg:w="2"/><text x="48.6659%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="48.4159%" y="485" width="0.1625%" height="15" fill="rgb(216,68,51)" fg:x="596" fg:w="2"/><text x="48.6659%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.4972%" y="469" width="0.0812%" height="15" fill="rgb(213,49,2)" fg:x="597" fg:w="1"/><text x="48.7472%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (110 samples, 8.94%)</title><rect x="39.7238%" y="581" width="8.9358%" height="15" fill="rgb(242,146,30)" fg:x="489" fg:w="110"/><text x="39.9738%" y="591.50">&lt;alloc::vec::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (110 samples, 8.94%)</title><rect x="39.7238%" y="565" width="8.9358%" height="15" fill="rgb(224,188,11)" fg:x="489" fg:w="110"/><text x="39.9738%" y="575.50">&lt;core::iter::..</text></g><g><title>plugins_core::tools::get_occupant_keys (5 samples, 0.41%)</title><rect x="48.2535%" y="549" width="0.4062%" height="15" fill="rgb(213,159,11)" fg:x="594" fg:w="5"/><text x="48.5035%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="48.4159%" y="533" width="0.2437%" height="15" fill="rgb(229,13,31)" fg:x="596" fg:w="3"/><text x="48.6659%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="48.4159%" y="517" width="0.2437%" height="15" fill="rgb(209,103,11)" fg:x="596" fg:w="3"/><text x="48.6659%" y="527.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="48.5784%" y="501" width="0.0812%" height="15" fill="rgb(206,3,4)" fg:x="598" fg:w="1"/><text x="48.8284%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.8221%" y="533" width="0.0812%" height="15" fill="rgb(252,10,49)" fg:x="601" fg:w="1"/><text x="49.0721%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="48.9033%" y="517" width="0.0812%" height="15" fill="rgb(217,160,32)" fg:x="602" fg:w="1"/><text x="49.1533%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.9033%" y="501" width="0.0812%" height="15" fill="rgb(249,196,0)" fg:x="602" fg:w="1"/><text x="49.1533%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.9033%" y="485" width="0.0812%" height="15" fill="rgb(213,17,48)" fg:x="602" fg:w="1"/><text x="49.1533%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="48.9033%" y="469" width="0.0812%" height="15" fill="rgb(206,42,46)" fg:x="602" fg:w="1"/><text x="49.1533%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="48.9033%" y="453" width="0.0812%" height="15" fill="rgb(212,105,24)" fg:x="602" fg:w="1"/><text x="49.1533%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="48.9033%" y="437" width="0.0812%" height="15" fill="rgb(243,216,30)" fg:x="602" fg:w="1"/><text x="49.1533%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.9033%" y="421" width="0.0812%" height="15" fill="rgb(207,121,3)" fg:x="602" fg:w="1"/><text x="49.1533%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.9033%" y="405" width="0.0812%" height="15" fill="rgb(249,78,0)" fg:x="602" fg:w="1"/><text x="49.1533%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="48.9033%" y="389" width="0.0812%" height="15" fill="rgb(244,151,32)" fg:x="602" fg:w="1"/><text x="49.1533%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="48.9033%" y="373" width="0.0812%" height="15" fill="rgb(228,63,25)" fg:x="602" fg:w="1"/><text x="49.1533%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="48.9033%" y="357" width="0.0812%" height="15" fill="rgb(231,158,23)" fg:x="602" fg:w="1"/><text x="49.1533%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="48.9033%" y="341" width="0.0812%" height="15" fill="rgb(248,107,23)" fg:x="602" fg:w="1"/><text x="49.1533%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.9033%" y="325" width="0.0812%" height="15" fill="rgb(215,168,21)" fg:x="602" fg:w="1"/><text x="49.1533%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.9846%" y="501" width="0.0812%" height="15" fill="rgb(227,83,22)" fg:x="603" fg:w="1"/><text x="49.2346%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.9846%" y="485" width="0.0812%" height="15" fill="rgb(217,118,43)" fg:x="603" fg:w="1"/><text x="49.2346%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="48.9846%" y="469" width="0.0812%" height="15" fill="rgb(229,220,41)" fg:x="603" fg:w="1"/><text x="49.2346%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="48.9846%" y="453" width="0.0812%" height="15" fill="rgb(254,146,46)" fg:x="603" fg:w="1"/><text x="49.2346%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="48.9846%" y="437" width="0.0812%" height="15" fill="rgb(233,208,31)" fg:x="603" fg:w="1"/><text x="49.2346%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.9846%" y="421" width="0.0812%" height="15" fill="rgb(222,162,7)" fg:x="603" fg:w="1"/><text x="49.2346%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.9846%" y="405" width="0.0812%" height="15" fill="rgb(230,117,45)" fg:x="603" fg:w="1"/><text x="49.2346%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="48.9846%" y="389" width="0.0812%" height="15" fill="rgb(239,163,6)" fg:x="603" fg:w="1"/><text x="49.2346%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="48.9846%" y="373" width="0.0812%" height="15" fill="rgb(246,130,17)" fg:x="603" fg:w="1"/><text x="49.2346%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="48.9846%" y="357" width="0.0812%" height="15" fill="rgb(216,84,5)" fg:x="603" fg:w="1"/><text x="49.2346%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="48.9846%" y="341" width="0.0812%" height="15" fill="rgb(230,200,21)" fg:x="603" fg:w="1"/><text x="49.2346%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.9846%" y="325" width="0.0812%" height="15" fill="rgb(224,2,8)" fg:x="603" fg:w="1"/><text x="49.2346%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.0658%" y="421" width="0.0812%" height="15" fill="rgb(238,178,10)" fg:x="604" fg:w="1"/><text x="49.3158%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.0658%" y="405" width="0.0812%" height="15" fill="rgb(242,153,24)" fg:x="604" fg:w="1"/><text x="49.3158%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.0658%" y="389" width="0.0812%" height="15" fill="rgb(242,32,48)" fg:x="604" fg:w="1"/><text x="49.3158%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.0658%" y="373" width="0.0812%" height="15" fill="rgb(227,36,0)" fg:x="604" fg:w="1"/><text x="49.3158%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.0658%" y="357" width="0.0812%" height="15" fill="rgb(251,33,35)" fg:x="604" fg:w="1"/><text x="49.3158%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.0658%" y="341" width="0.0812%" height="15" fill="rgb(232,168,51)" fg:x="604" fg:w="1"/><text x="49.3158%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.0658%" y="325" width="0.0812%" height="15" fill="rgb(228,56,10)" fg:x="604" fg:w="1"/><text x="49.3158%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="49.0658%" y="309" width="0.0812%" height="15" fill="rgb(231,10,26)" fg:x="604" fg:w="1"/><text x="49.3158%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="49.0658%" y="293" width="0.0812%" height="15" fill="rgb(226,202,12)" fg:x="604" fg:w="1"/><text x="49.3158%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="49.0658%" y="277" width="0.0812%" height="15" fill="rgb(251,49,21)" fg:x="604" fg:w="1"/><text x="49.3158%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="49.0658%" y="261" width="0.0812%" height="15" fill="rgb(206,228,28)" fg:x="604" fg:w="1"/><text x="49.3158%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.0658%" y="245" width="0.0812%" height="15" fill="rgb(205,198,31)" fg:x="604" fg:w="1"/><text x="49.3158%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.1470%" y="421" width="0.0812%" height="15" fill="rgb(213,69,1)" fg:x="605" fg:w="1"/><text x="49.3970%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.3095%" y="389" width="0.0812%" height="15" fill="rgb(209,177,9)" fg:x="607" fg:w="1"/><text x="49.5595%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.3095%" y="373" width="0.0812%" height="15" fill="rgb(227,119,30)" fg:x="607" fg:w="1"/><text x="49.5595%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="49.3095%" y="357" width="0.0812%" height="15" fill="rgb(234,106,41)" fg:x="607" fg:w="1"/><text x="49.5595%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="49.3095%" y="341" width="0.0812%" height="15" fill="rgb(244,103,47)" fg:x="607" fg:w="1"/><text x="49.5595%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="49.3095%" y="325" width="0.0812%" height="15" fill="rgb(212,211,25)" fg:x="607" fg:w="1"/><text x="49.5595%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="49.3095%" y="309" width="0.0812%" height="15" fill="rgb(208,63,53)" fg:x="607" fg:w="1"/><text x="49.5595%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.3095%" y="293" width="0.0812%" height="15" fill="rgb(213,176,21)" fg:x="607" fg:w="1"/><text x="49.5595%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.3095%" y="277" width="0.0812%" height="15" fill="rgb(243,124,12)" fg:x="607" fg:w="1"/><text x="49.5595%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="49.3095%" y="261" width="0.0812%" height="15" fill="rgb(239,2,35)" fg:x="607" fg:w="1"/><text x="49.5595%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="49.3095%" y="245" width="0.0812%" height="15" fill="rgb(253,169,22)" fg:x="607" fg:w="1"/><text x="49.5595%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.3095%" y="229" width="0.0812%" height="15" fill="rgb(254,51,12)" fg:x="607" fg:w="1"/><text x="49.5595%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.3095%" y="213" width="0.0812%" height="15" fill="rgb(244,17,47)" fg:x="607" fg:w="1"/><text x="49.5595%" y="223.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="49.3907%" y="373" width="0.0812%" height="15" fill="rgb(251,45,46)" fg:x="608" fg:w="1"/><text x="49.6407%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="49.3907%" y="357" width="0.0812%" height="15" fill="rgb(223,87,43)" fg:x="608" fg:w="1"/><text x="49.6407%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.3907%" y="341" width="0.0812%" height="15" fill="rgb(230,132,31)" fg:x="608" fg:w="1"/><text x="49.6407%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="49.3907%" y="325" width="0.0812%" height="15" fill="rgb(206,99,1)" fg:x="608" fg:w="1"/><text x="49.6407%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.3907%" y="309" width="0.0812%" height="15" fill="rgb(227,110,25)" fg:x="608" fg:w="1"/><text x="49.6407%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.3907%" y="293" width="0.0812%" height="15" fill="rgb(217,182,7)" fg:x="608" fg:w="1"/><text x="49.6407%" y="303.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="49.3907%" y="277" width="0.0812%" height="15" fill="rgb(250,176,4)" fg:x="608" fg:w="1"/><text x="49.6407%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="49.3907%" y="261" width="0.0812%" height="15" fill="rgb(244,98,30)" fg:x="608" fg:w="1"/><text x="49.6407%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="49.3907%" y="245" width="0.0812%" height="15" fill="rgb(228,150,42)" fg:x="608" fg:w="1"/><text x="49.6407%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="49.3907%" y="229" width="0.0812%" height="15" fill="rgb(231,91,46)" fg:x="608" fg:w="1"/><text x="49.6407%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.3907%" y="213" width="0.0812%" height="15" fill="rgb(252,161,32)" fg:x="608" fg:w="1"/><text x="49.6407%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.3907%" y="197" width="0.0812%" height="15" fill="rgb(236,69,41)" fg:x="608" fg:w="1"/><text x="49.6407%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="49.3907%" y="181" width="0.0812%" height="15" fill="rgb(212,160,3)" fg:x="608" fg:w="1"/><text x="49.6407%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="49.3907%" y="165" width="0.0812%" height="15" fill="rgb(216,5,50)" fg:x="608" fg:w="1"/><text x="49.6407%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.3907%" y="149" width="0.0812%" height="15" fill="rgb(241,138,25)" fg:x="608" fg:w="1"/><text x="49.6407%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="49.3907%" y="133" width="0.0812%" height="15" fill="rgb(239,42,18)" fg:x="608" fg:w="1"/><text x="49.6407%" y="143.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="49.3907%" y="117" width="0.0812%" height="15" fill="rgb(239,40,7)" fg:x="608" fg:w="1"/><text x="49.6407%" y="127.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="49.3907%" y="101" width="0.0812%" height="15" fill="rgb(239,11,31)" fg:x="608" fg:w="1"/><text x="49.6407%" y="111.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="49.3907%" y="85" width="0.0812%" height="15" fill="rgb(224,77,40)" fg:x="608" fg:w="1"/><text x="49.6407%" y="95.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (8 samples, 0.65%)</title><rect x="48.9033%" y="533" width="0.6499%" height="15" fill="rgb(226,15,5)" fg:x="602" fg:w="8"/><text x="49.1533%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.57%)</title><rect x="48.9846%" y="517" width="0.5686%" height="15" fill="rgb(254,188,5)" fg:x="603" fg:w="7"/><text x="49.2346%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (6 samples, 0.49%)</title><rect x="49.0658%" y="501" width="0.4874%" height="15" fill="rgb(241,148,52)" fg:x="604" fg:w="6"/><text x="49.3158%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.49%)</title><rect x="49.0658%" y="485" width="0.4874%" height="15" fill="rgb(251,48,36)" fg:x="604" fg:w="6"/><text x="49.3158%" y="495.50"></text></g><g><title>core::fmt::write (6 samples, 0.49%)</title><rect x="49.0658%" y="469" width="0.4874%" height="15" fill="rgb(243,83,13)" fg:x="604" fg:w="6"/><text x="49.3158%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (6 samples, 0.49%)</title><rect x="49.0658%" y="453" width="0.4874%" height="15" fill="rgb(210,105,0)" fg:x="604" fg:w="6"/><text x="49.3158%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (6 samples, 0.49%)</title><rect x="49.0658%" y="437" width="0.4874%" height="15" fill="rgb(239,60,36)" fg:x="604" fg:w="6"/><text x="49.3158%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.32%)</title><rect x="49.2283%" y="421" width="0.3249%" height="15" fill="rgb(210,20,0)" fg:x="606" fg:w="4"/><text x="49.4783%" y="431.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="49.3095%" y="405" width="0.2437%" height="15" fill="rgb(244,26,53)" fg:x="607" fg:w="3"/><text x="49.5595%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="49.3907%" y="389" width="0.1625%" height="15" fill="rgb(240,100,49)" fg:x="608" fg:w="2"/><text x="49.6407%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.4720%" y="373" width="0.0812%" height="15" fill="rgb(250,46,45)" fg:x="609" fg:w="1"/><text x="49.7220%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.4720%" y="357" width="0.0812%" height="15" fill="rgb(220,181,29)" fg:x="609" fg:w="1"/><text x="49.7220%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="49.4720%" y="341" width="0.0812%" height="15" fill="rgb(213,137,33)" fg:x="609" fg:w="1"/><text x="49.7220%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="49.4720%" y="325" width="0.0812%" height="15" fill="rgb(213,27,48)" fg:x="609" fg:w="1"/><text x="49.7220%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="49.4720%" y="309" width="0.0812%" height="15" fill="rgb(245,180,39)" fg:x="609" fg:w="1"/><text x="49.7220%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="49.4720%" y="293" width="0.0812%" height="15" fill="rgb(212,158,42)" fg:x="609" fg:w="1"/><text x="49.7220%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.4720%" y="277" width="0.0812%" height="15" fill="rgb(228,193,18)" fg:x="609" fg:w="1"/><text x="49.7220%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.4720%" y="261" width="0.0812%" height="15" fill="rgb(245,172,29)" fg:x="609" fg:w="1"/><text x="49.7220%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="50.1219%" y="325" width="0.0812%" height="15" fill="rgb(207,98,24)" fg:x="617" fg:w="1"/><text x="50.3719%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="50.5280%" y="181" width="0.1625%" height="15" fill="rgb(249,92,26)" fg:x="622" fg:w="2"/><text x="50.7780%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.6093%" y="165" width="0.0812%" height="15" fill="rgb(217,176,26)" fg:x="623" fg:w="1"/><text x="50.8593%" y="175.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (2 samples, 0.16%)</title><rect x="50.6905%" y="181" width="0.1625%" height="15" fill="rgb(221,8,39)" fg:x="624" fg:w="2"/><text x="50.9405%" y="191.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="50.7717%" y="165" width="0.0812%" height="15" fill="rgb(208,90,18)" fg:x="625" fg:w="1"/><text x="51.0217%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.41%)</title><rect x="50.5280%" y="197" width="0.4062%" height="15" fill="rgb(207,202,30)" fg:x="622" fg:w="5"/><text x="50.7780%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.8530%" y="181" width="0.0812%" height="15" fill="rgb(231,124,22)" fg:x="626" fg:w="1"/><text x="51.1030%" y="191.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (7 samples, 0.57%)</title><rect x="50.4468%" y="229" width="0.5686%" height="15" fill="rgb(206,15,5)" fg:x="621" fg:w="7"/><text x="50.6968%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (6 samples, 0.49%)</title><rect x="50.5280%" y="213" width="0.4874%" height="15" fill="rgb(239,16,52)" fg:x="622" fg:w="6"/><text x="50.7780%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="50.9342%" y="197" width="0.0812%" height="15" fill="rgb(245,213,29)" fg:x="627" fg:w="1"/><text x="51.1842%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="51.0967%" y="213" width="0.1625%" height="15" fill="rgb(213,203,36)" fg:x="629" fg:w="2"/><text x="51.3467%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 1.06%)</title><rect x="50.3656%" y="245" width="1.0561%" height="15" fill="rgb(209,55,18)" fg:x="620" fg:w="13"/><text x="50.6156%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.41%)</title><rect x="51.0154%" y="229" width="0.4062%" height="15" fill="rgb(207,133,49)" fg:x="628" fg:w="5"/><text x="51.2654%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="51.2591%" y="213" width="0.1625%" height="15" fill="rgb(240,33,46)" fg:x="631" fg:w="2"/><text x="51.5091%" y="223.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (16 samples, 1.30%)</title><rect x="50.2843%" y="277" width="1.2998%" height="15" fill="rgb(212,35,2)" fg:x="619" fg:w="16"/><text x="50.5343%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (15 samples, 1.22%)</title><rect x="50.3656%" y="261" width="1.2185%" height="15" fill="rgb(231,119,28)" fg:x="620" fg:w="15"/><text x="50.6156%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="51.4216%" y="245" width="0.1625%" height="15" fill="rgb(252,178,7)" fg:x="633" fg:w="2"/><text x="51.6716%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="51.4216%" y="229" width="0.1625%" height="15" fill="rgb(251,91,4)" fg:x="633" fg:w="2"/><text x="51.6716%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 1.46%)</title><rect x="50.2031%" y="293" width="1.4622%" height="15" fill="rgb(233,122,19)" fg:x="618" fg:w="18"/><text x="50.4531%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.5841%" y="277" width="0.0812%" height="15" fill="rgb(231,208,46)" fg:x="635" fg:w="1"/><text x="51.8341%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.5841%" y="261" width="0.0812%" height="15" fill="rgb(243,15,41)" fg:x="635" fg:w="1"/><text x="51.8341%" y="271.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (20 samples, 1.62%)</title><rect x="50.2031%" y="325" width="1.6247%" height="15" fill="rgb(210,32,43)" fg:x="618" fg:w="20"/><text x="50.4531%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (20 samples, 1.62%)</title><rect x="50.2031%" y="309" width="1.6247%" height="15" fill="rgb(222,177,15)" fg:x="618" fg:w="20"/><text x="50.4531%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="51.6653%" y="293" width="0.1625%" height="15" fill="rgb(244,121,34)" fg:x="636" fg:w="2"/><text x="51.9153%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.7465%" y="277" width="0.0812%" height="15" fill="rgb(234,138,4)" fg:x="637" fg:w="1"/><text x="51.9965%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.8278%" y="325" width="0.0812%" height="15" fill="rgb(240,97,48)" fg:x="638" fg:w="1"/><text x="52.0778%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.8278%" y="309" width="0.0812%" height="15" fill="rgb(237,65,54)" fg:x="638" fg:w="1"/><text x="52.0778%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="51.9090%" y="309" width="0.1625%" height="15" fill="rgb(214,25,24)" fg:x="639" fg:w="2"/><text x="52.1590%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 2.03%)</title><rect x="50.1219%" y="341" width="2.0309%" height="15" fill="rgb(213,5,3)" fg:x="617" fg:w="25"/><text x="50.3719%" y="351.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="51.9090%" y="325" width="0.2437%" height="15" fill="rgb(219,81,29)" fg:x="639" fg:w="3"/><text x="52.1590%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.0715%" y="309" width="0.0812%" height="15" fill="rgb(220,43,48)" fg:x="641" fg:w="1"/><text x="52.3215%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (27 samples, 2.19%)</title><rect x="50.1219%" y="357" width="2.1933%" height="15" fill="rgb(239,157,2)" fg:x="617" fg:w="27"/><text x="50.3719%" y="367.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="52.1527%" y="341" width="0.1625%" height="15" fill="rgb(213,104,43)" fg:x="642" fg:w="2"/><text x="52.4027%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="52.1527%" y="325" width="0.1625%" height="15" fill="rgb(237,84,9)" fg:x="642" fg:w="2"/><text x="52.4027%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (5 samples, 0.41%)</title><rect x="52.3964%" y="325" width="0.4062%" height="15" fill="rgb(252,6,33)" fg:x="645" fg:w="5"/><text x="52.6464%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (5 samples, 0.41%)</title><rect x="52.3964%" y="309" width="0.4062%" height="15" fill="rgb(251,172,22)" fg:x="645" fg:w="5"/><text x="52.6464%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.41%)</title><rect x="52.3964%" y="293" width="0.4062%" height="15" fill="rgb(244,91,53)" fg:x="645" fg:w="5"/><text x="52.6464%" y="303.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (3 samples, 0.24%)</title><rect x="52.5589%" y="277" width="0.2437%" height="15" fill="rgb(219,29,30)" fg:x="647" fg:w="3"/><text x="52.8089%" y="287.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (34 samples, 2.76%)</title><rect x="50.1219%" y="373" width="2.7620%" height="15" fill="rgb(213,3,15)" fg:x="617" fg:w="34"/><text x="50.3719%" y="383.50">&lt;r..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (7 samples, 0.57%)</title><rect x="52.3152%" y="357" width="0.5686%" height="15" fill="rgb(208,25,28)" fg:x="644" fg:w="7"/><text x="52.5652%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.49%)</title><rect x="52.3964%" y="341" width="0.4874%" height="15" fill="rgb(252,144,25)" fg:x="645" fg:w="6"/><text x="52.6464%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.8026%" y="325" width="0.0812%" height="15" fill="rgb(226,220,25)" fg:x="650" fg:w="1"/><text x="53.0526%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.8838%" y="373" width="0.0812%" height="15" fill="rgb(212,131,28)" fg:x="651" fg:w="1"/><text x="53.1338%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.49%)</title><rect x="53.0463%" y="357" width="0.4874%" height="15" fill="rgb(219,143,52)" fg:x="653" fg:w="6"/><text x="53.2963%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="53.4525%" y="341" width="0.0812%" height="15" fill="rgb(215,56,7)" fg:x="658" fg:w="1"/><text x="53.7025%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (45 samples, 3.66%)</title><rect x="49.9594%" y="389" width="3.6556%" height="15" fill="rgb(239,59,51)" fg:x="615" fg:w="45"/><text x="50.2094%" y="399.50">&lt;cor..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.65%)</title><rect x="52.9651%" y="373" width="0.6499%" height="15" fill="rgb(209,215,4)" fg:x="652" fg:w="8"/><text x="53.2151%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.5337%" y="357" width="0.0812%" height="15" fill="rgb(221,118,39)" fg:x="659" fg:w="1"/><text x="53.7837%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (50 samples, 4.06%)</title><rect x="49.9594%" y="405" width="4.0617%" height="15" fill="rgb(236,6,44)" fg:x="615" fg:w="50"/><text x="50.2094%" y="415.50">&lt;std..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.41%)</title><rect x="53.6149%" y="389" width="0.4062%" height="15" fill="rgb(216,122,9)" fg:x="660" fg:w="5"/><text x="53.8649%" y="399.50"></text></g><g><title>__libc_malloc (5 samples, 0.41%)</title><rect x="53.6149%" y="373" width="0.4062%" height="15" fill="rgb(244,134,42)" fg:x="660" fg:w="5"/><text x="53.8649%" y="383.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (51 samples, 4.14%)</title><rect x="49.9594%" y="421" width="4.1430%" height="15" fill="rgb(209,189,35)" fg:x="615" fg:w="51"/><text x="50.2094%" y="431.50">&lt;rpc_..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="54.0211%" y="405" width="0.0812%" height="15" fill="rgb(250,47,36)" fg:x="665" fg:w="1"/><text x="54.2711%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.1024%" y="421" width="0.0812%" height="15" fill="rgb(252,112,4)" fg:x="666" fg:w="1"/><text x="54.3524%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (55 samples, 4.47%)</title><rect x="49.7969%" y="437" width="4.4679%" height="15" fill="rgb(221,79,51)" fg:x="613" fg:w="55"/><text x="50.0469%" y="447.50">&lt;core..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.1836%" y="421" width="0.0812%" height="15" fill="rgb(232,65,53)" fg:x="667" fg:w="1"/><text x="54.4336%" y="431.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (61 samples, 4.96%)</title><rect x="49.6344%" y="469" width="4.9553%" height="15" fill="rgb(211,37,7)" fg:x="611" fg:w="61"/><text x="49.8844%" y="479.50">&lt;rpc_p..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (60 samples, 4.87%)</title><rect x="49.7157%" y="453" width="4.8741%" height="15" fill="rgb(234,221,18)" fg:x="612" fg:w="60"/><text x="49.9657%" y="463.50">&lt;std::..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="54.2648%" y="437" width="0.3249%" height="15" fill="rgb(220,158,26)" fg:x="668" fg:w="4"/><text x="54.5148%" y="447.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="54.2648%" y="421" width="0.3249%" height="15" fill="rgb(220,70,6)" fg:x="668" fg:w="4"/><text x="54.5148%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="54.5898%" y="469" width="0.1625%" height="15" fill="rgb(250,39,48)" fg:x="672" fg:w="2"/><text x="54.8398%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.6710%" y="453" width="0.0812%" height="15" fill="rgb(206,40,27)" fg:x="673" fg:w="1"/><text x="54.9210%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="54.8335%" y="453" width="0.0812%" height="15" fill="rgb(247,80,36)" fg:x="675" fg:w="1"/><text x="55.0835%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="54.8335%" y="437" width="0.0812%" height="15" fill="rgb(222,9,20)" fg:x="675" fg:w="1"/><text x="55.0835%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (68 samples, 5.52%)</title><rect x="49.5532%" y="485" width="5.5240%" height="15" fill="rgb(217,26,45)" fg:x="610" fg:w="68"/><text x="49.8032%" y="495.50">&lt;core::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="54.7522%" y="469" width="0.3249%" height="15" fill="rgb(221,67,14)" fg:x="674" fg:w="4"/><text x="55.0022%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="54.9147%" y="453" width="0.1625%" height="15" fill="rgb(248,100,24)" fg:x="676" fg:w="2"/><text x="55.1647%" y="463.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (69 samples, 5.61%)</title><rect x="49.5532%" y="517" width="5.6052%" height="15" fill="rgb(230,187,16)" fg:x="610" fg:w="69"/><text x="49.8032%" y="527.50">&lt;rpc_pr..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (69 samples, 5.61%)</title><rect x="49.5532%" y="501" width="5.6052%" height="15" fill="rgb(205,108,13)" fg:x="610" fg:w="69"/><text x="49.8032%" y="511.50">&lt;std::c..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="55.0772%" y="485" width="0.0812%" height="15" fill="rgb(235,71,51)" fg:x="678" fg:w="1"/><text x="55.3272%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.0772%" y="469" width="0.0812%" height="15" fill="rgb(251,172,48)" fg:x="678" fg:w="1"/><text x="55.3272%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="55.5646%" y="469" width="0.1625%" height="15" fill="rgb(240,96,49)" fg:x="684" fg:w="2"/><text x="55.8146%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.57%)</title><rect x="55.7271%" y="469" width="0.5686%" height="15" fill="rgb(235,46,36)" fg:x="686" fg:w="7"/><text x="55.9771%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="55.9708%" y="453" width="0.3249%" height="15" fill="rgb(244,3,49)" fg:x="689" fg:w="4"/><text x="56.2208%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="56.2145%" y="437" width="0.0812%" height="15" fill="rgb(206,78,54)" fg:x="692" fg:w="1"/><text x="56.4645%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="56.2957%" y="469" width="0.1625%" height="15" fill="rgb(208,85,42)" fg:x="693" fg:w="2"/><text x="56.5457%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="56.3769%" y="453" width="0.0812%" height="15" fill="rgb(219,196,21)" fg:x="694" fg:w="1"/><text x="56.6269%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.3769%" y="437" width="0.0812%" height="15" fill="rgb(238,19,9)" fg:x="694" fg:w="1"/><text x="56.6269%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="56.4582%" y="453" width="0.0812%" height="15" fill="rgb(206,86,13)" fg:x="695" fg:w="1"/><text x="56.7082%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.5394%" y="437" width="0.1625%" height="15" fill="rgb(214,123,40)" fg:x="696" fg:w="2"/><text x="56.7894%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (5 samples, 0.41%)</title><rect x="56.4582%" y="469" width="0.4062%" height="15" fill="rgb(243,53,5)" fg:x="695" fg:w="5"/><text x="56.7082%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="56.5394%" y="453" width="0.3249%" height="15" fill="rgb(254,186,31)" fg:x="696" fg:w="4"/><text x="56.7894%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="56.7019%" y="437" width="0.1625%" height="15" fill="rgb(221,216,25)" fg:x="698" fg:w="2"/><text x="56.9519%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="56.7019%" y="421" width="0.1625%" height="15" fill="rgb(248,107,42)" fg:x="698" fg:w="2"/><text x="56.9519%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="56.9456%" y="453" width="0.0812%" height="15" fill="rgb(221,85,43)" fg:x="701" fg:w="1"/><text x="57.1956%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.1080%" y="389" width="0.0812%" height="15" fill="rgb(225,34,24)" fg:x="703" fg:w="1"/><text x="57.3580%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.1080%" y="421" width="0.1625%" height="15" fill="rgb(211,119,1)" fg:x="703" fg:w="2"/><text x="57.3580%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.1080%" y="405" width="0.1625%" height="15" fill="rgb(254,216,46)" fg:x="703" fg:w="2"/><text x="57.3580%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="57.1893%" y="389" width="0.0812%" height="15" fill="rgb(238,11,38)" fg:x="704" fg:w="1"/><text x="57.4393%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.3517%" y="373" width="0.0812%" height="15" fill="rgb(233,50,15)" fg:x="706" fg:w="1"/><text x="57.6017%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="57.2705%" y="389" width="0.2437%" height="15" fill="rgb(217,181,29)" fg:x="705" fg:w="3"/><text x="57.5205%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="57.4330%" y="373" width="0.0812%" height="15" fill="rgb(214,56,3)" fg:x="707" fg:w="1"/><text x="57.6830%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.4330%" y="357" width="0.0812%" height="15" fill="rgb(230,69,45)" fg:x="707" fg:w="1"/><text x="57.6830%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.41%)</title><rect x="57.2705%" y="421" width="0.4062%" height="15" fill="rgb(224,201,50)" fg:x="705" fg:w="5"/><text x="57.5205%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.41%)</title><rect x="57.2705%" y="405" width="0.4062%" height="15" fill="rgb(217,228,18)" fg:x="705" fg:w="5"/><text x="57.5205%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.5142%" y="389" width="0.1625%" height="15" fill="rgb(239,33,44)" fg:x="708" fg:w="2"/><text x="57.7642%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.9204%" y="389" width="0.0812%" height="15" fill="rgb(248,210,23)" fg:x="713" fg:w="1"/><text x="58.1704%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.9204%" y="373" width="0.0812%" height="15" fill="rgb(253,135,8)" fg:x="713" fg:w="1"/><text x="58.1704%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.9204%" y="357" width="0.0812%" height="15" fill="rgb(217,98,21)" fg:x="713" fg:w="1"/><text x="58.1704%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.1641%" y="357" width="0.0812%" height="15" fill="rgb(253,130,21)" fg:x="716" fg:w="1"/><text x="58.4141%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="58.4890%" y="325" width="0.3249%" height="15" fill="rgb(207,81,54)" fg:x="720" fg:w="4"/><text x="58.7390%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="58.5703%" y="309" width="0.2437%" height="15" fill="rgb(232,48,33)" fg:x="721" fg:w="3"/><text x="58.8203%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="58.6515%" y="293" width="0.1625%" height="15" fill="rgb(211,9,35)" fg:x="722" fg:w="2"/><text x="58.9015%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.9764%" y="293" width="0.0812%" height="15" fill="rgb(205,152,21)" fg:x="726" fg:w="1"/><text x="59.2264%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.9764%" y="277" width="0.0812%" height="15" fill="rgb(249,21,27)" fg:x="726" fg:w="1"/><text x="59.2264%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.9764%" y="261" width="0.0812%" height="15" fill="rgb(252,29,24)" fg:x="726" fg:w="1"/><text x="59.2264%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="59.0577%" y="277" width="0.0812%" height="15" fill="rgb(230,130,50)" fg:x="727" fg:w="1"/><text x="59.3077%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.06%)</title><rect x="58.1641%" y="373" width="1.0561%" height="15" fill="rgb(239,144,14)" fg:x="716" fg:w="13"/><text x="58.4141%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.97%)</title><rect x="58.2453%" y="357" width="0.9748%" height="15" fill="rgb(227,111,50)" fg:x="717" fg:w="12"/><text x="58.4953%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.81%)</title><rect x="58.4078%" y="341" width="0.8123%" height="15" fill="rgb(254,84,20)" fg:x="719" fg:w="10"/><text x="58.6578%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.41%)</title><rect x="58.8140%" y="325" width="0.4062%" height="15" fill="rgb(232,90,48)" fg:x="724" fg:w="5"/><text x="59.0640%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="58.9764%" y="309" width="0.2437%" height="15" fill="rgb(253,63,47)" fg:x="726" fg:w="3"/><text x="59.2264%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="59.0577%" y="293" width="0.1625%" height="15" fill="rgb(251,146,35)" fg:x="727" fg:w="2"/><text x="59.3077%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="59.1389%" y="277" width="0.0812%" height="15" fill="rgb(229,192,35)" fg:x="728" fg:w="1"/><text x="59.3889%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (19 samples, 1.54%)</title><rect x="57.8392%" y="405" width="1.5435%" height="15" fill="rgb(225,68,9)" fg:x="712" fg:w="19"/><text x="58.0892%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (17 samples, 1.38%)</title><rect x="58.0016%" y="389" width="1.3810%" height="15" fill="rgb(214,97,34)" fg:x="714" fg:w="17"/><text x="58.2516%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="59.2201%" y="373" width="0.1625%" height="15" fill="rgb(253,31,26)" fg:x="729" fg:w="2"/><text x="59.4701%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (29 samples, 2.36%)</title><rect x="57.1080%" y="437" width="2.3558%" height="15" fill="rgb(225,151,47)" fg:x="703" fg:w="29"/><text x="57.3580%" y="447.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (22 samples, 1.79%)</title><rect x="57.6767%" y="421" width="1.7872%" height="15" fill="rgb(206,185,9)" fg:x="710" fg:w="22"/><text x="57.9267%" y="431.50">s..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.3826%" y="405" width="0.0812%" height="15" fill="rgb(249,65,17)" fg:x="731" fg:w="1"/><text x="59.6326%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (34 samples, 2.76%)</title><rect x="57.0268%" y="453" width="2.7620%" height="15" fill="rgb(220,110,10)" fg:x="702" fg:w="34"/><text x="57.2768%" y="463.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="59.4639%" y="437" width="0.3249%" height="15" fill="rgb(222,198,49)" fg:x="732" fg:w="4"/><text x="59.7139%" y="447.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="59.4639%" y="421" width="0.3249%" height="15" fill="rgb(239,81,13)" fg:x="732" fg:w="4"/><text x="59.7139%" y="431.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (127 samples, 10.32%)</title><rect x="49.5532%" y="533" width="10.3168%" height="15" fill="rgb(216,128,11)" fg:x="610" fg:w="127"/><text x="49.8032%" y="543.50">&lt;rpc_proto::Jso..</text></g><g><title>kernel::model::EntityPtr::to_json_value (58 samples, 4.71%)</title><rect x="55.1584%" y="517" width="4.7116%" height="15" fill="rgb(247,156,8)" fg:x="679" fg:w="58"/><text x="55.4084%" y="527.50">kerne..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (57 samples, 4.63%)</title><rect x="55.2396%" y="501" width="4.6304%" height="15" fill="rgb(219,173,1)" fg:x="680" fg:w="57"/><text x="55.4896%" y="511.50">kerne..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (55 samples, 4.47%)</title><rect x="55.4021%" y="485" width="4.4679%" height="15" fill="rgb(227,42,24)" fg:x="682" fg:w="55"/><text x="55.6521%" y="495.50">&lt;serd..</text></g><g><title>serde::ser::Serializer::collect_map (37 samples, 3.01%)</title><rect x="56.8643%" y="469" width="3.0057%" height="15" fill="rgb(253,219,50)" fg:x="700" fg:w="37"/><text x="57.1143%" y="479.50">ser..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.7888%" y="453" width="0.0812%" height="15" fill="rgb(215,191,54)" fg:x="736" fg:w="1"/><text x="60.0388%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (3 samples, 0.24%)</title><rect x="59.8700%" y="533" width="0.2437%" height="15" fill="rgb(238,83,12)" fg:x="737" fg:w="3"/><text x="60.1200%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (3 samples, 0.24%)</title><rect x="59.8700%" y="517" width="0.2437%" height="15" fill="rgb(205,124,9)" fg:x="737" fg:w="3"/><text x="60.1200%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="59.9513%" y="501" width="0.1625%" height="15" fill="rgb(253,174,7)" fg:x="738" fg:w="2"/><text x="60.2013%" y="511.50"></text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (289 samples, 23.48%)</title><rect x="36.7181%" y="661" width="23.4768%" height="15" fill="rgb(206,134,49)" fg:x="452" fg:w="289"/><text x="36.9681%" y="671.50">kernel::plugins::SessionPlugins::have..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (288 samples, 23.40%)</title><rect x="36.7994%" y="645" width="23.3956%" height="15" fill="rgb(221,89,20)" fg:x="453" fg:w="288"/><text x="37.0494%" y="655.50">&lt;plugins_dynlib::DynamicPlugin as ker..</text></g><g><title>plugins_rpc::querying::have_surroundings (265 samples, 21.53%)</title><rect x="38.6677%" y="629" width="21.5272%" height="15" fill="rgb(240,205,13)" fg:x="476" fg:w="265"/><text x="38.9177%" y="639.50">plugins_rpc::querying::have_surrou..</text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (265 samples, 21.53%)</title><rect x="38.6677%" y="613" width="21.5272%" height="15" fill="rgb(237,174,32)" fg:x="476" fg:w="265"/><text x="38.9177%" y="623.50">&lt;plugins_rpc::sessions::SessionSer..</text></g><g><title>core::iter::adapters::try_process (252 samples, 20.47%)</title><rect x="39.7238%" y="597" width="20.4712%" height="15" fill="rgb(226,12,15)" fg:x="489" fg:w="252"/><text x="39.9738%" y="607.50">core::iter::adapters::try_process</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (142 samples, 11.54%)</title><rect x="48.6596%" y="581" width="11.5353%" height="15" fill="rgb(245,160,52)" fg:x="599" fg:w="142"/><text x="48.9096%" y="591.50">alloc::vec::in_pl..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (142 samples, 11.54%)</title><rect x="48.6596%" y="565" width="11.5353%" height="15" fill="rgb(253,80,21)" fg:x="599" fg:w="142"/><text x="48.9096%" y="575.50">&lt;core::iter::adap..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (142 samples, 11.54%)</title><rect x="48.6596%" y="549" width="11.5353%" height="15" fill="rgb(231,225,22)" fg:x="599" fg:w="142"/><text x="48.9096%" y="559.50">plugins_rpc::sess..</text></g><g><title>rpc_proto::&lt;impl core::convert::From&lt;&amp;rpc_proto::EntityKey&gt; for kernel::model::base::EntityKey&gt;::from (1 samples, 0.08%)</title><rect x="60.1137%" y="533" width="0.0812%" height="15" fill="rgb(253,185,12)" fg:x="740" fg:w="1"/><text x="60.3637%" y="543.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="60.1137%" y="517" width="0.0812%" height="15" fill="rgb(234,197,21)" fg:x="740" fg:w="1"/><text x="60.3637%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.1137%" y="501" width="0.0812%" height="15" fill="rgb(210,47,30)" fg:x="740" fg:w="1"/><text x="60.3637%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="60.5199%" y="517" width="0.0812%" height="15" fill="rgb(246,139,27)" fg:x="745" fg:w="1"/><text x="60.7699%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (2 samples, 0.16%)</title><rect x="60.5199%" y="533" width="0.1625%" height="15" fill="rgb(226,130,16)" fg:x="745" fg:w="2"/><text x="60.7699%" y="543.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="60.6011%" y="517" width="0.0812%" height="15" fill="rgb(237,208,20)" fg:x="746" fg:w="1"/><text x="60.8511%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.6011%" y="501" width="0.0812%" height="15" fill="rgb(245,186,28)" fg:x="746" fg:w="1"/><text x="60.8511%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.6011%" y="485" width="0.0812%" height="15" fill="rgb(238,105,39)" fg:x="746" fg:w="1"/><text x="60.8511%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.6011%" y="469" width="0.0812%" height="15" fill="rgb(253,228,11)" fg:x="746" fg:w="1"/><text x="60.8511%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.6011%" y="453" width="0.0812%" height="15" fill="rgb(224,136,38)" fg:x="746" fg:w="1"/><text x="60.8511%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.6011%" y="437" width="0.0812%" height="15" fill="rgb(211,3,25)" fg:x="746" fg:w="1"/><text x="60.8511%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.6011%" y="421" width="0.0812%" height="15" fill="rgb(238,66,34)" fg:x="746" fg:w="1"/><text x="60.8511%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.6011%" y="405" width="0.0812%" height="15" fill="rgb(223,188,11)" fg:x="746" fg:w="1"/><text x="60.8511%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.6011%" y="389" width="0.0812%" height="15" fill="rgb(221,10,35)" fg:x="746" fg:w="1"/><text x="60.8511%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.6011%" y="373" width="0.0812%" height="15" fill="rgb(223,18,44)" fg:x="746" fg:w="1"/><text x="60.8511%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.6011%" y="357" width="0.0812%" height="15" fill="rgb(220,97,41)" fg:x="746" fg:w="1"/><text x="60.8511%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.6011%" y="341" width="0.0812%" height="15" fill="rgb(206,95,45)" fg:x="746" fg:w="1"/><text x="60.8511%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.6011%" y="325" width="0.0812%" height="15" fill="rgb(209,96,13)" fg:x="746" fg:w="1"/><text x="60.8511%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.6011%" y="309" width="0.0812%" height="15" fill="rgb(237,39,34)" fg:x="746" fg:w="1"/><text x="60.8511%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (327 samples, 26.56%)</title><rect x="34.1998%" y="693" width="26.5638%" height="15" fill="rgb(213,49,47)" fg:x="421" fg:w="327"/><text x="34.4498%" y="703.50">&lt;engine::session::Session as kernel::action..</text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (325 samples, 26.40%)</title><rect x="34.3623%" y="677" width="26.4013%" height="15" fill="rgb(205,107,27)" fg:x="423" fg:w="325"/><text x="34.6123%" y="687.50">&lt;engine::perform::StandardPerformer as ker..</text></g><g><title>kernel::plugins::mw::apply_middleware (7 samples, 0.57%)</title><rect x="60.1950%" y="661" width="0.5686%" height="15" fill="rgb(212,142,9)" fg:x="741" fg:w="7"/><text x="60.4450%" y="671.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (7 samples, 0.57%)</title><rect x="60.1950%" y="645" width="0.5686%" height="15" fill="rgb(226,182,0)" fg:x="741" fg:w="7"/><text x="60.4450%" y="655.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (5 samples, 0.41%)</title><rect x="60.3574%" y="629" width="0.4062%" height="15" fill="rgb(231,3,53)" fg:x="743" fg:w="5"/><text x="60.6074%" y="639.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (5 samples, 0.41%)</title><rect x="60.3574%" y="613" width="0.4062%" height="15" fill="rgb(246,111,28)" fg:x="743" fg:w="5"/><text x="60.6074%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (5 samples, 0.41%)</title><rect x="60.3574%" y="597" width="0.4062%" height="15" fill="rgb(254,183,7)" fg:x="743" fg:w="5"/><text x="60.6074%" y="607.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="60.4387%" y="581" width="0.3249%" height="15" fill="rgb(247,177,28)" fg:x="744" fg:w="4"/><text x="60.6887%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4 samples, 0.32%)</title><rect x="60.4387%" y="565" width="0.3249%" height="15" fill="rgb(244,43,1)" fg:x="744" fg:w="4"/><text x="60.6887%" y="575.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4 samples, 0.32%)</title><rect x="60.4387%" y="549" width="0.3249%" height="15" fill="rgb(207,2,35)" fg:x="744" fg:w="4"/><text x="60.6887%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="60.6824%" y="533" width="0.0812%" height="15" fill="rgb(213,83,22)" fg:x="747" fg:w="1"/><text x="60.9324%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="60.6824%" y="517" width="0.0812%" height="15" fill="rgb(246,212,13)" fg:x="747" fg:w="1"/><text x="60.9324%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.6824%" y="501" width="0.0812%" height="15" fill="rgb(213,127,46)" fg:x="747" fg:w="1"/><text x="60.9324%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="60.7636%" y="661" width="0.0812%" height="15" fill="rgb(219,215,39)" fg:x="748" fg:w="1"/><text x="61.0136%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="60.8448%" y="613" width="0.0812%" height="15" fill="rgb(227,99,17)" fg:x="749" fg:w="1"/><text x="61.0948%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="60.8448%" y="597" width="0.0812%" height="15" fill="rgb(208,155,18)" fg:x="749" fg:w="1"/><text x="61.0948%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="60.8448%" y="581" width="0.0812%" height="15" fill="rgb(223,204,38)" fg:x="749" fg:w="1"/><text x="61.0948%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.8448%" y="565" width="0.0812%" height="15" fill="rgb(212,114,21)" fg:x="749" fg:w="1"/><text x="61.0948%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.8448%" y="549" width="0.0812%" height="15" fill="rgb(250,74,13)" fg:x="749" fg:w="1"/><text x="61.0948%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.8448%" y="533" width="0.0812%" height="15" fill="rgb(234,7,1)" fg:x="749" fg:w="1"/><text x="61.0948%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.8448%" y="517" width="0.0812%" height="15" fill="rgb(207,138,31)" fg:x="749" fg:w="1"/><text x="61.0948%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.9261%" y="565" width="0.0812%" height="15" fill="rgb(215,186,42)" fg:x="750" fg:w="1"/><text x="61.1761%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="60.8448%" y="645" width="0.2437%" height="15" fill="rgb(229,205,49)" fg:x="749" fg:w="3"/><text x="61.0948%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="60.8448%" y="629" width="0.2437%" height="15" fill="rgb(216,156,32)" fg:x="749" fg:w="3"/><text x="61.0948%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="60.9261%" y="613" width="0.1625%" height="15" fill="rgb(238,7,21)" fg:x="750" fg:w="2"/><text x="61.1761%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="60.9261%" y="597" width="0.1625%" height="15" fill="rgb(249,190,22)" fg:x="750" fg:w="2"/><text x="61.1761%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="60.9261%" y="581" width="0.1625%" height="15" fill="rgb(253,51,31)" fg:x="750" fg:w="2"/><text x="61.1761%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.0073%" y="565" width="0.0812%" height="15" fill="rgb(237,90,54)" fg:x="751" fg:w="1"/><text x="61.2573%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.0073%" y="549" width="0.0812%" height="15" fill="rgb(250,214,33)" fg:x="751" fg:w="1"/><text x="61.2573%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.0073%" y="533" width="0.0812%" height="15" fill="rgb(237,10,49)" fg:x="751" fg:w="1"/><text x="61.2573%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.0073%" y="517" width="0.0812%" height="15" fill="rgb(241,56,36)" fg:x="751" fg:w="1"/><text x="61.2573%" y="527.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="61.0885%" y="629" width="0.0812%" height="15" fill="rgb(227,164,12)" fg:x="752" fg:w="1"/><text x="61.3385%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="61.0885%" y="613" width="0.0812%" height="15" fill="rgb(249,149,35)" fg:x="752" fg:w="1"/><text x="61.3385%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.0885%" y="597" width="0.0812%" height="15" fill="rgb(238,227,50)" fg:x="752" fg:w="1"/><text x="61.3385%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="61.0885%" y="581" width="0.0812%" height="15" fill="rgb(235,102,45)" fg:x="752" fg:w="1"/><text x="61.3385%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.0885%" y="565" width="0.0812%" height="15" fill="rgb(211,10,38)" fg:x="752" fg:w="1"/><text x="61.3385%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="61.0885%" y="549" width="0.0812%" height="15" fill="rgb(219,77,48)" fg:x="752" fg:w="1"/><text x="61.3385%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.0885%" y="533" width="0.0812%" height="15" fill="rgb(246,6,15)" fg:x="752" fg:w="1"/><text x="61.3385%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.0885%" y="517" width="0.0812%" height="15" fill="rgb(207,220,2)" fg:x="752" fg:w="1"/><text x="61.3385%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="61.0885%" y="501" width="0.0812%" height="15" fill="rgb(242,48,14)" fg:x="752" fg:w="1"/><text x="61.3385%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="61.1698%" y="597" width="0.0812%" height="15" fill="rgb(218,19,27)" fg:x="753" fg:w="1"/><text x="61.4198%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="61.2510%" y="485" width="0.0812%" height="15" fill="rgb(228,0,35)" fg:x="754" fg:w="1"/><text x="61.5010%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.2510%" y="469" width="0.0812%" height="15" fill="rgb(244,142,54)" fg:x="754" fg:w="1"/><text x="61.5010%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="61.2510%" y="453" width="0.0812%" height="15" fill="rgb(243,217,40)" fg:x="754" fg:w="1"/><text x="61.5010%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.2510%" y="437" width="0.0812%" height="15" fill="rgb(207,114,16)" fg:x="754" fg:w="1"/><text x="61.5010%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="61.2510%" y="549" width="0.1625%" height="15" fill="rgb(224,33,25)" fg:x="754" fg:w="2"/><text x="61.5010%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="61.2510%" y="533" width="0.1625%" height="15" fill="rgb(230,93,54)" fg:x="754" fg:w="2"/><text x="61.5010%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="61.2510%" y="517" width="0.1625%" height="15" fill="rgb(224,56,24)" fg:x="754" fg:w="2"/><text x="61.5010%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="61.2510%" y="501" width="0.1625%" height="15" fill="rgb(235,189,50)" fg:x="754" fg:w="2"/><text x="61.5010%" y="511.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="61.3323%" y="485" width="0.0812%" height="15" fill="rgb(242,173,8)" fg:x="755" fg:w="1"/><text x="61.5823%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="61.3323%" y="469" width="0.0812%" height="15" fill="rgb(209,206,10)" fg:x="755" fg:w="1"/><text x="61.5823%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.3323%" y="453" width="0.0812%" height="15" fill="rgb(213,182,44)" fg:x="755" fg:w="1"/><text x="61.5823%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="61.4947%" y="517" width="0.0812%" height="15" fill="rgb(243,51,15)" fg:x="757" fg:w="1"/><text x="61.7447%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.4947%" y="501" width="0.0812%" height="15" fill="rgb(241,13,14)" fg:x="757" fg:w="1"/><text x="61.7447%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.4947%" y="485" width="0.0812%" height="15" fill="rgb(239,147,24)" fg:x="757" fg:w="1"/><text x="61.7447%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.41%)</title><rect x="61.2510%" y="597" width="0.4062%" height="15" fill="rgb(223,129,16)" fg:x="754" fg:w="5"/><text x="61.5010%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="61.2510%" y="581" width="0.4062%" height="15" fill="rgb(209,169,13)" fg:x="754" fg:w="5"/><text x="61.5010%" y="591.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.41%)</title><rect x="61.2510%" y="565" width="0.4062%" height="15" fill="rgb(235,159,41)" fg:x="754" fg:w="5"/><text x="61.5010%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="61.4135%" y="549" width="0.2437%" height="15" fill="rgb(223,219,48)" fg:x="756" fg:w="3"/><text x="61.6635%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="61.4135%" y="533" width="0.2437%" height="15" fill="rgb(236,80,13)" fg:x="756" fg:w="3"/><text x="61.6635%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.5760%" y="517" width="0.0812%" height="15" fill="rgb(213,5,6)" fg:x="758" fg:w="1"/><text x="61.8260%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (12 samples, 0.97%)</title><rect x="60.7636%" y="677" width="0.9748%" height="15" fill="rgb(205,59,21)" fg:x="748" fg:w="12"/><text x="61.0136%" y="687.50"></text></g><g><title>engine::internal::Entities::add_persisted (11 samples, 0.89%)</title><rect x="60.8448%" y="661" width="0.8936%" height="15" fill="rgb(247,137,35)" fg:x="749" fg:w="11"/><text x="61.0948%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::from_str (8 samples, 0.65%)</title><rect x="61.0885%" y="645" width="0.6499%" height="15" fill="rgb(242,208,28)" fg:x="752" fg:w="8"/><text x="61.3385%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.57%)</title><rect x="61.1698%" y="629" width="0.5686%" height="15" fill="rgb(245,62,25)" fg:x="753" fg:w="7"/><text x="61.4198%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.57%)</title><rect x="61.1698%" y="613" width="0.5686%" height="15" fill="rgb(233,99,54)" fg:x="753" fg:w="7"/><text x="61.4198%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.6572%" y="597" width="0.0812%" height="15" fill="rgb(213,10,37)" fg:x="759" fg:w="1"/><text x="61.9072%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.6572%" y="581" width="0.0812%" height="15" fill="rgb(235,143,30)" fg:x="759" fg:w="1"/><text x="61.9072%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="61.6572%" y="565" width="0.0812%" height="15" fill="rgb(250,146,33)" fg:x="759" fg:w="1"/><text x="61.9072%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.6572%" y="549" width="0.0812%" height="15" fill="rgb(226,198,42)" fg:x="759" fg:w="1"/><text x="61.9072%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="61.7384%" y="581" width="0.1625%" height="15" fill="rgb(222,55,6)" fg:x="760" fg:w="2"/><text x="61.9884%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="61.9009%" y="549" width="0.0812%" height="15" fill="rgb(213,224,31)" fg:x="762" fg:w="1"/><text x="62.1509%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="61.9009%" y="533" width="0.0812%" height="15" fill="rgb(226,103,35)" fg:x="762" fg:w="1"/><text x="62.1509%" y="543.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="61.9009%" y="517" width="0.0812%" height="15" fill="rgb(205,66,45)" fg:x="762" fg:w="1"/><text x="62.1509%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="61.9009%" y="501" width="0.0812%" height="15" fill="rgb(226,51,42)" fg:x="762" fg:w="1"/><text x="62.1509%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="61.9009%" y="485" width="0.0812%" height="15" fill="rgb(206,69,1)" fg:x="762" fg:w="1"/><text x="62.1509%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="61.9009%" y="469" width="0.0812%" height="15" fill="rgb(213,228,47)" fg:x="762" fg:w="1"/><text x="62.1509%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="61.9009%" y="453" width="0.0812%" height="15" fill="rgb(224,204,18)" fg:x="762" fg:w="1"/><text x="62.1509%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="61.9821%" y="533" width="0.0812%" height="15" fill="rgb(253,187,47)" fg:x="763" fg:w="1"/><text x="62.2321%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="61.9821%" y="517" width="0.0812%" height="15" fill="rgb(232,61,2)" fg:x="763" fg:w="1"/><text x="62.2321%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="61.9821%" y="501" width="0.0812%" height="15" fill="rgb(213,132,35)" fg:x="763" fg:w="1"/><text x="62.2321%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="61.9821%" y="485" width="0.0812%" height="15" fill="rgb(247,33,21)" fg:x="763" fg:w="1"/><text x="62.2321%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="61.9821%" y="469" width="0.0812%" height="15" fill="rgb(233,71,46)" fg:x="763" fg:w="1"/><text x="62.2321%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="61.9821%" y="453" width="0.0812%" height="15" fill="rgb(222,173,43)" fg:x="763" fg:w="1"/><text x="62.2321%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="61.9821%" y="437" width="0.0812%" height="15" fill="rgb(249,218,47)" fg:x="763" fg:w="1"/><text x="62.2321%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="61.9821%" y="421" width="0.0812%" height="15" fill="rgb(254,185,48)" fg:x="763" fg:w="1"/><text x="62.2321%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="61.9821%" y="405" width="0.0812%" height="15" fill="rgb(252,165,50)" fg:x="763" fg:w="1"/><text x="62.2321%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="61.9821%" y="389" width="0.0812%" height="15" fill="rgb(206,219,6)" fg:x="763" fg:w="1"/><text x="62.2321%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="61.9821%" y="373" width="0.0812%" height="15" fill="rgb(212,212,45)" fg:x="763" fg:w="1"/><text x="62.2321%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (17 samples, 1.38%)</title><rect x="60.7636%" y="693" width="1.3810%" height="15" fill="rgb(221,31,9)" fg:x="748" fg:w="17"/><text x="61.0136%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.41%)</title><rect x="61.7384%" y="677" width="0.4062%" height="15" fill="rgb(234,198,39)" fg:x="760" fg:w="5"/><text x="61.9884%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (5 samples, 0.41%)</title><rect x="61.7384%" y="661" width="0.4062%" height="15" fill="rgb(252,145,46)" fg:x="760" fg:w="5"/><text x="61.9884%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.41%)</title><rect x="61.7384%" y="645" width="0.4062%" height="15" fill="rgb(237,149,0)" fg:x="760" fg:w="5"/><text x="61.9884%" y="655.50"></text></g><g><title>core::fmt::write (5 samples, 0.41%)</title><rect x="61.7384%" y="629" width="0.4062%" height="15" fill="rgb(229,65,5)" fg:x="760" fg:w="5"/><text x="61.9884%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (5 samples, 0.41%)</title><rect x="61.7384%" y="613" width="0.4062%" height="15" fill="rgb(235,60,36)" fg:x="760" fg:w="5"/><text x="61.9884%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (5 samples, 0.41%)</title><rect x="61.7384%" y="597" width="0.4062%" height="15" fill="rgb(222,47,18)" fg:x="760" fg:w="5"/><text x="61.9884%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="61.9009%" y="581" width="0.2437%" height="15" fill="rgb(235,114,22)" fg:x="762" fg:w="3"/><text x="62.1509%" y="591.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="61.9009%" y="565" width="0.2437%" height="15" fill="rgb(209,167,11)" fg:x="762" fg:w="3"/><text x="62.1509%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="61.9821%" y="549" width="0.1625%" height="15" fill="rgb(251,73,18)" fg:x="763" fg:w="2"/><text x="62.2321%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.0634%" y="533" width="0.0812%" height="15" fill="rgb(217,60,17)" fg:x="764" fg:w="1"/><text x="62.3134%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.0634%" y="517" width="0.0812%" height="15" fill="rgb(224,36,37)" fg:x="764" fg:w="1"/><text x="62.3134%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="62.0634%" y="501" width="0.0812%" height="15" fill="rgb(211,21,32)" fg:x="764" fg:w="1"/><text x="62.3134%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="62.0634%" y="485" width="0.0812%" height="15" fill="rgb(231,55,48)" fg:x="764" fg:w="1"/><text x="62.3134%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="62.0634%" y="469" width="0.0812%" height="15" fill="rgb(227,42,18)" fg:x="764" fg:w="1"/><text x="62.3134%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="62.0634%" y="453" width="0.0812%" height="15" fill="rgb(217,2,27)" fg:x="764" fg:w="1"/><text x="62.3134%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="62.0634%" y="437" width="0.0812%" height="15" fill="rgb(251,138,23)" fg:x="764" fg:w="1"/><text x="62.3134%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="62.0634%" y="421" width="0.0812%" height="15" fill="rgb(226,184,11)" fg:x="764" fg:w="1"/><text x="62.3134%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="62.0634%" y="405" width="0.0812%" height="15" fill="rgb(242,142,12)" fg:x="764" fg:w="1"/><text x="62.3134%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="62.0634%" y="389" width="0.0812%" height="15" fill="rgb(234,187,18)" fg:x="764" fg:w="1"/><text x="62.3134%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="62.0634%" y="373" width="0.0812%" height="15" fill="rgb(237,44,42)" fg:x="764" fg:w="1"/><text x="62.3134%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="62.0634%" y="357" width="0.0812%" height="15" fill="rgb(211,90,23)" fg:x="764" fg:w="1"/><text x="62.3134%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="62.0634%" y="341" width="0.0812%" height="15" fill="rgb(207,81,18)" fg:x="764" fg:w="1"/><text x="62.3134%" y="351.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="62.0634%" y="325" width="0.0812%" height="15" fill="rgb(222,107,28)" fg:x="764" fg:w="1"/><text x="62.3134%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="62.0634%" y="309" width="0.0812%" height="15" fill="rgb(237,83,52)" fg:x="764" fg:w="1"/><text x="62.3134%" y="319.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (1 samples, 0.08%)</title><rect x="62.1446%" y="693" width="0.0812%" height="15" fill="rgb(208,67,11)" fg:x="765" fg:w="1"/><text x="62.3946%" y="703.50"></text></g><g><title>engine::users::model::username_to_key (1 samples, 0.08%)</title><rect x="62.1446%" y="677" width="0.0812%" height="15" fill="rgb(249,157,49)" fg:x="765" fg:w="1"/><text x="62.3946%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="62.1446%" y="661" width="0.0812%" height="15" fill="rgb(243,200,1)" fg:x="765" fg:w="1"/><text x="62.3946%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="62.1446%" y="645" width="0.0812%" height="15" fill="rgb(225,162,37)" fg:x="765" fg:w="1"/><text x="62.3946%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.1446%" y="629" width="0.0812%" height="15" fill="rgb(242,92,13)" fg:x="765" fg:w="1"/><text x="62.3946%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.1446%" y="613" width="0.0812%" height="15" fill="rgb(220,43,36)" fg:x="765" fg:w="1"/><text x="62.3946%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="62.1446%" y="597" width="0.0812%" height="15" fill="rgb(213,165,48)" fg:x="765" fg:w="1"/><text x="62.3946%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.1446%" y="581" width="0.0812%" height="15" fill="rgb(227,200,9)" fg:x="765" fg:w="1"/><text x="62.3946%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.1446%" y="565" width="0.0812%" height="15" fill="rgb(221,222,28)" fg:x="765" fg:w="1"/><text x="62.3946%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.1446%" y="549" width="0.0812%" height="15" fill="rgb(223,142,26)" fg:x="765" fg:w="1"/><text x="62.3946%" y="559.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="62.2258%" y="693" width="0.1625%" height="15" fill="rgb(243,46,9)" fg:x="766" fg:w="2"/><text x="62.4758%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="62.2258%" y="677" width="0.1625%" height="15" fill="rgb(250,56,11)" fg:x="766" fg:w="2"/><text x="62.4758%" y="687.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="62.3071%" y="661" width="0.0812%" height="15" fill="rgb(229,113,5)" fg:x="767" fg:w="1"/><text x="62.5571%" y="671.50"></text></g><g><title>&lt;plugins_core::looking::parser::LookActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="62.3071%" y="645" width="0.0812%" height="15" fill="rgb(244,108,28)" fg:x="767" fg:w="1"/><text x="62.5571%" y="655.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="62.3071%" y="629" width="0.0812%" height="15" fill="rgb(242,119,50)" fg:x="767" fg:w="1"/><text x="62.5571%" y="639.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (348 samples, 28.27%)</title><rect x="34.1998%" y="709" width="28.2697%" height="15" fill="rgb(224,164,23)" fg:x="421" fg:w="348"/><text x="34.4498%" y="719.50">engine::session::Session::evaluate_and_perform</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="62.3883%" y="693" width="0.0812%" height="15" fill="rgb(214,227,44)" fg:x="768" fg:w="1"/><text x="62.6383%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="62.3883%" y="677" width="0.0812%" height="15" fill="rgb(238,202,4)" fg:x="768" fg:w="1"/><text x="62.6383%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.3883%" y="661" width="0.0812%" height="15" fill="rgb(213,190,30)" fg:x="768" fg:w="1"/><text x="62.6383%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (770 samples, 62.55%)</title><rect x="0.0000%" y="757" width="62.5508%" height="15" fill="rgb(239,15,2)" fg:x="0" fg:w="770"/><text x="0.2500%" y="767.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (770 samples, 62.55%)</title><rect x="0.0000%" y="741" width="62.5508%" height="15" fill="rgb(249,229,4)" fg:x="0" fg:w="770"/><text x="0.2500%" y="751.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (770 samples, 62.55%)</title><rect x="0.0000%" y="725" width="62.5508%" height="15" fill="rgb(239,75,44)" fg:x="0" fg:w="770"/><text x="0.2500%" y="735.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="62.4695%" y="709" width="0.0812%" height="15" fill="rgb(251,206,23)" fg:x="769" fg:w="1"/><text x="62.7195%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="62.4695%" y="693" width="0.0812%" height="15" fill="rgb(215,208,0)" fg:x="769" fg:w="1"/><text x="62.7195%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="62.4695%" y="677" width="0.0812%" height="15" fill="rgb(230,75,50)" fg:x="769" fg:w="1"/><text x="62.7195%" y="687.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="62.4695%" y="661" width="0.0812%" height="15" fill="rgb(246,180,39)" fg:x="769" fg:w="1"/><text x="62.7195%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.6320%" y="661" width="0.0812%" height="15" fill="rgb(249,175,24)" fg:x="771" fg:w="1"/><text x="62.8820%" y="671.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="62.8757%" y="581" width="0.2437%" height="15" fill="rgb(247,176,22)" fg:x="774" fg:w="3"/><text x="63.1257%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.1194%" y="581" width="0.0812%" height="15" fill="rgb(241,100,24)" fg:x="777" fg:w="1"/><text x="63.3694%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.1194%" y="565" width="0.0812%" height="15" fill="rgb(233,4,35)" fg:x="777" fg:w="1"/><text x="63.3694%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.2006%" y="565" width="0.0812%" height="15" fill="rgb(211,164,46)" fg:x="778" fg:w="1"/><text x="63.4506%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.2006%" y="549" width="0.0812%" height="15" fill="rgb(242,99,53)" fg:x="778" fg:w="1"/><text x="63.4506%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.2819%" y="549" width="0.0812%" height="15" fill="rgb(243,45,33)" fg:x="779" fg:w="1"/><text x="63.5319%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="62.7132%" y="597" width="0.8123%" height="15" fill="rgb(217,55,21)" fg:x="772" fg:w="10"/><text x="62.9632%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="63.2006%" y="581" width="0.3249%" height="15" fill="rgb(245,145,46)" fg:x="778" fg:w="4"/><text x="63.4506%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="63.2819%" y="565" width="0.2437%" height="15" fill="rgb(215,112,45)" fg:x="779" fg:w="3"/><text x="63.5319%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="63.3631%" y="549" width="0.1625%" height="15" fill="rgb(228,104,16)" fg:x="780" fg:w="2"/><text x="63.6131%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.4444%" y="533" width="0.0812%" height="15" fill="rgb(239,186,38)" fg:x="781" fg:w="1"/><text x="63.6944%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.4444%" y="517" width="0.0812%" height="15" fill="rgb(228,38,35)" fg:x="781" fg:w="1"/><text x="63.6944%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.89%)</title><rect x="62.7132%" y="613" width="0.8936%" height="15" fill="rgb(251,42,40)" fg:x="772" fg:w="11"/><text x="62.9632%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::Write::write_fmt::Adapter&lt;std::sys::unix::stdio::Stderr&gt;&gt; (1 samples, 0.08%)</title><rect x="63.5256%" y="597" width="0.0812%" height="15" fill="rgb(210,51,19)" fg:x="782" fg:w="1"/><text x="63.7756%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.97%)</title><rect x="62.7132%" y="629" width="0.9748%" height="15" fill="rgb(236,94,42)" fg:x="772" fg:w="12"/><text x="62.9632%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.6068%" y="613" width="0.0812%" height="15" fill="rgb(239,167,16)" fg:x="783" fg:w="1"/><text x="63.8568%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.06%)</title><rect x="62.7132%" y="645" width="1.0561%" height="15" fill="rgb(252,175,31)" fg:x="772" fg:w="13"/><text x="62.9632%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.6881%" y="629" width="0.0812%" height="15" fill="rgb(206,166,30)" fg:x="784" fg:w="1"/><text x="63.9381%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.22%)</title><rect x="62.6320%" y="677" width="1.2185%" height="15" fill="rgb(206,209,37)" fg:x="771" fg:w="15"/><text x="62.8820%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (14 samples, 1.14%)</title><rect x="62.7132%" y="661" width="1.1373%" height="15" fill="rgb(226,91,4)" fg:x="772" fg:w="14"/><text x="62.9632%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.7693%" y="645" width="0.0812%" height="15" fill="rgb(222,167,0)" fg:x="785" fg:w="1"/><text x="64.0193%" y="655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.38%)</title><rect x="62.5508%" y="709" width="1.3810%" height="15" fill="rgb(211,70,14)" fg:x="770" fg:w="17"/><text x="62.8008%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::state::State&gt;&gt; (17 samples, 1.38%)</title><rect x="62.5508%" y="693" width="1.3810%" height="15" fill="rgb(214,84,42)" fg:x="770" fg:w="17"/><text x="62.8008%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.8505%" y="677" width="0.0812%" height="15" fill="rgb(235,157,37)" fg:x="786" fg:w="1"/><text x="64.1005%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="64.0130%" y="629" width="0.0812%" height="15" fill="rgb(225,13,6)" fg:x="788" fg:w="1"/><text x="64.2630%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="64.0130%" y="613" width="0.0812%" height="15" fill="rgb(205,202,1)" fg:x="788" fg:w="1"/><text x="64.2630%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="64.0130%" y="597" width="0.0812%" height="15" fill="rgb(232,195,26)" fg:x="788" fg:w="1"/><text x="64.2630%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="64.0130%" y="581" width="0.0812%" height="15" fill="rgb(208,102,26)" fg:x="788" fg:w="1"/><text x="64.2630%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="64.0130%" y="565" width="0.0812%" height="15" fill="rgb(215,41,39)" fg:x="788" fg:w="1"/><text x="64.2630%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.0130%" y="549" width="0.0812%" height="15" fill="rgb(247,139,11)" fg:x="788" fg:w="1"/><text x="64.2630%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.0130%" y="533" width="0.0812%" height="15" fill="rgb(243,99,6)" fg:x="788" fg:w="1"/><text x="64.2630%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.0130%" y="517" width="0.0812%" height="15" fill="rgb(230,168,48)" fg:x="788" fg:w="1"/><text x="64.2630%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.0130%" y="501" width="0.0812%" height="15" fill="rgb(238,227,13)" fg:x="788" fg:w="1"/><text x="64.2630%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.0130%" y="485" width="0.0812%" height="15" fill="rgb(209,109,13)" fg:x="788" fg:w="1"/><text x="64.2630%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="64.0942%" y="629" width="0.0812%" height="15" fill="rgb(228,195,1)" fg:x="789" fg:w="1"/><text x="64.3442%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="64.0942%" y="613" width="0.0812%" height="15" fill="rgb(230,218,0)" fg:x="789" fg:w="1"/><text x="64.3442%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="64.0942%" y="597" width="0.0812%" height="15" fill="rgb(206,1,45)" fg:x="789" fg:w="1"/><text x="64.3442%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.0942%" y="581" width="0.0812%" height="15" fill="rgb(209,124,26)" fg:x="789" fg:w="1"/><text x="64.3442%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.0942%" y="565" width="0.0812%" height="15" fill="rgb(220,59,8)" fg:x="789" fg:w="1"/><text x="64.3442%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.0942%" y="549" width="0.0812%" height="15" fill="rgb(251,41,37)" fg:x="789" fg:w="1"/><text x="64.3442%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.0942%" y="533" width="0.0812%" height="15" fill="rgb(239,152,21)" fg:x="789" fg:w="1"/><text x="64.3442%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="64.0942%" y="517" width="0.0812%" height="15" fill="rgb(226,32,1)" fg:x="789" fg:w="1"/><text x="64.3442%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.0942%" y="501" width="0.0812%" height="15" fill="rgb(230,154,36)" fg:x="789" fg:w="1"/><text x="64.3442%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.0942%" y="485" width="0.0812%" height="15" fill="rgb(208,228,43)" fg:x="789" fg:w="1"/><text x="64.3442%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.0942%" y="469" width="0.0812%" height="15" fill="rgb(214,203,3)" fg:x="789" fg:w="1"/><text x="64.3442%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.0942%" y="453" width="0.0812%" height="15" fill="rgb(207,149,29)" fg:x="789" fg:w="1"/><text x="64.3442%" y="463.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="64.1755%" y="613" width="0.1625%" height="15" fill="rgb(250,105,7)" fg:x="790" fg:w="2"/><text x="64.4255%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="64.1755%" y="597" width="0.1625%" height="15" fill="rgb(232,222,16)" fg:x="790" fg:w="2"/><text x="64.4255%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.1755%" y="581" width="0.1625%" height="15" fill="rgb(209,32,24)" fg:x="790" fg:w="2"/><text x="64.4255%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="64.1755%" y="565" width="0.1625%" height="15" fill="rgb(225,13,6)" fg:x="790" fg:w="2"/><text x="64.4255%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.1755%" y="549" width="0.1625%" height="15" fill="rgb(245,226,26)" fg:x="790" fg:w="2"/><text x="64.4255%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="64.1755%" y="533" width="0.1625%" height="15" fill="rgb(229,178,27)" fg:x="790" fg:w="2"/><text x="64.4255%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.1755%" y="517" width="0.1625%" height="15" fill="rgb(205,227,28)" fg:x="790" fg:w="2"/><text x="64.4255%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="64.1755%" y="501" width="0.1625%" height="15" fill="rgb(210,191,45)" fg:x="790" fg:w="2"/><text x="64.4255%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.1755%" y="485" width="0.1625%" height="15" fill="rgb(206,124,16)" fg:x="790" fg:w="2"/><text x="64.4255%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="64.1755%" y="469" width="0.1625%" height="15" fill="rgb(210,162,0)" fg:x="790" fg:w="2"/><text x="64.4255%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.1755%" y="453" width="0.1625%" height="15" fill="rgb(211,54,38)" fg:x="790" fg:w="2"/><text x="64.4255%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="64.1755%" y="437" width="0.1625%" height="15" fill="rgb(248,192,3)" fg:x="790" fg:w="2"/><text x="64.4255%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.1755%" y="421" width="0.1625%" height="15" fill="rgb(233,187,18)" fg:x="790" fg:w="2"/><text x="64.4255%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.2567%" y="405" width="0.0812%" height="15" fill="rgb(237,208,14)" fg:x="791" fg:w="1"/><text x="64.5067%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.4192%" y="533" width="0.0812%" height="15" fill="rgb(212,77,1)" fg:x="793" fg:w="1"/><text x="64.6692%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.4192%" y="517" width="0.0812%" height="15" fill="rgb(210,163,22)" fg:x="793" fg:w="1"/><text x="64.6692%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.4192%" y="501" width="0.0812%" height="15" fill="rgb(250,58,28)" fg:x="793" fg:w="1"/><text x="64.6692%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.4192%" y="485" width="0.0812%" height="15" fill="rgb(254,28,41)" fg:x="793" fg:w="1"/><text x="64.6692%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.4192%" y="469" width="0.0812%" height="15" fill="rgb(237,162,36)" fg:x="793" fg:w="1"/><text x="64.6692%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.4192%" y="453" width="0.0812%" height="15" fill="rgb(232,56,6)" fg:x="793" fg:w="1"/><text x="64.6692%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.4192%" y="437" width="0.0812%" height="15" fill="rgb(216,127,42)" fg:x="793" fg:w="1"/><text x="64.6692%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.4192%" y="421" width="0.0812%" height="15" fill="rgb(241,69,15)" fg:x="793" fg:w="1"/><text x="64.6692%" y="431.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="64.4192%" y="405" width="0.0812%" height="15" fill="rgb(227,180,19)" fg:x="793" fg:w="1"/><text x="64.6692%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (7 samples, 0.57%)</title><rect x="64.0130%" y="661" width="0.5686%" height="15" fill="rgb(231,188,29)" fg:x="788" fg:w="7"/><text x="64.2630%" y="671.50"></text></g><g><title>engine::internal::Entities::add_persisted (7 samples, 0.57%)</title><rect x="64.0130%" y="645" width="0.5686%" height="15" fill="rgb(224,176,27)" fg:x="788" fg:w="7"/><text x="64.2630%" y="655.50"></text></g><g><title>kernel::model::entity::Entity::from_str (5 samples, 0.41%)</title><rect x="64.1755%" y="629" width="0.4062%" height="15" fill="rgb(249,214,19)" fg:x="790" fg:w="5"/><text x="64.4255%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="64.3379%" y="613" width="0.2437%" height="15" fill="rgb(240,0,4)" fg:x="792" fg:w="3"/><text x="64.5879%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="64.3379%" y="597" width="0.2437%" height="15" fill="rgb(233,28,41)" fg:x="792" fg:w="3"/><text x="64.5879%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="64.4192%" y="581" width="0.1625%" height="15" fill="rgb(220,90,51)" fg:x="793" fg:w="2"/><text x="64.6692%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.4192%" y="565" width="0.1625%" height="15" fill="rgb(250,52,22)" fg:x="793" fg:w="2"/><text x="64.6692%" y="575.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="64.4192%" y="549" width="0.1625%" height="15" fill="rgb(231,152,36)" fg:x="793" fg:w="2"/><text x="64.6692%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.5004%" y="533" width="0.0812%" height="15" fill="rgb(250,218,4)" fg:x="794" fg:w="1"/><text x="64.7504%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.5004%" y="517" width="0.0812%" height="15" fill="rgb(210,38,21)" fg:x="794" fg:w="1"/><text x="64.7504%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="64.5004%" y="501" width="0.0812%" height="15" fill="rgb(230,75,13)" fg:x="794" fg:w="1"/><text x="64.7504%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.5004%" y="485" width="0.0812%" height="15" fill="rgb(250,68,53)" fg:x="794" fg:w="1"/><text x="64.7504%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.5004%" y="469" width="0.0812%" height="15" fill="rgb(250,210,16)" fg:x="794" fg:w="1"/><text x="64.7504%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="64.5004%" y="453" width="0.0812%" height="15" fill="rgb(240,132,5)" fg:x="794" fg:w="1"/><text x="64.7504%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.5004%" y="437" width="0.0812%" height="15" fill="rgb(222,148,48)" fg:x="794" fg:w="1"/><text x="64.7504%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.5004%" y="421" width="0.0812%" height="15" fill="rgb(247,181,24)" fg:x="794" fg:w="1"/><text x="64.7504%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="64.5004%" y="405" width="0.0812%" height="15" fill="rgb(239,5,31)" fg:x="794" fg:w="1"/><text x="64.7504%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.5004%" y="389" width="0.0812%" height="15" fill="rgb(241,152,38)" fg:x="794" fg:w="1"/><text x="64.7504%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.5004%" y="373" width="0.0812%" height="15" fill="rgb(246,200,37)" fg:x="794" fg:w="1"/><text x="64.7504%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.5004%" y="357" width="0.0812%" height="15" fill="rgb(243,210,26)" fg:x="794" fg:w="1"/><text x="64.7504%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.5004%" y="341" width="0.0812%" height="15" fill="rgb(222,22,22)" fg:x="794" fg:w="1"/><text x="64.7504%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (9 samples, 0.73%)</title><rect x="63.9318%" y="677" width="0.7311%" height="15" fill="rgb(208,129,28)" fg:x="787" fg:w="9"/><text x="64.1818%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="64.5816%" y="661" width="0.0812%" height="15" fill="rgb(254,169,28)" fg:x="795" fg:w="1"/><text x="64.8316%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="64.5816%" y="645" width="0.0812%" height="15" fill="rgb(225,45,17)" fg:x="795" fg:w="1"/><text x="64.8316%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="64.5816%" y="629" width="0.0812%" height="15" fill="rgb(232,199,2)" fg:x="795" fg:w="1"/><text x="64.8316%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="64.5816%" y="613" width="0.0812%" height="15" fill="rgb(235,33,40)" fg:x="795" fg:w="1"/><text x="64.8316%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="64.5816%" y="597" width="0.0812%" height="15" fill="rgb(237,89,50)" fg:x="795" fg:w="1"/><text x="64.8316%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="64.5816%" y="581" width="0.0812%" height="15" fill="rgb(238,126,5)" fg:x="795" fg:w="1"/><text x="64.8316%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="64.5816%" y="565" width="0.0812%" height="15" fill="rgb(247,214,42)" fg:x="795" fg:w="1"/><text x="64.8316%" y="575.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="64.6629%" y="677" width="0.0812%" height="15" fill="rgb(238,60,45)" fg:x="796" fg:w="1"/><text x="64.9129%" y="687.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="64.7441%" y="677" width="0.0812%" height="15" fill="rgb(225,69,44)" fg:x="797" fg:w="1"/><text x="64.9941%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="64.7441%" y="661" width="0.0812%" height="15" fill="rgb(241,13,44)" fg:x="797" fg:w="1"/><text x="64.9941%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="64.7441%" y="645" width="0.0812%" height="15" fill="rgb(227,121,22)" fg:x="797" fg:w="1"/><text x="64.9941%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.7441%" y="629" width="0.0812%" height="15" fill="rgb(231,160,23)" fg:x="797" fg:w="1"/><text x="64.9941%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.7441%" y="613" width="0.0812%" height="15" fill="rgb(250,179,43)" fg:x="797" fg:w="1"/><text x="64.9941%" y="623.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="64.8253%" y="677" width="0.0812%" height="15" fill="rgb(233,54,46)" fg:x="798" fg:w="1"/><text x="65.0753%" y="687.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="64.8253%" y="661" width="0.0812%" height="15" fill="rgb(247,120,42)" fg:x="798" fg:w="1"/><text x="65.0753%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="64.8253%" y="645" width="0.0812%" height="15" fill="rgb(221,219,12)" fg:x="798" fg:w="1"/><text x="65.0753%" y="655.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="64.8253%" y="629" width="0.0812%" height="15" fill="rgb(211,126,8)" fg:x="798" fg:w="1"/><text x="65.0753%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.8253%" y="613" width="0.0812%" height="15" fill="rgb(218,154,33)" fg:x="798" fg:w="1"/><text x="65.0753%" y="623.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (6 samples, 0.49%)</title><rect x="64.9066%" y="661" width="0.4874%" height="15" fill="rgb(212,199,16)" fg:x="799" fg:w="6"/><text x="65.1566%" y="671.50"></text></g><g><title>libloading::os::unix::Library::open (6 samples, 0.49%)</title><rect x="64.9066%" y="645" width="0.4874%" height="15" fill="rgb(236,215,46)" fg:x="799" fg:w="6"/><text x="65.1566%" y="655.50"></text></g><g><title>dlopen (6 samples, 0.49%)</title><rect x="64.9066%" y="629" width="0.4874%" height="15" fill="rgb(232,32,22)" fg:x="799" fg:w="6"/><text x="65.1566%" y="639.50"></text></g><g><title>_dl_catch_error (6 samples, 0.49%)</title><rect x="64.9066%" y="613" width="0.4874%" height="15" fill="rgb(234,79,15)" fg:x="799" fg:w="6"/><text x="65.1566%" y="623.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.49%)</title><rect x="64.9066%" y="597" width="0.4874%" height="15" fill="rgb(235,187,47)" fg:x="799" fg:w="6"/><text x="65.1566%" y="607.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.49%)</title><rect x="64.9066%" y="581" width="0.4874%" height="15" fill="rgb(244,69,37)" fg:x="799" fg:w="6"/><text x="65.1566%" y="591.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.49%)</title><rect x="64.9066%" y="565" width="0.4874%" height="15" fill="rgb(249,140,25)" fg:x="799" fg:w="6"/><text x="65.1566%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="65.3940%" y="661" width="0.0812%" height="15" fill="rgb(213,69,8)" fg:x="805" fg:w="1"/><text x="65.6440%" y="671.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="65.3940%" y="645" width="0.0812%" height="15" fill="rgb(220,136,2)" fg:x="805" fg:w="1"/><text x="65.6440%" y="655.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (8 samples, 0.65%)</title><rect x="64.9066%" y="677" width="0.6499%" height="15" fill="rgb(237,50,36)" fg:x="799" fg:w="8"/><text x="65.1566%" y="687.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="65.4752%" y="661" width="0.0812%" height="15" fill="rgb(226,18,11)" fg:x="806" fg:w="1"/><text x="65.7252%" y="671.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="65.4752%" y="645" width="0.0812%" height="15" fill="rgb(243,156,2)" fg:x="806" fg:w="1"/><text x="65.7252%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="65.5565%" y="661" width="0.0812%" height="15" fill="rgb(218,8,34)" fg:x="807" fg:w="1"/><text x="65.8065%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.5565%" y="645" width="0.0812%" height="15" fill="rgb(250,94,35)" fg:x="807" fg:w="1"/><text x="65.8065%" y="655.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (2 samples, 0.16%)</title><rect x="65.5565%" y="677" width="0.1625%" height="15" fill="rgb(229,127,21)" fg:x="807" fg:w="2"/><text x="65.8065%" y="687.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="65.6377%" y="661" width="0.0812%" height="15" fill="rgb(234,49,5)" fg:x="808" fg:w="1"/><text x="65.8877%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="65.6377%" y="645" width="0.0812%" height="15" fill="rgb(248,12,16)" fg:x="808" fg:w="1"/><text x="65.8877%" y="655.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (23 samples, 1.87%)</title><rect x="63.9318%" y="709" width="1.8684%" height="15" fill="rgb(208,220,31)" fg:x="787" fg:w="23"/><text x="64.1818%" y="719.50">&lt;..</text></g><g><title>engine::session::Session::new (23 samples, 1.87%)</title><rect x="63.9318%" y="693" width="1.8684%" height="15" fill="rgb(243,184,0)" fg:x="787" fg:w="23"/><text x="64.1818%" y="703.50">e..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="65.7189%" y="677" width="0.0812%" height="15" fill="rgb(217,38,21)" fg:x="809" fg:w="1"/><text x="65.9689%" y="687.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="65.7189%" y="661" width="0.0812%" height="15" fill="rgb(239,120,45)" fg:x="809" fg:w="1"/><text x="65.9689%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="65.8814%" y="693" width="0.0812%" height="15" fill="rgb(235,33,2)" fg:x="811" fg:w="1"/><text x="66.1314%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="65.8814%" y="677" width="0.0812%" height="15" fill="rgb(249,161,5)" fg:x="811" fg:w="1"/><text x="66.1314%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="65.9626%" y="661" width="0.0812%" height="15" fill="rgb(250,165,48)" fg:x="812" fg:w="1"/><text x="66.2126%" y="671.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="66.0439%" y="661" width="0.0812%" height="15" fill="rgb(221,23,45)" fg:x="813" fg:w="1"/><text x="66.2939%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="66.0439%" y="645" width="0.0812%" height="15" fill="rgb(217,108,46)" fg:x="813" fg:w="1"/><text x="66.2939%" y="655.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="66.0439%" y="629" width="0.0812%" height="15" fill="rgb(254,26,35)" fg:x="813" fg:w="1"/><text x="66.2939%" y="639.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="66.1251%" y="661" width="0.0812%" height="15" fill="rgb(218,223,28)" fg:x="814" fg:w="1"/><text x="66.3751%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="66.1251%" y="645" width="0.0812%" height="15" fill="rgb(242,27,47)" fg:x="814" fg:w="1"/><text x="66.3751%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="66.1251%" y="629" width="0.0812%" height="15" fill="rgb(218,39,35)" fg:x="814" fg:w="1"/><text x="66.3751%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="66.2876%" y="613" width="0.0812%" height="15" fill="rgb(232,127,16)" fg:x="816" fg:w="1"/><text x="66.5376%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="66.2876%" y="597" width="0.0812%" height="15" fill="rgb(231,219,51)" fg:x="816" fg:w="1"/><text x="66.5376%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="66.2876%" y="581" width="0.0812%" height="15" fill="rgb(217,220,46)" fg:x="816" fg:w="1"/><text x="66.5376%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="66.3688%" y="597" width="0.1625%" height="15" fill="rgb(230,75,1)" fg:x="817" fg:w="2"/><text x="66.6188%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="66.4500%" y="581" width="0.0812%" height="15" fill="rgb(218,2,8)" fg:x="818" fg:w="1"/><text x="66.7000%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="66.5313%" y="533" width="0.0812%" height="15" fill="rgb(206,111,30)" fg:x="819" fg:w="1"/><text x="66.7813%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="66.5313%" y="517" width="0.0812%" height="15" fill="rgb(209,135,6)" fg:x="819" fg:w="1"/><text x="66.7813%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="66.5313%" y="581" width="0.1625%" height="15" fill="rgb(205,169,10)" fg:x="819" fg:w="2"/><text x="66.7813%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="66.5313%" y="565" width="0.1625%" height="15" fill="rgb(212,204,38)" fg:x="819" fg:w="2"/><text x="66.7813%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="66.5313%" y="549" width="0.1625%" height="15" fill="rgb(205,199,14)" fg:x="819" fg:w="2"/><text x="66.7813%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="66.6125%" y="533" width="0.0812%" height="15" fill="rgb(212,4,6)" fg:x="820" fg:w="1"/><text x="66.8625%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="66.6125%" y="517" width="0.0812%" height="15" fill="rgb(250,15,10)" fg:x="820" fg:w="1"/><text x="66.8625%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.6125%" y="501" width="0.0812%" height="15" fill="rgb(212,49,51)" fg:x="820" fg:w="1"/><text x="66.8625%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="66.6937%" y="581" width="0.0812%" height="15" fill="rgb(235,21,9)" fg:x="821" fg:w="1"/><text x="66.9437%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="66.6937%" y="565" width="0.0812%" height="15" fill="rgb(251,31,32)" fg:x="821" fg:w="1"/><text x="66.9437%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="66.6937%" y="549" width="0.0812%" height="15" fill="rgb(246,23,9)" fg:x="821" fg:w="1"/><text x="66.9437%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="66.6937%" y="533" width="0.0812%" height="15" fill="rgb(225,216,14)" fg:x="821" fg:w="1"/><text x="66.9437%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="66.7750%" y="549" width="0.0812%" height="15" fill="rgb(215,200,26)" fg:x="822" fg:w="1"/><text x="67.0250%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="66.7750%" y="533" width="0.0812%" height="15" fill="rgb(237,130,47)" fg:x="822" fg:w="1"/><text x="67.0250%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="66.7750%" y="517" width="0.0812%" height="15" fill="rgb(247,74,14)" fg:x="822" fg:w="1"/><text x="67.0250%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.7750%" y="501" width="0.0812%" height="15" fill="rgb(254,97,46)" fg:x="822" fg:w="1"/><text x="67.0250%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="66.8562%" y="533" width="0.0812%" height="15" fill="rgb(234,191,1)" fg:x="823" fg:w="1"/><text x="67.1062%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="66.8562%" y="517" width="0.0812%" height="15" fill="rgb(215,165,14)" fg:x="823" fg:w="1"/><text x="67.1062%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="66.8562%" y="501" width="0.0812%" height="15" fill="rgb(230,182,6)" fg:x="823" fg:w="1"/><text x="67.1062%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.8562%" y="485" width="0.0812%" height="15" fill="rgb(210,127,39)" fg:x="823" fg:w="1"/><text x="67.1062%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="66.9374%" y="517" width="0.0812%" height="15" fill="rgb(223,212,51)" fg:x="824" fg:w="1"/><text x="67.1874%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="66.7750%" y="565" width="0.3249%" height="15" fill="rgb(226,176,43)" fg:x="822" fg:w="4"/><text x="67.0250%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="66.8562%" y="549" width="0.2437%" height="15" fill="rgb(222,155,4)" fg:x="823" fg:w="3"/><text x="67.1062%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="66.9374%" y="533" width="0.1625%" height="15" fill="rgb(215,149,7)" fg:x="824" fg:w="2"/><text x="67.1874%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="67.0187%" y="517" width="0.0812%" height="15" fill="rgb(252,199,23)" fg:x="825" fg:w="1"/><text x="67.2687%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="67.0187%" y="501" width="0.0812%" height="15" fill="rgb(245,52,29)" fg:x="825" fg:w="1"/><text x="67.2687%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="67.0187%" y="485" width="0.0812%" height="15" fill="rgb(221,228,19)" fg:x="825" fg:w="1"/><text x="67.2687%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="67.0187%" y="469" width="0.0812%" height="15" fill="rgb(253,101,6)" fg:x="825" fg:w="1"/><text x="67.2687%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="67.0187%" y="453" width="0.0812%" height="15" fill="rgb(211,130,8)" fg:x="825" fg:w="1"/><text x="67.2687%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="67.0187%" y="437" width="0.0812%" height="15" fill="rgb(238,37,53)" fg:x="825" fg:w="1"/><text x="67.2687%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.65%)</title><rect x="66.5313%" y="597" width="0.6499%" height="15" fill="rgb(235,145,5)" fg:x="819" fg:w="8"/><text x="66.7813%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="66.7750%" y="581" width="0.4062%" height="15" fill="rgb(244,12,43)" fg:x="822" fg:w="5"/><text x="67.0250%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="67.0999%" y="565" width="0.0812%" height="15" fill="rgb(246,195,24)" fg:x="826" fg:w="1"/><text x="67.3499%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.89%)</title><rect x="66.3688%" y="613" width="0.8936%" height="15" fill="rgb(235,163,6)" fg:x="817" fg:w="11"/><text x="66.6188%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="67.1812%" y="597" width="0.0812%" height="15" fill="rgb(236,218,17)" fg:x="827" fg:w="1"/><text x="67.4312%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="67.1812%" y="581" width="0.0812%" height="15" fill="rgb(235,12,38)" fg:x="827" fg:w="1"/><text x="67.4312%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (14 samples, 1.14%)</title><rect x="66.2063%" y="629" width="1.1373%" height="15" fill="rgb(225,195,33)" fg:x="815" fg:w="14"/><text x="66.4563%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="67.2624%" y="613" width="0.0812%" height="15" fill="rgb(238,54,35)" fg:x="828" fg:w="1"/><text x="67.5124%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="67.2624%" y="597" width="0.0812%" height="15" fill="rgb(238,33,7)" fg:x="828" fg:w="1"/><text x="67.5124%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="67.2624%" y="581" width="0.0812%" height="15" fill="rgb(245,5,14)" fg:x="828" fg:w="1"/><text x="67.5124%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="67.2624%" y="565" width="0.0812%" height="15" fill="rgb(251,95,31)" fg:x="828" fg:w="1"/><text x="67.5124%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="67.2624%" y="549" width="0.0812%" height="15" fill="rgb(222,15,46)" fg:x="828" fg:w="1"/><text x="67.5124%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.2624%" y="533" width="0.0812%" height="15" fill="rgb(226,182,24)" fg:x="828" fg:w="1"/><text x="67.5124%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.3436%" y="597" width="0.0812%" height="15" fill="rgb(229,105,41)" fg:x="829" fg:w="1"/><text x="67.5936%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.3436%" y="581" width="0.0812%" height="15" fill="rgb(216,99,53)" fg:x="829" fg:w="1"/><text x="67.5936%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.4249%" y="581" width="0.0812%" height="15" fill="rgb(253,26,20)" fg:x="830" fg:w="1"/><text x="67.6749%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.5061%" y="565" width="0.0812%" height="15" fill="rgb(249,155,28)" fg:x="831" fg:w="1"/><text x="67.7561%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.5873%" y="565" width="0.0812%" height="15" fill="rgb(241,221,2)" fg:x="832" fg:w="1"/><text x="67.8373%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.5873%" y="549" width="0.0812%" height="15" fill="rgb(219,124,6)" fg:x="832" fg:w="1"/><text x="67.8373%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.6686%" y="549" width="0.0812%" height="15" fill="rgb(233,37,6)" fg:x="833" fg:w="1"/><text x="67.9186%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.7498%" y="549" width="0.0812%" height="15" fill="rgb(238,20,14)" fg:x="834" fg:w="1"/><text x="67.9998%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="67.3436%" y="629" width="0.5686%" height="15" fill="rgb(232,106,27)" fg:x="829" fg:w="7"/><text x="67.5936%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.57%)</title><rect x="67.3436%" y="613" width="0.5686%" height="15" fill="rgb(246,157,24)" fg:x="829" fg:w="7"/><text x="67.5936%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="67.4249%" y="597" width="0.4874%" height="15" fill="rgb(214,153,10)" fg:x="830" fg:w="6"/><text x="67.6749%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="67.5061%" y="581" width="0.4062%" height="15" fill="rgb(212,94,6)" fg:x="831" fg:w="5"/><text x="67.7561%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="67.6686%" y="565" width="0.2437%" height="15" fill="rgb(254,25,27)" fg:x="833" fg:w="3"/><text x="67.9186%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="67.8310%" y="549" width="0.0812%" height="15" fill="rgb(250,43,52)" fg:x="835" fg:w="1"/><text x="68.0810%" y="559.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="67.9123%" y="613" width="0.0812%" height="15" fill="rgb(221,226,40)" fg:x="836" fg:w="1"/><text x="68.1623%" y="623.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="67.9123%" y="597" width="0.0812%" height="15" fill="rgb(235,162,34)" fg:x="836" fg:w="1"/><text x="68.1623%" y="607.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="67.9123%" y="581" width="0.0812%" height="15" fill="rgb(239,24,26)" fg:x="836" fg:w="1"/><text x="68.1623%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.9123%" y="565" width="0.0812%" height="15" fill="rgb(244,226,11)" fg:x="836" fg:w="1"/><text x="68.1623%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.9935%" y="581" width="0.0812%" height="15" fill="rgb(225,23,10)" fg:x="837" fg:w="1"/><text x="68.2435%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.0747%" y="581" width="0.0812%" height="15" fill="rgb(249,125,6)" fg:x="838" fg:w="1"/><text x="68.3247%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.2372%" y="501" width="0.0812%" height="15" fill="rgb(246,212,12)" fg:x="840" fg:w="1"/><text x="68.4872%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.2372%" y="485" width="0.0812%" height="15" fill="rgb(230,43,32)" fg:x="840" fg:w="1"/><text x="68.4872%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.2372%" y="469" width="0.0812%" height="15" fill="rgb(210,95,23)" fg:x="840" fg:w="1"/><text x="68.4872%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="68.3184%" y="421" width="0.0812%" height="15" fill="rgb(229,103,33)" fg:x="841" fg:w="1"/><text x="68.5684%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.3184%" y="405" width="0.0812%" height="15" fill="rgb(222,104,27)" fg:x="841" fg:w="1"/><text x="68.5684%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.3184%" y="389" width="0.0812%" height="15" fill="rgb(239,221,23)" fg:x="841" fg:w="1"/><text x="68.5684%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.3184%" y="373" width="0.0812%" height="15" fill="rgb(222,98,21)" fg:x="841" fg:w="1"/><text x="68.5684%" y="383.50"></text></g><g><title>engine::session::Session::flush (31 samples, 2.52%)</title><rect x="65.9626%" y="693" width="2.5183%" height="15" fill="rgb(231,101,20)" fg:x="812" fg:w="31"/><text x="66.2126%" y="703.50">en..</text></g><g><title>engine::session::Session::save_entity_changes (31 samples, 2.52%)</title><rect x="65.9626%" y="677" width="2.5183%" height="15" fill="rgb(215,150,22)" fg:x="812" fg:w="31"/><text x="66.2126%" y="687.50">en..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (28 samples, 2.27%)</title><rect x="66.2063%" y="661" width="2.2746%" height="15" fill="rgb(248,3,34)" fg:x="815" fg:w="28"/><text x="66.4563%" y="671.50">e..</text></g><g><title>engine::session::SavesEntities::check_for_changes (28 samples, 2.27%)</title><rect x="66.2063%" y="645" width="2.2746%" height="15" fill="rgb(220,141,21)" fg:x="815" fg:w="28"/><text x="66.4563%" y="655.50">e..</text></g><g><title>kernel::model::any_entity_changes (7 samples, 0.57%)</title><rect x="67.9123%" y="629" width="0.5686%" height="15" fill="rgb(223,41,48)" fg:x="836" fg:w="7"/><text x="68.1623%" y="639.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (6 samples, 0.49%)</title><rect x="67.9935%" y="613" width="0.4874%" height="15" fill="rgb(247,12,5)" fg:x="837" fg:w="6"/><text x="68.2435%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.49%)</title><rect x="67.9935%" y="597" width="0.4874%" height="15" fill="rgb(206,173,10)" fg:x="837" fg:w="6"/><text x="68.2435%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="68.1560%" y="581" width="0.3249%" height="15" fill="rgb(233,214,37)" fg:x="839" fg:w="4"/><text x="68.4060%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.32%)</title><rect x="68.1560%" y="565" width="0.3249%" height="15" fill="rgb(238,86,43)" fg:x="839" fg:w="4"/><text x="68.4060%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="68.1560%" y="549" width="0.3249%" height="15" fill="rgb(212,182,8)" fg:x="839" fg:w="4"/><text x="68.4060%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="68.1560%" y="533" width="0.3249%" height="15" fill="rgb(240,91,47)" fg:x="839" fg:w="4"/><text x="68.4060%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="68.2372%" y="517" width="0.2437%" height="15" fill="rgb(209,138,26)" fg:x="840" fg:w="3"/><text x="68.4872%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="68.3184%" y="501" width="0.1625%" height="15" fill="rgb(231,163,20)" fg:x="841" fg:w="2"/><text x="68.5684%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="68.3184%" y="485" width="0.1625%" height="15" fill="rgb(214,91,54)" fg:x="841" fg:w="2"/><text x="68.5684%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="68.3184%" y="469" width="0.1625%" height="15" fill="rgb(230,32,17)" fg:x="841" fg:w="2"/><text x="68.5684%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="68.3184%" y="453" width="0.1625%" height="15" fill="rgb(231,34,34)" fg:x="841" fg:w="2"/><text x="68.5684%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="68.3184%" y="437" width="0.1625%" height="15" fill="rgb(224,228,27)" fg:x="841" fg:w="2"/><text x="68.5684%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.3997%" y="421" width="0.0812%" height="15" fill="rgb(219,35,40)" fg:x="842" fg:w="1"/><text x="68.6497%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="68.4809%" y="629" width="0.0812%" height="15" fill="rgb(234,42,8)" fg:x="843" fg:w="1"/><text x="68.7309%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="68.4809%" y="613" width="0.0812%" height="15" fill="rgb(226,75,22)" fg:x="843" fg:w="1"/><text x="68.7309%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="68.4809%" y="597" width="0.0812%" height="15" fill="rgb(242,203,28)" fg:x="843" fg:w="1"/><text x="68.7309%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.4809%" y="581" width="0.0812%" height="15" fill="rgb(221,3,9)" fg:x="843" fg:w="1"/><text x="68.7309%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.4809%" y="565" width="0.0812%" height="15" fill="rgb(214,34,31)" fg:x="843" fg:w="1"/><text x="68.7309%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="68.4809%" y="677" width="0.1625%" height="15" fill="rgb(252,119,15)" fg:x="843" fg:w="2"/><text x="68.7309%" y="687.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="68.4809%" y="661" width="0.1625%" height="15" fill="rgb(244,224,31)" fg:x="843" fg:w="2"/><text x="68.7309%" y="671.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="68.4809%" y="645" width="0.1625%" height="15" fill="rgb(215,8,51)" fg:x="843" fg:w="2"/><text x="68.7309%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="68.5621%" y="629" width="0.0812%" height="15" fill="rgb(207,24,1)" fg:x="844" fg:w="1"/><text x="68.8121%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="68.5621%" y="613" width="0.0812%" height="15" fill="rgb(245,90,0)" fg:x="844" fg:w="1"/><text x="68.8121%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="68.6434%" y="661" width="0.0812%" height="15" fill="rgb(246,43,48)" fg:x="845" fg:w="1"/><text x="68.8934%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="68.6434%" y="645" width="0.0812%" height="15" fill="rgb(252,218,10)" fg:x="845" fg:w="1"/><text x="68.8934%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="68.6434%" y="629" width="0.0812%" height="15" fill="rgb(231,24,35)" fg:x="845" fg:w="1"/><text x="68.8934%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="68.6434%" y="613" width="0.0812%" height="15" fill="rgb(225,66,19)" fg:x="845" fg:w="1"/><text x="68.8934%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="68.6434%" y="597" width="0.0812%" height="15" fill="rgb(214,96,51)" fg:x="845" fg:w="1"/><text x="68.8934%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.6434%" y="581" width="0.0812%" height="15" fill="rgb(251,151,47)" fg:x="845" fg:w="1"/><text x="68.8934%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.6434%" y="565" width="0.0812%" height="15" fill="rgb(236,79,14)" fg:x="845" fg:w="1"/><text x="68.8934%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.6434%" y="549" width="0.0812%" height="15" fill="rgb(210,205,11)" fg:x="845" fg:w="1"/><text x="68.8934%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.6434%" y="533" width="0.0812%" height="15" fill="rgb(233,142,53)" fg:x="845" fg:w="1"/><text x="68.8934%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="68.6434%" y="517" width="0.0812%" height="15" fill="rgb(212,116,48)" fg:x="845" fg:w="1"/><text x="68.8934%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.6434%" y="501" width="0.0812%" height="15" fill="rgb(234,55,33)" fg:x="845" fg:w="1"/><text x="68.8934%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.6434%" y="485" width="0.0812%" height="15" fill="rgb(253,92,27)" fg:x="845" fg:w="1"/><text x="68.8934%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.6434%" y="469" width="0.0812%" height="15" fill="rgb(220,7,35)" fg:x="845" fg:w="1"/><text x="68.8934%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.6434%" y="453" width="0.0812%" height="15" fill="rgb(246,124,6)" fg:x="845" fg:w="1"/><text x="68.8934%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="68.7246%" y="661" width="0.1625%" height="15" fill="rgb(212,111,51)" fg:x="846" fg:w="2"/><text x="68.9746%" y="671.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="68.7246%" y="645" width="0.1625%" height="15" fill="rgb(253,116,7)" fg:x="846" fg:w="2"/><text x="68.9746%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="68.7246%" y="629" width="0.1625%" height="15" fill="rgb(213,145,18)" fg:x="846" fg:w="2"/><text x="68.9746%" y="639.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="68.7246%" y="613" width="0.1625%" height="15" fill="rgb(219,149,7)" fg:x="846" fg:w="2"/><text x="68.9746%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="68.8058%" y="597" width="0.0812%" height="15" fill="rgb(225,156,20)" fg:x="847" fg:w="1"/><text x="69.0558%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.8058%" y="581" width="0.0812%" height="15" fill="rgb(211,98,19)" fg:x="847" fg:w="1"/><text x="69.0558%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="68.8871%" y="613" width="0.0812%" height="15" fill="rgb(231,192,31)" fg:x="848" fg:w="1"/><text x="69.1371%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="68.8871%" y="597" width="0.0812%" height="15" fill="rgb(249,95,19)" fg:x="848" fg:w="1"/><text x="69.1371%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="68.8871%" y="581" width="0.0812%" height="15" fill="rgb(247,101,36)" fg:x="848" fg:w="1"/><text x="69.1371%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.8871%" y="565" width="0.0812%" height="15" fill="rgb(221,45,43)" fg:x="848" fg:w="1"/><text x="69.1371%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.8871%" y="549" width="0.0812%" height="15" fill="rgb(220,42,1)" fg:x="848" fg:w="1"/><text x="69.1371%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.9683%" y="597" width="0.0812%" height="15" fill="rgb(236,19,24)" fg:x="849" fg:w="1"/><text x="69.2183%" y="607.50"></text></g><g><title>plugins_core::build::Build::holding (8 samples, 0.65%)</title><rect x="68.4809%" y="693" width="0.6499%" height="15" fill="rgb(225,192,6)" fg:x="843" fg:w="8"/><text x="68.7309%" y="703.50"></text></g><g><title>plugins_core::tools::set_container (6 samples, 0.49%)</title><rect x="68.6434%" y="677" width="0.4874%" height="15" fill="rgb(242,30,19)" fg:x="845" fg:w="6"/><text x="68.8934%" y="687.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="68.8871%" y="661" width="0.2437%" height="15" fill="rgb(240,36,6)" fg:x="848" fg:w="3"/><text x="69.1371%" y="671.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="68.8871%" y="645" width="0.2437%" height="15" fill="rgb(246,40,28)" fg:x="848" fg:w="3"/><text x="69.1371%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="68.8871%" y="629" width="0.2437%" height="15" fill="rgb(225,155,33)" fg:x="848" fg:w="3"/><text x="69.1371%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="68.9683%" y="613" width="0.1625%" height="15" fill="rgb(240,65,18)" fg:x="849" fg:w="2"/><text x="69.2183%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="69.0496%" y="597" width="0.0812%" height="15" fill="rgb(217,0,48)" fg:x="850" fg:w="1"/><text x="69.2996%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="69.0496%" y="581" width="0.0812%" height="15" fill="rgb(217,80,15)" fg:x="850" fg:w="1"/><text x="69.2996%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.0496%" y="565" width="0.0812%" height="15" fill="rgb(253,43,51)" fg:x="850" fg:w="1"/><text x="69.2996%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.0496%" y="549" width="0.0812%" height="15" fill="rgb(246,60,4)" fg:x="850" fg:w="1"/><text x="69.2996%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.0496%" y="533" width="0.0812%" height="15" fill="rgb(230,40,54)" fg:x="850" fg:w="1"/><text x="69.2996%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.0496%" y="517" width="0.0812%" height="15" fill="rgb(208,20,44)" fg:x="850" fg:w="1"/><text x="69.2996%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.1308%" y="581" width="0.1625%" height="15" fill="rgb(230,22,22)" fg:x="851" fg:w="2"/><text x="69.3808%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.1308%" y="565" width="0.1625%" height="15" fill="rgb(207,57,4)" fg:x="851" fg:w="2"/><text x="69.3808%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.1308%" y="549" width="0.1625%" height="15" fill="rgb(242,130,33)" fg:x="851" fg:w="2"/><text x="69.3808%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.2120%" y="533" width="0.0812%" height="15" fill="rgb(218,66,43)" fg:x="852" fg:w="1"/><text x="69.4620%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="69.1308%" y="629" width="0.3249%" height="15" fill="rgb(236,105,16)" fg:x="851" fg:w="4"/><text x="69.3808%" y="639.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="69.1308%" y="613" width="0.3249%" height="15" fill="rgb(230,46,15)" fg:x="851" fg:w="4"/><text x="69.3808%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="69.1308%" y="597" width="0.3249%" height="15" fill="rgb(251,172,40)" fg:x="851" fg:w="4"/><text x="69.3808%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="69.2933%" y="581" width="0.1625%" height="15" fill="rgb(225,217,32)" fg:x="853" fg:w="2"/><text x="69.5433%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.2933%" y="565" width="0.1625%" height="15" fill="rgb(243,10,29)" fg:x="853" fg:w="2"/><text x="69.5433%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="69.2933%" y="549" width="0.1625%" height="15" fill="rgb(207,102,10)" fg:x="853" fg:w="2"/><text x="69.5433%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.2933%" y="533" width="0.1625%" height="15" fill="rgb(241,125,5)" fg:x="853" fg:w="2"/><text x="69.5433%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="69.2933%" y="517" width="0.1625%" height="15" fill="rgb(230,125,29)" fg:x="853" fg:w="2"/><text x="69.5433%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.2933%" y="501" width="0.1625%" height="15" fill="rgb(223,65,44)" fg:x="853" fg:w="2"/><text x="69.5433%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.3745%" y="485" width="0.0812%" height="15" fill="rgb(224,188,28)" fg:x="854" fg:w="1"/><text x="69.6245%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.3745%" y="469" width="0.0812%" height="15" fill="rgb(254,197,27)" fg:x="854" fg:w="1"/><text x="69.6245%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.3745%" y="453" width="0.0812%" height="15" fill="rgb(220,200,25)" fg:x="854" fg:w="1"/><text x="69.6245%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.3745%" y="437" width="0.0812%" height="15" fill="rgb(239,225,54)" fg:x="854" fg:w="1"/><text x="69.6245%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.3745%" y="421" width="0.0812%" height="15" fill="rgb(211,59,40)" fg:x="854" fg:w="1"/><text x="69.6245%" y="431.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.41%)</title><rect x="69.1308%" y="693" width="0.4062%" height="15" fill="rgb(213,176,46)" fg:x="851" fg:w="5"/><text x="69.3808%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.41%)</title><rect x="69.1308%" y="677" width="0.4062%" height="15" fill="rgb(226,99,4)" fg:x="851" fg:w="5"/><text x="69.3808%" y="687.50"></text></g><g><title>engine::internal::Entities::add_entity (5 samples, 0.41%)</title><rect x="69.1308%" y="661" width="0.4062%" height="15" fill="rgb(239,203,43)" fg:x="851" fg:w="5"/><text x="69.3808%" y="671.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (5 samples, 0.41%)</title><rect x="69.1308%" y="645" width="0.4062%" height="15" fill="rgb(246,1,45)" fg:x="851" fg:w="5"/><text x="69.3808%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="69.4557%" y="629" width="0.0812%" height="15" fill="rgb(231,42,52)" fg:x="855" fg:w="1"/><text x="69.7057%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="69.4557%" y="613" width="0.0812%" height="15" fill="rgb(240,13,50)" fg:x="855" fg:w="1"/><text x="69.7057%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="69.4557%" y="597" width="0.0812%" height="15" fill="rgb(225,81,14)" fg:x="855" fg:w="1"/><text x="69.7057%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.4557%" y="581" width="0.0812%" height="15" fill="rgb(216,182,23)" fg:x="855" fg:w="1"/><text x="69.7057%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.4557%" y="565" width="0.0812%" height="15" fill="rgb(233,137,19)" fg:x="855" fg:w="1"/><text x="69.7057%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.4557%" y="549" width="0.0812%" height="15" fill="rgb(242,61,46)" fg:x="855" fg:w="1"/><text x="69.7057%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.4557%" y="533" width="0.0812%" height="15" fill="rgb(221,168,51)" fg:x="855" fg:w="1"/><text x="69.7057%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.4557%" y="517" width="0.0812%" height="15" fill="rgb(238,48,15)" fg:x="855" fg:w="1"/><text x="69.7057%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.4557%" y="501" width="0.0812%" height="15" fill="rgb(216,13,16)" fg:x="855" fg:w="1"/><text x="69.7057%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.4557%" y="485" width="0.0812%" height="15" fill="rgb(223,185,34)" fg:x="855" fg:w="1"/><text x="69.7057%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.4557%" y="469" width="0.0812%" height="15" fill="rgb(228,94,42)" fg:x="855" fg:w="1"/><text x="69.7057%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.4557%" y="453" width="0.0812%" height="15" fill="rgb(218,166,43)" fg:x="855" fg:w="1"/><text x="69.7057%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="69.4557%" y="437" width="0.0812%" height="15" fill="rgb(232,30,50)" fg:x="855" fg:w="1"/><text x="69.7057%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="69.4557%" y="421" width="0.0812%" height="15" fill="rgb(245,206,45)" fg:x="855" fg:w="1"/><text x="69.7057%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="69.6182%" y="613" width="0.0812%" height="15" fill="rgb(220,56,22)" fg:x="857" fg:w="1"/><text x="69.8682%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="69.6182%" y="677" width="0.1625%" height="15" fill="rgb(239,129,38)" fg:x="857" fg:w="2"/><text x="69.8682%" y="687.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="69.6182%" y="661" width="0.1625%" height="15" fill="rgb(207,68,41)" fg:x="857" fg:w="2"/><text x="69.8682%" y="671.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="69.6182%" y="645" width="0.1625%" height="15" fill="rgb(221,21,7)" fg:x="857" fg:w="2"/><text x="69.8682%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="69.6182%" y="629" width="0.1625%" height="15" fill="rgb(240,33,25)" fg:x="857" fg:w="2"/><text x="69.8682%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="69.6994%" y="613" width="0.0812%" height="15" fill="rgb(242,119,10)" fg:x="858" fg:w="1"/><text x="69.9494%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="69.6994%" y="597" width="0.0812%" height="15" fill="rgb(214,149,40)" fg:x="858" fg:w="1"/><text x="69.9494%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.6994%" y="581" width="0.0812%" height="15" fill="rgb(228,25,36)" fg:x="858" fg:w="1"/><text x="69.9494%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.6994%" y="565" width="0.0812%" height="15" fill="rgb(222,59,15)" fg:x="858" fg:w="1"/><text x="69.9494%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.6994%" y="549" width="0.0812%" height="15" fill="rgb(218,170,0)" fg:x="858" fg:w="1"/><text x="69.9494%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.6994%" y="533" width="0.0812%" height="15" fill="rgb(232,173,23)" fg:x="858" fg:w="1"/><text x="69.9494%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.6994%" y="517" width="0.0812%" height="15" fill="rgb(218,116,1)" fg:x="858" fg:w="1"/><text x="69.9494%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.7807%" y="677" width="0.0812%" height="15" fill="rgb(207,34,4)" fg:x="859" fg:w="1"/><text x="70.0307%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.7807%" y="661" width="0.0812%" height="15" fill="rgb(229,54,52)" fg:x="859" fg:w="1"/><text x="70.0307%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.7807%" y="645" width="0.0812%" height="15" fill="rgb(211,86,23)" fg:x="859" fg:w="1"/><text x="70.0307%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.7807%" y="629" width="0.0812%" height="15" fill="rgb(254,153,34)" fg:x="859" fg:w="1"/><text x="70.0307%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.7807%" y="613" width="0.0812%" height="15" fill="rgb(219,220,14)" fg:x="859" fg:w="1"/><text x="70.0307%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.7807%" y="597" width="0.0812%" height="15" fill="rgb(247,8,26)" fg:x="859" fg:w="1"/><text x="70.0307%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.7807%" y="581" width="0.0812%" height="15" fill="rgb(213,129,42)" fg:x="859" fg:w="1"/><text x="70.0307%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.7807%" y="565" width="0.0812%" height="15" fill="rgb(225,95,41)" fg:x="859" fg:w="1"/><text x="70.0307%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.7807%" y="549" width="0.0812%" height="15" fill="rgb(215,134,24)" fg:x="859" fg:w="1"/><text x="70.0307%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.7807%" y="533" width="0.0812%" height="15" fill="rgb(235,23,54)" fg:x="859" fg:w="1"/><text x="70.0307%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.7807%" y="517" width="0.0812%" height="15" fill="rgb(229,96,31)" fg:x="859" fg:w="1"/><text x="70.0307%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.7807%" y="501" width="0.0812%" height="15" fill="rgb(206,111,12)" fg:x="859" fg:w="1"/><text x="70.0307%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.7807%" y="485" width="0.0812%" height="15" fill="rgb(222,177,8)" fg:x="859" fg:w="1"/><text x="70.0307%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.8619%" y="517" width="0.0812%" height="15" fill="rgb(251,36,52)" fg:x="860" fg:w="1"/><text x="70.1119%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.8619%" y="501" width="0.0812%" height="15" fill="rgb(216,182,29)" fg:x="860" fg:w="1"/><text x="70.1119%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.8619%" y="485" width="0.0812%" height="15" fill="rgb(241,145,50)" fg:x="860" fg:w="1"/><text x="70.1119%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.8619%" y="469" width="0.0812%" height="15" fill="rgb(231,71,35)" fg:x="860" fg:w="1"/><text x="70.1119%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.9431%" y="357" width="0.0812%" height="15" fill="rgb(218,22,17)" fg:x="861" fg:w="1"/><text x="70.1931%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.9431%" y="341" width="0.0812%" height="15" fill="rgb(225,227,6)" fg:x="861" fg:w="1"/><text x="70.1931%" y="351.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="69.8619%" y="629" width="0.2437%" height="15" fill="rgb(224,204,17)" fg:x="860" fg:w="3"/><text x="70.1119%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="69.8619%" y="613" width="0.2437%" height="15" fill="rgb(227,61,28)" fg:x="860" fg:w="3"/><text x="70.1119%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="69.8619%" y="597" width="0.2437%" height="15" fill="rgb(242,148,23)" fg:x="860" fg:w="3"/><text x="70.1119%" y="607.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="69.8619%" y="581" width="0.2437%" height="15" fill="rgb(237,105,33)" fg:x="860" fg:w="3"/><text x="70.1119%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="69.8619%" y="565" width="0.2437%" height="15" fill="rgb(238,218,40)" fg:x="860" fg:w="3"/><text x="70.1119%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="69.8619%" y="549" width="0.2437%" height="15" fill="rgb(209,126,11)" fg:x="860" fg:w="3"/><text x="70.1119%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="69.8619%" y="533" width="0.2437%" height="15" fill="rgb(245,90,11)" fg:x="860" fg:w="3"/><text x="70.1119%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="69.9431%" y="517" width="0.1625%" height="15" fill="rgb(211,195,10)" fg:x="861" fg:w="2"/><text x="70.1931%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.9431%" y="501" width="0.1625%" height="15" fill="rgb(231,45,45)" fg:x="861" fg:w="2"/><text x="70.1931%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="69.9431%" y="485" width="0.1625%" height="15" fill="rgb(246,100,43)" fg:x="861" fg:w="2"/><text x="70.1931%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.9431%" y="469" width="0.1625%" height="15" fill="rgb(241,193,8)" fg:x="861" fg:w="2"/><text x="70.1931%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="69.9431%" y="453" width="0.1625%" height="15" fill="rgb(208,76,19)" fg:x="861" fg:w="2"/><text x="70.1931%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.9431%" y="437" width="0.1625%" height="15" fill="rgb(223,69,40)" fg:x="861" fg:w="2"/><text x="70.1931%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="69.9431%" y="421" width="0.1625%" height="15" fill="rgb(207,120,39)" fg:x="861" fg:w="2"/><text x="70.1931%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.9431%" y="405" width="0.1625%" height="15" fill="rgb(212,209,28)" fg:x="861" fg:w="2"/><text x="70.1931%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="69.9431%" y="389" width="0.1625%" height="15" fill="rgb(246,82,29)" fg:x="861" fg:w="2"/><text x="70.1931%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.9431%" y="373" width="0.1625%" height="15" fill="rgb(239,6,40)" fg:x="861" fg:w="2"/><text x="70.1931%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="70.0244%" y="357" width="0.0812%" height="15" fill="rgb(228,181,35)" fg:x="862" fg:w="1"/><text x="70.2744%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="70.1868%" y="565" width="0.0812%" height="15" fill="rgb(238,151,2)" fg:x="864" fg:w="1"/><text x="70.4368%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="70.1868%" y="549" width="0.0812%" height="15" fill="rgb(236,94,18)" fg:x="864" fg:w="1"/><text x="70.4368%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="70.1868%" y="533" width="0.0812%" height="15" fill="rgb(208,38,14)" fg:x="864" fg:w="1"/><text x="70.4368%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.1868%" y="517" width="0.0812%" height="15" fill="rgb(234,215,27)" fg:x="864" fg:w="1"/><text x="70.4368%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.1868%" y="501" width="0.0812%" height="15" fill="rgb(254,211,53)" fg:x="864" fg:w="1"/><text x="70.4368%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.1868%" y="485" width="0.0812%" height="15" fill="rgb(216,175,11)" fg:x="864" fg:w="1"/><text x="70.4368%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.1868%" y="469" width="0.0812%" height="15" fill="rgb(246,179,26)" fg:x="864" fg:w="1"/><text x="70.4368%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.1868%" y="453" width="0.0812%" height="15" fill="rgb(249,19,52)" fg:x="864" fg:w="1"/><text x="70.4368%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.1868%" y="437" width="0.0812%" height="15" fill="rgb(230,42,52)" fg:x="864" fg:w="1"/><text x="70.4368%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="70.2681%" y="549" width="0.0812%" height="15" fill="rgb(221,171,0)" fg:x="865" fg:w="1"/><text x="70.5181%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="70.2681%" y="533" width="0.0812%" height="15" fill="rgb(222,177,40)" fg:x="865" fg:w="1"/><text x="70.5181%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.2681%" y="517" width="0.0812%" height="15" fill="rgb(247,34,16)" fg:x="865" fg:w="1"/><text x="70.5181%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.2681%" y="501" width="0.0812%" height="15" fill="rgb(213,217,37)" fg:x="865" fg:w="1"/><text x="70.5181%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.2681%" y="485" width="0.0812%" height="15" fill="rgb(231,189,24)" fg:x="865" fg:w="1"/><text x="70.5181%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.2681%" y="469" width="0.0812%" height="15" fill="rgb(214,22,9)" fg:x="865" fg:w="1"/><text x="70.5181%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.2681%" y="453" width="0.0812%" height="15" fill="rgb(212,70,22)" fg:x="865" fg:w="1"/><text x="70.5181%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.3493%" y="517" width="0.1625%" height="15" fill="rgb(249,64,51)" fg:x="866" fg:w="2"/><text x="70.5993%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.3493%" y="501" width="0.1625%" height="15" fill="rgb(249,148,20)" fg:x="866" fg:w="2"/><text x="70.5993%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.3493%" y="485" width="0.1625%" height="15" fill="rgb(246,46,48)" fg:x="866" fg:w="2"/><text x="70.5993%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.4305%" y="469" width="0.0812%" height="15" fill="rgb(217,34,48)" fg:x="867" fg:w="1"/><text x="70.6805%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.4305%" y="453" width="0.0812%" height="15" fill="rgb(222,45,26)" fg:x="867" fg:w="1"/><text x="70.6805%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.49%)</title><rect x="70.1056%" y="613" width="0.4874%" height="15" fill="rgb(230,201,36)" fg:x="863" fg:w="6"/><text x="70.3556%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (6 samples, 0.49%)</title><rect x="70.1056%" y="597" width="0.4874%" height="15" fill="rgb(217,30,43)" fg:x="863" fg:w="6"/><text x="70.3556%" y="607.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (6 samples, 0.49%)</title><rect x="70.1056%" y="581" width="0.4874%" height="15" fill="rgb(230,197,40)" fg:x="863" fg:w="6"/><text x="70.3556%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="70.2681%" y="565" width="0.3249%" height="15" fill="rgb(239,181,18)" fg:x="865" fg:w="4"/><text x="70.5181%" y="575.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="70.3493%" y="549" width="0.2437%" height="15" fill="rgb(222,60,39)" fg:x="866" fg:w="3"/><text x="70.5993%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="70.3493%" y="533" width="0.2437%" height="15" fill="rgb(210,60,22)" fg:x="866" fg:w="3"/><text x="70.5993%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="70.5118%" y="517" width="0.0812%" height="15" fill="rgb(239,213,48)" fg:x="868" fg:w="1"/><text x="70.7618%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="70.5118%" y="501" width="0.0812%" height="15" fill="rgb(253,214,23)" fg:x="868" fg:w="1"/><text x="70.7618%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="70.5930%" y="565" width="0.0812%" height="15" fill="rgb(211,98,45)" fg:x="869" fg:w="1"/><text x="70.8430%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="70.5930%" y="549" width="0.0812%" height="15" fill="rgb(239,130,44)" fg:x="869" fg:w="1"/><text x="70.8430%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="70.5930%" y="533" width="0.0812%" height="15" fill="rgb(222,181,35)" fg:x="869" fg:w="1"/><text x="70.8430%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.5930%" y="517" width="0.0812%" height="15" fill="rgb(219,219,49)" fg:x="869" fg:w="1"/><text x="70.8430%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.5930%" y="501" width="0.0812%" height="15" fill="rgb(227,161,51)" fg:x="869" fg:w="1"/><text x="70.8430%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="70.6742%" y="549" width="0.0812%" height="15" fill="rgb(239,112,27)" fg:x="870" fg:w="1"/><text x="70.9242%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.6742%" y="533" width="0.0812%" height="15" fill="rgb(248,122,18)" fg:x="870" fg:w="1"/><text x="70.9242%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="70.5930%" y="597" width="0.3249%" height="15" fill="rgb(245,130,23)" fg:x="869" fg:w="4"/><text x="70.8430%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="70.5930%" y="581" width="0.3249%" height="15" fill="rgb(211,225,28)" fg:x="869" fg:w="4"/><text x="70.8430%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="70.6742%" y="565" width="0.2437%" height="15" fill="rgb(242,105,44)" fg:x="870" fg:w="3"/><text x="70.9242%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="70.7555%" y="549" width="0.1625%" height="15" fill="rgb(216,183,46)" fg:x="871" fg:w="2"/><text x="71.0055%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="70.7555%" y="533" width="0.1625%" height="15" fill="rgb(227,112,9)" fg:x="871" fg:w="2"/><text x="71.0055%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.8367%" y="517" width="0.0812%" height="15" fill="rgb(244,21,0)" fg:x="872" fg:w="1"/><text x="71.0867%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.8367%" y="501" width="0.0812%" height="15" fill="rgb(236,185,14)" fg:x="872" fg:w="1"/><text x="71.0867%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.8367%" y="485" width="0.0812%" height="15" fill="rgb(236,170,30)" fg:x="872" fg:w="1"/><text x="71.0867%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.8367%" y="469" width="0.0812%" height="15" fill="rgb(209,198,51)" fg:x="872" fg:w="1"/><text x="71.0867%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="70.8367%" y="453" width="0.0812%" height="15" fill="rgb(205,171,26)" fg:x="872" fg:w="1"/><text x="71.0867%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.8367%" y="437" width="0.0812%" height="15" fill="rgb(246,41,49)" fg:x="872" fg:w="1"/><text x="71.0867%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.8367%" y="421" width="0.0812%" height="15" fill="rgb(240,229,12)" fg:x="872" fg:w="1"/><text x="71.0867%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="70.8367%" y="405" width="0.0812%" height="15" fill="rgb(212,8,54)" fg:x="872" fg:w="1"/><text x="71.0867%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="70.8367%" y="389" width="0.0812%" height="15" fill="rgb(230,114,13)" fg:x="872" fg:w="1"/><text x="71.0867%" y="399.50"></text></g><g><title>plugins_core::build::Build::leads_to (11 samples, 0.89%)</title><rect x="70.1056%" y="629" width="0.8936%" height="15" fill="rgb(229,130,28)" fg:x="863" fg:w="11"/><text x="70.3556%" y="639.50"></text></g><g><title>plugins_core::tools::leads_to (5 samples, 0.41%)</title><rect x="70.5930%" y="613" width="0.4062%" height="15" fill="rgb(206,139,15)" fg:x="869" fg:w="5"/><text x="70.8430%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="70.9180%" y="597" width="0.0812%" height="15" fill="rgb(241,188,35)" fg:x="873" fg:w="1"/><text x="71.1680%" y="607.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="70.9180%" y="581" width="0.0812%" height="15" fill="rgb(208,224,26)" fg:x="873" fg:w="1"/><text x="71.1680%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="70.9180%" y="565" width="0.0812%" height="15" fill="rgb(251,131,28)" fg:x="873" fg:w="1"/><text x="71.1680%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.9992%" y="565" width="0.0812%" height="15" fill="rgb(208,153,1)" fg:x="874" fg:w="1"/><text x="71.2492%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.9992%" y="549" width="0.0812%" height="15" fill="rgb(234,33,36)" fg:x="874" fg:w="1"/><text x="71.2492%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.0804%" y="533" width="0.0812%" height="15" fill="rgb(246,42,29)" fg:x="875" fg:w="1"/><text x="71.3304%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (17 samples, 1.38%)</title><rect x="69.8619%" y="677" width="1.3810%" height="15" fill="rgb(251,114,16)" fg:x="860" fg:w="17"/><text x="70.1119%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 1.38%)</title><rect x="69.8619%" y="661" width="1.3810%" height="15" fill="rgb(233,13,38)" fg:x="860" fg:w="17"/><text x="70.1119%" y="671.50"></text></g><g><title>plugins_core::build::QuickThing::make (17 samples, 1.38%)</title><rect x="69.8619%" y="645" width="1.3810%" height="15" fill="rgb(247,120,19)" fg:x="860" fg:w="17"/><text x="70.1119%" y="655.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="70.9992%" y="629" width="0.2437%" height="15" fill="rgb(205,11,16)" fg:x="874" fg:w="3"/><text x="71.2492%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="70.9992%" y="613" width="0.2437%" height="15" fill="rgb(228,185,19)" fg:x="874" fg:w="3"/><text x="71.2492%" y="623.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="70.9992%" y="597" width="0.2437%" height="15" fill="rgb(239,88,52)" fg:x="874" fg:w="3"/><text x="71.2492%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="70.9992%" y="581" width="0.2437%" height="15" fill="rgb(219,23,1)" fg:x="874" fg:w="3"/><text x="71.2492%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="71.0804%" y="565" width="0.1625%" height="15" fill="rgb(253,177,16)" fg:x="875" fg:w="2"/><text x="71.3304%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="71.0804%" y="549" width="0.1625%" height="15" fill="rgb(225,150,40)" fg:x="875" fg:w="2"/><text x="71.3304%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="71.1617%" y="533" width="0.0812%" height="15" fill="rgb(208,108,30)" fg:x="876" fg:w="1"/><text x="71.4117%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="71.1617%" y="517" width="0.0812%" height="15" fill="rgb(214,122,4)" fg:x="876" fg:w="1"/><text x="71.4117%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="71.1617%" y="501" width="0.0812%" height="15" fill="rgb(229,74,37)" fg:x="876" fg:w="1"/><text x="71.4117%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="71.2429%" y="645" width="0.0812%" height="15" fill="rgb(233,61,41)" fg:x="877" fg:w="1"/><text x="71.4929%" y="655.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="71.3241%" y="645" width="0.0812%" height="15" fill="rgb(238,191,5)" fg:x="878" fg:w="1"/><text x="71.5741%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="71.3241%" y="629" width="0.0812%" height="15" fill="rgb(233,78,24)" fg:x="878" fg:w="1"/><text x="71.5741%" y="639.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="71.3241%" y="613" width="0.0812%" height="15" fill="rgb(211,142,8)" fg:x="878" fg:w="1"/><text x="71.5741%" y="623.50"></text></g><g><title>engine::identifiers::model::set_gid (1 samples, 0.08%)</title><rect x="71.4054%" y="645" width="0.0812%" height="15" fill="rgb(253,38,53)" fg:x="879" fg:w="1"/><text x="71.6554%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="71.4054%" y="629" width="0.0812%" height="15" fill="rgb(234,63,51)" fg:x="879" fg:w="1"/><text x="71.6554%" y="639.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="71.4054%" y="613" width="0.0812%" height="15" fill="rgb(205,23,31)" fg:x="879" fg:w="1"/><text x="71.6554%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="71.4054%" y="597" width="0.0812%" height="15" fill="rgb(210,184,50)" fg:x="879" fg:w="1"/><text x="71.6554%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="71.4866%" y="613" width="0.1625%" height="15" fill="rgb(222,112,26)" fg:x="880" fg:w="2"/><text x="71.7366%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.5678%" y="597" width="0.0812%" height="15" fill="rgb(250,98,18)" fg:x="881" fg:w="1"/><text x="71.8178%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.5678%" y="581" width="0.0812%" height="15" fill="rgb(250,34,12)" fg:x="881" fg:w="1"/><text x="71.8178%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.5678%" y="565" width="0.0812%" height="15" fill="rgb(236,141,30)" fg:x="881" fg:w="1"/><text x="71.8178%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.5678%" y="549" width="0.0812%" height="15" fill="rgb(246,134,38)" fg:x="881" fg:w="1"/><text x="71.8178%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.5678%" y="533" width="0.0812%" height="15" fill="rgb(240,114,4)" fg:x="881" fg:w="1"/><text x="71.8178%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.5678%" y="517" width="0.0812%" height="15" fill="rgb(243,113,39)" fg:x="881" fg:w="1"/><text x="71.8178%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.5678%" y="501" width="0.0812%" height="15" fill="rgb(239,215,4)" fg:x="881" fg:w="1"/><text x="71.8178%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.5678%" y="485" width="0.0812%" height="15" fill="rgb(236,229,45)" fg:x="881" fg:w="1"/><text x="71.8178%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.5678%" y="469" width="0.0812%" height="15" fill="rgb(242,2,6)" fg:x="881" fg:w="1"/><text x="71.8178%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.5678%" y="453" width="0.0812%" height="15" fill="rgb(239,108,21)" fg:x="881" fg:w="1"/><text x="71.8178%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.5678%" y="437" width="0.0812%" height="15" fill="rgb(215,168,34)" fg:x="881" fg:w="1"/><text x="71.8178%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.41%)</title><rect x="71.6491%" y="581" width="0.4062%" height="15" fill="rgb(238,31,17)" fg:x="882" fg:w="5"/><text x="71.8991%" y="591.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.41%)</title><rect x="71.6491%" y="565" width="0.4062%" height="15" fill="rgb(220,133,11)" fg:x="882" fg:w="5"/><text x="71.8991%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="71.8115%" y="549" width="0.2437%" height="15" fill="rgb(212,158,23)" fg:x="884" fg:w="3"/><text x="72.0615%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="71.8115%" y="533" width="0.2437%" height="15" fill="rgb(223,172,7)" fg:x="884" fg:w="3"/><text x="72.0615%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="71.9740%" y="517" width="0.0812%" height="15" fill="rgb(244,3,52)" fg:x="886" fg:w="1"/><text x="72.2240%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="71.9740%" y="501" width="0.0812%" height="15" fill="rgb(207,69,27)" fg:x="886" fg:w="1"/><text x="72.2240%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="71.9740%" y="485" width="0.0812%" height="15" fill="rgb(213,136,45)" fg:x="886" fg:w="1"/><text x="72.2240%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="72.2177%" y="565" width="0.0812%" height="15" fill="rgb(218,79,17)" fg:x="889" fg:w="1"/><text x="72.4677%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="72.2989%" y="533" width="0.1625%" height="15" fill="rgb(216,106,36)" fg:x="890" fg:w="2"/><text x="72.5489%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="72.2989%" y="517" width="0.1625%" height="15" fill="rgb(251,27,45)" fg:x="890" fg:w="2"/><text x="72.5489%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="72.2989%" y="501" width="0.1625%" height="15" fill="rgb(232,21,34)" fg:x="890" fg:w="2"/><text x="72.5489%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.3802%" y="485" width="0.0812%" height="15" fill="rgb(249,191,16)" fg:x="891" fg:w="1"/><text x="72.6302%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.3802%" y="469" width="0.0812%" height="15" fill="rgb(224,88,20)" fg:x="891" fg:w="1"/><text x="72.6302%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="72.2989%" y="565" width="0.2437%" height="15" fill="rgb(237,93,27)" fg:x="890" fg:w="3"/><text x="72.5489%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="72.2989%" y="549" width="0.2437%" height="15" fill="rgb(226,198,48)" fg:x="890" fg:w="3"/><text x="72.5489%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.4614%" y="533" width="0.0812%" height="15" fill="rgb(207,162,53)" fg:x="892" fg:w="1"/><text x="72.7114%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.4614%" y="517" width="0.0812%" height="15" fill="rgb(207,169,9)" fg:x="892" fg:w="1"/><text x="72.7114%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.4614%" y="501" width="0.0812%" height="15" fill="rgb(224,166,46)" fg:x="892" fg:w="1"/><text x="72.7114%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="72.5426%" y="549" width="0.0812%" height="15" fill="rgb(233,26,6)" fg:x="893" fg:w="1"/><text x="72.7926%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.5426%" y="533" width="0.0812%" height="15" fill="rgb(218,106,45)" fg:x="893" fg:w="1"/><text x="72.7926%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="72.0552%" y="581" width="0.8123%" height="15" fill="rgb(240,217,4)" fg:x="887" fg:w="10"/><text x="72.3052%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="72.5426%" y="565" width="0.3249%" height="15" fill="rgb(246,171,10)" fg:x="893" fg:w="4"/><text x="72.7926%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="72.6239%" y="549" width="0.2437%" height="15" fill="rgb(223,197,30)" fg:x="894" fg:w="3"/><text x="72.8739%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="72.7051%" y="533" width="0.1625%" height="15" fill="rgb(207,92,16)" fg:x="895" fg:w="2"/><text x="72.9551%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="72.7051%" y="517" width="0.1625%" height="15" fill="rgb(211,6,44)" fg:x="895" fg:w="2"/><text x="72.9551%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="72.7051%" y="501" width="0.1625%" height="15" fill="rgb(219,139,2)" fg:x="895" fg:w="2"/><text x="72.9551%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="72.7051%" y="485" width="0.1625%" height="15" fill="rgb(224,103,21)" fg:x="895" fg:w="2"/><text x="72.9551%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.7864%" y="469" width="0.0812%" height="15" fill="rgb(254,110,48)" fg:x="896" fg:w="1"/><text x="73.0364%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (16 samples, 1.30%)</title><rect x="71.6491%" y="613" width="1.2998%" height="15" fill="rgb(212,88,19)" fg:x="882" fg:w="16"/><text x="71.8991%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.30%)</title><rect x="71.6491%" y="597" width="1.2998%" height="15" fill="rgb(248,103,6)" fg:x="882" fg:w="16"/><text x="71.8991%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.8676%" y="581" width="0.0812%" height="15" fill="rgb(214,53,46)" fg:x="897" fg:w="1"/><text x="73.1176%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.8676%" y="565" width="0.0812%" height="15" fill="rgb(236,190,24)" fg:x="897" fg:w="1"/><text x="73.1176%" y="575.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="72.9488%" y="581" width="0.3249%" height="15" fill="rgb(254,58,28)" fg:x="898" fg:w="4"/><text x="73.1988%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.3550%" y="565" width="0.0812%" height="15" fill="rgb(243,63,27)" fg:x="903" fg:w="1"/><text x="73.6050%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.5175%" y="549" width="0.0812%" height="15" fill="rgb(206,81,20)" fg:x="905" fg:w="1"/><text x="73.7675%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.89%)</title><rect x="72.9488%" y="613" width="0.8936%" height="15" fill="rgb(252,69,51)" fg:x="898" fg:w="11"/><text x="73.1988%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.89%)</title><rect x="72.9488%" y="597" width="0.8936%" height="15" fill="rgb(222,213,4)" fg:x="898" fg:w="11"/><text x="73.1988%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="73.2738%" y="581" width="0.5686%" height="15" fill="rgb(226,198,12)" fg:x="902" fg:w="7"/><text x="73.5238%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="73.4362%" y="565" width="0.4062%" height="15" fill="rgb(248,115,11)" fg:x="904" fg:w="5"/><text x="73.6862%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="73.5987%" y="549" width="0.2437%" height="15" fill="rgb(221,148,54)" fg:x="906" fg:w="3"/><text x="73.8487%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="73.6799%" y="533" width="0.1625%" height="15" fill="rgb(214,209,51)" fg:x="907" fg:w="2"/><text x="73.9299%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="73.6799%" y="517" width="0.1625%" height="15" fill="rgb(249,116,53)" fg:x="907" fg:w="2"/><text x="73.9299%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.7612%" y="501" width="0.0812%" height="15" fill="rgb(248,170,1)" fg:x="908" fg:w="1"/><text x="74.0112%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.7612%" y="485" width="0.0812%" height="15" fill="rgb(244,105,10)" fg:x="908" fg:w="1"/><text x="74.0112%" y="495.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="73.8424%" y="597" width="0.0812%" height="15" fill="rgb(229,100,5)" fg:x="909" fg:w="1"/><text x="74.0924%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.9236%" y="565" width="0.0812%" height="15" fill="rgb(233,221,39)" fg:x="910" fg:w="1"/><text x="74.1736%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="74.0049%" y="517" width="0.0812%" height="15" fill="rgb(233,88,21)" fg:x="911" fg:w="1"/><text x="74.2549%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="74.0049%" y="501" width="0.0812%" height="15" fill="rgb(206,13,0)" fg:x="911" fg:w="1"/><text x="74.2549%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="74.0049%" y="485" width="0.0812%" height="15" fill="rgb(242,15,35)" fg:x="911" fg:w="1"/><text x="74.2549%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.0861%" y="485" width="0.0812%" height="15" fill="rgb(247,142,41)" fg:x="912" fg:w="1"/><text x="74.3361%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.3298%" y="421" width="0.0812%" height="15" fill="rgb(245,51,29)" fg:x="915" fg:w="1"/><text x="74.5798%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.3298%" y="405" width="0.0812%" height="15" fill="rgb(228,209,43)" fg:x="915" fg:w="1"/><text x="74.5798%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="74.3298%" y="389" width="0.0812%" height="15" fill="rgb(233,185,9)" fg:x="915" fg:w="1"/><text x="74.5798%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="74.2486%" y="469" width="0.2437%" height="15" fill="rgb(226,93,0)" fg:x="914" fg:w="3"/><text x="74.4986%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="74.2486%" y="453" width="0.2437%" height="15" fill="rgb(245,194,43)" fg:x="914" fg:w="3"/><text x="74.4986%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="74.2486%" y="437" width="0.2437%" height="15" fill="rgb(211,145,34)" fg:x="914" fg:w="3"/><text x="74.4986%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="74.4110%" y="421" width="0.0812%" height="15" fill="rgb(231,228,28)" fg:x="916" fg:w="1"/><text x="74.6610%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="74.4110%" y="405" width="0.0812%" height="15" fill="rgb(236,149,4)" fg:x="916" fg:w="1"/><text x="74.6610%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="74.4110%" y="389" width="0.0812%" height="15" fill="rgb(234,114,38)" fg:x="916" fg:w="1"/><text x="74.6610%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.57%)</title><rect x="74.0049%" y="549" width="0.5686%" height="15" fill="rgb(246,132,51)" fg:x="911" fg:w="7"/><text x="74.2549%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.57%)</title><rect x="74.0049%" y="533" width="0.5686%" height="15" fill="rgb(251,137,22)" fg:x="911" fg:w="7"/><text x="74.2549%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.49%)</title><rect x="74.0861%" y="517" width="0.4874%" height="15" fill="rgb(243,59,52)" fg:x="912" fg:w="6"/><text x="74.3361%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.49%)</title><rect x="74.0861%" y="501" width="0.4874%" height="15" fill="rgb(239,56,28)" fg:x="912" fg:w="6"/><text x="74.3361%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.41%)</title><rect x="74.1673%" y="485" width="0.4062%" height="15" fill="rgb(218,168,27)" fg:x="913" fg:w="5"/><text x="74.4173%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.4923%" y="469" width="0.0812%" height="15" fill="rgb(232,165,11)" fg:x="917" fg:w="1"/><text x="74.7423%" y="479.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (39 samples, 3.17%)</title><rect x="71.4866%" y="645" width="3.1682%" height="15" fill="rgb(253,55,41)" fg:x="880" fg:w="39"/><text x="71.7366%" y="655.50">eng..</text></g><g><title>engine::session::SavesEntities::check_for_changes (39 samples, 3.17%)</title><rect x="71.4866%" y="629" width="3.1682%" height="15" fill="rgb(233,206,24)" fg:x="880" fg:w="39"/><text x="71.7366%" y="639.50">eng..</text></g><g><title>kernel::model::any_entity_changes (10 samples, 0.81%)</title><rect x="73.8424%" y="613" width="0.8123%" height="15" fill="rgb(220,199,8)" fg:x="909" fg:w="10"/><text x="74.0924%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.73%)</title><rect x="73.9236%" y="597" width="0.7311%" height="15" fill="rgb(254,65,26)" fg:x="910" fg:w="9"/><text x="74.1736%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.73%)</title><rect x="73.9236%" y="581" width="0.7311%" height="15" fill="rgb(253,102,23)" fg:x="910" fg:w="9"/><text x="74.1736%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.65%)</title><rect x="74.0049%" y="565" width="0.6499%" height="15" fill="rgb(231,103,35)" fg:x="911" fg:w="8"/><text x="74.2549%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.5735%" y="549" width="0.0812%" height="15" fill="rgb(238,26,10)" fg:x="918" fg:w="1"/><text x="74.8235%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.5735%" y="533" width="0.0812%" height="15" fill="rgb(234,191,34)" fg:x="918" fg:w="1"/><text x="74.8235%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.5735%" y="517" width="0.0812%" height="15" fill="rgb(206,210,9)" fg:x="918" fg:w="1"/><text x="74.8235%" y="527.50"></text></g><g><title>engine::session::Session::flush (43 samples, 3.49%)</title><rect x="71.2429%" y="677" width="3.4931%" height="15" fill="rgb(219,155,3)" fg:x="877" fg:w="43"/><text x="71.4929%" y="687.50">eng..</text></g><g><title>engine::session::Session::save_entity_changes (43 samples, 3.49%)</title><rect x="71.2429%" y="661" width="3.4931%" height="15" fill="rgb(221,62,52)" fg:x="877" fg:w="43"/><text x="71.4929%" y="671.50">eng..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="74.6548%" y="645" width="0.0812%" height="15" fill="rgb(215,197,36)" fg:x="919" fg:w="1"/><text x="74.9048%" y="655.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="74.6548%" y="629" width="0.0812%" height="15" fill="rgb(226,222,6)" fg:x="919" fg:w="1"/><text x="74.9048%" y="639.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="74.6548%" y="613" width="0.0812%" height="15" fill="rgb(215,58,28)" fg:x="919" fg:w="1"/><text x="74.9048%" y="623.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="74.6548%" y="597" width="0.0812%" height="15" fill="rgb(212,148,2)" fg:x="919" fg:w="1"/><text x="74.9048%" y="607.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="74.6548%" y="581" width="0.0812%" height="15" fill="rgb(208,21,42)" fg:x="919" fg:w="1"/><text x="74.9048%" y="591.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="74.6548%" y="565" width="0.0812%" height="15" fill="rgb(209,107,26)" fg:x="919" fg:w="1"/><text x="74.9048%" y="575.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="74.6548%" y="549" width="0.0812%" height="15" fill="rgb(254,60,47)" fg:x="919" fg:w="1"/><text x="74.9048%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="74.7360%" y="677" width="0.0812%" height="15" fill="rgb(207,226,45)" fg:x="920" fg:w="1"/><text x="74.9860%" y="687.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="74.7360%" y="661" width="0.0812%" height="15" fill="rgb(223,124,22)" fg:x="920" fg:w="1"/><text x="74.9860%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="74.7360%" y="645" width="0.0812%" height="15" fill="rgb(240,162,13)" fg:x="920" fg:w="1"/><text x="74.9860%" y="655.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="74.7360%" y="629" width="0.0812%" height="15" fill="rgb(244,199,31)" fg:x="920" fg:w="1"/><text x="74.9860%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="74.7360%" y="613" width="0.0812%" height="15" fill="rgb(207,92,16)" fg:x="920" fg:w="1"/><text x="74.9860%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="74.7360%" y="597" width="0.0812%" height="15" fill="rgb(215,31,19)" fg:x="920" fg:w="1"/><text x="74.9860%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="74.7360%" y="581" width="0.0812%" height="15" fill="rgb(245,118,14)" fg:x="920" fg:w="1"/><text x="74.9860%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="74.8172%" y="645" width="0.0812%" height="15" fill="rgb(248,12,46)" fg:x="921" fg:w="1"/><text x="75.0672%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="74.8172%" y="629" width="0.0812%" height="15" fill="rgb(209,119,0)" fg:x="921" fg:w="1"/><text x="75.0672%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="74.8985%" y="613" width="0.0812%" height="15" fill="rgb(254,51,44)" fg:x="922" fg:w="1"/><text x="75.1485%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="74.8985%" y="597" width="0.0812%" height="15" fill="rgb(253,182,35)" fg:x="922" fg:w="1"/><text x="75.1485%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.8985%" y="581" width="0.0812%" height="15" fill="rgb(205,198,39)" fg:x="922" fg:w="1"/><text x="75.1485%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.8985%" y="565" width="0.0812%" height="15" fill="rgb(251,175,48)" fg:x="922" fg:w="1"/><text x="75.1485%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.8985%" y="549" width="0.0812%" height="15" fill="rgb(239,38,17)" fg:x="922" fg:w="1"/><text x="75.1485%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.8985%" y="533" width="0.0812%" height="15" fill="rgb(212,101,8)" fg:x="922" fg:w="1"/><text x="75.1485%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.8985%" y="517" width="0.0812%" height="15" fill="rgb(228,35,17)" fg:x="922" fg:w="1"/><text x="75.1485%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.8985%" y="501" width="0.0812%" height="15" fill="rgb(214,95,8)" fg:x="922" fg:w="1"/><text x="75.1485%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.8985%" y="485" width="0.0812%" height="15" fill="rgb(210,176,35)" fg:x="922" fg:w="1"/><text x="75.1485%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.8985%" y="469" width="0.0812%" height="15" fill="rgb(226,4,3)" fg:x="922" fg:w="1"/><text x="75.1485%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.8985%" y="453" width="0.0812%" height="15" fill="rgb(232,133,14)" fg:x="922" fg:w="1"/><text x="75.1485%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.8985%" y="437" width="0.0812%" height="15" fill="rgb(250,191,8)" fg:x="922" fg:w="1"/><text x="75.1485%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.9797%" y="565" width="0.0812%" height="15" fill="rgb(213,12,45)" fg:x="923" fg:w="1"/><text x="75.2297%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.9797%" y="549" width="0.0812%" height="15" fill="rgb(233,78,26)" fg:x="923" fg:w="1"/><text x="75.2297%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.9797%" y="533" width="0.0812%" height="15" fill="rgb(245,222,11)" fg:x="923" fg:w="1"/><text x="75.2297%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.9797%" y="517" width="0.0812%" height="15" fill="rgb(216,174,12)" fg:x="923" fg:w="1"/><text x="75.2297%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.9797%" y="501" width="0.0812%" height="15" fill="rgb(213,15,9)" fg:x="923" fg:w="1"/><text x="75.2297%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.9797%" y="485" width="0.0812%" height="15" fill="rgb(238,103,32)" fg:x="923" fg:w="1"/><text x="75.2297%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.9797%" y="469" width="0.0812%" height="15" fill="rgb(245,85,15)" fg:x="923" fg:w="1"/><text x="75.2297%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.9797%" y="453" width="0.0812%" height="15" fill="rgb(254,204,5)" fg:x="923" fg:w="1"/><text x="75.2297%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.9797%" y="437" width="0.0812%" height="15" fill="rgb(231,178,15)" fg:x="923" fg:w="1"/><text x="75.2297%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.9797%" y="421" width="0.0812%" height="15" fill="rgb(248,151,3)" fg:x="923" fg:w="1"/><text x="75.2297%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.9797%" y="405" width="0.0812%" height="15" fill="rgb(250,139,13)" fg:x="923" fg:w="1"/><text x="75.2297%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.9797%" y="389" width="0.0812%" height="15" fill="rgb(243,107,53)" fg:x="923" fg:w="1"/><text x="75.2297%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.9797%" y="373" width="0.0812%" height="15" fill="rgb(232,81,15)" fg:x="923" fg:w="1"/><text x="75.2297%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.9797%" y="357" width="0.0812%" height="15" fill="rgb(225,187,48)" fg:x="923" fg:w="1"/><text x="75.2297%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.9797%" y="341" width="0.0812%" height="15" fill="rgb(205,116,12)" fg:x="923" fg:w="1"/><text x="75.2297%" y="351.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="74.8985%" y="629" width="0.2437%" height="15" fill="rgb(220,222,31)" fg:x="922" fg:w="3"/><text x="75.1485%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="74.9797%" y="613" width="0.1625%" height="15" fill="rgb(233,187,49)" fg:x="923" fg:w="2"/><text x="75.2297%" y="623.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="74.9797%" y="597" width="0.1625%" height="15" fill="rgb(211,168,53)" fg:x="923" fg:w="2"/><text x="75.2297%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="74.9797%" y="581" width="0.1625%" height="15" fill="rgb(206,160,16)" fg:x="923" fg:w="2"/><text x="75.2297%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="75.0609%" y="565" width="0.0812%" height="15" fill="rgb(254,164,13)" fg:x="924" fg:w="1"/><text x="75.3109%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.0609%" y="549" width="0.0812%" height="15" fill="rgb(229,45,30)" fg:x="924" fg:w="1"/><text x="75.3109%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="75.0609%" y="533" width="0.0812%" height="15" fill="rgb(237,32,10)" fg:x="924" fg:w="1"/><text x="75.3109%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.0609%" y="517" width="0.0812%" height="15" fill="rgb(251,20,47)" fg:x="924" fg:w="1"/><text x="75.3109%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="75.0609%" y="501" width="0.0812%" height="15" fill="rgb(251,116,12)" fg:x="924" fg:w="1"/><text x="75.3109%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="75.0609%" y="485" width="0.0812%" height="15" fill="rgb(214,227,27)" fg:x="924" fg:w="1"/><text x="75.3109%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.0609%" y="469" width="0.0812%" height="15" fill="rgb(248,10,53)" fg:x="924" fg:w="1"/><text x="75.3109%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="75.0609%" y="453" width="0.0812%" height="15" fill="rgb(221,176,25)" fg:x="924" fg:w="1"/><text x="75.3109%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.0609%" y="437" width="0.0812%" height="15" fill="rgb(205,70,46)" fg:x="924" fg:w="1"/><text x="75.3109%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.0609%" y="421" width="0.0812%" height="15" fill="rgb(217,45,38)" fg:x="924" fg:w="1"/><text x="75.3109%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.73%)</title><rect x="74.8172%" y="661" width="0.7311%" height="15" fill="rgb(243,6,54)" fg:x="921" fg:w="9"/><text x="75.0672%" y="671.50"></text></g><g><title>engine::internal::Entities::add_entity (8 samples, 0.65%)</title><rect x="74.8985%" y="645" width="0.6499%" height="15" fill="rgb(242,76,23)" fg:x="922" fg:w="8"/><text x="75.1485%" y="655.50"></text></g><g><title>engine::internal::EntityMap::add_entity (5 samples, 0.41%)</title><rect x="75.1422%" y="629" width="0.4062%" height="15" fill="rgb(239,166,0)" fg:x="925" fg:w="5"/><text x="75.3922%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.41%)</title><rect x="75.1422%" y="613" width="0.4062%" height="15" fill="rgb(238,174,32)" fg:x="925" fg:w="5"/><text x="75.3922%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.41%)</title><rect x="75.1422%" y="597" width="0.4062%" height="15" fill="rgb(238,124,44)" fg:x="925" fg:w="5"/><text x="75.3922%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.41%)</title><rect x="75.1422%" y="581" width="0.4062%" height="15" fill="rgb(206,185,9)" fg:x="925" fg:w="5"/><text x="75.3922%" y="591.50"></text></g><g><title>__libc_malloc (5 samples, 0.41%)</title><rect x="75.1422%" y="565" width="0.4062%" height="15" fill="rgb(215,157,17)" fg:x="925" fg:w="5"/><text x="75.3922%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.5483%" y="645" width="0.0812%" height="15" fill="rgb(251,17,29)" fg:x="930" fg:w="1"/><text x="75.7983%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="75.6296%" y="613" width="0.1625%" height="15" fill="rgb(227,113,27)" fg:x="931" fg:w="2"/><text x="75.8796%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="75.6296%" y="597" width="0.1625%" height="15" fill="rgb(217,226,24)" fg:x="931" fg:w="2"/><text x="75.8796%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="75.6296%" y="581" width="0.1625%" height="15" fill="rgb(251,99,38)" fg:x="931" fg:w="2"/><text x="75.8796%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.6296%" y="565" width="0.1625%" height="15" fill="rgb(231,147,19)" fg:x="931" fg:w="2"/><text x="75.8796%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.6296%" y="549" width="0.1625%" height="15" fill="rgb(230,86,8)" fg:x="931" fg:w="2"/><text x="75.8796%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.7108%" y="533" width="0.0812%" height="15" fill="rgb(237,159,39)" fg:x="932" fg:w="1"/><text x="75.9608%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.7108%" y="517" width="0.0812%" height="15" fill="rgb(247,179,47)" fg:x="932" fg:w="1"/><text x="75.9608%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.7108%" y="501" width="0.0812%" height="15" fill="rgb(253,152,26)" fg:x="932" fg:w="1"/><text x="75.9608%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.7920%" y="565" width="0.0812%" height="15" fill="rgb(222,211,15)" fg:x="933" fg:w="1"/><text x="76.0420%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.7920%" y="549" width="0.0812%" height="15" fill="rgb(236,193,6)" fg:x="933" fg:w="1"/><text x="76.0420%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.7920%" y="533" width="0.0812%" height="15" fill="rgb(226,206,10)" fg:x="933" fg:w="1"/><text x="76.0420%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.7920%" y="517" width="0.0812%" height="15" fill="rgb(213,125,22)" fg:x="933" fg:w="1"/><text x="76.0420%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.7920%" y="501" width="0.0812%" height="15" fill="rgb(221,66,28)" fg:x="933" fg:w="1"/><text x="76.0420%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.7920%" y="485" width="0.0812%" height="15" fill="rgb(222,84,53)" fg:x="933" fg:w="1"/><text x="76.0420%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.7920%" y="469" width="0.0812%" height="15" fill="rgb(243,50,15)" fg:x="933" fg:w="1"/><text x="76.0420%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.7920%" y="453" width="0.0812%" height="15" fill="rgb(208,184,23)" fg:x="933" fg:w="1"/><text x="76.0420%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.7920%" y="437" width="0.0812%" height="15" fill="rgb(221,83,2)" fg:x="933" fg:w="1"/><text x="76.0420%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.7920%" y="421" width="0.0812%" height="15" fill="rgb(236,53,24)" fg:x="933" fg:w="1"/><text x="76.0420%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.7920%" y="405" width="0.0812%" height="15" fill="rgb(244,171,29)" fg:x="933" fg:w="1"/><text x="76.0420%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="75.7920%" y="389" width="0.0812%" height="15" fill="rgb(205,19,11)" fg:x="933" fg:w="1"/><text x="76.0420%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="75.7920%" y="373" width="0.0812%" height="15" fill="rgb(207,108,29)" fg:x="933" fg:w="1"/><text x="76.0420%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="75.7920%" y="357" width="0.0812%" height="15" fill="rgb(236,215,43)" fg:x="933" fg:w="1"/><text x="76.0420%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="75.7920%" y="341" width="0.0812%" height="15" fill="rgb(213,58,35)" fg:x="933" fg:w="1"/><text x="76.0420%" y="351.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="75.7920%" y="325" width="0.0812%" height="15" fill="rgb(220,211,46)" fg:x="933" fg:w="1"/><text x="76.0420%" y="335.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="75.7920%" y="309" width="0.0812%" height="15" fill="rgb(212,134,16)" fg:x="933" fg:w="1"/><text x="76.0420%" y="319.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.41%)</title><rect x="75.6296%" y="645" width="0.4062%" height="15" fill="rgb(232,90,44)" fg:x="931" fg:w="5"/><text x="75.8796%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.41%)</title><rect x="75.6296%" y="629" width="0.4062%" height="15" fill="rgb(212,18,36)" fg:x="931" fg:w="5"/><text x="75.8796%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="75.7920%" y="613" width="0.2437%" height="15" fill="rgb(206,112,24)" fg:x="933" fg:w="3"/><text x="76.0420%" y="623.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="75.7920%" y="597" width="0.2437%" height="15" fill="rgb(238,223,40)" fg:x="933" fg:w="3"/><text x="76.0420%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="75.7920%" y="581" width="0.2437%" height="15" fill="rgb(226,169,20)" fg:x="933" fg:w="3"/><text x="76.0420%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.8733%" y="565" width="0.1625%" height="15" fill="rgb(241,64,52)" fg:x="934" fg:w="2"/><text x="76.1233%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.8733%" y="549" width="0.1625%" height="15" fill="rgb(228,120,25)" fg:x="934" fg:w="2"/><text x="76.1233%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.8733%" y="533" width="0.1625%" height="15" fill="rgb(234,108,19)" fg:x="934" fg:w="2"/><text x="76.1233%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.8733%" y="517" width="0.1625%" height="15" fill="rgb(236,133,29)" fg:x="934" fg:w="2"/><text x="76.1233%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="75.8733%" y="501" width="0.1625%" height="15" fill="rgb(246,174,53)" fg:x="934" fg:w="2"/><text x="76.1233%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.8733%" y="485" width="0.1625%" height="15" fill="rgb(210,105,35)" fg:x="934" fg:w="2"/><text x="76.1233%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.8733%" y="469" width="0.1625%" height="15" fill="rgb(225,27,26)" fg:x="934" fg:w="2"/><text x="76.1233%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.8733%" y="453" width="0.1625%" height="15" fill="rgb(233,2,39)" fg:x="934" fg:w="2"/><text x="76.1233%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.8733%" y="437" width="0.1625%" height="15" fill="rgb(219,164,26)" fg:x="934" fg:w="2"/><text x="76.1233%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.8733%" y="421" width="0.1625%" height="15" fill="rgb(236,211,5)" fg:x="934" fg:w="2"/><text x="76.1233%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="75.8733%" y="405" width="0.1625%" height="15" fill="rgb(244,227,23)" fg:x="934" fg:w="2"/><text x="76.1233%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="75.9545%" y="389" width="0.0812%" height="15" fill="rgb(230,184,8)" fg:x="935" fg:w="1"/><text x="76.2045%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="76.0357%" y="645" width="0.0812%" height="15" fill="rgb(217,125,48)" fg:x="936" fg:w="1"/><text x="76.2857%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.0357%" y="629" width="0.0812%" height="15" fill="rgb(223,192,47)" fg:x="936" fg:w="1"/><text x="76.2857%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="76.1170%" y="645" width="0.0812%" height="15" fill="rgb(226,119,10)" fg:x="937" fg:w="1"/><text x="76.3670%" y="655.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="76.1170%" y="629" width="0.0812%" height="15" fill="rgb(221,49,29)" fg:x="937" fg:w="1"/><text x="76.3670%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.1170%" y="613" width="0.0812%" height="15" fill="rgb(217,205,19)" fg:x="937" fg:w="1"/><text x="76.3670%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="76.1170%" y="597" width="0.0812%" height="15" fill="rgb(242,104,7)" fg:x="937" fg:w="1"/><text x="76.3670%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.1170%" y="581" width="0.0812%" height="15" fill="rgb(209,154,48)" fg:x="937" fg:w="1"/><text x="76.3670%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.1170%" y="565" width="0.0812%" height="15" fill="rgb(219,213,46)" fg:x="937" fg:w="1"/><text x="76.3670%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="76.1982%" y="597" width="0.1625%" height="15" fill="rgb(229,105,38)" fg:x="938" fg:w="2"/><text x="76.4482%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="76.1982%" y="581" width="0.1625%" height="15" fill="rgb(205,151,5)" fg:x="938" fg:w="2"/><text x="76.4482%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="76.1982%" y="565" width="0.1625%" height="15" fill="rgb(248,115,40)" fg:x="938" fg:w="2"/><text x="76.4482%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.1982%" y="549" width="0.1625%" height="15" fill="rgb(206,179,2)" fg:x="938" fg:w="2"/><text x="76.4482%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.1982%" y="533" width="0.1625%" height="15" fill="rgb(230,103,24)" fg:x="938" fg:w="2"/><text x="76.4482%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.1982%" y="517" width="0.1625%" height="15" fill="rgb(218,152,4)" fg:x="938" fg:w="2"/><text x="76.4482%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.1982%" y="501" width="0.1625%" height="15" fill="rgb(236,161,54)" fg:x="938" fg:w="2"/><text x="76.4482%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.1982%" y="485" width="0.1625%" height="15" fill="rgb(226,65,17)" fg:x="938" fg:w="2"/><text x="76.4482%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="76.3607%" y="549" width="0.0812%" height="15" fill="rgb(221,134,44)" fg:x="940" fg:w="1"/><text x="76.6107%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="76.3607%" y="533" width="0.0812%" height="15" fill="rgb(251,129,4)" fg:x="940" fg:w="1"/><text x="76.6107%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.3607%" y="517" width="0.0812%" height="15" fill="rgb(244,32,34)" fg:x="940" fg:w="1"/><text x="76.6107%" y="527.50"></text></g><g><title>plugins_core::build::Build::holding (21 samples, 1.71%)</title><rect x="74.8172%" y="677" width="1.7059%" height="15" fill="rgb(251,224,37)" fg:x="921" fg:w="21"/><text x="75.0672%" y="687.50"></text></g><g><title>plugins_core::tools::set_container (12 samples, 0.97%)</title><rect x="75.5483%" y="661" width="0.9748%" height="15" fill="rgb(248,117,31)" fg:x="930" fg:w="12"/><text x="75.7983%" y="671.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="76.1982%" y="645" width="0.3249%" height="15" fill="rgb(222,208,37)" fg:x="938" fg:w="4"/><text x="76.4482%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="76.1982%" y="629" width="0.3249%" height="15" fill="rgb(234,211,25)" fg:x="938" fg:w="4"/><text x="76.4482%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="76.1982%" y="613" width="0.3249%" height="15" fill="rgb(211,72,6)" fg:x="938" fg:w="4"/><text x="76.4482%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="76.3607%" y="597" width="0.1625%" height="15" fill="rgb(249,198,38)" fg:x="940" fg:w="2"/><text x="76.6107%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="76.3607%" y="581" width="0.1625%" height="15" fill="rgb(221,86,51)" fg:x="940" fg:w="2"/><text x="76.6107%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="76.3607%" y="565" width="0.1625%" height="15" fill="rgb(226,178,43)" fg:x="940" fg:w="2"/><text x="76.6107%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.4419%" y="549" width="0.0812%" height="15" fill="rgb(215,145,7)" fg:x="941" fg:w="1"/><text x="76.6919%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.4419%" y="533" width="0.0812%" height="15" fill="rgb(250,202,36)" fg:x="941" fg:w="1"/><text x="76.6919%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.4419%" y="517" width="0.0812%" height="15" fill="rgb(215,86,13)" fg:x="941" fg:w="1"/><text x="76.6919%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.4419%" y="501" width="0.0812%" height="15" fill="rgb(221,134,12)" fg:x="941" fg:w="1"/><text x="76.6919%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.4419%" y="485" width="0.0812%" height="15" fill="rgb(213,82,10)" fg:x="941" fg:w="1"/><text x="76.6919%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.4419%" y="469" width="0.0812%" height="15" fill="rgb(214,142,0)" fg:x="941" fg:w="1"/><text x="76.6919%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.4419%" y="453" width="0.0812%" height="15" fill="rgb(205,145,9)" fg:x="941" fg:w="1"/><text x="76.6919%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.4419%" y="437" width="0.0812%" height="15" fill="rgb(244,214,8)" fg:x="941" fg:w="1"/><text x="76.6919%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.4419%" y="421" width="0.0812%" height="15" fill="rgb(224,72,51)" fg:x="941" fg:w="1"/><text x="76.6919%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.4419%" y="405" width="0.0812%" height="15" fill="rgb(233,137,37)" fg:x="941" fg:w="1"/><text x="76.6919%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="76.4419%" y="389" width="0.0812%" height="15" fill="rgb(208,71,28)" fg:x="941" fg:w="1"/><text x="76.6919%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="76.4419%" y="373" width="0.0812%" height="15" fill="rgb(226,31,7)" fg:x="941" fg:w="1"/><text x="76.6919%" y="383.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="76.5232%" y="677" width="0.0812%" height="15" fill="rgb(229,62,18)" fg:x="942" fg:w="1"/><text x="76.7732%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="76.5232%" y="661" width="0.0812%" height="15" fill="rgb(226,74,28)" fg:x="942" fg:w="1"/><text x="76.7732%" y="671.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="76.5232%" y="645" width="0.0812%" height="15" fill="rgb(214,170,18)" fg:x="942" fg:w="1"/><text x="76.7732%" y="655.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="76.5232%" y="629" width="0.0812%" height="15" fill="rgb(227,229,35)" fg:x="942" fg:w="1"/><text x="76.7732%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="76.5232%" y="613" width="0.0812%" height="15" fill="rgb(225,181,39)" fg:x="942" fg:w="1"/><text x="76.7732%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="76.5232%" y="597" width="0.0812%" height="15" fill="rgb(253,124,44)" fg:x="942" fg:w="1"/><text x="76.7732%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.5232%" y="581" width="0.0812%" height="15" fill="rgb(220,75,18)" fg:x="942" fg:w="1"/><text x="76.7732%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.5232%" y="565" width="0.0812%" height="15" fill="rgb(239,175,43)" fg:x="942" fg:w="1"/><text x="76.7732%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.5232%" y="549" width="0.0812%" height="15" fill="rgb(228,112,50)" fg:x="942" fg:w="1"/><text x="76.7732%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.5232%" y="533" width="0.0812%" height="15" fill="rgb(232,105,36)" fg:x="942" fg:w="1"/><text x="76.7732%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.5232%" y="517" width="0.0812%" height="15" fill="rgb(227,137,47)" fg:x="942" fg:w="1"/><text x="76.7732%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.5232%" y="501" width="0.0812%" height="15" fill="rgb(217,51,9)" fg:x="942" fg:w="1"/><text x="76.7732%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.5232%" y="485" width="0.0812%" height="15" fill="rgb(245,117,0)" fg:x="942" fg:w="1"/><text x="76.7732%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.5232%" y="469" width="0.0812%" height="15" fill="rgb(252,52,30)" fg:x="942" fg:w="1"/><text x="76.7732%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.5232%" y="453" width="0.0812%" height="15" fill="rgb(227,85,33)" fg:x="942" fg:w="1"/><text x="76.7732%" y="463.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="76.6044%" y="677" width="0.0812%" height="15" fill="rgb(220,157,20)" fg:x="943" fg:w="1"/><text x="76.8544%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="76.6044%" y="661" width="0.0812%" height="15" fill="rgb(254,14,34)" fg:x="943" fg:w="1"/><text x="76.8544%" y="671.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="76.6044%" y="645" width="0.0812%" height="15" fill="rgb(216,103,41)" fg:x="943" fg:w="1"/><text x="76.8544%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.6044%" y="629" width="0.0812%" height="15" fill="rgb(245,221,9)" fg:x="943" fg:w="1"/><text x="76.8544%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="76.6856%" y="645" width="0.0812%" height="15" fill="rgb(254,136,47)" fg:x="944" fg:w="1"/><text x="76.9356%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="76.6856%" y="629" width="0.0812%" height="15" fill="rgb(235,71,46)" fg:x="944" fg:w="1"/><text x="76.9356%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="76.7669%" y="597" width="0.0812%" height="15" fill="rgb(242,154,29)" fg:x="945" fg:w="1"/><text x="77.0169%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.7669%" y="581" width="0.0812%" height="15" fill="rgb(210,65,31)" fg:x="945" fg:w="1"/><text x="77.0169%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.7669%" y="565" width="0.0812%" height="15" fill="rgb(244,9,50)" fg:x="945" fg:w="1"/><text x="77.0169%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.7669%" y="549" width="0.0812%" height="15" fill="rgb(215,141,38)" fg:x="945" fg:w="1"/><text x="77.0169%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.7669%" y="533" width="0.0812%" height="15" fill="rgb(241,129,6)" fg:x="945" fg:w="1"/><text x="77.0169%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.7669%" y="517" width="0.0812%" height="15" fill="rgb(253,169,4)" fg:x="945" fg:w="1"/><text x="77.0169%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.7669%" y="501" width="0.0812%" height="15" fill="rgb(237,82,36)" fg:x="945" fg:w="1"/><text x="77.0169%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.7669%" y="485" width="0.0812%" height="15" fill="rgb(209,171,11)" fg:x="945" fg:w="1"/><text x="77.0169%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.7669%" y="469" width="0.0812%" height="15" fill="rgb(242,19,22)" fg:x="945" fg:w="1"/><text x="77.0169%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.7669%" y="453" width="0.0812%" height="15" fill="rgb(251,122,24)" fg:x="945" fg:w="1"/><text x="77.0169%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.7669%" y="437" width="0.0812%" height="15" fill="rgb(226,166,42)" fg:x="945" fg:w="1"/><text x="77.0169%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="76.8481%" y="565" width="0.0812%" height="15" fill="rgb(244,101,48)" fg:x="946" fg:w="1"/><text x="77.0981%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="76.6856%" y="661" width="0.3249%" height="15" fill="rgb(227,125,1)" fg:x="944" fg:w="4"/><text x="76.9356%" y="671.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="76.7669%" y="645" width="0.2437%" height="15" fill="rgb(206,79,43)" fg:x="945" fg:w="3"/><text x="77.0169%" y="655.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="76.7669%" y="629" width="0.2437%" height="15" fill="rgb(241,109,41)" fg:x="945" fg:w="3"/><text x="77.0169%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="76.7669%" y="613" width="0.2437%" height="15" fill="rgb(219,73,4)" fg:x="945" fg:w="3"/><text x="77.0169%" y="623.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="76.8481%" y="597" width="0.1625%" height="15" fill="rgb(239,25,41)" fg:x="946" fg:w="2"/><text x="77.0981%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="76.8481%" y="581" width="0.1625%" height="15" fill="rgb(208,88,46)" fg:x="946" fg:w="2"/><text x="77.0981%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="76.9293%" y="565" width="0.0812%" height="15" fill="rgb(239,184,9)" fg:x="947" fg:w="1"/><text x="77.1793%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.9293%" y="549" width="0.0812%" height="15" fill="rgb(223,114,13)" fg:x="947" fg:w="1"/><text x="77.1793%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="76.9293%" y="533" width="0.0812%" height="15" fill="rgb(214,28,42)" fg:x="947" fg:w="1"/><text x="77.1793%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.9293%" y="517" width="0.0812%" height="15" fill="rgb(252,32,44)" fg:x="947" fg:w="1"/><text x="77.1793%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.9293%" y="501" width="0.0812%" height="15" fill="rgb(231,159,4)" fg:x="947" fg:w="1"/><text x="77.1793%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.9293%" y="485" width="0.0812%" height="15" fill="rgb(210,35,26)" fg:x="947" fg:w="1"/><text x="77.1793%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.9293%" y="469" width="0.0812%" height="15" fill="rgb(208,190,37)" fg:x="947" fg:w="1"/><text x="77.1793%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Occupying&gt;&gt; (1 samples, 0.08%)</title><rect x="77.0106%" y="645" width="0.0812%" height="15" fill="rgb(226,148,22)" fg:x="948" fg:w="1"/><text x="77.2606%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="77.0106%" y="629" width="0.0812%" height="15" fill="rgb(242,153,24)" fg:x="948" fg:w="1"/><text x="77.2606%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.0106%" y="613" width="0.0812%" height="15" fill="rgb(213,133,7)" fg:x="948" fg:w="1"/><text x="77.2606%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="77.0918%" y="645" width="0.0812%" height="15" fill="rgb(248,206,18)" fg:x="949" fg:w="1"/><text x="77.3418%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="77.0918%" y="629" width="0.0812%" height="15" fill="rgb(233,157,4)" fg:x="949" fg:w="1"/><text x="77.3418%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.0918%" y="613" width="0.0812%" height="15" fill="rgb(249,179,32)" fg:x="949" fg:w="1"/><text x="77.3418%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="77.0918%" y="597" width="0.0812%" height="15" fill="rgb(248,69,35)" fg:x="949" fg:w="1"/><text x="77.3418%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.0918%" y="581" width="0.0812%" height="15" fill="rgb(249,158,38)" fg:x="949" fg:w="1"/><text x="77.3418%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.0918%" y="565" width="0.0812%" height="15" fill="rgb(223,18,43)" fg:x="949" fg:w="1"/><text x="77.3418%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.0918%" y="549" width="0.0812%" height="15" fill="rgb(238,42,45)" fg:x="949" fg:w="1"/><text x="77.3418%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.0918%" y="533" width="0.0812%" height="15" fill="rgb(219,65,47)" fg:x="949" fg:w="1"/><text x="77.3418%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.0918%" y="517" width="0.0812%" height="15" fill="rgb(248,153,12)" fg:x="949" fg:w="1"/><text x="77.3418%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.0918%" y="501" width="0.0812%" height="15" fill="rgb(240,118,4)" fg:x="949" fg:w="1"/><text x="77.3418%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.0918%" y="485" width="0.0812%" height="15" fill="rgb(250,96,34)" fg:x="949" fg:w="1"/><text x="77.3418%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.0918%" y="469" width="0.0812%" height="15" fill="rgb(221,15,4)" fg:x="949" fg:w="1"/><text x="77.3418%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.0918%" y="453" width="0.0812%" height="15" fill="rgb(217,149,33)" fg:x="949" fg:w="1"/><text x="77.3418%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.0918%" y="437" width="0.0812%" height="15" fill="rgb(213,58,29)" fg:x="949" fg:w="1"/><text x="77.3418%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.0918%" y="421" width="0.0812%" height="15" fill="rgb(236,218,9)" fg:x="949" fg:w="1"/><text x="77.3418%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.0918%" y="405" width="0.0812%" height="15" fill="rgb(248,40,19)" fg:x="949" fg:w="1"/><text x="77.3418%" y="415.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="77.1730%" y="645" width="0.0812%" height="15" fill="rgb(212,17,6)" fg:x="950" fg:w="1"/><text x="77.4230%" y="655.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="77.1730%" y="629" width="0.0812%" height="15" fill="rgb(206,212,20)" fg:x="950" fg:w="1"/><text x="77.4230%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.1730%" y="613" width="0.0812%" height="15" fill="rgb(229,80,37)" fg:x="950" fg:w="1"/><text x="77.4230%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.2543%" y="501" width="0.0812%" height="15" fill="rgb(253,8,37)" fg:x="951" fg:w="1"/><text x="77.5043%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.2543%" y="485" width="0.0812%" height="15" fill="rgb(215,16,43)" fg:x="951" fg:w="1"/><text x="77.5043%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.2543%" y="469" width="0.0812%" height="15" fill="rgb(236,219,16)" fg:x="951" fg:w="1"/><text x="77.5043%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.2543%" y="453" width="0.0812%" height="15" fill="rgb(251,0,3)" fg:x="951" fg:w="1"/><text x="77.5043%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.2543%" y="437" width="0.0812%" height="15" fill="rgb(207,133,37)" fg:x="951" fg:w="1"/><text x="77.5043%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.2543%" y="421" width="0.0812%" height="15" fill="rgb(250,143,20)" fg:x="951" fg:w="1"/><text x="77.5043%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.2543%" y="405" width="0.0812%" height="15" fill="rgb(242,19,50)" fg:x="951" fg:w="1"/><text x="77.5043%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.2543%" y="389" width="0.0812%" height="15" fill="rgb(206,124,43)" fg:x="951" fg:w="1"/><text x="77.5043%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.2543%" y="373" width="0.0812%" height="15" fill="rgb(229,4,38)" fg:x="951" fg:w="1"/><text x="77.5043%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.2543%" y="357" width="0.0812%" height="15" fill="rgb(247,220,45)" fg:x="951" fg:w="1"/><text x="77.5043%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.2543%" y="341" width="0.0812%" height="15" fill="rgb(247,195,0)" fg:x="951" fg:w="1"/><text x="77.5043%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.2543%" y="325" width="0.0812%" height="15" fill="rgb(252,12,19)" fg:x="951" fg:w="1"/><text x="77.5043%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.2543%" y="309" width="0.0812%" height="15" fill="rgb(222,49,50)" fg:x="951" fg:w="1"/><text x="77.5043%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.2543%" y="293" width="0.0812%" height="15" fill="rgb(209,157,28)" fg:x="951" fg:w="1"/><text x="77.5043%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="77.2543%" y="549" width="0.1625%" height="15" fill="rgb(238,174,24)" fg:x="951" fg:w="2"/><text x="77.5043%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="77.2543%" y="533" width="0.1625%" height="15" fill="rgb(224,17,28)" fg:x="951" fg:w="2"/><text x="77.5043%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="77.2543%" y="517" width="0.1625%" height="15" fill="rgb(249,7,29)" fg:x="951" fg:w="2"/><text x="77.5043%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.3355%" y="501" width="0.0812%" height="15" fill="rgb(243,178,4)" fg:x="952" fg:w="1"/><text x="77.5855%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.3355%" y="485" width="0.0812%" height="15" fill="rgb(246,138,35)" fg:x="952" fg:w="1"/><text x="77.5855%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.3355%" y="469" width="0.0812%" height="15" fill="rgb(251,85,18)" fg:x="952" fg:w="1"/><text x="77.5855%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.3355%" y="453" width="0.0812%" height="15" fill="rgb(254,55,9)" fg:x="952" fg:w="1"/><text x="77.5855%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.3355%" y="437" width="0.0812%" height="15" fill="rgb(248,4,50)" fg:x="952" fg:w="1"/><text x="77.5855%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.3355%" y="421" width="0.0812%" height="15" fill="rgb(215,208,14)" fg:x="952" fg:w="1"/><text x="77.5855%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.3355%" y="405" width="0.0812%" height="15" fill="rgb(218,37,18)" fg:x="952" fg:w="1"/><text x="77.5855%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.3355%" y="389" width="0.0812%" height="15" fill="rgb(206,104,13)" fg:x="952" fg:w="1"/><text x="77.5855%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.3355%" y="373" width="0.0812%" height="15" fill="rgb(248,94,22)" fg:x="952" fg:w="1"/><text x="77.5855%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.3355%" y="357" width="0.0812%" height="15" fill="rgb(235,42,46)" fg:x="952" fg:w="1"/><text x="77.5855%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.3355%" y="341" width="0.0812%" height="15" fill="rgb(220,228,48)" fg:x="952" fg:w="1"/><text x="77.5855%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.3355%" y="325" width="0.0812%" height="15" fill="rgb(216,58,12)" fg:x="952" fg:w="1"/><text x="77.5855%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="77.2543%" y="597" width="0.2437%" height="15" fill="rgb(223,97,52)" fg:x="951" fg:w="3"/><text x="77.5043%" y="607.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="77.2543%" y="581" width="0.2437%" height="15" fill="rgb(208,159,17)" fg:x="951" fg:w="3"/><text x="77.5043%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="77.2543%" y="565" width="0.2437%" height="15" fill="rgb(215,172,9)" fg:x="951" fg:w="3"/><text x="77.5043%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.4167%" y="549" width="0.0812%" height="15" fill="rgb(252,175,30)" fg:x="953" fg:w="1"/><text x="77.6667%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.4167%" y="533" width="0.0812%" height="15" fill="rgb(209,159,10)" fg:x="953" fg:w="1"/><text x="77.6667%" y="543.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (99 samples, 8.04%)</title><rect x="69.5370%" y="693" width="8.0422%" height="15" fill="rgb(229,73,51)" fg:x="856" fg:w="99"/><text x="69.7870%" y="703.50">plugins_cor..</text></g><g><title>plugins_core::build::Build::occupying (11 samples, 0.89%)</title><rect x="76.6856%" y="677" width="0.8936%" height="15" fill="rgb(208,212,43)" fg:x="944" fg:w="11"/><text x="76.9356%" y="687.50"></text></g><g><title>plugins_core::tools::set_occupying (7 samples, 0.57%)</title><rect x="77.0106%" y="661" width="0.5686%" height="15" fill="rgb(254,123,53)" fg:x="948" fg:w="7"/><text x="77.2606%" y="671.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (4 samples, 0.32%)</title><rect x="77.2543%" y="645" width="0.3249%" height="15" fill="rgb(254,128,49)" fg:x="951" fg:w="4"/><text x="77.5043%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="77.2543%" y="629" width="0.3249%" height="15" fill="rgb(246,16,16)" fg:x="951" fg:w="4"/><text x="77.5043%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="77.2543%" y="613" width="0.3249%" height="15" fill="rgb(209,200,1)" fg:x="951" fg:w="4"/><text x="77.5043%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="77.4980%" y="597" width="0.0812%" height="15" fill="rgb(235,9,3)" fg:x="954" fg:w="1"/><text x="77.7480%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="77.4980%" y="581" width="0.0812%" height="15" fill="rgb(233,121,54)" fg:x="954" fg:w="1"/><text x="77.7480%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.4980%" y="565" width="0.0812%" height="15" fill="rgb(236,80,25)" fg:x="954" fg:w="1"/><text x="77.7480%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.4980%" y="549" width="0.0812%" height="15" fill="rgb(220,44,24)" fg:x="954" fg:w="1"/><text x="77.7480%" y="559.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="77.5792%" y="693" width="0.0812%" height="15" fill="rgb(236,225,16)" fg:x="955" fg:w="1"/><text x="77.8292%" y="703.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="77.5792%" y="677" width="0.0812%" height="15" fill="rgb(237,140,0)" fg:x="955" fg:w="1"/><text x="77.8292%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="77.5792%" y="661" width="0.0812%" height="15" fill="rgb(243,225,53)" fg:x="955" fg:w="1"/><text x="77.8292%" y="671.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (147 samples, 11.94%)</title><rect x="65.8002%" y="709" width="11.9415%" height="15" fill="rgb(240,140,30)" fg:x="810" fg:w="147"/><text x="66.0502%" y="719.50">&lt;tests::HoldingKey..</text></g><g><title>plugins_core::build::BuildSurroundings::make (1 samples, 0.08%)</title><rect x="77.6604%" y="693" width="0.0812%" height="15" fill="rgb(217,51,16)" fg:x="956" fg:w="1"/><text x="77.9104%" y="703.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="77.6604%" y="677" width="0.0812%" height="15" fill="rgb(245,75,50)" fg:x="956" fg:w="1"/><text x="77.9104%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="77.6604%" y="661" width="0.0812%" height="15" fill="rgb(208,174,22)" fg:x="956" fg:w="1"/><text x="77.9104%" y="671.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="77.6604%" y="645" width="0.0812%" height="15" fill="rgb(219,98,50)" fg:x="956" fg:w="1"/><text x="77.9104%" y="655.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="77.6604%" y="629" width="0.0812%" height="15" fill="rgb(243,138,3)" fg:x="956" fg:w="1"/><text x="77.9104%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.6604%" y="613" width="0.0812%" height="15" fill="rgb(243,132,26)" fg:x="956" fg:w="1"/><text x="77.9104%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="77.6604%" y="597" width="0.0812%" height="15" fill="rgb(250,201,8)" fg:x="956" fg:w="1"/><text x="77.9104%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.6604%" y="581" width="0.0812%" height="15" fill="rgb(213,91,26)" fg:x="956" fg:w="1"/><text x="77.9104%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.6604%" y="565" width="0.0812%" height="15" fill="rgb(229,117,1)" fg:x="956" fg:w="1"/><text x="77.9104%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.6604%" y="549" width="0.0812%" height="15" fill="rgb(229,24,6)" fg:x="956" fg:w="1"/><text x="77.9104%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.6604%" y="533" width="0.0812%" height="15" fill="rgb(206,69,11)" fg:x="956" fg:w="1"/><text x="77.9104%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.6604%" y="517" width="0.0812%" height="15" fill="rgb(234,111,34)" fg:x="956" fg:w="1"/><text x="77.9104%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.6604%" y="501" width="0.0812%" height="15" fill="rgb(213,187,51)" fg:x="956" fg:w="1"/><text x="77.9104%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.6604%" y="485" width="0.0812%" height="15" fill="rgb(207,45,11)" fg:x="956" fg:w="1"/><text x="77.9104%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="77.7417%" y="709" width="0.0812%" height="15" fill="rgb(225,151,47)" fg:x="957" fg:w="1"/><text x="77.9917%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="77.7417%" y="693" width="0.0812%" height="15" fill="rgb(211,226,5)" fg:x="957" fg:w="1"/><text x="77.9917%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="77.8229%" y="677" width="0.0812%" height="15" fill="rgb(214,83,52)" fg:x="958" fg:w="1"/><text x="78.0729%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.8229%" y="661" width="0.0812%" height="15" fill="rgb(229,49,53)" fg:x="958" fg:w="1"/><text x="78.0729%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.8229%" y="645" width="0.0812%" height="15" fill="rgb(246,8,28)" fg:x="958" fg:w="1"/><text x="78.0729%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.8229%" y="629" width="0.0812%" height="15" fill="rgb(207,28,41)" fg:x="958" fg:w="1"/><text x="78.0729%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="77.9041%" y="677" width="0.0812%" height="15" fill="rgb(254,22,25)" fg:x="959" fg:w="1"/><text x="78.1541%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="77.9041%" y="661" width="0.0812%" height="15" fill="rgb(209,120,42)" fg:x="959" fg:w="1"/><text x="78.1541%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="77.9041%" y="645" width="0.0812%" height="15" fill="rgb(216,194,18)" fg:x="959" fg:w="1"/><text x="78.1541%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="77.9041%" y="629" width="0.0812%" height="15" fill="rgb(213,70,17)" fg:x="959" fg:w="1"/><text x="78.1541%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.9041%" y="613" width="0.0812%" height="15" fill="rgb(228,66,19)" fg:x="959" fg:w="1"/><text x="78.1541%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.9041%" y="597" width="0.0812%" height="15" fill="rgb(236,221,54)" fg:x="959" fg:w="1"/><text x="78.1541%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="77.9854%" y="677" width="0.0812%" height="15" fill="rgb(207,175,15)" fg:x="960" fg:w="1"/><text x="78.2354%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="77.9854%" y="661" width="0.0812%" height="15" fill="rgb(234,76,8)" fg:x="960" fg:w="1"/><text x="78.2354%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.9854%" y="645" width="0.0812%" height="15" fill="rgb(243,106,0)" fg:x="960" fg:w="1"/><text x="78.2354%" y="655.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.0666%" y="629" width="0.0812%" height="15" fill="rgb(208,48,19)" fg:x="961" fg:w="1"/><text x="78.3166%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0666%" y="613" width="0.0812%" height="15" fill="rgb(251,50,29)" fg:x="961" fg:w="1"/><text x="78.3166%" y="623.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="78.0666%" y="677" width="0.1625%" height="15" fill="rgb(222,31,49)" fg:x="961" fg:w="2"/><text x="78.3166%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="78.0666%" y="661" width="0.1625%" height="15" fill="rgb(232,33,18)" fg:x="961" fg:w="2"/><text x="78.3166%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="78.0666%" y="645" width="0.1625%" height="15" fill="rgb(209,1,44)" fg:x="961" fg:w="2"/><text x="78.3166%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.1478%" y="629" width="0.0812%" height="15" fill="rgb(211,7,1)" fg:x="962" fg:w="1"/><text x="78.3978%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.1478%" y="613" width="0.0812%" height="15" fill="rgb(224,111,27)" fg:x="962" fg:w="1"/><text x="78.3978%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::de::Deserialize for kernel::model::base::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="78.1478%" y="597" width="0.0812%" height="15" fill="rgb(252,195,39)" fg:x="962" fg:w="1"/><text x="78.3978%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.1478%" y="581" width="0.0812%" height="15" fill="rgb(237,198,5)" fg:x="962" fg:w="1"/><text x="78.3978%" y="591.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="78.1478%" y="565" width="0.0812%" height="15" fill="rgb(232,148,1)" fg:x="962" fg:w="1"/><text x="78.3978%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="78.2291%" y="629" width="0.0812%" height="15" fill="rgb(249,41,3)" fg:x="963" fg:w="1"/><text x="78.4791%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.3916%" y="613" width="0.0812%" height="15" fill="rgb(215,14,33)" fg:x="965" fg:w="1"/><text x="78.6416%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.3916%" y="597" width="0.0812%" height="15" fill="rgb(209,146,24)" fg:x="965" fg:w="1"/><text x="78.6416%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="78.3103%" y="629" width="0.2437%" height="15" fill="rgb(219,51,47)" fg:x="964" fg:w="3"/><text x="78.5603%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.4728%" y="613" width="0.0812%" height="15" fill="rgb(234,217,40)" fg:x="966" fg:w="1"/><text x="78.7228%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.4728%" y="597" width="0.0812%" height="15" fill="rgb(228,34,26)" fg:x="966" fg:w="1"/><text x="78.7228%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="78.5540%" y="613" width="0.0812%" height="15" fill="rgb(224,50,29)" fg:x="967" fg:w="1"/><text x="78.8040%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="78.6353%" y="613" width="0.1625%" height="15" fill="rgb(205,79,51)" fg:x="968" fg:w="2"/><text x="78.8853%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="78.6353%" y="597" width="0.1625%" height="15" fill="rgb(218,136,28)" fg:x="968" fg:w="2"/><text x="78.8853%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="78.6353%" y="581" width="0.1625%" height="15" fill="rgb(220,150,10)" fg:x="968" fg:w="2"/><text x="78.8853%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.7165%" y="565" width="0.0812%" height="15" fill="rgb(242,158,47)" fg:x="969" fg:w="1"/><text x="78.9665%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.7165%" y="549" width="0.0812%" height="15" fill="rgb(209,68,0)" fg:x="969" fg:w="1"/><text x="78.9665%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.7165%" y="533" width="0.0812%" height="15" fill="rgb(208,13,41)" fg:x="969" fg:w="1"/><text x="78.9665%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.7165%" y="517" width="0.0812%" height="15" fill="rgb(226,201,7)" fg:x="969" fg:w="1"/><text x="78.9665%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.7977%" y="565" width="0.0812%" height="15" fill="rgb(236,103,26)" fg:x="970" fg:w="1"/><text x="79.0477%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.7977%" y="549" width="0.0812%" height="15" fill="rgb(243,162,8)" fg:x="970" fg:w="1"/><text x="79.0477%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="78.7977%" y="597" width="0.1625%" height="15" fill="rgb(237,225,11)" fg:x="970" fg:w="2"/><text x="79.0477%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="78.7977%" y="581" width="0.1625%" height="15" fill="rgb(247,186,32)" fg:x="970" fg:w="2"/><text x="79.0477%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.8790%" y="565" width="0.0812%" height="15" fill="rgb(215,26,28)" fg:x="971" fg:w="1"/><text x="79.1290%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.8790%" y="549" width="0.0812%" height="15" fill="rgb(208,121,6)" fg:x="971" fg:w="1"/><text x="79.1290%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.9602%" y="597" width="0.0812%" height="15" fill="rgb(225,91,3)" fg:x="972" fg:w="1"/><text x="79.2102%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.9602%" y="581" width="0.0812%" height="15" fill="rgb(246,119,36)" fg:x="972" fg:w="1"/><text x="79.2102%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.9602%" y="565" width="0.0812%" height="15" fill="rgb(254,173,2)" fg:x="972" fg:w="1"/><text x="79.2102%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.0414%" y="581" width="0.0812%" height="15" fill="rgb(209,87,54)" fg:x="973" fg:w="1"/><text x="79.2914%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="79.2039%" y="533" width="0.0812%" height="15" fill="rgb(223,216,20)" fg:x="975" fg:w="1"/><text x="79.4539%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.2039%" y="517" width="0.0812%" height="15" fill="rgb(220,31,8)" fg:x="975" fg:w="1"/><text x="79.4539%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="79.2851%" y="533" width="0.1625%" height="15" fill="rgb(220,185,15)" fg:x="976" fg:w="2"/><text x="79.5351%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="79.2851%" y="517" width="0.1625%" height="15" fill="rgb(247,190,50)" fg:x="976" fg:w="2"/><text x="79.5351%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="79.2851%" y="501" width="0.1625%" height="15" fill="rgb(239,173,47)" fg:x="976" fg:w="2"/><text x="79.5351%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.3664%" y="485" width="0.0812%" height="15" fill="rgb(218,190,42)" fg:x="977" fg:w="1"/><text x="79.6164%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="79.2039%" y="549" width="0.3249%" height="15" fill="rgb(251,207,16)" fg:x="975" fg:w="4"/><text x="79.4539%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="79.4476%" y="533" width="0.0812%" height="15" fill="rgb(222,199,47)" fg:x="978" fg:w="1"/><text x="79.6976%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.65%)</title><rect x="79.1227%" y="581" width="0.6499%" height="15" fill="rgb(245,190,7)" fg:x="974" fg:w="8"/><text x="79.3727%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.57%)</title><rect x="79.2039%" y="565" width="0.5686%" height="15" fill="rgb(239,85,38)" fg:x="975" fg:w="7"/><text x="79.4539%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="79.5288%" y="549" width="0.2437%" height="15" fill="rgb(229,69,51)" fg:x="979" fg:w="3"/><text x="79.7788%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.6913%" y="533" width="0.0812%" height="15" fill="rgb(231,104,51)" fg:x="981" fg:w="1"/><text x="79.9413%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.6913%" y="517" width="0.0812%" height="15" fill="rgb(235,49,4)" fg:x="981" fg:w="1"/><text x="79.9413%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.06%)</title><rect x="78.7977%" y="613" width="1.0561%" height="15" fill="rgb(246,166,20)" fg:x="970" fg:w="13"/><text x="79.0477%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="79.0414%" y="597" width="0.8123%" height="15" fill="rgb(230,119,37)" fg:x="973" fg:w="10"/><text x="79.2914%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.7725%" y="581" width="0.0812%" height="15" fill="rgb(234,77,34)" fg:x="982" fg:w="1"/><text x="80.0225%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.7725%" y="565" width="0.0812%" height="15" fill="rgb(211,222,33)" fg:x="982" fg:w="1"/><text x="80.0225%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.7725%" y="549" width="0.0812%" height="15" fill="rgb(226,45,42)" fg:x="982" fg:w="1"/><text x="80.0225%" y="559.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (22 samples, 1.79%)</title><rect x="78.2291%" y="645" width="1.7872%" height="15" fill="rgb(215,174,28)" fg:x="963" fg:w="22"/><text x="78.4791%" y="655.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.46%)</title><rect x="78.5540%" y="629" width="1.4622%" height="15" fill="rgb(254,173,49)" fg:x="967" fg:w="18"/><text x="78.8040%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="79.8538%" y="613" width="0.1625%" height="15" fill="rgb(229,191,6)" fg:x="983" fg:w="2"/><text x="80.1038%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.0975%" y="613" width="0.0812%" height="15" fill="rgb(212,145,22)" fg:x="986" fg:w="1"/><text x="80.3475%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.1787%" y="613" width="0.0812%" height="15" fill="rgb(226,6,51)" fg:x="987" fg:w="1"/><text x="80.4287%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.1787%" y="597" width="0.0812%" height="15" fill="rgb(227,128,8)" fg:x="987" fg:w="1"/><text x="80.4287%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="80.2600%" y="597" width="0.1625%" height="15" fill="rgb(205,24,10)" fg:x="988" fg:w="2"/><text x="80.5100%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.3412%" y="581" width="0.0812%" height="15" fill="rgb(217,147,27)" fg:x="989" fg:w="1"/><text x="80.5912%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.4224%" y="565" width="0.0812%" height="15" fill="rgb(250,82,42)" fg:x="990" fg:w="1"/><text x="80.6724%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="80.0162%" y="645" width="0.5686%" height="15" fill="rgb(248,93,17)" fg:x="985" fg:w="7"/><text x="80.2662%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.49%)</title><rect x="80.0975%" y="629" width="0.4874%" height="15" fill="rgb(254,212,40)" fg:x="986" fg:w="6"/><text x="80.3475%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="80.2600%" y="613" width="0.3249%" height="15" fill="rgb(229,209,2)" fg:x="988" fg:w="4"/><text x="80.5100%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="80.4224%" y="597" width="0.1625%" height="15" fill="rgb(211,50,43)" fg:x="990" fg:w="2"/><text x="80.6724%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="80.4224%" y="581" width="0.1625%" height="15" fill="rgb(245,196,29)" fg:x="990" fg:w="2"/><text x="80.6724%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.5037%" y="565" width="0.0812%" height="15" fill="rgb(216,132,13)" fg:x="991" fg:w="1"/><text x="80.7537%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.5037%" y="549" width="0.0812%" height="15" fill="rgb(251,108,21)" fg:x="991" fg:w="1"/><text x="80.7537%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.5037%" y="533" width="0.0812%" height="15" fill="rgb(229,174,54)" fg:x="991" fg:w="1"/><text x="80.7537%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.5037%" y="517" width="0.0812%" height="15" fill="rgb(211,175,47)" fg:x="991" fg:w="1"/><text x="80.7537%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.5037%" y="501" width="0.0812%" height="15" fill="rgb(234,5,37)" fg:x="991" fg:w="1"/><text x="80.7537%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.6661%" y="581" width="0.0812%" height="15" fill="rgb(244,150,43)" fg:x="993" fg:w="1"/><text x="80.9161%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.7474%" y="581" width="0.0812%" height="15" fill="rgb(242,172,38)" fg:x="994" fg:w="1"/><text x="80.9974%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.8286%" y="533" width="0.0812%" height="15" fill="rgb(205,27,8)" fg:x="995" fg:w="1"/><text x="81.0786%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="80.9098%" y="517" width="0.0812%" height="15" fill="rgb(217,57,3)" fg:x="996" fg:w="1"/><text x="81.1598%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="80.5849%" y="613" width="0.4874%" height="15" fill="rgb(242,21,38)" fg:x="992" fg:w="6"/><text x="80.8349%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.49%)</title><rect x="80.5849%" y="597" width="0.4874%" height="15" fill="rgb(209,64,43)" fg:x="992" fg:w="6"/><text x="80.8349%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="80.8286%" y="581" width="0.2437%" height="15" fill="rgb(222,2,46)" fg:x="995" fg:w="3"/><text x="81.0786%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="80.8286%" y="565" width="0.2437%" height="15" fill="rgb(218,19,44)" fg:x="995" fg:w="3"/><text x="81.0786%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="80.8286%" y="549" width="0.2437%" height="15" fill="rgb(240,203,42)" fg:x="995" fg:w="3"/><text x="81.0786%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="80.9098%" y="533" width="0.1625%" height="15" fill="rgb(229,23,45)" fg:x="996" fg:w="2"/><text x="81.1598%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.9911%" y="517" width="0.0812%" height="15" fill="rgb(205,228,51)" fg:x="997" fg:w="1"/><text x="81.2411%" y="527.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="81.2348%" y="549" width="0.0812%" height="15" fill="rgb(239,36,20)" fg:x="1000" fg:w="1"/><text x="81.4848%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="81.2348%" y="533" width="0.0812%" height="15" fill="rgb(248,172,27)" fg:x="1000" fg:w="1"/><text x="81.4848%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="81.2348%" y="517" width="0.0812%" height="15" fill="rgb(244,55,32)" fg:x="1000" fg:w="1"/><text x="81.4848%" y="527.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (13 samples, 1.06%)</title><rect x="80.5849%" y="629" width="1.0561%" height="15" fill="rgb(215,97,16)" fg:x="992" fg:w="13"/><text x="80.8349%" y="639.50"></text></g><g><title>treediff::diff::diff (7 samples, 0.57%)</title><rect x="81.0723%" y="613" width="0.5686%" height="15" fill="rgb(224,80,29)" fg:x="998" fg:w="7"/><text x="81.3223%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.57%)</title><rect x="81.0723%" y="597" width="0.5686%" height="15" fill="rgb(216,93,47)" fg:x="998" fg:w="7"/><text x="81.3223%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.49%)</title><rect x="81.1535%" y="581" width="0.4874%" height="15" fill="rgb(238,159,10)" fg:x="999" fg:w="6"/><text x="81.4035%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.41%)</title><rect x="81.2348%" y="565" width="0.4062%" height="15" fill="rgb(223,98,29)" fg:x="1000" fg:w="5"/><text x="81.4848%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="81.3160%" y="549" width="0.3249%" height="15" fill="rgb(210,176,23)" fg:x="1001" fg:w="4"/><text x="81.5660%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="81.3972%" y="533" width="0.2437%" height="15" fill="rgb(242,162,27)" fg:x="1002" fg:w="3"/><text x="81.6472%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="81.4785%" y="517" width="0.1625%" height="15" fill="rgb(245,109,32)" fg:x="1003" fg:w="2"/><text x="81.7285%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="81.4785%" y="501" width="0.1625%" height="15" fill="rgb(248,87,8)" fg:x="1003" fg:w="2"/><text x="81.7285%" y="511.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="81.5597%" y="485" width="0.0812%" height="15" fill="rgb(250,160,50)" fg:x="1004" fg:w="1"/><text x="81.8097%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="81.6409%" y="629" width="0.0812%" height="15" fill="rgb(246,165,25)" fg:x="1005" fg:w="1"/><text x="81.8909%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.6409%" y="613" width="0.0812%" height="15" fill="rgb(249,219,3)" fg:x="1005" fg:w="1"/><text x="81.8909%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.7222%" y="597" width="0.0812%" height="15" fill="rgb(226,66,5)" fg:x="1006" fg:w="1"/><text x="81.9722%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="81.8034%" y="597" width="0.3249%" height="15" fill="rgb(250,220,43)" fg:x="1007" fg:w="4"/><text x="82.0534%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="81.8846%" y="581" width="0.2437%" height="15" fill="rgb(225,111,31)" fg:x="1008" fg:w="3"/><text x="82.1346%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.24%)</title><rect x="81.8846%" y="565" width="0.2437%" height="15" fill="rgb(248,106,18)" fg:x="1008" fg:w="3"/><text x="82.1346%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="82.1284%" y="597" width="0.0812%" height="15" fill="rgb(220,226,45)" fg:x="1011" fg:w="1"/><text x="82.3784%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.1284%" y="581" width="0.0812%" height="15" fill="rgb(208,58,53)" fg:x="1011" fg:w="1"/><text x="82.3784%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.1284%" y="565" width="0.0812%" height="15" fill="rgb(209,133,1)" fg:x="1011" fg:w="1"/><text x="82.3784%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="82.2908%" y="517" width="0.0812%" height="15" fill="rgb(228,216,27)" fg:x="1013" fg:w="1"/><text x="82.5408%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="82.3721%" y="517" width="0.0812%" height="15" fill="rgb(238,155,2)" fg:x="1014" fg:w="1"/><text x="82.6221%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="82.2908%" y="549" width="0.2437%" height="15" fill="rgb(244,99,37)" fg:x="1013" fg:w="3"/><text x="82.5408%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="82.2908%" y="533" width="0.2437%" height="15" fill="rgb(254,32,3)" fg:x="1013" fg:w="3"/><text x="82.5408%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.4533%" y="517" width="0.0812%" height="15" fill="rgb(234,46,50)" fg:x="1015" fg:w="1"/><text x="82.7033%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.4533%" y="501" width="0.0812%" height="15" fill="rgb(232,118,51)" fg:x="1015" fg:w="1"/><text x="82.7033%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.5345%" y="485" width="0.0812%" height="15" fill="rgb(207,24,32)" fg:x="1016" fg:w="1"/><text x="82.7845%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.5345%" y="469" width="0.0812%" height="15" fill="rgb(208,107,43)" fg:x="1016" fg:w="1"/><text x="82.7845%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="82.5345%" y="453" width="0.0812%" height="15" fill="rgb(231,28,9)" fg:x="1016" fg:w="1"/><text x="82.7845%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.6158%" y="453" width="0.0812%" height="15" fill="rgb(241,204,15)" fg:x="1017" fg:w="1"/><text x="82.8658%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="82.6970%" y="437" width="0.0812%" height="15" fill="rgb(214,54,15)" fg:x="1018" fg:w="1"/><text x="82.9470%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="82.7782%" y="437" width="0.2437%" height="15" fill="rgb(230,12,28)" fg:x="1019" fg:w="3"/><text x="83.0282%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="82.7782%" y="421" width="0.2437%" height="15" fill="rgb(221,171,5)" fg:x="1019" fg:w="3"/><text x="83.0282%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="82.7782%" y="405" width="0.2437%" height="15" fill="rgb(207,72,25)" fg:x="1019" fg:w="3"/><text x="83.0282%" y="415.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="82.7782%" y="389" width="0.2437%" height="15" fill="rgb(249,79,37)" fg:x="1019" fg:w="3"/><text x="83.0282%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.81%)</title><rect x="82.2908%" y="581" width="0.8123%" height="15" fill="rgb(209,98,49)" fg:x="1013" fg:w="10"/><text x="82.5408%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.81%)</title><rect x="82.2908%" y="565" width="0.8123%" height="15" fill="rgb(221,62,13)" fg:x="1013" fg:w="10"/><text x="82.5408%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.57%)</title><rect x="82.5345%" y="549" width="0.5686%" height="15" fill="rgb(223,39,6)" fg:x="1016" fg:w="7"/><text x="82.7845%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.57%)</title><rect x="82.5345%" y="533" width="0.5686%" height="15" fill="rgb(246,163,20)" fg:x="1016" fg:w="7"/><text x="82.7845%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.57%)</title><rect x="82.5345%" y="517" width="0.5686%" height="15" fill="rgb(211,111,29)" fg:x="1016" fg:w="7"/><text x="82.7845%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.57%)</title><rect x="82.5345%" y="501" width="0.5686%" height="15" fill="rgb(243,118,5)" fg:x="1016" fg:w="7"/><text x="82.7845%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.49%)</title><rect x="82.6158%" y="485" width="0.4874%" height="15" fill="rgb(240,144,52)" fg:x="1017" fg:w="6"/><text x="82.8658%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.49%)</title><rect x="82.6158%" y="469" width="0.4874%" height="15" fill="rgb(244,158,36)" fg:x="1017" fg:w="6"/><text x="82.8658%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.41%)</title><rect x="82.6970%" y="453" width="0.4062%" height="15" fill="rgb(241,109,37)" fg:x="1018" fg:w="5"/><text x="82.9470%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.0219%" y="437" width="0.0812%" height="15" fill="rgb(213,95,32)" fg:x="1022" fg:w="1"/><text x="83.2719%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.1032%" y="581" width="0.0812%" height="15" fill="rgb(252,193,9)" fg:x="1023" fg:w="1"/><text x="83.3532%" y="591.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (20 samples, 1.62%)</title><rect x="81.7222%" y="629" width="1.6247%" height="15" fill="rgb(225,213,21)" fg:x="1006" fg:w="20"/><text x="81.9722%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 1.62%)</title><rect x="81.7222%" y="613" width="1.6247%" height="15" fill="rgb(220,172,46)" fg:x="1006" fg:w="20"/><text x="81.9722%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (14 samples, 1.14%)</title><rect x="82.2096%" y="597" width="1.1373%" height="15" fill="rgb(235,75,41)" fg:x="1012" fg:w="14"/><text x="82.4596%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="83.1844%" y="581" width="0.1625%" height="15" fill="rgb(213,86,9)" fg:x="1024" fg:w="2"/><text x="83.4344%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="83.1844%" y="565" width="0.1625%" height="15" fill="rgb(238,127,51)" fg:x="1024" fg:w="2"/><text x="83.4344%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.2656%" y="549" width="0.0812%" height="15" fill="rgb(215,2,54)" fg:x="1025" fg:w="1"/><text x="83.5156%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="83.5906%" y="485" width="0.0812%" height="15" fill="rgb(245,80,6)" fg:x="1029" fg:w="1"/><text x="83.8406%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="83.5906%" y="469" width="0.0812%" height="15" fill="rgb(233,106,42)" fg:x="1029" fg:w="1"/><text x="83.8406%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="83.5906%" y="453" width="0.0812%" height="15" fill="rgb(244,86,38)" fg:x="1029" fg:w="1"/><text x="83.8406%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="83.5906%" y="437" width="0.0812%" height="15" fill="rgb(242,167,7)" fg:x="1029" fg:w="1"/><text x="83.8406%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="83.8343%" y="405" width="0.0812%" height="15" fill="rgb(218,216,3)" fg:x="1032" fg:w="1"/><text x="84.0843%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="83.8343%" y="389" width="0.0812%" height="15" fill="rgb(206,136,36)" fg:x="1032" fg:w="1"/><text x="84.0843%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.8343%" y="373" width="0.0812%" height="15" fill="rgb(206,206,15)" fg:x="1032" fg:w="1"/><text x="84.0843%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.8343%" y="357" width="0.0812%" height="15" fill="rgb(207,163,34)" fg:x="1032" fg:w="1"/><text x="84.0843%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.8343%" y="341" width="0.0812%" height="15" fill="rgb(240,127,22)" fg:x="1032" fg:w="1"/><text x="84.0843%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="83.8343%" y="437" width="0.1625%" height="15" fill="rgb(227,49,5)" fg:x="1032" fg:w="2"/><text x="84.0843%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="83.8343%" y="421" width="0.1625%" height="15" fill="rgb(231,8,6)" fg:x="1032" fg:w="2"/><text x="84.0843%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="83.9155%" y="405" width="0.0812%" height="15" fill="rgb(223,21,24)" fg:x="1033" fg:w="1"/><text x="84.1655%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.9155%" y="389" width="0.0812%" height="15" fill="rgb(244,44,52)" fg:x="1033" fg:w="1"/><text x="84.1655%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="83.8343%" y="453" width="0.2437%" height="15" fill="rgb(207,73,28)" fg:x="1032" fg:w="3"/><text x="84.0843%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="83.9968%" y="437" width="0.0812%" height="15" fill="rgb(234,215,10)" fg:x="1034" fg:w="1"/><text x="84.2468%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.9968%" y="421" width="0.0812%" height="15" fill="rgb(236,85,3)" fg:x="1034" fg:w="1"/><text x="84.2468%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.41%)</title><rect x="83.7530%" y="469" width="0.4062%" height="15" fill="rgb(236,102,39)" fg:x="1031" fg:w="5"/><text x="84.0030%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.0780%" y="453" width="0.0812%" height="15" fill="rgb(243,50,8)" fg:x="1035" fg:w="1"/><text x="84.3280%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.73%)</title><rect x="83.5093%" y="501" width="0.7311%" height="15" fill="rgb(207,111,4)" fg:x="1028" fg:w="9"/><text x="83.7593%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="83.6718%" y="485" width="0.5686%" height="15" fill="rgb(230,52,42)" fg:x="1030" fg:w="7"/><text x="83.9218%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.1592%" y="469" width="0.0812%" height="15" fill="rgb(252,178,50)" fg:x="1036" fg:w="1"/><text x="84.4092%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.1592%" y="453" width="0.0812%" height="15" fill="rgb(234,46,35)" fg:x="1036" fg:w="1"/><text x="84.4092%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.1592%" y="437" width="0.0812%" height="15" fill="rgb(228,69,37)" fg:x="1036" fg:w="1"/><text x="84.4092%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.89%)</title><rect x="83.5093%" y="533" width="0.8936%" height="15" fill="rgb(221,21,11)" fg:x="1028" fg:w="11"/><text x="83.7593%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.89%)</title><rect x="83.5093%" y="517" width="0.8936%" height="15" fill="rgb(223,56,9)" fg:x="1028" fg:w="11"/><text x="83.7593%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.2405%" y="501" width="0.1625%" height="15" fill="rgb(234,30,19)" fg:x="1037" fg:w="2"/><text x="84.4905%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.3217%" y="485" width="0.0812%" height="15" fill="rgb(211,64,54)" fg:x="1038" fg:w="1"/><text x="84.5717%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="84.3217%" y="469" width="0.0812%" height="15" fill="rgb(250,189,5)" fg:x="1038" fg:w="1"/><text x="84.5717%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="84.3217%" y="453" width="0.0812%" height="15" fill="rgb(214,180,13)" fg:x="1038" fg:w="1"/><text x="84.5717%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4842%" y="501" width="0.0812%" height="15" fill="rgb(238,40,40)" fg:x="1040" fg:w="1"/><text x="84.7342%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15 samples, 1.22%)</title><rect x="83.4281%" y="565" width="1.2185%" height="15" fill="rgb(214,101,38)" fg:x="1027" fg:w="15"/><text x="83.6781%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.14%)</title><rect x="83.5093%" y="549" width="1.1373%" height="15" fill="rgb(242,65,53)" fg:x="1028" fg:w="14"/><text x="83.7593%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="84.4029%" y="533" width="0.2437%" height="15" fill="rgb(230,22,45)" fg:x="1039" fg:w="3"/><text x="84.6529%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.4842%" y="517" width="0.1625%" height="15" fill="rgb(223,77,1)" fg:x="1040" fg:w="2"/><text x="84.7342%" y="527.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="84.5654%" y="501" width="0.0812%" height="15" fill="rgb(227,33,37)" fg:x="1041" fg:w="1"/><text x="84.8154%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="84.5654%" y="485" width="0.0812%" height="15" fill="rgb(224,148,39)" fg:x="1041" fg:w="1"/><text x="84.8154%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="84.6466%" y="565" width="0.1625%" height="15" fill="rgb(232,212,39)" fg:x="1042" fg:w="2"/><text x="84.8966%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="84.6466%" y="549" width="0.1625%" height="15" fill="rgb(251,172,7)" fg:x="1042" fg:w="2"/><text x="84.8966%" y="559.50"></text></g><g><title>engine::session::Session::close (89 samples, 7.23%)</title><rect x="77.8229%" y="709" width="7.2299%" height="15" fill="rgb(219,39,9)" fg:x="958" fg:w="89"/><text x="78.0729%" y="719.50">engine::se..</text></g><g><title>engine::session::Session::save_entity_changes (89 samples, 7.23%)</title><rect x="77.8229%" y="693" width="7.2299%" height="15" fill="rgb(228,118,14)" fg:x="958" fg:w="89"/><text x="78.0729%" y="703.50">engine::se..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (84 samples, 6.82%)</title><rect x="78.2291%" y="677" width="6.8237%" height="15" fill="rgb(207,140,10)" fg:x="963" fg:w="84"/><text x="78.4791%" y="687.50">engine::i..</text></g><g><title>engine::session::SavesEntities::check_for_changes (84 samples, 6.82%)</title><rect x="78.2291%" y="661" width="6.8237%" height="15" fill="rgb(227,111,53)" fg:x="963" fg:w="84"/><text x="78.4791%" y="671.50">engine::s..</text></g><g><title>kernel::model::any_entity_changes (55 samples, 4.47%)</title><rect x="80.5849%" y="645" width="4.4679%" height="15" fill="rgb(216,165,16)" fg:x="992" fg:w="55"/><text x="80.8349%" y="655.50">kerne..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (21 samples, 1.71%)</title><rect x="83.3469%" y="629" width="1.7059%" height="15" fill="rgb(226,111,18)" fg:x="1026" fg:w="21"/><text x="83.5969%" y="639.50"></text></g><g><title>serde_json::de::from_trait (21 samples, 1.71%)</title><rect x="83.3469%" y="613" width="1.7059%" height="15" fill="rgb(251,27,17)" fg:x="1026" fg:w="21"/><text x="83.5969%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (20 samples, 1.62%)</title><rect x="83.4281%" y="597" width="1.6247%" height="15" fill="rgb(254,69,9)" fg:x="1027" fg:w="20"/><text x="83.6781%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (20 samples, 1.62%)</title><rect x="83.4281%" y="581" width="1.6247%" height="15" fill="rgb(234,140,37)" fg:x="1027" fg:w="20"/><text x="83.6781%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="84.8091%" y="565" width="0.2437%" height="15" fill="rgb(220,93,8)" fg:x="1044" fg:w="3"/><text x="85.0591%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.9716%" y="549" width="0.0812%" height="15" fill="rgb(236,113,3)" fg:x="1046" fg:w="1"/><text x="85.2216%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="84.9716%" y="533" width="0.0812%" height="15" fill="rgb(234,108,23)" fg:x="1046" fg:w="1"/><text x="85.2216%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (2 samples, 0.16%)</title><rect x="85.1340%" y="629" width="0.1625%" height="15" fill="rgb(205,114,34)" fg:x="1048" fg:w="2"/><text x="85.3840%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="85.2153%" y="613" width="0.0812%" height="15" fill="rgb(236,200,45)" fg:x="1049" fg:w="1"/><text x="85.4653%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="85.2153%" y="597" width="0.0812%" height="15" fill="rgb(227,194,29)" fg:x="1049" fg:w="1"/><text x="85.4653%" y="607.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="85.2153%" y="581" width="0.0812%" height="15" fill="rgb(250,76,42)" fg:x="1049" fg:w="1"/><text x="85.4653%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.2153%" y="565" width="0.0812%" height="15" fill="rgb(208,128,8)" fg:x="1049" fg:w="1"/><text x="85.4653%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="85.2153%" y="549" width="0.0812%" height="15" fill="rgb(229,209,35)" fg:x="1049" fg:w="1"/><text x="85.4653%" y="559.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="85.2965%" y="501" width="0.0812%" height="15" fill="rgb(215,39,53)" fg:x="1050" fg:w="1"/><text x="85.5465%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.2965%" y="485" width="0.0812%" height="15" fill="rgb(219,123,41)" fg:x="1050" fg:w="1"/><text x="85.5465%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="85.2965%" y="549" width="0.1625%" height="15" fill="rgb(212,158,18)" fg:x="1050" fg:w="2"/><text x="85.5465%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="85.2965%" y="533" width="0.1625%" height="15" fill="rgb(234,196,53)" fg:x="1050" fg:w="2"/><text x="85.5465%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="85.2965%" y="517" width="0.1625%" height="15" fill="rgb(210,139,12)" fg:x="1050" fg:w="2"/><text x="85.5465%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.3777%" y="501" width="0.0812%" height="15" fill="rgb(220,116,54)" fg:x="1051" fg:w="1"/><text x="85.6277%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.3777%" y="485" width="0.0812%" height="15" fill="rgb(247,103,28)" fg:x="1051" fg:w="1"/><text x="85.6277%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.3777%" y="469" width="0.0812%" height="15" fill="rgb(253,156,45)" fg:x="1051" fg:w="1"/><text x="85.6277%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3777%" y="453" width="0.0812%" height="15" fill="rgb(237,157,52)" fg:x="1051" fg:w="1"/><text x="85.6277%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.3777%" y="437" width="0.0812%" height="15" fill="rgb(253,112,16)" fg:x="1051" fg:w="1"/><text x="85.6277%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3777%" y="421" width="0.0812%" height="15" fill="rgb(234,70,18)" fg:x="1051" fg:w="1"/><text x="85.6277%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.3777%" y="405" width="0.0812%" height="15" fill="rgb(247,138,19)" fg:x="1051" fg:w="1"/><text x="85.6277%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3777%" y="389" width="0.0812%" height="15" fill="rgb(207,171,1)" fg:x="1051" fg:w="1"/><text x="85.6277%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.3777%" y="373" width="0.0812%" height="15" fill="rgb(239,213,3)" fg:x="1051" fg:w="1"/><text x="85.6277%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.3777%" y="357" width="0.0812%" height="15" fill="rgb(226,112,4)" fg:x="1051" fg:w="1"/><text x="85.6277%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="85.4590%" y="549" width="0.1625%" height="15" fill="rgb(252,170,12)" fg:x="1052" fg:w="2"/><text x="85.7090%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="85.4590%" y="533" width="0.1625%" height="15" fill="rgb(241,106,13)" fg:x="1052" fg:w="2"/><text x="85.7090%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.4590%" y="517" width="0.1625%" height="15" fill="rgb(225,73,23)" fg:x="1052" fg:w="2"/><text x="85.7090%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.4590%" y="501" width="0.1625%" height="15" fill="rgb(251,227,29)" fg:x="1052" fg:w="2"/><text x="85.7090%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.4590%" y="485" width="0.1625%" height="15" fill="rgb(237,144,13)" fg:x="1052" fg:w="2"/><text x="85.7090%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.4590%" y="469" width="0.1625%" height="15" fill="rgb(232,106,46)" fg:x="1052" fg:w="2"/><text x="85.7090%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.4590%" y="453" width="0.1625%" height="15" fill="rgb(245,154,53)" fg:x="1052" fg:w="2"/><text x="85.7090%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="85.4590%" y="437" width="0.1625%" height="15" fill="rgb(212,119,47)" fg:x="1052" fg:w="2"/><text x="85.7090%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.4590%" y="421" width="0.1625%" height="15" fill="rgb(253,135,25)" fg:x="1052" fg:w="2"/><text x="85.7090%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.4590%" y="405" width="0.1625%" height="15" fill="rgb(253,208,39)" fg:x="1052" fg:w="2"/><text x="85.7090%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.4590%" y="389" width="0.1625%" height="15" fill="rgb(226,64,12)" fg:x="1052" fg:w="2"/><text x="85.7090%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.5402%" y="373" width="0.0812%" height="15" fill="rgb(214,162,37)" fg:x="1053" fg:w="1"/><text x="85.7902%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.5402%" y="357" width="0.0812%" height="15" fill="rgb(250,104,5)" fg:x="1053" fg:w="1"/><text x="85.7902%" y="367.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="85.5402%" y="341" width="0.0812%" height="15" fill="rgb(220,202,50)" fg:x="1053" fg:w="1"/><text x="85.7902%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.6214%" y="405" width="0.0812%" height="15" fill="rgb(248,67,38)" fg:x="1054" fg:w="1"/><text x="85.8714%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.6214%" y="389" width="0.0812%" height="15" fill="rgb(242,94,35)" fg:x="1054" fg:w="1"/><text x="85.8714%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.6214%" y="373" width="0.0812%" height="15" fill="rgb(209,78,37)" fg:x="1054" fg:w="1"/><text x="85.8714%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.6214%" y="357" width="0.0812%" height="15" fill="rgb(230,126,47)" fg:x="1054" fg:w="1"/><text x="85.8714%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.6214%" y="341" width="0.0812%" height="15" fill="rgb(222,110,35)" fg:x="1054" fg:w="1"/><text x="85.8714%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.6214%" y="325" width="0.0812%" height="15" fill="rgb(233,154,20)" fg:x="1054" fg:w="1"/><text x="85.8714%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.6214%" y="309" width="0.0812%" height="15" fill="rgb(223,53,50)" fg:x="1054" fg:w="1"/><text x="85.8714%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.6214%" y="293" width="0.0812%" height="15" fill="rgb(251,27,26)" fg:x="1054" fg:w="1"/><text x="85.8714%" y="303.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="85.6214%" y="533" width="0.1625%" height="15" fill="rgb(223,189,16)" fg:x="1054" fg:w="2"/><text x="85.8714%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="85.6214%" y="517" width="0.1625%" height="15" fill="rgb(207,5,54)" fg:x="1054" fg:w="2"/><text x="85.8714%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="85.6214%" y="501" width="0.1625%" height="15" fill="rgb(254,124,50)" fg:x="1054" fg:w="2"/><text x="85.8714%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="85.6214%" y="485" width="0.1625%" height="15" fill="rgb(253,193,24)" fg:x="1054" fg:w="2"/><text x="85.8714%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="85.6214%" y="469" width="0.1625%" height="15" fill="rgb(235,170,24)" fg:x="1054" fg:w="2"/><text x="85.8714%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="85.6214%" y="453" width="0.1625%" height="15" fill="rgb(222,212,52)" fg:x="1054" fg:w="2"/><text x="85.8714%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="85.6214%" y="437" width="0.1625%" height="15" fill="rgb(223,17,45)" fg:x="1054" fg:w="2"/><text x="85.8714%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="85.6214%" y="421" width="0.1625%" height="15" fill="rgb(227,103,26)" fg:x="1054" fg:w="2"/><text x="85.8714%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="85.7027%" y="405" width="0.0812%" height="15" fill="rgb(251,151,25)" fg:x="1055" fg:w="1"/><text x="85.9527%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="85.7027%" y="389" width="0.0812%" height="15" fill="rgb(248,144,29)" fg:x="1055" fg:w="1"/><text x="85.9527%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.7027%" y="373" width="0.0812%" height="15" fill="rgb(245,97,16)" fg:x="1055" fg:w="1"/><text x="85.9527%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.7839%" y="501" width="0.0812%" height="15" fill="rgb(220,200,29)" fg:x="1056" fg:w="1"/><text x="86.0339%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.8652%" y="469" width="0.0812%" height="15" fill="rgb(206,38,29)" fg:x="1057" fg:w="1"/><text x="86.1152%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.8652%" y="453" width="0.0812%" height="15" fill="rgb(245,19,52)" fg:x="1057" fg:w="1"/><text x="86.1152%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="85.8652%" y="437" width="0.0812%" height="15" fill="rgb(205,67,43)" fg:x="1057" fg:w="1"/><text x="86.1152%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="85.8652%" y="501" width="0.2437%" height="15" fill="rgb(217,128,23)" fg:x="1057" fg:w="3"/><text x="86.1152%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="85.8652%" y="485" width="0.2437%" height="15" fill="rgb(210,109,28)" fg:x="1057" fg:w="3"/><text x="86.1152%" y="495.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="85.9464%" y="469" width="0.1625%" height="15" fill="rgb(233,181,7)" fg:x="1058" fg:w="2"/><text x="86.1964%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0276%" y="453" width="0.0812%" height="15" fill="rgb(244,11,22)" fg:x="1059" fg:w="1"/><text x="86.2776%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="86.0276%" y="437" width="0.0812%" height="15" fill="rgb(205,124,54)" fg:x="1059" fg:w="1"/><text x="86.2776%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="86.0276%" y="421" width="0.0812%" height="15" fill="rgb(218,21,27)" fg:x="1059" fg:w="1"/><text x="86.2776%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0276%" y="405" width="0.0812%" height="15" fill="rgb(224,153,33)" fg:x="1059" fg:w="1"/><text x="86.2776%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="86.0276%" y="389" width="0.0812%" height="15" fill="rgb(240,219,28)" fg:x="1059" fg:w="1"/><text x="86.2776%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="86.0276%" y="373" width="0.0812%" height="15" fill="rgb(214,80,29)" fg:x="1059" fg:w="1"/><text x="86.2776%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0276%" y="357" width="0.0812%" height="15" fill="rgb(247,148,44)" fg:x="1059" fg:w="1"/><text x="86.2776%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="86.0276%" y="341" width="0.0812%" height="15" fill="rgb(243,110,30)" fg:x="1059" fg:w="1"/><text x="86.2776%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="86.0276%" y="325" width="0.0812%" height="15" fill="rgb(243,173,41)" fg:x="1059" fg:w="1"/><text x="86.2776%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0276%" y="309" width="0.0812%" height="15" fill="rgb(225,160,47)" fg:x="1059" fg:w="1"/><text x="86.2776%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="86.0276%" y="293" width="0.0812%" height="15" fill="rgb(215,44,21)" fg:x="1059" fg:w="1"/><text x="86.2776%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="86.0276%" y="277" width="0.0812%" height="15" fill="rgb(248,90,3)" fg:x="1059" fg:w="1"/><text x="86.2776%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0276%" y="261" width="0.0812%" height="15" fill="rgb(220,196,49)" fg:x="1059" fg:w="1"/><text x="86.2776%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="86.0276%" y="245" width="0.0812%" height="15" fill="rgb(217,138,14)" fg:x="1059" fg:w="1"/><text x="86.2776%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.0276%" y="229" width="0.0812%" height="15" fill="rgb(219,111,20)" fg:x="1059" fg:w="1"/><text x="86.2776%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (11 samples, 0.89%)</title><rect x="85.2965%" y="597" width="0.8936%" height="15" fill="rgb(218,114,4)" fg:x="1050" fg:w="11"/><text x="85.5465%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (11 samples, 0.89%)</title><rect x="85.2965%" y="581" width="0.8936%" height="15" fill="rgb(238,133,3)" fg:x="1050" fg:w="11"/><text x="85.5465%" y="591.50"></text></g><g><title>engine::internal::Entities::add_persisted (11 samples, 0.89%)</title><rect x="85.2965%" y="565" width="0.8936%" height="15" fill="rgb(224,95,0)" fg:x="1050" fg:w="11"/><text x="85.5465%" y="575.50"></text></g><g><title>kernel::model::entity::Entity::from_str (7 samples, 0.57%)</title><rect x="85.6214%" y="549" width="0.5686%" height="15" fill="rgb(220,169,35)" fg:x="1054" fg:w="7"/><text x="85.8714%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.41%)</title><rect x="85.7839%" y="533" width="0.4062%" height="15" fill="rgb(242,116,47)" fg:x="1056" fg:w="5"/><text x="86.0339%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="85.7839%" y="517" width="0.4062%" height="15" fill="rgb(251,42,20)" fg:x="1056" fg:w="5"/><text x="86.0339%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.1089%" y="501" width="0.0812%" height="15" fill="rgb(234,7,34)" fg:x="1060" fg:w="1"/><text x="86.3589%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.1089%" y="485" width="0.0812%" height="15" fill="rgb(243,208,13)" fg:x="1060" fg:w="1"/><text x="86.3589%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="86.1089%" y="469" width="0.0812%" height="15" fill="rgb(227,33,28)" fg:x="1060" fg:w="1"/><text x="86.3589%" y="479.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (14 samples, 1.14%)</title><rect x="85.1340%" y="645" width="1.1373%" height="15" fill="rgb(250,47,37)" fg:x="1048" fg:w="14"/><text x="85.3840%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (12 samples, 0.97%)</title><rect x="85.2965%" y="629" width="0.9748%" height="15" fill="rgb(235,111,52)" fg:x="1050" fg:w="12"/><text x="85.5465%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (12 samples, 0.97%)</title><rect x="85.2965%" y="613" width="0.9748%" height="15" fill="rgb(223,64,28)" fg:x="1050" fg:w="12"/><text x="85.5465%" y="623.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.1901%" y="597" width="0.0812%" height="15" fill="rgb(236,67,22)" fg:x="1061" fg:w="1"/><text x="86.4401%" y="607.50"></text></g><g><title>&lt;engine::perform::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (15 samples, 1.22%)</title><rect x="85.1340%" y="661" width="1.2185%" height="15" fill="rgb(243,79,24)" fg:x="1048" fg:w="15"/><text x="85.3840%" y="671.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (1 samples, 0.08%)</title><rect x="86.2713%" y="645" width="0.0812%" height="15" fill="rgb(241,225,22)" fg:x="1062" fg:w="1"/><text x="86.5213%" y="655.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="86.2713%" y="629" width="0.0812%" height="15" fill="rgb(228,214,26)" fg:x="1062" fg:w="1"/><text x="86.5213%" y="639.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="86.2713%" y="613" width="0.0812%" height="15" fill="rgb(219,84,52)" fg:x="1062" fg:w="1"/><text x="86.5213%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.2713%" y="597" width="0.0812%" height="15" fill="rgb(220,12,22)" fg:x="1062" fg:w="1"/><text x="86.5213%" y="607.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="86.3526%" y="629" width="0.1625%" height="15" fill="rgb(219,9,49)" fg:x="1063" fg:w="2"/><text x="86.6026%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="86.6775%" y="549" width="0.1625%" height="15" fill="rgb(237,40,43)" fg:x="1067" fg:w="2"/><text x="86.9275%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="86.6775%" y="533" width="0.1625%" height="15" fill="rgb(212,189,32)" fg:x="1067" fg:w="2"/><text x="86.9275%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.7587%" y="517" width="0.0812%" height="15" fill="rgb(247,48,9)" fg:x="1068" fg:w="1"/><text x="87.0087%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="86.6775%" y="565" width="0.2437%" height="15" fill="rgb(247,112,3)" fg:x="1067" fg:w="3"/><text x="86.9275%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.8400%" y="549" width="0.0812%" height="15" fill="rgb(243,110,18)" fg:x="1069" fg:w="1"/><text x="87.0900%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.9212%" y="565" width="0.0812%" height="15" fill="rgb(233,223,44)" fg:x="1070" fg:w="1"/><text x="87.1712%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.49%)</title><rect x="86.5963%" y="581" width="0.4874%" height="15" fill="rgb(245,160,20)" fg:x="1066" fg:w="6"/><text x="86.8463%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="87.0024%" y="565" width="0.0812%" height="15" fill="rgb(225,37,1)" fg:x="1071" fg:w="1"/><text x="87.2524%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="87.0024%" y="549" width="0.0812%" height="15" fill="rgb(253,227,39)" fg:x="1071" fg:w="1"/><text x="87.2524%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="87.0024%" y="533" width="0.0812%" height="15" fill="rgb(240,179,26)" fg:x="1071" fg:w="1"/><text x="87.2524%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.65%)</title><rect x="86.5963%" y="597" width="0.6499%" height="15" fill="rgb(237,212,23)" fg:x="1066" fg:w="8"/><text x="86.8463%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (2 samples, 0.16%)</title><rect x="87.0837%" y="581" width="0.1625%" height="15" fill="rgb(221,38,11)" fg:x="1072" fg:w="2"/><text x="87.3337%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.89%)</title><rect x="86.5963%" y="613" width="0.8936%" height="15" fill="rgb(215,85,6)" fg:x="1066" fg:w="11"/><text x="86.8463%" y="623.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="87.2461%" y="597" width="0.2437%" height="15" fill="rgb(239,64,14)" fg:x="1074" fg:w="3"/><text x="87.4961%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (14 samples, 1.14%)</title><rect x="86.5150%" y="629" width="1.1373%" height="15" fill="rgb(215,150,32)" fg:x="1065" fg:w="14"/><text x="86.7650%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="87.4898%" y="613" width="0.1625%" height="15" fill="rgb(238,15,13)" fg:x="1077" fg:w="2"/><text x="87.7398%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="87.7335%" y="597" width="0.0812%" height="15" fill="rgb(251,87,8)" fg:x="1080" fg:w="1"/><text x="87.9835%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="87.7335%" y="581" width="0.0812%" height="15" fill="rgb(206,86,1)" fg:x="1080" fg:w="1"/><text x="87.9835%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.7335%" y="565" width="0.0812%" height="15" fill="rgb(208,151,45)" fg:x="1080" fg:w="1"/><text x="87.9835%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="87.9773%" y="469" width="0.0812%" height="15" fill="rgb(231,181,24)" fg:x="1083" fg:w="1"/><text x="88.2273%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="87.9773%" y="517" width="0.2437%" height="15" fill="rgb(240,106,29)" fg:x="1083" fg:w="3"/><text x="88.2273%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (3 samples, 0.24%)</title><rect x="87.9773%" y="501" width="0.2437%" height="15" fill="rgb(227,166,11)" fg:x="1083" fg:w="3"/><text x="88.2273%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="87.9773%" y="485" width="0.2437%" height="15" fill="rgb(254,14,34)" fg:x="1083" fg:w="3"/><text x="88.2273%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="88.0585%" y="469" width="0.1625%" height="15" fill="rgb(223,222,6)" fg:x="1084" fg:w="2"/><text x="88.3085%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="88.0585%" y="453" width="0.1625%" height="15" fill="rgb(245,69,24)" fg:x="1084" fg:w="2"/><text x="88.3085%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="88.0585%" y="437" width="0.1625%" height="15" fill="rgb(213,193,7)" fg:x="1084" fg:w="2"/><text x="88.3085%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="88.0585%" y="421" width="0.1625%" height="15" fill="rgb(237,92,51)" fg:x="1084" fg:w="2"/><text x="88.3085%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="88.0585%" y="405" width="0.1625%" height="15" fill="rgb(225,194,6)" fg:x="1084" fg:w="2"/><text x="88.3085%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="88.0585%" y="389" width="0.1625%" height="15" fill="rgb(205,159,49)" fg:x="1084" fg:w="2"/><text x="88.3085%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="88.0585%" y="373" width="0.1625%" height="15" fill="rgb(219,69,2)" fg:x="1084" fg:w="2"/><text x="88.3085%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="88.0585%" y="357" width="0.1625%" height="15" fill="rgb(215,107,24)" fg:x="1084" fg:w="2"/><text x="88.3085%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="88.0585%" y="341" width="0.1625%" height="15" fill="rgb(249,208,29)" fg:x="1084" fg:w="2"/><text x="88.3085%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="88.0585%" y="325" width="0.1625%" height="15" fill="rgb(213,147,10)" fg:x="1084" fg:w="2"/><text x="88.3085%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="88.0585%" y="309" width="0.1625%" height="15" fill="rgb(254,140,42)" fg:x="1084" fg:w="2"/><text x="88.3085%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.1397%" y="293" width="0.0812%" height="15" fill="rgb(249,9,15)" fg:x="1085" fg:w="1"/><text x="88.3897%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.1397%" y="277" width="0.0812%" height="15" fill="rgb(210,19,33)" fg:x="1085" fg:w="1"/><text x="88.3897%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.1397%" y="261" width="0.0812%" height="15" fill="rgb(241,121,22)" fg:x="1085" fg:w="1"/><text x="88.3897%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.1397%" y="245" width="0.0812%" height="15" fill="rgb(244,69,52)" fg:x="1085" fg:w="1"/><text x="88.3897%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="88.1397%" y="229" width="0.0812%" height="15" fill="rgb(244,191,54)" fg:x="1085" fg:w="1"/><text x="88.3897%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="88.1397%" y="213" width="0.0812%" height="15" fill="rgb(250,3,53)" fg:x="1085" fg:w="1"/><text x="88.3897%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="88.1397%" y="197" width="0.0812%" height="15" fill="rgb(205,77,3)" fg:x="1085" fg:w="1"/><text x="88.3897%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="88.1397%" y="181" width="0.0812%" height="15" fill="rgb(207,155,3)" fg:x="1085" fg:w="1"/><text x="88.3897%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="88.1397%" y="165" width="0.0812%" height="15" fill="rgb(224,79,2)" fg:x="1085" fg:w="1"/><text x="88.3897%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.3022%" y="501" width="0.0812%" height="15" fill="rgb(243,172,5)" fg:x="1087" fg:w="1"/><text x="88.5522%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="88.4647%" y="421" width="0.0812%" height="15" fill="rgb(217,23,43)" fg:x="1089" fg:w="1"/><text x="88.7147%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="88.5459%" y="405" width="0.0812%" height="15" fill="rgb(223,109,20)" fg:x="1090" fg:w="1"/><text x="88.7959%" y="415.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="88.5459%" y="389" width="0.0812%" height="15" fill="rgb(232,159,21)" fg:x="1090" fg:w="1"/><text x="88.7959%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="88.5459%" y="373" width="0.0812%" height="15" fill="rgb(219,58,2)" fg:x="1090" fg:w="1"/><text x="88.7959%" y="383.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="88.5459%" y="357" width="0.0812%" height="15" fill="rgb(241,56,8)" fg:x="1090" fg:w="1"/><text x="88.7959%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.5459%" y="341" width="0.0812%" height="15" fill="rgb(249,10,27)" fg:x="1090" fg:w="1"/><text x="88.7959%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.5459%" y="325" width="0.0812%" height="15" fill="rgb(248,177,5)" fg:x="1090" fg:w="1"/><text x="88.7959%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.5459%" y="309" width="0.0812%" height="15" fill="rgb(239,12,30)" fg:x="1090" fg:w="1"/><text x="88.7959%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.5459%" y="293" width="0.0812%" height="15" fill="rgb(229,164,25)" fg:x="1090" fg:w="1"/><text x="88.7959%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.5459%" y="277" width="0.0812%" height="15" fill="rgb(231,217,50)" fg:x="1090" fg:w="1"/><text x="88.7959%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.6271%" y="357" width="0.0812%" height="15" fill="rgb(247,99,32)" fg:x="1091" fg:w="1"/><text x="88.8771%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.6271%" y="341" width="0.0812%" height="15" fill="rgb(240,74,50)" fg:x="1091" fg:w="1"/><text x="88.8771%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.6271%" y="325" width="0.0812%" height="15" fill="rgb(218,54,8)" fg:x="1091" fg:w="1"/><text x="88.8771%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.6271%" y="309" width="0.0812%" height="15" fill="rgb(227,132,20)" fg:x="1091" fg:w="1"/><text x="88.8771%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.6271%" y="293" width="0.0812%" height="15" fill="rgb(232,134,12)" fg:x="1091" fg:w="1"/><text x="88.8771%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.6271%" y="277" width="0.0812%" height="15" fill="rgb(250,129,18)" fg:x="1091" fg:w="1"/><text x="88.8771%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="88.6271%" y="405" width="0.2437%" height="15" fill="rgb(232,129,47)" fg:x="1091" fg:w="3"/><text x="88.8771%" y="415.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="88.6271%" y="389" width="0.2437%" height="15" fill="rgb(230,31,40)" fg:x="1091" fg:w="3"/><text x="88.8771%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="88.6271%" y="373" width="0.2437%" height="15" fill="rgb(232,126,10)" fg:x="1091" fg:w="3"/><text x="88.8771%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="88.7084%" y="357" width="0.1625%" height="15" fill="rgb(205,46,31)" fg:x="1092" fg:w="2"/><text x="88.9584%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.7084%" y="341" width="0.1625%" height="15" fill="rgb(232,37,37)" fg:x="1092" fg:w="2"/><text x="88.9584%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="88.7084%" y="325" width="0.1625%" height="15" fill="rgb(240,91,16)" fg:x="1092" fg:w="2"/><text x="88.9584%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.7084%" y="309" width="0.1625%" height="15" fill="rgb(224,160,9)" fg:x="1092" fg:w="2"/><text x="88.9584%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="88.7084%" y="293" width="0.1625%" height="15" fill="rgb(215,116,14)" fg:x="1092" fg:w="2"/><text x="88.9584%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.7084%" y="277" width="0.1625%" height="15" fill="rgb(235,46,36)" fg:x="1092" fg:w="2"/><text x="88.9584%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="88.7084%" y="261" width="0.1625%" height="15" fill="rgb(238,39,28)" fg:x="1092" fg:w="2"/><text x="88.9584%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.7084%" y="245" width="0.1625%" height="15" fill="rgb(242,125,29)" fg:x="1092" fg:w="2"/><text x="88.9584%" y="255.50"></text></g><g><title>core::iter::adapters::try_process (12 samples, 0.97%)</title><rect x="87.9773%" y="533" width="0.9748%" height="15" fill="rgb(238,211,30)" fg:x="1083" fg:w="12"/><text x="88.2273%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (9 samples, 0.73%)</title><rect x="88.2210%" y="517" width="0.7311%" height="15" fill="rgb(227,201,28)" fg:x="1086" fg:w="9"/><text x="88.4710%" y="527.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (7 samples, 0.57%)</title><rect x="88.3834%" y="501" width="0.5686%" height="15" fill="rgb(238,77,29)" fg:x="1088" fg:w="7"/><text x="88.6334%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (7 samples, 0.57%)</title><rect x="88.3834%" y="485" width="0.5686%" height="15" fill="rgb(213,221,40)" fg:x="1088" fg:w="7"/><text x="88.6334%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.49%)</title><rect x="88.4647%" y="469" width="0.4874%" height="15" fill="rgb(226,220,44)" fg:x="1089" fg:w="6"/><text x="88.7147%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (6 samples, 0.49%)</title><rect x="88.4647%" y="453" width="0.4874%" height="15" fill="rgb(228,90,23)" fg:x="1089" fg:w="6"/><text x="88.7147%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (6 samples, 0.49%)</title><rect x="88.4647%" y="437" width="0.4874%" height="15" fill="rgb(235,72,29)" fg:x="1089" fg:w="6"/><text x="88.7147%" y="447.50"></text></g><g><title>engine::internal::Entities::add_persisted (5 samples, 0.41%)</title><rect x="88.5459%" y="421" width="0.4062%" height="15" fill="rgb(248,117,39)" fg:x="1090" fg:w="5"/><text x="88.7959%" y="431.50"></text></g><g><title>kernel::model::entity::Entity::from_str (1 samples, 0.08%)</title><rect x="88.8708%" y="405" width="0.0812%" height="15" fill="rgb(225,43,28)" fg:x="1094" fg:w="1"/><text x="89.1208%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.8708%" y="389" width="0.0812%" height="15" fill="rgb(240,93,4)" fg:x="1094" fg:w="1"/><text x="89.1208%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.8708%" y="373" width="0.0812%" height="15" fill="rgb(234,178,27)" fg:x="1094" fg:w="1"/><text x="89.1208%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.8708%" y="357" width="0.0812%" height="15" fill="rgb(254,88,22)" fg:x="1094" fg:w="1"/><text x="89.1208%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.8708%" y="341" width="0.0812%" height="15" fill="rgb(240,206,50)" fg:x="1094" fg:w="1"/><text x="89.1208%" y="351.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.8708%" y="325" width="0.0812%" height="15" fill="rgb(249,103,8)" fg:x="1094" fg:w="1"/><text x="89.1208%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="88.8708%" y="309" width="0.0812%" height="15" fill="rgb(241,178,36)" fg:x="1094" fg:w="1"/><text x="89.1208%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.8708%" y="293" width="0.0812%" height="15" fill="rgb(246,110,15)" fg:x="1094" fg:w="1"/><text x="89.1208%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="88.8708%" y="277" width="0.0812%" height="15" fill="rgb(207,14,43)" fg:x="1094" fg:w="1"/><text x="89.1208%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.8708%" y="261" width="0.0812%" height="15" fill="rgb(253,219,19)" fg:x="1094" fg:w="1"/><text x="89.1208%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="88.8708%" y="245" width="0.0812%" height="15" fill="rgb(216,126,5)" fg:x="1094" fg:w="1"/><text x="89.1208%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.8708%" y="229" width="0.0812%" height="15" fill="rgb(218,78,42)" fg:x="1094" fg:w="1"/><text x="89.1208%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="88.8708%" y="213" width="0.0812%" height="15" fill="rgb(215,154,40)" fg:x="1094" fg:w="1"/><text x="89.1208%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="88.8708%" y="197" width="0.0812%" height="15" fill="rgb(235,129,32)" fg:x="1094" fg:w="1"/><text x="89.1208%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.8708%" y="181" width="0.0812%" height="15" fill="rgb(218,51,8)" fg:x="1094" fg:w="1"/><text x="89.1208%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="88.8708%" y="165" width="0.0812%" height="15" fill="rgb(245,48,4)" fg:x="1094" fg:w="1"/><text x="89.1208%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.8708%" y="149" width="0.0812%" height="15" fill="rgb(250,175,12)" fg:x="1094" fg:w="1"/><text x="89.1208%" y="159.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.0333%" y="501" width="0.0812%" height="15" fill="rgb(237,95,40)" fg:x="1096" fg:w="1"/><text x="89.2833%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.0333%" y="485" width="0.0812%" height="15" fill="rgb(244,120,0)" fg:x="1096" fg:w="1"/><text x="89.2833%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.0333%" y="469" width="0.0812%" height="15" fill="rgb(241,19,42)" fg:x="1096" fg:w="1"/><text x="89.2833%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="89.1145%" y="501" width="0.0812%" height="15" fill="rgb(217,174,48)" fg:x="1097" fg:w="1"/><text x="89.3645%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="89.1145%" y="485" width="0.0812%" height="15" fill="rgb(239,36,38)" fg:x="1097" fg:w="1"/><text x="89.3645%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="89.1145%" y="469" width="0.0812%" height="15" fill="rgb(220,63,49)" fg:x="1097" fg:w="1"/><text x="89.3645%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="89.1145%" y="453" width="0.0812%" height="15" fill="rgb(240,101,13)" fg:x="1097" fg:w="1"/><text x="89.3645%" y="463.50"></text></g><g><title>&lt;&amp;kernel::model::EntityPtr as core::convert::Into&lt;kernel::model::entity::EntityRef&gt;&gt;::into (1 samples, 0.08%)</title><rect x="89.1145%" y="437" width="0.0812%" height="15" fill="rgb(209,184,51)" fg:x="1097" fg:w="1"/><text x="89.3645%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.1145%" y="421" width="0.0812%" height="15" fill="rgb(206,136,39)" fg:x="1097" fg:w="1"/><text x="89.3645%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.1145%" y="405" width="0.0812%" height="15" fill="rgb(254,47,45)" fg:x="1097" fg:w="1"/><text x="89.3645%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.1145%" y="389" width="0.0812%" height="15" fill="rgb(252,103,20)" fg:x="1097" fg:w="1"/><text x="89.3645%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.1145%" y="373" width="0.0812%" height="15" fill="rgb(230,69,12)" fg:x="1097" fg:w="1"/><text x="89.3645%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.1145%" y="357" width="0.0812%" height="15" fill="rgb(219,2,28)" fg:x="1097" fg:w="1"/><text x="89.3645%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="89.1145%" y="341" width="0.0812%" height="15" fill="rgb(210,9,12)" fg:x="1097" fg:w="1"/><text x="89.3645%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="89.1145%" y="325" width="0.0812%" height="15" fill="rgb(235,99,33)" fg:x="1097" fg:w="1"/><text x="89.3645%" y="335.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (19 samples, 1.54%)</title><rect x="87.9773%" y="549" width="1.5435%" height="15" fill="rgb(230,11,38)" fg:x="1083" fg:w="19"/><text x="88.2273%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.57%)</title><rect x="88.9521%" y="533" width="0.5686%" height="15" fill="rgb(217,129,0)" fg:x="1095" fg:w="7"/><text x="89.2021%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.57%)</title><rect x="88.9521%" y="517" width="0.5686%" height="15" fill="rgb(222,198,4)" fg:x="1095" fg:w="7"/><text x="89.2021%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="89.1958%" y="501" width="0.3249%" height="15" fill="rgb(246,170,27)" fg:x="1098" fg:w="4"/><text x="89.4458%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="89.1958%" y="485" width="0.3249%" height="15" fill="rgb(229,17,28)" fg:x="1098" fg:w="4"/><text x="89.4458%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (4 samples, 0.32%)</title><rect x="89.1958%" y="469" width="0.3249%" height="15" fill="rgb(233,198,48)" fg:x="1098" fg:w="4"/><text x="89.4458%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (4 samples, 0.32%)</title><rect x="89.1958%" y="453" width="0.3249%" height="15" fill="rgb(238,103,23)" fg:x="1098" fg:w="4"/><text x="89.4458%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (4 samples, 0.32%)</title><rect x="89.1958%" y="437" width="0.3249%" height="15" fill="rgb(206,91,41)" fg:x="1098" fg:w="4"/><text x="89.4458%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="89.2770%" y="421" width="0.2437%" height="15" fill="rgb(227,34,25)" fg:x="1099" fg:w="3"/><text x="89.5270%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="89.2770%" y="405" width="0.2437%" height="15" fill="rgb(210,110,44)" fg:x="1099" fg:w="3"/><text x="89.5270%" y="415.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="89.4395%" y="389" width="0.0812%" height="15" fill="rgb(216,189,8)" fg:x="1101" fg:w="1"/><text x="89.6895%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="89.6019%" y="533" width="0.0812%" height="15" fill="rgb(234,9,46)" fg:x="1103" fg:w="1"/><text x="89.8519%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="89.6019%" y="517" width="0.0812%" height="15" fill="rgb(251,200,5)" fg:x="1103" fg:w="1"/><text x="89.8519%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.6019%" y="501" width="0.0812%" height="15" fill="rgb(238,165,37)" fg:x="1103" fg:w="1"/><text x="89.8519%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.7644%" y="261" width="0.0812%" height="15" fill="rgb(232,77,38)" fg:x="1105" fg:w="1"/><text x="90.0144%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.7644%" y="245" width="0.0812%" height="15" fill="rgb(253,179,33)" fg:x="1105" fg:w="1"/><text x="90.0144%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="89.7644%" y="373" width="0.1625%" height="15" fill="rgb(240,13,35)" fg:x="1105" fg:w="2"/><text x="90.0144%" y="383.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="89.7644%" y="357" width="0.1625%" height="15" fill="rgb(242,150,49)" fg:x="1105" fg:w="2"/><text x="90.0144%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="89.7644%" y="341" width="0.1625%" height="15" fill="rgb(237,176,28)" fg:x="1105" fg:w="2"/><text x="90.0144%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.7644%" y="325" width="0.1625%" height="15" fill="rgb(214,176,33)" fg:x="1105" fg:w="2"/><text x="90.0144%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.7644%" y="309" width="0.1625%" height="15" fill="rgb(214,25,12)" fg:x="1105" fg:w="2"/><text x="90.0144%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.7644%" y="293" width="0.1625%" height="15" fill="rgb(238,190,20)" fg:x="1105" fg:w="2"/><text x="90.0144%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.7644%" y="277" width="0.1625%" height="15" fill="rgb(208,11,19)" fg:x="1105" fg:w="2"/><text x="90.0144%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.8457%" y="261" width="0.0812%" height="15" fill="rgb(239,90,4)" fg:x="1106" fg:w="1"/><text x="90.0957%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.8457%" y="245" width="0.0812%" height="15" fill="rgb(248,110,3)" fg:x="1106" fg:w="1"/><text x="90.0957%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.8457%" y="229" width="0.0812%" height="15" fill="rgb(210,41,30)" fg:x="1106" fg:w="1"/><text x="90.0957%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.8457%" y="213" width="0.0812%" height="15" fill="rgb(239,36,8)" fg:x="1106" fg:w="1"/><text x="90.0957%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.8457%" y="197" width="0.0812%" height="15" fill="rgb(237,201,47)" fg:x="1106" fg:w="1"/><text x="90.0957%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.8457%" y="181" width="0.0812%" height="15" fill="rgb(224,140,29)" fg:x="1106" fg:w="1"/><text x="90.0957%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.8457%" y="165" width="0.0812%" height="15" fill="rgb(231,209,17)" fg:x="1106" fg:w="1"/><text x="90.0957%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.8457%" y="149" width="0.0812%" height="15" fill="rgb(249,196,1)" fg:x="1106" fg:w="1"/><text x="90.0957%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.8457%" y="133" width="0.0812%" height="15" fill="rgb(223,207,51)" fg:x="1106" fg:w="1"/><text x="90.0957%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.8457%" y="117" width="0.0812%" height="15" fill="rgb(210,14,40)" fg:x="1106" fg:w="1"/><text x="90.0957%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.8457%" y="101" width="0.0812%" height="15" fill="rgb(250,20,52)" fg:x="1106" fg:w="1"/><text x="90.0957%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.8457%" y="85" width="0.0812%" height="15" fill="rgb(241,46,11)" fg:x="1106" fg:w="1"/><text x="90.0957%" y="95.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.9269%" y="325" width="0.0812%" height="15" fill="rgb(219,105,5)" fg:x="1107" fg:w="1"/><text x="90.1769%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.9269%" y="309" width="0.0812%" height="15" fill="rgb(252,77,35)" fg:x="1107" fg:w="1"/><text x="90.1769%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.9269%" y="293" width="0.0812%" height="15" fill="rgb(243,119,2)" fg:x="1107" fg:w="1"/><text x="90.1769%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.9269%" y="277" width="0.0812%" height="15" fill="rgb(206,82,28)" fg:x="1107" fg:w="1"/><text x="90.1769%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.9269%" y="261" width="0.0812%" height="15" fill="rgb(227,120,12)" fg:x="1107" fg:w="1"/><text x="90.1769%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.9269%" y="245" width="0.0812%" height="15" fill="rgb(229,134,41)" fg:x="1107" fg:w="1"/><text x="90.1769%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.9269%" y="229" width="0.0812%" height="15" fill="rgb(239,96,32)" fg:x="1107" fg:w="1"/><text x="90.1769%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.9269%" y="213" width="0.0812%" height="15" fill="rgb(225,46,27)" fg:x="1107" fg:w="1"/><text x="90.1769%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.9269%" y="197" width="0.0812%" height="15" fill="rgb(215,168,2)" fg:x="1107" fg:w="1"/><text x="90.1769%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.9269%" y="181" width="0.0812%" height="15" fill="rgb(207,170,52)" fg:x="1107" fg:w="1"/><text x="90.1769%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.9269%" y="165" width="0.0812%" height="15" fill="rgb(237,198,36)" fg:x="1107" fg:w="1"/><text x="90.1769%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.9269%" y="149" width="0.0812%" height="15" fill="rgb(213,27,14)" fg:x="1107" fg:w="1"/><text x="90.1769%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.9269%" y="133" width="0.0812%" height="15" fill="rgb(218,77,5)" fg:x="1107" fg:w="1"/><text x="90.1769%" y="143.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.0081%" y="197" width="0.0812%" height="15" fill="rgb(230,219,39)" fg:x="1108" fg:w="1"/><text x="90.2581%" y="207.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (5 samples, 0.41%)</title><rect x="89.7644%" y="405" width="0.4062%" height="15" fill="rgb(245,177,7)" fg:x="1105" fg:w="5"/><text x="90.0144%" y="415.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.41%)</title><rect x="89.7644%" y="389" width="0.4062%" height="15" fill="rgb(246,44,46)" fg:x="1105" fg:w="5"/><text x="90.0144%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="89.9269%" y="373" width="0.2437%" height="15" fill="rgb(207,173,15)" fg:x="1107" fg:w="3"/><text x="90.1769%" y="383.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="89.9269%" y="357" width="0.2437%" height="15" fill="rgb(245,170,50)" fg:x="1107" fg:w="3"/><text x="90.1769%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="89.9269%" y="341" width="0.2437%" height="15" fill="rgb(233,156,21)" fg:x="1107" fg:w="3"/><text x="90.1769%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="90.0081%" y="325" width="0.1625%" height="15" fill="rgb(253,146,27)" fg:x="1108" fg:w="2"/><text x="90.2581%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="90.0081%" y="309" width="0.1625%" height="15" fill="rgb(247,66,29)" fg:x="1108" fg:w="2"/><text x="90.2581%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="90.0081%" y="293" width="0.1625%" height="15" fill="rgb(218,207,26)" fg:x="1108" fg:w="2"/><text x="90.2581%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="90.0081%" y="277" width="0.1625%" height="15" fill="rgb(234,93,26)" fg:x="1108" fg:w="2"/><text x="90.2581%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="90.0081%" y="261" width="0.1625%" height="15" fill="rgb(214,75,48)" fg:x="1108" fg:w="2"/><text x="90.2581%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="90.0081%" y="245" width="0.1625%" height="15" fill="rgb(229,119,22)" fg:x="1108" fg:w="2"/><text x="90.2581%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="90.0081%" y="229" width="0.1625%" height="15" fill="rgb(226,153,19)" fg:x="1108" fg:w="2"/><text x="90.2581%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="90.0081%" y="213" width="0.1625%" height="15" fill="rgb(220,204,36)" fg:x="1108" fg:w="2"/><text x="90.2581%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.0894%" y="197" width="0.0812%" height="15" fill="rgb(253,181,43)" fg:x="1109" fg:w="1"/><text x="90.3394%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.0894%" y="181" width="0.0812%" height="15" fill="rgb(211,41,51)" fg:x="1109" fg:w="1"/><text x="90.3394%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.0894%" y="165" width="0.0812%" height="15" fill="rgb(207,215,0)" fg:x="1109" fg:w="1"/><text x="90.3394%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="90.1706%" y="389" width="0.0812%" height="15" fill="rgb(212,153,10)" fg:x="1110" fg:w="1"/><text x="90.4206%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.1706%" y="373" width="0.0812%" height="15" fill="rgb(251,171,36)" fg:x="1110" fg:w="1"/><text x="90.4206%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.4143%" y="293" width="0.0812%" height="15" fill="rgb(225,219,41)" fg:x="1113" fg:w="1"/><text x="90.6643%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.4143%" y="277" width="0.0812%" height="15" fill="rgb(208,200,1)" fg:x="1113" fg:w="1"/><text x="90.6643%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="90.3331%" y="309" width="0.2437%" height="15" fill="rgb(206,75,47)" fg:x="1112" fg:w="3"/><text x="90.5831%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.4955%" y="293" width="0.0812%" height="15" fill="rgb(248,3,16)" fg:x="1114" fg:w="1"/><text x="90.7455%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.4955%" y="277" width="0.0812%" height="15" fill="rgb(242,157,36)" fg:x="1114" fg:w="1"/><text x="90.7455%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.4955%" y="261" width="0.0812%" height="15" fill="rgb(215,175,11)" fg:x="1114" fg:w="1"/><text x="90.7455%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.4955%" y="245" width="0.0812%" height="15" fill="rgb(252,222,22)" fg:x="1114" fg:w="1"/><text x="90.7455%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.4955%" y="229" width="0.0812%" height="15" fill="rgb(250,121,35)" fg:x="1114" fg:w="1"/><text x="90.7455%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.4955%" y="213" width="0.0812%" height="15" fill="rgb(233,120,49)" fg:x="1114" fg:w="1"/><text x="90.7455%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.4955%" y="197" width="0.0812%" height="15" fill="rgb(205,201,14)" fg:x="1114" fg:w="1"/><text x="90.7455%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.4955%" y="181" width="0.0812%" height="15" fill="rgb(219,58,45)" fg:x="1114" fg:w="1"/><text x="90.7455%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.4955%" y="165" width="0.0812%" height="15" fill="rgb(251,65,12)" fg:x="1114" fg:w="1"/><text x="90.7455%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.4955%" y="149" width="0.0812%" height="15" fill="rgb(224,47,31)" fg:x="1114" fg:w="1"/><text x="90.7455%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.4955%" y="133" width="0.0812%" height="15" fill="rgb(233,74,26)" fg:x="1114" fg:w="1"/><text x="90.7455%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.4955%" y="117" width="0.0812%" height="15" fill="rgb(231,211,31)" fg:x="1114" fg:w="1"/><text x="90.7455%" y="127.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="90.3331%" y="357" width="0.3249%" height="15" fill="rgb(239,167,5)" fg:x="1112" fg:w="4"/><text x="90.5831%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="90.3331%" y="341" width="0.3249%" height="15" fill="rgb(241,85,0)" fg:x="1112" fg:w="4"/><text x="90.5831%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="90.3331%" y="325" width="0.3249%" height="15" fill="rgb(229,130,21)" fg:x="1112" fg:w="4"/><text x="90.5831%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.5768%" y="309" width="0.0812%" height="15" fill="rgb(254,84,49)" fg:x="1115" fg:w="1"/><text x="90.8268%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.57%)</title><rect x="90.1706%" y="405" width="0.5686%" height="15" fill="rgb(235,85,21)" fg:x="1110" fg:w="7"/><text x="90.4206%" y="415.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.49%)</title><rect x="90.2518%" y="389" width="0.4874%" height="15" fill="rgb(246,128,52)" fg:x="1111" fg:w="6"/><text x="90.5018%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.49%)</title><rect x="90.2518%" y="373" width="0.4874%" height="15" fill="rgb(243,114,49)" fg:x="1111" fg:w="6"/><text x="90.5018%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.6580%" y="357" width="0.0812%" height="15" fill="rgb(240,224,22)" fg:x="1116" fg:w="1"/><text x="90.9080%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.6580%" y="341" width="0.0812%" height="15" fill="rgb(247,201,52)" fg:x="1116" fg:w="1"/><text x="90.9080%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.6580%" y="325" width="0.0812%" height="15" fill="rgb(231,70,45)" fg:x="1116" fg:w="1"/><text x="90.9080%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.6580%" y="309" width="0.0812%" height="15" fill="rgb(217,215,20)" fg:x="1116" fg:w="1"/><text x="90.9080%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="90.6580%" y="293" width="0.0812%" height="15" fill="rgb(226,170,30)" fg:x="1116" fg:w="1"/><text x="90.9080%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.6580%" y="277" width="0.0812%" height="15" fill="rgb(220,190,43)" fg:x="1116" fg:w="1"/><text x="90.9080%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.6580%" y="261" width="0.0812%" height="15" fill="rgb(218,20,18)" fg:x="1116" fg:w="1"/><text x="90.9080%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.6580%" y="245" width="0.0812%" height="15" fill="rgb(245,37,26)" fg:x="1116" fg:w="1"/><text x="90.9080%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.6580%" y="229" width="0.0812%" height="15" fill="rgb(241,127,29)" fg:x="1116" fg:w="1"/><text x="90.9080%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="90.7392%" y="373" width="0.0812%" height="15" fill="rgb(241,33,26)" fg:x="1117" fg:w="1"/><text x="90.9892%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="90.7392%" y="357" width="0.0812%" height="15" fill="rgb(220,106,21)" fg:x="1117" fg:w="1"/><text x="90.9892%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.8205%" y="341" width="0.0812%" height="15" fill="rgb(225,125,35)" fg:x="1118" fg:w="1"/><text x="91.0705%" y="351.50"></text></g><g><title>engine::internal::EntityMap::add_entity (4 samples, 0.32%)</title><rect x="90.7392%" y="405" width="0.3249%" height="15" fill="rgb(248,80,22)" fg:x="1117" fg:w="4"/><text x="90.9892%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="90.7392%" y="389" width="0.3249%" height="15" fill="rgb(231,117,39)" fg:x="1117" fg:w="4"/><text x="90.9892%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="90.8205%" y="373" width="0.2437%" height="15" fill="rgb(239,183,16)" fg:x="1118" fg:w="3"/><text x="91.0705%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="90.8205%" y="357" width="0.2437%" height="15" fill="rgb(221,61,19)" fg:x="1118" fg:w="3"/><text x="91.0705%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="90.9017%" y="341" width="0.1625%" height="15" fill="rgb(239,196,44)" fg:x="1119" fg:w="2"/><text x="91.1517%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.1454%" y="341" width="0.0812%" height="15" fill="rgb(206,113,19)" fg:x="1122" fg:w="1"/><text x="91.3954%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="91.1454%" y="325" width="0.0812%" height="15" fill="rgb(245,114,12)" fg:x="1122" fg:w="1"/><text x="91.3954%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.2266%" y="341" width="0.0812%" height="15" fill="rgb(247,89,39)" fg:x="1123" fg:w="1"/><text x="91.4766%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.2266%" y="325" width="0.0812%" height="15" fill="rgb(213,85,14)" fg:x="1123" fg:w="1"/><text x="91.4766%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="91.3079%" y="309" width="0.2437%" height="15" fill="rgb(249,206,33)" fg:x="1124" fg:w="3"/><text x="91.5579%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.4703%" y="293" width="0.0812%" height="15" fill="rgb(235,167,47)" fg:x="1126" fg:w="1"/><text x="91.7203%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="91.5516%" y="293" width="0.0812%" height="15" fill="rgb(217,177,16)" fg:x="1127" fg:w="1"/><text x="91.8016%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.6328%" y="245" width="0.1625%" height="15" fill="rgb(250,228,29)" fg:x="1128" fg:w="2"/><text x="91.8828%" y="255.50"></text></g><g><title>serde_json::de::from_trait (10 samples, 0.81%)</title><rect x="91.0642%" y="389" width="0.8123%" height="15" fill="rgb(216,195,42)" fg:x="1121" fg:w="10"/><text x="91.3142%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.81%)</title><rect x="91.0642%" y="373" width="0.8123%" height="15" fill="rgb(232,192,32)" fg:x="1121" fg:w="10"/><text x="91.3142%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.73%)</title><rect x="91.1454%" y="357" width="0.7311%" height="15" fill="rgb(211,8,47)" fg:x="1122" fg:w="9"/><text x="91.3954%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.57%)</title><rect x="91.3079%" y="341" width="0.5686%" height="15" fill="rgb(251,201,9)" fg:x="1124" fg:w="7"/><text x="91.5579%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="91.3079%" y="325" width="0.5686%" height="15" fill="rgb(206,185,47)" fg:x="1124" fg:w="7"/><text x="91.5579%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="91.5516%" y="309" width="0.3249%" height="15" fill="rgb(245,54,32)" fg:x="1127" fg:w="4"/><text x="91.8016%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="91.6328%" y="293" width="0.2437%" height="15" fill="rgb(208,1,8)" fg:x="1128" fg:w="3"/><text x="91.8828%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="91.6328%" y="277" width="0.2437%" height="15" fill="rgb(228,57,24)" fg:x="1128" fg:w="3"/><text x="91.8828%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="91.6328%" y="261" width="0.2437%" height="15" fill="rgb(251,24,8)" fg:x="1128" fg:w="3"/><text x="91.8828%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.7953%" y="245" width="0.0812%" height="15" fill="rgb(236,196,50)" fg:x="1130" fg:w="1"/><text x="92.0453%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.7953%" y="229" width="0.0812%" height="15" fill="rgb(246,222,29)" fg:x="1130" fg:w="1"/><text x="92.0453%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.0390%" y="165" width="0.0812%" height="15" fill="rgb(211,34,40)" fg:x="1133" fg:w="1"/><text x="92.2890%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.0390%" y="149" width="0.0812%" height="15" fill="rgb(210,66,51)" fg:x="1133" fg:w="1"/><text x="92.2890%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.0390%" y="133" width="0.0812%" height="15" fill="rgb(250,56,43)" fg:x="1133" fg:w="1"/><text x="92.2890%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="92.0390%" y="309" width="0.1625%" height="15" fill="rgb(240,111,50)" fg:x="1133" fg:w="2"/><text x="92.2890%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="92.0390%" y="293" width="0.1625%" height="15" fill="rgb(209,117,13)" fg:x="1133" fg:w="2"/><text x="92.2890%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="92.0390%" y="277" width="0.1625%" height="15" fill="rgb(232,164,45)" fg:x="1133" fg:w="2"/><text x="92.2890%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="92.0390%" y="261" width="0.1625%" height="15" fill="rgb(205,69,32)" fg:x="1133" fg:w="2"/><text x="92.2890%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="92.0390%" y="245" width="0.1625%" height="15" fill="rgb(240,147,45)" fg:x="1133" fg:w="2"/><text x="92.2890%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="92.0390%" y="229" width="0.1625%" height="15" fill="rgb(221,94,48)" fg:x="1133" fg:w="2"/><text x="92.2890%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="92.0390%" y="213" width="0.1625%" height="15" fill="rgb(249,209,17)" fg:x="1133" fg:w="2"/><text x="92.2890%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="92.0390%" y="197" width="0.1625%" height="15" fill="rgb(228,57,28)" fg:x="1133" fg:w="2"/><text x="92.2890%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="92.0390%" y="181" width="0.1625%" height="15" fill="rgb(250,133,26)" fg:x="1133" fg:w="2"/><text x="92.2890%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="92.1202%" y="165" width="0.0812%" height="15" fill="rgb(254,15,16)" fg:x="1134" fg:w="1"/><text x="92.3702%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.1202%" y="149" width="0.0812%" height="15" fill="rgb(209,147,42)" fg:x="1134" fg:w="1"/><text x="92.3702%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.2827%" y="229" width="0.0812%" height="15" fill="rgb(208,5,29)" fg:x="1136" fg:w="1"/><text x="92.5327%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="92.2015%" y="309" width="0.2437%" height="15" fill="rgb(250,73,31)" fg:x="1135" fg:w="3"/><text x="92.4515%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="92.2015%" y="293" width="0.2437%" height="15" fill="rgb(238,45,10)" fg:x="1135" fg:w="3"/><text x="92.4515%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="92.2015%" y="277" width="0.2437%" height="15" fill="rgb(214,104,5)" fg:x="1135" fg:w="3"/><text x="92.4515%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="92.2015%" y="261" width="0.2437%" height="15" fill="rgb(242,217,19)" fg:x="1135" fg:w="3"/><text x="92.4515%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="92.2827%" y="245" width="0.1625%" height="15" fill="rgb(246,113,27)" fg:x="1136" fg:w="2"/><text x="92.5327%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="92.3639%" y="229" width="0.0812%" height="15" fill="rgb(221,34,27)" fg:x="1137" fg:w="1"/><text x="92.6139%" y="239.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="92.5264%" y="261" width="0.0812%" height="15" fill="rgb(246,109,6)" fg:x="1139" fg:w="1"/><text x="92.7764%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="92.5264%" y="245" width="0.0812%" height="15" fill="rgb(217,12,25)" fg:x="1139" fg:w="1"/><text x="92.7764%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.5264%" y="229" width="0.0812%" height="15" fill="rgb(250,195,5)" fg:x="1139" fg:w="1"/><text x="92.7764%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.5264%" y="213" width="0.0812%" height="15" fill="rgb(244,140,45)" fg:x="1139" fg:w="1"/><text x="92.7764%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.5264%" y="197" width="0.0812%" height="15" fill="rgb(230,64,14)" fg:x="1139" fg:w="1"/><text x="92.7764%" y="207.50"></text></g><g><title>core::iter::adapters::try_process (38 samples, 3.09%)</title><rect x="89.6832%" y="485" width="3.0869%" height="15" fill="rgb(206,27,27)" fg:x="1104" fg:w="38"/><text x="89.9332%" y="495.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (38 samples, 3.09%)</title><rect x="89.6832%" y="469" width="3.0869%" height="15" fill="rgb(230,14,50)" fg:x="1104" fg:w="38"/><text x="89.9332%" y="479.50">&lt;al..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (38 samples, 3.09%)</title><rect x="89.6832%" y="453" width="3.0869%" height="15" fill="rgb(237,172,14)" fg:x="1104" fg:w="38"/><text x="89.9332%" y="463.50">&lt;en..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (38 samples, 3.09%)</title><rect x="89.6832%" y="437" width="3.0869%" height="15" fill="rgb(209,25,21)" fg:x="1104" fg:w="38"/><text x="89.9332%" y="447.50">&lt;en..</text></g><g><title>engine::internal::Entities::add_persisted (37 samples, 3.01%)</title><rect x="89.7644%" y="421" width="3.0057%" height="15" fill="rgb(248,148,22)" fg:x="1105" fg:w="37"/><text x="90.0144%" y="431.50">eng..</text></g><g><title>kernel::model::entity::Entity::from_str (21 samples, 1.71%)</title><rect x="91.0642%" y="405" width="1.7059%" height="15" fill="rgb(234,100,22)" fg:x="1121" fg:w="21"/><text x="91.3142%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.89%)</title><rect x="91.8765%" y="389" width="0.8936%" height="15" fill="rgb(210,20,30)" fg:x="1131" fg:w="11"/><text x="92.1265%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.89%)</title><rect x="91.8765%" y="373" width="0.8936%" height="15" fill="rgb(232,58,0)" fg:x="1131" fg:w="11"/><text x="92.1265%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (9 samples, 0.73%)</title><rect x="92.0390%" y="357" width="0.7311%" height="15" fill="rgb(221,68,13)" fg:x="1133" fg:w="9"/><text x="92.2890%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.73%)</title><rect x="92.0390%" y="341" width="0.7311%" height="15" fill="rgb(231,194,11)" fg:x="1133" fg:w="9"/><text x="92.2890%" y="351.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.73%)</title><rect x="92.0390%" y="325" width="0.7311%" height="15" fill="rgb(235,51,41)" fg:x="1133" fg:w="9"/><text x="92.2890%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="92.4452%" y="309" width="0.3249%" height="15" fill="rgb(240,50,32)" fg:x="1138" fg:w="4"/><text x="92.6952%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="92.4452%" y="293" width="0.3249%" height="15" fill="rgb(240,185,36)" fg:x="1138" fg:w="4"/><text x="92.6952%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="92.5264%" y="277" width="0.2437%" height="15" fill="rgb(211,168,15)" fg:x="1139" fg:w="3"/><text x="92.7764%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.6076%" y="261" width="0.1625%" height="15" fill="rgb(221,70,0)" fg:x="1140" fg:w="2"/><text x="92.8576%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="92.6076%" y="245" width="0.1625%" height="15" fill="rgb(205,21,33)" fg:x="1140" fg:w="2"/><text x="92.8576%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="92.6889%" y="229" width="0.0812%" height="15" fill="rgb(225,106,10)" fg:x="1141" fg:w="1"/><text x="92.9389%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.6889%" y="213" width="0.0812%" height="15" fill="rgb(236,200,50)" fg:x="1141" fg:w="1"/><text x="92.9389%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.6889%" y="197" width="0.0812%" height="15" fill="rgb(249,93,23)" fg:x="1141" fg:w="1"/><text x="92.9389%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="92.6889%" y="181" width="0.0812%" height="15" fill="rgb(244,115,35)" fg:x="1141" fg:w="1"/><text x="92.9389%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.6889%" y="165" width="0.0812%" height="15" fill="rgb(231,129,47)" fg:x="1141" fg:w="1"/><text x="92.9389%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.6889%" y="149" width="0.0812%" height="15" fill="rgb(225,160,50)" fg:x="1141" fg:w="1"/><text x="92.9389%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="92.6889%" y="133" width="0.0812%" height="15" fill="rgb(218,135,23)" fg:x="1141" fg:w="1"/><text x="92.9389%" y="143.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.6889%" y="117" width="0.0812%" height="15" fill="rgb(227,119,14)" fg:x="1141" fg:w="1"/><text x="92.9389%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.6889%" y="101" width="0.0812%" height="15" fill="rgb(242,138,13)" fg:x="1141" fg:w="1"/><text x="92.9389%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.6889%" y="85" width="0.0812%" height="15" fill="rgb(215,11,16)" fg:x="1141" fg:w="1"/><text x="92.9389%" y="95.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.6889%" y="69" width="0.0812%" height="15" fill="rgb(234,170,50)" fg:x="1141" fg:w="1"/><text x="92.9389%" y="79.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (39 samples, 3.17%)</title><rect x="89.6832%" y="501" width="3.1682%" height="15" fill="rgb(233,34,20)" fg:x="1104" fg:w="39"/><text x="89.9332%" y="511.50">&lt;pl..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="92.7701%" y="485" width="0.0812%" height="15" fill="rgb(237,100,45)" fg:x="1142" fg:w="1"/><text x="93.0201%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.7701%" y="469" width="0.0812%" height="15" fill="rgb(231,184,36)" fg:x="1142" fg:w="1"/><text x="93.0201%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.8513%" y="469" width="0.0812%" height="15" fill="rgb(252,93,2)" fg:x="1143" fg:w="1"/><text x="93.1013%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (63 samples, 5.12%)</title><rect x="87.8960%" y="581" width="5.1178%" height="15" fill="rgb(248,176,47)" fg:x="1082" fg:w="63"/><text x="88.1460%" y="591.50">&lt;alloc..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (63 samples, 5.12%)</title><rect x="87.8960%" y="565" width="5.1178%" height="15" fill="rgb(249,125,23)" fg:x="1082" fg:w="63"/><text x="88.1460%" y="575.50">&lt;core:..</text></g><g><title>plugins_core::tools::get_contained_keys (43 samples, 3.49%)</title><rect x="89.5207%" y="549" width="3.4931%" height="15" fill="rgb(239,67,42)" fg:x="1102" fg:w="43"/><text x="89.7707%" y="559.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (41 samples, 3.33%)</title><rect x="89.6832%" y="533" width="3.3306%" height="15" fill="rgb(244,162,4)" fg:x="1104" fg:w="41"/><text x="89.9332%" y="543.50">ker..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (41 samples, 3.33%)</title><rect x="89.6832%" y="517" width="3.3306%" height="15" fill="rgb(214,150,38)" fg:x="1104" fg:w="41"/><text x="89.9332%" y="527.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.8513%" y="501" width="0.1625%" height="15" fill="rgb(228,211,28)" fg:x="1143" fg:w="2"/><text x="93.1013%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.8513%" y="485" width="0.1625%" height="15" fill="rgb(212,98,48)" fg:x="1143" fg:w="2"/><text x="93.1013%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.9326%" y="469" width="0.0812%" height="15" fill="rgb(213,45,13)" fg:x="1144" fg:w="1"/><text x="93.1826%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.9326%" y="453" width="0.0812%" height="15" fill="rgb(218,35,29)" fg:x="1144" fg:w="1"/><text x="93.1826%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.1763%" y="533" width="0.0812%" height="15" fill="rgb(244,13,3)" fg:x="1147" fg:w="1"/><text x="93.4263%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.1763%" y="517" width="0.0812%" height="15" fill="rgb(235,170,19)" fg:x="1147" fg:w="1"/><text x="93.4263%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.1763%" y="501" width="0.0812%" height="15" fill="rgb(233,193,43)" fg:x="1147" fg:w="1"/><text x="93.4263%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.1763%" y="485" width="0.0812%" height="15" fill="rgb(228,223,20)" fg:x="1147" fg:w="1"/><text x="93.4263%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.1763%" y="469" width="0.0812%" height="15" fill="rgb(208,85,54)" fg:x="1147" fg:w="1"/><text x="93.4263%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.1763%" y="453" width="0.0812%" height="15" fill="rgb(254,14,45)" fg:x="1147" fg:w="1"/><text x="93.4263%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.1763%" y="437" width="0.0812%" height="15" fill="rgb(247,99,29)" fg:x="1147" fg:w="1"/><text x="93.4263%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.1763%" y="421" width="0.0812%" height="15" fill="rgb(225,180,54)" fg:x="1147" fg:w="1"/><text x="93.4263%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.1763%" y="405" width="0.0812%" height="15" fill="rgb(239,88,43)" fg:x="1147" fg:w="1"/><text x="93.4263%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.1763%" y="389" width="0.0812%" height="15" fill="rgb(209,47,11)" fg:x="1147" fg:w="1"/><text x="93.4263%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.1763%" y="373" width="0.0812%" height="15" fill="rgb(219,179,23)" fg:x="1147" fg:w="1"/><text x="93.4263%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.1763%" y="357" width="0.0812%" height="15" fill="rgb(213,183,19)" fg:x="1147" fg:w="1"/><text x="93.4263%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="93.2575%" y="517" width="0.0812%" height="15" fill="rgb(210,11,9)" fg:x="1148" fg:w="1"/><text x="93.5075%" y="527.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="93.2575%" y="501" width="0.0812%" height="15" fill="rgb(239,194,16)" fg:x="1148" fg:w="1"/><text x="93.5075%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.2575%" y="485" width="0.0812%" height="15" fill="rgb(246,23,50)" fg:x="1148" fg:w="1"/><text x="93.5075%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.3387%" y="421" width="0.0812%" height="15" fill="rgb(245,10,41)" fg:x="1149" fg:w="1"/><text x="93.5887%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.3387%" y="405" width="0.0812%" height="15" fill="rgb(228,43,24)" fg:x="1149" fg:w="1"/><text x="93.5887%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.3387%" y="389" width="0.0812%" height="15" fill="rgb(220,151,0)" fg:x="1149" fg:w="1"/><text x="93.5887%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.3387%" y="373" width="0.0812%" height="15" fill="rgb(232,219,10)" fg:x="1149" fg:w="1"/><text x="93.5887%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.3387%" y="357" width="0.0812%" height="15" fill="rgb(227,217,48)" fg:x="1149" fg:w="1"/><text x="93.5887%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="93.3387%" y="341" width="0.0812%" height="15" fill="rgb(210,66,35)" fg:x="1149" fg:w="1"/><text x="93.5887%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="93.3387%" y="325" width="0.0812%" height="15" fill="rgb(254,6,7)" fg:x="1149" fg:w="1"/><text x="93.5887%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.4200%" y="389" width="0.0812%" height="15" fill="rgb(235,222,42)" fg:x="1150" fg:w="1"/><text x="93.6700%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.4200%" y="373" width="0.0812%" height="15" fill="rgb(245,126,5)" fg:x="1150" fg:w="1"/><text x="93.6700%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="93.4200%" y="357" width="0.0812%" height="15" fill="rgb(215,73,17)" fg:x="1150" fg:w="1"/><text x="93.6700%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="93.4200%" y="341" width="0.0812%" height="15" fill="rgb(219,198,52)" fg:x="1150" fg:w="1"/><text x="93.6700%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="93.4200%" y="325" width="0.0812%" height="15" fill="rgb(217,159,18)" fg:x="1150" fg:w="1"/><text x="93.6700%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="93.4200%" y="309" width="0.0812%" height="15" fill="rgb(212,177,18)" fg:x="1150" fg:w="1"/><text x="93.6700%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="93.4200%" y="293" width="0.0812%" height="15" fill="rgb(241,10,11)" fg:x="1150" fg:w="1"/><text x="93.6700%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="93.4200%" y="277" width="0.0812%" height="15" fill="rgb(232,114,35)" fg:x="1150" fg:w="1"/><text x="93.6700%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="93.4200%" y="261" width="0.0812%" height="15" fill="rgb(238,222,8)" fg:x="1150" fg:w="1"/><text x="93.6700%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="93.4200%" y="245" width="0.0812%" height="15" fill="rgb(251,153,44)" fg:x="1150" fg:w="1"/><text x="93.6700%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="93.4200%" y="229" width="0.0812%" height="15" fill="rgb(210,140,51)" fg:x="1150" fg:w="1"/><text x="93.6700%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.4200%" y="213" width="0.0812%" height="15" fill="rgb(222,63,0)" fg:x="1150" fg:w="1"/><text x="93.6700%" y="223.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (5 samples, 0.41%)</title><rect x="93.2575%" y="533" width="0.4062%" height="15" fill="rgb(240,18,40)" fg:x="1148" fg:w="5"/><text x="93.5075%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="93.3387%" y="517" width="0.3249%" height="15" fill="rgb(237,88,16)" fg:x="1149" fg:w="4"/><text x="93.5887%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.32%)</title><rect x="93.3387%" y="501" width="0.3249%" height="15" fill="rgb(251,117,13)" fg:x="1149" fg:w="4"/><text x="93.5887%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.32%)</title><rect x="93.3387%" y="485" width="0.3249%" height="15" fill="rgb(251,228,8)" fg:x="1149" fg:w="4"/><text x="93.5887%" y="495.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="93.3387%" y="469" width="0.3249%" height="15" fill="rgb(205,107,49)" fg:x="1149" fg:w="4"/><text x="93.5887%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="93.3387%" y="453" width="0.3249%" height="15" fill="rgb(238,72,41)" fg:x="1149" fg:w="4"/><text x="93.5887%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="93.3387%" y="437" width="0.3249%" height="15" fill="rgb(248,183,52)" fg:x="1149" fg:w="4"/><text x="93.5887%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="93.4200%" y="421" width="0.2437%" height="15" fill="rgb(215,58,20)" fg:x="1150" fg:w="3"/><text x="93.6700%" y="431.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="93.4200%" y="405" width="0.2437%" height="15" fill="rgb(209,49,13)" fg:x="1150" fg:w="3"/><text x="93.6700%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="93.5012%" y="389" width="0.1625%" height="15" fill="rgb(208,113,17)" fg:x="1151" fg:w="2"/><text x="93.7512%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="93.5012%" y="373" width="0.1625%" height="15" fill="rgb(208,14,22)" fg:x="1151" fg:w="2"/><text x="93.7512%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="93.5012%" y="357" width="0.1625%" height="15" fill="rgb(222,95,2)" fg:x="1151" fg:w="2"/><text x="93.7512%" y="367.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="93.5012%" y="341" width="0.1625%" height="15" fill="rgb(253,180,37)" fg:x="1151" fg:w="2"/><text x="93.7512%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="93.5012%" y="325" width="0.1625%" height="15" fill="rgb(250,81,33)" fg:x="1151" fg:w="2"/><text x="93.7512%" y="335.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.16%)</title><rect x="93.5012%" y="309" width="0.1625%" height="15" fill="rgb(251,151,41)" fg:x="1151" fg:w="2"/><text x="93.7512%" y="319.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (2 samples, 0.16%)</title><rect x="93.5012%" y="293" width="0.1625%" height="15" fill="rgb(210,135,17)" fg:x="1151" fg:w="2"/><text x="93.7512%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="93.5012%" y="277" width="0.1625%" height="15" fill="rgb(239,21,29)" fg:x="1151" fg:w="2"/><text x="93.7512%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.5825%" y="261" width="0.0812%" height="15" fill="rgb(231,215,16)" fg:x="1152" fg:w="1"/><text x="93.8325%" y="271.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="93.5825%" y="245" width="0.0812%" height="15" fill="rgb(239,151,54)" fg:x="1152" fg:w="1"/><text x="93.8325%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="93.5825%" y="229" width="0.0812%" height="15" fill="rgb(222,122,38)" fg:x="1152" fg:w="1"/><text x="93.8325%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="93.5825%" y="213" width="0.0812%" height="15" fill="rgb(243,128,1)" fg:x="1152" fg:w="1"/><text x="93.8325%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="93.5825%" y="197" width="0.0812%" height="15" fill="rgb(225,74,21)" fg:x="1152" fg:w="1"/><text x="93.8325%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="93.5825%" y="181" width="0.0812%" height="15" fill="rgb(216,210,10)" fg:x="1152" fg:w="1"/><text x="93.8325%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="94.3948%" y="277" width="0.0812%" height="15" fill="rgb(228,76,19)" fg:x="1162" fg:w="1"/><text x="94.6448%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.3948%" y="261" width="0.0812%" height="15" fill="rgb(236,80,34)" fg:x="1162" fg:w="1"/><text x="94.6448%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="94.4760%" y="245" width="0.1625%" height="15" fill="rgb(225,173,23)" fg:x="1163" fg:w="2"/><text x="94.7260%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.5573%" y="229" width="0.0812%" height="15" fill="rgb(253,38,1)" fg:x="1164" fg:w="1"/><text x="94.8073%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="94.5573%" y="213" width="0.0812%" height="15" fill="rgb(206,155,35)" fg:x="1164" fg:w="1"/><text x="94.8073%" y="223.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (5 samples, 0.41%)</title><rect x="94.4760%" y="277" width="0.4062%" height="15" fill="rgb(254,27,53)" fg:x="1163" fg:w="5"/><text x="94.7260%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (5 samples, 0.41%)</title><rect x="94.4760%" y="261" width="0.4062%" height="15" fill="rgb(225,52,41)" fg:x="1163" fg:w="5"/><text x="94.7260%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="94.6385%" y="245" width="0.2437%" height="15" fill="rgb(244,53,18)" fg:x="1165" fg:w="3"/><text x="94.8885%" y="255.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="94.6385%" y="229" width="0.2437%" height="15" fill="rgb(254,206,48)" fg:x="1165" fg:w="3"/><text x="94.8885%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.8822%" y="277" width="0.0812%" height="15" fill="rgb(236,182,23)" fg:x="1168" fg:w="1"/><text x="95.1322%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.73%)</title><rect x="94.3136%" y="341" width="0.7311%" height="15" fill="rgb(236,191,37)" fg:x="1161" fg:w="9"/><text x="94.5636%" y="351.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (9 samples, 0.73%)</title><rect x="94.3136%" y="325" width="0.7311%" height="15" fill="rgb(245,53,8)" fg:x="1161" fg:w="9"/><text x="94.5636%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (9 samples, 0.73%)</title><rect x="94.3136%" y="309" width="0.7311%" height="15" fill="rgb(245,147,9)" fg:x="1161" fg:w="9"/><text x="94.5636%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.73%)</title><rect x="94.3136%" y="293" width="0.7311%" height="15" fill="rgb(218,24,48)" fg:x="1161" fg:w="9"/><text x="94.5636%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.9634%" y="277" width="0.0812%" height="15" fill="rgb(254,23,9)" fg:x="1169" fg:w="1"/><text x="95.2134%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (10 samples, 0.81%)</title><rect x="94.3136%" y="357" width="0.8123%" height="15" fill="rgb(244,105,9)" fg:x="1161" fg:w="10"/><text x="94.5636%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="95.0447%" y="341" width="0.0812%" height="15" fill="rgb(212,142,22)" fg:x="1170" fg:w="1"/><text x="95.2947%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.0447%" y="325" width="0.0812%" height="15" fill="rgb(221,114,49)" fg:x="1170" fg:w="1"/><text x="95.2947%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (12 samples, 0.97%)</title><rect x="94.2323%" y="373" width="0.9748%" height="15" fill="rgb(223,210,25)" fg:x="1160" fg:w="12"/><text x="94.4823%" y="383.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.1259%" y="357" width="0.0812%" height="15" fill="rgb(235,162,44)" fg:x="1171" fg:w="1"/><text x="95.3759%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="95.1259%" y="341" width="0.0812%" height="15" fill="rgb(237,65,45)" fg:x="1171" fg:w="1"/><text x="95.3759%" y="351.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="95.1259%" y="325" width="0.0812%" height="15" fill="rgb(208,79,9)" fg:x="1171" fg:w="1"/><text x="95.3759%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.1259%" y="309" width="0.0812%" height="15" fill="rgb(215,228,8)" fg:x="1171" fg:w="1"/><text x="95.3759%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="95.1259%" y="293" width="0.0812%" height="15" fill="rgb(205,185,17)" fg:x="1171" fg:w="1"/><text x="95.3759%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.1259%" y="277" width="0.0812%" height="15" fill="rgb(213,62,36)" fg:x="1171" fg:w="1"/><text x="95.3759%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.1259%" y="261" width="0.0812%" height="15" fill="rgb(209,34,9)" fg:x="1171" fg:w="1"/><text x="95.3759%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="95.1259%" y="245" width="0.0812%" height="15" fill="rgb(246,151,27)" fg:x="1171" fg:w="1"/><text x="95.3759%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 1.14%)</title><rect x="94.1511%" y="389" width="1.1373%" height="15" fill="rgb(218,206,3)" fg:x="1159" fg:w="14"/><text x="94.4011%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.2071%" y="373" width="0.0812%" height="15" fill="rgb(242,202,1)" fg:x="1172" fg:w="1"/><text x="95.4571%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.2071%" y="357" width="0.0812%" height="15" fill="rgb(227,185,16)" fg:x="1172" fg:w="1"/><text x="95.4571%" y="367.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (17 samples, 1.38%)</title><rect x="94.0699%" y="421" width="1.3810%" height="15" fill="rgb(241,1,14)" fg:x="1158" fg:w="17"/><text x="94.3199%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (17 samples, 1.38%)</title><rect x="94.0699%" y="405" width="1.3810%" height="15" fill="rgb(212,113,25)" fg:x="1158" fg:w="17"/><text x="94.3199%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="95.2884%" y="389" width="0.1625%" height="15" fill="rgb(247,37,43)" fg:x="1173" fg:w="2"/><text x="95.5384%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="95.2884%" y="373" width="0.1625%" height="15" fill="rgb(226,54,8)" fg:x="1173" fg:w="2"/><text x="95.5384%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 1.79%)</title><rect x="93.9074%" y="437" width="1.7872%" height="15" fill="rgb(251,205,25)" fg:x="1156" fg:w="22"/><text x="94.1574%" y="447.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="95.4509%" y="421" width="0.2437%" height="15" fill="rgb(246,87,35)" fg:x="1175" fg:w="3"/><text x="95.7009%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="95.5321%" y="405" width="0.1625%" height="15" fill="rgb(251,145,46)" fg:x="1176" fg:w="2"/><text x="95.7821%" y="415.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (25 samples, 2.03%)</title><rect x="93.7449%" y="469" width="2.0309%" height="15" fill="rgb(210,210,33)" fg:x="1154" fg:w="25"/><text x="93.9949%" y="479.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (25 samples, 2.03%)</title><rect x="93.7449%" y="453" width="2.0309%" height="15" fill="rgb(221,151,11)" fg:x="1154" fg:w="25"/><text x="93.9949%" y="463.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="95.6946%" y="437" width="0.0812%" height="15" fill="rgb(208,160,28)" fg:x="1178" fg:w="1"/><text x="95.9446%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.6946%" y="421" width="0.0812%" height="15" fill="rgb(243,69,29)" fg:x="1178" fg:w="1"/><text x="95.9446%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.7758%" y="469" width="0.0812%" height="15" fill="rgb(224,144,4)" fg:x="1179" fg:w="1"/><text x="96.0258%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29 samples, 2.36%)</title><rect x="93.6637%" y="485" width="2.3558%" height="15" fill="rgb(211,140,38)" fg:x="1153" fg:w="29"/><text x="93.9137%" y="495.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.8570%" y="469" width="0.1625%" height="15" fill="rgb(252,189,15)" fg:x="1180" fg:w="2"/><text x="96.1070%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.9383%" y="453" width="0.0812%" height="15" fill="rgb(251,175,23)" fg:x="1181" fg:w="1"/><text x="96.1883%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="95.9383%" y="437" width="0.0812%" height="15" fill="rgb(212,184,11)" fg:x="1181" fg:w="1"/><text x="96.1883%" y="447.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (30 samples, 2.44%)</title><rect x="93.6637%" y="517" width="2.4370%" height="15" fill="rgb(217,205,6)" fg:x="1153" fg:w="30"/><text x="93.9137%" y="527.50">&lt;r..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (30 samples, 2.44%)</title><rect x="93.6637%" y="501" width="2.4370%" height="15" fill="rgb(235,45,45)" fg:x="1153" fg:w="30"/><text x="93.9137%" y="511.50">&lt;s..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="96.0195%" y="485" width="0.0812%" height="15" fill="rgb(211,157,53)" fg:x="1182" fg:w="1"/><text x="96.2695%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.1820%" y="469" width="0.0812%" height="15" fill="rgb(212,13,8)" fg:x="1184" fg:w="1"/><text x="96.4320%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.2632%" y="469" width="0.0812%" height="15" fill="rgb(218,80,36)" fg:x="1185" fg:w="1"/><text x="96.5132%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="96.3444%" y="469" width="0.0812%" height="15" fill="rgb(211,123,43)" fg:x="1186" fg:w="1"/><text x="96.5944%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="96.3444%" y="453" width="0.0812%" height="15" fill="rgb(206,165,2)" fg:x="1186" fg:w="1"/><text x="96.5944%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.3444%" y="437" width="0.0812%" height="15" fill="rgb(248,63,35)" fg:x="1186" fg:w="1"/><text x="96.5944%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.3444%" y="421" width="0.0812%" height="15" fill="rgb(219,133,41)" fg:x="1186" fg:w="1"/><text x="96.5944%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.3444%" y="405" width="0.0812%" height="15" fill="rgb(206,175,46)" fg:x="1186" fg:w="1"/><text x="96.5944%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="96.4257%" y="469" width="0.1625%" height="15" fill="rgb(224,41,35)" fg:x="1187" fg:w="2"/><text x="96.6757%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="96.4257%" y="453" width="0.1625%" height="15" fill="rgb(226,113,24)" fg:x="1187" fg:w="2"/><text x="96.6757%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.5069%" y="437" width="0.0812%" height="15" fill="rgb(219,51,41)" fg:x="1188" fg:w="1"/><text x="96.7569%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="96.6694%" y="421" width="0.2437%" height="15" fill="rgb(220,145,47)" fg:x="1190" fg:w="3"/><text x="96.9194%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="96.7506%" y="405" width="0.1625%" height="15" fill="rgb(239,121,47)" fg:x="1191" fg:w="2"/><text x="97.0006%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="96.9131%" y="389" width="0.0812%" height="15" fill="rgb(207,60,40)" fg:x="1193" fg:w="1"/><text x="97.1631%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.9131%" y="373" width="0.0812%" height="15" fill="rgb(224,229,11)" fg:x="1193" fg:w="1"/><text x="97.1631%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.9131%" y="357" width="0.0812%" height="15" fill="rgb(252,28,32)" fg:x="1193" fg:w="1"/><text x="97.1631%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.9131%" y="341" width="0.0812%" height="15" fill="rgb(207,52,49)" fg:x="1193" fg:w="1"/><text x="97.1631%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="96.9131%" y="421" width="0.1625%" height="15" fill="rgb(243,51,50)" fg:x="1193" fg:w="2"/><text x="97.1631%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="96.9131%" y="405" width="0.1625%" height="15" fill="rgb(212,92,21)" fg:x="1193" fg:w="2"/><text x="97.1631%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.9943%" y="389" width="0.0812%" height="15" fill="rgb(230,183,50)" fg:x="1194" fg:w="1"/><text x="97.2443%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="97.0755%" y="405" width="0.0812%" height="15" fill="rgb(225,48,9)" fg:x="1195" fg:w="1"/><text x="97.3255%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.2380%" y="389" width="0.0812%" height="15" fill="rgb(254,44,4)" fg:x="1197" fg:w="1"/><text x="97.4880%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.2380%" y="373" width="0.0812%" height="15" fill="rgb(252,128,37)" fg:x="1197" fg:w="1"/><text x="97.4880%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.2380%" y="357" width="0.0812%" height="15" fill="rgb(227,178,8)" fg:x="1197" fg:w="1"/><text x="97.4880%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.41%)</title><rect x="97.4005%" y="373" width="0.4062%" height="15" fill="rgb(205,206,32)" fg:x="1199" fg:w="5"/><text x="97.6505%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.41%)</title><rect x="97.4005%" y="357" width="0.4062%" height="15" fill="rgb(220,218,22)" fg:x="1199" fg:w="5"/><text x="97.6505%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="97.5630%" y="341" width="0.2437%" height="15" fill="rgb(236,41,28)" fg:x="1201" fg:w="3"/><text x="97.8130%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="97.6442%" y="325" width="0.1625%" height="15" fill="rgb(219,37,7)" fg:x="1202" fg:w="2"/><text x="97.8942%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="97.7254%" y="309" width="0.0812%" height="15" fill="rgb(206,160,15)" fg:x="1203" fg:w="1"/><text x="97.9754%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.7254%" y="293" width="0.0812%" height="15" fill="rgb(208,82,21)" fg:x="1203" fg:w="1"/><text x="97.9754%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.7254%" y="277" width="0.0812%" height="15" fill="rgb(226,130,25)" fg:x="1203" fg:w="1"/><text x="97.9754%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.7254%" y="261" width="0.0812%" height="15" fill="rgb(212,72,24)" fg:x="1203" fg:w="1"/><text x="97.9754%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="97.8067%" y="373" width="0.1625%" height="15" fill="rgb(206,28,16)" fg:x="1204" fg:w="2"/><text x="98.0567%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.89%)</title><rect x="97.1568%" y="405" width="0.8936%" height="15" fill="rgb(249,41,5)" fg:x="1196" fg:w="11"/><text x="97.4068%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.73%)</title><rect x="97.3193%" y="389" width="0.7311%" height="15" fill="rgb(233,96,48)" fg:x="1198" fg:w="9"/><text x="97.5693%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="97.9691%" y="373" width="0.0812%" height="15" fill="rgb(240,198,11)" fg:x="1206" fg:w="1"/><text x="98.2191%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="97.9691%" y="357" width="0.0812%" height="15" fill="rgb(209,175,35)" fg:x="1206" fg:w="1"/><text x="98.2191%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (18 samples, 1.46%)</title><rect x="96.6694%" y="437" width="1.4622%" height="15" fill="rgb(214,40,51)" fg:x="1190" fg:w="18"/><text x="96.9194%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.06%)</title><rect x="97.0755%" y="421" width="1.0561%" height="15" fill="rgb(252,56,4)" fg:x="1195" fg:w="13"/><text x="97.3255%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.0504%" y="405" width="0.0812%" height="15" fill="rgb(219,131,5)" fg:x="1207" fg:w="1"/><text x="98.3004%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (21 samples, 1.71%)</title><rect x="96.5881%" y="453" width="1.7059%" height="15" fill="rgb(223,67,53)" fg:x="1189" fg:w="21"/><text x="96.8381%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="98.1316%" y="437" width="0.1625%" height="15" fill="rgb(227,154,8)" fg:x="1208" fg:w="2"/><text x="98.3816%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="98.1316%" y="421" width="0.1625%" height="15" fill="rgb(216,174,51)" fg:x="1208" fg:w="2"/><text x="98.3816%" y="431.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (134 samples, 10.89%)</title><rect x="87.6523%" y="613" width="10.8855%" height="15" fill="rgb(239,60,34)" fg:x="1079" fg:w="134"/><text x="87.9023%" y="623.50">&lt;plugins_rpc::se..</text></g><g><title>core::iter::adapters::try_process (132 samples, 10.72%)</title><rect x="87.8148%" y="597" width="10.7230%" height="15" fill="rgb(236,165,48)" fg:x="1081" fg:w="132"/><text x="88.0648%" y="607.50">core::iter::adap..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (68 samples, 5.52%)</title><rect x="93.0138%" y="581" width="5.5240%" height="15" fill="rgb(210,37,26)" fg:x="1145" fg:w="68"/><text x="93.2638%" y="591.50">alloc::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (68 samples, 5.52%)</title><rect x="93.0138%" y="565" width="5.5240%" height="15" fill="rgb(211,3,17)" fg:x="1145" fg:w="68"/><text x="93.2638%" y="575.50">&lt;core::..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (67 samples, 5.44%)</title><rect x="93.0950%" y="549" width="5.4427%" height="15" fill="rgb(234,88,49)" fg:x="1146" fg:w="67"/><text x="93.3450%" y="559.50">plugins..</text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (60 samples, 4.87%)</title><rect x="93.6637%" y="533" width="4.8741%" height="15" fill="rgb(233,40,17)" fg:x="1153" fg:w="60"/><text x="93.9137%" y="543.50">&lt;rpc_p..</text></g><g><title>kernel::model::EntityPtr::to_json_value (30 samples, 2.44%)</title><rect x="96.1007%" y="517" width="2.4370%" height="15" fill="rgb(235,127,31)" fg:x="1183" fg:w="30"/><text x="96.3507%" y="527.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (30 samples, 2.44%)</title><rect x="96.1007%" y="501" width="2.4370%" height="15" fill="rgb(248,167,17)" fg:x="1183" fg:w="30"/><text x="96.3507%" y="511.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (30 samples, 2.44%)</title><rect x="96.1007%" y="485" width="2.4370%" height="15" fill="rgb(218,179,8)" fg:x="1183" fg:w="30"/><text x="96.3507%" y="495.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (24 samples, 1.95%)</title><rect x="96.5881%" y="469" width="1.9496%" height="15" fill="rgb(216,92,14)" fg:x="1189" fg:w="24"/><text x="96.8381%" y="479.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="98.2941%" y="453" width="0.2437%" height="15" fill="rgb(221,198,46)" fg:x="1210" fg:w="3"/><text x="98.5441%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4565%" y="437" width="0.0812%" height="15" fill="rgb(244,7,25)" fg:x="1212" fg:w="1"/><text x="98.7065%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.4565%" y="421" width="0.0812%" height="15" fill="rgb(233,75,6)" fg:x="1212" fg:w="1"/><text x="98.7065%" y="431.50"></text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (151 samples, 12.27%)</title><rect x="86.3526%" y="661" width="12.2665%" height="15" fill="rgb(240,189,41)" fg:x="1063" fg:w="151"/><text x="86.6026%" y="671.50">kernel::plugins::S..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (151 samples, 12.27%)</title><rect x="86.3526%" y="645" width="12.2665%" height="15" fill="rgb(237,157,21)" fg:x="1063" fg:w="151"/><text x="86.6026%" y="655.50">&lt;plugins_dynlib::D..</text></g><g><title>plugins_rpc::querying::have_surroundings (135 samples, 10.97%)</title><rect x="87.6523%" y="629" width="10.9667%" height="15" fill="rgb(210,136,49)" fg:x="1079" fg:w="135"/><text x="87.9023%" y="639.50">plugins_rpc::que..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.5378%" y="613" width="0.0812%" height="15" fill="rgb(210,68,29)" fg:x="1213" fg:w="1"/><text x="98.7878%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (168 samples, 13.65%)</title><rect x="85.0528%" y="693" width="13.6474%" height="15" fill="rgb(247,207,20)" fg:x="1047" fg:w="168"/><text x="85.3028%" y="703.50">&lt;engine::session::Ses..</text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (168 samples, 13.65%)</title><rect x="85.0528%" y="677" width="13.6474%" height="15" fill="rgb(224,73,48)" fg:x="1047" fg:w="168"/><text x="85.3028%" y="687.50">&lt;engine::perform::Sta..</text></g><g><title>kernel::plugins::mw::apply_middleware (1 samples, 0.08%)</title><rect x="98.6190%" y="661" width="0.0812%" height="15" fill="rgb(215,136,47)" fg:x="1214" fg:w="1"/><text x="98.8690%" y="671.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="98.6190%" y="645" width="0.0812%" height="15" fill="rgb(232,222,16)" fg:x="1214" fg:w="1"/><text x="98.8690%" y="655.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="98.6190%" y="629" width="0.0812%" height="15" fill="rgb(249,202,47)" fg:x="1214" fg:w="1"/><text x="98.8690%" y="639.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="98.6190%" y="613" width="0.0812%" height="15" fill="rgb(236,56,8)" fg:x="1214" fg:w="1"/><text x="98.8690%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="98.6190%" y="597" width="0.0812%" height="15" fill="rgb(222,6,3)" fg:x="1214" fg:w="1"/><text x="98.8690%" y="607.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="98.6190%" y="581" width="0.0812%" height="15" fill="rgb(254,222,28)" fg:x="1214" fg:w="1"/><text x="98.8690%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="98.6190%" y="565" width="0.0812%" height="15" fill="rgb(219,57,23)" fg:x="1214" fg:w="1"/><text x="98.8690%" y="575.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="98.6190%" y="549" width="0.0812%" height="15" fill="rgb(251,106,48)" fg:x="1214" fg:w="1"/><text x="98.8690%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="98.6190%" y="533" width="0.0812%" height="15" fill="rgb(242,2,23)" fg:x="1214" fg:w="1"/><text x="98.8690%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="98.6190%" y="517" width="0.0812%" height="15" fill="rgb(212,109,31)" fg:x="1214" fg:w="1"/><text x="98.8690%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="98.7002%" y="613" width="0.1625%" height="15" fill="rgb(241,9,22)" fg:x="1215" fg:w="2"/><text x="98.9502%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="98.7002%" y="597" width="0.1625%" height="15" fill="rgb(209,64,27)" fg:x="1215" fg:w="2"/><text x="98.9502%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="98.7002%" y="581" width="0.1625%" height="15" fill="rgb(248,13,44)" fg:x="1215" fg:w="2"/><text x="98.9502%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.7002%" y="565" width="0.1625%" height="15" fill="rgb(213,86,6)" fg:x="1215" fg:w="2"/><text x="98.9502%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.7002%" y="549" width="0.1625%" height="15" fill="rgb(247,11,18)" fg:x="1215" fg:w="2"/><text x="98.9502%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.7002%" y="533" width="0.1625%" height="15" fill="rgb(252,31,11)" fg:x="1215" fg:w="2"/><text x="98.9502%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.7815%" y="517" width="0.0812%" height="15" fill="rgb(215,63,51)" fg:x="1216" fg:w="1"/><text x="99.0315%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.7815%" y="501" width="0.0812%" height="15" fill="rgb(222,180,4)" fg:x="1216" fg:w="1"/><text x="99.0315%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.7815%" y="485" width="0.0812%" height="15" fill="rgb(233,4,23)" fg:x="1216" fg:w="1"/><text x="99.0315%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.7815%" y="469" width="0.0812%" height="15" fill="rgb(230,116,22)" fg:x="1216" fg:w="1"/><text x="99.0315%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.7815%" y="453" width="0.0812%" height="15" fill="rgb(222,20,14)" fg:x="1216" fg:w="1"/><text x="99.0315%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.7815%" y="437" width="0.0812%" height="15" fill="rgb(210,176,43)" fg:x="1216" fg:w="1"/><text x="99.0315%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.7815%" y="421" width="0.0812%" height="15" fill="rgb(219,67,32)" fg:x="1216" fg:w="1"/><text x="99.0315%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.7815%" y="405" width="0.0812%" height="15" fill="rgb(228,91,39)" fg:x="1216" fg:w="1"/><text x="99.0315%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.7815%" y="389" width="0.0812%" height="15" fill="rgb(254,63,14)" fg:x="1216" fg:w="1"/><text x="99.0315%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.7815%" y="373" width="0.0812%" height="15" fill="rgb(216,171,39)" fg:x="1216" fg:w="1"/><text x="99.0315%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.7815%" y="357" width="0.0812%" height="15" fill="rgb(248,68,25)" fg:x="1216" fg:w="1"/><text x="99.0315%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.7815%" y="341" width="0.0812%" height="15" fill="rgb(239,63,16)" fg:x="1216" fg:w="1"/><text x="99.0315%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.7815%" y="325" width="0.0812%" height="15" fill="rgb(225,111,43)" fg:x="1216" fg:w="1"/><text x="99.0315%" y="335.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="98.7002%" y="645" width="0.2437%" height="15" fill="rgb(246,165,17)" fg:x="1215" fg:w="3"/><text x="98.9502%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="98.7002%" y="629" width="0.2437%" height="15" fill="rgb(208,124,1)" fg:x="1215" fg:w="3"/><text x="98.9502%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="98.8627%" y="613" width="0.0812%" height="15" fill="rgb(234,147,33)" fg:x="1217" fg:w="1"/><text x="99.1127%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.8627%" y="597" width="0.0812%" height="15" fill="rgb(240,86,30)" fg:x="1217" fg:w="1"/><text x="99.1127%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.8627%" y="581" width="0.0812%" height="15" fill="rgb(237,34,51)" fg:x="1217" fg:w="1"/><text x="99.1127%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.8627%" y="565" width="0.0812%" height="15" fill="rgb(232,131,41)" fg:x="1217" fg:w="1"/><text x="99.1127%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8627%" y="549" width="0.0812%" height="15" fill="rgb(227,129,53)" fg:x="1217" fg:w="1"/><text x="99.1127%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.8627%" y="533" width="0.0812%" height="15" fill="rgb(230,90,35)" fg:x="1217" fg:w="1"/><text x="99.1127%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8627%" y="517" width="0.0812%" height="15" fill="rgb(248,88,27)" fg:x="1217" fg:w="1"/><text x="99.1127%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.8627%" y="501" width="0.0812%" height="15" fill="rgb(223,18,17)" fg:x="1217" fg:w="1"/><text x="99.1127%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8627%" y="485" width="0.0812%" height="15" fill="rgb(241,11,10)" fg:x="1217" fg:w="1"/><text x="99.1127%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.8627%" y="469" width="0.0812%" height="15" fill="rgb(232,111,52)" fg:x="1217" fg:w="1"/><text x="99.1127%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8627%" y="453" width="0.0812%" height="15" fill="rgb(228,67,8)" fg:x="1217" fg:w="1"/><text x="99.1127%" y="463.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="98.9439%" y="629" width="0.0812%" height="15" fill="rgb(251,168,31)" fg:x="1218" fg:w="1"/><text x="99.1939%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="98.9439%" y="613" width="0.0812%" height="15" fill="rgb(249,164,11)" fg:x="1218" fg:w="1"/><text x="99.1939%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="98.9439%" y="645" width="0.1625%" height="15" fill="rgb(239,81,9)" fg:x="1218" fg:w="2"/><text x="99.1939%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="99.0252%" y="629" width="0.0812%" height="15" fill="rgb(222,145,38)" fg:x="1219" fg:w="1"/><text x="99.2752%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.0252%" y="613" width="0.0812%" height="15" fill="rgb(238,80,54)" fg:x="1219" fg:w="1"/><text x="99.2752%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.0252%" y="597" width="0.0812%" height="15" fill="rgb(237,116,16)" fg:x="1219" fg:w="1"/><text x="99.2752%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.0252%" y="581" width="0.0812%" height="15" fill="rgb(218,135,19)" fg:x="1219" fg:w="1"/><text x="99.2752%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.0252%" y="565" width="0.0812%" height="15" fill="rgb(216,207,44)" fg:x="1219" fg:w="1"/><text x="99.2752%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.0252%" y="549" width="0.0812%" height="15" fill="rgb(226,152,40)" fg:x="1219" fg:w="1"/><text x="99.2752%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.1064%" y="581" width="0.0812%" height="15" fill="rgb(219,98,35)" fg:x="1220" fg:w="1"/><text x="99.3564%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.1064%" y="565" width="0.0812%" height="15" fill="rgb(222,136,46)" fg:x="1220" fg:w="1"/><text x="99.3564%" y="575.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="99.1064%" y="629" width="0.1625%" height="15" fill="rgb(222,71,8)" fg:x="1220" fg:w="2"/><text x="99.3564%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.1064%" y="613" width="0.1625%" height="15" fill="rgb(209,89,53)" fg:x="1220" fg:w="2"/><text x="99.3564%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.1064%" y="597" width="0.1625%" height="15" fill="rgb(210,97,51)" fg:x="1220" fg:w="2"/><text x="99.3564%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.1877%" y="581" width="0.0812%" height="15" fill="rgb(248,65,21)" fg:x="1221" fg:w="1"/><text x="99.4377%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1877%" y="565" width="0.0812%" height="15" fill="rgb(222,5,31)" fg:x="1221" fg:w="1"/><text x="99.4377%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.1877%" y="549" width="0.0812%" height="15" fill="rgb(241,16,30)" fg:x="1221" fg:w="1"/><text x="99.4377%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1877%" y="533" width="0.0812%" height="15" fill="rgb(215,86,30)" fg:x="1221" fg:w="1"/><text x="99.4377%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.1877%" y="517" width="0.0812%" height="15" fill="rgb(235,26,44)" fg:x="1221" fg:w="1"/><text x="99.4377%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="99.1877%" y="501" width="0.0812%" height="15" fill="rgb(228,147,14)" fg:x="1221" fg:w="1"/><text x="99.4377%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.2689%" y="485" width="0.0812%" height="15" fill="rgb(253,38,50)" fg:x="1222" fg:w="1"/><text x="99.5189%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2689%" y="469" width="0.0812%" height="15" fill="rgb(251,151,16)" fg:x="1222" fg:w="1"/><text x="99.5189%" y="479.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.2689%" y="453" width="0.0812%" height="15" fill="rgb(224,64,19)" fg:x="1222" fg:w="1"/><text x="99.5189%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.2689%" y="437" width="0.0812%" height="15" fill="rgb(235,214,47)" fg:x="1222" fg:w="1"/><text x="99.5189%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2689%" y="421" width="0.0812%" height="15" fill="rgb(218,15,19)" fg:x="1222" fg:w="1"/><text x="99.5189%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.2689%" y="405" width="0.0812%" height="15" fill="rgb(247,209,3)" fg:x="1222" fg:w="1"/><text x="99.5189%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2689%" y="389" width="0.0812%" height="15" fill="rgb(217,29,2)" fg:x="1222" fg:w="1"/><text x="99.5189%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.2689%" y="517" width="0.1625%" height="15" fill="rgb(234,9,9)" fg:x="1222" fg:w="2"/><text x="99.5189%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.2689%" y="501" width="0.1625%" height="15" fill="rgb(207,43,14)" fg:x="1222" fg:w="2"/><text x="99.5189%" y="511.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.3501%" y="485" width="0.0812%" height="15" fill="rgb(216,219,36)" fg:x="1223" fg:w="1"/><text x="99.6001%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.3501%" y="469" width="0.0812%" height="15" fill="rgb(238,12,26)" fg:x="1223" fg:w="1"/><text x="99.6001%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.3501%" y="453" width="0.0812%" height="15" fill="rgb(226,67,30)" fg:x="1223" fg:w="1"/><text x="99.6001%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="99.2689%" y="549" width="0.2437%" height="15" fill="rgb(229,154,7)" fg:x="1222" fg:w="3"/><text x="99.5189%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.2689%" y="533" width="0.2437%" height="15" fill="rgb(249,90,18)" fg:x="1222" fg:w="3"/><text x="99.5189%" y="543.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.4314%" y="517" width="0.0812%" height="15" fill="rgb(223,53,15)" fg:x="1224" fg:w="1"/><text x="99.6814%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.4314%" y="501" width="0.0812%" height="15" fill="rgb(253,86,38)" fg:x="1224" fg:w="1"/><text x="99.6814%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.4314%" y="485" width="0.0812%" height="15" fill="rgb(222,198,9)" fg:x="1224" fg:w="1"/><text x="99.6814%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4314%" y="469" width="0.0812%" height="15" fill="rgb(240,146,25)" fg:x="1224" fg:w="1"/><text x="99.6814%" y="479.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.4314%" y="453" width="0.0812%" height="15" fill="rgb(225,38,10)" fg:x="1224" fg:w="1"/><text x="99.6814%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.4314%" y="437" width="0.0812%" height="15" fill="rgb(246,93,4)" fg:x="1224" fg:w="1"/><text x="99.6814%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.4314%" y="421" width="0.0812%" height="15" fill="rgb(222,55,18)" fg:x="1224" fg:w="1"/><text x="99.6814%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.5126%" y="549" width="0.0812%" height="15" fill="rgb(233,137,48)" fg:x="1225" fg:w="1"/><text x="99.7626%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.5126%" y="533" width="0.0812%" height="15" fill="rgb(214,8,54)" fg:x="1225" fg:w="1"/><text x="99.7626%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.5126%" y="517" width="0.0812%" height="15" fill="rgb(206,75,4)" fg:x="1225" fg:w="1"/><text x="99.7626%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (13 samples, 1.06%)</title><rect x="98.7002%" y="693" width="1.0561%" height="15" fill="rgb(238,171,14)" fg:x="1215" fg:w="13"/><text x="98.9502%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (13 samples, 1.06%)</title><rect x="98.7002%" y="677" width="1.0561%" height="15" fill="rgb(233,70,41)" fg:x="1215" fg:w="13"/><text x="98.9502%" y="687.50"></text></g><g><title>engine::internal::Entities::add_persisted (13 samples, 1.06%)</title><rect x="98.7002%" y="661" width="1.0561%" height="15" fill="rgb(214,68,36)" fg:x="1215" fg:w="13"/><text x="98.9502%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::from_str (8 samples, 0.65%)</title><rect x="99.1064%" y="645" width="0.6499%" height="15" fill="rgb(223,29,5)" fg:x="1220" fg:w="8"/><text x="99.3564%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.49%)</title><rect x="99.2689%" y="629" width="0.4874%" height="15" fill="rgb(251,22,40)" fg:x="1222" fg:w="6"/><text x="99.5189%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="99.2689%" y="613" width="0.4874%" height="15" fill="rgb(210,67,41)" fg:x="1222" fg:w="6"/><text x="99.5189%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.49%)</title><rect x="99.2689%" y="597" width="0.4874%" height="15" fill="rgb(225,177,31)" fg:x="1222" fg:w="6"/><text x="99.5189%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="99.2689%" y="581" width="0.4874%" height="15" fill="rgb(221,229,11)" fg:x="1222" fg:w="6"/><text x="99.5189%" y="591.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.49%)</title><rect x="99.2689%" y="565" width="0.4874%" height="15" fill="rgb(247,172,52)" fg:x="1222" fg:w="6"/><text x="99.5189%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.5938%" y="549" width="0.1625%" height="15" fill="rgb(212,73,19)" fg:x="1226" fg:w="2"/><text x="99.8438%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.5938%" y="533" width="0.1625%" height="15" fill="rgb(244,7,46)" fg:x="1226" fg:w="2"/><text x="99.8438%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="99.5938%" y="517" width="0.1625%" height="15" fill="rgb(230,113,20)" fg:x="1226" fg:w="2"/><text x="99.8438%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.5938%" y="501" width="0.1625%" height="15" fill="rgb(209,97,30)" fg:x="1226" fg:w="2"/><text x="99.8438%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.5938%" y="485" width="0.1625%" height="15" fill="rgb(243,89,12)" fg:x="1226" fg:w="2"/><text x="99.8438%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="99.5938%" y="469" width="0.1625%" height="15" fill="rgb(228,32,19)" fg:x="1226" fg:w="2"/><text x="99.8438%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.5938%" y="453" width="0.1625%" height="15" fill="rgb(248,25,17)" fg:x="1226" fg:w="2"/><text x="99.8438%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.5938%" y="437" width="0.1625%" height="15" fill="rgb(232,161,29)" fg:x="1226" fg:w="2"/><text x="99.8438%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="99.5938%" y="421" width="0.1625%" height="15" fill="rgb(251,192,11)" fg:x="1226" fg:w="2"/><text x="99.8438%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.5938%" y="405" width="0.1625%" height="15" fill="rgb(240,47,32)" fg:x="1226" fg:w="2"/><text x="99.8438%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6751%" y="389" width="0.0812%" height="15" fill="rgb(250,16,45)" fg:x="1227" fg:w="1"/><text x="99.9251%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.6751%" y="373" width="0.0812%" height="15" fill="rgb(227,217,42)" fg:x="1227" fg:w="1"/><text x="99.9251%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6751%" y="357" width="0.0812%" height="15" fill="rgb(206,82,54)" fg:x="1227" fg:w="1"/><text x="99.9251%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6751%" y="341" width="0.0812%" height="15" fill="rgb(243,145,25)" fg:x="1227" fg:w="1"/><text x="99.9251%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.6751%" y="325" width="0.0812%" height="15" fill="rgb(207,166,24)" fg:x="1227" fg:w="1"/><text x="99.9251%" y="335.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (1 samples, 0.08%)</title><rect x="99.7563%" y="693" width="0.0812%" height="15" fill="rgb(215,191,44)" fg:x="1228" fg:w="1"/><text x="100.0063%" y="703.50"></text></g><g><title>engine::users::model::username_to_key (1 samples, 0.08%)</title><rect x="99.7563%" y="677" width="0.0812%" height="15" fill="rgb(234,218,51)" fg:x="1228" fg:w="1"/><text x="100.0063%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="99.7563%" y="661" width="0.0812%" height="15" fill="rgb(245,133,21)" fg:x="1228" fg:w="1"/><text x="100.0063%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.7563%" y="645" width="0.0812%" height="15" fill="rgb(230,136,45)" fg:x="1228" fg:w="1"/><text x="100.0063%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.7563%" y="629" width="0.0812%" height="15" fill="rgb(247,63,43)" fg:x="1228" fg:w="1"/><text x="100.0063%" y="639.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.8375%" y="661" width="0.0812%" height="15" fill="rgb(254,223,31)" fg:x="1229" fg:w="1"/><text x="100.0875%" y="671.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.8375%" y="645" width="0.0812%" height="15" fill="rgb(236,185,0)" fg:x="1229" fg:w="1"/><text x="100.0875%" y="655.50"></text></g><g><title>all (1,231 samples, 100%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(231,139,46)" fg:x="0" fg:w="1231"/><text x="0.2500%" y="1071.50"></text></g><g><title>simple-484c7248 (1,231 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(236,147,31)" fg:x="0" fg:w="1231"/><text x="0.2500%" y="1055.50">simple-484c7248</text></g><g><title>_start (1,231 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(225,222,22)" fg:x="0" fg:w="1231"/><text x="0.2500%" y="1039.50">_start</text></g><g><title>__libc_start_main (1,231 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(225,193,14)" fg:x="0" fg:w="1231"/><text x="0.2500%" y="1023.50">__libc_start_main</text></g><g><title>main (1,231 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(253,193,46)" fg:x="0" fg:w="1231"/><text x="0.2500%" y="1007.50">main</text></g><g><title>std::rt::lang_start_internal (1,231 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(218,187,39)" fg:x="0" fg:w="1231"/><text x="0.2500%" y="991.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,231 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(227,162,48)" fg:x="0" fg:w="1231"/><text x="0.2500%" y="975.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,231 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(222,25,5)" fg:x="0" fg:w="1231"/><text x="0.2500%" y="959.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,231 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(211,205,16)" fg:x="0" fg:w="1231"/><text x="0.2500%" y="943.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,231 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(244,191,2)" fg:x="0" fg:w="1231"/><text x="0.2500%" y="927.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,231 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(248,159,12)" fg:x="0" fg:w="1231"/><text x="0.2500%" y="911.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,231 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(235,204,17)" fg:x="0" fg:w="1231"/><text x="0.2500%" y="895.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,231 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(240,21,27)" fg:x="0" fg:w="1231"/><text x="0.2500%" y="879.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,231 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(224,170,31)" fg:x="0" fg:w="1231"/><text x="0.2500%" y="863.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,231 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(223,145,32)" fg:x="0" fg:w="1231"/><text x="0.2500%" y="847.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,231 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(243,100,5)" fg:x="0" fg:w="1231"/><text x="0.2500%" y="831.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,231 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(242,131,51)" fg:x="0" fg:w="1231"/><text x="0.2500%" y="815.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,231 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(223,156,46)" fg:x="0" fg:w="1231"/><text x="0.2500%" y="799.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,231 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(215,10,40)" fg:x="0" fg:w="1231"/><text x="0.2500%" y="783.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (461 samples, 37.45%)</title><rect x="62.5508%" y="757" width="37.4492%" height="15" fill="rgb(233,155,0)" fg:x="770" fg:w="461"/><text x="62.8008%" y="767.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::R..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (461 samples, 37.45%)</title><rect x="62.5508%" y="741" width="37.4492%" height="15" fill="rgb(247,78,6)" fg:x="770" fg:w="461"/><text x="62.8008%" y="751.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (461 samples, 37.45%)</title><rect x="62.5508%" y="725" width="37.4492%" height="15" fill="rgb(237,217,21)" fg:x="770" fg:w="461"/><text x="62.8008%" y="735.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (184 samples, 14.95%)</title><rect x="85.0528%" y="709" width="14.9472%" height="15" fill="rgb(212,1,21)" fg:x="1047" fg:w="184"/><text x="85.3028%" y="719.50">engine::session::Sessio..</text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="99.8375%" y="693" width="0.1625%" height="15" fill="rgb(213,7,14)" fg:x="1229" fg:w="2"/><text x="100.0875%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="99.8375%" y="677" width="0.1625%" height="15" fill="rgb(225,84,14)" fg:x="1229" fg:w="2"/><text x="100.0875%" y="687.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.9188%" y="661" width="0.0812%" height="15" fill="rgb(239,216,39)" fg:x="1230" fg:w="1"/><text x="100.1688%" y="671.50"></text></g><g><title>&lt;plugins_core::looking::parser::LookActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.9188%" y="645" width="0.0812%" height="15" fill="rgb(253,29,23)" fg:x="1230" fg:w="1"/><text x="100.1688%" y="655.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="99.9188%" y="629" width="0.0812%" height="15" fill="rgb(220,167,50)" fg:x="1230" fg:w="1"/><text x="100.1688%" y="639.50"></text></g></svg></svg>