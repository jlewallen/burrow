<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="934" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="917.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="917.00"> </text><svg id="frames" x="10" width="1180" total_samples="1273"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.31%)</title><rect x="0.3142%" y="501" width="0.3142%" height="15" fill="rgb(246,151,17)" fg:x="4" fg:w="4"/><text x="0.5642%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::ExpandSurroundingsMiddleware&gt; (1 samples, 0.08%)</title><rect x="0.5499%" y="485" width="0.0786%" height="15" fill="rgb(252,17,51)" fg:x="7" fg:w="1"/><text x="0.7999%" y="495.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.39%)</title><rect x="0.3142%" y="517" width="0.3928%" height="15" fill="rgb(250,207,23)" fg:x="4" fg:w="5"/><text x="0.5642%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.6284%" y="501" width="0.0786%" height="15" fill="rgb(205,27,5)" fg:x="8" fg:w="1"/><text x="0.8784%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.0212%" y="437" width="0.0786%" height="15" fill="rgb(224,32,19)" fg:x="13" fg:w="1"/><text x="1.2712%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.0998%" y="437" width="0.0786%" height="15" fill="rgb(247,214,40)" fg:x="14" fg:w="1"/><text x="1.3498%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.2569%" y="421" width="0.0786%" height="15" fill="rgb(239,199,17)" fg:x="16" fg:w="1"/><text x="1.5069%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.3354%" y="421" width="0.0786%" height="15" fill="rgb(251,159,9)" fg:x="17" fg:w="1"/><text x="1.5854%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.3354%" y="405" width="0.0786%" height="15" fill="rgb(225,78,32)" fg:x="17" fg:w="1"/><text x="1.5854%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.4925%" y="405" width="0.1571%" height="15" fill="rgb(206,97,47)" fg:x="19" fg:w="2"/><text x="1.7425%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.5711%" y="389" width="0.0786%" height="15" fill="rgb(227,107,4)" fg:x="20" fg:w="1"/><text x="1.8211%" y="399.50"></text></g><g><title>__libc_free (4 samples, 0.31%)</title><rect x="1.7282%" y="389" width="0.3142%" height="15" fill="rgb(241,146,50)" fg:x="22" fg:w="4"/><text x="1.9782%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="2.0424%" y="389" width="0.1571%" height="15" fill="rgb(232,92,30)" fg:x="26" fg:w="2"/><text x="2.2924%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.3566%" y="373" width="0.1571%" height="15" fill="rgb(222,0,40)" fg:x="30" fg:w="2"/><text x="2.6066%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 1.57%)</title><rect x="1.0212%" y="453" width="1.5711%" height="15" fill="rgb(219,54,33)" fg:x="13" fg:w="20"/><text x="1.2712%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 1.41%)</title><rect x="1.1783%" y="437" width="1.4140%" height="15" fill="rgb(226,209,28)" fg:x="15" fg:w="18"/><text x="1.4283%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.18%)</title><rect x="1.4140%" y="421" width="1.1783%" height="15" fill="rgb(254,205,35)" fg:x="18" fg:w="15"/><text x="1.6640%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.94%)</title><rect x="1.6496%" y="405" width="0.9427%" height="15" fill="rgb(230,159,3)" fg:x="21" fg:w="12"/><text x="1.8996%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="2.1995%" y="389" width="0.3928%" height="15" fill="rgb(232,190,24)" fg:x="28" fg:w="5"/><text x="2.4495%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="2.5137%" y="373" width="0.0786%" height="15" fill="rgb(217,227,44)" fg:x="32" fg:w="1"/><text x="2.7637%" y="383.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.8280%" y="421" width="0.1571%" height="15" fill="rgb(236,211,1)" fg:x="36" fg:w="2"/><text x="3.0780%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="2.9851%" y="421" width="0.1571%" height="15" fill="rgb(250,127,46)" fg:x="38" fg:w="2"/><text x="3.2351%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="3.5350%" y="373" width="0.1571%" height="15" fill="rgb(229,213,6)" fg:x="45" fg:w="2"/><text x="3.7850%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.39%)</title><rect x="3.3778%" y="405" width="0.3928%" height="15" fill="rgb(237,15,36)" fg:x="43" fg:w="5"/><text x="3.6278%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.31%)</title><rect x="3.4564%" y="389" width="0.3142%" height="15" fill="rgb(213,131,41)" fg:x="44" fg:w="4"/><text x="3.7064%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="3.6921%" y="373" width="0.0786%" height="15" fill="rgb(225,82,44)" fg:x="47" fg:w="1"/><text x="3.9421%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.6921%" y="357" width="0.0786%" height="15" fill="rgb(249,42,11)" fg:x="47" fg:w="1"/><text x="3.9421%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.6921%" y="341" width="0.0786%" height="15" fill="rgb(253,11,29)" fg:x="47" fg:w="1"/><text x="3.9421%" y="351.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="3.7706%" y="405" width="0.1571%" height="15" fill="rgb(206,8,54)" fg:x="48" fg:w="2"/><text x="4.0206%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="3.9277%" y="405" width="0.2357%" height="15" fill="rgb(222,186,2)" fg:x="50" fg:w="3"/><text x="4.1777%" y="415.50"></text></g><g><title>__libc_free (5 samples, 0.39%)</title><rect x="4.2419%" y="389" width="0.3928%" height="15" fill="rgb(221,206,53)" fg:x="54" fg:w="5"/><text x="4.4919%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 2.12%)</title><rect x="2.6709%" y="437" width="2.1210%" height="15" fill="rgb(230,150,21)" fg:x="34" fg:w="27"/><text x="2.9209%" y="447.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (21 samples, 1.65%)</title><rect x="3.1422%" y="421" width="1.6496%" height="15" fill="rgb(253,202,10)" fg:x="40" fg:w="21"/><text x="3.3922%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.63%)</title><rect x="4.1634%" y="405" width="0.6284%" height="15" fill="rgb(238,109,40)" fg:x="53" fg:w="8"/><text x="4.4134%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="4.6347%" y="389" width="0.1571%" height="15" fill="rgb(247,120,22)" fg:x="59" fg:w="2"/><text x="4.8847%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.7133%" y="373" width="0.0786%" height="15" fill="rgb(207,43,30)" fg:x="60" fg:w="1"/><text x="4.9633%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 2.44%)</title><rect x="2.5923%" y="453" width="2.4352%" height="15" fill="rgb(213,211,24)" fg:x="33" fg:w="31"/><text x="2.8423%" y="463.50">&lt;h..</text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="4.7918%" y="437" width="0.2357%" height="15" fill="rgb(239,73,39)" fg:x="61" fg:w="3"/><text x="5.0418%" y="447.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 4.24%)</title><rect x="0.8641%" y="469" width="4.2419%" height="15" fill="rgb(245,182,19)" fg:x="11" fg:w="54"/><text x="1.1141%" y="479.50">&lt;allo..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.0275%" y="453" width="0.0786%" height="15" fill="rgb(247,143,26)" fg:x="64" fg:w="1"/><text x="5.2775%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (57 samples, 4.48%)</title><rect x="0.7070%" y="517" width="4.4776%" height="15" fill="rgb(228,191,23)" fg:x="9" fg:w="57"/><text x="0.9570%" y="527.50">core:..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 4.32%)</title><rect x="0.8641%" y="501" width="4.3205%" height="15" fill="rgb(253,165,31)" fg:x="11" fg:w="55"/><text x="1.1141%" y="511.50">&lt;hash..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (55 samples, 4.32%)</title><rect x="0.8641%" y="485" width="4.3205%" height="15" fill="rgb(234,138,20)" fg:x="11" fg:w="55"/><text x="1.1141%" y="495.50">core:..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.1060%" y="469" width="0.0786%" height="15" fill="rgb(218,191,29)" fg:x="65" fg:w="1"/><text x="5.3560%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (64 samples, 5.03%)</title><rect x="0.3142%" y="533" width="5.0275%" height="15" fill="rgb(221,157,19)" fg:x="4" fg:w="64"/><text x="0.5642%" y="543.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryStorage&gt; (2 samples, 0.16%)</title><rect x="5.1846%" y="517" width="0.1571%" height="15" fill="rgb(237,26,42)" fg:x="66" fg:w="2"/><text x="5.4346%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="5.2632%" y="501" width="0.0786%" height="15" fill="rgb(220,163,24)" fg:x="67" fg:w="1"/><text x="5.5132%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorageFactory as engine::storage::StorageFactory&gt;::create_storage (1 samples, 0.08%)</title><rect x="5.4203%" y="501" width="0.0786%" height="15" fill="rgb(242,115,20)" fg:x="69" fg:w="1"/><text x="5.6703%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="5.5774%" y="485" width="0.1571%" height="15" fill="rgb(210,206,9)" fg:x="71" fg:w="2"/><text x="5.8274%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="5.6559%" y="469" width="0.0786%" height="15" fill="rgb(208,71,17)" fg:x="72" fg:w="1"/><text x="5.9059%" y="479.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (2 samples, 0.16%)</title><rect x="5.7345%" y="485" width="0.1571%" height="15" fill="rgb(233,7,5)" fg:x="73" fg:w="2"/><text x="5.9845%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="5.7345%" y="469" width="0.1571%" height="15" fill="rgb(207,92,33)" fg:x="73" fg:w="2"/><text x="5.9845%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.0487%" y="469" width="0.0786%" height="15" fill="rgb(218,87,9)" fg:x="77" fg:w="1"/><text x="6.2987%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.0487%" y="453" width="0.0786%" height="15" fill="rgb(219,47,37)" fg:x="77" fg:w="1"/><text x="6.2987%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.0487%" y="437" width="0.0786%" height="15" fill="rgb(221,152,34)" fg:x="77" fg:w="1"/><text x="6.2987%" y="447.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::initialize (1 samples, 0.08%)</title><rect x="6.1273%" y="453" width="0.0786%" height="15" fill="rgb(235,176,21)" fg:x="78" fg:w="1"/><text x="6.3773%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="6.2058%" y="437" width="0.0786%" height="15" fill="rgb(232,212,21)" fg:x="79" fg:w="1"/><text x="6.4558%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="6.2058%" y="421" width="0.0786%" height="15" fill="rgb(245,82,39)" fg:x="79" fg:w="1"/><text x="6.4558%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="6.2058%" y="405" width="0.0786%" height="15" fill="rgb(241,52,51)" fg:x="79" fg:w="1"/><text x="6.4558%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="6.2058%" y="389" width="0.0786%" height="15" fill="rgb(219,91,24)" fg:x="79" fg:w="1"/><text x="6.4558%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.2058%" y="373" width="0.0786%" height="15" fill="rgb(241,142,12)" fg:x="79" fg:w="1"/><text x="6.4558%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.2058%" y="357" width="0.0786%" height="15" fill="rgb(230,27,9)" fg:x="79" fg:w="1"/><text x="6.4558%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="6.2058%" y="341" width="0.0786%" height="15" fill="rgb(249,181,32)" fg:x="79" fg:w="1"/><text x="6.4558%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="6.2058%" y="325" width="0.0786%" height="15" fill="rgb(230,107,3)" fg:x="79" fg:w="1"/><text x="6.4558%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="6.2058%" y="309" width="0.0786%" height="15" fill="rgb(246,204,14)" fg:x="79" fg:w="1"/><text x="6.4558%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="6.2058%" y="293" width="0.0786%" height="15" fill="rgb(213,192,47)" fg:x="79" fg:w="1"/><text x="6.4558%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="6.2058%" y="277" width="0.0786%" height="15" fill="rgb(240,44,36)" fg:x="79" fg:w="1"/><text x="6.4558%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="6.2058%" y="261" width="0.0786%" height="15" fill="rgb(244,209,38)" fg:x="79" fg:w="1"/><text x="6.4558%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.2058%" y="245" width="0.0786%" height="15" fill="rgb(219,34,37)" fg:x="79" fg:w="1"/><text x="6.4558%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="6.2058%" y="229" width="0.0786%" height="15" fill="rgb(210,28,6)" fg:x="79" fg:w="1"/><text x="6.4558%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.2058%" y="213" width="0.0786%" height="15" fill="rgb(244,110,52)" fg:x="79" fg:w="1"/><text x="6.4558%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="6.2058%" y="197" width="0.0786%" height="15" fill="rgb(254,124,47)" fg:x="79" fg:w="1"/><text x="6.4558%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="6.2058%" y="181" width="0.0786%" height="15" fill="rgb(254,110,13)" fg:x="79" fg:w="1"/><text x="6.4558%" y="191.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="6.2058%" y="165" width="0.0786%" height="15" fill="rgb(252,57,21)" fg:x="79" fg:w="1"/><text x="6.4558%" y="175.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.2058%" y="149" width="0.0786%" height="15" fill="rgb(242,60,45)" fg:x="79" fg:w="1"/><text x="6.4558%" y="159.50"></text></g><g><title>dlerror (2 samples, 0.16%)</title><rect x="6.2844%" y="421" width="0.1571%" height="15" fill="rgb(234,49,30)" fg:x="80" fg:w="2"/><text x="6.5344%" y="431.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="6.3629%" y="405" width="0.0786%" height="15" fill="rgb(218,98,6)" fg:x="81" fg:w="1"/><text x="6.6129%" y="415.50"></text></g><g><title>__sigsetjmp (1 samples, 0.08%)</title><rect x="6.7557%" y="373" width="0.0786%" height="15" fill="rgb(220,174,29)" fg:x="86" fg:w="1"/><text x="7.0057%" y="383.50"></text></g><g><title>dlopen (29 samples, 2.28%)</title><rect x="6.4415%" y="421" width="2.2781%" height="15" fill="rgb(236,163,23)" fg:x="82" fg:w="29"/><text x="6.6915%" y="431.50">d..</text></g><g><title>_dl_catch_error (26 samples, 2.04%)</title><rect x="6.6771%" y="405" width="2.0424%" height="15" fill="rgb(242,114,45)" fg:x="85" fg:w="26"/><text x="6.9271%" y="415.50">_..</text></g><g><title>_dl_catch_exception (26 samples, 2.04%)</title><rect x="6.6771%" y="389" width="2.0424%" height="15" fill="rgb(232,10,53)" fg:x="85" fg:w="26"/><text x="6.9271%" y="399.50">_..</text></g><g><title>_dl_catch_exception (24 samples, 1.89%)</title><rect x="6.8342%" y="373" width="1.8853%" height="15" fill="rgb(245,108,29)" fg:x="87" fg:w="24"/><text x="7.0842%" y="383.50">_..</text></g><g><title>_dl_catch_exception (23 samples, 1.81%)</title><rect x="6.9128%" y="357" width="1.8068%" height="15" fill="rgb(240,89,53)" fg:x="88" fg:w="23"/><text x="7.1628%" y="367.50">_..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (33 samples, 2.59%)</title><rect x="6.2058%" y="453" width="2.5923%" height="15" fill="rgb(226,60,45)" fg:x="79" fg:w="33"/><text x="6.4558%" y="463.50">&lt;p..</text></g><g><title>libloading::safe::Library::new (32 samples, 2.51%)</title><rect x="6.2844%" y="437" width="2.5137%" height="15" fill="rgb(230,41,44)" fg:x="80" fg:w="32"/><text x="6.5344%" y="447.50">li..</text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="8.7196%" y="421" width="0.0786%" height="15" fill="rgb(230,26,20)" fg:x="111" fg:w="1"/><text x="8.9696%" y="431.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="8.7196%" y="405" width="0.0786%" height="15" fill="rgb(237,170,32)" fg:x="111" fg:w="1"/><text x="8.9696%" y="415.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="8.7196%" y="389" width="0.0786%" height="15" fill="rgb(212,35,42)" fg:x="111" fg:w="1"/><text x="8.9696%" y="399.50"></text></g><g><title>alloc::ffi::c_str::CString::_from_vec_unchecked (1 samples, 0.08%)</title><rect x="8.7196%" y="373" width="0.0786%" height="15" fill="rgb(227,31,34)" fg:x="111" fg:w="1"/><text x="8.9696%" y="383.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.08%)</title><rect x="8.7981%" y="453" width="0.0786%" height="15" fill="rgb(216,19,18)" fg:x="112" fg:w="1"/><text x="9.0481%" y="463.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.08%)</title><rect x="8.7981%" y="437" width="0.0786%" height="15" fill="rgb(211,133,42)" fg:x="112" fg:w="1"/><text x="9.0481%" y="447.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.08%)</title><rect x="8.7981%" y="421" width="0.0786%" height="15" fill="rgb(244,66,13)" fg:x="112" fg:w="1"/><text x="9.0481%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.08%)</title><rect x="8.7981%" y="405" width="0.0786%" height="15" fill="rgb(218,185,50)" fg:x="112" fg:w="1"/><text x="9.0481%" y="415.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.08%)</title><rect x="8.7981%" y="389" width="0.0786%" height="15" fill="rgb(219,149,13)" fg:x="112" fg:w="1"/><text x="9.0481%" y="399.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (36 samples, 2.83%)</title><rect x="6.1273%" y="469" width="2.8280%" height="15" fill="rgb(221,125,0)" fg:x="78" fg:w="36"/><text x="6.3773%" y="479.50">ke..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="8.8767%" y="453" width="0.0786%" height="15" fill="rgb(247,126,27)" fg:x="113" fg:w="1"/><text x="9.1267%" y="463.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="8.8767%" y="437" width="0.0786%" height="15" fill="rgb(250,138,30)" fg:x="113" fg:w="1"/><text x="9.1267%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="9.1909%" y="421" width="0.0786%" height="15" fill="rgb(230,151,9)" fg:x="117" fg:w="1"/><text x="9.4409%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.31%)</title><rect x="9.0338%" y="437" width="0.3142%" height="15" fill="rgb(233,80,38)" fg:x="115" fg:w="4"/><text x="9.2838%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.2694%" y="421" width="0.0786%" height="15" fill="rgb(232,68,43)" fg:x="118" fg:w="1"/><text x="9.5194%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="9.3480%" y="437" width="0.0786%" height="15" fill="rgb(254,5,50)" fg:x="119" fg:w="1"/><text x="9.5980%" y="447.50"></text></g><g><title>engine::session::Session::initialize (47 samples, 3.69%)</title><rect x="5.8916%" y="485" width="3.6921%" height="15" fill="rgb(225,45,5)" fg:x="75" fg:w="47"/><text x="6.1416%" y="495.50">engi..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (8 samples, 0.63%)</title><rect x="8.9552%" y="469" width="0.6284%" height="15" fill="rgb(239,22,3)" fg:x="114" fg:w="8"/><text x="9.2052%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.63%)</title><rect x="8.9552%" y="453" width="0.6284%" height="15" fill="rgb(243,129,0)" fg:x="114" fg:w="8"/><text x="9.2052%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="9.4266%" y="437" width="0.1571%" height="15" fill="rgb(223,164,0)" fg:x="120" fg:w="2"/><text x="9.6766%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="9.4266%" y="421" width="0.1571%" height="15" fill="rgb(221,46,29)" fg:x="120" fg:w="2"/><text x="9.6766%" y="431.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="9.4266%" y="405" width="0.1571%" height="15" fill="rgb(205,97,47)" fg:x="120" fg:w="2"/><text x="9.6766%" y="415.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (2 samples, 0.16%)</title><rect x="9.5837%" y="485" width="0.1571%" height="15" fill="rgb(249,14,8)" fg:x="122" fg:w="2"/><text x="9.8337%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="9.5837%" y="469" width="0.1571%" height="15" fill="rgb(216,77,3)" fg:x="122" fg:w="2"/><text x="9.8337%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="9.6622%" y="453" width="0.0786%" height="15" fill="rgb(206,168,54)" fg:x="123" fg:w="1"/><text x="9.9122%" y="463.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (58 samples, 4.56%)</title><rect x="5.3417%" y="533" width="4.5562%" height="15" fill="rgb(236,3,41)" fg:x="68" fg:w="58"/><text x="5.5917%" y="543.50">&lt;engi..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (58 samples, 4.56%)</title><rect x="5.3417%" y="517" width="4.5562%" height="15" fill="rgb(231,132,24)" fg:x="68" fg:w="58"/><text x="5.5917%" y="527.50">engin..</text></g><g><title>engine::session::Session::new (56 samples, 4.40%)</title><rect x="5.4988%" y="501" width="4.3991%" height="15" fill="rgb(227,221,40)" fg:x="70" fg:w="56"/><text x="5.7488%" y="511.50">engin..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="9.7408%" y="485" width="0.1571%" height="15" fill="rgb(233,151,11)" fg:x="124" fg:w="2"/><text x="9.9908%" y="495.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="9.7408%" y="469" width="0.1571%" height="15" fill="rgb(247,81,35)" fg:x="124" fg:w="2"/><text x="9.9908%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.9764%" y="485" width="0.0786%" height="15" fill="rgb(243,128,48)" fg:x="127" fg:w="1"/><text x="10.2264%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="9.9764%" y="517" width="0.2357%" height="15" fill="rgb(253,16,10)" fg:x="127" fg:w="3"/><text x="10.2264%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="9.9764%" y="501" width="0.2357%" height="15" fill="rgb(228,67,27)" fg:x="127" fg:w="3"/><text x="10.2264%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="10.0550%" y="485" width="0.1571%" height="15" fill="rgb(231,105,25)" fg:x="128" fg:w="2"/><text x="10.3050%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="10.0550%" y="469" width="0.1571%" height="15" fill="rgb(213,166,47)" fg:x="128" fg:w="2"/><text x="10.3050%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.1335%" y="453" width="0.0786%" height="15" fill="rgb(209,27,10)" fg:x="129" fg:w="1"/><text x="10.3835%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (1 samples, 0.08%)</title><rect x="10.2121%" y="517" width="0.0786%" height="15" fill="rgb(241,44,30)" fg:x="130" fg:w="1"/><text x="10.4621%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="10.2121%" y="501" width="0.0786%" height="15" fill="rgb(223,216,15)" fg:x="130" fg:w="1"/><text x="10.4621%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="10.2907%" y="501" width="0.0786%" height="15" fill="rgb(227,14,7)" fg:x="131" fg:w="1"/><text x="10.5407%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.2907%" y="485" width="0.0786%" height="15" fill="rgb(237,14,5)" fg:x="131" fg:w="1"/><text x="10.5407%" y="495.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="10.3692%" y="501" width="0.0786%" height="15" fill="rgb(232,14,36)" fg:x="132" fg:w="1"/><text x="10.6192%" y="511.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="10.3692%" y="485" width="0.0786%" height="15" fill="rgb(234,0,38)" fg:x="132" fg:w="1"/><text x="10.6192%" y="495.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="10.3692%" y="469" width="0.0786%" height="15" fill="rgb(207,170,14)" fg:x="132" fg:w="1"/><text x="10.6192%" y="479.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="10.3692%" y="453" width="0.0786%" height="15" fill="rgb(252,45,13)" fg:x="132" fg:w="1"/><text x="10.6192%" y="463.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="10.3692%" y="437" width="0.0786%" height="15" fill="rgb(213,142,7)" fg:x="132" fg:w="1"/><text x="10.6192%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="10.3692%" y="421" width="0.0786%" height="15" fill="rgb(216,157,23)" fg:x="132" fg:w="1"/><text x="10.6192%" y="431.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="10.3692%" y="405" width="0.0786%" height="15" fill="rgb(212,145,33)" fg:x="132" fg:w="1"/><text x="10.6192%" y="415.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="10.3692%" y="389" width="0.0786%" height="15" fill="rgb(233,26,13)" fg:x="132" fg:w="1"/><text x="10.6192%" y="399.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="10.4478%" y="469" width="0.2357%" height="15" fill="rgb(219,196,19)" fg:x="133" fg:w="3"/><text x="10.6978%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="10.4478%" y="453" width="0.2357%" height="15" fill="rgb(246,56,21)" fg:x="133" fg:w="3"/><text x="10.6978%" y="463.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (2 samples, 0.16%)</title><rect x="10.5263%" y="437" width="0.1571%" height="15" fill="rgb(222,28,53)" fg:x="134" fg:w="2"/><text x="10.7763%" y="447.50"></text></g><g><title>kernel::model::base::EntityKey::new (2 samples, 0.16%)</title><rect x="10.5263%" y="421" width="0.1571%" height="15" fill="rgb(224,5,27)" fg:x="134" fg:w="2"/><text x="10.7763%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.6834%" y="437" width="0.0786%" height="15" fill="rgb(220,153,33)" fg:x="136" fg:w="1"/><text x="10.9334%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="10.8405%" y="421" width="0.0786%" height="15" fill="rgb(226,58,19)" fg:x="138" fg:w="1"/><text x="11.0905%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="10.9191%" y="405" width="0.0786%" height="15" fill="rgb(239,112,23)" fg:x="139" fg:w="1"/><text x="11.1691%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.55%)</title><rect x="10.9976%" y="405" width="0.5499%" height="15" fill="rgb(251,213,20)" fg:x="140" fg:w="7"/><text x="11.2476%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.55%)</title><rect x="10.9976%" y="389" width="0.5499%" height="15" fill="rgb(215,181,21)" fg:x="140" fg:w="7"/><text x="11.2476%" y="399.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.47%)</title><rect x="11.0762%" y="373" width="0.4713%" height="15" fill="rgb(240,8,35)" fg:x="141" fg:w="6"/><text x="11.3262%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="11.3904%" y="357" width="0.1571%" height="15" fill="rgb(232,203,3)" fg:x="145" fg:w="2"/><text x="11.6404%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.4690%" y="341" width="0.0786%" height="15" fill="rgb(214,202,43)" fg:x="146" fg:w="1"/><text x="11.7190%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="11.4690%" y="325" width="0.0786%" height="15" fill="rgb(254,35,11)" fg:x="146" fg:w="1"/><text x="11.7190%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="11.4690%" y="309" width="0.0786%" height="15" fill="rgb(239,173,13)" fg:x="146" fg:w="1"/><text x="11.7190%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="11.4690%" y="293" width="0.0786%" height="15" fill="rgb(220,141,0)" fg:x="146" fg:w="1"/><text x="11.7190%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="11.7832%" y="389" width="0.3142%" height="15" fill="rgb(210,98,12)" fg:x="150" fg:w="4"/><text x="12.0332%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="11.9403%" y="373" width="0.1571%" height="15" fill="rgb(254,153,22)" fg:x="152" fg:w="2"/><text x="12.1903%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="11.9403%" y="357" width="0.1571%" height="15" fill="rgb(247,223,17)" fg:x="152" fg:w="2"/><text x="12.1903%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.0189%" y="341" width="0.0786%" height="15" fill="rgb(246,56,7)" fg:x="153" fg:w="1"/><text x="12.2689%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="12.0189%" y="325" width="0.0786%" height="15" fill="rgb(240,226,12)" fg:x="153" fg:w="1"/><text x="12.2689%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="12.0189%" y="309" width="0.0786%" height="15" fill="rgb(205,87,46)" fg:x="153" fg:w="1"/><text x="12.2689%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="12.0189%" y="293" width="0.0786%" height="15" fill="rgb(245,214,51)" fg:x="153" fg:w="1"/><text x="12.2689%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="12.0974%" y="341" width="0.1571%" height="15" fill="rgb(223,172,33)" fg:x="154" fg:w="2"/><text x="12.3474%" y="351.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="12.0974%" y="325" width="0.1571%" height="15" fill="rgb(227,203,34)" fg:x="154" fg:w="2"/><text x="12.3474%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="12.1760%" y="309" width="0.0786%" height="15" fill="rgb(248,143,44)" fg:x="155" fg:w="1"/><text x="12.4260%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.1760%" y="293" width="0.0786%" height="15" fill="rgb(226,162,5)" fg:x="155" fg:w="1"/><text x="12.4260%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="12.1760%" y="277" width="0.0786%" height="15" fill="rgb(211,143,1)" fg:x="155" fg:w="1"/><text x="12.4260%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="12.1760%" y="261" width="0.0786%" height="15" fill="rgb(224,96,15)" fg:x="155" fg:w="1"/><text x="12.4260%" y="271.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="12.1760%" y="245" width="0.0786%" height="15" fill="rgb(222,4,38)" fg:x="155" fg:w="1"/><text x="12.4260%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.3331%" y="277" width="0.0786%" height="15" fill="rgb(253,228,15)" fg:x="157" fg:w="1"/><text x="12.5831%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="12.3331%" y="325" width="0.1571%" height="15" fill="rgb(242,194,12)" fg:x="157" fg:w="2"/><text x="12.5831%" y="335.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="12.3331%" y="309" width="0.1571%" height="15" fill="rgb(214,177,31)" fg:x="157" fg:w="2"/><text x="12.5831%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="12.3331%" y="293" width="0.1571%" height="15" fill="rgb(226,58,51)" fg:x="157" fg:w="2"/><text x="12.5831%" y="303.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="12.4116%" y="277" width="0.0786%" height="15" fill="rgb(250,119,16)" fg:x="158" fg:w="1"/><text x="12.6616%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="12.4902%" y="309" width="0.1571%" height="15" fill="rgb(223,128,53)" fg:x="159" fg:w="2"/><text x="12.7402%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="12.4902%" y="325" width="0.2357%" height="15" fill="rgb(251,199,15)" fg:x="159" fg:w="3"/><text x="12.7402%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="12.6473%" y="309" width="0.0786%" height="15" fill="rgb(235,168,42)" fg:x="161" fg:w="1"/><text x="12.8973%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="12.6473%" y="293" width="0.0786%" height="15" fill="rgb(250,210,17)" fg:x="161" fg:w="1"/><text x="12.8973%" y="303.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="12.6473%" y="277" width="0.0786%" height="15" fill="rgb(226,36,41)" fg:x="161" fg:w="1"/><text x="12.8973%" y="287.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="12.6473%" y="261" width="0.0786%" height="15" fill="rgb(225,87,10)" fg:x="161" fg:w="1"/><text x="12.8973%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.6473%" y="245" width="0.0786%" height="15" fill="rgb(228,83,9)" fg:x="161" fg:w="1"/><text x="12.8973%" y="255.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.55%)</title><rect x="12.2545%" y="341" width="0.5499%" height="15" fill="rgb(225,16,36)" fg:x="156" fg:w="7"/><text x="12.5045%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="12.7258%" y="325" width="0.0786%" height="15" fill="rgb(242,198,13)" fg:x="162" fg:w="1"/><text x="12.9758%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="12.7258%" y="309" width="0.0786%" height="15" fill="rgb(239,25,51)" fg:x="162" fg:w="1"/><text x="12.9758%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.79%)</title><rect x="12.0974%" y="357" width="0.7855%" height="15" fill="rgb(239,28,37)" fg:x="154" fg:w="10"/><text x="12.3474%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="12.8044%" y="341" width="0.0786%" height="15" fill="rgb(234,70,17)" fg:x="163" fg:w="1"/><text x="13.0544%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (11 samples, 0.86%)</title><rect x="12.0974%" y="373" width="0.8641%" height="15" fill="rgb(231,215,53)" fg:x="154" fg:w="11"/><text x="12.3474%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="12.8830%" y="357" width="0.0786%" height="15" fill="rgb(218,140,42)" fg:x="164" fg:w="1"/><text x="13.1330%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="12.8830%" y="341" width="0.0786%" height="15" fill="rgb(233,227,45)" fg:x="164" fg:w="1"/><text x="13.1330%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="12.8830%" y="325" width="0.0786%" height="15" fill="rgb(225,189,21)" fg:x="164" fg:w="1"/><text x="13.1330%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.55%)</title><rect x="12.9615%" y="373" width="0.5499%" height="15" fill="rgb(237,176,54)" fg:x="165" fg:w="7"/><text x="13.2115%" y="383.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.31%)</title><rect x="13.1972%" y="357" width="0.3142%" height="15" fill="rgb(215,131,46)" fg:x="168" fg:w="4"/><text x="13.4472%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="13.3543%" y="341" width="0.1571%" height="15" fill="rgb(218,95,20)" fg:x="170" fg:w="2"/><text x="13.6043%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="13.5899%" y="357" width="0.0786%" height="15" fill="rgb(208,198,12)" fg:x="173" fg:w="1"/><text x="13.8399%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.5899%" y="341" width="0.0786%" height="15" fill="rgb(239,107,50)" fg:x="173" fg:w="1"/><text x="13.8399%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="13.5899%" y="325" width="0.0786%" height="15" fill="rgb(240,217,37)" fg:x="173" fg:w="1"/><text x="13.8399%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.5899%" y="309" width="0.0786%" height="15" fill="rgb(242,197,49)" fg:x="173" fg:w="1"/><text x="13.8399%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="13.6685%" y="357" width="0.3142%" height="15" fill="rgb(219,171,17)" fg:x="174" fg:w="4"/><text x="13.9185%" y="367.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="13.7471%" y="341" width="0.2357%" height="15" fill="rgb(209,81,40)" fg:x="175" fg:w="3"/><text x="13.9971%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="13.8256%" y="325" width="0.1571%" height="15" fill="rgb(237,156,30)" fg:x="176" fg:w="2"/><text x="14.0756%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="13.8256%" y="309" width="0.1571%" height="15" fill="rgb(212,127,16)" fg:x="176" fg:w="2"/><text x="14.0756%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.9042%" y="293" width="0.0786%" height="15" fill="rgb(226,66,32)" fg:x="177" fg:w="1"/><text x="14.1542%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.9042%" y="277" width="0.0786%" height="15" fill="rgb(245,22,46)" fg:x="177" fg:w="1"/><text x="14.1542%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="13.9042%" y="261" width="0.0786%" height="15" fill="rgb(210,112,21)" fg:x="177" fg:w="1"/><text x="14.1542%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.39%)</title><rect x="13.9827%" y="341" width="0.3928%" height="15" fill="rgb(207,118,39)" fg:x="178" fg:w="5"/><text x="14.2327%" y="351.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="14.1398%" y="325" width="0.2357%" height="15" fill="rgb(205,206,35)" fg:x="180" fg:w="3"/><text x="14.3898%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="14.2184%" y="309" width="0.1571%" height="15" fill="rgb(222,120,2)" fg:x="181" fg:w="2"/><text x="14.4684%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.2969%" y="293" width="0.0786%" height="15" fill="rgb(205,38,18)" fg:x="182" fg:w="1"/><text x="14.5469%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.71%)</title><rect x="13.9827%" y="357" width="0.7070%" height="15" fill="rgb(226,61,2)" fg:x="178" fg:w="9"/><text x="14.2327%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.31%)</title><rect x="14.3755%" y="341" width="0.3142%" height="15" fill="rgb(242,161,23)" fg:x="183" fg:w="4"/><text x="14.6255%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.6112%" y="325" width="0.0786%" height="15" fill="rgb(213,13,52)" fg:x="186" fg:w="1"/><text x="14.8612%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.6112%" y="309" width="0.0786%" height="15" fill="rgb(246,209,47)" fg:x="186" fg:w="1"/><text x="14.8612%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.26%)</title><rect x="13.5114%" y="373" width="1.2569%" height="15" fill="rgb(214,41,3)" fg:x="172" fg:w="16"/><text x="13.7614%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.6897%" y="357" width="0.0786%" height="15" fill="rgb(236,119,38)" fg:x="187" fg:w="1"/><text x="14.9397%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.6897%" y="341" width="0.0786%" height="15" fill="rgb(218,50,11)" fg:x="187" fg:w="1"/><text x="14.9397%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.6897%" y="325" width="0.0786%" height="15" fill="rgb(228,38,11)" fg:x="187" fg:w="1"/><text x="14.9397%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (35 samples, 2.75%)</title><rect x="12.0974%" y="389" width="2.7494%" height="15" fill="rgb(212,13,9)" fg:x="154" fg:w="35"/><text x="12.3474%" y="399.50">se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.7683%" y="373" width="0.0786%" height="15" fill="rgb(208,211,9)" fg:x="188" fg:w="1"/><text x="15.0183%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.0825%" y="357" width="0.0786%" height="15" fill="rgb(239,39,32)" fg:x="192" fg:w="1"/><text x="15.3325%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="15.0825%" y="341" width="0.0786%" height="15" fill="rgb(254,179,26)" fg:x="192" fg:w="1"/><text x="15.3325%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="15.0825%" y="325" width="0.0786%" height="15" fill="rgb(249,165,28)" fg:x="192" fg:w="1"/><text x="15.3325%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="15.0825%" y="309" width="0.0786%" height="15" fill="rgb(225,59,50)" fg:x="192" fg:w="1"/><text x="15.3325%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (47 samples, 3.69%)</title><rect x="11.5475%" y="405" width="3.6921%" height="15" fill="rgb(209,122,5)" fg:x="147" fg:w="47"/><text x="11.7975%" y="415.50">serd..</text></g><g><title>std::io::Write::write_all (5 samples, 0.39%)</title><rect x="14.8468%" y="389" width="0.3928%" height="15" fill="rgb(214,65,34)" fg:x="189" fg:w="5"/><text x="15.0968%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.39%)</title><rect x="14.8468%" y="373" width="0.3928%" height="15" fill="rgb(249,183,32)" fg:x="189" fg:w="5"/><text x="15.0968%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="15.1610%" y="357" width="0.0786%" height="15" fill="rgb(218,122,24)" fg:x="193" fg:w="1"/><text x="15.4110%" y="367.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (57 samples, 4.48%)</title><rect x="10.9191%" y="421" width="4.4776%" height="15" fill="rgb(224,109,18)" fg:x="139" fg:w="57"/><text x="11.1691%" y="431.50">&lt;serd..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="15.2396%" y="405" width="0.1571%" height="15" fill="rgb(210,68,50)" fg:x="194" fg:w="2"/><text x="15.4896%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.3181%" y="389" width="0.0786%" height="15" fill="rgb(212,184,34)" fg:x="195" fg:w="1"/><text x="15.5681%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.3181%" y="373" width="0.0786%" height="15" fill="rgb(238,105,48)" fg:x="195" fg:w="1"/><text x="15.5681%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="15.3181%" y="357" width="0.0786%" height="15" fill="rgb(222,134,54)" fg:x="195" fg:w="1"/><text x="15.5681%" y="367.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="15.4753%" y="389" width="0.2357%" height="15" fill="rgb(246,24,43)" fg:x="197" fg:w="3"/><text x="15.7253%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.7109%" y="389" width="0.0786%" height="15" fill="rgb(227,169,22)" fg:x="200" fg:w="1"/><text x="15.9609%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="15.8680%" y="373" width="0.1571%" height="15" fill="rgb(253,152,4)" fg:x="202" fg:w="2"/><text x="16.1180%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="16.0251%" y="373" width="0.1571%" height="15" fill="rgb(219,158,36)" fg:x="204" fg:w="2"/><text x="16.2751%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.1037%" y="357" width="0.0786%" height="15" fill="rgb(251,128,40)" fg:x="205" fg:w="1"/><text x="16.3537%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.1822%" y="357" width="0.0786%" height="15" fill="rgb(254,101,39)" fg:x="206" fg:w="1"/><text x="16.4322%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (7 samples, 0.55%)</title><rect x="16.2608%" y="357" width="0.5499%" height="15" fill="rgb(221,168,40)" fg:x="207" fg:w="7"/><text x="16.5108%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.7321%" y="341" width="0.0786%" height="15" fill="rgb(221,14,27)" fg:x="213" fg:w="1"/><text x="16.9821%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.0463%" y="341" width="0.0786%" height="15" fill="rgb(207,36,43)" fg:x="217" fg:w="1"/><text x="17.2963%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.2035%" y="309" width="0.0786%" height="15" fill="rgb(240,172,53)" fg:x="219" fg:w="1"/><text x="17.4535%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.24%)</title><rect x="17.1249%" y="341" width="0.2357%" height="15" fill="rgb(241,138,43)" fg:x="218" fg:w="3"/><text x="17.3749%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="17.2035%" y="325" width="0.1571%" height="15" fill="rgb(227,78,19)" fg:x="219" fg:w="2"/><text x="17.4535%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.2820%" y="309" width="0.0786%" height="15" fill="rgb(215,127,44)" fg:x="220" fg:w="1"/><text x="17.5320%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.2820%" y="293" width="0.0786%" height="15" fill="rgb(227,13,10)" fg:x="220" fg:w="1"/><text x="17.5320%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.2820%" y="277" width="0.0786%" height="15" fill="rgb(249,177,6)" fg:x="220" fg:w="1"/><text x="17.5320%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.3606%" y="325" width="0.0786%" height="15" fill="rgb(215,154,26)" fg:x="221" fg:w="1"/><text x="17.6106%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (28 samples, 2.20%)</title><rect x="15.3967%" y="421" width="2.1995%" height="15" fill="rgb(250,168,20)" fg:x="196" fg:w="28"/><text x="15.6467%" y="431.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (28 samples, 2.20%)</title><rect x="15.3967%" y="405" width="2.1995%" height="15" fill="rgb(222,53,38)" fg:x="196" fg:w="28"/><text x="15.6467%" y="415.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (23 samples, 1.81%)</title><rect x="15.7895%" y="389" width="1.8068%" height="15" fill="rgb(245,154,5)" fg:x="201" fg:w="23"/><text x="16.0395%" y="399.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 1.41%)</title><rect x="16.1822%" y="373" width="1.4140%" height="15" fill="rgb(214,89,50)" fg:x="206" fg:w="18"/><text x="16.4322%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.79%)</title><rect x="16.8107%" y="357" width="0.7855%" height="15" fill="rgb(232,73,14)" fg:x="214" fg:w="10"/><text x="17.0607%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="17.3606%" y="341" width="0.2357%" height="15" fill="rgb(230,101,20)" fg:x="221" fg:w="3"/><text x="17.6106%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="17.4391%" y="325" width="0.1571%" height="15" fill="rgb(208,56,28)" fg:x="222" fg:w="2"/><text x="17.6891%" y="335.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="17.5962%" y="405" width="0.0786%" height="15" fill="rgb(247,205,22)" fg:x="224" fg:w="1"/><text x="17.8462%" y="415.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="17.5962%" y="389" width="0.0786%" height="15" fill="rgb(252,109,51)" fg:x="224" fg:w="1"/><text x="17.8462%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="17.5962%" y="373" width="0.0786%" height="15" fill="rgb(220,40,24)" fg:x="224" fg:w="1"/><text x="17.8462%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="17.5962%" y="357" width="0.0786%" height="15" fill="rgb(251,108,7)" fg:x="224" fg:w="1"/><text x="17.8462%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="17.6748%" y="373" width="0.2357%" height="15" fill="rgb(238,102,51)" fg:x="225" fg:w="3"/><text x="17.9248%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (3 samples, 0.24%)</title><rect x="17.9104%" y="373" width="0.2357%" height="15" fill="rgb(219,149,34)" fg:x="228" fg:w="3"/><text x="18.1604%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="17.9104%" y="357" width="0.2357%" height="15" fill="rgb(239,70,0)" fg:x="228" fg:w="3"/><text x="18.1604%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="17.9890%" y="341" width="0.1571%" height="15" fill="rgb(246,214,23)" fg:x="229" fg:w="2"/><text x="18.2390%" y="351.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="18.1461%" y="373" width="0.0786%" height="15" fill="rgb(239,221,51)" fg:x="231" fg:w="1"/><text x="18.3961%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="18.2247%" y="357" width="0.0786%" height="15" fill="rgb(254,62,14)" fg:x="232" fg:w="1"/><text x="18.4747%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="18.2247%" y="373" width="0.1571%" height="15" fill="rgb(253,57,33)" fg:x="232" fg:w="2"/><text x="18.4747%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.3032%" y="357" width="0.0786%" height="15" fill="rgb(229,34,6)" fg:x="233" fg:w="1"/><text x="18.5532%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="18.3818%" y="341" width="0.0786%" height="15" fill="rgb(235,191,23)" fg:x="234" fg:w="1"/><text x="18.6318%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.31%)</title><rect x="18.5389%" y="325" width="0.3142%" height="15" fill="rgb(217,207,27)" fg:x="236" fg:w="4"/><text x="18.7889%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="18.6174%" y="309" width="0.2357%" height="15" fill="rgb(232,41,44)" fg:x="237" fg:w="3"/><text x="18.8674%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="18.6960%" y="293" width="0.1571%" height="15" fill="rgb(221,188,19)" fg:x="238" fg:w="2"/><text x="18.9460%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.7745%" y="277" width="0.0786%" height="15" fill="rgb(245,180,45)" fg:x="239" fg:w="1"/><text x="19.0245%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.7745%" y="261" width="0.0786%" height="15" fill="rgb(250,220,42)" fg:x="239" fg:w="1"/><text x="19.0245%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.7745%" y="245" width="0.0786%" height="15" fill="rgb(234,16,34)" fg:x="239" fg:w="1"/><text x="19.0245%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.8531%" y="293" width="0.1571%" height="15" fill="rgb(233,217,23)" fg:x="240" fg:w="2"/><text x="19.1031%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.8531%" y="277" width="0.1571%" height="15" fill="rgb(209,22,46)" fg:x="240" fg:w="2"/><text x="19.1031%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.9317%" y="261" width="0.0786%" height="15" fill="rgb(213,101,18)" fg:x="241" fg:w="1"/><text x="19.1817%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="19.1673%" y="277" width="0.2357%" height="15" fill="rgb(215,179,52)" fg:x="244" fg:w="3"/><text x="19.4173%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="19.2459%" y="261" width="0.1571%" height="15" fill="rgb(223,50,25)" fg:x="245" fg:w="2"/><text x="19.4959%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="19.2459%" y="245" width="0.1571%" height="15" fill="rgb(224,51,44)" fg:x="245" fg:w="2"/><text x="19.4959%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="19.2459%" y="229" width="0.1571%" height="15" fill="rgb(224,13,54)" fg:x="245" fg:w="2"/><text x="19.4959%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.63%)</title><rect x="18.8531%" y="309" width="0.6284%" height="15" fill="rgb(219,58,47)" fg:x="240" fg:w="8"/><text x="19.1031%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.47%)</title><rect x="19.0102%" y="293" width="0.4713%" height="15" fill="rgb(246,124,34)" fg:x="242" fg:w="6"/><text x="19.2602%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.4030%" y="277" width="0.0786%" height="15" fill="rgb(245,109,25)" fg:x="247" fg:w="1"/><text x="19.6530%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.10%)</title><rect x="18.4603%" y="341" width="1.0998%" height="15" fill="rgb(235,48,23)" fg:x="235" fg:w="14"/><text x="18.7103%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.71%)</title><rect x="18.8531%" y="325" width="0.7070%" height="15" fill="rgb(229,203,36)" fg:x="240" fg:w="9"/><text x="19.1031%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.4815%" y="309" width="0.0786%" height="15" fill="rgb(234,180,9)" fg:x="248" fg:w="1"/><text x="19.7315%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (16 samples, 1.26%)</title><rect x="18.3818%" y="357" width="1.2569%" height="15" fill="rgb(228,98,45)" fg:x="234" fg:w="16"/><text x="18.6318%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="19.5601%" y="341" width="0.0786%" height="15" fill="rgb(240,24,36)" fg:x="249" fg:w="1"/><text x="19.8101%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.5601%" y="325" width="0.0786%" height="15" fill="rgb(227,154,19)" fg:x="249" fg:w="1"/><text x="19.8101%" y="335.50"></text></g><g><title>engine::session::Session::flush (120 samples, 9.43%)</title><rect x="10.2907%" y="517" width="9.4266%" height="15" fill="rgb(231,2,48)" fg:x="131" fg:w="120"/><text x="10.5407%" y="527.50">engine::sessi..</text></g><g><title>engine::session::state::State::close (118 samples, 9.27%)</title><rect x="10.4478%" y="501" width="9.2694%" height="15" fill="rgb(219,216,0)" fg:x="133" fg:w="118"/><text x="10.6978%" y="511.50">engine::sessi..</text></g><g><title>engine::session::state::State::flush_entities (118 samples, 9.27%)</title><rect x="10.4478%" y="485" width="9.2694%" height="15" fill="rgb(251,88,0)" fg:x="133" fg:w="118"/><text x="10.6978%" y="495.50">engine::sessi..</text></g><g><title>core::iter::adapters::try_process (115 samples, 9.03%)</title><rect x="10.6834%" y="469" width="9.0338%" height="15" fill="rgb(242,45,45)" fg:x="136" fg:w="115"/><text x="10.9334%" y="479.50">core::iter::a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (115 samples, 9.03%)</title><rect x="10.6834%" y="453" width="9.0338%" height="15" fill="rgb(218,149,45)" fg:x="136" fg:w="115"/><text x="10.9334%" y="463.50">&lt;alloc::vec::..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (114 samples, 8.96%)</title><rect x="10.7620%" y="437" width="8.9552%" height="15" fill="rgb(247,194,10)" fg:x="137" fg:w="114"/><text x="11.0120%" y="447.50">engine::sessi..</text></g><g><title>kernel::model::any_entity_changes (27 samples, 2.12%)</title><rect x="17.5962%" y="421" width="2.1210%" height="15" fill="rgb(234,33,37)" fg:x="224" fg:w="27"/><text x="17.8462%" y="431.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (26 samples, 2.04%)</title><rect x="17.6748%" y="405" width="2.0424%" height="15" fill="rgb(218,61,13)" fg:x="225" fg:w="26"/><text x="17.9248%" y="415.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (26 samples, 2.04%)</title><rect x="17.6748%" y="389" width="2.0424%" height="15" fill="rgb(210,80,52)" fg:x="225" fg:w="26"/><text x="17.9248%" y="399.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (17 samples, 1.34%)</title><rect x="18.3818%" y="373" width="1.3354%" height="15" fill="rgb(218,203,27)" fg:x="234" fg:w="17"/><text x="18.6318%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.6386%" y="357" width="0.0786%" height="15" fill="rgb(209,126,33)" fg:x="250" fg:w="1"/><text x="19.8886%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.6386%" y="341" width="0.0786%" height="15" fill="rgb(234,173,41)" fg:x="250" fg:w="1"/><text x="19.8886%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="19.6386%" y="325" width="0.0786%" height="15" fill="rgb(228,166,9)" fg:x="250" fg:w="1"/><text x="19.8886%" y="335.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="19.7172%" y="517" width="0.0786%" height="15" fill="rgb(208,124,43)" fg:x="251" fg:w="1"/><text x="19.9672%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="19.7172%" y="501" width="0.0786%" height="15" fill="rgb(212,154,38)" fg:x="251" fg:w="1"/><text x="19.9672%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="19.7172%" y="485" width="0.0786%" height="15" fill="rgb(246,179,35)" fg:x="251" fg:w="1"/><text x="19.9672%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="19.7172%" y="469" width="0.0786%" height="15" fill="rgb(251,3,50)" fg:x="251" fg:w="1"/><text x="19.9672%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.7172%" y="453" width="0.0786%" height="15" fill="rgb(219,96,8)" fg:x="251" fg:w="1"/><text x="19.9672%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.7172%" y="437" width="0.0786%" height="15" fill="rgb(251,216,33)" fg:x="251" fg:w="1"/><text x="19.9672%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.8743%" y="501" width="0.0786%" height="15" fill="rgb(243,145,29)" fg:x="253" fg:w="1"/><text x="20.1243%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="19.9529%" y="485" width="0.0786%" height="15" fill="rgb(210,75,20)" fg:x="254" fg:w="1"/><text x="20.2029%" y="495.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="19.9529%" y="469" width="0.0786%" height="15" fill="rgb(235,56,8)" fg:x="254" fg:w="1"/><text x="20.2029%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="19.9529%" y="453" width="0.0786%" height="15" fill="rgb(226,175,49)" fg:x="254" fg:w="1"/><text x="20.2029%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.9529%" y="437" width="0.0786%" height="15" fill="rgb(242,204,23)" fg:x="254" fg:w="1"/><text x="20.2029%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.9529%" y="421" width="0.0786%" height="15" fill="rgb(225,104,24)" fg:x="254" fg:w="1"/><text x="20.2029%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.9529%" y="405" width="0.0786%" height="15" fill="rgb(253,34,1)" fg:x="254" fg:w="1"/><text x="20.2029%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.9529%" y="389" width="0.0786%" height="15" fill="rgb(233,199,23)" fg:x="254" fg:w="1"/><text x="20.2029%" y="399.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="20.0314%" y="469" width="0.1571%" height="15" fill="rgb(247,7,51)" fg:x="255" fg:w="2"/><text x="20.2814%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.0314%" y="453" width="0.1571%" height="15" fill="rgb(214,146,12)" fg:x="255" fg:w="2"/><text x="20.2814%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.0314%" y="437" width="0.1571%" height="15" fill="rgb(234,181,43)" fg:x="255" fg:w="2"/><text x="20.2814%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.1100%" y="421" width="0.0786%" height="15" fill="rgb(239,148,6)" fg:x="256" fg:w="1"/><text x="20.3600%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.1100%" y="405" width="0.0786%" height="15" fill="rgb(206,151,17)" fg:x="256" fg:w="1"/><text x="20.3600%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="20.1100%" y="389" width="0.0786%" height="15" fill="rgb(213,215,10)" fg:x="256" fg:w="1"/><text x="20.3600%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="20.1100%" y="373" width="0.0786%" height="15" fill="rgb(215,220,44)" fg:x="256" fg:w="1"/><text x="20.3600%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="20.1885%" y="437" width="0.1571%" height="15" fill="rgb(245,205,37)" fg:x="257" fg:w="2"/><text x="20.4385%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="20.2671%" y="421" width="0.0786%" height="15" fill="rgb(245,130,43)" fg:x="258" fg:w="1"/><text x="20.5171%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (3 samples, 0.24%)</title><rect x="20.1885%" y="453" width="0.2357%" height="15" fill="rgb(231,227,38)" fg:x="257" fg:w="3"/><text x="20.4385%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.3456%" y="437" width="0.0786%" height="15" fill="rgb(233,185,4)" fg:x="259" fg:w="1"/><text x="20.5956%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.3456%" y="421" width="0.0786%" height="15" fill="rgb(224,154,43)" fg:x="259" fg:w="1"/><text x="20.5956%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="20.3456%" y="405" width="0.0786%" height="15" fill="rgb(235,156,15)" fg:x="259" fg:w="1"/><text x="20.5956%" y="415.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (6 samples, 0.47%)</title><rect x="20.0314%" y="485" width="0.4713%" height="15" fill="rgb(211,55,43)" fg:x="255" fg:w="6"/><text x="20.2814%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (4 samples, 0.31%)</title><rect x="20.1885%" y="469" width="0.3142%" height="15" fill="rgb(247,149,40)" fg:x="257" fg:w="4"/><text x="20.4385%" y="479.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="20.4242%" y="453" width="0.0786%" height="15" fill="rgb(232,171,16)" fg:x="260" fg:w="1"/><text x="20.6742%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.4242%" y="437" width="0.0786%" height="15" fill="rgb(215,117,49)" fg:x="260" fg:w="1"/><text x="20.6742%" y="447.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="20.5027%" y="485" width="0.0786%" height="15" fill="rgb(246,194,11)" fg:x="261" fg:w="1"/><text x="20.7527%" y="495.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="20.5027%" y="469" width="0.0786%" height="15" fill="rgb(242,101,44)" fg:x="261" fg:w="1"/><text x="20.7527%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.5027%" y="453" width="0.0786%" height="15" fill="rgb(226,174,6)" fg:x="261" fg:w="1"/><text x="20.7527%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="20.5027%" y="437" width="0.0786%" height="15" fill="rgb(213,150,20)" fg:x="261" fg:w="1"/><text x="20.7527%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.5813%" y="405" width="0.1571%" height="15" fill="rgb(222,124,42)" fg:x="262" fg:w="2"/><text x="20.8313%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.5813%" y="389" width="0.1571%" height="15" fill="rgb(250,19,47)" fg:x="262" fg:w="2"/><text x="20.8313%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.5813%" y="373" width="0.1571%" height="15" fill="rgb(241,217,19)" fg:x="262" fg:w="2"/><text x="20.8313%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.6599%" y="357" width="0.0786%" height="15" fill="rgb(207,210,34)" fg:x="263" fg:w="1"/><text x="20.9099%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.6599%" y="341" width="0.0786%" height="15" fill="rgb(244,45,4)" fg:x="263" fg:w="1"/><text x="20.9099%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.6599%" y="325" width="0.0786%" height="15" fill="rgb(252,134,50)" fg:x="263" fg:w="1"/><text x="20.9099%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.6599%" y="309" width="0.0786%" height="15" fill="rgb(238,74,2)" fg:x="263" fg:w="1"/><text x="20.9099%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.6599%" y="293" width="0.0786%" height="15" fill="rgb(226,58,46)" fg:x="263" fg:w="1"/><text x="20.9099%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.6599%" y="277" width="0.0786%" height="15" fill="rgb(232,83,35)" fg:x="263" fg:w="1"/><text x="20.9099%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.6599%" y="261" width="0.0786%" height="15" fill="rgb(212,148,47)" fg:x="263" fg:w="1"/><text x="20.9099%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.6599%" y="245" width="0.0786%" height="15" fill="rgb(235,29,1)" fg:x="263" fg:w="1"/><text x="20.9099%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.6599%" y="229" width="0.0786%" height="15" fill="rgb(247,55,37)" fg:x="263" fg:w="1"/><text x="20.9099%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.6599%" y="213" width="0.0786%" height="15" fill="rgb(222,48,3)" fg:x="263" fg:w="1"/><text x="20.9099%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.6599%" y="197" width="0.0786%" height="15" fill="rgb(234,21,33)" fg:x="263" fg:w="1"/><text x="20.9099%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.6599%" y="181" width="0.0786%" height="15" fill="rgb(247,178,53)" fg:x="263" fg:w="1"/><text x="20.9099%" y="191.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="20.5813%" y="437" width="0.2357%" height="15" fill="rgb(225,75,7)" fg:x="262" fg:w="3"/><text x="20.8313%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="20.5813%" y="421" width="0.2357%" height="15" fill="rgb(219,199,7)" fg:x="262" fg:w="3"/><text x="20.8313%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="20.7384%" y="405" width="0.0786%" height="15" fill="rgb(209,93,42)" fg:x="264" fg:w="1"/><text x="20.9884%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.7384%" y="389" width="0.0786%" height="15" fill="rgb(240,175,17)" fg:x="264" fg:w="1"/><text x="20.9884%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.7384%" y="373" width="0.0786%" height="15" fill="rgb(232,106,7)" fg:x="264" fg:w="1"/><text x="20.9884%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (3 samples, 0.24%)</title><rect x="20.8170%" y="421" width="0.2357%" height="15" fill="rgb(242,106,43)" fg:x="265" fg:w="3"/><text x="21.0670%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.9741%" y="405" width="0.0786%" height="15" fill="rgb(242,61,37)" fg:x="267" fg:w="1"/><text x="21.2241%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="20.9741%" y="389" width="0.0786%" height="15" fill="rgb(205,72,10)" fg:x="267" fg:w="1"/><text x="21.2241%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.9741%" y="373" width="0.0786%" height="15" fill="rgb(214,184,36)" fg:x="267" fg:w="1"/><text x="21.2241%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.9741%" y="357" width="0.0786%" height="15" fill="rgb(206,107,18)" fg:x="267" fg:w="1"/><text x="21.2241%" y="367.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (7 samples, 0.55%)</title><rect x="20.5813%" y="469" width="0.5499%" height="15" fill="rgb(210,75,5)" fg:x="262" fg:w="7"/><text x="20.8313%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (7 samples, 0.55%)</title><rect x="20.5813%" y="453" width="0.5499%" height="15" fill="rgb(205,3,19)" fg:x="262" fg:w="7"/><text x="20.8313%" y="463.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.31%)</title><rect x="20.8170%" y="437" width="0.3142%" height="15" fill="rgb(207,181,42)" fg:x="265" fg:w="4"/><text x="21.0670%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="21.0526%" y="421" width="0.0786%" height="15" fill="rgb(229,179,43)" fg:x="268" fg:w="1"/><text x="21.3026%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.0526%" y="405" width="0.0786%" height="15" fill="rgb(246,95,30)" fg:x="268" fg:w="1"/><text x="21.3026%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="21.0526%" y="389" width="0.0786%" height="15" fill="rgb(234,144,45)" fg:x="268" fg:w="1"/><text x="21.3026%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.0526%" y="373" width="0.0786%" height="15" fill="rgb(250,54,25)" fg:x="268" fg:w="1"/><text x="21.3026%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.0526%" y="357" width="0.0786%" height="15" fill="rgb(215,195,40)" fg:x="268" fg:w="1"/><text x="21.3026%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="21.0526%" y="341" width="0.0786%" height="15" fill="rgb(233,188,42)" fg:x="268" fg:w="1"/><text x="21.3026%" y="351.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="21.1312%" y="469" width="0.2357%" height="15" fill="rgb(247,227,35)" fg:x="269" fg:w="3"/><text x="21.3812%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="21.1312%" y="453" width="0.2357%" height="15" fill="rgb(249,124,27)" fg:x="269" fg:w="3"/><text x="21.3812%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="21.1312%" y="437" width="0.2357%" height="15" fill="rgb(219,207,25)" fg:x="269" fg:w="3"/><text x="21.3812%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="21.2097%" y="421" width="0.1571%" height="15" fill="rgb(241,216,47)" fg:x="270" fg:w="2"/><text x="21.4597%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="21.2883%" y="405" width="0.0786%" height="15" fill="rgb(233,82,50)" fg:x="271" fg:w="1"/><text x="21.5383%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="21.2883%" y="389" width="0.0786%" height="15" fill="rgb(232,63,2)" fg:x="271" fg:w="1"/><text x="21.5383%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.4454%" y="437" width="0.0786%" height="15" fill="rgb(236,184,28)" fg:x="273" fg:w="1"/><text x="21.6954%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.4454%" y="421" width="0.0786%" height="15" fill="rgb(254,63,27)" fg:x="273" fg:w="1"/><text x="21.6954%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="21.4454%" y="405" width="0.0786%" height="15" fill="rgb(253,106,28)" fg:x="273" fg:w="1"/><text x="21.6954%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="21.5240%" y="437" width="0.0786%" height="15" fill="rgb(225,141,39)" fg:x="274" fg:w="1"/><text x="21.7740%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.5240%" y="421" width="0.0786%" height="15" fill="rgb(222,157,20)" fg:x="274" fg:w="1"/><text x="21.7740%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.5240%" y="405" width="0.0786%" height="15" fill="rgb(210,190,9)" fg:x="274" fg:w="1"/><text x="21.7740%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="21.6811%" y="421" width="0.0786%" height="15" fill="rgb(242,167,7)" fg:x="276" fg:w="1"/><text x="21.9311%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="21.6811%" y="405" width="0.0786%" height="15" fill="rgb(227,82,41)" fg:x="276" fg:w="1"/><text x="21.9311%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="21.6811%" y="389" width="0.0786%" height="15" fill="rgb(222,131,13)" fg:x="276" fg:w="1"/><text x="21.9311%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="21.6811%" y="373" width="0.0786%" height="15" fill="rgb(221,98,26)" fg:x="276" fg:w="1"/><text x="21.9311%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.6811%" y="357" width="0.0786%" height="15" fill="rgb(251,63,52)" fg:x="276" fg:w="1"/><text x="21.9311%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.6811%" y="341" width="0.0786%" height="15" fill="rgb(246,25,43)" fg:x="276" fg:w="1"/><text x="21.9311%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="21.6811%" y="325" width="0.0786%" height="15" fill="rgb(247,167,15)" fg:x="276" fg:w="1"/><text x="21.9311%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (24 samples, 1.89%)</title><rect x="19.9529%" y="501" width="1.8853%" height="15" fill="rgb(240,104,42)" fg:x="254" fg:w="24"/><text x="20.2029%" y="511.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_entity (16 samples, 1.26%)</title><rect x="20.5813%" y="485" width="1.2569%" height="15" fill="rgb(224,54,6)" fg:x="262" fg:w="16"/><text x="20.8313%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (6 samples, 0.47%)</title><rect x="21.3668%" y="469" width="0.4713%" height="15" fill="rgb(244,108,35)" fg:x="272" fg:w="6"/><text x="21.6168%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.47%)</title><rect x="21.3668%" y="453" width="0.4713%" height="15" fill="rgb(216,154,2)" fg:x="272" fg:w="6"/><text x="21.6168%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="21.6025%" y="437" width="0.2357%" height="15" fill="rgb(222,8,47)" fg:x="275" fg:w="3"/><text x="21.8525%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.7596%" y="421" width="0.0786%" height="15" fill="rgb(252,93,1)" fg:x="277" fg:w="1"/><text x="22.0096%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.8382%" y="485" width="0.1571%" height="15" fill="rgb(223,226,51)" fg:x="278" fg:w="2"/><text x="22.0882%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.9167%" y="469" width="0.0786%" height="15" fill="rgb(206,147,9)" fg:x="279" fg:w="1"/><text x="22.1667%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.9167%" y="453" width="0.0786%" height="15" fill="rgb(248,180,41)" fg:x="279" fg:w="1"/><text x="22.1667%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.9167%" y="437" width="0.0786%" height="15" fill="rgb(209,47,50)" fg:x="279" fg:w="1"/><text x="22.1667%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="21.8382%" y="501" width="0.2357%" height="15" fill="rgb(243,65,31)" fg:x="278" fg:w="3"/><text x="22.0882%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.9953%" y="485" width="0.0786%" height="15" fill="rgb(228,128,1)" fg:x="280" fg:w="1"/><text x="22.2453%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.9953%" y="469" width="0.0786%" height="15" fill="rgb(231,192,16)" fg:x="280" fg:w="1"/><text x="22.2453%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.9953%" y="453" width="0.0786%" height="15" fill="rgb(224,26,40)" fg:x="280" fg:w="1"/><text x="22.2453%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.9953%" y="437" width="0.0786%" height="15" fill="rgb(214,192,17)" fg:x="280" fg:w="1"/><text x="22.2453%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.9953%" y="421" width="0.0786%" height="15" fill="rgb(225,147,18)" fg:x="280" fg:w="1"/><text x="22.2453%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.9953%" y="405" width="0.0786%" height="15" fill="rgb(205,35,11)" fg:x="280" fg:w="1"/><text x="22.2453%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.9953%" y="389" width="0.0786%" height="15" fill="rgb(242,40,42)" fg:x="280" fg:w="1"/><text x="22.2453%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.9953%" y="373" width="0.0786%" height="15" fill="rgb(250,170,13)" fg:x="280" fg:w="1"/><text x="22.2453%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.9953%" y="357" width="0.0786%" height="15" fill="rgb(240,161,28)" fg:x="280" fg:w="1"/><text x="22.2453%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.9953%" y="341" width="0.0786%" height="15" fill="rgb(245,179,12)" fg:x="280" fg:w="1"/><text x="22.2453%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.9953%" y="325" width="0.0786%" height="15" fill="rgb(250,92,32)" fg:x="280" fg:w="1"/><text x="22.2453%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.9953%" y="309" width="0.0786%" height="15" fill="rgb(233,10,40)" fg:x="280" fg:w="1"/><text x="22.2453%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="22.0738%" y="485" width="0.0786%" height="15" fill="rgb(217,98,1)" fg:x="281" fg:w="1"/><text x="22.3238%" y="495.50"></text></g><g><title>plugins_core::build::Build::save (32 samples, 2.51%)</title><rect x="19.7958%" y="517" width="2.5137%" height="15" fill="rgb(238,202,7)" fg:x="252" fg:w="32"/><text x="20.0458%" y="527.50">pl..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="22.0738%" y="501" width="0.2357%" height="15" fill="rgb(222,91,3)" fg:x="281" fg:w="3"/><text x="22.3238%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="22.1524%" y="485" width="0.1571%" height="15" fill="rgb(211,170,49)" fg:x="282" fg:w="2"/><text x="22.4024%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="22.1524%" y="469" width="0.1571%" height="15" fill="rgb(253,139,18)" fg:x="282" fg:w="2"/><text x="22.4024%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="22.1524%" y="453" width="0.1571%" height="15" fill="rgb(222,4,43)" fg:x="282" fg:w="2"/><text x="22.4024%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.1524%" y="437" width="0.1571%" height="15" fill="rgb(207,205,12)" fg:x="282" fg:w="2"/><text x="22.4024%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="22.1524%" y="421" width="0.1571%" height="15" fill="rgb(216,159,46)" fg:x="282" fg:w="2"/><text x="22.4024%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.2310%" y="405" width="0.0786%" height="15" fill="rgb(236,115,1)" fg:x="283" fg:w="1"/><text x="22.4810%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="22.2310%" y="389" width="0.0786%" height="15" fill="rgb(251,35,33)" fg:x="283" fg:w="1"/><text x="22.4810%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.2310%" y="373" width="0.0786%" height="15" fill="rgb(248,62,51)" fg:x="283" fg:w="1"/><text x="22.4810%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.2310%" y="357" width="0.0786%" height="15" fill="rgb(254,180,19)" fg:x="283" fg:w="1"/><text x="22.4810%" y="367.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="22.3095%" y="485" width="0.0786%" height="15" fill="rgb(217,100,32)" fg:x="284" fg:w="1"/><text x="22.5595%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="22.3095%" y="469" width="0.0786%" height="15" fill="rgb(224,71,22)" fg:x="284" fg:w="1"/><text x="22.5595%" y="479.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (2 samples, 0.16%)</title><rect x="22.3095%" y="517" width="0.1571%" height="15" fill="rgb(251,185,33)" fg:x="284" fg:w="2"/><text x="22.5595%" y="527.50"></text></g><g><title>plugins_core::tools::set_quantity (2 samples, 0.16%)</title><rect x="22.3095%" y="501" width="0.1571%" height="15" fill="rgb(209,75,48)" fg:x="284" fg:w="2"/><text x="22.5595%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="22.3881%" y="485" width="0.0786%" height="15" fill="rgb(253,190,16)" fg:x="285" fg:w="1"/><text x="22.6381%" y="495.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Carryable&gt;::serialize (1 samples, 0.08%)</title><rect x="22.3881%" y="469" width="0.0786%" height="15" fill="rgb(226,140,1)" fg:x="285" fg:w="1"/><text x="22.6381%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.3881%" y="453" width="0.0786%" height="15" fill="rgb(206,75,30)" fg:x="285" fg:w="1"/><text x="22.6381%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Kind&gt;::serialize (1 samples, 0.08%)</title><rect x="22.3881%" y="437" width="0.0786%" height="15" fill="rgb(231,208,37)" fg:x="285" fg:w="1"/><text x="22.6381%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.3881%" y="421" width="0.0786%" height="15" fill="rgb(238,136,40)" fg:x="285" fg:w="1"/><text x="22.6381%" y="431.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="22.4666%" y="485" width="0.0786%" height="15" fill="rgb(247,137,17)" fg:x="286" fg:w="1"/><text x="22.7166%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.5452%" y="405" width="0.0786%" height="15" fill="rgb(240,60,40)" fg:x="287" fg:w="1"/><text x="22.7952%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.5452%" y="389" width="0.0786%" height="15" fill="rgb(236,68,50)" fg:x="287" fg:w="1"/><text x="22.7952%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.5452%" y="373" width="0.0786%" height="15" fill="rgb(230,42,12)" fg:x="287" fg:w="1"/><text x="22.7952%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="22.5452%" y="453" width="0.2357%" height="15" fill="rgb(219,16,16)" fg:x="287" fg:w="3"/><text x="22.7952%" y="463.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="22.5452%" y="437" width="0.2357%" height="15" fill="rgb(220,38,35)" fg:x="287" fg:w="3"/><text x="22.7952%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="22.5452%" y="421" width="0.2357%" height="15" fill="rgb(228,33,1)" fg:x="287" fg:w="3"/><text x="22.7952%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="22.6237%" y="405" width="0.1571%" height="15" fill="rgb(241,46,31)" fg:x="288" fg:w="2"/><text x="22.8737%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.6237%" y="389" width="0.1571%" height="15" fill="rgb(232,58,20)" fg:x="288" fg:w="2"/><text x="22.8737%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="22.6237%" y="373" width="0.1571%" height="15" fill="rgb(206,228,53)" fg:x="288" fg:w="2"/><text x="22.8737%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.6237%" y="357" width="0.1571%" height="15" fill="rgb(206,88,33)" fg:x="288" fg:w="2"/><text x="22.8737%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="22.6237%" y="341" width="0.1571%" height="15" fill="rgb(238,69,7)" fg:x="288" fg:w="2"/><text x="22.8737%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.7023%" y="325" width="0.0786%" height="15" fill="rgb(250,21,46)" fg:x="289" fg:w="1"/><text x="22.9523%" y="335.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.31%)</title><rect x="22.5452%" y="485" width="0.3142%" height="15" fill="rgb(215,212,21)" fg:x="287" fg:w="4"/><text x="22.7952%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.31%)</title><rect x="22.5452%" y="469" width="0.3142%" height="15" fill="rgb(211,35,12)" fg:x="287" fg:w="4"/><text x="22.7952%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="22.7808%" y="453" width="0.0786%" height="15" fill="rgb(231,184,16)" fg:x="290" fg:w="1"/><text x="23.0308%" y="463.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="22.8594%" y="485" width="0.1571%" height="15" fill="rgb(242,140,15)" fg:x="291" fg:w="2"/><text x="23.1094%" y="495.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="22.8594%" y="469" width="0.1571%" height="15" fill="rgb(220,37,14)" fg:x="291" fg:w="2"/><text x="23.1094%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.8594%" y="453" width="0.1571%" height="15" fill="rgb(223,146,22)" fg:x="291" fg:w="2"/><text x="23.1094%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="22.8594%" y="437" width="0.1571%" height="15" fill="rgb(216,132,15)" fg:x="291" fg:w="2"/><text x="23.1094%" y="447.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="22.8594%" y="421" width="0.1571%" height="15" fill="rgb(248,83,5)" fg:x="291" fg:w="2"/><text x="23.1094%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.8594%" y="405" width="0.1571%" height="15" fill="rgb(231,206,48)" fg:x="291" fg:w="2"/><text x="23.1094%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.9379%" y="389" width="0.0786%" height="15" fill="rgb(253,185,37)" fg:x="292" fg:w="1"/><text x="23.1879%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.9379%" y="373" width="0.0786%" height="15" fill="rgb(208,21,44)" fg:x="292" fg:w="1"/><text x="23.1879%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.9379%" y="357" width="0.0786%" height="15" fill="rgb(236,125,4)" fg:x="292" fg:w="1"/><text x="23.1879%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.1736%" y="453" width="0.0786%" height="15" fill="rgb(226,134,25)" fg:x="295" fg:w="1"/><text x="23.4236%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.1736%" y="437" width="0.0786%" height="15" fill="rgb(250,201,12)" fg:x="295" fg:w="1"/><text x="23.4236%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.1736%" y="421" width="0.0786%" height="15" fill="rgb(225,92,18)" fg:x="295" fg:w="1"/><text x="23.4236%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.1736%" y="405" width="0.0786%" height="15" fill="rgb(227,35,22)" fg:x="295" fg:w="1"/><text x="23.4236%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.2522%" y="421" width="0.0786%" height="15" fill="rgb(214,180,52)" fg:x="296" fg:w="1"/><text x="23.5022%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (5 samples, 0.39%)</title><rect x="23.0951%" y="469" width="0.3928%" height="15" fill="rgb(233,55,38)" fg:x="294" fg:w="5"/><text x="23.3451%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="23.2522%" y="453" width="0.2357%" height="15" fill="rgb(249,171,43)" fg:x="296" fg:w="3"/><text x="23.5022%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="23.2522%" y="437" width="0.2357%" height="15" fill="rgb(239,87,2)" fg:x="296" fg:w="3"/><text x="23.5022%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="23.3307%" y="421" width="0.1571%" height="15" fill="rgb(248,141,5)" fg:x="297" fg:w="2"/><text x="23.5807%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.4093%" y="405" width="0.0786%" height="15" fill="rgb(238,33,42)" fg:x="298" fg:w="1"/><text x="23.6593%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.4093%" y="389" width="0.0786%" height="15" fill="rgb(231,57,19)" fg:x="298" fg:w="1"/><text x="23.6593%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.4093%" y="373" width="0.0786%" height="15" fill="rgb(214,78,53)" fg:x="298" fg:w="1"/><text x="23.6593%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.4093%" y="357" width="0.0786%" height="15" fill="rgb(206,132,29)" fg:x="298" fg:w="1"/><text x="23.6593%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="23.4878%" y="437" width="0.1571%" height="15" fill="rgb(248,174,31)" fg:x="299" fg:w="2"/><text x="23.7378%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="23.5664%" y="421" width="0.0786%" height="15" fill="rgb(221,87,13)" fg:x="300" fg:w="1"/><text x="23.8164%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="23.5664%" y="405" width="0.0786%" height="15" fill="rgb(223,197,17)" fg:x="300" fg:w="1"/><text x="23.8164%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.5664%" y="389" width="0.0786%" height="15" fill="rgb(220,144,50)" fg:x="300" fg:w="1"/><text x="23.8164%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.5664%" y="373" width="0.0786%" height="15" fill="rgb(244,201,11)" fg:x="300" fg:w="1"/><text x="23.8164%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.5664%" y="357" width="0.0786%" height="15" fill="rgb(249,81,34)" fg:x="300" fg:w="1"/><text x="23.8164%" y="367.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="23.5664%" y="341" width="0.0786%" height="15" fill="rgb(205,161,12)" fg:x="300" fg:w="1"/><text x="23.8164%" y="351.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="23.5664%" y="325" width="0.0786%" height="15" fill="rgb(252,139,50)" fg:x="300" fg:w="1"/><text x="23.8164%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.6449%" y="421" width="0.0786%" height="15" fill="rgb(205,169,14)" fg:x="301" fg:w="1"/><text x="23.8949%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.7235%" y="389" width="0.1571%" height="15" fill="rgb(248,198,33)" fg:x="302" fg:w="2"/><text x="23.9735%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.8020%" y="373" width="0.0786%" height="15" fill="rgb(236,23,21)" fg:x="303" fg:w="1"/><text x="24.0520%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.8020%" y="357" width="0.0786%" height="15" fill="rgb(231,13,38)" fg:x="303" fg:w="1"/><text x="24.0520%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.8020%" y="341" width="0.0786%" height="15" fill="rgb(239,139,21)" fg:x="303" fg:w="1"/><text x="24.0520%" y="351.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (13 samples, 1.02%)</title><rect x="23.0165%" y="485" width="1.0212%" height="15" fill="rgb(222,164,45)" fg:x="293" fg:w="13"/><text x="23.2665%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (7 samples, 0.55%)</title><rect x="23.4878%" y="469" width="0.5499%" height="15" fill="rgb(230,52,27)" fg:x="299" fg:w="7"/><text x="23.7378%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (7 samples, 0.55%)</title><rect x="23.4878%" y="453" width="0.5499%" height="15" fill="rgb(227,143,42)" fg:x="299" fg:w="7"/><text x="23.7378%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.39%)</title><rect x="23.6449%" y="437" width="0.3928%" height="15" fill="rgb(249,127,1)" fg:x="301" fg:w="5"/><text x="23.8949%" y="447.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.31%)</title><rect x="23.7235%" y="421" width="0.3142%" height="15" fill="rgb(243,107,26)" fg:x="302" fg:w="4"/><text x="23.9735%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.31%)</title><rect x="23.7235%" y="405" width="0.3142%" height="15" fill="rgb(225,7,45)" fg:x="302" fg:w="4"/><text x="23.9735%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="23.8806%" y="389" width="0.1571%" height="15" fill="rgb(241,88,38)" fg:x="304" fg:w="2"/><text x="24.1306%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.8806%" y="373" width="0.1571%" height="15" fill="rgb(226,121,9)" fg:x="304" fg:w="2"/><text x="24.1306%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="23.8806%" y="357" width="0.1571%" height="15" fill="rgb(253,60,29)" fg:x="304" fg:w="2"/><text x="24.1306%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.9592%" y="341" width="0.0786%" height="15" fill="rgb(244,181,39)" fg:x="305" fg:w="1"/><text x="24.2092%" y="351.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="24.0377%" y="469" width="0.1571%" height="15" fill="rgb(252,203,31)" fg:x="306" fg:w="2"/><text x="24.2877%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="24.1163%" y="453" width="0.0786%" height="15" fill="rgb(224,120,8)" fg:x="307" fg:w="1"/><text x="24.3663%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="24.1163%" y="437" width="0.0786%" height="15" fill="rgb(205,171,54)" fg:x="307" fg:w="1"/><text x="24.3663%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="24.1948%" y="453" width="0.0786%" height="15" fill="rgb(235,89,11)" fg:x="308" fg:w="1"/><text x="24.4448%" y="463.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (24 samples, 1.89%)</title><rect x="22.4666%" y="517" width="1.8853%" height="15" fill="rgb(212,180,28)" fg:x="286" fg:w="24"/><text x="22.7166%" y="527.50">p..</text></g><g><title>plugins_core::tools::set_container (24 samples, 1.89%)</title><rect x="22.4666%" y="501" width="1.8853%" height="15" fill="rgb(247,84,49)" fg:x="286" fg:w="24"/><text x="22.7166%" y="511.50">p..</text></g><g><title>plugins_core::location::Location::set (4 samples, 0.31%)</title><rect x="24.0377%" y="485" width="0.3142%" height="15" fill="rgb(236,187,52)" fg:x="306" fg:w="4"/><text x="24.2877%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="24.1948%" y="469" width="0.1571%" height="15" fill="rgb(227,24,15)" fg:x="308" fg:w="2"/><text x="24.4448%" y="479.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="24.2734%" y="453" width="0.0786%" height="15" fill="rgb(227,211,13)" fg:x="309" fg:w="1"/><text x="24.5234%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.2734%" y="437" width="0.0786%" height="15" fill="rgb(245,52,14)" fg:x="309" fg:w="1"/><text x="24.5234%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="24.3519%" y="501" width="0.1571%" height="15" fill="rgb(225,185,13)" fg:x="310" fg:w="2"/><text x="24.6019%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="24.3519%" y="485" width="0.1571%" height="15" fill="rgb(217,160,29)" fg:x="310" fg:w="2"/><text x="24.6019%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="24.3519%" y="469" width="0.1571%" height="15" fill="rgb(216,115,53)" fg:x="310" fg:w="2"/><text x="24.6019%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="24.3519%" y="453" width="0.1571%" height="15" fill="rgb(236,99,5)" fg:x="310" fg:w="2"/><text x="24.6019%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.4305%" y="437" width="0.0786%" height="15" fill="rgb(222,60,38)" fg:x="311" fg:w="1"/><text x="24.6805%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="24.5090%" y="485" width="0.1571%" height="15" fill="rgb(212,82,22)" fg:x="312" fg:w="2"/><text x="24.7590%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.5876%" y="469" width="0.0786%" height="15" fill="rgb(214,48,28)" fg:x="313" fg:w="1"/><text x="24.8376%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.6661%" y="485" width="0.0786%" height="15" fill="rgb(245,196,50)" fg:x="314" fg:w="1"/><text x="24.9161%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::add_username_to_key (4 samples, 0.31%)</title><rect x="24.5090%" y="501" width="0.3142%" height="15" fill="rgb(225,159,46)" fg:x="312" fg:w="4"/><text x="24.7590%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="24.7447%" y="485" width="0.0786%" height="15" fill="rgb(207,195,48)" fg:x="315" fg:w="1"/><text x="24.9947%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="24.7447%" y="469" width="0.0786%" height="15" fill="rgb(240,73,3)" fg:x="315" fg:w="1"/><text x="24.9947%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.7447%" y="453" width="0.0786%" height="15" fill="rgb(245,57,23)" fg:x="315" fg:w="1"/><text x="24.9947%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="24.7447%" y="437" width="0.0786%" height="15" fill="rgb(240,75,18)" fg:x="315" fg:w="1"/><text x="24.9947%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="24.7447%" y="421" width="0.0786%" height="15" fill="rgb(238,168,12)" fg:x="315" fg:w="1"/><text x="24.9947%" y="431.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="24.8233%" y="485" width="0.0786%" height="15" fill="rgb(226,20,40)" fg:x="316" fg:w="1"/><text x="25.0733%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.8233%" y="469" width="0.0786%" height="15" fill="rgb(224,130,35)" fg:x="316" fg:w="1"/><text x="25.0733%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.8233%" y="453" width="0.0786%" height="15" fill="rgb(225,63,41)" fg:x="316" fg:w="1"/><text x="25.0733%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="24.8233%" y="437" width="0.0786%" height="15" fill="rgb(219,3,3)" fg:x="316" fg:w="1"/><text x="25.0733%" y="447.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="24.9018%" y="485" width="0.1571%" height="15" fill="rgb(218,157,4)" fg:x="317" fg:w="2"/><text x="25.1518%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="24.9018%" y="469" width="0.1571%" height="15" fill="rgb(232,76,36)" fg:x="317" fg:w="2"/><text x="25.1518%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="24.9018%" y="453" width="0.1571%" height="15" fill="rgb(247,36,0)" fg:x="317" fg:w="2"/><text x="25.1518%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.9018%" y="437" width="0.1571%" height="15" fill="rgb(205,2,34)" fg:x="317" fg:w="2"/><text x="25.1518%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (5 samples, 0.39%)</title><rect x="24.8233%" y="501" width="0.3928%" height="15" fill="rgb(239,136,13)" fg:x="316" fg:w="5"/><text x="25.0733%" y="511.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="25.0589%" y="485" width="0.1571%" height="15" fill="rgb(253,122,12)" fg:x="319" fg:w="2"/><text x="25.3089%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="25.1375%" y="469" width="0.0786%" height="15" fill="rgb(222,174,7)" fg:x="320" fg:w="1"/><text x="25.3875%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.1375%" y="453" width="0.0786%" height="15" fill="rgb(208,191,42)" fg:x="320" fg:w="1"/><text x="25.3875%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="25.1375%" y="437" width="0.0786%" height="15" fill="rgb(237,212,15)" fg:x="320" fg:w="1"/><text x="25.3875%" y="447.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="25.1375%" y="421" width="0.0786%" height="15" fill="rgb(215,65,20)" fg:x="320" fg:w="1"/><text x="25.3875%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="25.1375%" y="405" width="0.0786%" height="15" fill="rgb(232,103,11)" fg:x="320" fg:w="1"/><text x="25.3875%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.2160%" y="405" width="0.0786%" height="15" fill="rgb(235,148,18)" fg:x="321" fg:w="1"/><text x="25.4660%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.2946%" y="373" width="0.0786%" height="15" fill="rgb(240,173,7)" fg:x="322" fg:w="1"/><text x="25.5446%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.2946%" y="357" width="0.0786%" height="15" fill="rgb(228,182,25)" fg:x="322" fg:w="1"/><text x="25.5446%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.2946%" y="341" width="0.0786%" height="15" fill="rgb(247,3,52)" fg:x="322" fg:w="1"/><text x="25.5446%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.2946%" y="325" width="0.0786%" height="15" fill="rgb(226,155,8)" fg:x="322" fg:w="1"/><text x="25.5446%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="25.2160%" y="421" width="0.2357%" height="15" fill="rgb(243,195,38)" fg:x="321" fg:w="3"/><text x="25.4660%" y="431.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="25.2946%" y="405" width="0.1571%" height="15" fill="rgb(254,181,33)" fg:x="322" fg:w="2"/><text x="25.5446%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="25.2946%" y="389" width="0.1571%" height="15" fill="rgb(232,98,23)" fg:x="322" fg:w="2"/><text x="25.5446%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="25.3731%" y="373" width="0.0786%" height="15" fill="rgb(205,23,10)" fg:x="323" fg:w="1"/><text x="25.6231%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.3731%" y="357" width="0.0786%" height="15" fill="rgb(212,124,38)" fg:x="323" fg:w="1"/><text x="25.6231%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="25.3731%" y="341" width="0.0786%" height="15" fill="rgb(228,207,2)" fg:x="323" fg:w="1"/><text x="25.6231%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.3731%" y="325" width="0.0786%" height="15" fill="rgb(215,120,22)" fg:x="323" fg:w="1"/><text x="25.6231%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="25.3731%" y="309" width="0.0786%" height="15" fill="rgb(251,172,33)" fg:x="323" fg:w="1"/><text x="25.6231%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.3731%" y="293" width="0.0786%" height="15" fill="rgb(250,83,2)" fg:x="323" fg:w="1"/><text x="25.6231%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="25.3731%" y="277" width="0.0786%" height="15" fill="rgb(210,132,53)" fg:x="323" fg:w="1"/><text x="25.6231%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.4517%" y="261" width="0.0786%" height="15" fill="rgb(221,208,36)" fg:x="324" fg:w="1"/><text x="25.7017%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.4517%" y="245" width="0.0786%" height="15" fill="rgb(205,192,46)" fg:x="324" fg:w="1"/><text x="25.7017%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="25.4517%" y="229" width="0.0786%" height="15" fill="rgb(223,163,14)" fg:x="324" fg:w="1"/><text x="25.7017%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="25.4517%" y="213" width="0.0786%" height="15" fill="rgb(218,41,28)" fg:x="324" fg:w="1"/><text x="25.7017%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="25.4517%" y="197" width="0.0786%" height="15" fill="rgb(235,104,10)" fg:x="324" fg:w="1"/><text x="25.7017%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="25.4517%" y="181" width="0.0786%" height="15" fill="rgb(246,17,4)" fg:x="324" fg:w="1"/><text x="25.7017%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.4517%" y="165" width="0.0786%" height="15" fill="rgb(240,7,16)" fg:x="324" fg:w="1"/><text x="25.7017%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.4517%" y="373" width="0.1571%" height="15" fill="rgb(213,160,23)" fg:x="324" fg:w="2"/><text x="25.7017%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.4517%" y="357" width="0.1571%" height="15" fill="rgb(251,179,49)" fg:x="324" fg:w="2"/><text x="25.7017%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="25.4517%" y="341" width="0.1571%" height="15" fill="rgb(247,198,10)" fg:x="324" fg:w="2"/><text x="25.7017%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="25.4517%" y="325" width="0.1571%" height="15" fill="rgb(220,65,29)" fg:x="324" fg:w="2"/><text x="25.7017%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="25.4517%" y="309" width="0.1571%" height="15" fill="rgb(237,171,28)" fg:x="324" fg:w="2"/><text x="25.7017%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="25.4517%" y="293" width="0.1571%" height="15" fill="rgb(228,44,26)" fg:x="324" fg:w="2"/><text x="25.7017%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="25.4517%" y="277" width="0.1571%" height="15" fill="rgb(216,210,27)" fg:x="324" fg:w="2"/><text x="25.7017%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="25.5302%" y="261" width="0.0786%" height="15" fill="rgb(252,10,17)" fg:x="325" fg:w="1"/><text x="25.7802%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="25.5302%" y="245" width="0.0786%" height="15" fill="rgb(214,172,30)" fg:x="325" fg:w="1"/><text x="25.7802%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.6088%" y="309" width="0.0786%" height="15" fill="rgb(253,130,48)" fg:x="326" fg:w="1"/><text x="25.8588%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="25.6088%" y="293" width="0.0786%" height="15" fill="rgb(226,99,43)" fg:x="326" fg:w="1"/><text x="25.8588%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="25.6088%" y="277" width="0.0786%" height="15" fill="rgb(239,111,26)" fg:x="326" fg:w="1"/><text x="25.8588%" y="287.50"></text></g><g><title>core::iter::adapters::try_process (7 samples, 0.55%)</title><rect x="25.2160%" y="501" width="0.5499%" height="15" fill="rgb(240,27,53)" fg:x="321" fg:w="7"/><text x="25.4660%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.55%)</title><rect x="25.2160%" y="485" width="0.5499%" height="15" fill="rgb(254,163,12)" fg:x="321" fg:w="7"/><text x="25.4660%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.55%)</title><rect x="25.2160%" y="469" width="0.5499%" height="15" fill="rgb(225,51,48)" fg:x="321" fg:w="7"/><text x="25.4660%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (7 samples, 0.55%)</title><rect x="25.2160%" y="453" width="0.5499%" height="15" fill="rgb(205,19,32)" fg:x="321" fg:w="7"/><text x="25.4660%" y="463.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (7 samples, 0.55%)</title><rect x="25.2160%" y="437" width="0.5499%" height="15" fill="rgb(218,119,26)" fg:x="321" fg:w="7"/><text x="25.4660%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.31%)</title><rect x="25.4517%" y="421" width="0.3142%" height="15" fill="rgb(231,173,33)" fg:x="324" fg:w="4"/><text x="25.7017%" y="431.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.31%)</title><rect x="25.4517%" y="405" width="0.3142%" height="15" fill="rgb(241,100,29)" fg:x="324" fg:w="4"/><text x="25.7017%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.31%)</title><rect x="25.4517%" y="389" width="0.3142%" height="15" fill="rgb(250,194,34)" fg:x="324" fg:w="4"/><text x="25.7017%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="25.6088%" y="373" width="0.1571%" height="15" fill="rgb(215,23,50)" fg:x="326" fg:w="2"/><text x="25.8588%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.6088%" y="357" width="0.1571%" height="15" fill="rgb(206,49,37)" fg:x="326" fg:w="2"/><text x="25.8588%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="25.6088%" y="341" width="0.1571%" height="15" fill="rgb(247,39,21)" fg:x="326" fg:w="2"/><text x="25.8588%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.6088%" y="325" width="0.1571%" height="15" fill="rgb(209,220,15)" fg:x="326" fg:w="2"/><text x="25.8588%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="25.6874%" y="309" width="0.0786%" height="15" fill="rgb(206,41,33)" fg:x="327" fg:w="1"/><text x="25.9374%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.6874%" y="293" width="0.0786%" height="15" fill="rgb(221,225,45)" fg:x="327" fg:w="1"/><text x="25.9374%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.6874%" y="277" width="0.0786%" height="15" fill="rgb(216,27,18)" fg:x="327" fg:w="1"/><text x="25.9374%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (1 samples, 0.08%)</title><rect x="25.7659%" y="501" width="0.0786%" height="15" fill="rgb(250,193,34)" fg:x="328" fg:w="1"/><text x="26.0159%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.0016%" y="469" width="0.0786%" height="15" fill="rgb(227,215,20)" fg:x="331" fg:w="1"/><text x="26.2516%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.0016%" y="453" width="0.0786%" height="15" fill="rgb(242,211,27)" fg:x="331" fg:w="1"/><text x="26.2516%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.0016%" y="437" width="0.0786%" height="15" fill="rgb(229,190,30)" fg:x="331" fg:w="1"/><text x="26.2516%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.0016%" y="421" width="0.0786%" height="15" fill="rgb(253,31,29)" fg:x="331" fg:w="1"/><text x="26.2516%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.0016%" y="405" width="0.0786%" height="15" fill="rgb(229,177,52)" fg:x="331" fg:w="1"/><text x="26.2516%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.0016%" y="389" width="0.0786%" height="15" fill="rgb(226,88,8)" fg:x="331" fg:w="1"/><text x="26.2516%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.0016%" y="373" width="0.0786%" height="15" fill="rgb(214,55,27)" fg:x="331" fg:w="1"/><text x="26.2516%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.0016%" y="357" width="0.0786%" height="15" fill="rgb(233,202,5)" fg:x="331" fg:w="1"/><text x="26.2516%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.0016%" y="341" width="0.0786%" height="15" fill="rgb(251,49,30)" fg:x="331" fg:w="1"/><text x="26.2516%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.0016%" y="325" width="0.0786%" height="15" fill="rgb(235,18,52)" fg:x="331" fg:w="1"/><text x="26.2516%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.0016%" y="309" width="0.0786%" height="15" fill="rgb(250,111,51)" fg:x="331" fg:w="1"/><text x="26.2516%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.0016%" y="293" width="0.0786%" height="15" fill="rgb(218,13,25)" fg:x="331" fg:w="1"/><text x="26.2516%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="26.0801%" y="453" width="0.0786%" height="15" fill="rgb(248,96,7)" fg:x="332" fg:w="1"/><text x="26.3301%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="26.0801%" y="469" width="0.1571%" height="15" fill="rgb(217,31,15)" fg:x="332" fg:w="2"/><text x="26.3301%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.1587%" y="453" width="0.0786%" height="15" fill="rgb(228,59,49)" fg:x="333" fg:w="1"/><text x="26.4087%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="26.1587%" y="437" width="0.0786%" height="15" fill="rgb(210,152,38)" fg:x="333" fg:w="1"/><text x="26.4087%" y="447.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (6 samples, 0.47%)</title><rect x="25.9230%" y="485" width="0.4713%" height="15" fill="rgb(206,71,11)" fg:x="330" fg:w="6"/><text x="26.1730%" y="495.50"></text></g><g><title>kernel::model::base::EntityKey::new (2 samples, 0.16%)</title><rect x="26.2372%" y="469" width="0.1571%" height="15" fill="rgb(244,199,5)" fg:x="334" fg:w="2"/><text x="26.4872%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="26.2372%" y="453" width="0.1571%" height="15" fill="rgb(253,49,1)" fg:x="334" fg:w="2"/><text x="26.4872%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="26.3943%" y="437" width="0.1571%" height="15" fill="rgb(225,206,40)" fg:x="336" fg:w="2"/><text x="26.6443%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="26.3943%" y="421" width="0.1571%" height="15" fill="rgb(243,116,47)" fg:x="336" fg:w="2"/><text x="26.6443%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="26.3943%" y="405" width="0.1571%" height="15" fill="rgb(219,225,16)" fg:x="336" fg:w="2"/><text x="26.6443%" y="415.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="26.3943%" y="389" width="0.1571%" height="15" fill="rgb(233,29,47)" fg:x="336" fg:w="2"/><text x="26.6443%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.5515%" y="389" width="0.0786%" height="15" fill="rgb(250,179,18)" fg:x="338" fg:w="1"/><text x="26.8015%" y="399.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="26.5515%" y="405" width="0.1571%" height="15" fill="rgb(215,176,6)" fg:x="338" fg:w="2"/><text x="26.8015%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="26.6300%" y="389" width="0.0786%" height="15" fill="rgb(214,117,39)" fg:x="339" fg:w="1"/><text x="26.8800%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.6300%" y="373" width="0.0786%" height="15" fill="rgb(247,183,36)" fg:x="339" fg:w="1"/><text x="26.8800%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.6300%" y="357" width="0.0786%" height="15" fill="rgb(237,200,3)" fg:x="339" fg:w="1"/><text x="26.8800%" y="367.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="26.5515%" y="437" width="0.2357%" height="15" fill="rgb(212,220,24)" fg:x="338" fg:w="3"/><text x="26.8015%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="26.5515%" y="421" width="0.2357%" height="15" fill="rgb(245,216,20)" fg:x="338" fg:w="3"/><text x="26.8015%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.7086%" y="405" width="0.0786%" height="15" fill="rgb(219,124,7)" fg:x="340" fg:w="1"/><text x="26.9586%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.63%)</title><rect x="27.0228%" y="357" width="0.6284%" height="15" fill="rgb(227,167,8)" fg:x="344" fg:w="8"/><text x="27.2728%" y="367.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.47%)</title><rect x="27.1799%" y="341" width="0.4713%" height="15" fill="rgb(241,37,2)" fg:x="346" fg:w="6"/><text x="27.4299%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="27.4156%" y="325" width="0.2357%" height="15" fill="rgb(238,134,33)" fg:x="349" fg:w="3"/><text x="27.6656%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="27.4941%" y="309" width="0.1571%" height="15" fill="rgb(248,48,27)" fg:x="350" fg:w="2"/><text x="27.7441%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="27.4941%" y="293" width="0.1571%" height="15" fill="rgb(212,14,16)" fg:x="350" fg:w="2"/><text x="27.7441%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="27.4941%" y="277" width="0.1571%" height="15" fill="rgb(217,205,37)" fg:x="350" fg:w="2"/><text x="27.7441%" y="287.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="27.4941%" y="261" width="0.1571%" height="15" fill="rgb(233,185,47)" fg:x="350" fg:w="2"/><text x="27.7441%" y="271.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (11 samples, 0.86%)</title><rect x="27.0228%" y="373" width="0.8641%" height="15" fill="rgb(244,88,8)" fg:x="344" fg:w="11"/><text x="27.2728%" y="383.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="27.6512%" y="357" width="0.2357%" height="15" fill="rgb(213,0,20)" fg:x="352" fg:w="3"/><text x="27.9012%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="27.7298%" y="341" width="0.1571%" height="15" fill="rgb(238,159,36)" fg:x="353" fg:w="2"/><text x="27.9798%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="27.7298%" y="325" width="0.1571%" height="15" fill="rgb(253,173,17)" fg:x="353" fg:w="2"/><text x="27.9798%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="27.9654%" y="357" width="0.0786%" height="15" fill="rgb(221,23,28)" fg:x="356" fg:w="1"/><text x="28.2154%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.9654%" y="341" width="0.0786%" height="15" fill="rgb(218,113,15)" fg:x="356" fg:w="1"/><text x="28.2154%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.63%)</title><rect x="28.0440%" y="357" width="0.6284%" height="15" fill="rgb(233,58,3)" fg:x="357" fg:w="8"/><text x="28.2940%" y="367.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.47%)</title><rect x="28.2011%" y="341" width="0.4713%" height="15" fill="rgb(250,46,35)" fg:x="359" fg:w="6"/><text x="28.4511%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="28.4368%" y="325" width="0.2357%" height="15" fill="rgb(210,169,11)" fg:x="362" fg:w="3"/><text x="28.6868%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="28.5153%" y="309" width="0.1571%" height="15" fill="rgb(246,88,19)" fg:x="363" fg:w="2"/><text x="28.7653%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="28.5939%" y="293" width="0.0786%" height="15" fill="rgb(206,81,49)" fg:x="364" fg:w="1"/><text x="28.8439%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="28.5939%" y="277" width="0.0786%" height="15" fill="rgb(232,144,18)" fg:x="364" fg:w="1"/><text x="28.8439%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="28.5939%" y="261" width="0.0786%" height="15" fill="rgb(235,2,27)" fg:x="364" fg:w="1"/><text x="28.8439%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="28.7510%" y="309" width="0.1571%" height="15" fill="rgb(239,157,39)" fg:x="366" fg:w="2"/><text x="29.0010%" y="319.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.7510%" y="293" width="0.1571%" height="15" fill="rgb(220,11,17)" fg:x="366" fg:w="2"/><text x="29.0010%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.8295%" y="277" width="0.0786%" height="15" fill="rgb(243,94,50)" fg:x="367" fg:w="1"/><text x="29.0795%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.8295%" y="261" width="0.0786%" height="15" fill="rgb(218,22,0)" fg:x="367" fg:w="1"/><text x="29.0795%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="28.9866%" y="293" width="0.0786%" height="15" fill="rgb(249,70,21)" fg:x="369" fg:w="1"/><text x="29.2366%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.31%)</title><rect x="28.9081%" y="309" width="0.3142%" height="15" fill="rgb(245,111,46)" fg:x="368" fg:w="4"/><text x="29.1581%" y="319.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="29.0652%" y="293" width="0.1571%" height="15" fill="rgb(244,183,12)" fg:x="370" fg:w="2"/><text x="29.3152%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="29.0652%" y="277" width="0.1571%" height="15" fill="rgb(207,117,0)" fg:x="370" fg:w="2"/><text x="29.3152%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (8 samples, 0.63%)</title><rect x="28.6724%" y="341" width="0.6284%" height="15" fill="rgb(206,20,43)" fg:x="365" fg:w="8"/><text x="28.9224%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.63%)</title><rect x="28.6724%" y="325" width="0.6284%" height="15" fill="rgb(221,104,11)" fg:x="365" fg:w="8"/><text x="28.9224%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.2223%" y="309" width="0.0786%" height="15" fill="rgb(254,36,50)" fg:x="372" fg:w="1"/><text x="29.4723%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.2223%" y="293" width="0.0786%" height="15" fill="rgb(252,17,15)" fg:x="372" fg:w="1"/><text x="29.4723%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.2223%" y="277" width="0.0786%" height="15" fill="rgb(219,129,43)" fg:x="372" fg:w="1"/><text x="29.4723%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.6151%" y="293" width="0.0786%" height="15" fill="rgb(205,34,45)" fg:x="377" fg:w="1"/><text x="29.8651%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.47%)</title><rect x="29.3009%" y="341" width="0.4713%" height="15" fill="rgb(251,201,32)" fg:x="373" fg:w="6"/><text x="29.5509%" y="351.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.31%)</title><rect x="29.4580%" y="325" width="0.3142%" height="15" fill="rgb(205,56,0)" fg:x="375" fg:w="4"/><text x="29.7080%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="29.6151%" y="309" width="0.1571%" height="15" fill="rgb(211,193,27)" fg:x="377" fg:w="2"/><text x="29.8651%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="29.6936%" y="293" width="0.0786%" height="15" fill="rgb(231,100,42)" fg:x="378" fg:w="1"/><text x="29.9436%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="29.8507%" y="325" width="0.1571%" height="15" fill="rgb(245,85,27)" fg:x="380" fg:w="2"/><text x="30.1007%" y="335.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="29.8507%" y="309" width="0.1571%" height="15" fill="rgb(241,76,24)" fg:x="380" fg:w="2"/><text x="30.1007%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.9293%" y="293" width="0.0786%" height="15" fill="rgb(249,157,15)" fg:x="381" fg:w="1"/><text x="30.1793%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.39%)</title><rect x="30.0864%" y="309" width="0.3928%" height="15" fill="rgb(222,218,25)" fg:x="383" fg:w="5"/><text x="30.3364%" y="319.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.39%)</title><rect x="30.0864%" y="293" width="0.3928%" height="15" fill="rgb(252,156,52)" fg:x="383" fg:w="5"/><text x="30.3364%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="30.2435%" y="277" width="0.2357%" height="15" fill="rgb(211,185,7)" fg:x="385" fg:w="3"/><text x="30.4935%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="30.3221%" y="261" width="0.1571%" height="15" fill="rgb(234,108,24)" fg:x="386" fg:w="2"/><text x="30.5721%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="30.4006%" y="245" width="0.0786%" height="15" fill="rgb(227,218,2)" fg:x="387" fg:w="1"/><text x="30.6506%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="30.4006%" y="229" width="0.0786%" height="15" fill="rgb(224,0,36)" fg:x="387" fg:w="1"/><text x="30.6506%" y="239.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="30.4006%" y="213" width="0.0786%" height="15" fill="rgb(233,201,10)" fg:x="387" fg:w="1"/><text x="30.6506%" y="223.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="30.5577%" y="293" width="0.2357%" height="15" fill="rgb(252,209,14)" fg:x="389" fg:w="3"/><text x="30.8077%" y="303.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="30.5577%" y="277" width="0.2357%" height="15" fill="rgb(205,93,49)" fg:x="389" fg:w="3"/><text x="30.8077%" y="287.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="30.6363%" y="261" width="0.1571%" height="15" fill="rgb(234,116,45)" fg:x="390" fg:w="2"/><text x="30.8863%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.7148%" y="245" width="0.0786%" height="15" fill="rgb(248,89,35)" fg:x="391" fg:w="1"/><text x="30.9648%" y="255.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.47%)</title><rect x="30.4792%" y="309" width="0.4713%" height="15" fill="rgb(233,167,45)" fg:x="388" fg:w="6"/><text x="30.7292%" y="319.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="30.7934%" y="293" width="0.1571%" height="15" fill="rgb(248,228,14)" fg:x="392" fg:w="2"/><text x="31.0434%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="30.8720%" y="277" width="0.0786%" height="15" fill="rgb(246,91,14)" fg:x="393" fg:w="1"/><text x="31.1220%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.8720%" y="261" width="0.0786%" height="15" fill="rgb(227,142,5)" fg:x="393" fg:w="1"/><text x="31.1220%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.18%)</title><rect x="30.0079%" y="325" width="1.1783%" height="15" fill="rgb(221,63,33)" fg:x="382" fg:w="15"/><text x="30.2579%" y="335.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="30.9505%" y="309" width="0.2357%" height="15" fill="rgb(233,49,0)" fg:x="394" fg:w="3"/><text x="31.2005%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="31.0291%" y="293" width="0.1571%" height="15" fill="rgb(251,115,38)" fg:x="395" fg:w="2"/><text x="31.2791%" y="303.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="31.1076%" y="277" width="0.0786%" height="15" fill="rgb(231,214,32)" fg:x="396" fg:w="1"/><text x="31.3576%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.49%)</title><rect x="29.7722%" y="341" width="1.4925%" height="15" fill="rgb(248,73,46)" fg:x="379" fg:w="19"/><text x="30.0222%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="31.1862%" y="325" width="0.0786%" height="15" fill="rgb(237,156,4)" fg:x="397" fg:w="1"/><text x="31.4362%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="31.1862%" y="309" width="0.0786%" height="15" fill="rgb(227,132,2)" fg:x="397" fg:w="1"/><text x="31.4362%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.1862%" y="293" width="0.0786%" height="15" fill="rgb(248,161,9)" fg:x="397" fg:w="1"/><text x="31.4362%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (35 samples, 2.75%)</title><rect x="28.6724%" y="357" width="2.7494%" height="15" fill="rgb(238,77,38)" fg:x="365" fg:w="35"/><text x="28.9224%" y="367.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="31.2647%" y="341" width="0.1571%" height="15" fill="rgb(222,166,40)" fg:x="398" fg:w="2"/><text x="31.5147%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="31.3433%" y="325" width="0.0786%" height="15" fill="rgb(214,168,45)" fg:x="399" fg:w="1"/><text x="31.5933%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.3433%" y="309" width="0.0786%" height="15" fill="rgb(226,64,37)" fg:x="399" fg:w="1"/><text x="31.5933%" y="319.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (59 samples, 4.63%)</title><rect x="27.0228%" y="389" width="4.6347%" height="15" fill="rgb(232,210,43)" fg:x="344" fg:w="59"/><text x="27.2728%" y="399.50">&lt;serd..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (48 samples, 3.77%)</title><rect x="27.8869%" y="373" width="3.7706%" height="15" fill="rgb(214,76,33)" fg:x="355" fg:w="48"/><text x="28.1369%" y="383.50">serd..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="31.4218%" y="357" width="0.2357%" height="15" fill="rgb(210,78,5)" fg:x="400" fg:w="3"/><text x="31.6718%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="31.5789%" y="341" width="0.0786%" height="15" fill="rgb(211,107,37)" fg:x="402" fg:w="1"/><text x="31.8289%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="31.5789%" y="325" width="0.0786%" height="15" fill="rgb(249,67,16)" fg:x="402" fg:w="1"/><text x="31.8289%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.6575%" y="357" width="0.0786%" height="15" fill="rgb(222,114,31)" fg:x="403" fg:w="1"/><text x="31.9075%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.7361%" y="357" width="0.0786%" height="15" fill="rgb(242,118,19)" fg:x="404" fg:w="1"/><text x="31.9861%" y="367.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="31.9717%" y="341" width="0.2357%" height="15" fill="rgb(223,115,1)" fg:x="407" fg:w="3"/><text x="32.2217%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.2859%" y="325" width="0.0786%" height="15" fill="rgb(241,182,54)" fg:x="411" fg:w="1"/><text x="32.5359%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="32.3645%" y="325" width="0.2357%" height="15" fill="rgb(244,166,36)" fg:x="412" fg:w="3"/><text x="32.6145%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.5216%" y="309" width="0.0786%" height="15" fill="rgb(241,52,43)" fg:x="414" fg:w="1"/><text x="32.7716%" y="319.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="32.6787%" y="309" width="0.2357%" height="15" fill="rgb(236,82,9)" fg:x="416" fg:w="3"/><text x="32.9287%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.9144%" y="309" width="0.0786%" height="15" fill="rgb(241,119,0)" fg:x="419" fg:w="1"/><text x="33.1644%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="32.9929%" y="309" width="0.0786%" height="15" fill="rgb(221,19,22)" fg:x="420" fg:w="1"/><text x="33.2429%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="32.9929%" y="293" width="0.0786%" height="15" fill="rgb(254,144,35)" fg:x="420" fg:w="1"/><text x="33.2429%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.9929%" y="277" width="0.0786%" height="15" fill="rgb(246,132,30)" fg:x="420" fg:w="1"/><text x="33.2429%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (21 samples, 1.65%)</title><rect x="31.6575%" y="389" width="1.6496%" height="15" fill="rgb(234,69,28)" fg:x="403" fg:w="21"/><text x="31.9075%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (21 samples, 1.65%)</title><rect x="31.6575%" y="373" width="1.6496%" height="15" fill="rgb(219,106,47)" fg:x="403" fg:w="21"/><text x="31.9075%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (19 samples, 1.49%)</title><rect x="31.8146%" y="357" width="1.4925%" height="15" fill="rgb(218,79,24)" fg:x="405" fg:w="19"/><text x="32.0646%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.10%)</title><rect x="32.2074%" y="341" width="1.0998%" height="15" fill="rgb(225,26,21)" fg:x="410" fg:w="14"/><text x="32.4574%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.71%)</title><rect x="32.6002%" y="325" width="0.7070%" height="15" fill="rgb(217,68,49)" fg:x="415" fg:w="9"/><text x="32.8502%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="33.0715%" y="309" width="0.2357%" height="15" fill="rgb(220,204,28)" fg:x="421" fg:w="3"/><text x="33.3215%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.2286%" y="293" width="0.0786%" height="15" fill="rgb(237,208,43)" fg:x="423" fg:w="1"/><text x="33.4786%" y="303.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="33.4643%" y="357" width="0.1571%" height="15" fill="rgb(213,97,42)" fg:x="426" fg:w="2"/><text x="33.7143%" y="367.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (5 samples, 0.39%)</title><rect x="33.3071%" y="373" width="0.3928%" height="15" fill="rgb(238,96,52)" fg:x="424" fg:w="5"/><text x="33.5571%" y="383.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="33.6214%" y="357" width="0.0786%" height="15" fill="rgb(228,14,13)" fg:x="428" fg:w="1"/><text x="33.8714%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="33.6214%" y="341" width="0.0786%" height="15" fill="rgb(219,123,13)" fg:x="428" fg:w="1"/><text x="33.8714%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="33.6214%" y="325" width="0.0786%" height="15" fill="rgb(216,144,17)" fg:x="428" fg:w="1"/><text x="33.8714%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.6214%" y="309" width="0.0786%" height="15" fill="rgb(230,228,29)" fg:x="428" fg:w="1"/><text x="33.8714%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="33.6999%" y="357" width="0.0786%" height="15" fill="rgb(233,18,5)" fg:x="429" fg:w="1"/><text x="33.9499%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.0141%" y="341" width="0.0786%" height="15" fill="rgb(233,197,12)" fg:x="433" fg:w="1"/><text x="34.2641%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="34.0927%" y="341" width="0.3142%" height="15" fill="rgb(234,140,29)" fg:x="434" fg:w="4"/><text x="34.3427%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="34.1712%" y="325" width="0.2357%" height="15" fill="rgb(233,113,19)" fg:x="435" fg:w="3"/><text x="34.4212%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="34.3284%" y="309" width="0.0786%" height="15" fill="rgb(246,209,13)" fg:x="437" fg:w="1"/><text x="34.5784%" y="319.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="34.4069%" y="341" width="0.0786%" height="15" fill="rgb(242,79,54)" fg:x="438" fg:w="1"/><text x="34.6569%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="34.4855%" y="309" width="0.1571%" height="15" fill="rgb(219,73,16)" fg:x="439" fg:w="2"/><text x="34.7355%" y="319.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="34.4855%" y="341" width="0.2357%" height="15" fill="rgb(224,52,10)" fg:x="439" fg:w="3"/><text x="34.7355%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="34.4855%" y="325" width="0.2357%" height="15" fill="rgb(237,179,5)" fg:x="439" fg:w="3"/><text x="34.7355%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.6426%" y="309" width="0.0786%" height="15" fill="rgb(231,20,6)" fg:x="441" fg:w="1"/><text x="34.8926%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.6426%" y="293" width="0.0786%" height="15" fill="rgb(253,171,45)" fg:x="441" fg:w="1"/><text x="34.8926%" y="303.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="34.6426%" y="277" width="0.0786%" height="15" fill="rgb(230,75,49)" fg:x="441" fg:w="1"/><text x="34.8926%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="34.7211%" y="325" width="0.0786%" height="15" fill="rgb(216,83,46)" fg:x="442" fg:w="1"/><text x="34.9711%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="34.7997%" y="309" width="0.1571%" height="15" fill="rgb(236,56,9)" fg:x="443" fg:w="2"/><text x="35.0497%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="34.9568%" y="293" width="0.1571%" height="15" fill="rgb(215,28,34)" fg:x="445" fg:w="2"/><text x="35.2068%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.0353%" y="277" width="0.0786%" height="15" fill="rgb(230,222,20)" fg:x="446" fg:w="1"/><text x="35.2853%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.0353%" y="261" width="0.0786%" height="15" fill="rgb(235,209,51)" fg:x="446" fg:w="1"/><text x="35.2853%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="35.1925%" y="261" width="0.0786%" height="15" fill="rgb(235,167,1)" fg:x="448" fg:w="1"/><text x="35.4425%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="35.2710%" y="245" width="0.3142%" height="15" fill="rgb(248,220,0)" fg:x="449" fg:w="4"/><text x="35.5210%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="35.3496%" y="229" width="0.2357%" height="15" fill="rgb(239,0,18)" fg:x="450" fg:w="3"/><text x="35.5996%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.5067%" y="213" width="0.0786%" height="15" fill="rgb(229,179,11)" fg:x="452" fg:w="1"/><text x="35.7567%" y="223.50"></text></g><g><title>serde::ser::Serializer::collect_seq (7 samples, 0.55%)</title><rect x="35.1139%" y="293" width="0.5499%" height="15" fill="rgb(226,116,53)" fg:x="447" fg:w="7"/><text x="35.3639%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.55%)</title><rect x="35.1139%" y="277" width="0.5499%" height="15" fill="rgb(218,1,49)" fg:x="447" fg:w="7"/><text x="35.3639%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.39%)</title><rect x="35.2710%" y="261" width="0.3928%" height="15" fill="rgb(208,184,47)" fg:x="449" fg:w="5"/><text x="35.5210%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="35.5852%" y="245" width="0.0786%" height="15" fill="rgb(238,174,3)" fg:x="453" fg:w="1"/><text x="35.8352%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="35.9780%" y="277" width="0.0786%" height="15" fill="rgb(247,188,6)" fg:x="458" fg:w="1"/><text x="36.2280%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.39%)</title><rect x="36.0566%" y="261" width="0.3928%" height="15" fill="rgb(211,165,46)" fg:x="459" fg:w="5"/><text x="36.3066%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="36.1351%" y="245" width="0.3142%" height="15" fill="rgb(222,190,10)" fg:x="460" fg:w="4"/><text x="36.3851%" y="255.50"></text></g><g><title>__libc_malloc (4 samples, 0.31%)</title><rect x="36.1351%" y="229" width="0.3142%" height="15" fill="rgb(206,185,3)" fg:x="460" fg:w="4"/><text x="36.3851%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="36.6064%" y="245" width="0.0786%" height="15" fill="rgb(244,125,37)" fg:x="466" fg:w="1"/><text x="36.8564%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (16 samples, 1.26%)</title><rect x="36.0566%" y="277" width="1.2569%" height="15" fill="rgb(211,43,7)" fg:x="459" fg:w="16"/><text x="36.3066%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.86%)</title><rect x="36.4493%" y="261" width="0.8641%" height="15" fill="rgb(250,41,42)" fg:x="464" fg:w="11"/><text x="36.6993%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.63%)</title><rect x="36.6850%" y="245" width="0.6284%" height="15" fill="rgb(254,54,42)" fg:x="467" fg:w="8"/><text x="36.9350%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.39%)</title><rect x="36.9207%" y="229" width="0.3928%" height="15" fill="rgb(213,71,43)" fg:x="470" fg:w="5"/><text x="37.1707%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="36.9992%" y="213" width="0.3142%" height="15" fill="rgb(249,3,44)" fg:x="471" fg:w="4"/><text x="37.2492%" y="223.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="37.1563%" y="197" width="0.1571%" height="15" fill="rgb(229,80,41)" fg:x="473" fg:w="2"/><text x="37.4063%" y="207.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (34 samples, 2.67%)</title><rect x="34.7997%" y="325" width="2.6709%" height="15" fill="rgb(231,25,28)" fg:x="443" fg:w="34"/><text x="35.0497%" y="335.50">&lt;s..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (32 samples, 2.51%)</title><rect x="34.9568%" y="309" width="2.5137%" height="15" fill="rgb(208,79,48)" fg:x="445" fg:w="32"/><text x="35.2068%" y="319.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (23 samples, 1.81%)</title><rect x="35.6638%" y="293" width="1.8068%" height="15" fill="rgb(207,196,38)" fg:x="454" fg:w="23"/><text x="35.9138%" y="303.50">s..</text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="37.3134%" y="277" width="0.1571%" height="15" fill="rgb(228,105,49)" fg:x="475" fg:w="2"/><text x="37.5634%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.4705%" y="325" width="0.0786%" height="15" fill="rgb(237,99,15)" fg:x="477" fg:w="1"/><text x="37.7205%" y="335.50"></text></g><g><title>engine::session::Session::flush (151 samples, 11.86%)</title><rect x="25.8445%" y="501" width="11.8617%" height="15" fill="rgb(224,207,46)" fg:x="329" fg:w="151"/><text x="26.0945%" y="511.50">engine::session::S..</text></g><g><title>engine::session::Session::save_changes (144 samples, 11.31%)</title><rect x="26.3943%" y="485" width="11.3119%" height="15" fill="rgb(249,117,50)" fg:x="336" fg:w="144"/><text x="26.6443%" y="495.50">engine::session::..</text></g><g><title>engine::session::state::State::close (144 samples, 11.31%)</title><rect x="26.3943%" y="469" width="11.3119%" height="15" fill="rgb(248,17,13)" fg:x="336" fg:w="144"/><text x="26.6443%" y="479.50">engine::session::..</text></g><g><title>engine::session::state::State::flush_entities (144 samples, 11.31%)</title><rect x="26.3943%" y="453" width="11.3119%" height="15" fill="rgb(228,187,36)" fg:x="336" fg:w="144"/><text x="26.6443%" y="463.50">engine::session::..</text></g><g><title>core::iter::adapters::try_process (139 samples, 10.92%)</title><rect x="26.7871%" y="437" width="10.9191%" height="15" fill="rgb(234,132,20)" fg:x="341" fg:w="139"/><text x="27.0371%" y="447.50">core::iter::adap..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (139 samples, 10.92%)</title><rect x="26.7871%" y="421" width="10.9191%" height="15" fill="rgb(209,170,46)" fg:x="341" fg:w="139"/><text x="27.0371%" y="431.50">&lt;alloc::vec::Vec..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (138 samples, 10.84%)</title><rect x="26.8657%" y="405" width="10.8405%" height="15" fill="rgb(237,23,19)" fg:x="342" fg:w="138"/><text x="27.1157%" y="415.50">engine::session:..</text></g><g><title>kernel::model::any_entity_changes (56 samples, 4.40%)</title><rect x="33.3071%" y="389" width="4.3991%" height="15" fill="rgb(227,21,26)" fg:x="424" fg:w="56"/><text x="33.5571%" y="399.50">kerne..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (51 samples, 4.01%)</title><rect x="33.6999%" y="373" width="4.0063%" height="15" fill="rgb(222,220,48)" fg:x="429" fg:w="51"/><text x="33.9499%" y="383.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (50 samples, 3.93%)</title><rect x="33.7785%" y="357" width="3.9277%" height="15" fill="rgb(214,9,16)" fg:x="430" fg:w="50"/><text x="34.0285%" y="367.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (38 samples, 2.99%)</title><rect x="34.7211%" y="341" width="2.9851%" height="15" fill="rgb(209,73,30)" fg:x="442" fg:w="38"/><text x="34.9711%" y="351.50">ser..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="37.5491%" y="325" width="0.1571%" height="15" fill="rgb(207,20,33)" fg:x="478" fg:w="2"/><text x="37.7991%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="37.5491%" y="309" width="0.1571%" height="15" fill="rgb(219,153,12)" fg:x="478" fg:w="2"/><text x="37.7991%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="37.6277%" y="293" width="0.0786%" height="15" fill="rgb(235,97,25)" fg:x="479" fg:w="1"/><text x="37.8777%" y="303.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="37.7062%" y="469" width="0.0786%" height="15" fill="rgb(244,30,34)" fg:x="480" fg:w="1"/><text x="37.9562%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.7062%" y="453" width="0.0786%" height="15" fill="rgb(214,106,45)" fg:x="480" fg:w="1"/><text x="37.9562%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.7062%" y="437" width="0.0786%" height="15" fill="rgb(226,41,9)" fg:x="480" fg:w="1"/><text x="37.9562%" y="447.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.31%)</title><rect x="37.7062%" y="501" width="0.3142%" height="15" fill="rgb(253,139,29)" fg:x="480" fg:w="4"/><text x="37.9562%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.31%)</title><rect x="37.7062%" y="485" width="0.3142%" height="15" fill="rgb(213,205,39)" fg:x="480" fg:w="4"/><text x="37.9562%" y="495.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="37.7848%" y="469" width="0.2357%" height="15" fill="rgb(209,27,10)" fg:x="481" fg:w="3"/><text x="38.0348%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="37.7848%" y="453" width="0.2357%" height="15" fill="rgb(249,142,16)" fg:x="481" fg:w="3"/><text x="38.0348%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="37.8633%" y="437" width="0.1571%" height="15" fill="rgb(242,65,12)" fg:x="482" fg:w="2"/><text x="38.1133%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="37.9419%" y="421" width="0.0786%" height="15" fill="rgb(232,48,10)" fg:x="483" fg:w="1"/><text x="38.1919%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.9419%" y="405" width="0.0786%" height="15" fill="rgb(253,67,19)" fg:x="483" fg:w="1"/><text x="38.1919%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.9419%" y="389" width="0.0786%" height="15" fill="rgb(227,93,29)" fg:x="483" fg:w="1"/><text x="38.1919%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.9419%" y="373" width="0.0786%" height="15" fill="rgb(226,189,53)" fg:x="483" fg:w="1"/><text x="38.1919%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="38.0204%" y="469" width="0.0786%" height="15" fill="rgb(223,224,1)" fg:x="484" fg:w="1"/><text x="38.2704%" y="479.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="38.0204%" y="453" width="0.0786%" height="15" fill="rgb(221,84,32)" fg:x="484" fg:w="1"/><text x="38.2704%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="38.0204%" y="437" width="0.0786%" height="15" fill="rgb(214,189,28)" fg:x="484" fg:w="1"/><text x="38.2704%" y="447.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="38.0204%" y="421" width="0.0786%" height="15" fill="rgb(234,7,52)" fg:x="484" fg:w="1"/><text x="38.2704%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="38.0204%" y="405" width="0.0786%" height="15" fill="rgb(249,73,31)" fg:x="484" fg:w="1"/><text x="38.2704%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.0204%" y="389" width="0.0786%" height="15" fill="rgb(253,153,41)" fg:x="484" fg:w="1"/><text x="38.2704%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.0204%" y="373" width="0.0786%" height="15" fill="rgb(249,52,34)" fg:x="484" fg:w="1"/><text x="38.2704%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.0204%" y="357" width="0.0786%" height="15" fill="rgb(236,177,47)" fg:x="484" fg:w="1"/><text x="38.2704%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.0204%" y="341" width="0.0786%" height="15" fill="rgb(252,185,45)" fg:x="484" fg:w="1"/><text x="38.2704%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.0204%" y="325" width="0.0786%" height="15" fill="rgb(251,15,30)" fg:x="484" fg:w="1"/><text x="38.2704%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.0204%" y="309" width="0.0786%" height="15" fill="rgb(233,31,4)" fg:x="484" fg:w="1"/><text x="38.2704%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.0204%" y="293" width="0.0786%" height="15" fill="rgb(254,44,24)" fg:x="484" fg:w="1"/><text x="38.2704%" y="303.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="38.0204%" y="485" width="0.1571%" height="15" fill="rgb(218,54,1)" fg:x="484" fg:w="2"/><text x="38.2704%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="38.0990%" y="469" width="0.0786%" height="15" fill="rgb(243,209,39)" fg:x="485" fg:w="1"/><text x="38.3490%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="38.0990%" y="453" width="0.0786%" height="15" fill="rgb(206,75,33)" fg:x="485" fg:w="1"/><text x="38.3490%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="38.0990%" y="437" width="0.0786%" height="15" fill="rgb(223,108,18)" fg:x="485" fg:w="1"/><text x="38.3490%" y="447.50"></text></g><g><title>plugins_core::build::Build::new (3 samples, 0.24%)</title><rect x="38.0204%" y="501" width="0.2357%" height="15" fill="rgb(244,89,31)" fg:x="484" fg:w="3"/><text x="38.2704%" y="511.50"></text></g><g><title>kernel::model::builder::EntityBuilder::with_key (1 samples, 0.08%)</title><rect x="38.1775%" y="485" width="0.0786%" height="15" fill="rgb(222,167,27)" fg:x="486" fg:w="1"/><text x="38.4275%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="38.2561%" y="469" width="0.0786%" height="15" fill="rgb(247,41,16)" fg:x="487" fg:w="1"/><text x="38.5061%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="38.2561%" y="453" width="0.0786%" height="15" fill="rgb(233,168,40)" fg:x="487" fg:w="1"/><text x="38.5061%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="38.2561%" y="437" width="0.0786%" height="15" fill="rgb(205,211,8)" fg:x="487" fg:w="1"/><text x="38.5061%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.2561%" y="421" width="0.0786%" height="15" fill="rgb(238,105,11)" fg:x="487" fg:w="1"/><text x="38.5061%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.2561%" y="405" width="0.0786%" height="15" fill="rgb(223,142,52)" fg:x="487" fg:w="1"/><text x="38.5061%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.3346%" y="437" width="0.0786%" height="15" fill="rgb(238,51,33)" fg:x="488" fg:w="1"/><text x="38.5846%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.3346%" y="421" width="0.0786%" height="15" fill="rgb(231,188,43)" fg:x="488" fg:w="1"/><text x="38.5846%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.3346%" y="405" width="0.0786%" height="15" fill="rgb(216,92,17)" fg:x="488" fg:w="1"/><text x="38.5846%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.3346%" y="389" width="0.0786%" height="15" fill="rgb(228,2,40)" fg:x="488" fg:w="1"/><text x="38.5846%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.3346%" y="373" width="0.0786%" height="15" fill="rgb(226,73,15)" fg:x="488" fg:w="1"/><text x="38.5846%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.3346%" y="357" width="0.0786%" height="15" fill="rgb(227,66,46)" fg:x="488" fg:w="1"/><text x="38.5846%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.3346%" y="341" width="0.0786%" height="15" fill="rgb(209,71,6)" fg:x="488" fg:w="1"/><text x="38.5846%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.3346%" y="325" width="0.0786%" height="15" fill="rgb(246,100,25)" fg:x="488" fg:w="1"/><text x="38.5846%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.3346%" y="309" width="0.0786%" height="15" fill="rgb(248,185,27)" fg:x="488" fg:w="1"/><text x="38.5846%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.3346%" y="293" width="0.0786%" height="15" fill="rgb(225,118,47)" fg:x="488" fg:w="1"/><text x="38.5846%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.3346%" y="277" width="0.0786%" height="15" fill="rgb(220,185,44)" fg:x="488" fg:w="1"/><text x="38.5846%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.3346%" y="261" width="0.0786%" height="15" fill="rgb(227,95,24)" fg:x="488" fg:w="1"/><text x="38.5846%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.3346%" y="245" width="0.0786%" height="15" fill="rgb(252,84,24)" fg:x="488" fg:w="1"/><text x="38.5846%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="38.4132%" y="437" width="0.0786%" height="15" fill="rgb(240,34,44)" fg:x="489" fg:w="1"/><text x="38.6632%" y="447.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (6 samples, 0.47%)</title><rect x="38.3346%" y="469" width="0.4713%" height="15" fill="rgb(209,72,54)" fg:x="488" fg:w="6"/><text x="38.5846%" y="479.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (6 samples, 0.47%)</title><rect x="38.3346%" y="453" width="0.4713%" height="15" fill="rgb(226,19,45)" fg:x="488" fg:w="6"/><text x="38.5846%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="38.4918%" y="437" width="0.3142%" height="15" fill="rgb(246,7,45)" fg:x="490" fg:w="4"/><text x="38.7418%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="38.4918%" y="421" width="0.3142%" height="15" fill="rgb(225,45,2)" fg:x="490" fg:w="4"/><text x="38.7418%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="38.6489%" y="405" width="0.1571%" height="15" fill="rgb(221,80,29)" fg:x="492" fg:w="2"/><text x="38.8989%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.6489%" y="389" width="0.1571%" height="15" fill="rgb(228,11,19)" fg:x="492" fg:w="2"/><text x="38.8989%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="38.6489%" y="373" width="0.1571%" height="15" fill="rgb(243,17,21)" fg:x="492" fg:w="2"/><text x="38.8989%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="38.6489%" y="357" width="0.1571%" height="15" fill="rgb(243,88,8)" fg:x="492" fg:w="2"/><text x="38.8989%" y="367.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="38.7274%" y="341" width="0.0786%" height="15" fill="rgb(214,17,9)" fg:x="493" fg:w="1"/><text x="38.9774%" y="351.50"></text></g><g><title>engine::session::Session::load_entity (2 samples, 0.16%)</title><rect x="38.8060%" y="469" width="0.1571%" height="15" fill="rgb(232,169,15)" fg:x="494" fg:w="2"/><text x="39.0560%" y="479.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="38.8845%" y="453" width="0.0786%" height="15" fill="rgb(232,86,53)" fg:x="495" fg:w="1"/><text x="39.1345%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.9631%" y="389" width="0.1571%" height="15" fill="rgb(222,100,4)" fg:x="496" fg:w="2"/><text x="39.2131%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.9631%" y="373" width="0.1571%" height="15" fill="rgb(253,151,38)" fg:x="496" fg:w="2"/><text x="39.2131%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.9631%" y="357" width="0.1571%" height="15" fill="rgb(238,215,29)" fg:x="496" fg:w="2"/><text x="39.2131%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="38.9631%" y="341" width="0.1571%" height="15" fill="rgb(205,128,53)" fg:x="496" fg:w="2"/><text x="39.2131%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="38.9631%" y="325" width="0.1571%" height="15" fill="rgb(248,183,14)" fg:x="496" fg:w="2"/><text x="39.2131%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="38.9631%" y="309" width="0.1571%" height="15" fill="rgb(244,172,35)" fg:x="496" fg:w="2"/><text x="39.2131%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="38.9631%" y="293" width="0.1571%" height="15" fill="rgb(234,93,19)" fg:x="496" fg:w="2"/><text x="39.2131%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="38.9631%" y="277" width="0.1571%" height="15" fill="rgb(227,109,7)" fg:x="496" fg:w="2"/><text x="39.2131%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="38.9631%" y="261" width="0.1571%" height="15" fill="rgb(233,136,54)" fg:x="496" fg:w="2"/><text x="39.2131%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="38.9631%" y="245" width="0.1571%" height="15" fill="rgb(233,19,40)" fg:x="496" fg:w="2"/><text x="39.2131%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="38.9631%" y="229" width="0.1571%" height="15" fill="rgb(247,41,18)" fg:x="496" fg:w="2"/><text x="39.2131%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="38.9631%" y="213" width="0.1571%" height="15" fill="rgb(220,34,34)" fg:x="496" fg:w="2"/><text x="39.2131%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="38.9631%" y="197" width="0.1571%" height="15" fill="rgb(222,135,32)" fg:x="496" fg:w="2"/><text x="39.2131%" y="207.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="38.9631%" y="181" width="0.1571%" height="15" fill="rgb(214,80,19)" fg:x="496" fg:w="2"/><text x="39.2131%" y="191.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="38.9631%" y="165" width="0.1571%" height="15" fill="rgb(234,54,46)" fg:x="496" fg:w="2"/><text x="39.2131%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.1987%" y="325" width="0.0786%" height="15" fill="rgb(251,48,23)" fg:x="499" fg:w="1"/><text x="39.4487%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.1987%" y="309" width="0.0786%" height="15" fill="rgb(254,109,52)" fg:x="499" fg:w="1"/><text x="39.4487%" y="319.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.47%)</title><rect x="38.9631%" y="453" width="0.4713%" height="15" fill="rgb(240,186,19)" fg:x="496" fg:w="6"/><text x="39.2131%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (6 samples, 0.47%)</title><rect x="38.9631%" y="437" width="0.4713%" height="15" fill="rgb(246,187,17)" fg:x="496" fg:w="6"/><text x="39.2131%" y="447.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.47%)</title><rect x="38.9631%" y="421" width="0.4713%" height="15" fill="rgb(212,21,5)" fg:x="496" fg:w="6"/><text x="39.2131%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (6 samples, 0.47%)</title><rect x="38.9631%" y="405" width="0.4713%" height="15" fill="rgb(225,185,18)" fg:x="496" fg:w="6"/><text x="39.2131%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (4 samples, 0.31%)</title><rect x="39.1202%" y="389" width="0.3142%" height="15" fill="rgb(245,114,17)" fg:x="498" fg:w="4"/><text x="39.3702%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="39.1987%" y="373" width="0.2357%" height="15" fill="rgb(223,164,24)" fg:x="499" fg:w="3"/><text x="39.4487%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="39.1987%" y="357" width="0.2357%" height="15" fill="rgb(211,228,3)" fg:x="499" fg:w="3"/><text x="39.4487%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="39.1987%" y="341" width="0.2357%" height="15" fill="rgb(223,16,38)" fg:x="499" fg:w="3"/><text x="39.4487%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="39.2773%" y="325" width="0.1571%" height="15" fill="rgb(207,31,54)" fg:x="500" fg:w="2"/><text x="39.5273%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.3559%" y="309" width="0.0786%" height="15" fill="rgb(220,39,11)" fg:x="501" fg:w="1"/><text x="39.6059%" y="319.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="39.3559%" y="293" width="0.0786%" height="15" fill="rgb(235,185,0)" fg:x="501" fg:w="1"/><text x="39.6059%" y="303.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="39.4344%" y="453" width="0.0786%" height="15" fill="rgb(249,39,18)" fg:x="502" fg:w="1"/><text x="39.6844%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="39.5130%" y="421" width="0.1571%" height="15" fill="rgb(240,110,33)" fg:x="503" fg:w="2"/><text x="39.7630%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.5915%" y="405" width="0.0786%" height="15" fill="rgb(210,92,42)" fg:x="504" fg:w="1"/><text x="39.8415%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.5915%" y="389" width="0.0786%" height="15" fill="rgb(218,215,28)" fg:x="504" fg:w="1"/><text x="39.8415%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.5915%" y="373" width="0.0786%" height="15" fill="rgb(238,215,36)" fg:x="504" fg:w="1"/><text x="39.8415%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="39.6701%" y="421" width="0.0786%" height="15" fill="rgb(220,31,10)" fg:x="505" fg:w="1"/><text x="39.9201%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.6701%" y="405" width="0.0786%" height="15" fill="rgb(212,93,14)" fg:x="505" fg:w="1"/><text x="39.9201%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.6701%" y="389" width="0.0786%" height="15" fill="rgb(254,207,2)" fg:x="505" fg:w="1"/><text x="39.9201%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.6701%" y="373" width="0.0786%" height="15" fill="rgb(205,57,44)" fg:x="505" fg:w="1"/><text x="39.9201%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.6701%" y="357" width="0.0786%" height="15" fill="rgb(226,151,19)" fg:x="505" fg:w="1"/><text x="39.9201%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="39.7486%" y="421" width="0.1571%" height="15" fill="rgb(230,72,30)" fg:x="506" fg:w="2"/><text x="39.9986%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="39.7486%" y="405" width="0.1571%" height="15" fill="rgb(244,0,8)" fg:x="506" fg:w="2"/><text x="39.9986%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="39.7486%" y="389" width="0.1571%" height="15" fill="rgb(230,192,6)" fg:x="506" fg:w="2"/><text x="39.9986%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.8272%" y="373" width="0.0786%" height="15" fill="rgb(233,207,13)" fg:x="507" fg:w="1"/><text x="40.0772%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.8272%" y="357" width="0.0786%" height="15" fill="rgb(206,227,7)" fg:x="507" fg:w="1"/><text x="40.0772%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.9843%" y="373" width="0.0786%" height="15" fill="rgb(213,217,25)" fg:x="509" fg:w="1"/><text x="40.2343%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.9843%" y="357" width="0.0786%" height="15" fill="rgb(249,75,4)" fg:x="509" fg:w="1"/><text x="40.2343%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.9843%" y="341" width="0.0786%" height="15" fill="rgb(225,114,18)" fg:x="509" fg:w="1"/><text x="40.2343%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.1414%" y="341" width="0.0786%" height="15" fill="rgb(211,162,40)" fg:x="511" fg:w="1"/><text x="40.3914%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.2200%" y="309" width="0.0786%" height="15" fill="rgb(206,49,29)" fg:x="512" fg:w="1"/><text x="40.4700%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.2200%" y="293" width="0.0786%" height="15" fill="rgb(244,8,6)" fg:x="512" fg:w="1"/><text x="40.4700%" y="303.50"></text></g><g><title>engine::session::internal::Entities::add_entity (19 samples, 1.49%)</title><rect x="38.9631%" y="469" width="1.4925%" height="15" fill="rgb(231,194,28)" fg:x="496" fg:w="19"/><text x="39.2131%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (12 samples, 0.94%)</title><rect x="39.5130%" y="453" width="0.9427%" height="15" fill="rgb(210,69,5)" fg:x="503" fg:w="12"/><text x="39.7630%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.94%)</title><rect x="39.5130%" y="437" width="0.9427%" height="15" fill="rgb(216,186,12)" fg:x="503" fg:w="12"/><text x="39.7630%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.55%)</title><rect x="39.9057%" y="421" width="0.5499%" height="15" fill="rgb(238,61,15)" fg:x="508" fg:w="7"/><text x="40.1557%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.55%)</title><rect x="39.9057%" y="405" width="0.5499%" height="15" fill="rgb(226,104,1)" fg:x="508" fg:w="7"/><text x="40.1557%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.47%)</title><rect x="39.9843%" y="389" width="0.4713%" height="15" fill="rgb(229,128,15)" fg:x="509" fg:w="6"/><text x="40.2343%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.39%)</title><rect x="40.0628%" y="373" width="0.3928%" height="15" fill="rgb(247,110,15)" fg:x="510" fg:w="5"/><text x="40.3128%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.39%)</title><rect x="40.0628%" y="357" width="0.3928%" height="15" fill="rgb(210,74,48)" fg:x="510" fg:w="5"/><text x="40.3128%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="40.2200%" y="341" width="0.2357%" height="15" fill="rgb(246,121,10)" fg:x="512" fg:w="3"/><text x="40.4700%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="40.2200%" y="325" width="0.2357%" height="15" fill="rgb(214,156,37)" fg:x="512" fg:w="3"/><text x="40.4700%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="40.2985%" y="309" width="0.1571%" height="15" fill="rgb(214,210,34)" fg:x="513" fg:w="2"/><text x="40.5485%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.3771%" y="293" width="0.0786%" height="15" fill="rgb(237,93,35)" fg:x="514" fg:w="1"/><text x="40.6271%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (30 samples, 2.36%)</title><rect x="38.2561%" y="485" width="2.3566%" height="15" fill="rgb(206,36,8)" fg:x="487" fg:w="30"/><text x="38.5061%" y="495.50">&lt;..</text></g><g><title>kernel::model::EntityPtrResolver::world (2 samples, 0.16%)</title><rect x="40.4556%" y="469" width="0.1571%" height="15" fill="rgb(208,151,12)" fg:x="515" fg:w="2"/><text x="40.7056%" y="479.50"></text></g><g><title>engine::session::Session::load_entity (2 samples, 0.16%)</title><rect x="40.4556%" y="453" width="0.1571%" height="15" fill="rgb(225,133,52)" fg:x="515" fg:w="2"/><text x="40.7056%" y="463.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="40.4556%" y="437" width="0.1571%" height="15" fill="rgb(231,71,53)" fg:x="515" fg:w="2"/><text x="40.7056%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.5342%" y="421" width="0.0786%" height="15" fill="rgb(243,76,21)" fg:x="516" fg:w="1"/><text x="40.7842%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="40.6127%" y="485" width="0.1571%" height="15" fill="rgb(252,144,3)" fg:x="517" fg:w="2"/><text x="40.8627%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.6913%" y="469" width="0.0786%" height="15" fill="rgb(231,199,10)" fg:x="518" fg:w="1"/><text x="40.9413%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.6913%" y="453" width="0.0786%" height="15" fill="rgb(215,18,11)" fg:x="518" fg:w="1"/><text x="40.9413%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.6913%" y="437" width="0.0786%" height="15" fill="rgb(241,65,24)" fg:x="518" fg:w="1"/><text x="40.9413%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.8484%" y="309" width="0.0786%" height="15" fill="rgb(251,192,38)" fg:x="520" fg:w="1"/><text x="41.0984%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.8484%" y="293" width="0.0786%" height="15" fill="rgb(205,9,35)" fg:x="520" fg:w="1"/><text x="41.0984%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.8484%" y="277" width="0.0786%" height="15" fill="rgb(229,225,49)" fg:x="520" fg:w="1"/><text x="41.0984%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.8484%" y="261" width="0.0786%" height="15" fill="rgb(207,125,39)" fg:x="520" fg:w="1"/><text x="41.0984%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.8484%" y="245" width="0.0786%" height="15" fill="rgb(222,78,19)" fg:x="520" fg:w="1"/><text x="41.0984%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.8484%" y="229" width="0.0786%" height="15" fill="rgb(248,207,20)" fg:x="520" fg:w="1"/><text x="41.0984%" y="239.50"></text></g><g><title>plugins_core::build::Build::save (35 samples, 2.75%)</title><rect x="38.2561%" y="501" width="2.7494%" height="15" fill="rgb(205,103,49)" fg:x="487" fg:w="35"/><text x="38.5061%" y="511.50">pl..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="40.7698%" y="485" width="0.2357%" height="15" fill="rgb(216,42,28)" fg:x="519" fg:w="3"/><text x="41.0198%" y="495.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="40.7698%" y="469" width="0.2357%" height="15" fill="rgb(213,205,53)" fg:x="519" fg:w="3"/><text x="41.0198%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="40.7698%" y="453" width="0.2357%" height="15" fill="rgb(239,140,53)" fg:x="519" fg:w="3"/><text x="41.0198%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="40.7698%" y="437" width="0.2357%" height="15" fill="rgb(248,95,9)" fg:x="519" fg:w="3"/><text x="41.0198%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.8484%" y="421" width="0.1571%" height="15" fill="rgb(254,58,47)" fg:x="520" fg:w="2"/><text x="41.0984%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.8484%" y="405" width="0.1571%" height="15" fill="rgb(234,227,14)" fg:x="520" fg:w="2"/><text x="41.0984%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="40.8484%" y="389" width="0.1571%" height="15" fill="rgb(205,192,45)" fg:x="520" fg:w="2"/><text x="41.0984%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="40.8484%" y="373" width="0.1571%" height="15" fill="rgb(253,187,31)" fg:x="520" fg:w="2"/><text x="41.0984%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="40.8484%" y="357" width="0.1571%" height="15" fill="rgb(222,6,32)" fg:x="520" fg:w="2"/><text x="41.0984%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="40.8484%" y="341" width="0.1571%" height="15" fill="rgb(249,190,19)" fg:x="520" fg:w="2"/><text x="41.0984%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="40.8484%" y="325" width="0.1571%" height="15" fill="rgb(251,28,20)" fg:x="520" fg:w="2"/><text x="41.0984%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="40.9269%" y="309" width="0.0786%" height="15" fill="rgb(210,223,40)" fg:x="521" fg:w="1"/><text x="41.1769%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="40.9269%" y="293" width="0.0786%" height="15" fill="rgb(216,137,22)" fg:x="521" fg:w="1"/><text x="41.1769%" y="303.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (1 samples, 0.08%)</title><rect x="41.0055%" y="501" width="0.0786%" height="15" fill="rgb(247,39,34)" fg:x="522" fg:w="1"/><text x="41.2555%" y="511.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="41.0055%" y="485" width="0.0786%" height="15" fill="rgb(239,43,50)" fg:x="522" fg:w="1"/><text x="41.2555%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="41.0055%" y="469" width="0.0786%" height="15" fill="rgb(241,212,9)" fg:x="522" fg:w="1"/><text x="41.2555%" y="479.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="41.0055%" y="453" width="0.0786%" height="15" fill="rgb(205,8,2)" fg:x="522" fg:w="1"/><text x="41.2555%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="41.0055%" y="437" width="0.0786%" height="15" fill="rgb(217,173,54)" fg:x="522" fg:w="1"/><text x="41.2555%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="41.0055%" y="421" width="0.0786%" height="15" fill="rgb(208,149,52)" fg:x="522" fg:w="1"/><text x="41.2555%" y="431.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="41.0841%" y="469" width="0.0786%" height="15" fill="rgb(239,99,40)" fg:x="523" fg:w="1"/><text x="41.3341%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="41.3197%" y="325" width="0.0786%" height="15" fill="rgb(233,214,26)" fg:x="526" fg:w="1"/><text x="41.5697%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.3197%" y="309" width="0.0786%" height="15" fill="rgb(231,225,37)" fg:x="526" fg:w="1"/><text x="41.5697%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.3197%" y="293" width="0.0786%" height="15" fill="rgb(252,55,35)" fg:x="526" fg:w="1"/><text x="41.5697%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="41.1626%" y="437" width="0.3142%" height="15" fill="rgb(239,43,18)" fg:x="524" fg:w="4"/><text x="41.4126%" y="447.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.31%)</title><rect x="41.1626%" y="421" width="0.3142%" height="15" fill="rgb(251,125,49)" fg:x="524" fg:w="4"/><text x="41.4126%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.31%)</title><rect x="41.1626%" y="405" width="0.3142%" height="15" fill="rgb(212,83,54)" fg:x="524" fg:w="4"/><text x="41.4126%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="41.2412%" y="389" width="0.2357%" height="15" fill="rgb(250,75,6)" fg:x="525" fg:w="3"/><text x="41.4912%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="41.2412%" y="373" width="0.2357%" height="15" fill="rgb(252,36,40)" fg:x="525" fg:w="3"/><text x="41.4912%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="41.3197%" y="357" width="0.1571%" height="15" fill="rgb(230,91,51)" fg:x="526" fg:w="2"/><text x="41.5697%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.3197%" y="341" width="0.1571%" height="15" fill="rgb(212,92,28)" fg:x="526" fg:w="2"/><text x="41.5697%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="41.3983%" y="325" width="0.0786%" height="15" fill="rgb(227,13,22)" fg:x="527" fg:w="1"/><text x="41.6483%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.3983%" y="309" width="0.0786%" height="15" fill="rgb(239,204,32)" fg:x="527" fg:w="1"/><text x="41.6483%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.3983%" y="293" width="0.0786%" height="15" fill="rgb(228,49,41)" fg:x="527" fg:w="1"/><text x="41.6483%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.4768%" y="389" width="0.0786%" height="15" fill="rgb(206,95,6)" fg:x="528" fg:w="1"/><text x="41.7268%" y="399.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (7 samples, 0.55%)</title><rect x="41.1626%" y="469" width="0.5499%" height="15" fill="rgb(251,20,14)" fg:x="524" fg:w="7"/><text x="41.4126%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (7 samples, 0.55%)</title><rect x="41.1626%" y="453" width="0.5499%" height="15" fill="rgb(214,99,28)" fg:x="524" fg:w="7"/><text x="41.4126%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="41.4768%" y="437" width="0.2357%" height="15" fill="rgb(239,122,54)" fg:x="528" fg:w="3"/><text x="41.7268%" y="447.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="41.4768%" y="421" width="0.2357%" height="15" fill="rgb(218,217,46)" fg:x="528" fg:w="3"/><text x="41.7268%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="41.4768%" y="405" width="0.2357%" height="15" fill="rgb(249,106,28)" fg:x="528" fg:w="3"/><text x="41.7268%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="41.5554%" y="389" width="0.1571%" height="15" fill="rgb(250,158,18)" fg:x="529" fg:w="2"/><text x="41.8054%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.5554%" y="373" width="0.1571%" height="15" fill="rgb(226,137,29)" fg:x="529" fg:w="2"/><text x="41.8054%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="41.5554%" y="357" width="0.1571%" height="15" fill="rgb(210,188,1)" fg:x="529" fg:w="2"/><text x="41.8054%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.5554%" y="341" width="0.1571%" height="15" fill="rgb(227,84,42)" fg:x="529" fg:w="2"/><text x="41.8054%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="41.6339%" y="325" width="0.0786%" height="15" fill="rgb(222,147,48)" fg:x="530" fg:w="1"/><text x="41.8839%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.6339%" y="309" width="0.0786%" height="15" fill="rgb(241,150,43)" fg:x="530" fg:w="1"/><text x="41.8839%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="41.6339%" y="293" width="0.0786%" height="15" fill="rgb(206,139,52)" fg:x="530" fg:w="1"/><text x="41.8839%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.7125%" y="341" width="0.0786%" height="15" fill="rgb(230,63,14)" fg:x="531" fg:w="1"/><text x="41.9625%" y="351.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="41.7125%" y="453" width="0.1571%" height="15" fill="rgb(247,8,20)" fg:x="531" fg:w="2"/><text x="41.9625%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="41.7125%" y="437" width="0.1571%" height="15" fill="rgb(213,115,4)" fg:x="531" fg:w="2"/><text x="41.9625%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="41.7125%" y="421" width="0.1571%" height="15" fill="rgb(241,79,49)" fg:x="531" fg:w="2"/><text x="41.9625%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="41.7125%" y="405" width="0.1571%" height="15" fill="rgb(222,42,35)" fg:x="531" fg:w="2"/><text x="41.9625%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="41.7125%" y="389" width="0.1571%" height="15" fill="rgb(247,59,23)" fg:x="531" fg:w="2"/><text x="41.9625%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="41.7125%" y="373" width="0.1571%" height="15" fill="rgb(247,93,18)" fg:x="531" fg:w="2"/><text x="41.9625%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="41.7125%" y="357" width="0.1571%" height="15" fill="rgb(249,107,47)" fg:x="531" fg:w="2"/><text x="41.9625%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="41.7910%" y="341" width="0.0786%" height="15" fill="rgb(219,27,1)" fg:x="532" fg:w="1"/><text x="42.0410%" y="351.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (11 samples, 0.86%)</title><rect x="41.0841%" y="501" width="0.8641%" height="15" fill="rgb(217,82,32)" fg:x="523" fg:w="11"/><text x="41.3341%" y="511.50"></text></g><g><title>plugins_core::tools::set_occupying (11 samples, 0.86%)</title><rect x="41.0841%" y="485" width="0.8641%" height="15" fill="rgb(250,129,47)" fg:x="523" fg:w="11"/><text x="41.3341%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="41.7125%" y="469" width="0.2357%" height="15" fill="rgb(253,88,35)" fg:x="531" fg:w="3"/><text x="41.9625%" y="479.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="41.8696%" y="453" width="0.0786%" height="15" fill="rgb(245,221,14)" fg:x="533" fg:w="1"/><text x="42.1196%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="41.8696%" y="437" width="0.0786%" height="15" fill="rgb(217,119,54)" fg:x="533" fg:w="1"/><text x="42.1196%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.8696%" y="421" width="0.0786%" height="15" fill="rgb(247,128,31)" fg:x="533" fg:w="1"/><text x="42.1196%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.8696%" y="405" width="0.0786%" height="15" fill="rgb(211,99,22)" fg:x="533" fg:w="1"/><text x="42.1196%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="41.9482%" y="469" width="0.1571%" height="15" fill="rgb(212,20,17)" fg:x="534" fg:w="2"/><text x="42.1982%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.0267%" y="453" width="0.0786%" height="15" fill="rgb(209,159,29)" fg:x="535" fg:w="1"/><text x="42.2767%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.0267%" y="437" width="0.0786%" height="15" fill="rgb(222,177,53)" fg:x="535" fg:w="1"/><text x="42.2767%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="42.1053%" y="469" width="0.0786%" height="15" fill="rgb(234,46,43)" fg:x="536" fg:w="1"/><text x="42.3553%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="42.2624%" y="437" width="0.1571%" height="15" fill="rgb(208,108,14)" fg:x="538" fg:w="2"/><text x="42.5124%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="42.4195%" y="437" width="0.1571%" height="15" fill="rgb(226,78,53)" fg:x="540" fg:w="2"/><text x="42.6695%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="42.4195%" y="421" width="0.1571%" height="15" fill="rgb(230,20,41)" fg:x="540" fg:w="2"/><text x="42.6695%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="42.4195%" y="405" width="0.1571%" height="15" fill="rgb(213,195,35)" fg:x="540" fg:w="2"/><text x="42.6695%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.4980%" y="389" width="0.0786%" height="15" fill="rgb(242,62,36)" fg:x="541" fg:w="1"/><text x="42.7480%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.4980%" y="373" width="0.0786%" height="15" fill="rgb(222,210,37)" fg:x="541" fg:w="1"/><text x="42.7480%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.4980%" y="357" width="0.0786%" height="15" fill="rgb(232,107,19)" fg:x="541" fg:w="1"/><text x="42.7480%" y="367.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (10 samples, 0.79%)</title><rect x="41.9482%" y="485" width="0.7855%" height="15" fill="rgb(235,85,17)" fg:x="534" fg:w="10"/><text x="42.1982%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.55%)</title><rect x="42.1838%" y="469" width="0.5499%" height="15" fill="rgb(219,195,31)" fg:x="537" fg:w="7"/><text x="42.4338%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.55%)</title><rect x="42.1838%" y="453" width="0.5499%" height="15" fill="rgb(231,183,30)" fg:x="537" fg:w="7"/><text x="42.4338%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="42.5766%" y="437" width="0.1571%" height="15" fill="rgb(212,0,11)" fg:x="542" fg:w="2"/><text x="42.8266%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="42.5766%" y="421" width="0.1571%" height="15" fill="rgb(249,53,54)" fg:x="542" fg:w="2"/><text x="42.8266%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="42.6551%" y="405" width="0.0786%" height="15" fill="rgb(211,118,13)" fg:x="543" fg:w="1"/><text x="42.9051%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="42.6551%" y="389" width="0.0786%" height="15" fill="rgb(237,42,9)" fg:x="543" fg:w="1"/><text x="42.9051%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="42.6551%" y="373" width="0.0786%" height="15" fill="rgb(227,68,32)" fg:x="543" fg:w="1"/><text x="42.9051%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::moving::model::Occupyable&gt; (1 samples, 0.08%)</title><rect x="42.7337%" y="485" width="0.0786%" height="15" fill="rgb(238,10,7)" fg:x="544" fg:w="1"/><text x="42.9837%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="42.7337%" y="469" width="0.0786%" height="15" fill="rgb(224,42,12)" fg:x="544" fg:w="1"/><text x="42.9837%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.7337%" y="453" width="0.0786%" height="15" fill="rgb(252,190,5)" fg:x="544" fg:w="1"/><text x="42.9837%" y="463.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (14 samples, 1.10%)</title><rect x="41.9482%" y="501" width="1.0998%" height="15" fill="rgb(220,214,39)" fg:x="534" fg:w="14"/><text x="42.1982%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="42.8123%" y="485" width="0.2357%" height="15" fill="rgb(247,98,4)" fg:x="545" fg:w="3"/><text x="43.0623%" y="495.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="42.8908%" y="469" width="0.1571%" height="15" fill="rgb(211,60,12)" fg:x="546" fg:w="2"/><text x="43.1408%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="42.8908%" y="453" width="0.1571%" height="15" fill="rgb(224,42,10)" fg:x="546" fg:w="2"/><text x="43.1408%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="42.9694%" y="437" width="0.0786%" height="15" fill="rgb(217,167,4)" fg:x="547" fg:w="1"/><text x="43.2194%" y="447.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="42.9694%" y="421" width="0.0786%" height="15" fill="rgb(253,18,17)" fg:x="547" fg:w="1"/><text x="43.2194%" y="431.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="43.0479%" y="485" width="0.0786%" height="15" fill="rgb(249,186,44)" fg:x="548" fg:w="1"/><text x="43.2979%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::new (1 samples, 0.08%)</title><rect x="43.0479%" y="469" width="0.0786%" height="15" fill="rgb(254,124,54)" fg:x="548" fg:w="1"/><text x="43.2979%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="43.1265%" y="485" width="0.0786%" height="15" fill="rgb(220,124,39)" fg:x="549" fg:w="1"/><text x="43.3765%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="43.1265%" y="469" width="0.0786%" height="15" fill="rgb(225,96,46)" fg:x="549" fg:w="1"/><text x="43.3765%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="43.1265%" y="453" width="0.0786%" height="15" fill="rgb(221,106,12)" fg:x="549" fg:w="1"/><text x="43.3765%" y="463.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="43.1265%" y="437" width="0.0786%" height="15" fill="rgb(227,133,23)" fg:x="549" fg:w="1"/><text x="43.3765%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="43.1265%" y="421" width="0.0786%" height="15" fill="rgb(216,44,52)" fg:x="549" fg:w="1"/><text x="43.3765%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.1265%" y="405" width="0.0786%" height="15" fill="rgb(239,149,7)" fg:x="549" fg:w="1"/><text x="43.3765%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.1265%" y="389" width="0.0786%" height="15" fill="rgb(211,157,31)" fg:x="549" fg:w="1"/><text x="43.3765%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.1265%" y="373" width="0.0786%" height="15" fill="rgb(206,215,22)" fg:x="549" fg:w="1"/><text x="43.3765%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.1265%" y="357" width="0.0786%" height="15" fill="rgb(208,113,15)" fg:x="549" fg:w="1"/><text x="43.3765%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.1265%" y="341" width="0.0786%" height="15" fill="rgb(207,189,15)" fg:x="549" fg:w="1"/><text x="43.3765%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.1265%" y="325" width="0.0786%" height="15" fill="rgb(231,115,4)" fg:x="549" fg:w="1"/><text x="43.3765%" y="335.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="43.2050%" y="485" width="0.0786%" height="15" fill="rgb(253,117,2)" fg:x="550" fg:w="1"/><text x="43.4550%" y="495.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="43.2050%" y="469" width="0.0786%" height="15" fill="rgb(248,48,24)" fg:x="550" fg:w="1"/><text x="43.4550%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.2050%" y="453" width="0.0786%" height="15" fill="rgb(241,28,46)" fg:x="550" fg:w="1"/><text x="43.4550%" y="463.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="43.2836%" y="421" width="0.0786%" height="15" fill="rgb(216,165,52)" fg:x="551" fg:w="1"/><text x="43.5336%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="43.2836%" y="405" width="0.0786%" height="15" fill="rgb(220,222,34)" fg:x="551" fg:w="1"/><text x="43.5336%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="43.2836%" y="389" width="0.0786%" height="15" fill="rgb(247,222,49)" fg:x="551" fg:w="1"/><text x="43.5336%" y="399.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="43.2836%" y="485" width="0.2357%" height="15" fill="rgb(240,10,31)" fg:x="551" fg:w="3"/><text x="43.5336%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.24%)</title><rect x="43.2836%" y="469" width="0.2357%" height="15" fill="rgb(221,199,35)" fg:x="551" fg:w="3"/><text x="43.5336%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="43.2836%" y="453" width="0.2357%" height="15" fill="rgb(230,223,11)" fg:x="551" fg:w="3"/><text x="43.5336%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="43.2836%" y="437" width="0.2357%" height="15" fill="rgb(218,82,45)" fg:x="551" fg:w="3"/><text x="43.5336%" y="447.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="43.3621%" y="421" width="0.1571%" height="15" fill="rgb(233,213,33)" fg:x="552" fg:w="2"/><text x="43.6121%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="43.3621%" y="405" width="0.1571%" height="15" fill="rgb(210,143,52)" fg:x="552" fg:w="2"/><text x="43.6121%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="43.3621%" y="389" width="0.1571%" height="15" fill="rgb(206,95,4)" fg:x="552" fg:w="2"/><text x="43.6121%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.4407%" y="373" width="0.0786%" height="15" fill="rgb(246,164,46)" fg:x="553" fg:w="1"/><text x="43.6907%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.4407%" y="357" width="0.0786%" height="15" fill="rgb(213,210,47)" fg:x="553" fg:w="1"/><text x="43.6907%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.4407%" y="341" width="0.0786%" height="15" fill="rgb(210,12,38)" fg:x="553" fg:w="1"/><text x="43.6907%" y="351.50"></text></g><g><title>plugins_core::tools::set_container (7 samples, 0.55%)</title><rect x="43.0479%" y="501" width="0.5499%" height="15" fill="rgb(252,192,54)" fg:x="548" fg:w="7"/><text x="43.2979%" y="511.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="43.5192%" y="485" width="0.0786%" height="15" fill="rgb(242,92,6)" fg:x="554" fg:w="1"/><text x="43.7692%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="43.5192%" y="469" width="0.0786%" height="15" fill="rgb(253,154,15)" fg:x="554" fg:w="1"/><text x="43.7692%" y="479.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="43.5192%" y="453" width="0.0786%" height="15" fill="rgb(209,20,43)" fg:x="554" fg:w="1"/><text x="43.7692%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.5192%" y="437" width="0.0786%" height="15" fill="rgb(232,28,49)" fg:x="554" fg:w="1"/><text x="43.7692%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (246 samples, 19.32%)</title><rect x="24.3519%" y="517" width="19.3244%" height="15" fill="rgb(248,131,53)" fg:x="310" fg:w="246"/><text x="24.6019%" y="527.50">plugins_core::build::BuildSurr..</text></g><g><title>plugins_core::tools::set_wearing (1 samples, 0.08%)</title><rect x="43.5978%" y="501" width="0.0786%" height="15" fill="rgb(214,16,30)" fg:x="555" fg:w="1"/><text x="43.8478%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="43.5978%" y="485" width="0.0786%" height="15" fill="rgb(245,16,0)" fg:x="555" fg:w="1"/><text x="43.8478%" y="495.50"></text></g><g><title>plugins_core::fashion::model::_::&lt;impl serde::ser::Serialize for plugins_core::fashion::model::Wearing&gt;::serialize (1 samples, 0.08%)</title><rect x="43.5978%" y="469" width="0.0786%" height="15" fill="rgb(245,17,35)" fg:x="555" fg:w="1"/><text x="43.8478%" y="479.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="43.6764%" y="421" width="0.0786%" height="15" fill="rgb(249,27,53)" fg:x="556" fg:w="1"/><text x="43.9264%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.16%)</title><rect x="43.6764%" y="469" width="0.1571%" height="15" fill="rgb(214,73,24)" fg:x="556" fg:w="2"/><text x="43.9264%" y="479.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (2 samples, 0.16%)</title><rect x="43.6764%" y="453" width="0.1571%" height="15" fill="rgb(223,84,37)" fg:x="556" fg:w="2"/><text x="43.9264%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="43.6764%" y="437" width="0.1571%" height="15" fill="rgb(210,109,28)" fg:x="556" fg:w="2"/><text x="43.9264%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="43.7549%" y="421" width="0.0786%" height="15" fill="rgb(208,186,6)" fg:x="557" fg:w="1"/><text x="44.0049%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="43.7549%" y="405" width="0.0786%" height="15" fill="rgb(235,201,30)" fg:x="557" fg:w="1"/><text x="44.0049%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.7549%" y="389" width="0.0786%" height="15" fill="rgb(216,198,48)" fg:x="557" fg:w="1"/><text x="44.0049%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.7549%" y="373" width="0.0786%" height="15" fill="rgb(254,186,25)" fg:x="557" fg:w="1"/><text x="44.0049%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="43.7549%" y="357" width="0.0786%" height="15" fill="rgb(227,87,5)" fg:x="557" fg:w="1"/><text x="44.0049%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="43.7549%" y="341" width="0.0786%" height="15" fill="rgb(236,205,25)" fg:x="557" fg:w="1"/><text x="44.0049%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="43.7549%" y="325" width="0.0786%" height="15" fill="rgb(229,99,32)" fg:x="557" fg:w="1"/><text x="44.0049%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="43.7549%" y="309" width="0.0786%" height="15" fill="rgb(231,177,31)" fg:x="557" fg:w="1"/><text x="44.0049%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="43.7549%" y="293" width="0.0786%" height="15" fill="rgb(246,15,2)" fg:x="557" fg:w="1"/><text x="44.0049%" y="303.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (3 samples, 0.24%)</title><rect x="43.6764%" y="517" width="0.2357%" height="15" fill="rgb(207,39,15)" fg:x="556" fg:w="3"/><text x="43.9264%" y="527.50"></text></g><g><title>plugins_core::build::Build::new (3 samples, 0.24%)</title><rect x="43.6764%" y="501" width="0.2357%" height="15" fill="rgb(207,44,9)" fg:x="556" fg:w="3"/><text x="43.9264%" y="511.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.24%)</title><rect x="43.6764%" y="485" width="0.2357%" height="15" fill="rgb(225,224,33)" fg:x="556" fg:w="3"/><text x="43.9264%" y="495.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="43.8335%" y="469" width="0.0786%" height="15" fill="rgb(252,151,3)" fg:x="558" fg:w="1"/><text x="44.0835%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (3 samples, 0.24%)</title><rect x="43.9906%" y="485" width="0.2357%" height="15" fill="rgb(211,140,13)" fg:x="560" fg:w="3"/><text x="44.2406%" y="495.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="43.9906%" y="469" width="0.2357%" height="15" fill="rgb(239,225,17)" fg:x="560" fg:w="3"/><text x="44.2406%" y="479.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="44.2262%" y="485" width="0.0786%" height="15" fill="rgb(223,170,52)" fg:x="563" fg:w="1"/><text x="44.4762%" y="495.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="44.2262%" y="469" width="0.0786%" height="15" fill="rgb(212,64,21)" fg:x="563" fg:w="1"/><text x="44.4762%" y="479.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="44.2262%" y="453" width="0.0786%" height="15" fill="rgb(236,126,48)" fg:x="563" fg:w="1"/><text x="44.4762%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.2262%" y="437" width="0.0786%" height="15" fill="rgb(209,135,11)" fg:x="563" fg:w="1"/><text x="44.4762%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="44.2262%" y="421" width="0.0786%" height="15" fill="rgb(228,126,40)" fg:x="563" fg:w="1"/><text x="44.4762%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.3833%" y="469" width="0.0786%" height="15" fill="rgb(205,196,36)" fg:x="565" fg:w="1"/><text x="44.6333%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.4619%" y="469" width="0.0786%" height="15" fill="rgb(243,160,33)" fg:x="566" fg:w="1"/><text x="44.7119%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="44.5405%" y="453" width="0.0786%" height="15" fill="rgb(210,84,20)" fg:x="567" fg:w="1"/><text x="44.7905%" y="463.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="44.5405%" y="437" width="0.0786%" height="15" fill="rgb(228,213,30)" fg:x="567" fg:w="1"/><text x="44.7905%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="44.5405%" y="421" width="0.0786%" height="15" fill="rgb(252,33,45)" fg:x="567" fg:w="1"/><text x="44.7905%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="44.5405%" y="405" width="0.0786%" height="15" fill="rgb(254,227,20)" fg:x="567" fg:w="1"/><text x="44.7905%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.5405%" y="389" width="0.0786%" height="15" fill="rgb(228,192,2)" fg:x="567" fg:w="1"/><text x="44.7905%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="44.5405%" y="373" width="0.0786%" height="15" fill="rgb(233,32,8)" fg:x="567" fg:w="1"/><text x="44.7905%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.5405%" y="357" width="0.0786%" height="15" fill="rgb(220,146,47)" fg:x="567" fg:w="1"/><text x="44.7905%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="44.5405%" y="341" width="0.0786%" height="15" fill="rgb(246,194,1)" fg:x="567" fg:w="1"/><text x="44.7905%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.5405%" y="325" width="0.0786%" height="15" fill="rgb(218,203,9)" fg:x="567" fg:w="1"/><text x="44.7905%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.16%)</title><rect x="44.6190%" y="421" width="0.1571%" height="15" fill="rgb(237,97,14)" fg:x="568" fg:w="2"/><text x="44.8690%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="44.6976%" y="405" width="0.0786%" height="15" fill="rgb(239,76,15)" fg:x="569" fg:w="1"/><text x="44.9476%" y="415.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="44.6190%" y="453" width="0.2357%" height="15" fill="rgb(222,53,45)" fg:x="568" fg:w="3"/><text x="44.8690%" y="463.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="44.6190%" y="437" width="0.2357%" height="15" fill="rgb(237,88,5)" fg:x="568" fg:w="3"/><text x="44.8690%" y="447.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="44.7761%" y="421" width="0.0786%" height="15" fill="rgb(218,223,35)" fg:x="570" fg:w="1"/><text x="45.0261%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.7761%" y="405" width="0.0786%" height="15" fill="rgb(243,229,38)" fg:x="570" fg:w="1"/><text x="45.0261%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.7761%" y="389" width="0.0786%" height="15" fill="rgb(240,75,41)" fg:x="570" fg:w="1"/><text x="45.0261%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.7761%" y="373" width="0.0786%" height="15" fill="rgb(209,110,37)" fg:x="570" fg:w="1"/><text x="45.0261%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.8547%" y="341" width="0.0786%" height="15" fill="rgb(221,130,46)" fg:x="571" fg:w="1"/><text x="45.1047%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.8547%" y="325" width="0.0786%" height="15" fill="rgb(237,160,20)" fg:x="571" fg:w="1"/><text x="45.1047%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.8547%" y="309" width="0.0786%" height="15" fill="rgb(234,126,24)" fg:x="571" fg:w="1"/><text x="45.1047%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.8547%" y="293" width="0.0786%" height="15" fill="rgb(207,177,9)" fg:x="571" fg:w="1"/><text x="45.1047%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.8547%" y="277" width="0.0786%" height="15" fill="rgb(231,191,33)" fg:x="571" fg:w="1"/><text x="45.1047%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.8547%" y="261" width="0.0786%" height="15" fill="rgb(207,42,1)" fg:x="571" fg:w="1"/><text x="45.1047%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.8547%" y="245" width="0.0786%" height="15" fill="rgb(218,34,50)" fg:x="571" fg:w="1"/><text x="45.1047%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.8547%" y="229" width="0.0786%" height="15" fill="rgb(254,126,39)" fg:x="571" fg:w="1"/><text x="45.1047%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.8547%" y="213" width="0.0786%" height="15" fill="rgb(251,17,26)" fg:x="571" fg:w="1"/><text x="45.1047%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.8547%" y="197" width="0.0786%" height="15" fill="rgb(252,215,34)" fg:x="571" fg:w="1"/><text x="45.1047%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.8547%" y="181" width="0.0786%" height="15" fill="rgb(217,120,44)" fg:x="571" fg:w="1"/><text x="45.1047%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.8547%" y="165" width="0.0786%" height="15" fill="rgb(211,31,11)" fg:x="571" fg:w="1"/><text x="45.1047%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="44.8547%" y="373" width="0.1571%" height="15" fill="rgb(222,69,51)" fg:x="571" fg:w="2"/><text x="45.1047%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="44.8547%" y="357" width="0.1571%" height="15" fill="rgb(215,229,42)" fg:x="571" fg:w="2"/><text x="45.1047%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.9332%" y="341" width="0.0786%" height="15" fill="rgb(212,102,15)" fg:x="572" fg:w="1"/><text x="45.1832%" y="351.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="44.8547%" y="405" width="0.2357%" height="15" fill="rgb(205,179,41)" fg:x="571" fg:w="3"/><text x="45.1047%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="44.8547%" y="389" width="0.2357%" height="15" fill="rgb(219,148,46)" fg:x="571" fg:w="3"/><text x="45.1047%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="45.0118%" y="373" width="0.0786%" height="15" fill="rgb(243,40,19)" fg:x="573" fg:w="1"/><text x="45.2618%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.0118%" y="357" width="0.0786%" height="15" fill="rgb(208,206,34)" fg:x="573" fg:w="1"/><text x="45.2618%" y="367.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.39%)</title><rect x="44.8547%" y="437" width="0.3928%" height="15" fill="rgb(244,184,38)" fg:x="571" fg:w="5"/><text x="45.1047%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.39%)</title><rect x="44.8547%" y="421" width="0.3928%" height="15" fill="rgb(244,151,47)" fg:x="571" fg:w="5"/><text x="45.1047%" y="431.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="45.0903%" y="405" width="0.1571%" height="15" fill="rgb(236,134,42)" fg:x="574" fg:w="2"/><text x="45.3403%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="45.0903%" y="389" width="0.1571%" height="15" fill="rgb(233,93,22)" fg:x="574" fg:w="2"/><text x="45.3403%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="45.0903%" y="373" width="0.1571%" height="15" fill="rgb(211,202,10)" fg:x="574" fg:w="2"/><text x="45.3403%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.1689%" y="357" width="0.0786%" height="15" fill="rgb(240,63,8)" fg:x="575" fg:w="1"/><text x="45.4189%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="45.2474%" y="405" width="0.0786%" height="15" fill="rgb(214,9,4)" fg:x="576" fg:w="1"/><text x="45.4974%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="45.2474%" y="389" width="0.0786%" height="15" fill="rgb(243,66,45)" fg:x="576" fg:w="1"/><text x="45.4974%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.2474%" y="373" width="0.0786%" height="15" fill="rgb(220,50,42)" fg:x="576" fg:w="1"/><text x="45.4974%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.2474%" y="357" width="0.0786%" height="15" fill="rgb(220,134,27)" fg:x="576" fg:w="1"/><text x="45.4974%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.2474%" y="341" width="0.0786%" height="15" fill="rgb(246,151,50)" fg:x="576" fg:w="1"/><text x="45.4974%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.3260%" y="357" width="0.0786%" height="15" fill="rgb(238,216,27)" fg:x="577" fg:w="1"/><text x="45.5760%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.3260%" y="341" width="0.0786%" height="15" fill="rgb(250,92,11)" fg:x="577" fg:w="1"/><text x="45.5760%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.3260%" y="325" width="0.0786%" height="15" fill="rgb(248,183,6)" fg:x="577" fg:w="1"/><text x="45.5760%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="45.4046%" y="309" width="0.0786%" height="15" fill="rgb(211,204,50)" fg:x="578" fg:w="1"/><text x="45.6546%" y="319.50"></text></g><g><title>engine::session::internal::Entities::add_entity (9 samples, 0.71%)</title><rect x="44.8547%" y="453" width="0.7070%" height="15" fill="rgb(252,55,47)" fg:x="571" fg:w="9"/><text x="45.1047%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.31%)</title><rect x="45.2474%" y="437" width="0.3142%" height="15" fill="rgb(240,198,32)" fg:x="576" fg:w="4"/><text x="45.4974%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.31%)</title><rect x="45.2474%" y="421" width="0.3142%" height="15" fill="rgb(224,203,19)" fg:x="576" fg:w="4"/><text x="45.4974%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="45.3260%" y="405" width="0.2357%" height="15" fill="rgb(205,27,16)" fg:x="577" fg:w="3"/><text x="45.5760%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="45.3260%" y="389" width="0.2357%" height="15" fill="rgb(224,226,17)" fg:x="577" fg:w="3"/><text x="45.5760%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="45.3260%" y="373" width="0.2357%" height="15" fill="rgb(205,216,54)" fg:x="577" fg:w="3"/><text x="45.5760%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="45.4046%" y="357" width="0.1571%" height="15" fill="rgb(248,168,46)" fg:x="578" fg:w="2"/><text x="45.6546%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="45.4046%" y="341" width="0.1571%" height="15" fill="rgb(226,111,45)" fg:x="578" fg:w="2"/><text x="45.6546%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="45.4046%" y="325" width="0.1571%" height="15" fill="rgb(231,15,9)" fg:x="578" fg:w="2"/><text x="45.6546%" y="335.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="45.4831%" y="309" width="0.0786%" height="15" fill="rgb(243,168,3)" fg:x="579" fg:w="1"/><text x="45.7331%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="45.4831%" y="293" width="0.0786%" height="15" fill="rgb(221,220,54)" fg:x="579" fg:w="1"/><text x="45.7331%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.4831%" y="277" width="0.0786%" height="15" fill="rgb(232,174,38)" fg:x="579" fg:w="1"/><text x="45.7331%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.10%)</title><rect x="44.5405%" y="469" width="1.0998%" height="15" fill="rgb(205,14,38)" fg:x="567" fg:w="14"/><text x="44.7905%" y="479.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.08%)</title><rect x="45.5617%" y="453" width="0.0786%" height="15" fill="rgb(234,89,19)" fg:x="580" fg:w="1"/><text x="45.8117%" y="463.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="45.5617%" y="437" width="0.0786%" height="15" fill="rgb(216,68,51)" fg:x="580" fg:w="1"/><text x="45.8117%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.6402%" y="437" width="0.0786%" height="15" fill="rgb(213,49,2)" fg:x="581" fg:w="1"/><text x="45.8902%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (24 samples, 1.89%)</title><rect x="43.9120%" y="517" width="1.8853%" height="15" fill="rgb(242,146,30)" fg:x="559" fg:w="24"/><text x="44.1620%" y="527.50">p..</text></g><g><title>plugins_core::build::QuickThing::make (23 samples, 1.81%)</title><rect x="43.9906%" y="501" width="1.8068%" height="15" fill="rgb(224,188,11)" fg:x="560" fg:w="23"/><text x="44.2406%" y="511.50">p..</text></g><g><title>plugins_core::build::Build::save (19 samples, 1.49%)</title><rect x="44.3048%" y="485" width="1.4925%" height="15" fill="rgb(213,159,11)" fg:x="564" fg:w="19"/><text x="44.5548%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="45.6402%" y="469" width="0.1571%" height="15" fill="rgb(229,13,31)" fg:x="581" fg:w="2"/><text x="45.8902%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="45.6402%" y="453" width="0.1571%" height="15" fill="rgb(209,103,11)" fg:x="581" fg:w="2"/><text x="45.8902%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.7188%" y="437" width="0.0786%" height="15" fill="rgb(206,3,4)" fg:x="582" fg:w="1"/><text x="45.9688%" y="447.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="45.8759%" y="485" width="0.1571%" height="15" fill="rgb(252,10,49)" fg:x="584" fg:w="2"/><text x="46.1259%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.9544%" y="469" width="0.0786%" height="15" fill="rgb(217,160,32)" fg:x="585" fg:w="1"/><text x="46.2044%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.9544%" y="453" width="0.0786%" height="15" fill="rgb(249,196,0)" fg:x="585" fg:w="1"/><text x="46.2044%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="45.9544%" y="437" width="0.0786%" height="15" fill="rgb(213,17,48)" fg:x="585" fg:w="1"/><text x="46.2044%" y="447.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="46.0330%" y="485" width="0.2357%" height="15" fill="rgb(206,42,46)" fg:x="586" fg:w="3"/><text x="46.2830%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="46.0330%" y="469" width="0.2357%" height="15" fill="rgb(212,105,24)" fg:x="586" fg:w="3"/><text x="46.2830%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="46.1115%" y="453" width="0.1571%" height="15" fill="rgb(243,216,30)" fg:x="587" fg:w="2"/><text x="46.3615%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.1901%" y="437" width="0.0786%" height="15" fill="rgb(207,121,3)" fg:x="588" fg:w="1"/><text x="46.4401%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="46.1901%" y="421" width="0.0786%" height="15" fill="rgb(249,78,0)" fg:x="588" fg:w="1"/><text x="46.4401%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.3472%" y="389" width="0.0786%" height="15" fill="rgb(244,151,32)" fg:x="590" fg:w="1"/><text x="46.5972%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.3472%" y="373" width="0.0786%" height="15" fill="rgb(228,63,25)" fg:x="590" fg:w="1"/><text x="46.5972%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="46.3472%" y="357" width="0.0786%" height="15" fill="rgb(231,158,23)" fg:x="590" fg:w="1"/><text x="46.5972%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (8 samples, 0.63%)</title><rect x="45.8759%" y="501" width="0.6284%" height="15" fill="rgb(248,107,23)" fg:x="584" fg:w="8"/><text x="46.1259%" y="511.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="46.2687%" y="485" width="0.2357%" height="15" fill="rgb(215,168,21)" fg:x="589" fg:w="3"/><text x="46.5187%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="46.3472%" y="469" width="0.1571%" height="15" fill="rgb(227,83,22)" fg:x="590" fg:w="2"/><text x="46.5972%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="46.3472%" y="453" width="0.1571%" height="15" fill="rgb(217,118,43)" fg:x="590" fg:w="2"/><text x="46.5972%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="46.3472%" y="437" width="0.1571%" height="15" fill="rgb(229,220,41)" fg:x="590" fg:w="2"/><text x="46.5972%" y="447.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="46.3472%" y="421" width="0.1571%" height="15" fill="rgb(254,146,46)" fg:x="590" fg:w="2"/><text x="46.5972%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="46.3472%" y="405" width="0.1571%" height="15" fill="rgb(233,208,31)" fg:x="590" fg:w="2"/><text x="46.5972%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="46.4258%" y="389" width="0.0786%" height="15" fill="rgb(222,162,7)" fg:x="591" fg:w="1"/><text x="46.6758%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="46.5043%" y="469" width="0.0786%" height="15" fill="rgb(230,117,45)" fg:x="592" fg:w="1"/><text x="46.7543%" y="479.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="46.5043%" y="453" width="0.0786%" height="15" fill="rgb(239,163,6)" fg:x="592" fg:w="1"/><text x="46.7543%" y="463.50"></text></g><g><title>plugins_core::build::Build::new_world (2 samples, 0.16%)</title><rect x="46.5043%" y="501" width="0.1571%" height="15" fill="rgb(246,130,17)" fg:x="592" fg:w="2"/><text x="46.7543%" y="511.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="46.5043%" y="485" width="0.1571%" height="15" fill="rgb(216,84,5)" fg:x="592" fg:w="2"/><text x="46.7543%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="46.5829%" y="469" width="0.0786%" height="15" fill="rgb(230,200,21)" fg:x="593" fg:w="1"/><text x="46.8329%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="46.5829%" y="453" width="0.0786%" height="15" fill="rgb(224,2,8)" fg:x="593" fg:w="1"/><text x="46.8329%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="46.5829%" y="437" width="0.0786%" height="15" fill="rgb(238,178,10)" fg:x="593" fg:w="1"/><text x="46.8329%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="46.7400%" y="469" width="0.0786%" height="15" fill="rgb(242,153,24)" fg:x="595" fg:w="1"/><text x="46.9900%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="46.7400%" y="453" width="0.0786%" height="15" fill="rgb(242,32,48)" fg:x="595" fg:w="1"/><text x="46.9900%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="46.7400%" y="437" width="0.0786%" height="15" fill="rgb(227,36,0)" fg:x="595" fg:w="1"/><text x="46.9900%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.7400%" y="421" width="0.0786%" height="15" fill="rgb(251,33,35)" fg:x="595" fg:w="1"/><text x="46.9900%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.7400%" y="405" width="0.0786%" height="15" fill="rgb(232,168,51)" fg:x="595" fg:w="1"/><text x="46.9900%" y="415.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="46.8185%" y="421" width="0.0786%" height="15" fill="rgb(228,56,10)" fg:x="596" fg:w="1"/><text x="47.0685%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="46.8185%" y="405" width="0.0786%" height="15" fill="rgb(231,10,26)" fg:x="596" fg:w="1"/><text x="47.0685%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.8185%" y="389" width="0.0786%" height="15" fill="rgb(226,202,12)" fg:x="596" fg:w="1"/><text x="47.0685%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.8185%" y="373" width="0.0786%" height="15" fill="rgb(251,49,21)" fg:x="596" fg:w="1"/><text x="47.0685%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.8185%" y="357" width="0.0786%" height="15" fill="rgb(206,228,28)" fg:x="596" fg:w="1"/><text x="47.0685%" y="367.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="46.8185%" y="453" width="0.1571%" height="15" fill="rgb(205,198,31)" fg:x="596" fg:w="2"/><text x="47.0685%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="46.8185%" y="437" width="0.1571%" height="15" fill="rgb(213,69,1)" fg:x="596" fg:w="2"/><text x="47.0685%" y="447.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="46.8971%" y="421" width="0.0786%" height="15" fill="rgb(209,177,9)" fg:x="597" fg:w="1"/><text x="47.1471%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="46.8971%" y="405" width="0.0786%" height="15" fill="rgb(227,119,30)" fg:x="597" fg:w="1"/><text x="47.1471%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="46.8971%" y="389" width="0.0786%" height="15" fill="rgb(234,106,41)" fg:x="597" fg:w="1"/><text x="47.1471%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="46.8971%" y="373" width="0.0786%" height="15" fill="rgb(244,103,47)" fg:x="597" fg:w="1"/><text x="47.1471%" y="383.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="46.8971%" y="357" width="0.0786%" height="15" fill="rgb(212,211,25)" fg:x="597" fg:w="1"/><text x="47.1471%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="46.8971%" y="341" width="0.0786%" height="15" fill="rgb(208,63,53)" fg:x="597" fg:w="1"/><text x="47.1471%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.8971%" y="325" width="0.0786%" height="15" fill="rgb(213,176,21)" fg:x="597" fg:w="1"/><text x="47.1471%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="46.9756%" y="405" width="0.0786%" height="15" fill="rgb(243,124,12)" fg:x="598" fg:w="1"/><text x="47.2256%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="46.9756%" y="421" width="0.1571%" height="15" fill="rgb(239,2,35)" fg:x="598" fg:w="2"/><text x="47.2256%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="47.0542%" y="405" width="0.0786%" height="15" fill="rgb(253,169,22)" fg:x="599" fg:w="1"/><text x="47.3042%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.0542%" y="389" width="0.0786%" height="15" fill="rgb(254,51,12)" fg:x="599" fg:w="1"/><text x="47.3042%" y="399.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.47%)</title><rect x="46.8185%" y="469" width="0.4713%" height="15" fill="rgb(244,17,47)" fg:x="596" fg:w="6"/><text x="47.0685%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.31%)</title><rect x="46.9756%" y="453" width="0.3142%" height="15" fill="rgb(251,45,46)" fg:x="598" fg:w="4"/><text x="47.2256%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.31%)</title><rect x="46.9756%" y="437" width="0.3142%" height="15" fill="rgb(223,87,43)" fg:x="598" fg:w="4"/><text x="47.2256%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="47.1328%" y="421" width="0.1571%" height="15" fill="rgb(230,132,31)" fg:x="600" fg:w="2"/><text x="47.3828%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="47.1328%" y="405" width="0.1571%" height="15" fill="rgb(206,99,1)" fg:x="600" fg:w="2"/><text x="47.3828%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="47.1328%" y="389" width="0.1571%" height="15" fill="rgb(227,110,25)" fg:x="600" fg:w="2"/><text x="47.3828%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="47.1328%" y="373" width="0.1571%" height="15" fill="rgb(217,182,7)" fg:x="600" fg:w="2"/><text x="47.3828%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="47.2113%" y="357" width="0.0786%" height="15" fill="rgb(250,176,4)" fg:x="601" fg:w="1"/><text x="47.4613%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="47.2113%" y="341" width="0.0786%" height="15" fill="rgb(244,98,30)" fg:x="601" fg:w="1"/><text x="47.4613%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="47.2113%" y="325" width="0.0786%" height="15" fill="rgb(228,150,42)" fg:x="601" fg:w="1"/><text x="47.4613%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.2113%" y="309" width="0.0786%" height="15" fill="rgb(231,91,46)" fg:x="601" fg:w="1"/><text x="47.4613%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.63%)</title><rect x="46.7400%" y="485" width="0.6284%" height="15" fill="rgb(252,161,32)" fg:x="595" fg:w="8"/><text x="46.9900%" y="495.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.08%)</title><rect x="47.2899%" y="469" width="0.0786%" height="15" fill="rgb(236,69,41)" fg:x="602" fg:w="1"/><text x="47.5399%" y="479.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="47.2899%" y="453" width="0.0786%" height="15" fill="rgb(212,160,3)" fg:x="602" fg:w="1"/><text x="47.5399%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="47.2899%" y="437" width="0.0786%" height="15" fill="rgb(216,5,50)" fg:x="602" fg:w="1"/><text x="47.5399%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="47.3684%" y="485" width="0.1571%" height="15" fill="rgb(241,138,25)" fg:x="603" fg:w="2"/><text x="47.6184%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.4470%" y="469" width="0.0786%" height="15" fill="rgb(239,42,18)" fg:x="604" fg:w="1"/><text x="47.6970%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.4470%" y="453" width="0.0786%" height="15" fill="rgb(239,40,7)" fg:x="604" fg:w="1"/><text x="47.6970%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="47.4470%" y="437" width="0.0786%" height="15" fill="rgb(239,11,31)" fg:x="604" fg:w="1"/><text x="47.6970%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="47.4470%" y="421" width="0.0786%" height="15" fill="rgb(224,77,40)" fg:x="604" fg:w="1"/><text x="47.6970%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="47.4470%" y="405" width="0.0786%" height="15" fill="rgb(226,15,5)" fg:x="604" fg:w="1"/><text x="47.6970%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.4470%" y="389" width="0.0786%" height="15" fill="rgb(254,188,5)" fg:x="604" fg:w="1"/><text x="47.6970%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.4470%" y="373" width="0.0786%" height="15" fill="rgb(241,148,52)" fg:x="604" fg:w="1"/><text x="47.6970%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="47.4470%" y="357" width="0.0786%" height="15" fill="rgb(251,48,36)" fg:x="604" fg:w="1"/><text x="47.6970%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="47.4470%" y="341" width="0.0786%" height="15" fill="rgb(243,83,13)" fg:x="604" fg:w="1"/><text x="47.6970%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="47.4470%" y="325" width="0.0786%" height="15" fill="rgb(210,105,0)" fg:x="604" fg:w="1"/><text x="47.6970%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="47.4470%" y="309" width="0.0786%" height="15" fill="rgb(239,60,36)" fg:x="604" fg:w="1"/><text x="47.6970%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.4470%" y="293" width="0.0786%" height="15" fill="rgb(210,20,0)" fg:x="604" fg:w="1"/><text x="47.6970%" y="303.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (480 samples, 37.71%)</title><rect x="9.8979%" y="533" width="37.7062%" height="15" fill="rgb(244,26,53)" fg:x="126" fg:w="480"/><text x="10.1479%" y="543.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (23 samples, 1.81%)</title><rect x="45.7973%" y="517" width="1.8068%" height="15" fill="rgb(240,100,49)" fg:x="583" fg:w="23"/><text x="46.0473%" y="527.50">p..</text></g><g><title>plugins_core::build::Build::save (12 samples, 0.94%)</title><rect x="46.6614%" y="501" width="0.9427%" height="15" fill="rgb(250,46,45)" fg:x="594" fg:w="12"/><text x="46.9114%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="47.5255%" y="485" width="0.0786%" height="15" fill="rgb(220,181,29)" fg:x="605" fg:w="1"/><text x="47.7755%" y="495.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="47.5255%" y="469" width="0.0786%" height="15" fill="rgb(213,137,33)" fg:x="605" fg:w="1"/><text x="47.7755%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="47.5255%" y="453" width="0.0786%" height="15" fill="rgb(213,27,48)" fg:x="605" fg:w="1"/><text x="47.7755%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="47.6041%" y="533" width="0.0786%" height="15" fill="rgb(245,180,39)" fg:x="606" fg:w="1"/><text x="47.8541%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="47.6041%" y="517" width="0.0786%" height="15" fill="rgb(212,158,42)" fg:x="606" fg:w="1"/><text x="47.8541%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="47.6826%" y="533" width="0.0786%" height="15" fill="rgb(228,193,18)" fg:x="607" fg:w="1"/><text x="47.9326%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="47.6826%" y="517" width="0.0786%" height="15" fill="rgb(245,172,29)" fg:x="607" fg:w="1"/><text x="47.9326%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="47.6826%" y="501" width="0.0786%" height="15" fill="rgb(207,98,24)" fg:x="607" fg:w="1"/><text x="47.9326%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="47.6826%" y="485" width="0.0786%" height="15" fill="rgb(249,92,26)" fg:x="607" fg:w="1"/><text x="47.9326%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.6826%" y="469" width="0.0786%" height="15" fill="rgb(217,176,26)" fg:x="607" fg:w="1"/><text x="47.9326%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="47.7612%" y="501" width="0.1571%" height="15" fill="rgb(221,8,39)" fg:x="608" fg:w="2"/><text x="48.0112%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="47.7612%" y="485" width="0.1571%" height="15" fill="rgb(208,90,18)" fg:x="608" fg:w="2"/><text x="48.0112%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="47.7612%" y="469" width="0.1571%" height="15" fill="rgb(207,202,30)" fg:x="608" fg:w="2"/><text x="48.0112%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="47.7612%" y="453" width="0.1571%" height="15" fill="rgb(231,124,22)" fg:x="608" fg:w="2"/><text x="48.0112%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="47.7612%" y="437" width="0.1571%" height="15" fill="rgb(206,15,5)" fg:x="608" fg:w="2"/><text x="48.0112%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="47.7612%" y="421" width="0.1571%" height="15" fill="rgb(239,16,52)" fg:x="608" fg:w="2"/><text x="48.0112%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="47.7612%" y="405" width="0.1571%" height="15" fill="rgb(245,213,29)" fg:x="608" fg:w="2"/><text x="48.0112%" y="415.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="47.7612%" y="517" width="0.2357%" height="15" fill="rgb(213,203,36)" fg:x="608" fg:w="3"/><text x="48.0112%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.9183%" y="501" width="0.0786%" height="15" fill="rgb(209,55,18)" fg:x="610" fg:w="1"/><text x="48.1683%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.9183%" y="485" width="0.0786%" height="15" fill="rgb(207,133,49)" fg:x="610" fg:w="1"/><text x="48.1683%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="47.9969%" y="373" width="0.0786%" height="15" fill="rgb(240,33,46)" fg:x="611" fg:w="1"/><text x="48.2469%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.9969%" y="357" width="0.0786%" height="15" fill="rgb(212,35,2)" fg:x="611" fg:w="1"/><text x="48.2469%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.9969%" y="341" width="0.0786%" height="15" fill="rgb(231,119,28)" fg:x="611" fg:w="1"/><text x="48.2469%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="47.9969%" y="325" width="0.0786%" height="15" fill="rgb(252,178,7)" fg:x="611" fg:w="1"/><text x="48.2469%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="47.9969%" y="309" width="0.0786%" height="15" fill="rgb(251,91,4)" fg:x="611" fg:w="1"/><text x="48.2469%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="47.9969%" y="293" width="0.0786%" height="15" fill="rgb(233,122,19)" fg:x="611" fg:w="1"/><text x="48.2469%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="47.9969%" y="277" width="0.0786%" height="15" fill="rgb(231,208,46)" fg:x="611" fg:w="1"/><text x="48.2469%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="47.9969%" y="261" width="0.0786%" height="15" fill="rgb(243,15,41)" fg:x="611" fg:w="1"/><text x="48.2469%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="47.9969%" y="245" width="0.0786%" height="15" fill="rgb(210,32,43)" fg:x="611" fg:w="1"/><text x="48.2469%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="47.9969%" y="229" width="0.0786%" height="15" fill="rgb(222,177,15)" fg:x="611" fg:w="1"/><text x="48.2469%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="47.9969%" y="213" width="0.0786%" height="15" fill="rgb(244,121,34)" fg:x="611" fg:w="1"/><text x="48.2469%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="47.9969%" y="197" width="0.0786%" height="15" fill="rgb(234,138,4)" fg:x="611" fg:w="1"/><text x="48.2469%" y="207.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="47.9969%" y="405" width="0.1571%" height="15" fill="rgb(240,97,48)" fg:x="611" fg:w="2"/><text x="48.2469%" y="415.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="47.9969%" y="389" width="0.1571%" height="15" fill="rgb(237,65,54)" fg:x="611" fg:w="2"/><text x="48.2469%" y="399.50"></text></g><g><title>core::fmt::run (1 samples, 0.08%)</title><rect x="48.0754%" y="373" width="0.0786%" height="15" fill="rgb(214,25,24)" fg:x="612" fg:w="1"/><text x="48.3254%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="48.0754%" y="357" width="0.0786%" height="15" fill="rgb(213,5,3)" fg:x="612" fg:w="1"/><text x="48.3254%" y="367.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="48.0754%" y="341" width="0.0786%" height="15" fill="rgb(219,81,29)" fg:x="612" fg:w="1"/><text x="48.3254%" y="351.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.08%)</title><rect x="48.0754%" y="325" width="0.0786%" height="15" fill="rgb(220,43,48)" fg:x="612" fg:w="1"/><text x="48.3254%" y="335.50"></text></g><g><title>core::str::count::count_chars (1 samples, 0.08%)</title><rect x="48.0754%" y="309" width="0.0786%" height="15" fill="rgb(239,157,2)" fg:x="612" fg:w="1"/><text x="48.3254%" y="319.50"></text></g><g><title>core::str::count::char_count_general_case (1 samples, 0.08%)</title><rect x="48.0754%" y="293" width="0.0786%" height="15" fill="rgb(213,104,43)" fg:x="612" fg:w="1"/><text x="48.3254%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.08%)</title><rect x="48.0754%" y="277" width="0.0786%" height="15" fill="rgb(237,84,9)" fg:x="612" fg:w="1"/><text x="48.3254%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="48.0754%" y="261" width="0.0786%" height="15" fill="rgb(252,6,33)" fg:x="612" fg:w="1"/><text x="48.3254%" y="271.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="48.0754%" y="245" width="0.0786%" height="15" fill="rgb(251,172,22)" fg:x="612" fg:w="1"/><text x="48.3254%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="48.0754%" y="229" width="0.0786%" height="15" fill="rgb(244,91,53)" fg:x="612" fg:w="1"/><text x="48.3254%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="48.0754%" y="213" width="0.0786%" height="15" fill="rgb(219,29,30)" fg:x="612" fg:w="1"/><text x="48.3254%" y="223.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="48.0754%" y="197" width="0.0786%" height="15" fill="rgb(213,3,15)" fg:x="612" fg:w="1"/><text x="48.3254%" y="207.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="47.9969%" y="517" width="0.2357%" height="15" fill="rgb(208,25,28)" fg:x="611" fg:w="3"/><text x="48.2469%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="47.9969%" y="501" width="0.2357%" height="15" fill="rgb(252,144,25)" fg:x="611" fg:w="3"/><text x="48.2469%" y="511.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="47.9969%" y="485" width="0.2357%" height="15" fill="rgb(226,220,25)" fg:x="611" fg:w="3"/><text x="48.2469%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="47.9969%" y="469" width="0.2357%" height="15" fill="rgb(212,131,28)" fg:x="611" fg:w="3"/><text x="48.2469%" y="479.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="47.9969%" y="453" width="0.2357%" height="15" fill="rgb(219,143,52)" fg:x="611" fg:w="3"/><text x="48.2469%" y="463.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (3 samples, 0.24%)</title><rect x="47.9969%" y="437" width="0.2357%" height="15" fill="rgb(215,56,7)" fg:x="611" fg:w="3"/><text x="48.2469%" y="447.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (3 samples, 0.24%)</title><rect x="47.9969%" y="421" width="0.2357%" height="15" fill="rgb(239,59,51)" fg:x="611" fg:w="3"/><text x="48.2469%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="48.1540%" y="405" width="0.0786%" height="15" fill="rgb(209,215,4)" fg:x="613" fg:w="1"/><text x="48.4040%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="48.1540%" y="389" width="0.0786%" height="15" fill="rgb(221,118,39)" fg:x="613" fg:w="1"/><text x="48.4040%" y="399.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="48.2325%" y="453" width="0.0786%" height="15" fill="rgb(236,6,44)" fg:x="614" fg:w="1"/><text x="48.4825%" y="463.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="48.2325%" y="485" width="0.1571%" height="15" fill="rgb(216,122,9)" fg:x="614" fg:w="2"/><text x="48.4825%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="48.2325%" y="469" width="0.1571%" height="15" fill="rgb(244,134,42)" fg:x="614" fg:w="2"/><text x="48.4825%" y="479.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="48.3111%" y="453" width="0.0786%" height="15" fill="rgb(209,189,35)" fg:x="615" fg:w="1"/><text x="48.5611%" y="463.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="48.3111%" y="437" width="0.0786%" height="15" fill="rgb(250,47,36)" fg:x="615" fg:w="1"/><text x="48.5611%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="48.3896%" y="437" width="0.1571%" height="15" fill="rgb(252,112,4)" fg:x="616" fg:w="2"/><text x="48.6396%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="48.3896%" y="421" width="0.1571%" height="15" fill="rgb(221,79,51)" fg:x="616" fg:w="2"/><text x="48.6396%" y="431.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="48.3896%" y="405" width="0.1571%" height="15" fill="rgb(232,65,53)" fg:x="616" fg:w="2"/><text x="48.6396%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="48.3896%" y="389" width="0.1571%" height="15" fill="rgb(211,37,7)" fg:x="616" fg:w="2"/><text x="48.6396%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="48.3896%" y="373" width="0.1571%" height="15" fill="rgb(234,221,18)" fg:x="616" fg:w="2"/><text x="48.6396%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="48.3896%" y="357" width="0.1571%" height="15" fill="rgb(220,158,26)" fg:x="616" fg:w="2"/><text x="48.6396%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="48.4682%" y="341" width="0.0786%" height="15" fill="rgb(220,70,6)" fg:x="617" fg:w="1"/><text x="48.7182%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.4682%" y="325" width="0.0786%" height="15" fill="rgb(250,39,48)" fg:x="617" fg:w="1"/><text x="48.7182%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (9 samples, 0.71%)</title><rect x="48.6253%" y="405" width="0.7070%" height="15" fill="rgb(206,40,27)" fg:x="619" fg:w="9"/><text x="48.8753%" y="415.50"></text></g><g><title>std::io::Write::write_all (9 samples, 0.71%)</title><rect x="48.6253%" y="389" width="0.7070%" height="15" fill="rgb(247,80,36)" fg:x="619" fg:w="9"/><text x="48.8753%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.47%)</title><rect x="48.8610%" y="373" width="0.4713%" height="15" fill="rgb(222,9,20)" fg:x="622" fg:w="6"/><text x="49.1110%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.47%)</title><rect x="48.8610%" y="357" width="0.4713%" height="15" fill="rgb(217,26,45)" fg:x="622" fg:w="6"/><text x="49.1110%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="49.1752%" y="341" width="0.1571%" height="15" fill="rgb(221,67,14)" fg:x="626" fg:w="2"/><text x="49.4252%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="49.1752%" y="325" width="0.1571%" height="15" fill="rgb(248,100,24)" fg:x="626" fg:w="2"/><text x="49.4252%" y="335.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="49.1752%" y="309" width="0.1571%" height="15" fill="rgb(230,187,16)" fg:x="626" fg:w="2"/><text x="49.4252%" y="319.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (11 samples, 0.86%)</title><rect x="48.5467%" y="421" width="0.8641%" height="15" fill="rgb(205,108,13)" fg:x="618" fg:w="11"/><text x="48.7967%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="49.3323%" y="405" width="0.0786%" height="15" fill="rgb(235,71,51)" fg:x="628" fg:w="1"/><text x="49.5823%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="49.3323%" y="389" width="0.0786%" height="15" fill="rgb(251,172,48)" fg:x="628" fg:w="1"/><text x="49.5823%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.3323%" y="373" width="0.0786%" height="15" fill="rgb(240,96,49)" fg:x="628" fg:w="1"/><text x="49.5823%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="49.4108%" y="405" width="0.1571%" height="15" fill="rgb(235,46,36)" fg:x="629" fg:w="2"/><text x="49.6608%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="49.4108%" y="389" width="0.1571%" height="15" fill="rgb(244,3,49)" fg:x="629" fg:w="2"/><text x="49.6608%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (10 samples, 0.79%)</title><rect x="49.5679%" y="405" width="0.7855%" height="15" fill="rgb(206,78,54)" fg:x="631" fg:w="10"/><text x="49.8179%" y="415.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.55%)</title><rect x="49.8036%" y="389" width="0.5499%" height="15" fill="rgb(208,85,42)" fg:x="634" fg:w="7"/><text x="50.0536%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.39%)</title><rect x="49.9607%" y="373" width="0.3928%" height="15" fill="rgb(219,196,21)" fg:x="636" fg:w="5"/><text x="50.2107%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.39%)</title><rect x="49.9607%" y="357" width="0.3928%" height="15" fill="rgb(238,19,9)" fg:x="636" fg:w="5"/><text x="50.2107%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="50.3535%" y="357" width="0.1571%" height="15" fill="rgb(206,86,13)" fg:x="641" fg:w="2"/><text x="50.6035%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="50.5106%" y="357" width="0.2357%" height="15" fill="rgb(214,123,40)" fg:x="643" fg:w="3"/><text x="50.7606%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="50.6677%" y="341" width="0.0786%" height="15" fill="rgb(243,53,5)" fg:x="645" fg:w="1"/><text x="50.9177%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="50.7463%" y="357" width="0.0786%" height="15" fill="rgb(254,186,31)" fg:x="646" fg:w="1"/><text x="50.9963%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="50.7463%" y="341" width="0.0786%" height="15" fill="rgb(221,216,25)" fg:x="646" fg:w="1"/><text x="50.9963%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.63%)</title><rect x="50.3535%" y="373" width="0.6284%" height="15" fill="rgb(248,107,42)" fg:x="641" fg:w="8"/><text x="50.6035%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="50.8248%" y="357" width="0.1571%" height="15" fill="rgb(221,85,43)" fg:x="647" fg:w="2"/><text x="51.0748%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="50.8248%" y="341" width="0.1571%" height="15" fill="rgb(225,34,24)" fg:x="647" fg:w="2"/><text x="51.0748%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="50.9034%" y="325" width="0.0786%" height="15" fill="rgb(211,119,1)" fg:x="648" fg:w="1"/><text x="51.1534%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (9 samples, 0.71%)</title><rect x="50.3535%" y="389" width="0.7070%" height="15" fill="rgb(254,216,46)" fg:x="641" fg:w="9"/><text x="50.6035%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="50.9819%" y="373" width="0.0786%" height="15" fill="rgb(238,11,38)" fg:x="649" fg:w="1"/><text x="51.2319%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="50.9819%" y="357" width="0.0786%" height="15" fill="rgb(233,50,15)" fg:x="649" fg:w="1"/><text x="51.2319%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="50.9819%" y="341" width="0.0786%" height="15" fill="rgb(217,181,29)" fg:x="649" fg:w="1"/><text x="51.2319%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="51.0605%" y="389" width="0.3142%" height="15" fill="rgb(214,56,3)" fg:x="650" fg:w="4"/><text x="51.3105%" y="399.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.31%)</title><rect x="51.0605%" y="373" width="0.3142%" height="15" fill="rgb(230,69,45)" fg:x="650" fg:w="4"/><text x="51.3105%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="51.2176%" y="357" width="0.1571%" height="15" fill="rgb(224,201,50)" fg:x="652" fg:w="2"/><text x="51.4676%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="51.2176%" y="341" width="0.1571%" height="15" fill="rgb(217,228,18)" fg:x="652" fg:w="2"/><text x="51.4676%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="51.5318%" y="325" width="0.1571%" height="15" fill="rgb(239,33,44)" fg:x="656" fg:w="2"/><text x="51.7818%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="51.6104%" y="309" width="0.0786%" height="15" fill="rgb(248,210,23)" fg:x="657" fg:w="1"/><text x="51.8604%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="51.6104%" y="293" width="0.0786%" height="15" fill="rgb(253,135,8)" fg:x="657" fg:w="1"/><text x="51.8604%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="51.6104%" y="277" width="0.0786%" height="15" fill="rgb(217,98,21)" fg:x="657" fg:w="1"/><text x="51.8604%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="51.4533%" y="373" width="0.3142%" height="15" fill="rgb(253,130,21)" fg:x="655" fg:w="4"/><text x="51.7033%" y="383.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="51.5318%" y="357" width="0.2357%" height="15" fill="rgb(207,81,54)" fg:x="656" fg:w="3"/><text x="51.7818%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="51.5318%" y="341" width="0.2357%" height="15" fill="rgb(232,48,33)" fg:x="656" fg:w="3"/><text x="51.7818%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="51.6889%" y="325" width="0.0786%" height="15" fill="rgb(211,9,35)" fg:x="658" fg:w="1"/><text x="51.9389%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.47%)</title><rect x="51.8460%" y="357" width="0.4713%" height="15" fill="rgb(205,152,21)" fg:x="660" fg:w="6"/><text x="52.0960%" y="367.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.47%)</title><rect x="51.8460%" y="341" width="0.4713%" height="15" fill="rgb(249,21,27)" fg:x="660" fg:w="6"/><text x="52.0960%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.47%)</title><rect x="51.8460%" y="325" width="0.4713%" height="15" fill="rgb(252,29,24)" fg:x="660" fg:w="6"/><text x="52.0960%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="52.0817%" y="309" width="0.2357%" height="15" fill="rgb(230,130,50)" fg:x="663" fg:w="3"/><text x="52.3317%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="52.2388%" y="293" width="0.0786%" height="15" fill="rgb(239,144,14)" fg:x="665" fg:w="1"/><text x="52.4888%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="52.2388%" y="277" width="0.0786%" height="15" fill="rgb(227,111,50)" fg:x="665" fg:w="1"/><text x="52.4888%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="52.2388%" y="261" width="0.0786%" height="15" fill="rgb(254,84,20)" fg:x="665" fg:w="1"/><text x="52.4888%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.26%)</title><rect x="51.3747%" y="389" width="1.2569%" height="15" fill="rgb(232,90,48)" fg:x="654" fg:w="16"/><text x="51.6247%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.86%)</title><rect x="51.7675%" y="373" width="0.8641%" height="15" fill="rgb(253,63,47)" fg:x="659" fg:w="11"/><text x="52.0175%" y="383.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.31%)</title><rect x="52.3174%" y="357" width="0.3142%" height="15" fill="rgb(251,146,35)" fg:x="666" fg:w="4"/><text x="52.5674%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="52.5530%" y="341" width="0.0786%" height="15" fill="rgb(229,192,35)" fg:x="669" fg:w="1"/><text x="52.8030%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (31 samples, 2.44%)</title><rect x="50.3535%" y="405" width="2.4352%" height="15" fill="rgb(225,68,9)" fg:x="641" fg:w="31"/><text x="50.6035%" y="415.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="52.6316%" y="389" width="0.1571%" height="15" fill="rgb(214,97,34)" fg:x="670" fg:w="2"/><text x="52.8816%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="52.6316%" y="373" width="0.1571%" height="15" fill="rgb(253,31,26)" fg:x="670" fg:w="2"/><text x="52.8816%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="52.7101%" y="357" width="0.0786%" height="15" fill="rgb(225,151,47)" fg:x="671" fg:w="1"/><text x="52.9601%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (50 samples, 3.93%)</title><rect x="49.4108%" y="421" width="3.9277%" height="15" fill="rgb(206,185,9)" fg:x="629" fg:w="50"/><text x="49.6608%" y="431.50">serd..</text></g><g><title>std::io::Write::write_all (7 samples, 0.55%)</title><rect x="52.7887%" y="405" width="0.5499%" height="15" fill="rgb(249,65,17)" fg:x="672" fg:w="7"/><text x="53.0387%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.39%)</title><rect x="52.9458%" y="389" width="0.3928%" height="15" fill="rgb(220,110,10)" fg:x="674" fg:w="5"/><text x="53.1958%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.31%)</title><rect x="53.0244%" y="373" width="0.3142%" height="15" fill="rgb(222,198,49)" fg:x="675" fg:w="4"/><text x="53.2744%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="53.1815%" y="357" width="0.1571%" height="15" fill="rgb(239,81,13)" fg:x="677" fg:w="2"/><text x="53.4315%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="53.1815%" y="341" width="0.1571%" height="15" fill="rgb(216,128,11)" fg:x="677" fg:w="2"/><text x="53.4315%" y="351.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="53.1815%" y="325" width="0.1571%" height="15" fill="rgb(247,156,8)" fg:x="677" fg:w="2"/><text x="53.4315%" y="335.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (63 samples, 4.95%)</title><rect x="48.5467%" y="437" width="4.9489%" height="15" fill="rgb(219,173,1)" fg:x="618" fg:w="63"/><text x="48.7967%" y="447.50">&lt;serde..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="53.3386%" y="421" width="0.1571%" height="15" fill="rgb(227,42,24)" fg:x="679" fg:w="2"/><text x="53.5886%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="53.4171%" y="405" width="0.0786%" height="15" fill="rgb(253,219,50)" fg:x="680" fg:w="1"/><text x="53.6671%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.4171%" y="389" width="0.0786%" height="15" fill="rgb(215,191,54)" fg:x="680" fg:w="1"/><text x="53.6671%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="53.4171%" y="373" width="0.0786%" height="15" fill="rgb(238,83,12)" fg:x="680" fg:w="1"/><text x="53.6671%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="53.4171%" y="357" width="0.0786%" height="15" fill="rgb(205,124,9)" fg:x="680" fg:w="1"/><text x="53.6671%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.4171%" y="341" width="0.0786%" height="15" fill="rgb(253,174,7)" fg:x="680" fg:w="1"/><text x="53.6671%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="53.4957%" y="405" width="0.1571%" height="15" fill="rgb(206,134,49)" fg:x="681" fg:w="2"/><text x="53.7457%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.5742%" y="389" width="0.0786%" height="15" fill="rgb(221,89,20)" fg:x="682" fg:w="1"/><text x="53.8242%" y="399.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="53.8885%" y="389" width="0.2357%" height="15" fill="rgb(240,205,13)" fg:x="686" fg:w="3"/><text x="54.1385%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="54.1241%" y="389" width="0.1571%" height="15" fill="rgb(237,174,32)" fg:x="689" fg:w="2"/><text x="54.3741%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.2027%" y="373" width="0.0786%" height="15" fill="rgb(226,12,15)" fg:x="690" fg:w="1"/><text x="54.4527%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.2812%" y="373" width="0.0786%" height="15" fill="rgb(245,160,52)" fg:x="691" fg:w="1"/><text x="54.5312%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.2812%" y="357" width="0.0786%" height="15" fill="rgb(253,80,21)" fg:x="691" fg:w="1"/><text x="54.5312%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.4383%" y="357" width="0.0786%" height="15" fill="rgb(231,225,22)" fg:x="693" fg:w="1"/><text x="54.6883%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="54.5169%" y="357" width="0.1571%" height="15" fill="rgb(253,185,12)" fg:x="694" fg:w="2"/><text x="54.7669%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="54.5169%" y="341" width="0.1571%" height="15" fill="rgb(234,197,21)" fg:x="694" fg:w="2"/><text x="54.7669%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.5954%" y="325" width="0.0786%" height="15" fill="rgb(210,47,30)" fg:x="695" fg:w="1"/><text x="54.8454%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.5954%" y="309" width="0.0786%" height="15" fill="rgb(246,139,27)" fg:x="695" fg:w="1"/><text x="54.8454%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 1.41%)</title><rect x="53.4957%" y="437" width="1.4140%" height="15" fill="rgb(226,130,16)" fg:x="681" fg:w="18"/><text x="53.7457%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (18 samples, 1.41%)</title><rect x="53.4957%" y="421" width="1.4140%" height="15" fill="rgb(237,208,20)" fg:x="681" fg:w="18"/><text x="53.7457%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.26%)</title><rect x="53.6528%" y="405" width="1.2569%" height="15" fill="rgb(245,186,28)" fg:x="683" fg:w="16"/><text x="53.9028%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.63%)</title><rect x="54.2812%" y="389" width="0.6284%" height="15" fill="rgb(238,105,39)" fg:x="691" fg:w="8"/><text x="54.5312%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.55%)</title><rect x="54.3598%" y="373" width="0.5499%" height="15" fill="rgb(253,228,11)" fg:x="692" fg:w="7"/><text x="54.6098%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="54.6740%" y="357" width="0.2357%" height="15" fill="rgb(224,136,38)" fg:x="696" fg:w="3"/><text x="54.9240%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="54.7526%" y="341" width="0.1571%" height="15" fill="rgb(211,3,25)" fg:x="697" fg:w="2"/><text x="55.0026%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.9882%" y="405" width="0.0786%" height="15" fill="rgb(238,66,34)" fg:x="700" fg:w="1"/><text x="55.2382%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.0668%" y="373" width="0.0786%" height="15" fill="rgb(223,188,11)" fg:x="701" fg:w="1"/><text x="55.3168%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.3024%" y="357" width="0.0786%" height="15" fill="rgb(221,10,35)" fg:x="704" fg:w="1"/><text x="55.5524%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.31%)</title><rect x="55.3810%" y="357" width="0.3142%" height="15" fill="rgb(223,18,44)" fg:x="705" fg:w="4"/><text x="55.6310%" y="367.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="55.4595%" y="341" width="0.2357%" height="15" fill="rgb(220,97,41)" fg:x="706" fg:w="3"/><text x="55.7095%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.6952%" y="341" width="0.0786%" height="15" fill="rgb(206,95,45)" fg:x="709" fg:w="1"/><text x="55.9452%" y="351.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="55.7738%" y="325" width="0.1571%" height="15" fill="rgb(209,96,13)" fg:x="710" fg:w="2"/><text x="56.0238%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.9309%" y="325" width="0.0786%" height="15" fill="rgb(237,39,34)" fg:x="712" fg:w="1"/><text x="56.1809%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.9309%" y="309" width="0.0786%" height="15" fill="rgb(213,49,47)" fg:x="712" fg:w="1"/><text x="56.1809%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="56.0094%" y="325" width="0.1571%" height="15" fill="rgb(205,107,27)" fg:x="713" fg:w="2"/><text x="56.2594%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="56.0094%" y="309" width="0.1571%" height="15" fill="rgb(212,142,9)" fg:x="713" fg:w="2"/><text x="56.2594%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="56.0094%" y="293" width="0.1571%" height="15" fill="rgb(226,182,0)" fg:x="713" fg:w="2"/><text x="56.2594%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.0880%" y="277" width="0.0786%" height="15" fill="rgb(231,3,53)" fg:x="714" fg:w="1"/><text x="56.3380%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.1665%" y="309" width="0.0786%" height="15" fill="rgb(246,111,28)" fg:x="715" fg:w="1"/><text x="56.4165%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.34%)</title><rect x="55.0668%" y="405" width="1.3354%" height="15" fill="rgb(254,183,7)" fg:x="701" fg:w="17"/><text x="55.3168%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (17 samples, 1.34%)</title><rect x="55.0668%" y="389" width="1.3354%" height="15" fill="rgb(247,177,28)" fg:x="701" fg:w="17"/><text x="55.3168%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.26%)</title><rect x="55.1453%" y="373" width="1.2569%" height="15" fill="rgb(244,43,1)" fg:x="702" fg:w="16"/><text x="55.3953%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.71%)</title><rect x="55.6952%" y="357" width="0.7070%" height="15" fill="rgb(207,2,35)" fg:x="709" fg:w="9"/><text x="55.9452%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.63%)</title><rect x="55.7738%" y="341" width="0.6284%" height="15" fill="rgb(213,83,22)" fg:x="710" fg:w="8"/><text x="56.0238%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="56.1665%" y="325" width="0.2357%" height="15" fill="rgb(246,212,13)" fg:x="715" fg:w="3"/><text x="56.4165%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="56.2451%" y="309" width="0.1571%" height="15" fill="rgb(213,127,46)" fg:x="716" fg:w="2"/><text x="56.4951%" y="319.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="56.7164%" y="341" width="0.0786%" height="15" fill="rgb(219,215,39)" fg:x="722" fg:w="1"/><text x="56.9664%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="56.7164%" y="325" width="0.0786%" height="15" fill="rgb(227,99,17)" fg:x="722" fg:w="1"/><text x="56.9664%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="56.7164%" y="309" width="0.0786%" height="15" fill="rgb(208,155,18)" fg:x="722" fg:w="1"/><text x="56.9664%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.47%)</title><rect x="56.5593%" y="357" width="0.4713%" height="15" fill="rgb(223,204,38)" fg:x="720" fg:w="6"/><text x="56.8093%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="56.7950%" y="341" width="0.2357%" height="15" fill="rgb(212,114,21)" fg:x="723" fg:w="3"/><text x="57.0450%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="56.9521%" y="325" width="0.0786%" height="15" fill="rgb(250,74,13)" fg:x="725" fg:w="1"/><text x="57.2021%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.71%)</title><rect x="56.4022%" y="373" width="0.7070%" height="15" fill="rgb(234,7,1)" fg:x="718" fg:w="9"/><text x="56.6522%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="57.0306%" y="357" width="0.0786%" height="15" fill="rgb(207,138,31)" fg:x="726" fg:w="1"/><text x="57.2806%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (10 samples, 0.79%)</title><rect x="56.4022%" y="389" width="0.7855%" height="15" fill="rgb(215,186,42)" fg:x="718" fg:w="10"/><text x="56.6522%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="57.1092%" y="373" width="0.0786%" height="15" fill="rgb(229,205,49)" fg:x="727" fg:w="1"/><text x="57.3592%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.1877%" y="389" width="0.0786%" height="15" fill="rgb(216,156,32)" fg:x="728" fg:w="1"/><text x="57.4377%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="57.2663%" y="389" width="0.0786%" height="15" fill="rgb(238,7,21)" fg:x="729" fg:w="1"/><text x="57.5163%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="57.2663%" y="373" width="0.0786%" height="15" fill="rgb(249,190,22)" fg:x="729" fg:w="1"/><text x="57.5163%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.2663%" y="357" width="0.0786%" height="15" fill="rgb(253,51,31)" fg:x="729" fg:w="1"/><text x="57.5163%" y="367.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (31 samples, 2.44%)</title><rect x="54.9882%" y="421" width="2.4352%" height="15" fill="rgb(237,90,54)" fg:x="700" fg:w="31"/><text x="55.2382%" y="431.50">&lt;k..</text></g><g><title>treediff::diff::diff (13 samples, 1.02%)</title><rect x="56.4022%" y="405" width="1.0212%" height="15" fill="rgb(250,214,33)" fg:x="718" fg:w="13"/><text x="56.6522%" y="415.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="57.3449%" y="389" width="0.0786%" height="15" fill="rgb(237,10,49)" fg:x="730" fg:w="1"/><text x="57.5949%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.3449%" y="373" width="0.0786%" height="15" fill="rgb(241,56,36)" fg:x="730" fg:w="1"/><text x="57.5949%" y="383.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="57.5020%" y="389" width="0.2357%" height="15" fill="rgb(227,164,12)" fg:x="732" fg:w="3"/><text x="57.7520%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="57.7376%" y="389" width="0.0786%" height="15" fill="rgb(249,149,35)" fg:x="735" fg:w="1"/><text x="57.9876%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="57.7376%" y="373" width="0.0786%" height="15" fill="rgb(238,227,50)" fg:x="735" fg:w="1"/><text x="57.9876%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (11 samples, 0.86%)</title><rect x="57.8162%" y="389" width="0.8641%" height="15" fill="rgb(235,102,45)" fg:x="736" fg:w="11"/><text x="58.0662%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.5232%" y="373" width="0.1571%" height="15" fill="rgb(211,10,38)" fg:x="745" fg:w="2"/><text x="58.7732%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="58.6017%" y="357" width="0.0786%" height="15" fill="rgb(219,77,48)" fg:x="746" fg:w="1"/><text x="58.8517%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="58.6803%" y="373" width="0.0786%" height="15" fill="rgb(246,6,15)" fg:x="747" fg:w="1"/><text x="58.9303%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.8374%" y="357" width="0.0786%" height="15" fill="rgb(207,220,2)" fg:x="749" fg:w="1"/><text x="59.0874%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (4 samples, 0.31%)</title><rect x="58.6803%" y="389" width="0.3142%" height="15" fill="rgb(242,48,14)" fg:x="747" fg:w="4"/><text x="58.9303%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="58.7588%" y="373" width="0.2357%" height="15" fill="rgb(218,19,27)" fg:x="748" fg:w="3"/><text x="59.0088%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="58.9159%" y="357" width="0.0786%" height="15" fill="rgb(228,0,35)" fg:x="750" fg:w="1"/><text x="59.1659%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="58.9159%" y="341" width="0.0786%" height="15" fill="rgb(244,142,54)" fg:x="750" fg:w="1"/><text x="59.1659%" y="351.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (3 samples, 0.24%)</title><rect x="58.9945%" y="389" width="0.2357%" height="15" fill="rgb(243,217,40)" fg:x="751" fg:w="3"/><text x="59.2445%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="58.9945%" y="373" width="0.2357%" height="15" fill="rgb(207,114,16)" fg:x="751" fg:w="3"/><text x="59.2445%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="59.0731%" y="357" width="0.1571%" height="15" fill="rgb(224,33,25)" fg:x="752" fg:w="2"/><text x="59.3231%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="59.0731%" y="341" width="0.1571%" height="15" fill="rgb(230,93,54)" fg:x="752" fg:w="2"/><text x="59.3231%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.1516%" y="325" width="0.0786%" height="15" fill="rgb(224,56,24)" fg:x="753" fg:w="1"/><text x="59.4016%" y="335.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="59.2302%" y="389" width="0.1571%" height="15" fill="rgb(235,189,50)" fg:x="754" fg:w="2"/><text x="59.4802%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="59.2302%" y="373" width="0.1571%" height="15" fill="rgb(242,173,8)" fg:x="754" fg:w="2"/><text x="59.4802%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="59.2302%" y="357" width="0.1571%" height="15" fill="rgb(209,206,10)" fg:x="754" fg:w="2"/><text x="59.4802%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="59.4658%" y="357" width="0.0786%" height="15" fill="rgb(213,182,44)" fg:x="757" fg:w="1"/><text x="59.7158%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (8 samples, 0.63%)</title><rect x="59.5444%" y="341" width="0.6284%" height="15" fill="rgb(243,51,15)" fg:x="758" fg:w="8"/><text x="59.7944%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (6 samples, 0.47%)</title><rect x="59.7015%" y="325" width="0.4713%" height="15" fill="rgb(241,13,14)" fg:x="760" fg:w="6"/><text x="59.9515%" y="335.50"></text></g><g><title>__libc_malloc (6 samples, 0.47%)</title><rect x="59.7015%" y="309" width="0.4713%" height="15" fill="rgb(239,147,24)" fg:x="760" fg:w="6"/><text x="59.9515%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.2514%" y="261" width="0.0786%" height="15" fill="rgb(223,129,16)" fg:x="767" fg:w="1"/><text x="60.5014%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.2514%" y="245" width="0.0786%" height="15" fill="rgb(209,169,13)" fg:x="767" fg:w="1"/><text x="60.5014%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.2514%" y="229" width="0.0786%" height="15" fill="rgb(235,159,41)" fg:x="767" fg:w="1"/><text x="60.5014%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="60.3299%" y="245" width="0.0786%" height="15" fill="rgb(223,219,48)" fg:x="768" fg:w="1"/><text x="60.5799%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.3299%" y="229" width="0.0786%" height="15" fill="rgb(236,80,13)" fg:x="768" fg:w="1"/><text x="60.5799%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.3299%" y="213" width="0.0786%" height="15" fill="rgb(213,5,6)" fg:x="768" fg:w="1"/><text x="60.5799%" y="223.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.31%)</title><rect x="60.1728%" y="341" width="0.3142%" height="15" fill="rgb(205,59,21)" fg:x="766" fg:w="4"/><text x="60.4228%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.31%)</title><rect x="60.1728%" y="325" width="0.3142%" height="15" fill="rgb(247,137,35)" fg:x="766" fg:w="4"/><text x="60.4228%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="60.2514%" y="309" width="0.2357%" height="15" fill="rgb(242,208,28)" fg:x="767" fg:w="3"/><text x="60.5014%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="60.2514%" y="293" width="0.2357%" height="15" fill="rgb(245,62,25)" fg:x="767" fg:w="3"/><text x="60.5014%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="60.2514%" y="277" width="0.2357%" height="15" fill="rgb(233,99,54)" fg:x="767" fg:w="3"/><text x="60.5014%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="60.3299%" y="261" width="0.1571%" height="15" fill="rgb(213,10,37)" fg:x="768" fg:w="2"/><text x="60.5799%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.4085%" y="245" width="0.0786%" height="15" fill="rgb(235,143,30)" fg:x="769" fg:w="1"/><text x="60.6585%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (2 samples, 0.16%)</title><rect x="60.8798%" y="325" width="0.1571%" height="15" fill="rgb(250,146,33)" fg:x="775" fg:w="2"/><text x="61.1298%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="61.1940%" y="309" width="0.3142%" height="15" fill="rgb(226,198,42)" fg:x="779" fg:w="4"/><text x="61.4440%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="61.2726%" y="293" width="0.2357%" height="15" fill="rgb(222,55,6)" fg:x="780" fg:w="3"/><text x="61.5226%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="61.3511%" y="277" width="0.1571%" height="15" fill="rgb(213,224,31)" fg:x="781" fg:w="2"/><text x="61.6011%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="61.8225%" y="293" width="0.0786%" height="15" fill="rgb(226,103,35)" fg:x="787" fg:w="1"/><text x="62.0725%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (4 samples, 0.31%)</title><rect x="61.9010%" y="293" width="0.3142%" height="15" fill="rgb(205,66,45)" fg:x="788" fg:w="4"/><text x="62.1510%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="62.4509%" y="245" width="0.1571%" height="15" fill="rgb(226,51,42)" fg:x="795" fg:w="2"/><text x="62.7009%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.47%)</title><rect x="62.2152%" y="293" width="0.4713%" height="15" fill="rgb(206,69,1)" fg:x="792" fg:w="6"/><text x="62.4652%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="62.3723%" y="277" width="0.3142%" height="15" fill="rgb(213,228,47)" fg:x="794" fg:w="4"/><text x="62.6223%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="62.3723%" y="261" width="0.3142%" height="15" fill="rgb(224,204,18)" fg:x="794" fg:w="4"/><text x="62.6223%" y="271.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="62.6080%" y="245" width="0.0786%" height="15" fill="rgb(253,187,47)" fg:x="797" fg:w="1"/><text x="62.8580%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (43 samples, 3.38%)</title><rect x="59.5444%" y="357" width="3.3778%" height="15" fill="rgb(232,61,2)" fg:x="758" fg:w="43"/><text x="59.7944%" y="367.50">&lt;se..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (31 samples, 2.44%)</title><rect x="60.4870%" y="341" width="2.4352%" height="15" fill="rgb(213,132,35)" fg:x="770" fg:w="31"/><text x="60.7370%" y="351.50">se..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (24 samples, 1.89%)</title><rect x="61.0369%" y="325" width="1.8853%" height="15" fill="rgb(247,33,21)" fg:x="777" fg:w="24"/><text x="61.2869%" y="335.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (18 samples, 1.41%)</title><rect x="61.5082%" y="309" width="1.4140%" height="15" fill="rgb(233,71,46)" fg:x="783" fg:w="18"/><text x="61.7582%" y="319.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="62.6866%" y="293" width="0.2357%" height="15" fill="rgb(222,173,43)" fg:x="798" fg:w="3"/><text x="62.9366%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (46 samples, 3.61%)</title><rect x="59.3873%" y="373" width="3.6135%" height="15" fill="rgb(249,218,47)" fg:x="756" fg:w="46"/><text x="59.6373%" y="383.50">&lt;ser..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="62.9222%" y="357" width="0.0786%" height="15" fill="rgb(254,185,48)" fg:x="801" fg:w="1"/><text x="63.1722%" y="367.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="62.9222%" y="341" width="0.0786%" height="15" fill="rgb(252,165,50)" fg:x="801" fg:w="1"/><text x="63.1722%" y="351.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="62.9222%" y="325" width="0.0786%" height="15" fill="rgb(206,219,6)" fg:x="801" fg:w="1"/><text x="63.1722%" y="335.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (73 samples, 5.73%)</title><rect x="57.4234%" y="421" width="5.7345%" height="15" fill="rgb(212,212,45)" fg:x="731" fg:w="73"/><text x="57.6734%" y="431.50">kernel:..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (73 samples, 5.73%)</title><rect x="57.4234%" y="405" width="5.7345%" height="15" fill="rgb(221,31,9)" fg:x="731" fg:w="73"/><text x="57.6734%" y="415.50">&lt;serde_..</text></g><g><title>serde::ser::Serializer::collect_map (48 samples, 3.77%)</title><rect x="59.3873%" y="389" width="3.7706%" height="15" fill="rgb(234,198,39)" fg:x="756" fg:w="48"/><text x="59.6373%" y="399.50">serd..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="63.0008%" y="373" width="0.1571%" height="15" fill="rgb(252,145,46)" fg:x="802" fg:w="2"/><text x="63.2508%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.6292%" y="245" width="0.0786%" height="15" fill="rgb(237,149,0)" fg:x="810" fg:w="1"/><text x="63.8792%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.6292%" y="229" width="0.0786%" height="15" fill="rgb(229,65,5)" fg:x="810" fg:w="1"/><text x="63.8792%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.6292%" y="213" width="0.0786%" height="15" fill="rgb(235,60,36)" fg:x="810" fg:w="1"/><text x="63.8792%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.6292%" y="197" width="0.0786%" height="15" fill="rgb(222,47,18)" fg:x="810" fg:w="1"/><text x="63.8792%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.6292%" y="181" width="0.0786%" height="15" fill="rgb(235,114,22)" fg:x="810" fg:w="1"/><text x="63.8792%" y="191.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="63.6292%" y="165" width="0.0786%" height="15" fill="rgb(209,167,11)" fg:x="810" fg:w="1"/><text x="63.8792%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.7078%" y="245" width="0.0786%" height="15" fill="rgb(251,73,18)" fg:x="811" fg:w="1"/><text x="63.9578%" y="255.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="63.7078%" y="229" width="0.0786%" height="15" fill="rgb(217,60,17)" fg:x="811" fg:w="1"/><text x="63.9578%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.39%)</title><rect x="63.5507%" y="277" width="0.3928%" height="15" fill="rgb(224,36,37)" fg:x="809" fg:w="5"/><text x="63.8007%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="63.6292%" y="261" width="0.3142%" height="15" fill="rgb(211,21,32)" fg:x="810" fg:w="4"/><text x="63.8792%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="63.7863%" y="245" width="0.1571%" height="15" fill="rgb(231,55,48)" fg:x="812" fg:w="2"/><text x="64.0363%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.8649%" y="229" width="0.0786%" height="15" fill="rgb(227,42,18)" fg:x="813" fg:w="1"/><text x="64.1149%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.9434%" y="229" width="0.0786%" height="15" fill="rgb(217,2,27)" fg:x="814" fg:w="1"/><text x="64.1934%" y="239.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="63.9434%" y="213" width="0.0786%" height="15" fill="rgb(251,138,23)" fg:x="814" fg:w="1"/><text x="64.1934%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.0220%" y="229" width="0.0786%" height="15" fill="rgb(226,184,11)" fg:x="815" fg:w="1"/><text x="64.2720%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.0220%" y="213" width="0.0786%" height="15" fill="rgb(242,142,12)" fg:x="815" fg:w="1"/><text x="64.2720%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="63.9434%" y="245" width="0.2357%" height="15" fill="rgb(234,187,18)" fg:x="814" fg:w="3"/><text x="64.1934%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.1005%" y="229" width="0.0786%" height="15" fill="rgb(237,44,42)" fg:x="816" fg:w="1"/><text x="64.3505%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.1005%" y="213" width="0.0786%" height="15" fill="rgb(211,90,23)" fg:x="816" fg:w="1"/><text x="64.3505%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.1005%" y="197" width="0.0786%" height="15" fill="rgb(207,81,18)" fg:x="816" fg:w="1"/><text x="64.3505%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.31%)</title><rect x="63.9434%" y="261" width="0.3142%" height="15" fill="rgb(222,107,28)" fg:x="814" fg:w="4"/><text x="64.1934%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.1791%" y="245" width="0.0786%" height="15" fill="rgb(237,83,52)" fg:x="817" fg:w="1"/><text x="64.4291%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.86%)</title><rect x="63.4721%" y="293" width="0.8641%" height="15" fill="rgb(208,67,11)" fg:x="808" fg:w="11"/><text x="63.7221%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="63.9434%" y="277" width="0.3928%" height="15" fill="rgb(249,157,49)" fg:x="814" fg:w="5"/><text x="64.1934%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.2577%" y="261" width="0.0786%" height="15" fill="rgb(243,200,1)" fg:x="818" fg:w="1"/><text x="64.5077%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="64.2577%" y="245" width="0.0786%" height="15" fill="rgb(225,162,37)" fg:x="818" fg:w="1"/><text x="64.5077%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="64.3362%" y="293" width="0.1571%" height="15" fill="rgb(242,92,13)" fg:x="819" fg:w="2"/><text x="64.5862%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="64.3362%" y="277" width="0.1571%" height="15" fill="rgb(220,43,36)" fg:x="819" fg:w="2"/><text x="64.5862%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 1.26%)</title><rect x="63.3150%" y="325" width="1.2569%" height="15" fill="rgb(213,165,48)" fg:x="806" fg:w="16"/><text x="63.5650%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 1.26%)</title><rect x="63.3150%" y="309" width="1.2569%" height="15" fill="rgb(227,200,9)" fg:x="806" fg:w="16"/><text x="63.5650%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.4933%" y="293" width="0.0786%" height="15" fill="rgb(221,222,28)" fg:x="821" fg:w="1"/><text x="64.7433%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.4933%" y="277" width="0.0786%" height="15" fill="rgb(223,142,26)" fg:x="821" fg:w="1"/><text x="64.7433%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="64.8075%" y="309" width="0.1571%" height="15" fill="rgb(243,46,9)" fg:x="825" fg:w="2"/><text x="65.0575%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (6 samples, 0.47%)</title><rect x="64.5719%" y="325" width="0.4713%" height="15" fill="rgb(250,56,11)" fg:x="822" fg:w="6"/><text x="64.8219%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.9647%" y="309" width="0.0786%" height="15" fill="rgb(229,113,5)" fg:x="827" fg:w="1"/><text x="65.2147%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (25 samples, 1.96%)</title><rect x="63.2364%" y="357" width="1.9639%" height="15" fill="rgb(244,108,28)" fg:x="805" fg:w="25"/><text x="63.4864%" y="367.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (25 samples, 1.96%)</title><rect x="63.2364%" y="341" width="1.9639%" height="15" fill="rgb(242,119,50)" fg:x="805" fg:w="25"/><text x="63.4864%" y="351.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="65.0432%" y="325" width="0.1571%" height="15" fill="rgb(224,164,23)" fg:x="828" fg:w="2"/><text x="65.2932%" y="335.50"></text></g><g><title>engine::session::state::State::close (219 samples, 17.20%)</title><rect x="48.2325%" y="517" width="17.2035%" height="15" fill="rgb(214,227,44)" fg:x="614" fg:w="219"/><text x="48.4825%" y="527.50">engine::session::state::Sta..</text></g><g><title>engine::session::state::State::flush_entities (219 samples, 17.20%)</title><rect x="48.2325%" y="501" width="17.2035%" height="15" fill="rgb(238,202,4)" fg:x="614" fg:w="219"/><text x="48.4825%" y="511.50">engine::session::state::Sta..</text></g><g><title>core::iter::adapters::try_process (217 samples, 17.05%)</title><rect x="48.3896%" y="485" width="17.0463%" height="15" fill="rgb(213,190,30)" fg:x="616" fg:w="217"/><text x="48.6396%" y="495.50">core::iter::adapters::try_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (217 samples, 17.05%)</title><rect x="48.3896%" y="469" width="17.0463%" height="15" fill="rgb(239,15,2)" fg:x="616" fg:w="217"/><text x="48.6396%" y="479.50">&lt;alloc::vec::Vec&lt;T&gt; as all..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (217 samples, 17.05%)</title><rect x="48.3896%" y="453" width="17.0463%" height="15" fill="rgb(249,229,4)" fg:x="616" fg:w="217"/><text x="48.6396%" y="463.50">engine::session::state::Sa..</text></g><g><title>kernel::model::any_entity_changes (134 samples, 10.53%)</title><rect x="54.9097%" y="437" width="10.5263%" height="15" fill="rgb(239,75,44)" fg:x="699" fg:w="134"/><text x="55.1597%" y="447.50">kernel::model::..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (29 samples, 2.28%)</title><rect x="63.1579%" y="421" width="2.2781%" height="15" fill="rgb(251,206,23)" fg:x="804" fg:w="29"/><text x="63.4079%" y="431.50">s..</text></g><g><title>serde_json::de::from_trait (29 samples, 2.28%)</title><rect x="63.1579%" y="405" width="2.2781%" height="15" fill="rgb(215,208,0)" fg:x="804" fg:w="29"/><text x="63.4079%" y="415.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (29 samples, 2.28%)</title><rect x="63.1579%" y="389" width="2.2781%" height="15" fill="rgb(230,75,50)" fg:x="804" fg:w="29"/><text x="63.4079%" y="399.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (29 samples, 2.28%)</title><rect x="63.1579%" y="373" width="2.2781%" height="15" fill="rgb(246,180,39)" fg:x="804" fg:w="29"/><text x="63.4079%" y="383.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="65.2003%" y="357" width="0.2357%" height="15" fill="rgb(249,175,24)" fg:x="830" fg:w="3"/><text x="65.4503%" y="367.50"></text></g><g><title>kernel::plugins::SessionPlugins::stop (2 samples, 0.16%)</title><rect x="65.4360%" y="517" width="0.1571%" height="15" fill="rgb(247,176,22)" fg:x="833" fg:w="2"/><text x="65.6860%" y="527.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Plugin&gt;::stop (1 samples, 0.08%)</title><rect x="65.5145%" y="501" width="0.0786%" height="15" fill="rgb(241,100,24)" fg:x="834" fg:w="1"/><text x="65.7645%" y="511.50"></text></g><g><title>clock_getres (1 samples, 0.08%)</title><rect x="65.5931%" y="453" width="0.0786%" height="15" fill="rgb(233,4,35)" fg:x="835" fg:w="1"/><text x="65.8431%" y="463.50"></text></g><g><title>engine::session::Session::close (229 samples, 17.99%)</title><rect x="47.7612%" y="533" width="17.9890%" height="15" fill="rgb(211,164,46)" fg:x="608" fg:w="229"/><text x="48.0112%" y="543.50">engine::session::Session::cl..</text></g><g><title>std::time::Instant::elapsed (2 samples, 0.16%)</title><rect x="65.5931%" y="517" width="0.1571%" height="15" fill="rgb(242,99,53)" fg:x="835" fg:w="2"/><text x="65.8431%" y="527.50"></text></g><g><title>std::time::Instant::now (2 samples, 0.16%)</title><rect x="65.5931%" y="501" width="0.1571%" height="15" fill="rgb(243,45,33)" fg:x="835" fg:w="2"/><text x="65.8431%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (2 samples, 0.16%)</title><rect x="65.5931%" y="485" width="0.1571%" height="15" fill="rgb(217,55,21)" fg:x="835" fg:w="2"/><text x="65.8431%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="65.5931%" y="469" width="0.1571%" height="15" fill="rgb(245,145,46)" fg:x="835" fg:w="2"/><text x="65.8431%" y="479.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="65.6716%" y="453" width="0.0786%" height="15" fill="rgb(215,112,45)" fg:x="836" fg:w="1"/><text x="65.9216%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="65.9073%" y="453" width="0.0786%" height="15" fill="rgb(228,104,16)" fg:x="839" fg:w="1"/><text x="66.1573%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="65.9859%" y="453" width="0.0786%" height="15" fill="rgb(239,186,38)" fg:x="840" fg:w="1"/><text x="66.2359%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.3001%" y="389" width="0.0786%" height="15" fill="rgb(228,38,35)" fg:x="844" fg:w="1"/><text x="66.5501%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.3786%" y="357" width="0.0786%" height="15" fill="rgb(251,42,40)" fg:x="845" fg:w="1"/><text x="66.6286%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.5357%" y="325" width="0.0786%" height="15" fill="rgb(210,51,19)" fg:x="847" fg:w="1"/><text x="66.7857%" y="335.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (5 samples, 0.39%)</title><rect x="66.3001%" y="405" width="0.3928%" height="15" fill="rgb(236,94,42)" fg:x="844" fg:w="5"/><text x="66.5501%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="66.3786%" y="389" width="0.3142%" height="15" fill="rgb(239,167,16)" fg:x="845" fg:w="4"/><text x="66.6286%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="66.3786%" y="373" width="0.3142%" height="15" fill="rgb(252,175,31)" fg:x="845" fg:w="4"/><text x="66.6286%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="66.4572%" y="357" width="0.2357%" height="15" fill="rgb(206,166,30)" fg:x="846" fg:w="3"/><text x="66.7072%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="66.4572%" y="341" width="0.2357%" height="15" fill="rgb(206,209,37)" fg:x="846" fg:w="3"/><text x="66.7072%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="66.6143%" y="325" width="0.0786%" height="15" fill="rgb(226,91,4)" fg:x="848" fg:w="1"/><text x="66.8643%" y="335.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="66.6929%" y="357" width="0.0786%" height="15" fill="rgb(222,167,0)" fg:x="849" fg:w="1"/><text x="66.9429%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="66.8500%" y="293" width="0.1571%" height="15" fill="rgb(211,70,14)" fg:x="851" fg:w="2"/><text x="67.1000%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="66.8500%" y="277" width="0.1571%" height="15" fill="rgb(214,84,42)" fg:x="851" fg:w="2"/><text x="67.1000%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="66.8500%" y="261" width="0.1571%" height="15" fill="rgb(235,157,37)" fg:x="851" fg:w="2"/><text x="67.1000%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="66.7714%" y="341" width="0.3142%" height="15" fill="rgb(225,13,6)" fg:x="850" fg:w="4"/><text x="67.0214%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="66.7714%" y="325" width="0.3142%" height="15" fill="rgb(205,202,1)" fg:x="850" fg:w="4"/><text x="67.0214%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="66.7714%" y="309" width="0.3142%" height="15" fill="rgb(232,195,26)" fg:x="850" fg:w="4"/><text x="67.0214%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.0071%" y="293" width="0.0786%" height="15" fill="rgb(208,102,26)" fg:x="853" fg:w="1"/><text x="67.2571%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.0071%" y="277" width="0.0786%" height="15" fill="rgb(215,41,39)" fg:x="853" fg:w="1"/><text x="67.2571%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.0071%" y="261" width="0.0786%" height="15" fill="rgb(247,139,11)" fg:x="853" fg:w="1"/><text x="67.2571%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.0071%" y="245" width="0.0786%" height="15" fill="rgb(243,99,6)" fg:x="853" fg:w="1"/><text x="67.2571%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.0071%" y="229" width="0.0786%" height="15" fill="rgb(230,168,48)" fg:x="853" fg:w="1"/><text x="67.2571%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.0071%" y="213" width="0.0786%" height="15" fill="rgb(238,227,13)" fg:x="853" fg:w="1"/><text x="67.2571%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.0071%" y="197" width="0.0786%" height="15" fill="rgb(209,109,13)" fg:x="853" fg:w="1"/><text x="67.2571%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.0071%" y="181" width="0.0786%" height="15" fill="rgb(228,195,1)" fg:x="853" fg:w="1"/><text x="67.2571%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.0071%" y="165" width="0.0786%" height="15" fill="rgb(230,218,0)" fg:x="853" fg:w="1"/><text x="67.2571%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.0071%" y="149" width="0.0786%" height="15" fill="rgb(206,1,45)" fg:x="853" fg:w="1"/><text x="67.2571%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.0071%" y="133" width="0.0786%" height="15" fill="rgb(209,124,26)" fg:x="853" fg:w="1"/><text x="67.2571%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.0071%" y="117" width="0.0786%" height="15" fill="rgb(220,59,8)" fg:x="853" fg:w="1"/><text x="67.2571%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.0071%" y="101" width="0.0786%" height="15" fill="rgb(251,41,37)" fg:x="853" fg:w="1"/><text x="67.2571%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.0071%" y="85" width="0.0786%" height="15" fill="rgb(239,152,21)" fg:x="853" fg:w="1"/><text x="67.2571%" y="95.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.1642%" y="293" width="0.0786%" height="15" fill="rgb(226,32,1)" fg:x="855" fg:w="1"/><text x="67.4142%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.1642%" y="277" width="0.0786%" height="15" fill="rgb(230,154,36)" fg:x="855" fg:w="1"/><text x="67.4142%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.1642%" y="261" width="0.0786%" height="15" fill="rgb(208,228,43)" fg:x="855" fg:w="1"/><text x="67.4142%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.1642%" y="245" width="0.0786%" height="15" fill="rgb(214,203,3)" fg:x="855" fg:w="1"/><text x="67.4142%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="67.0856%" y="341" width="0.2357%" height="15" fill="rgb(207,149,29)" fg:x="854" fg:w="3"/><text x="67.3356%" y="351.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="67.1642%" y="325" width="0.1571%" height="15" fill="rgb(250,105,7)" fg:x="855" fg:w="2"/><text x="67.4142%" y="335.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="67.1642%" y="309" width="0.1571%" height="15" fill="rgb(232,222,16)" fg:x="855" fg:w="2"/><text x="67.4142%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="67.2427%" y="293" width="0.0786%" height="15" fill="rgb(209,32,24)" fg:x="856" fg:w="1"/><text x="67.4927%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.2427%" y="277" width="0.0786%" height="15" fill="rgb(225,13,6)" fg:x="856" fg:w="1"/><text x="67.4927%" y="287.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="67.2427%" y="261" width="0.0786%" height="15" fill="rgb(245,226,26)" fg:x="856" fg:w="1"/><text x="67.4927%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.2427%" y="245" width="0.0786%" height="15" fill="rgb(229,178,27)" fg:x="856" fg:w="1"/><text x="67.4927%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.2427%" y="229" width="0.0786%" height="15" fill="rgb(205,227,28)" fg:x="856" fg:w="1"/><text x="67.4927%" y="239.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="67.3213%" y="341" width="0.0786%" height="15" fill="rgb(210,191,45)" fg:x="857" fg:w="1"/><text x="67.5713%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.3213%" y="325" width="0.0786%" height="15" fill="rgb(206,124,16)" fg:x="857" fg:w="1"/><text x="67.5713%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.3213%" y="309" width="0.0786%" height="15" fill="rgb(210,162,0)" fg:x="857" fg:w="1"/><text x="67.5713%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.3213%" y="293" width="0.0786%" height="15" fill="rgb(211,54,38)" fg:x="857" fg:w="1"/><text x="67.5713%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.3213%" y="277" width="0.0786%" height="15" fill="rgb(248,192,3)" fg:x="857" fg:w="1"/><text x="67.5713%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.3213%" y="261" width="0.0786%" height="15" fill="rgb(233,187,18)" fg:x="857" fg:w="1"/><text x="67.5713%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.3213%" y="245" width="0.0786%" height="15" fill="rgb(237,208,14)" fg:x="857" fg:w="1"/><text x="67.5713%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.3213%" y="229" width="0.0786%" height="15" fill="rgb(212,77,1)" fg:x="857" fg:w="1"/><text x="67.5713%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.3213%" y="213" width="0.0786%" height="15" fill="rgb(210,163,22)" fg:x="857" fg:w="1"/><text x="67.5713%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.3213%" y="197" width="0.0786%" height="15" fill="rgb(250,58,28)" fg:x="857" fg:w="1"/><text x="67.5713%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.3213%" y="181" width="0.0786%" height="15" fill="rgb(254,28,41)" fg:x="857" fg:w="1"/><text x="67.5713%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.3213%" y="165" width="0.0786%" height="15" fill="rgb(237,162,36)" fg:x="857" fg:w="1"/><text x="67.5713%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.3213%" y="149" width="0.0786%" height="15" fill="rgb(232,56,6)" fg:x="857" fg:w="1"/><text x="67.5713%" y="159.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="67.3998%" y="213" width="0.1571%" height="15" fill="rgb(216,127,42)" fg:x="858" fg:w="2"/><text x="67.6498%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="67.3998%" y="197" width="0.1571%" height="15" fill="rgb(241,69,15)" fg:x="858" fg:w="2"/><text x="67.6498%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.4784%" y="181" width="0.0786%" height="15" fill="rgb(227,180,19)" fg:x="859" fg:w="1"/><text x="67.7284%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.4784%" y="165" width="0.0786%" height="15" fill="rgb(231,188,29)" fg:x="859" fg:w="1"/><text x="67.7284%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.4784%" y="149" width="0.0786%" height="15" fill="rgb(224,176,27)" fg:x="859" fg:w="1"/><text x="67.7284%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.4784%" y="133" width="0.0786%" height="15" fill="rgb(249,214,19)" fg:x="859" fg:w="1"/><text x="67.7284%" y="143.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="67.4784%" y="117" width="0.0786%" height="15" fill="rgb(240,0,4)" fg:x="859" fg:w="1"/><text x="67.7284%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.4784%" y="101" width="0.0786%" height="15" fill="rgb(233,28,41)" fg:x="859" fg:w="1"/><text x="67.7284%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.4784%" y="85" width="0.0786%" height="15" fill="rgb(220,90,51)" fg:x="859" fg:w="1"/><text x="67.7284%" y="95.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="67.4784%" y="69" width="0.0786%" height="15" fill="rgb(250,52,22)" fg:x="859" fg:w="1"/><text x="67.7284%" y="79.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.4784%" y="53" width="0.0786%" height="15" fill="rgb(231,152,36)" fg:x="859" fg:w="1"/><text x="67.7284%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.4784%" y="37" width="0.0786%" height="15" fill="rgb(250,218,4)" fg:x="859" fg:w="1"/><text x="67.7284%" y="47.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="67.3998%" y="245" width="0.2357%" height="15" fill="rgb(210,38,21)" fg:x="858" fg:w="3"/><text x="67.6498%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="67.3998%" y="229" width="0.2357%" height="15" fill="rgb(230,75,13)" fg:x="858" fg:w="3"/><text x="67.6498%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.5570%" y="213" width="0.0786%" height="15" fill="rgb(250,68,53)" fg:x="860" fg:w="1"/><text x="67.8070%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.5570%" y="197" width="0.0786%" height="15" fill="rgb(250,210,16)" fg:x="860" fg:w="1"/><text x="67.8070%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="67.6355%" y="245" width="0.0786%" height="15" fill="rgb(240,132,5)" fg:x="861" fg:w="1"/><text x="67.8855%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="67.6355%" y="229" width="0.0786%" height="15" fill="rgb(222,148,48)" fg:x="861" fg:w="1"/><text x="67.8855%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="67.6355%" y="213" width="0.0786%" height="15" fill="rgb(247,181,24)" fg:x="861" fg:w="1"/><text x="67.8855%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.7926%" y="213" width="0.0786%" height="15" fill="rgb(239,5,31)" fg:x="863" fg:w="1"/><text x="68.0426%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="67.8712%" y="133" width="0.1571%" height="15" fill="rgb(241,152,38)" fg:x="864" fg:w="2"/><text x="68.1212%" y="143.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.9497%" y="117" width="0.0786%" height="15" fill="rgb(246,200,37)" fg:x="865" fg:w="1"/><text x="68.1997%" y="127.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.9497%" y="101" width="0.0786%" height="15" fill="rgb(243,210,26)" fg:x="865" fg:w="1"/><text x="68.1997%" y="111.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="67.8712%" y="197" width="0.2357%" height="15" fill="rgb(222,22,22)" fg:x="864" fg:w="3"/><text x="68.1212%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="67.8712%" y="181" width="0.2357%" height="15" fill="rgb(208,129,28)" fg:x="864" fg:w="3"/><text x="68.1212%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="67.8712%" y="165" width="0.2357%" height="15" fill="rgb(254,169,28)" fg:x="864" fg:w="3"/><text x="68.1212%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="67.8712%" y="149" width="0.2357%" height="15" fill="rgb(225,45,17)" fg:x="864" fg:w="3"/><text x="68.1212%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="68.0283%" y="133" width="0.0786%" height="15" fill="rgb(232,199,2)" fg:x="866" fg:w="1"/><text x="68.2783%" y="143.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.0283%" y="117" width="0.0786%" height="15" fill="rgb(235,33,40)" fg:x="866" fg:w="1"/><text x="68.2783%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.0283%" y="101" width="0.0786%" height="15" fill="rgb(237,89,50)" fg:x="866" fg:w="1"/><text x="68.2783%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="68.0283%" y="85" width="0.0786%" height="15" fill="rgb(238,126,5)" fg:x="866" fg:w="1"/><text x="68.2783%" y="95.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.0283%" y="69" width="0.0786%" height="15" fill="rgb(247,214,42)" fg:x="866" fg:w="1"/><text x="68.2783%" y="79.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.0283%" y="53" width="0.0786%" height="15" fill="rgb(238,60,45)" fg:x="866" fg:w="1"/><text x="68.2783%" y="63.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.0283%" y="37" width="0.0786%" height="15" fill="rgb(225,69,44)" fg:x="866" fg:w="1"/><text x="68.2783%" y="47.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (10 samples, 0.79%)</title><rect x="67.3998%" y="293" width="0.7855%" height="15" fill="rgb(241,13,44)" fg:x="858" fg:w="10"/><text x="67.6498%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.79%)</title><rect x="67.3998%" y="277" width="0.7855%" height="15" fill="rgb(227,121,22)" fg:x="858" fg:w="10"/><text x="67.6498%" y="287.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (10 samples, 0.79%)</title><rect x="67.3998%" y="261" width="0.7855%" height="15" fill="rgb(231,160,23)" fg:x="858" fg:w="10"/><text x="67.6498%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.47%)</title><rect x="67.7141%" y="245" width="0.4713%" height="15" fill="rgb(250,179,43)" fg:x="862" fg:w="6"/><text x="67.9641%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.47%)</title><rect x="67.7141%" y="229" width="0.4713%" height="15" fill="rgb(233,54,46)" fg:x="862" fg:w="6"/><text x="67.9641%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.31%)</title><rect x="67.8712%" y="213" width="0.3142%" height="15" fill="rgb(247,120,42)" fg:x="864" fg:w="4"/><text x="68.1212%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.1068%" y="197" width="0.0786%" height="15" fill="rgb(221,219,12)" fg:x="867" fg:w="1"/><text x="68.3568%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="68.1068%" y="181" width="0.0786%" height="15" fill="rgb(211,126,8)" fg:x="867" fg:w="1"/><text x="68.3568%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.1068%" y="165" width="0.0786%" height="15" fill="rgb(218,154,33)" fg:x="867" fg:w="1"/><text x="68.3568%" y="175.50"></text></g><g><title>kernel::model::entity::Entity::from_value (11 samples, 0.86%)</title><rect x="67.3998%" y="341" width="0.8641%" height="15" fill="rgb(212,199,16)" fg:x="858" fg:w="11"/><text x="67.6498%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.86%)</title><rect x="67.3998%" y="325" width="0.8641%" height="15" fill="rgb(236,215,46)" fg:x="858" fg:w="11"/><text x="67.6498%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.86%)</title><rect x="67.3998%" y="309" width="0.8641%" height="15" fill="rgb(232,32,22)" fg:x="858" fg:w="11"/><text x="67.6498%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.1854%" y="293" width="0.0786%" height="15" fill="rgb(234,79,15)" fg:x="868" fg:w="1"/><text x="68.4354%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.1854%" y="277" width="0.0786%" height="15" fill="rgb(235,187,47)" fg:x="868" fg:w="1"/><text x="68.4354%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="68.4996%" y="101" width="0.1571%" height="15" fill="rgb(244,69,37)" fg:x="872" fg:w="2"/><text x="68.7496%" y="111.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="68.5782%" y="85" width="0.0786%" height="15" fill="rgb(249,140,25)" fg:x="873" fg:w="1"/><text x="68.8282%" y="95.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.31%)</title><rect x="68.4996%" y="165" width="0.3142%" height="15" fill="rgb(213,69,8)" fg:x="872" fg:w="4"/><text x="68.7496%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="68.4996%" y="149" width="0.3142%" height="15" fill="rgb(220,136,2)" fg:x="872" fg:w="4"/><text x="68.7496%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.31%)</title><rect x="68.4996%" y="133" width="0.3142%" height="15" fill="rgb(237,50,36)" fg:x="872" fg:w="4"/><text x="68.7496%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="68.4996%" y="117" width="0.3142%" height="15" fill="rgb(226,18,11)" fg:x="872" fg:w="4"/><text x="68.7496%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="68.6567%" y="101" width="0.1571%" height="15" fill="rgb(243,156,2)" fg:x="874" fg:w="2"/><text x="68.9067%" y="111.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.7353%" y="85" width="0.0786%" height="15" fill="rgb(218,8,34)" fg:x="875" fg:w="1"/><text x="68.9853%" y="95.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="68.7353%" y="69" width="0.0786%" height="15" fill="rgb(250,94,35)" fg:x="875" fg:w="1"/><text x="68.9853%" y="79.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="68.7353%" y="53" width="0.0786%" height="15" fill="rgb(229,127,21)" fg:x="875" fg:w="1"/><text x="68.9853%" y="63.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.39%)</title><rect x="68.4996%" y="197" width="0.3928%" height="15" fill="rgb(234,49,5)" fg:x="872" fg:w="5"/><text x="68.7496%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="68.4996%" y="181" width="0.3928%" height="15" fill="rgb(248,12,16)" fg:x="872" fg:w="5"/><text x="68.7496%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.8138%" y="165" width="0.0786%" height="15" fill="rgb(208,220,31)" fg:x="876" fg:w="1"/><text x="69.0638%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.71%)</title><rect x="68.2639%" y="277" width="0.7070%" height="15" fill="rgb(243,184,0)" fg:x="869" fg:w="9"/><text x="68.5139%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.71%)</title><rect x="68.2639%" y="261" width="0.7070%" height="15" fill="rgb(217,38,21)" fg:x="869" fg:w="9"/><text x="68.5139%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.63%)</title><rect x="68.3425%" y="245" width="0.6284%" height="15" fill="rgb(239,120,45)" fg:x="870" fg:w="8"/><text x="68.5925%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.63%)</title><rect x="68.3425%" y="229" width="0.6284%" height="15" fill="rgb(235,33,2)" fg:x="870" fg:w="8"/><text x="68.5925%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.55%)</title><rect x="68.4211%" y="213" width="0.5499%" height="15" fill="rgb(249,161,5)" fg:x="871" fg:w="7"/><text x="68.6711%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.8924%" y="197" width="0.0786%" height="15" fill="rgb(250,165,48)" fg:x="877" fg:w="1"/><text x="69.1424%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="68.8924%" y="181" width="0.0786%" height="15" fill="rgb(221,23,45)" fg:x="877" fg:w="1"/><text x="69.1424%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.8924%" y="165" width="0.0786%" height="15" fill="rgb(217,108,46)" fg:x="877" fg:w="1"/><text x="69.1424%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.8924%" y="149" width="0.0786%" height="15" fill="rgb(254,26,35)" fg:x="877" fg:w="1"/><text x="69.1424%" y="159.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.8924%" y="133" width="0.0786%" height="15" fill="rgb(218,223,28)" fg:x="877" fg:w="1"/><text x="69.1424%" y="143.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="68.8924%" y="117" width="0.0786%" height="15" fill="rgb(242,27,47)" fg:x="877" fg:w="1"/><text x="69.1424%" y="127.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (30 samples, 2.36%)</title><rect x="66.6929%" y="405" width="2.3566%" height="15" fill="rgb(218,39,35)" fg:x="849" fg:w="30"/><text x="66.9429%" y="415.50">&lt;..</text></g><g><title>kernel::model::EntityPtrResolver::entity (30 samples, 2.36%)</title><rect x="66.6929%" y="389" width="2.3566%" height="15" fill="rgb(232,127,16)" fg:x="849" fg:w="30"/><text x="66.9429%" y="399.50">k..</text></g><g><title>engine::session::Session::load_entity (30 samples, 2.36%)</title><rect x="66.6929%" y="373" width="2.3566%" height="15" fill="rgb(231,219,51)" fg:x="849" fg:w="30"/><text x="66.9429%" y="383.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (29 samples, 2.28%)</title><rect x="66.7714%" y="357" width="2.2781%" height="15" fill="rgb(217,220,46)" fg:x="850" fg:w="29"/><text x="67.0214%" y="367.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (10 samples, 0.79%)</title><rect x="68.2639%" y="341" width="0.7855%" height="15" fill="rgb(230,75,1)" fg:x="869" fg:w="10"/><text x="68.5139%" y="351.50"></text></g><g><title>serde_json::de::from_trait (10 samples, 0.79%)</title><rect x="68.2639%" y="325" width="0.7855%" height="15" fill="rgb(218,2,8)" fg:x="869" fg:w="10"/><text x="68.5139%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.79%)</title><rect x="68.2639%" y="309" width="0.7855%" height="15" fill="rgb(206,111,30)" fg:x="869" fg:w="10"/><text x="68.5139%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.79%)</title><rect x="68.2639%" y="293" width="0.7855%" height="15" fill="rgb(209,135,6)" fg:x="869" fg:w="10"/><text x="68.5139%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.9709%" y="277" width="0.0786%" height="15" fill="rgb(205,169,10)" fg:x="878" fg:w="1"/><text x="69.2209%" y="287.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (38 samples, 2.99%)</title><rect x="66.1430%" y="437" width="2.9851%" height="15" fill="rgb(212,204,38)" fg:x="842" fg:w="38"/><text x="66.3930%" y="447.50">&lt;en..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (36 samples, 2.83%)</title><rect x="66.3001%" y="421" width="2.8280%" height="15" fill="rgb(205,199,14)" fg:x="844" fg:w="36"/><text x="66.5501%" y="431.50">&lt;p..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.0495%" y="405" width="0.0786%" height="15" fill="rgb(212,4,6)" fg:x="879" fg:w="1"/><text x="69.2995%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.1280%" y="437" width="0.0786%" height="15" fill="rgb(250,15,10)" fg:x="880" fg:w="1"/><text x="69.3780%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (47 samples, 3.69%)</title><rect x="65.8288%" y="501" width="3.6921%" height="15" fill="rgb(212,49,51)" fg:x="838" fg:w="47"/><text x="66.0788%" y="511.50">&lt;eng..</text></g><g><title>kernel::plugins::mw::apply_middleware (46 samples, 3.61%)</title><rect x="65.9073%" y="485" width="3.6135%" height="15" fill="rgb(235,21,9)" fg:x="839" fg:w="46"/><text x="66.1573%" y="495.50">kern..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (46 samples, 3.61%)</title><rect x="65.9073%" y="469" width="3.6135%" height="15" fill="rgb(251,31,32)" fg:x="839" fg:w="46"/><text x="66.1573%" y="479.50">kern..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (44 samples, 3.46%)</title><rect x="66.0644%" y="453" width="3.4564%" height="15" fill="rgb(246,23,9)" fg:x="841" fg:w="44"/><text x="66.3144%" y="463.50">&lt;en..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.31%)</title><rect x="69.2066%" y="437" width="0.3142%" height="15" fill="rgb(225,216,14)" fg:x="881" fg:w="4"/><text x="69.4566%" y="447.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (4 samples, 0.31%)</title><rect x="69.2066%" y="421" width="0.3142%" height="15" fill="rgb(215,200,26)" fg:x="881" fg:w="4"/><text x="69.4566%" y="431.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="69.2852%" y="405" width="0.2357%" height="15" fill="rgb(237,130,47)" fg:x="882" fg:w="3"/><text x="69.5352%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="69.2852%" y="389" width="0.2357%" height="15" fill="rgb(247,74,14)" fg:x="882" fg:w="3"/><text x="69.5352%" y="399.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="69.3637%" y="373" width="0.1571%" height="15" fill="rgb(254,97,46)" fg:x="883" fg:w="2"/><text x="69.6137%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="69.3637%" y="357" width="0.1571%" height="15" fill="rgb(234,191,1)" fg:x="883" fg:w="2"/><text x="69.6137%" y="367.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.16%)</title><rect x="69.3637%" y="341" width="0.1571%" height="15" fill="rgb(215,165,14)" fg:x="883" fg:w="2"/><text x="69.6137%" y="351.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (2 samples, 0.16%)</title><rect x="69.3637%" y="325" width="0.1571%" height="15" fill="rgb(230,182,6)" fg:x="883" fg:w="2"/><text x="69.6137%" y="335.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (1 samples, 0.08%)</title><rect x="69.4423%" y="309" width="0.0786%" height="15" fill="rgb(210,127,39)" fg:x="884" fg:w="1"/><text x="69.6923%" y="319.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::SimpleReply&gt;&gt;::try_from (1 samples, 0.08%)</title><rect x="69.4423%" y="293" width="0.0786%" height="15" fill="rgb(223,212,51)" fg:x="884" fg:w="1"/><text x="69.6923%" y="303.50"></text></g><g><title>&lt;replies::SimpleReply as replies::ToTaggedJson&gt;::to_tagged_json (1 samples, 0.08%)</title><rect x="69.4423%" y="277" width="0.0786%" height="15" fill="rgb(226,176,43)" fg:x="884" fg:w="1"/><text x="69.6923%" y="287.50"></text></g><g><title>&lt;core::char::ToUppercase as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.08%)</title><rect x="69.4423%" y="261" width="0.0786%" height="15" fill="rgb(222,155,4)" fg:x="884" fg:w="1"/><text x="69.6923%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.5208%" y="453" width="0.0786%" height="15" fill="rgb(215,149,7)" fg:x="885" fg:w="1"/><text x="69.7708%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.5208%" y="469" width="0.1571%" height="15" fill="rgb(252,199,23)" fg:x="885" fg:w="2"/><text x="69.7708%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.5994%" y="453" width="0.0786%" height="15" fill="rgb(245,52,29)" fg:x="886" fg:w="1"/><text x="69.8494%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.5994%" y="437" width="0.0786%" height="15" fill="rgb(221,228,19)" fg:x="886" fg:w="1"/><text x="69.8494%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.5994%" y="421" width="0.0786%" height="15" fill="rgb(253,101,6)" fg:x="886" fg:w="1"/><text x="69.8494%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.5994%" y="405" width="0.0786%" height="15" fill="rgb(211,130,8)" fg:x="886" fg:w="1"/><text x="69.8494%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.5994%" y="389" width="0.0786%" height="15" fill="rgb(238,37,53)" fg:x="886" fg:w="1"/><text x="69.8494%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.5994%" y="373" width="0.0786%" height="15" fill="rgb(235,145,5)" fg:x="886" fg:w="1"/><text x="69.8494%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.5994%" y="357" width="0.0786%" height="15" fill="rgb(244,12,43)" fg:x="886" fg:w="1"/><text x="69.8494%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.5994%" y="341" width="0.0786%" height="15" fill="rgb(246,195,24)" fg:x="886" fg:w="1"/><text x="69.8494%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.5994%" y="325" width="0.0786%" height="15" fill="rgb(235,163,6)" fg:x="886" fg:w="1"/><text x="69.8494%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.5994%" y="309" width="0.0786%" height="15" fill="rgb(236,218,17)" fg:x="886" fg:w="1"/><text x="69.8494%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.5994%" y="293" width="0.0786%" height="15" fill="rgb(235,12,38)" fg:x="886" fg:w="1"/><text x="69.8494%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.5994%" y="277" width="0.0786%" height="15" fill="rgb(225,195,33)" fg:x="886" fg:w="1"/><text x="69.8494%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="69.6779%" y="469" width="0.0786%" height="15" fill="rgb(238,54,35)" fg:x="887" fg:w="1"/><text x="69.9279%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="69.6779%" y="453" width="0.0786%" height="15" fill="rgb(238,33,7)" fg:x="887" fg:w="1"/><text x="69.9279%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.9136%" y="405" width="0.0786%" height="15" fill="rgb(245,5,14)" fg:x="890" fg:w="1"/><text x="70.1636%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.9136%" y="389" width="0.0786%" height="15" fill="rgb(251,95,31)" fg:x="890" fg:w="1"/><text x="70.1636%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::find_name_key (7 samples, 0.55%)</title><rect x="69.5208%" y="501" width="0.5499%" height="15" fill="rgb(222,15,46)" fg:x="885" fg:w="7"/><text x="69.7708%" y="511.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (7 samples, 0.55%)</title><rect x="69.5208%" y="485" width="0.5499%" height="15" fill="rgb(226,182,24)" fg:x="885" fg:w="7"/><text x="69.7708%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="69.7565%" y="469" width="0.3142%" height="15" fill="rgb(229,105,41)" fg:x="888" fg:w="4"/><text x="70.0065%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="69.8350%" y="453" width="0.2357%" height="15" fill="rgb(216,99,53)" fg:x="889" fg:w="3"/><text x="70.0850%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="69.9136%" y="437" width="0.1571%" height="15" fill="rgb(253,26,20)" fg:x="890" fg:w="2"/><text x="70.1636%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.9136%" y="421" width="0.1571%" height="15" fill="rgb(249,155,28)" fg:x="890" fg:w="2"/><text x="70.1636%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.9921%" y="405" width="0.0786%" height="15" fill="rgb(241,221,2)" fg:x="891" fg:w="1"/><text x="70.2421%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.9921%" y="389" width="0.0786%" height="15" fill="rgb(219,124,6)" fg:x="891" fg:w="1"/><text x="70.2421%" y="399.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="70.0707%" y="501" width="0.0786%" height="15" fill="rgb(233,37,6)" fg:x="892" fg:w="1"/><text x="70.3207%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="70.0707%" y="485" width="0.0786%" height="15" fill="rgb(238,20,14)" fg:x="892" fg:w="1"/><text x="70.3207%" y="495.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="70.0707%" y="469" width="0.0786%" height="15" fill="rgb(232,106,27)" fg:x="892" fg:w="1"/><text x="70.3207%" y="479.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="70.0707%" y="453" width="0.0786%" height="15" fill="rgb(246,157,24)" fg:x="892" fg:w="1"/><text x="70.3207%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="70.0707%" y="437" width="0.0786%" height="15" fill="rgb(214,153,10)" fg:x="892" fg:w="1"/><text x="70.3207%" y="447.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="70.1493%" y="469" width="0.0786%" height="15" fill="rgb(212,94,6)" fg:x="893" fg:w="1"/><text x="70.3993%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="70.1493%" y="453" width="0.0786%" height="15" fill="rgb(254,25,27)" fg:x="893" fg:w="1"/><text x="70.3993%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.2278%" y="421" width="0.0786%" height="15" fill="rgb(250,43,52)" fg:x="894" fg:w="1"/><text x="70.4778%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.2278%" y="405" width="0.0786%" height="15" fill="rgb(221,226,40)" fg:x="894" fg:w="1"/><text x="70.4778%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.2278%" y="453" width="0.1571%" height="15" fill="rgb(235,162,34)" fg:x="894" fg:w="2"/><text x="70.4778%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.2278%" y="437" width="0.1571%" height="15" fill="rgb(239,24,26)" fg:x="894" fg:w="2"/><text x="70.4778%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.3064%" y="421" width="0.0786%" height="15" fill="rgb(244,226,11)" fg:x="895" fg:w="1"/><text x="70.5564%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.3064%" y="405" width="0.0786%" height="15" fill="rgb(225,23,10)" fg:x="895" fg:w="1"/><text x="70.5564%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.3064%" y="389" width="0.0786%" height="15" fill="rgb(249,125,6)" fg:x="895" fg:w="1"/><text x="70.5564%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.3064%" y="373" width="0.0786%" height="15" fill="rgb(246,212,12)" fg:x="895" fg:w="1"/><text x="70.5564%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.3064%" y="357" width="0.0786%" height="15" fill="rgb(230,43,32)" fg:x="895" fg:w="1"/><text x="70.5564%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.3064%" y="341" width="0.0786%" height="15" fill="rgb(210,95,23)" fg:x="895" fg:w="1"/><text x="70.5564%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.3064%" y="325" width="0.0786%" height="15" fill="rgb(229,103,33)" fg:x="895" fg:w="1"/><text x="70.5564%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.3064%" y="309" width="0.0786%" height="15" fill="rgb(222,104,27)" fg:x="895" fg:w="1"/><text x="70.5564%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.3064%" y="293" width="0.0786%" height="15" fill="rgb(239,221,23)" fg:x="895" fg:w="1"/><text x="70.5564%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.3064%" y="277" width="0.0786%" height="15" fill="rgb(222,98,21)" fg:x="895" fg:w="1"/><text x="70.5564%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.3064%" y="261" width="0.0786%" height="15" fill="rgb(231,101,20)" fg:x="895" fg:w="1"/><text x="70.5564%" y="271.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="70.3064%" y="245" width="0.0786%" height="15" fill="rgb(215,150,22)" fg:x="895" fg:w="1"/><text x="70.5564%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="70.3064%" y="229" width="0.0786%" height="15" fill="rgb(248,3,34)" fg:x="895" fg:w="1"/><text x="70.5564%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.3849%" y="389" width="0.1571%" height="15" fill="rgb(220,141,21)" fg:x="896" fg:w="2"/><text x="70.6349%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.3849%" y="373" width="0.1571%" height="15" fill="rgb(223,41,48)" fg:x="896" fg:w="2"/><text x="70.6349%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.3849%" y="357" width="0.1571%" height="15" fill="rgb(247,12,5)" fg:x="896" fg:w="2"/><text x="70.6349%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="70.3849%" y="341" width="0.1571%" height="15" fill="rgb(206,173,10)" fg:x="896" fg:w="2"/><text x="70.6349%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="70.3849%" y="405" width="0.3142%" height="15" fill="rgb(233,214,37)" fg:x="896" fg:w="4"/><text x="70.6349%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="70.5420%" y="389" width="0.1571%" height="15" fill="rgb(238,86,43)" fg:x="898" fg:w="2"/><text x="70.7920%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="70.5420%" y="373" width="0.1571%" height="15" fill="rgb(212,182,8)" fg:x="898" fg:w="2"/><text x="70.7920%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="70.5420%" y="357" width="0.1571%" height="15" fill="rgb(240,91,47)" fg:x="898" fg:w="2"/><text x="70.7920%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="70.5420%" y="341" width="0.1571%" height="15" fill="rgb(209,138,26)" fg:x="898" fg:w="2"/><text x="70.7920%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="70.5420%" y="325" width="0.1571%" height="15" fill="rgb(231,163,20)" fg:x="898" fg:w="2"/><text x="70.7920%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="70.5420%" y="309" width="0.1571%" height="15" fill="rgb(214,91,54)" fg:x="898" fg:w="2"/><text x="70.7920%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="70.5420%" y="293" width="0.1571%" height="15" fill="rgb(230,32,17)" fg:x="898" fg:w="2"/><text x="70.7920%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="70.5420%" y="277" width="0.1571%" height="15" fill="rgb(231,34,34)" fg:x="898" fg:w="2"/><text x="70.7920%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="70.5420%" y="261" width="0.1571%" height="15" fill="rgb(224,228,27)" fg:x="898" fg:w="2"/><text x="70.7920%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="70.5420%" y="245" width="0.1571%" height="15" fill="rgb(219,35,40)" fg:x="898" fg:w="2"/><text x="70.7920%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="70.5420%" y="229" width="0.1571%" height="15" fill="rgb(234,42,8)" fg:x="898" fg:w="2"/><text x="70.7920%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="70.5420%" y="213" width="0.1571%" height="15" fill="rgb(226,75,22)" fg:x="898" fg:w="2"/><text x="70.7920%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="70.7777%" y="373" width="0.0786%" height="15" fill="rgb(242,203,28)" fg:x="901" fg:w="1"/><text x="71.0277%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.8562%" y="341" width="0.0786%" height="15" fill="rgb(221,3,9)" fg:x="902" fg:w="1"/><text x="71.1062%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.8562%" y="325" width="0.0786%" height="15" fill="rgb(214,34,31)" fg:x="902" fg:w="1"/><text x="71.1062%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.8562%" y="309" width="0.0786%" height="15" fill="rgb(252,119,15)" fg:x="902" fg:w="1"/><text x="71.1062%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.8562%" y="293" width="0.0786%" height="15" fill="rgb(244,224,31)" fg:x="902" fg:w="1"/><text x="71.1062%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.8562%" y="277" width="0.0786%" height="15" fill="rgb(215,8,51)" fg:x="902" fg:w="1"/><text x="71.1062%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.8562%" y="261" width="0.0786%" height="15" fill="rgb(207,24,1)" fg:x="902" fg:w="1"/><text x="71.1062%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.8562%" y="245" width="0.0786%" height="15" fill="rgb(245,90,0)" fg:x="902" fg:w="1"/><text x="71.1062%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.8562%" y="229" width="0.0786%" height="15" fill="rgb(246,43,48)" fg:x="902" fg:w="1"/><text x="71.1062%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.8562%" y="213" width="0.0786%" height="15" fill="rgb(252,218,10)" fg:x="902" fg:w="1"/><text x="71.1062%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.8562%" y="197" width="0.0786%" height="15" fill="rgb(231,24,35)" fg:x="902" fg:w="1"/><text x="71.1062%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.8562%" y="181" width="0.0786%" height="15" fill="rgb(225,66,19)" fg:x="902" fg:w="1"/><text x="71.1062%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.8562%" y="165" width="0.0786%" height="15" fill="rgb(214,96,51)" fg:x="902" fg:w="1"/><text x="71.1062%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.8562%" y="149" width="0.0786%" height="15" fill="rgb(251,151,47)" fg:x="902" fg:w="1"/><text x="71.1062%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.8562%" y="357" width="0.1571%" height="15" fill="rgb(236,79,14)" fg:x="902" fg:w="2"/><text x="71.1062%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.9348%" y="341" width="0.0786%" height="15" fill="rgb(210,205,11)" fg:x="903" fg:w="1"/><text x="71.1848%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.9348%" y="325" width="0.0786%" height="15" fill="rgb(233,142,53)" fg:x="903" fg:w="1"/><text x="71.1848%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.9348%" y="309" width="0.0786%" height="15" fill="rgb(212,116,48)" fg:x="903" fg:w="1"/><text x="71.1848%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.9348%" y="293" width="0.0786%" height="15" fill="rgb(234,55,33)" fg:x="903" fg:w="1"/><text x="71.1848%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.9348%" y="277" width="0.0786%" height="15" fill="rgb(253,92,27)" fg:x="903" fg:w="1"/><text x="71.1848%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.9348%" y="261" width="0.0786%" height="15" fill="rgb(220,7,35)" fg:x="903" fg:w="1"/><text x="71.1848%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.9348%" y="245" width="0.0786%" height="15" fill="rgb(246,124,6)" fg:x="903" fg:w="1"/><text x="71.1848%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.9348%" y="229" width="0.0786%" height="15" fill="rgb(212,111,51)" fg:x="903" fg:w="1"/><text x="71.1848%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.9348%" y="213" width="0.0786%" height="15" fill="rgb(253,116,7)" fg:x="903" fg:w="1"/><text x="71.1848%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.9348%" y="197" width="0.0786%" height="15" fill="rgb(213,145,18)" fg:x="903" fg:w="1"/><text x="71.1848%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.9348%" y="181" width="0.0786%" height="15" fill="rgb(219,149,7)" fg:x="903" fg:w="1"/><text x="71.1848%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.9348%" y="165" width="0.0786%" height="15" fill="rgb(225,156,20)" fg:x="903" fg:w="1"/><text x="71.1848%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.0134%" y="261" width="0.0786%" height="15" fill="rgb(211,98,19)" fg:x="904" fg:w="1"/><text x="71.2634%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.0134%" y="245" width="0.0786%" height="15" fill="rgb(231,192,31)" fg:x="904" fg:w="1"/><text x="71.2634%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.0134%" y="229" width="0.0786%" height="15" fill="rgb(249,95,19)" fg:x="904" fg:w="1"/><text x="71.2634%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.0134%" y="213" width="0.0786%" height="15" fill="rgb(247,101,36)" fg:x="904" fg:w="1"/><text x="71.2634%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.0134%" y="197" width="0.0786%" height="15" fill="rgb(221,45,43)" fg:x="904" fg:w="1"/><text x="71.2634%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.0134%" y="181" width="0.0786%" height="15" fill="rgb(220,42,1)" fg:x="904" fg:w="1"/><text x="71.2634%" y="191.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="71.0134%" y="165" width="0.0786%" height="15" fill="rgb(236,19,24)" fg:x="904" fg:w="1"/><text x="71.2634%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="71.0134%" y="149" width="0.0786%" height="15" fill="rgb(225,192,6)" fg:x="904" fg:w="1"/><text x="71.2634%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="71.0134%" y="309" width="0.1571%" height="15" fill="rgb(242,30,19)" fg:x="904" fg:w="2"/><text x="71.2634%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="71.0134%" y="293" width="0.1571%" height="15" fill="rgb(240,36,6)" fg:x="904" fg:w="2"/><text x="71.2634%" y="303.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="71.0134%" y="277" width="0.1571%" height="15" fill="rgb(246,40,28)" fg:x="904" fg:w="2"/><text x="71.2634%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.0919%" y="261" width="0.0786%" height="15" fill="rgb(225,155,33)" fg:x="905" fg:w="1"/><text x="71.3419%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.0919%" y="245" width="0.0786%" height="15" fill="rgb(240,65,18)" fg:x="905" fg:w="1"/><text x="71.3419%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.1705%" y="309" width="0.0786%" height="15" fill="rgb(217,0,48)" fg:x="906" fg:w="1"/><text x="71.4205%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.3276%" y="261" width="0.0786%" height="15" fill="rgb(217,80,15)" fg:x="908" fg:w="1"/><text x="71.5776%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="71.3276%" y="245" width="0.0786%" height="15" fill="rgb(253,43,51)" fg:x="908" fg:w="1"/><text x="71.5776%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.3276%" y="229" width="0.0786%" height="15" fill="rgb(246,60,4)" fg:x="908" fg:w="1"/><text x="71.5776%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.3276%" y="213" width="0.0786%" height="15" fill="rgb(230,40,54)" fg:x="908" fg:w="1"/><text x="71.5776%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.47%)</title><rect x="71.0134%" y="357" width="0.4713%" height="15" fill="rgb(208,20,44)" fg:x="904" fg:w="6"/><text x="71.2634%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.47%)</title><rect x="71.0134%" y="341" width="0.4713%" height="15" fill="rgb(230,22,22)" fg:x="904" fg:w="6"/><text x="71.2634%" y="351.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (6 samples, 0.47%)</title><rect x="71.0134%" y="325" width="0.4713%" height="15" fill="rgb(207,57,4)" fg:x="904" fg:w="6"/><text x="71.2634%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="71.2490%" y="309" width="0.2357%" height="15" fill="rgb(242,130,33)" fg:x="907" fg:w="3"/><text x="71.4990%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="71.2490%" y="293" width="0.2357%" height="15" fill="rgb(218,66,43)" fg:x="907" fg:w="3"/><text x="71.4990%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (2 samples, 0.16%)</title><rect x="71.3276%" y="277" width="0.1571%" height="15" fill="rgb(236,105,16)" fg:x="908" fg:w="2"/><text x="71.5776%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="71.4061%" y="261" width="0.0786%" height="15" fill="rgb(230,46,15)" fg:x="909" fg:w="1"/><text x="71.6561%" y="271.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="71.4061%" y="245" width="0.0786%" height="15" fill="rgb(251,172,40)" fg:x="909" fg:w="1"/><text x="71.6561%" y="255.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="71.4061%" y="229" width="0.0786%" height="15" fill="rgb(225,217,32)" fg:x="909" fg:w="1"/><text x="71.6561%" y="239.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="71.5632%" y="325" width="0.1571%" height="15" fill="rgb(243,10,29)" fg:x="911" fg:w="2"/><text x="71.8132%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.7203%" y="325" width="0.0786%" height="15" fill="rgb(207,102,10)" fg:x="913" fg:w="1"/><text x="71.9703%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.7203%" y="309" width="0.0786%" height="15" fill="rgb(241,125,5)" fg:x="913" fg:w="1"/><text x="71.9703%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="71.7989%" y="309" width="0.0786%" height="15" fill="rgb(230,125,29)" fg:x="914" fg:w="1"/><text x="72.0489%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="71.7989%" y="293" width="0.0786%" height="15" fill="rgb(223,65,44)" fg:x="914" fg:w="1"/><text x="72.0489%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 1.34%)</title><rect x="70.6991%" y="405" width="1.3354%" height="15" fill="rgb(224,188,28)" fg:x="900" fg:w="17"/><text x="70.9491%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 1.34%)</title><rect x="70.6991%" y="389" width="1.3354%" height="15" fill="rgb(254,197,27)" fg:x="900" fg:w="17"/><text x="70.9491%" y="399.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (15 samples, 1.18%)</title><rect x="70.8562%" y="373" width="1.1783%" height="15" fill="rgb(220,200,25)" fg:x="902" fg:w="15"/><text x="71.1062%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.55%)</title><rect x="71.4847%" y="357" width="0.5499%" height="15" fill="rgb(239,225,54)" fg:x="910" fg:w="7"/><text x="71.7347%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.47%)</title><rect x="71.5632%" y="341" width="0.4713%" height="15" fill="rgb(211,59,40)" fg:x="911" fg:w="6"/><text x="71.8132%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="71.7989%" y="325" width="0.2357%" height="15" fill="rgb(213,176,46)" fg:x="914" fg:w="3"/><text x="72.0489%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="71.8775%" y="309" width="0.1571%" height="15" fill="rgb(226,99,4)" fg:x="915" fg:w="2"/><text x="72.1275%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.9560%" y="293" width="0.0786%" height="15" fill="rgb(239,203,43)" fg:x="916" fg:w="1"/><text x="72.2060%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.0346%" y="373" width="0.0786%" height="15" fill="rgb(246,1,45)" fg:x="917" fg:w="1"/><text x="72.2846%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.1131%" y="373" width="0.0786%" height="15" fill="rgb(231,42,52)" fg:x="918" fg:w="1"/><text x="72.3631%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.1131%" y="357" width="0.0786%" height="15" fill="rgb(240,13,50)" fg:x="918" fg:w="1"/><text x="72.3631%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="72.1917%" y="341" width="0.1571%" height="15" fill="rgb(225,81,14)" fg:x="919" fg:w="2"/><text x="72.4417%" y="351.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="72.1917%" y="325" width="0.1571%" height="15" fill="rgb(216,182,23)" fg:x="919" fg:w="2"/><text x="72.4417%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="72.1917%" y="373" width="0.2357%" height="15" fill="rgb(233,137,19)" fg:x="919" fg:w="3"/><text x="72.4417%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="72.1917%" y="357" width="0.2357%" height="15" fill="rgb(242,61,46)" fg:x="919" fg:w="3"/><text x="72.4417%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.3488%" y="341" width="0.0786%" height="15" fill="rgb(221,168,51)" fg:x="921" fg:w="1"/><text x="72.5988%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="72.3488%" y="325" width="0.0786%" height="15" fill="rgb(238,48,15)" fg:x="921" fg:w="1"/><text x="72.5988%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="72.3488%" y="309" width="0.0786%" height="15" fill="rgb(216,13,16)" fg:x="921" fg:w="1"/><text x="72.5988%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.3488%" y="293" width="0.0786%" height="15" fill="rgb(223,185,34)" fg:x="921" fg:w="1"/><text x="72.5988%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (27 samples, 2.12%)</title><rect x="70.3849%" y="453" width="2.1210%" height="15" fill="rgb(228,94,42)" fg:x="896" fg:w="27"/><text x="70.6349%" y="463.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 2.12%)</title><rect x="70.3849%" y="437" width="2.1210%" height="15" fill="rgb(218,166,43)" fg:x="896" fg:w="27"/><text x="70.6349%" y="447.50">&lt;..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (27 samples, 2.12%)</title><rect x="70.3849%" y="421" width="2.1210%" height="15" fill="rgb(232,30,50)" fg:x="896" fg:w="27"/><text x="70.6349%" y="431.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.47%)</title><rect x="72.0346%" y="405" width="0.4713%" height="15" fill="rgb(245,206,45)" fg:x="917" fg:w="6"/><text x="72.2846%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.47%)</title><rect x="72.0346%" y="389" width="0.4713%" height="15" fill="rgb(220,56,22)" fg:x="917" fg:w="6"/><text x="72.2846%" y="399.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="72.4273%" y="373" width="0.0786%" height="15" fill="rgb(239,129,38)" fg:x="922" fg:w="1"/><text x="72.6773%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.6630%" y="373" width="0.0786%" height="15" fill="rgb(207,68,41)" fg:x="925" fg:w="1"/><text x="72.9130%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="72.7416%" y="373" width="0.0786%" height="15" fill="rgb(221,21,7)" fg:x="926" fg:w="1"/><text x="72.9916%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.8987%" y="357" width="0.0786%" height="15" fill="rgb(240,33,25)" fg:x="928" fg:w="1"/><text x="73.1487%" y="367.50"></text></g><g><title>engine::session::internal::Added::find_refs (38 samples, 2.99%)</title><rect x="70.1493%" y="485" width="2.9851%" height="15" fill="rgb(242,119,10)" fg:x="893" fg:w="38"/><text x="70.3993%" y="495.50">eng..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (37 samples, 2.91%)</title><rect x="70.2278%" y="469" width="2.9065%" height="15" fill="rgb(214,149,40)" fg:x="894" fg:w="37"/><text x="70.4778%" y="479.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.63%)</title><rect x="72.5059%" y="453" width="0.6284%" height="15" fill="rgb(228,25,36)" fg:x="923" fg:w="8"/><text x="72.7559%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.63%)</title><rect x="72.5059%" y="437" width="0.6284%" height="15" fill="rgb(222,59,15)" fg:x="923" fg:w="8"/><text x="72.7559%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="72.6630%" y="421" width="0.4713%" height="15" fill="rgb(218,170,0)" fg:x="925" fg:w="6"/><text x="72.9130%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.47%)</title><rect x="72.6630%" y="405" width="0.4713%" height="15" fill="rgb(232,173,23)" fg:x="925" fg:w="6"/><text x="72.9130%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="72.6630%" y="389" width="0.4713%" height="15" fill="rgb(218,116,1)" fg:x="925" fg:w="6"/><text x="72.9130%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="72.8201%" y="373" width="0.3142%" height="15" fill="rgb(207,34,4)" fg:x="927" fg:w="4"/><text x="73.0701%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="72.9772%" y="357" width="0.1571%" height="15" fill="rgb(229,54,52)" fg:x="929" fg:w="2"/><text x="73.2272%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="72.9772%" y="341" width="0.1571%" height="15" fill="rgb(211,86,23)" fg:x="929" fg:w="2"/><text x="73.2272%" y="351.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="72.9772%" y="325" width="0.1571%" height="15" fill="rgb(254,153,34)" fg:x="929" fg:w="2"/><text x="73.2272%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.2129%" y="421" width="0.0786%" height="15" fill="rgb(219,220,14)" fg:x="932" fg:w="1"/><text x="73.4629%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.2129%" y="405" width="0.0786%" height="15" fill="rgb(247,8,26)" fg:x="932" fg:w="1"/><text x="73.4629%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="73.2129%" y="437" width="0.1571%" height="15" fill="rgb(213,129,42)" fg:x="932" fg:w="2"/><text x="73.4629%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.2914%" y="421" width="0.0786%" height="15" fill="rgb(225,95,41)" fg:x="933" fg:w="1"/><text x="73.5414%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.2914%" y="405" width="0.0786%" height="15" fill="rgb(215,134,24)" fg:x="933" fg:w="1"/><text x="73.5414%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.2914%" y="389" width="0.0786%" height="15" fill="rgb(235,23,54)" fg:x="933" fg:w="1"/><text x="73.5414%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.2914%" y="373" width="0.0786%" height="15" fill="rgb(229,96,31)" fg:x="933" fg:w="1"/><text x="73.5414%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.2914%" y="357" width="0.0786%" height="15" fill="rgb(206,111,12)" fg:x="933" fg:w="1"/><text x="73.5414%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.2914%" y="341" width="0.0786%" height="15" fill="rgb(222,177,8)" fg:x="933" fg:w="1"/><text x="73.5414%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.2914%" y="325" width="0.0786%" height="15" fill="rgb(251,36,52)" fg:x="933" fg:w="1"/><text x="73.5414%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.2914%" y="309" width="0.0786%" height="15" fill="rgb(216,182,29)" fg:x="933" fg:w="1"/><text x="73.5414%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.2914%" y="293" width="0.0786%" height="15" fill="rgb(241,145,50)" fg:x="933" fg:w="1"/><text x="73.5414%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.2914%" y="277" width="0.0786%" height="15" fill="rgb(231,71,35)" fg:x="933" fg:w="1"/><text x="73.5414%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.2914%" y="261" width="0.0786%" height="15" fill="rgb(218,22,17)" fg:x="933" fg:w="1"/><text x="73.5414%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.2914%" y="245" width="0.0786%" height="15" fill="rgb(225,227,6)" fg:x="933" fg:w="1"/><text x="73.5414%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.2914%" y="229" width="0.0786%" height="15" fill="rgb(224,204,17)" fg:x="933" fg:w="1"/><text x="73.5414%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="73.2129%" y="469" width="0.2357%" height="15" fill="rgb(227,61,28)" fg:x="932" fg:w="3"/><text x="73.4629%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="73.2129%" y="453" width="0.2357%" height="15" fill="rgb(242,148,23)" fg:x="932" fg:w="3"/><text x="73.4629%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.3700%" y="437" width="0.0786%" height="15" fill="rgb(237,105,33)" fg:x="934" fg:w="1"/><text x="73.6200%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.3700%" y="421" width="0.0786%" height="15" fill="rgb(238,218,40)" fg:x="934" fg:w="1"/><text x="73.6200%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.3700%" y="405" width="0.0786%" height="15" fill="rgb(209,126,11)" fg:x="934" fg:w="1"/><text x="73.6200%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.3700%" y="389" width="0.0786%" height="15" fill="rgb(245,90,11)" fg:x="934" fg:w="1"/><text x="73.6200%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.3700%" y="373" width="0.0786%" height="15" fill="rgb(211,195,10)" fg:x="934" fg:w="1"/><text x="73.6200%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.3700%" y="357" width="0.0786%" height="15" fill="rgb(231,45,45)" fg:x="934" fg:w="1"/><text x="73.6200%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.3700%" y="341" width="0.0786%" height="15" fill="rgb(246,100,43)" fg:x="934" fg:w="1"/><text x="73.6200%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.3700%" y="325" width="0.0786%" height="15" fill="rgb(241,193,8)" fg:x="934" fg:w="1"/><text x="73.6200%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="73.3700%" y="309" width="0.0786%" height="15" fill="rgb(208,76,19)" fg:x="934" fg:w="1"/><text x="73.6200%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="73.3700%" y="293" width="0.0786%" height="15" fill="rgb(223,69,40)" fg:x="934" fg:w="1"/><text x="73.6200%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="73.6057%" y="421" width="0.0786%" height="15" fill="rgb(207,120,39)" fg:x="937" fg:w="1"/><text x="73.8557%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.6842%" y="421" width="0.0786%" height="15" fill="rgb(212,209,28)" fg:x="938" fg:w="1"/><text x="73.9342%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="73.7628%" y="389" width="0.0786%" height="15" fill="rgb(246,82,29)" fg:x="939" fg:w="1"/><text x="74.0128%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.8413%" y="389" width="0.0786%" height="15" fill="rgb(239,6,40)" fg:x="940" fg:w="1"/><text x="74.0913%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.8413%" y="373" width="0.0786%" height="15" fill="rgb(228,181,35)" fg:x="940" fg:w="1"/><text x="74.0913%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="73.9199%" y="341" width="0.0786%" height="15" fill="rgb(238,151,2)" fg:x="941" fg:w="1"/><text x="74.1699%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.9199%" y="325" width="0.0786%" height="15" fill="rgb(236,94,18)" fg:x="941" fg:w="1"/><text x="74.1699%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.9199%" y="309" width="0.0786%" height="15" fill="rgb(208,38,14)" fg:x="941" fg:w="1"/><text x="74.1699%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="73.9984%" y="325" width="0.0786%" height="15" fill="rgb(234,215,27)" fg:x="942" fg:w="1"/><text x="74.2484%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="73.9984%" y="309" width="0.0786%" height="15" fill="rgb(254,211,53)" fg:x="942" fg:w="1"/><text x="74.2484%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.9984%" y="293" width="0.0786%" height="15" fill="rgb(216,175,11)" fg:x="942" fg:w="1"/><text x="74.2484%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.9984%" y="277" width="0.0786%" height="15" fill="rgb(246,179,26)" fg:x="942" fg:w="1"/><text x="74.2484%" y="287.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="73.9984%" y="341" width="0.1571%" height="15" fill="rgb(249,19,52)" fg:x="942" fg:w="2"/><text x="74.2484%" y="351.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.08%)</title><rect x="74.0770%" y="325" width="0.0786%" height="15" fill="rgb(230,42,52)" fg:x="943" fg:w="1"/><text x="74.3270%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.31%)</title><rect x="73.9199%" y="373" width="0.3142%" height="15" fill="rgb(221,171,0)" fg:x="941" fg:w="4"/><text x="74.1699%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="73.9199%" y="357" width="0.3142%" height="15" fill="rgb(222,177,40)" fg:x="941" fg:w="4"/><text x="74.1699%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.1555%" y="341" width="0.0786%" height="15" fill="rgb(247,34,16)" fg:x="944" fg:w="1"/><text x="74.4055%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.1555%" y="325" width="0.0786%" height="15" fill="rgb(213,217,37)" fg:x="944" fg:w="1"/><text x="74.4055%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.2341%" y="341" width="0.0786%" height="15" fill="rgb(231,189,24)" fg:x="945" fg:w="1"/><text x="74.4841%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="74.2341%" y="373" width="0.1571%" height="15" fill="rgb(214,22,9)" fg:x="945" fg:w="2"/><text x="74.4841%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="74.2341%" y="357" width="0.1571%" height="15" fill="rgb(212,70,22)" fg:x="945" fg:w="2"/><text x="74.4841%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="74.3126%" y="341" width="0.0786%" height="15" fill="rgb(249,64,51)" fg:x="946" fg:w="1"/><text x="74.5626%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="74.3126%" y="325" width="0.0786%" height="15" fill="rgb(249,148,20)" fg:x="946" fg:w="1"/><text x="74.5626%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="74.3126%" y="309" width="0.0786%" height="15" fill="rgb(246,46,48)" fg:x="946" fg:w="1"/><text x="74.5626%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.4698%" y="277" width="0.0786%" height="15" fill="rgb(217,34,48)" fg:x="948" fg:w="1"/><text x="74.7198%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.4698%" y="261" width="0.0786%" height="15" fill="rgb(222,45,26)" fg:x="948" fg:w="1"/><text x="74.7198%" y="271.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="74.4698%" y="325" width="0.1571%" height="15" fill="rgb(230,201,36)" fg:x="948" fg:w="2"/><text x="74.7198%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="74.4698%" y="309" width="0.1571%" height="15" fill="rgb(217,30,43)" fg:x="948" fg:w="2"/><text x="74.7198%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.4698%" y="293" width="0.1571%" height="15" fill="rgb(230,197,40)" fg:x="948" fg:w="2"/><text x="74.7198%" y="303.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="74.5483%" y="277" width="0.0786%" height="15" fill="rgb(239,181,18)" fg:x="949" fg:w="1"/><text x="74.7983%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (13 samples, 1.02%)</title><rect x="73.7628%" y="421" width="1.0212%" height="15" fill="rgb(222,60,39)" fg:x="939" fg:w="13"/><text x="74.0128%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.02%)</title><rect x="73.7628%" y="405" width="1.0212%" height="15" fill="rgb(210,60,22)" fg:x="939" fg:w="13"/><text x="74.0128%" y="415.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (11 samples, 0.86%)</title><rect x="73.9199%" y="389" width="0.8641%" height="15" fill="rgb(239,213,48)" fg:x="941" fg:w="11"/><text x="74.1699%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="74.3912%" y="373" width="0.3928%" height="15" fill="rgb(253,214,23)" fg:x="947" fg:w="5"/><text x="74.6412%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="74.3912%" y="357" width="0.3928%" height="15" fill="rgb(211,98,45)" fg:x="947" fg:w="5"/><text x="74.6412%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.31%)</title><rect x="74.4698%" y="341" width="0.3142%" height="15" fill="rgb(239,130,44)" fg:x="948" fg:w="4"/><text x="74.7198%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.6269%" y="325" width="0.1571%" height="15" fill="rgb(222,181,35)" fg:x="950" fg:w="2"/><text x="74.8769%" y="335.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="74.7054%" y="309" width="0.0786%" height="15" fill="rgb(219,219,49)" fg:x="951" fg:w="1"/><text x="74.9554%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="74.9411%" y="389" width="0.0786%" height="15" fill="rgb(227,161,51)" fg:x="954" fg:w="1"/><text x="75.1911%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.9411%" y="373" width="0.0786%" height="15" fill="rgb(239,112,27)" fg:x="954" fg:w="1"/><text x="75.1911%" y="383.50"></text></g><g><title>kernel::model::entity::Entity::from_value (21 samples, 1.65%)</title><rect x="73.4485%" y="469" width="1.6496%" height="15" fill="rgb(248,122,18)" fg:x="935" fg:w="21"/><text x="73.6985%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (21 samples, 1.65%)</title><rect x="73.4485%" y="453" width="1.6496%" height="15" fill="rgb(245,130,23)" fg:x="935" fg:w="21"/><text x="73.6985%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (21 samples, 1.65%)</title><rect x="73.4485%" y="437" width="1.6496%" height="15" fill="rgb(211,225,28)" fg:x="935" fg:w="21"/><text x="73.6985%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="74.7840%" y="421" width="0.3142%" height="15" fill="rgb(242,105,44)" fg:x="952" fg:w="4"/><text x="75.0340%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="74.7840%" y="405" width="0.3142%" height="15" fill="rgb(216,183,46)" fg:x="952" fg:w="4"/><text x="75.0340%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="75.0196%" y="389" width="0.0786%" height="15" fill="rgb(227,112,9)" fg:x="955" fg:w="1"/><text x="75.2696%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="75.0196%" y="373" width="0.0786%" height="15" fill="rgb(244,21,0)" fg:x="955" fg:w="1"/><text x="75.2696%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="75.0982%" y="325" width="0.1571%" height="15" fill="rgb(236,185,14)" fg:x="956" fg:w="2"/><text x="75.3482%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.0982%" y="309" width="0.1571%" height="15" fill="rgb(236,170,30)" fg:x="956" fg:w="2"/><text x="75.3482%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.1767%" y="293" width="0.0786%" height="15" fill="rgb(209,198,51)" fg:x="957" fg:w="1"/><text x="75.4267%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.1767%" y="277" width="0.0786%" height="15" fill="rgb(205,171,26)" fg:x="957" fg:w="1"/><text x="75.4267%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="75.0982%" y="341" width="0.2357%" height="15" fill="rgb(246,41,49)" fg:x="956" fg:w="3"/><text x="75.3482%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.2553%" y="325" width="0.0786%" height="15" fill="rgb(240,229,12)" fg:x="958" fg:w="1"/><text x="75.5053%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.2553%" y="309" width="0.0786%" height="15" fill="rgb(212,8,54)" fg:x="958" fg:w="1"/><text x="75.5053%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.2553%" y="293" width="0.0786%" height="15" fill="rgb(230,114,13)" fg:x="958" fg:w="1"/><text x="75.5053%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.2553%" y="277" width="0.0786%" height="15" fill="rgb(229,130,28)" fg:x="958" fg:w="1"/><text x="75.5053%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.2553%" y="261" width="0.0786%" height="15" fill="rgb(206,139,15)" fg:x="958" fg:w="1"/><text x="75.5053%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="75.0982%" y="357" width="0.3142%" height="15" fill="rgb(241,188,35)" fg:x="956" fg:w="4"/><text x="75.3482%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.3339%" y="341" width="0.0786%" height="15" fill="rgb(208,224,26)" fg:x="959" fg:w="1"/><text x="75.5839%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="75.3339%" y="325" width="0.0786%" height="15" fill="rgb(251,131,28)" fg:x="959" fg:w="1"/><text x="75.5839%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.39%)</title><rect x="75.0982%" y="405" width="0.3928%" height="15" fill="rgb(208,153,1)" fg:x="956" fg:w="5"/><text x="75.3482%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="75.0982%" y="389" width="0.3928%" height="15" fill="rgb(234,33,36)" fg:x="956" fg:w="5"/><text x="75.3482%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.39%)</title><rect x="75.0982%" y="373" width="0.3928%" height="15" fill="rgb(246,42,29)" fg:x="956" fg:w="5"/><text x="75.3482%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.4124%" y="357" width="0.0786%" height="15" fill="rgb(251,114,16)" fg:x="960" fg:w="1"/><text x="75.6624%" y="367.50"></text></g><g><title>engine::session::Session::load_entity (69 samples, 5.42%)</title><rect x="70.1493%" y="501" width="5.4203%" height="15" fill="rgb(233,13,38)" fg:x="893" fg:w="69"/><text x="70.3993%" y="511.50">engine:..</text></g><g><title>engine::session::internal::Entities::add_persisted (31 samples, 2.44%)</title><rect x="73.1343%" y="485" width="2.4352%" height="15" fill="rgb(247,120,19)" fg:x="931" fg:w="31"/><text x="73.3843%" y="495.50">en..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (6 samples, 0.47%)</title><rect x="75.0982%" y="469" width="0.4713%" height="15" fill="rgb(205,11,16)" fg:x="956" fg:w="6"/><text x="75.3482%" y="479.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.47%)</title><rect x="75.0982%" y="453" width="0.4713%" height="15" fill="rgb(228,185,19)" fg:x="956" fg:w="6"/><text x="75.3482%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.47%)</title><rect x="75.0982%" y="437" width="0.4713%" height="15" fill="rgb(239,88,52)" fg:x="956" fg:w="6"/><text x="75.3482%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.47%)</title><rect x="75.0982%" y="421" width="0.4713%" height="15" fill="rgb(219,23,1)" fg:x="956" fg:w="6"/><text x="75.3482%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.4910%" y="405" width="0.0786%" height="15" fill="rgb(253,177,16)" fg:x="961" fg:w="1"/><text x="75.7410%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.4910%" y="389" width="0.0786%" height="15" fill="rgb(225,150,40)" fg:x="961" fg:w="1"/><text x="75.7410%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="75.4910%" y="373" width="0.0786%" height="15" fill="rgb(208,108,30)" fg:x="961" fg:w="1"/><text x="75.7410%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.5695%" y="437" width="0.1571%" height="15" fill="rgb(214,122,4)" fg:x="962" fg:w="2"/><text x="75.8195%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.5695%" y="421" width="0.1571%" height="15" fill="rgb(229,74,37)" fg:x="962" fg:w="2"/><text x="75.8195%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.5695%" y="405" width="0.1571%" height="15" fill="rgb(233,61,41)" fg:x="962" fg:w="2"/><text x="75.8195%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.6481%" y="389" width="0.0786%" height="15" fill="rgb(238,191,5)" fg:x="963" fg:w="1"/><text x="75.8981%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="75.5695%" y="453" width="0.2357%" height="15" fill="rgb(233,78,24)" fg:x="962" fg:w="3"/><text x="75.8195%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.7266%" y="437" width="0.0786%" height="15" fill="rgb(211,142,8)" fg:x="964" fg:w="1"/><text x="75.9766%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.7266%" y="421" width="0.0786%" height="15" fill="rgb(253,38,53)" fg:x="964" fg:w="1"/><text x="75.9766%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.7266%" y="405" width="0.0786%" height="15" fill="rgb(234,63,51)" fg:x="964" fg:w="1"/><text x="75.9766%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.7266%" y="389" width="0.0786%" height="15" fill="rgb(205,23,31)" fg:x="964" fg:w="1"/><text x="75.9766%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.7266%" y="373" width="0.0786%" height="15" fill="rgb(210,184,50)" fg:x="964" fg:w="1"/><text x="75.9766%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.7266%" y="357" width="0.0786%" height="15" fill="rgb(222,112,26)" fg:x="964" fg:w="1"/><text x="75.9766%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.7266%" y="341" width="0.0786%" height="15" fill="rgb(250,98,18)" fg:x="964" fg:w="1"/><text x="75.9766%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="75.7266%" y="325" width="0.0786%" height="15" fill="rgb(250,34,12)" fg:x="964" fg:w="1"/><text x="75.9766%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="75.7266%" y="309" width="0.0786%" height="15" fill="rgb(236,141,30)" fg:x="964" fg:w="1"/><text x="75.9766%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="75.7266%" y="293" width="0.0786%" height="15" fill="rgb(246,134,38)" fg:x="964" fg:w="1"/><text x="75.9766%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="75.7266%" y="277" width="0.0786%" height="15" fill="rgb(240,114,4)" fg:x="964" fg:w="1"/><text x="75.9766%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.7266%" y="261" width="0.0786%" height="15" fill="rgb(243,113,39)" fg:x="964" fg:w="1"/><text x="75.9766%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="75.8052%" y="453" width="0.2357%" height="15" fill="rgb(239,215,4)" fg:x="965" fg:w="3"/><text x="76.0552%" y="463.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="75.8837%" y="437" width="0.1571%" height="15" fill="rgb(236,229,45)" fg:x="966" fg:w="2"/><text x="76.1337%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="75.8837%" y="421" width="0.1571%" height="15" fill="rgb(242,2,6)" fg:x="966" fg:w="2"/><text x="76.1337%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.9623%" y="405" width="0.0786%" height="15" fill="rgb(239,108,21)" fg:x="967" fg:w="1"/><text x="76.2123%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9623%" y="389" width="0.0786%" height="15" fill="rgb(215,168,34)" fg:x="967" fg:w="1"/><text x="76.2123%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.9623%" y="373" width="0.0786%" height="15" fill="rgb(238,31,17)" fg:x="967" fg:w="1"/><text x="76.2123%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9623%" y="357" width="0.0786%" height="15" fill="rgb(220,133,11)" fg:x="967" fg:w="1"/><text x="76.2123%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.9623%" y="341" width="0.0786%" height="15" fill="rgb(212,158,23)" fg:x="967" fg:w="1"/><text x="76.2123%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="76.1194%" y="405" width="0.0786%" height="15" fill="rgb(223,172,7)" fg:x="969" fg:w="1"/><text x="76.3694%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.1980%" y="373" width="0.0786%" height="15" fill="rgb(244,3,52)" fg:x="970" fg:w="1"/><text x="76.4480%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.1980%" y="357" width="0.0786%" height="15" fill="rgb(207,69,27)" fg:x="970" fg:w="1"/><text x="76.4480%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="76.2765%" y="357" width="0.2357%" height="15" fill="rgb(213,136,45)" fg:x="971" fg:w="3"/><text x="76.5265%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="76.2765%" y="341" width="0.2357%" height="15" fill="rgb(218,79,17)" fg:x="971" fg:w="3"/><text x="76.5265%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="76.3551%" y="325" width="0.1571%" height="15" fill="rgb(216,106,36)" fg:x="972" fg:w="2"/><text x="76.6051%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.3551%" y="309" width="0.1571%" height="15" fill="rgb(251,27,45)" fg:x="972" fg:w="2"/><text x="76.6051%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.4336%" y="293" width="0.0786%" height="15" fill="rgb(232,21,34)" fg:x="973" fg:w="1"/><text x="76.6836%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.4336%" y="277" width="0.0786%" height="15" fill="rgb(249,191,16)" fg:x="973" fg:w="1"/><text x="76.6836%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.47%)</title><rect x="76.1980%" y="405" width="0.4713%" height="15" fill="rgb(224,88,20)" fg:x="970" fg:w="6"/><text x="76.4480%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.47%)</title><rect x="76.1980%" y="389" width="0.4713%" height="15" fill="rgb(237,93,27)" fg:x="970" fg:w="6"/><text x="76.4480%" y="399.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.39%)</title><rect x="76.2765%" y="373" width="0.3928%" height="15" fill="rgb(226,198,48)" fg:x="971" fg:w="5"/><text x="76.5265%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.5122%" y="357" width="0.1571%" height="15" fill="rgb(207,162,53)" fg:x="974" fg:w="2"/><text x="76.7622%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.5907%" y="341" width="0.0786%" height="15" fill="rgb(207,169,9)" fg:x="975" fg:w="1"/><text x="76.8407%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="76.5907%" y="325" width="0.0786%" height="15" fill="rgb(224,166,46)" fg:x="975" fg:w="1"/><text x="76.8407%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.5907%" y="309" width="0.0786%" height="15" fill="rgb(233,26,6)" fg:x="975" fg:w="1"/><text x="76.8407%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.5907%" y="293" width="0.0786%" height="15" fill="rgb(218,106,45)" fg:x="975" fg:w="1"/><text x="76.8407%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.5907%" y="277" width="0.0786%" height="15" fill="rgb(240,217,4)" fg:x="975" fg:w="1"/><text x="76.8407%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.5907%" y="261" width="0.0786%" height="15" fill="rgb(246,171,10)" fg:x="975" fg:w="1"/><text x="76.8407%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.5907%" y="245" width="0.0786%" height="15" fill="rgb(223,197,30)" fg:x="975" fg:w="1"/><text x="76.8407%" y="255.50"></text></g><g><title>kernel::model::entity::Entity::from_value (9 samples, 0.71%)</title><rect x="76.0408%" y="453" width="0.7070%" height="15" fill="rgb(207,92,16)" fg:x="968" fg:w="9"/><text x="76.2908%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.71%)</title><rect x="76.0408%" y="437" width="0.7070%" height="15" fill="rgb(211,6,44)" fg:x="968" fg:w="9"/><text x="76.2908%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.71%)</title><rect x="76.0408%" y="421" width="0.7070%" height="15" fill="rgb(219,139,2)" fg:x="968" fg:w="9"/><text x="76.2908%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.6693%" y="405" width="0.0786%" height="15" fill="rgb(224,103,21)" fg:x="976" fg:w="1"/><text x="76.9193%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.6693%" y="389" width="0.0786%" height="15" fill="rgb(254,110,48)" fg:x="976" fg:w="1"/><text x="76.9193%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="76.6693%" y="373" width="0.0786%" height="15" fill="rgb(212,88,19)" fg:x="976" fg:w="1"/><text x="76.9193%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="76.6693%" y="357" width="0.0786%" height="15" fill="rgb(248,103,6)" fg:x="976" fg:w="1"/><text x="76.9193%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="76.7478%" y="293" width="0.2357%" height="15" fill="rgb(214,53,46)" fg:x="977" fg:w="3"/><text x="76.9978%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.8264%" y="277" width="0.1571%" height="15" fill="rgb(236,190,24)" fg:x="978" fg:w="2"/><text x="77.0764%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.8264%" y="261" width="0.1571%" height="15" fill="rgb(254,58,28)" fg:x="978" fg:w="2"/><text x="77.0764%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.8264%" y="245" width="0.1571%" height="15" fill="rgb(243,63,27)" fg:x="978" fg:w="2"/><text x="77.0764%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="76.8264%" y="229" width="0.1571%" height="15" fill="rgb(206,81,20)" fg:x="978" fg:w="2"/><text x="77.0764%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.31%)</title><rect x="76.7478%" y="357" width="0.3142%" height="15" fill="rgb(252,69,51)" fg:x="977" fg:w="4"/><text x="76.9978%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="76.7478%" y="341" width="0.3142%" height="15" fill="rgb(222,213,4)" fg:x="977" fg:w="4"/><text x="76.9978%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.31%)</title><rect x="76.7478%" y="325" width="0.3142%" height="15" fill="rgb(226,198,12)" fg:x="977" fg:w="4"/><text x="76.9978%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="76.7478%" y="309" width="0.3142%" height="15" fill="rgb(248,115,11)" fg:x="977" fg:w="4"/><text x="76.9978%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.9835%" y="293" width="0.0786%" height="15" fill="rgb(221,148,54)" fg:x="980" fg:w="1"/><text x="77.2335%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.9835%" y="277" width="0.0786%" height="15" fill="rgb(214,209,51)" fg:x="980" fg:w="1"/><text x="77.2335%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="76.7478%" y="373" width="0.3928%" height="15" fill="rgb(249,116,53)" fg:x="977" fg:w="5"/><text x="76.9978%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.0621%" y="357" width="0.0786%" height="15" fill="rgb(248,170,1)" fg:x="981" fg:w="1"/><text x="77.3121%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.0621%" y="341" width="0.0786%" height="15" fill="rgb(244,105,10)" fg:x="981" fg:w="1"/><text x="77.3121%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.47%)</title><rect x="76.7478%" y="389" width="0.4713%" height="15" fill="rgb(229,100,5)" fg:x="977" fg:w="6"/><text x="76.9978%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.1406%" y="373" width="0.0786%" height="15" fill="rgb(233,221,39)" fg:x="982" fg:w="1"/><text x="77.3906%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="77.2977%" y="373" width="0.0786%" height="15" fill="rgb(233,88,21)" fg:x="984" fg:w="1"/><text x="77.5477%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="77.2192%" y="389" width="0.2357%" height="15" fill="rgb(206,13,0)" fg:x="983" fg:w="3"/><text x="77.4692%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.3763%" y="373" width="0.0786%" height="15" fill="rgb(242,15,35)" fg:x="985" fg:w="1"/><text x="77.6263%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (987 samples, 77.53%)</title><rect x="0.0000%" y="581" width="77.5334%" height="15" fill="rgb(247,142,41)" fg:x="0" fg:w="987"/><text x="0.2500%" y="591.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (987 samples, 77.53%)</title><rect x="0.0000%" y="565" width="77.5334%" height="15" fill="rgb(245,51,29)" fg:x="0" fg:w="987"/><text x="0.2500%" y="575.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (986 samples, 77.45%)</title><rect x="0.0786%" y="549" width="77.4548%" height="15" fill="rgb(228,209,43)" fg:x="1" fg:w="986"/><text x="0.3286%" y="559.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (150 samples, 11.78%)</title><rect x="65.7502%" y="533" width="11.7832%" height="15" fill="rgb(233,185,9)" fg:x="837" fg:w="150"/><text x="66.0002%" y="543.50">engine::session::..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (150 samples, 11.78%)</title><rect x="65.7502%" y="517" width="11.7832%" height="15" fill="rgb(226,93,0)" fg:x="837" fg:w="150"/><text x="66.0002%" y="527.50">engine::session::..</text></g><g><title>kernel::model::EntityPtrResolver::world (25 samples, 1.96%)</title><rect x="75.5695%" y="501" width="1.9639%" height="15" fill="rgb(245,194,43)" fg:x="962" fg:w="25"/><text x="75.8195%" y="511.50">k..</text></g><g><title>engine::session::Session::load_entity (25 samples, 1.96%)</title><rect x="75.5695%" y="485" width="1.9639%" height="15" fill="rgb(211,145,34)" fg:x="962" fg:w="25"/><text x="75.8195%" y="495.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (25 samples, 1.96%)</title><rect x="75.5695%" y="469" width="1.9639%" height="15" fill="rgb(231,228,28)" fg:x="962" fg:w="25"/><text x="75.8195%" y="479.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (10 samples, 0.79%)</title><rect x="76.7478%" y="453" width="0.7855%" height="15" fill="rgb(236,149,4)" fg:x="977" fg:w="10"/><text x="76.9978%" y="463.50"></text></g><g><title>serde_json::de::from_trait (10 samples, 0.79%)</title><rect x="76.7478%" y="437" width="0.7855%" height="15" fill="rgb(234,114,38)" fg:x="977" fg:w="10"/><text x="76.9978%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.79%)</title><rect x="76.7478%" y="421" width="0.7855%" height="15" fill="rgb(246,132,51)" fg:x="977" fg:w="10"/><text x="76.9978%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.79%)</title><rect x="76.7478%" y="405" width="0.7855%" height="15" fill="rgb(251,137,22)" fg:x="977" fg:w="10"/><text x="76.9978%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.4548%" y="389" width="0.0786%" height="15" fill="rgb(243,59,52)" fg:x="986" fg:w="1"/><text x="77.7048%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.4548%" y="373" width="0.0786%" height="15" fill="rgb(239,56,28)" fg:x="986" fg:w="1"/><text x="77.7048%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="77.4548%" y="357" width="0.0786%" height="15" fill="rgb(218,168,27)" fg:x="986" fg:w="1"/><text x="77.7048%" y="367.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="77.5334%" y="517" width="0.0786%" height="15" fill="rgb(232,165,11)" fg:x="987" fg:w="1"/><text x="77.7834%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.5334%" y="501" width="0.0786%" height="15" fill="rgb(253,55,41)" fg:x="987" fg:w="1"/><text x="77.7834%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.6119%" y="485" width="0.0786%" height="15" fill="rgb(233,206,24)" fg:x="988" fg:w="1"/><text x="77.8619%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.7690%" y="421" width="0.0786%" height="15" fill="rgb(220,199,8)" fg:x="990" fg:w="1"/><text x="78.0190%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.8476%" y="421" width="0.0786%" height="15" fill="rgb(254,65,26)" fg:x="991" fg:w="1"/><text x="78.0976%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.8476%" y="405" width="0.0786%" height="15" fill="rgb(253,102,23)" fg:x="991" fg:w="1"/><text x="78.0976%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.31%)</title><rect x="77.6905%" y="453" width="0.3142%" height="15" fill="rgb(231,103,35)" fg:x="989" fg:w="4"/><text x="77.9405%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="77.7690%" y="437" width="0.2357%" height="15" fill="rgb(238,26,10)" fg:x="990" fg:w="3"/><text x="78.0190%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.9262%" y="421" width="0.0786%" height="15" fill="rgb(234,191,34)" fg:x="992" fg:w="1"/><text x="78.1762%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.9262%" y="405" width="0.0786%" height="15" fill="rgb(206,210,9)" fg:x="992" fg:w="1"/><text x="78.1762%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.1618%" y="373" width="0.0786%" height="15" fill="rgb(219,155,3)" fg:x="995" fg:w="1"/><text x="78.4118%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="78.1618%" y="405" width="0.1571%" height="15" fill="rgb(221,62,52)" fg:x="995" fg:w="2"/><text x="78.4118%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="78.1618%" y="389" width="0.1571%" height="15" fill="rgb(215,197,36)" fg:x="995" fg:w="2"/><text x="78.4118%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.2404%" y="373" width="0.0786%" height="15" fill="rgb(226,222,6)" fg:x="996" fg:w="1"/><text x="78.4904%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.2404%" y="357" width="0.0786%" height="15" fill="rgb(215,58,28)" fg:x="996" fg:w="1"/><text x="78.4904%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.3189%" y="405" width="0.0786%" height="15" fill="rgb(212,148,2)" fg:x="997" fg:w="1"/><text x="78.5689%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.3975%" y="405" width="0.0786%" height="15" fill="rgb(208,21,42)" fg:x="998" fg:w="1"/><text x="78.6475%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.47%)</title><rect x="78.0833%" y="437" width="0.4713%" height="15" fill="rgb(209,107,26)" fg:x="994" fg:w="6"/><text x="78.3333%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="78.0833%" y="421" width="0.4713%" height="15" fill="rgb(254,60,47)" fg:x="994" fg:w="6"/><text x="78.3333%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.4760%" y="405" width="0.0786%" height="15" fill="rgb(207,226,45)" fg:x="999" fg:w="1"/><text x="78.7260%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.4760%" y="389" width="0.0786%" height="15" fill="rgb(223,124,22)" fg:x="999" fg:w="1"/><text x="78.7260%" y="399.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.10%)</title><rect x="77.5334%" y="533" width="1.0998%" height="15" fill="rgb(240,162,13)" fg:x="987" fg:w="14"/><text x="77.7834%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (13 samples, 1.02%)</title><rect x="77.6119%" y="517" width="1.0212%" height="15" fill="rgb(244,199,31)" fg:x="988" fg:w="13"/><text x="77.8619%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.02%)</title><rect x="77.6119%" y="501" width="1.0212%" height="15" fill="rgb(207,92,16)" fg:x="988" fg:w="13"/><text x="77.8619%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (12 samples, 0.94%)</title><rect x="77.6905%" y="485" width="0.9427%" height="15" fill="rgb(215,31,19)" fg:x="989" fg:w="12"/><text x="77.9405%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.94%)</title><rect x="77.6905%" y="469" width="0.9427%" height="15" fill="rgb(245,118,14)" fg:x="989" fg:w="12"/><text x="77.9405%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.63%)</title><rect x="78.0047%" y="453" width="0.6284%" height="15" fill="rgb(248,12,46)" fg:x="993" fg:w="8"/><text x="78.2547%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.5546%" y="437" width="0.0786%" height="15" fill="rgb(209,119,0)" fg:x="1000" fg:w="1"/><text x="78.8046%" y="447.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="78.6332%" y="485" width="0.0786%" height="15" fill="rgb(254,51,44)" fg:x="1001" fg:w="1"/><text x="78.8832%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.6332%" y="469" width="0.0786%" height="15" fill="rgb(253,182,35)" fg:x="1001" fg:w="1"/><text x="78.8832%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="78.7903%" y="437" width="0.1571%" height="15" fill="rgb(205,198,39)" fg:x="1003" fg:w="2"/><text x="79.0403%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="78.7903%" y="421" width="0.1571%" height="15" fill="rgb(251,175,48)" fg:x="1003" fg:w="2"/><text x="79.0403%" y="431.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="78.7903%" y="405" width="0.1571%" height="15" fill="rgb(239,38,17)" fg:x="1003" fg:w="2"/><text x="79.0403%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="78.7903%" y="389" width="0.1571%" height="15" fill="rgb(212,101,8)" fg:x="1003" fg:w="2"/><text x="79.0403%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="78.7903%" y="373" width="0.1571%" height="15" fill="rgb(228,35,17)" fg:x="1003" fg:w="2"/><text x="79.0403%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="78.7903%" y="357" width="0.1571%" height="15" fill="rgb(214,95,8)" fg:x="1003" fg:w="2"/><text x="79.0403%" y="367.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="78.7903%" y="341" width="0.1571%" height="15" fill="rgb(210,176,35)" fg:x="1003" fg:w="2"/><text x="79.0403%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="78.7903%" y="325" width="0.1571%" height="15" fill="rgb(226,4,3)" fg:x="1003" fg:w="2"/><text x="79.0403%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="78.7903%" y="309" width="0.1571%" height="15" fill="rgb(232,133,14)" fg:x="1003" fg:w="2"/><text x="79.0403%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="78.7903%" y="293" width="0.1571%" height="15" fill="rgb(250,191,8)" fg:x="1003" fg:w="2"/><text x="79.0403%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="78.7903%" y="277" width="0.1571%" height="15" fill="rgb(213,12,45)" fg:x="1003" fg:w="2"/><text x="79.0403%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="78.7903%" y="261" width="0.1571%" height="15" fill="rgb(233,78,26)" fg:x="1003" fg:w="2"/><text x="79.0403%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="78.7903%" y="245" width="0.1571%" height="15" fill="rgb(245,222,11)" fg:x="1003" fg:w="2"/><text x="79.0403%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="78.7903%" y="229" width="0.1571%" height="15" fill="rgb(216,174,12)" fg:x="1003" fg:w="2"/><text x="79.0403%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="78.7903%" y="213" width="0.1571%" height="15" fill="rgb(213,15,9)" fg:x="1003" fg:w="2"/><text x="79.0403%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="78.7903%" y="197" width="0.1571%" height="15" fill="rgb(238,103,32)" fg:x="1003" fg:w="2"/><text x="79.0403%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="78.7903%" y="181" width="0.1571%" height="15" fill="rgb(245,85,15)" fg:x="1003" fg:w="2"/><text x="79.0403%" y="191.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="78.7903%" y="165" width="0.1571%" height="15" fill="rgb(254,204,5)" fg:x="1003" fg:w="2"/><text x="79.0403%" y="175.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="78.7903%" y="149" width="0.1571%" height="15" fill="rgb(231,178,15)" fg:x="1003" fg:w="2"/><text x="79.0403%" y="159.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (9 samples, 0.71%)</title><rect x="78.7117%" y="453" width="0.7070%" height="15" fill="rgb(248,151,3)" fg:x="1002" fg:w="9"/><text x="78.9617%" y="463.50"></text></g><g><title>libloading::safe::Library::new (6 samples, 0.47%)</title><rect x="78.9474%" y="437" width="0.4713%" height="15" fill="rgb(250,139,13)" fg:x="1005" fg:w="6"/><text x="79.1974%" y="447.50"></text></g><g><title>dlopen (5 samples, 0.39%)</title><rect x="79.0259%" y="421" width="0.3928%" height="15" fill="rgb(243,107,53)" fg:x="1006" fg:w="5"/><text x="79.2759%" y="431.50"></text></g><g><title>_dl_catch_error (5 samples, 0.39%)</title><rect x="79.0259%" y="405" width="0.3928%" height="15" fill="rgb(232,81,15)" fg:x="1006" fg:w="5"/><text x="79.2759%" y="415.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.39%)</title><rect x="79.0259%" y="389" width="0.3928%" height="15" fill="rgb(225,187,48)" fg:x="1006" fg:w="5"/><text x="79.2759%" y="399.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.31%)</title><rect x="79.1045%" y="373" width="0.3142%" height="15" fill="rgb(205,116,12)" fg:x="1007" fg:w="4"/><text x="79.3545%" y="383.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.31%)</title><rect x="79.1045%" y="357" width="0.3142%" height="15" fill="rgb(220,222,31)" fg:x="1007" fg:w="4"/><text x="79.3545%" y="367.50"></text></g><g><title>_dl_signal_error (1 samples, 0.08%)</title><rect x="79.3401%" y="341" width="0.0786%" height="15" fill="rgb(233,187,49)" fg:x="1010" fg:w="1"/><text x="79.5901%" y="351.50"></text></g><g><title>_dl_exception_create (1 samples, 0.08%)</title><rect x="79.3401%" y="325" width="0.0786%" height="15" fill="rgb(211,168,53)" fg:x="1010" fg:w="1"/><text x="79.5901%" y="335.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (11 samples, 0.86%)</title><rect x="78.7117%" y="469" width="0.8641%" height="15" fill="rgb(206,160,16)" fg:x="1002" fg:w="11"/><text x="78.9617%" y="479.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="79.4187%" y="453" width="0.1571%" height="15" fill="rgb(254,164,13)" fg:x="1011" fg:w="2"/><text x="79.6687%" y="463.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="79.4187%" y="437" width="0.1571%" height="15" fill="rgb(229,45,30)" fg:x="1011" fg:w="2"/><text x="79.6687%" y="447.50"></text></g><g><title>engine::session::Session::initialize (12 samples, 0.94%)</title><rect x="78.7117%" y="485" width="0.9427%" height="15" fill="rgb(237,32,10)" fg:x="1002" fg:w="12"/><text x="78.9617%" y="495.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="79.5758%" y="469" width="0.0786%" height="15" fill="rgb(251,20,47)" fg:x="1013" fg:w="1"/><text x="79.8258%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="79.5758%" y="453" width="0.0786%" height="15" fill="rgb(251,116,12)" fg:x="1013" fg:w="1"/><text x="79.8258%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.5758%" y="437" width="0.0786%" height="15" fill="rgb(214,227,27)" fg:x="1013" fg:w="1"/><text x="79.8258%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.5758%" y="421" width="0.0786%" height="15" fill="rgb(248,10,53)" fg:x="1013" fg:w="1"/><text x="79.8258%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.5758%" y="405" width="0.0786%" height="15" fill="rgb(221,176,25)" fg:x="1013" fg:w="1"/><text x="79.8258%" y="415.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (14 samples, 1.10%)</title><rect x="78.6332%" y="533" width="1.0998%" height="15" fill="rgb(205,70,46)" fg:x="1001" fg:w="14"/><text x="78.8832%" y="543.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (14 samples, 1.10%)</title><rect x="78.6332%" y="517" width="1.0998%" height="15" fill="rgb(217,45,38)" fg:x="1001" fg:w="14"/><text x="78.8832%" y="527.50"></text></g><g><title>engine::session::Session::new (14 samples, 1.10%)</title><rect x="78.6332%" y="501" width="1.0998%" height="15" fill="rgb(243,6,54)" fg:x="1001" fg:w="14"/><text x="78.8832%" y="511.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="79.6544%" y="485" width="0.0786%" height="15" fill="rgb(242,76,23)" fg:x="1014" fg:w="1"/><text x="79.9044%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="79.6544%" y="469" width="0.0786%" height="15" fill="rgb(239,166,0)" fg:x="1014" fg:w="1"/><text x="79.9044%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.6544%" y="453" width="0.0786%" height="15" fill="rgb(238,174,32)" fg:x="1014" fg:w="1"/><text x="79.9044%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.6544%" y="437" width="0.0786%" height="15" fill="rgb(238,124,44)" fg:x="1014" fg:w="1"/><text x="79.9044%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.6544%" y="421" width="0.0786%" height="15" fill="rgb(206,185,9)" fg:x="1014" fg:w="1"/><text x="79.9044%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="79.7329%" y="485" width="0.1571%" height="15" fill="rgb(215,157,17)" fg:x="1015" fg:w="2"/><text x="79.9829%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.31%)</title><rect x="79.7329%" y="501" width="0.3142%" height="15" fill="rgb(251,17,29)" fg:x="1015" fg:w="4"/><text x="79.9829%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="79.8900%" y="485" width="0.1571%" height="15" fill="rgb(227,113,27)" fg:x="1017" fg:w="2"/><text x="80.1400%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="79.8900%" y="469" width="0.1571%" height="15" fill="rgb(217,226,24)" fg:x="1017" fg:w="2"/><text x="80.1400%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="80.0471%" y="469" width="0.1571%" height="15" fill="rgb(251,99,38)" fg:x="1019" fg:w="2"/><text x="80.2971%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="80.0471%" y="453" width="0.1571%" height="15" fill="rgb(231,147,19)" fg:x="1019" fg:w="2"/><text x="80.2971%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="80.0471%" y="437" width="0.1571%" height="15" fill="rgb(230,86,8)" fg:x="1019" fg:w="2"/><text x="80.2971%" y="447.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="80.0471%" y="421" width="0.1571%" height="15" fill="rgb(237,159,39)" fg:x="1019" fg:w="2"/><text x="80.2971%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="80.2042%" y="389" width="0.1571%" height="15" fill="rgb(247,179,47)" fg:x="1021" fg:w="2"/><text x="80.4542%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.2828%" y="373" width="0.0786%" height="15" fill="rgb(253,152,26)" fg:x="1022" fg:w="1"/><text x="80.5328%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.2828%" y="357" width="0.0786%" height="15" fill="rgb(222,211,15)" fg:x="1022" fg:w="1"/><text x="80.5328%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.2828%" y="341" width="0.0786%" height="15" fill="rgb(236,193,6)" fg:x="1022" fg:w="1"/><text x="80.5328%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.2828%" y="325" width="0.0786%" height="15" fill="rgb(226,206,10)" fg:x="1022" fg:w="1"/><text x="80.5328%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.2828%" y="309" width="0.0786%" height="15" fill="rgb(213,125,22)" fg:x="1022" fg:w="1"/><text x="80.5328%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.2828%" y="293" width="0.0786%" height="15" fill="rgb(221,66,28)" fg:x="1022" fg:w="1"/><text x="80.5328%" y="303.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.31%)</title><rect x="80.2042%" y="405" width="0.3142%" height="15" fill="rgb(222,84,53)" fg:x="1021" fg:w="4"/><text x="80.4542%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="80.3614%" y="389" width="0.1571%" height="15" fill="rgb(243,50,15)" fg:x="1023" fg:w="2"/><text x="80.6114%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.4399%" y="373" width="0.0786%" height="15" fill="rgb(208,184,23)" fg:x="1024" fg:w="1"/><text x="80.6899%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.4399%" y="357" width="0.0786%" height="15" fill="rgb(221,83,2)" fg:x="1024" fg:w="1"/><text x="80.6899%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="80.5185%" y="389" width="0.3142%" height="15" fill="rgb(236,53,24)" fg:x="1025" fg:w="4"/><text x="80.7685%" y="399.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.31%)</title><rect x="80.5185%" y="373" width="0.3142%" height="15" fill="rgb(244,171,29)" fg:x="1025" fg:w="4"/><text x="80.7685%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="80.5970%" y="357" width="0.2357%" height="15" fill="rgb(205,19,11)" fg:x="1026" fg:w="3"/><text x="80.8470%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="80.6756%" y="341" width="0.1571%" height="15" fill="rgb(207,108,29)" fg:x="1027" fg:w="2"/><text x="80.9256%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="80.6756%" y="325" width="0.1571%" height="15" fill="rgb(236,215,43)" fg:x="1027" fg:w="2"/><text x="80.9256%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="80.6756%" y="309" width="0.1571%" height="15" fill="rgb(213,58,35)" fg:x="1027" fg:w="2"/><text x="80.9256%" y="319.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="80.6756%" y="293" width="0.1571%" height="15" fill="rgb(220,211,46)" fg:x="1027" fg:w="2"/><text x="80.9256%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="80.8327%" y="373" width="0.1571%" height="15" fill="rgb(212,134,16)" fg:x="1029" fg:w="2"/><text x="81.0827%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="80.8327%" y="357" width="0.1571%" height="15" fill="rgb(232,90,44)" fg:x="1029" fg:w="2"/><text x="81.0827%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.9112%" y="341" width="0.0786%" height="15" fill="rgb(212,18,36)" fg:x="1030" fg:w="1"/><text x="81.1612%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.9112%" y="325" width="0.0786%" height="15" fill="rgb(206,112,24)" fg:x="1030" fg:w="1"/><text x="81.1612%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.9112%" y="309" width="0.0786%" height="15" fill="rgb(238,223,40)" fg:x="1030" fg:w="1"/><text x="81.1612%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="80.9898%" y="373" width="0.2357%" height="15" fill="rgb(226,169,20)" fg:x="1031" fg:w="3"/><text x="81.2398%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="81.0683%" y="357" width="0.1571%" height="15" fill="rgb(241,64,52)" fg:x="1032" fg:w="2"/><text x="81.3183%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="81.0683%" y="341" width="0.1571%" height="15" fill="rgb(228,120,25)" fg:x="1032" fg:w="2"/><text x="81.3183%" y="351.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (15 samples, 1.18%)</title><rect x="80.2042%" y="421" width="1.1783%" height="15" fill="rgb(234,108,19)" fg:x="1021" fg:w="15"/><text x="80.4542%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.86%)</title><rect x="80.5185%" y="405" width="0.8641%" height="15" fill="rgb(236,133,29)" fg:x="1025" fg:w="11"/><text x="80.7685%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.55%)</title><rect x="80.8327%" y="389" width="0.5499%" height="15" fill="rgb(246,174,53)" fg:x="1029" fg:w="7"/><text x="81.0827%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="81.2255%" y="373" width="0.1571%" height="15" fill="rgb(210,105,35)" fg:x="1034" fg:w="2"/><text x="81.4755%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.3040%" y="357" width="0.0786%" height="15" fill="rgb(225,27,26)" fg:x="1035" fg:w="1"/><text x="81.5540%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.3040%" y="341" width="0.0786%" height="15" fill="rgb(233,2,39)" fg:x="1035" fg:w="1"/><text x="81.5540%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.3040%" y="325" width="0.0786%" height="15" fill="rgb(219,164,26)" fg:x="1035" fg:w="1"/><text x="81.5540%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.3040%" y="309" width="0.0786%" height="15" fill="rgb(236,211,5)" fg:x="1035" fg:w="1"/><text x="81.5540%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.3826%" y="389" width="0.0786%" height="15" fill="rgb(244,227,23)" fg:x="1036" fg:w="1"/><text x="81.6326%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.4611%" y="373" width="0.0786%" height="15" fill="rgb(230,184,8)" fg:x="1037" fg:w="1"/><text x="81.7111%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.6182%" y="341" width="0.0786%" height="15" fill="rgb(217,125,48)" fg:x="1039" fg:w="1"/><text x="81.8682%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="81.3826%" y="421" width="0.3928%" height="15" fill="rgb(223,192,47)" fg:x="1036" fg:w="5"/><text x="81.6326%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.39%)</title><rect x="81.3826%" y="405" width="0.3928%" height="15" fill="rgb(226,119,10)" fg:x="1036" fg:w="5"/><text x="81.6326%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="81.4611%" y="389" width="0.3142%" height="15" fill="rgb(221,49,29)" fg:x="1037" fg:w="4"/><text x="81.7111%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="81.5397%" y="373" width="0.2357%" height="15" fill="rgb(217,205,19)" fg:x="1038" fg:w="3"/><text x="81.7897%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="81.5397%" y="357" width="0.2357%" height="15" fill="rgb(242,104,7)" fg:x="1038" fg:w="3"/><text x="81.7897%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.6968%" y="341" width="0.0786%" height="15" fill="rgb(209,154,48)" fg:x="1040" fg:w="1"/><text x="81.9468%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.6968%" y="325" width="0.0786%" height="15" fill="rgb(219,213,46)" fg:x="1040" fg:w="1"/><text x="81.9468%" y="335.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="81.7753%" y="373" width="0.0786%" height="15" fill="rgb(229,105,38)" fg:x="1041" fg:w="1"/><text x="82.0253%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.7753%" y="357" width="0.0786%" height="15" fill="rgb(205,151,5)" fg:x="1041" fg:w="1"/><text x="82.0253%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.7753%" y="341" width="0.0786%" height="15" fill="rgb(248,115,40)" fg:x="1041" fg:w="1"/><text x="82.0253%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="81.7753%" y="325" width="0.0786%" height="15" fill="rgb(206,179,2)" fg:x="1041" fg:w="1"/><text x="82.0253%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.8539%" y="325" width="0.0786%" height="15" fill="rgb(230,103,24)" fg:x="1042" fg:w="1"/><text x="82.1039%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.8539%" y="309" width="0.0786%" height="15" fill="rgb(218,152,4)" fg:x="1042" fg:w="1"/><text x="82.1039%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.8539%" y="293" width="0.0786%" height="15" fill="rgb(236,161,54)" fg:x="1042" fg:w="1"/><text x="82.1039%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="81.9324%" y="325" width="0.1571%" height="15" fill="rgb(226,65,17)" fg:x="1043" fg:w="2"/><text x="82.1824%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="81.9324%" y="309" width="0.1571%" height="15" fill="rgb(221,134,44)" fg:x="1043" fg:w="2"/><text x="82.1824%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="81.9324%" y="293" width="0.1571%" height="15" fill="rgb(251,129,4)" fg:x="1043" fg:w="2"/><text x="82.1824%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="81.9324%" y="277" width="0.1571%" height="15" fill="rgb(244,32,34)" fg:x="1043" fg:w="2"/><text x="82.1824%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="81.9324%" y="261" width="0.1571%" height="15" fill="rgb(251,224,37)" fg:x="1043" fg:w="2"/><text x="82.1824%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="81.9324%" y="245" width="0.1571%" height="15" fill="rgb(248,117,31)" fg:x="1043" fg:w="2"/><text x="82.1824%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.0110%" y="229" width="0.0786%" height="15" fill="rgb(222,208,37)" fg:x="1044" fg:w="1"/><text x="82.2610%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.0110%" y="213" width="0.0786%" height="15" fill="rgb(234,211,25)" fg:x="1044" fg:w="1"/><text x="82.2610%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.0110%" y="197" width="0.0786%" height="15" fill="rgb(211,72,6)" fg:x="1044" fg:w="1"/><text x="82.2610%" y="207.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="82.0110%" y="181" width="0.0786%" height="15" fill="rgb(249,198,38)" fg:x="1044" fg:w="1"/><text x="82.2610%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="82.1681%" y="293" width="0.1571%" height="15" fill="rgb(221,86,51)" fg:x="1046" fg:w="2"/><text x="82.4181%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="82.1681%" y="277" width="0.1571%" height="15" fill="rgb(226,178,43)" fg:x="1046" fg:w="2"/><text x="82.4181%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="82.1681%" y="261" width="0.1571%" height="15" fill="rgb(215,145,7)" fg:x="1046" fg:w="2"/><text x="82.4181%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (9 samples, 0.71%)</title><rect x="81.8539%" y="357" width="0.7070%" height="15" fill="rgb(250,202,36)" fg:x="1042" fg:w="9"/><text x="82.1039%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.71%)</title><rect x="81.8539%" y="341" width="0.7070%" height="15" fill="rgb(215,86,13)" fg:x="1042" fg:w="9"/><text x="82.1039%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.47%)</title><rect x="82.0896%" y="325" width="0.4713%" height="15" fill="rgb(221,134,12)" fg:x="1045" fg:w="6"/><text x="82.3396%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.47%)</title><rect x="82.0896%" y="309" width="0.4713%" height="15" fill="rgb(213,82,10)" fg:x="1045" fg:w="6"/><text x="82.3396%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="82.3252%" y="293" width="0.2357%" height="15" fill="rgb(214,142,0)" fg:x="1048" fg:w="3"/><text x="82.5752%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.4823%" y="277" width="0.0786%" height="15" fill="rgb(205,145,9)" fg:x="1050" fg:w="1"/><text x="82.7323%" y="287.50"></text></g><g><title>engine::session::Session::flush (37 samples, 2.91%)</title><rect x="79.7329%" y="517" width="2.9065%" height="15" fill="rgb(244,214,8)" fg:x="1015" fg:w="37"/><text x="79.9829%" y="527.50">en..</text></g><g><title>engine::session::state::State::close (33 samples, 2.59%)</title><rect x="80.0471%" y="501" width="2.5923%" height="15" fill="rgb(224,72,51)" fg:x="1019" fg:w="33"/><text x="80.2971%" y="511.50">en..</text></g><g><title>engine::session::state::State::flush_entities (33 samples, 2.59%)</title><rect x="80.0471%" y="485" width="2.5923%" height="15" fill="rgb(233,137,37)" fg:x="1019" fg:w="33"/><text x="80.2971%" y="495.50">en..</text></g><g><title>core::iter::adapters::try_process (31 samples, 2.44%)</title><rect x="80.2042%" y="469" width="2.4352%" height="15" fill="rgb(208,71,28)" fg:x="1021" fg:w="31"/><text x="80.4542%" y="479.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (31 samples, 2.44%)</title><rect x="80.2042%" y="453" width="2.4352%" height="15" fill="rgb(226,31,7)" fg:x="1021" fg:w="31"/><text x="80.4542%" y="463.50">&lt;a..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (31 samples, 2.44%)</title><rect x="80.2042%" y="437" width="2.4352%" height="15" fill="rgb(229,62,18)" fg:x="1021" fg:w="31"/><text x="80.4542%" y="447.50">en..</text></g><g><title>kernel::model::any_entity_changes (11 samples, 0.86%)</title><rect x="81.7753%" y="421" width="0.8641%" height="15" fill="rgb(226,74,28)" fg:x="1041" fg:w="11"/><text x="82.0253%" y="431.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (11 samples, 0.86%)</title><rect x="81.7753%" y="405" width="0.8641%" height="15" fill="rgb(214,170,18)" fg:x="1041" fg:w="11"/><text x="82.0253%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.86%)</title><rect x="81.7753%" y="389" width="0.8641%" height="15" fill="rgb(227,229,35)" fg:x="1041" fg:w="11"/><text x="82.0253%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.79%)</title><rect x="81.8539%" y="373" width="0.7855%" height="15" fill="rgb(225,181,39)" fg:x="1042" fg:w="10"/><text x="82.1039%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.5609%" y="357" width="0.0786%" height="15" fill="rgb(253,124,44)" fg:x="1051" fg:w="1"/><text x="82.8109%" y="367.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="82.6394%" y="517" width="0.1571%" height="15" fill="rgb(220,75,18)" fg:x="1052" fg:w="2"/><text x="82.8894%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="82.6394%" y="501" width="0.1571%" height="15" fill="rgb(239,175,43)" fg:x="1052" fg:w="2"/><text x="82.8894%" y="511.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="82.6394%" y="485" width="0.1571%" height="15" fill="rgb(228,112,50)" fg:x="1052" fg:w="2"/><text x="82.8894%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="82.6394%" y="469" width="0.1571%" height="15" fill="rgb(232,105,36)" fg:x="1052" fg:w="2"/><text x="82.8894%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="82.6394%" y="453" width="0.1571%" height="15" fill="rgb(227,137,47)" fg:x="1052" fg:w="2"/><text x="82.8894%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="82.6394%" y="437" width="0.1571%" height="15" fill="rgb(217,51,9)" fg:x="1052" fg:w="2"/><text x="82.8894%" y="447.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="82.6394%" y="421" width="0.1571%" height="15" fill="rgb(245,117,0)" fg:x="1052" fg:w="2"/><text x="82.8894%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.7180%" y="405" width="0.0786%" height="15" fill="rgb(252,52,30)" fg:x="1053" fg:w="1"/><text x="82.9680%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.7180%" y="389" width="0.0786%" height="15" fill="rgb(227,85,33)" fg:x="1053" fg:w="1"/><text x="82.9680%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.7180%" y="373" width="0.0786%" height="15" fill="rgb(220,157,20)" fg:x="1053" fg:w="1"/><text x="82.9680%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.7180%" y="357" width="0.0786%" height="15" fill="rgb(254,14,34)" fg:x="1053" fg:w="1"/><text x="82.9680%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.7965%" y="421" width="0.0786%" height="15" fill="rgb(216,103,41)" fg:x="1054" fg:w="1"/><text x="83.0465%" y="431.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="82.7965%" y="485" width="0.1571%" height="15" fill="rgb(245,221,9)" fg:x="1054" fg:w="2"/><text x="83.0465%" y="495.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="82.7965%" y="469" width="0.1571%" height="15" fill="rgb(254,136,47)" fg:x="1054" fg:w="2"/><text x="83.0465%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="82.7965%" y="453" width="0.1571%" height="15" fill="rgb(235,71,46)" fg:x="1054" fg:w="2"/><text x="83.0465%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.7965%" y="437" width="0.1571%" height="15" fill="rgb(242,154,29)" fg:x="1054" fg:w="2"/><text x="83.0465%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.8751%" y="421" width="0.0786%" height="15" fill="rgb(210,65,31)" fg:x="1055" fg:w="1"/><text x="83.1251%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.8751%" y="405" width="0.0786%" height="15" fill="rgb(244,9,50)" fg:x="1055" fg:w="1"/><text x="83.1251%" y="415.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.9537%" y="437" width="0.0786%" height="15" fill="rgb(215,141,38)" fg:x="1056" fg:w="1"/><text x="83.2037%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="82.9537%" y="421" width="0.0786%" height="15" fill="rgb(241,129,6)" fg:x="1056" fg:w="1"/><text x="83.2037%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.9537%" y="405" width="0.0786%" height="15" fill="rgb(253,169,4)" fg:x="1056" fg:w="1"/><text x="83.2037%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.9537%" y="389" width="0.0786%" height="15" fill="rgb(237,82,36)" fg:x="1056" fg:w="1"/><text x="83.2037%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.9537%" y="373" width="0.0786%" height="15" fill="rgb(209,171,11)" fg:x="1056" fg:w="1"/><text x="83.2037%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.9537%" y="357" width="0.0786%" height="15" fill="rgb(242,19,22)" fg:x="1056" fg:w="1"/><text x="83.2037%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.0322%" y="373" width="0.0786%" height="15" fill="rgb(251,122,24)" fg:x="1057" fg:w="1"/><text x="83.2822%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.0322%" y="357" width="0.0786%" height="15" fill="rgb(226,166,42)" fg:x="1057" fg:w="1"/><text x="83.2822%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="83.0322%" y="341" width="0.0786%" height="15" fill="rgb(244,101,48)" fg:x="1057" fg:w="1"/><text x="83.2822%" y="351.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="82.9537%" y="469" width="0.2357%" height="15" fill="rgb(227,125,1)" fg:x="1056" fg:w="3"/><text x="83.2037%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="82.9537%" y="453" width="0.2357%" height="15" fill="rgb(206,79,43)" fg:x="1056" fg:w="3"/><text x="83.2037%" y="463.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="83.0322%" y="437" width="0.1571%" height="15" fill="rgb(241,109,41)" fg:x="1057" fg:w="2"/><text x="83.2822%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="83.0322%" y="421" width="0.1571%" height="15" fill="rgb(219,73,4)" fg:x="1057" fg:w="2"/><text x="83.2822%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="83.0322%" y="405" width="0.1571%" height="15" fill="rgb(239,25,41)" fg:x="1057" fg:w="2"/><text x="83.2822%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="83.0322%" y="389" width="0.1571%" height="15" fill="rgb(208,88,46)" fg:x="1057" fg:w="2"/><text x="83.2822%" y="399.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="83.1108%" y="373" width="0.0786%" height="15" fill="rgb(239,184,9)" fg:x="1058" fg:w="1"/><text x="83.3608%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.1108%" y="357" width="0.0786%" height="15" fill="rgb(223,114,13)" fg:x="1058" fg:w="1"/><text x="83.3608%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1108%" y="341" width="0.0786%" height="15" fill="rgb(214,28,42)" fg:x="1058" fg:w="1"/><text x="83.3608%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1108%" y="325" width="0.0786%" height="15" fill="rgb(252,32,44)" fg:x="1058" fg:w="1"/><text x="83.3608%" y="335.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="83.1893%" y="469" width="0.0786%" height="15" fill="rgb(231,159,4)" fg:x="1059" fg:w="1"/><text x="83.4393%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1893%" y="453" width="0.0786%" height="15" fill="rgb(210,35,26)" fg:x="1059" fg:w="1"/><text x="83.4393%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.55%)</title><rect x="82.7965%" y="501" width="0.5499%" height="15" fill="rgb(208,190,37)" fg:x="1054" fg:w="7"/><text x="83.0465%" y="511.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.39%)</title><rect x="82.9537%" y="485" width="0.3928%" height="15" fill="rgb(226,148,22)" fg:x="1056" fg:w="5"/><text x="83.2037%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="83.2679%" y="469" width="0.0786%" height="15" fill="rgb(242,153,24)" fg:x="1060" fg:w="1"/><text x="83.5179%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.2679%" y="453" width="0.0786%" height="15" fill="rgb(213,133,7)" fg:x="1060" fg:w="1"/><text x="83.5179%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="83.2679%" y="437" width="0.0786%" height="15" fill="rgb(248,206,18)" fg:x="1060" fg:w="1"/><text x="83.5179%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.2679%" y="421" width="0.0786%" height="15" fill="rgb(233,157,4)" fg:x="1060" fg:w="1"/><text x="83.5179%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.2679%" y="405" width="0.0786%" height="15" fill="rgb(249,179,32)" fg:x="1060" fg:w="1"/><text x="83.5179%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.2679%" y="389" width="0.0786%" height="15" fill="rgb(248,69,35)" fg:x="1060" fg:w="1"/><text x="83.5179%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.2679%" y="373" width="0.0786%" height="15" fill="rgb(249,158,38)" fg:x="1060" fg:w="1"/><text x="83.5179%" y="383.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="83.3464%" y="485" width="0.0786%" height="15" fill="rgb(223,18,43)" fg:x="1061" fg:w="1"/><text x="83.5964%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="83.3464%" y="469" width="0.0786%" height="15" fill="rgb(238,42,45)" fg:x="1061" fg:w="1"/><text x="83.5964%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="83.3464%" y="453" width="0.0786%" height="15" fill="rgb(219,65,47)" fg:x="1061" fg:w="1"/><text x="83.5964%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.4250%" y="389" width="0.0786%" height="15" fill="rgb(248,153,12)" fg:x="1062" fg:w="1"/><text x="83.6750%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.4250%" y="373" width="0.0786%" height="15" fill="rgb(240,118,4)" fg:x="1062" fg:w="1"/><text x="83.6750%" y="383.50"></text></g><g><title>plugins_core::build::Build::save (10 samples, 0.79%)</title><rect x="82.7965%" y="517" width="0.7855%" height="15" fill="rgb(250,96,34)" fg:x="1054" fg:w="10"/><text x="83.0465%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="83.3464%" y="501" width="0.2357%" height="15" fill="rgb(221,15,4)" fg:x="1061" fg:w="3"/><text x="83.5964%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="83.4250%" y="485" width="0.1571%" height="15" fill="rgb(217,149,33)" fg:x="1062" fg:w="2"/><text x="83.6750%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="83.4250%" y="469" width="0.1571%" height="15" fill="rgb(213,58,29)" fg:x="1062" fg:w="2"/><text x="83.6750%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="83.4250%" y="453" width="0.1571%" height="15" fill="rgb(236,218,9)" fg:x="1062" fg:w="2"/><text x="83.6750%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="83.4250%" y="437" width="0.1571%" height="15" fill="rgb(248,40,19)" fg:x="1062" fg:w="2"/><text x="83.6750%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="83.4250%" y="421" width="0.1571%" height="15" fill="rgb(212,17,6)" fg:x="1062" fg:w="2"/><text x="83.6750%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="83.4250%" y="405" width="0.1571%" height="15" fill="rgb(206,212,20)" fg:x="1062" fg:w="2"/><text x="83.6750%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="83.5035%" y="389" width="0.0786%" height="15" fill="rgb(229,80,37)" fg:x="1063" fg:w="1"/><text x="83.7535%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.5035%" y="373" width="0.0786%" height="15" fill="rgb(253,8,37)" fg:x="1063" fg:w="1"/><text x="83.7535%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.5035%" y="357" width="0.0786%" height="15" fill="rgb(215,16,43)" fg:x="1063" fg:w="1"/><text x="83.7535%" y="367.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="83.6606%" y="485" width="0.0786%" height="15" fill="rgb(236,219,16)" fg:x="1065" fg:w="1"/><text x="83.9106%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="83.6606%" y="469" width="0.0786%" height="15" fill="rgb(251,0,3)" fg:x="1065" fg:w="1"/><text x="83.9106%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="83.6606%" y="453" width="0.0786%" height="15" fill="rgb(207,133,37)" fg:x="1065" fg:w="1"/><text x="83.9106%" y="463.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="83.6606%" y="437" width="0.0786%" height="15" fill="rgb(250,143,20)" fg:x="1065" fg:w="1"/><text x="83.9106%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="83.6606%" y="421" width="0.0786%" height="15" fill="rgb(242,19,50)" fg:x="1065" fg:w="1"/><text x="83.9106%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="83.6606%" y="405" width="0.0786%" height="15" fill="rgb(206,124,43)" fg:x="1065" fg:w="1"/><text x="83.9106%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="83.6606%" y="389" width="0.0786%" height="15" fill="rgb(229,4,38)" fg:x="1065" fg:w="1"/><text x="83.9106%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="83.6606%" y="373" width="0.0786%" height="15" fill="rgb(247,220,45)" fg:x="1065" fg:w="1"/><text x="83.9106%" y="383.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="83.6606%" y="357" width="0.0786%" height="15" fill="rgb(247,195,0)" fg:x="1065" fg:w="1"/><text x="83.9106%" y="367.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="83.6606%" y="341" width="0.0786%" height="15" fill="rgb(252,12,19)" fg:x="1065" fg:w="1"/><text x="83.9106%" y="351.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="83.6606%" y="325" width="0.0786%" height="15" fill="rgb(222,49,50)" fg:x="1065" fg:w="1"/><text x="83.9106%" y="335.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.08%)</title><rect x="83.6606%" y="309" width="0.0786%" height="15" fill="rgb(209,157,28)" fg:x="1065" fg:w="1"/><text x="83.9106%" y="319.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (3 samples, 0.24%)</title><rect x="83.5821%" y="517" width="0.2357%" height="15" fill="rgb(238,174,24)" fg:x="1064" fg:w="3"/><text x="83.8321%" y="527.50"></text></g><g><title>plugins_core::tools::set_quantity (2 samples, 0.16%)</title><rect x="83.6606%" y="501" width="0.1571%" height="15" fill="rgb(224,17,28)" fg:x="1065" fg:w="2"/><text x="83.9106%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="83.7392%" y="485" width="0.0786%" height="15" fill="rgb(249,7,29)" fg:x="1066" fg:w="1"/><text x="83.9892%" y="495.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Carryable&gt;::serialize (1 samples, 0.08%)</title><rect x="83.7392%" y="469" width="0.0786%" height="15" fill="rgb(243,178,4)" fg:x="1066" fg:w="1"/><text x="83.9892%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.7392%" y="453" width="0.0786%" height="15" fill="rgb(246,138,35)" fg:x="1066" fg:w="1"/><text x="83.9892%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.7392%" y="437" width="0.0786%" height="15" fill="rgb(251,85,18)" fg:x="1066" fg:w="1"/><text x="83.9892%" y="447.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="83.8178%" y="485" width="0.0786%" height="15" fill="rgb(254,55,9)" fg:x="1067" fg:w="1"/><text x="84.0678%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="83.8178%" y="469" width="0.0786%" height="15" fill="rgb(248,4,50)" fg:x="1067" fg:w="1"/><text x="84.0678%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.8178%" y="453" width="0.0786%" height="15" fill="rgb(215,208,14)" fg:x="1067" fg:w="1"/><text x="84.0678%" y="463.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.8178%" y="437" width="0.0786%" height="15" fill="rgb(218,37,18)" fg:x="1067" fg:w="1"/><text x="84.0678%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="83.8178%" y="421" width="0.0786%" height="15" fill="rgb(206,104,13)" fg:x="1067" fg:w="1"/><text x="84.0678%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.9749%" y="453" width="0.0786%" height="15" fill="rgb(248,94,22)" fg:x="1069" fg:w="1"/><text x="84.2249%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.9749%" y="437" width="0.0786%" height="15" fill="rgb(235,42,46)" fg:x="1069" fg:w="1"/><text x="84.2249%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.9749%" y="421" width="0.0786%" height="15" fill="rgb(220,228,48)" fg:x="1069" fg:w="1"/><text x="84.2249%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.9749%" y="405" width="0.0786%" height="15" fill="rgb(216,58,12)" fg:x="1069" fg:w="1"/><text x="84.2249%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.9749%" y="389" width="0.0786%" height="15" fill="rgb(223,97,52)" fg:x="1069" fg:w="1"/><text x="84.2249%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.9749%" y="373" width="0.0786%" height="15" fill="rgb(208,159,17)" fg:x="1069" fg:w="1"/><text x="84.2249%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.9749%" y="357" width="0.0786%" height="15" fill="rgb(215,172,9)" fg:x="1069" fg:w="1"/><text x="84.2249%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.9749%" y="341" width="0.0786%" height="15" fill="rgb(252,175,30)" fg:x="1069" fg:w="1"/><text x="84.2249%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.9749%" y="325" width="0.0786%" height="15" fill="rgb(209,159,10)" fg:x="1069" fg:w="1"/><text x="84.2249%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.9749%" y="309" width="0.0786%" height="15" fill="rgb(229,73,51)" fg:x="1069" fg:w="1"/><text x="84.2249%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.9749%" y="293" width="0.0786%" height="15" fill="rgb(208,212,43)" fg:x="1069" fg:w="1"/><text x="84.2249%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.9749%" y="277" width="0.0786%" height="15" fill="rgb(254,123,53)" fg:x="1069" fg:w="1"/><text x="84.2249%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.9749%" y="261" width="0.0786%" height="15" fill="rgb(254,128,49)" fg:x="1069" fg:w="1"/><text x="84.2249%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.9749%" y="245" width="0.0786%" height="15" fill="rgb(246,16,16)" fg:x="1069" fg:w="1"/><text x="84.2249%" y="255.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="83.8963%" y="469" width="0.2357%" height="15" fill="rgb(209,200,1)" fg:x="1068" fg:w="3"/><text x="84.1463%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.0534%" y="453" width="0.0786%" height="15" fill="rgb(235,9,3)" fg:x="1070" fg:w="1"/><text x="84.3034%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.0534%" y="437" width="0.0786%" height="15" fill="rgb(233,121,54)" fg:x="1070" fg:w="1"/><text x="84.3034%" y="447.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.31%)</title><rect x="83.8963%" y="485" width="0.3142%" height="15" fill="rgb(236,80,25)" fg:x="1068" fg:w="4"/><text x="84.1463%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="84.1320%" y="469" width="0.0786%" height="15" fill="rgb(220,44,24)" fg:x="1071" fg:w="1"/><text x="84.3820%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="84.1320%" y="453" width="0.0786%" height="15" fill="rgb(236,225,16)" fg:x="1071" fg:w="1"/><text x="84.3820%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="84.1320%" y="437" width="0.0786%" height="15" fill="rgb(237,140,0)" fg:x="1071" fg:w="1"/><text x="84.3820%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.1320%" y="421" width="0.0786%" height="15" fill="rgb(243,225,53)" fg:x="1071" fg:w="1"/><text x="84.3820%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="84.1320%" y="405" width="0.0786%" height="15" fill="rgb(240,140,30)" fg:x="1071" fg:w="1"/><text x="84.3820%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.1320%" y="389" width="0.0786%" height="15" fill="rgb(217,51,16)" fg:x="1071" fg:w="1"/><text x="84.3820%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.1320%" y="373" width="0.0786%" height="15" fill="rgb(245,75,50)" fg:x="1071" fg:w="1"/><text x="84.3820%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.1320%" y="357" width="0.0786%" height="15" fill="rgb(208,174,22)" fg:x="1071" fg:w="1"/><text x="84.3820%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.1320%" y="341" width="0.0786%" height="15" fill="rgb(219,98,50)" fg:x="1071" fg:w="1"/><text x="84.3820%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.1320%" y="325" width="0.0786%" height="15" fill="rgb(243,138,3)" fg:x="1071" fg:w="1"/><text x="84.3820%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.1320%" y="309" width="0.0786%" height="15" fill="rgb(243,132,26)" fg:x="1071" fg:w="1"/><text x="84.3820%" y="319.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (6 samples, 0.47%)</title><rect x="83.8178%" y="517" width="0.4713%" height="15" fill="rgb(250,201,8)" fg:x="1067" fg:w="6"/><text x="84.0678%" y="527.50"></text></g><g><title>plugins_core::tools::set_container (6 samples, 0.47%)</title><rect x="83.8178%" y="501" width="0.4713%" height="15" fill="rgb(213,91,26)" fg:x="1067" fg:w="6"/><text x="84.0678%" y="511.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="84.2105%" y="485" width="0.0786%" height="15" fill="rgb(229,117,1)" fg:x="1072" fg:w="1"/><text x="84.4605%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="84.2105%" y="469" width="0.0786%" height="15" fill="rgb(229,24,6)" fg:x="1072" fg:w="1"/><text x="84.4605%" y="479.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="84.2105%" y="453" width="0.0786%" height="15" fill="rgb(206,69,11)" fg:x="1072" fg:w="1"/><text x="84.4605%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.2105%" y="437" width="0.0786%" height="15" fill="rgb(234,111,34)" fg:x="1072" fg:w="1"/><text x="84.4605%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="84.2891%" y="501" width="0.0786%" height="15" fill="rgb(213,187,51)" fg:x="1073" fg:w="1"/><text x="84.5391%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="84.2891%" y="485" width="0.0786%" height="15" fill="rgb(207,45,11)" fg:x="1073" fg:w="1"/><text x="84.5391%" y="495.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="84.2891%" y="469" width="0.0786%" height="15" fill="rgb(225,151,47)" fg:x="1073" fg:w="1"/><text x="84.5391%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.2891%" y="453" width="0.0786%" height="15" fill="rgb(211,226,5)" fg:x="1073" fg:w="1"/><text x="84.5391%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="84.2891%" y="437" width="0.0786%" height="15" fill="rgb(214,83,52)" fg:x="1073" fg:w="1"/><text x="84.5391%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2891%" y="421" width="0.0786%" height="15" fill="rgb(229,49,53)" fg:x="1073" fg:w="1"/><text x="84.5391%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2891%" y="405" width="0.0786%" height="15" fill="rgb(246,8,28)" fg:x="1073" fg:w="1"/><text x="84.5391%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="84.3676%" y="501" width="0.0786%" height="15" fill="rgb(207,28,41)" fg:x="1074" fg:w="1"/><text x="84.6176%" y="511.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="84.3676%" y="485" width="0.0786%" height="15" fill="rgb(254,22,25)" fg:x="1074" fg:w="1"/><text x="84.6176%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="84.3676%" y="469" width="0.0786%" height="15" fill="rgb(209,120,42)" fg:x="1074" fg:w="1"/><text x="84.6176%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.3676%" y="453" width="0.0786%" height="15" fill="rgb(216,194,18)" fg:x="1074" fg:w="1"/><text x="84.6176%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.3676%" y="437" width="0.0786%" height="15" fill="rgb(213,70,17)" fg:x="1074" fg:w="1"/><text x="84.6176%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4462%" y="373" width="0.0786%" height="15" fill="rgb(228,66,19)" fg:x="1075" fg:w="1"/><text x="84.6962%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4462%" y="357" width="0.0786%" height="15" fill="rgb(236,221,54)" fg:x="1075" fg:w="1"/><text x="84.6962%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4462%" y="341" width="0.0786%" height="15" fill="rgb(207,175,15)" fg:x="1075" fg:w="1"/><text x="84.6962%" y="351.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="84.4462%" y="501" width="0.1571%" height="15" fill="rgb(234,76,8)" fg:x="1075" fg:w="2"/><text x="84.6962%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="84.4462%" y="485" width="0.1571%" height="15" fill="rgb(243,106,0)" fg:x="1075" fg:w="2"/><text x="84.6962%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="84.4462%" y="469" width="0.1571%" height="15" fill="rgb(208,48,19)" fg:x="1075" fg:w="2"/><text x="84.6962%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="84.4462%" y="453" width="0.1571%" height="15" fill="rgb(251,50,29)" fg:x="1075" fg:w="2"/><text x="84.6962%" y="463.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="84.4462%" y="437" width="0.1571%" height="15" fill="rgb(222,31,49)" fg:x="1075" fg:w="2"/><text x="84.6962%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="84.4462%" y="421" width="0.1571%" height="15" fill="rgb(232,33,18)" fg:x="1075" fg:w="2"/><text x="84.6962%" y="431.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="84.4462%" y="405" width="0.1571%" height="15" fill="rgb(209,1,44)" fg:x="1075" fg:w="2"/><text x="84.6962%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="84.4462%" y="389" width="0.1571%" height="15" fill="rgb(211,7,1)" fg:x="1075" fg:w="2"/><text x="84.6962%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.5247%" y="373" width="0.0786%" height="15" fill="rgb(224,111,27)" fg:x="1076" fg:w="1"/><text x="84.7747%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5247%" y="357" width="0.0786%" height="15" fill="rgb(252,195,39)" fg:x="1076" fg:w="1"/><text x="84.7747%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.5247%" y="341" width="0.0786%" height="15" fill="rgb(237,198,5)" fg:x="1076" fg:w="1"/><text x="84.7747%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5247%" y="325" width="0.0786%" height="15" fill="rgb(232,148,1)" fg:x="1076" fg:w="1"/><text x="84.7747%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (1 samples, 0.08%)</title><rect x="84.6033%" y="501" width="0.0786%" height="15" fill="rgb(249,41,3)" fg:x="1077" fg:w="1"/><text x="84.8533%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.6033%" y="485" width="0.0786%" height="15" fill="rgb(215,14,33)" fg:x="1077" fg:w="1"/><text x="84.8533%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="84.6819%" y="485" width="0.1571%" height="15" fill="rgb(209,146,24)" fg:x="1078" fg:w="2"/><text x="84.9319%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.6819%" y="469" width="0.1571%" height="15" fill="rgb(219,51,47)" fg:x="1078" fg:w="2"/><text x="84.9319%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="84.6819%" y="453" width="0.1571%" height="15" fill="rgb(234,217,40)" fg:x="1078" fg:w="2"/><text x="84.9319%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="84.8390%" y="437" width="0.0786%" height="15" fill="rgb(228,34,26)" fg:x="1080" fg:w="1"/><text x="85.0890%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::state::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="84.8390%" y="421" width="0.0786%" height="15" fill="rgb(224,50,29)" fg:x="1080" fg:w="1"/><text x="85.0890%" y="431.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="84.9175%" y="437" width="0.0786%" height="15" fill="rgb(205,79,51)" fg:x="1081" fg:w="1"/><text x="85.1675%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="84.9175%" y="421" width="0.0786%" height="15" fill="rgb(218,136,28)" fg:x="1081" fg:w="1"/><text x="85.1675%" y="431.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="84.9175%" y="405" width="0.0786%" height="15" fill="rgb(220,150,10)" fg:x="1081" fg:w="1"/><text x="85.1675%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="84.9175%" y="389" width="0.0786%" height="15" fill="rgb(242,158,47)" fg:x="1081" fg:w="1"/><text x="85.1675%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="84.9175%" y="373" width="0.0786%" height="15" fill="rgb(209,68,0)" fg:x="1081" fg:w="1"/><text x="85.1675%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.9175%" y="357" width="0.0786%" height="15" fill="rgb(208,13,41)" fg:x="1081" fg:w="1"/><text x="85.1675%" y="367.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="84.9961%" y="389" width="0.0786%" height="15" fill="rgb(226,201,7)" fg:x="1082" fg:w="1"/><text x="85.2461%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="84.9961%" y="373" width="0.0786%" height="15" fill="rgb(236,103,26)" fg:x="1082" fg:w="1"/><text x="85.2461%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="84.9961%" y="357" width="0.0786%" height="15" fill="rgb(243,162,8)" fg:x="1082" fg:w="1"/><text x="85.2461%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="84.9961%" y="341" width="0.0786%" height="15" fill="rgb(237,225,11)" fg:x="1082" fg:w="1"/><text x="85.2461%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="85.0746%" y="373" width="0.1571%" height="15" fill="rgb(247,186,32)" fg:x="1083" fg:w="2"/><text x="85.3246%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="85.0746%" y="357" width="0.1571%" height="15" fill="rgb(215,26,28)" fg:x="1083" fg:w="2"/><text x="85.3246%" y="367.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="85.0746%" y="341" width="0.1571%" height="15" fill="rgb(208,121,6)" fg:x="1083" fg:w="2"/><text x="85.3246%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.1532%" y="325" width="0.0786%" height="15" fill="rgb(225,91,3)" fg:x="1084" fg:w="1"/><text x="85.4032%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.1532%" y="309" width="0.0786%" height="15" fill="rgb(246,119,36)" fg:x="1084" fg:w="1"/><text x="85.4032%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="85.1532%" y="293" width="0.0786%" height="15" fill="rgb(254,173,2)" fg:x="1084" fg:w="1"/><text x="85.4032%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="85.1532%" y="277" width="0.0786%" height="15" fill="rgb(209,87,54)" fg:x="1084" fg:w="1"/><text x="85.4032%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="85.1532%" y="261" width="0.0786%" height="15" fill="rgb(223,216,20)" fg:x="1084" fg:w="1"/><text x="85.4032%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="85.3888%" y="357" width="0.2357%" height="15" fill="rgb(220,31,8)" fg:x="1087" fg:w="3"/><text x="85.6388%" y="367.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="85.3888%" y="341" width="0.2357%" height="15" fill="rgb(220,185,15)" fg:x="1087" fg:w="3"/><text x="85.6388%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="85.3888%" y="325" width="0.2357%" height="15" fill="rgb(247,190,50)" fg:x="1087" fg:w="3"/><text x="85.6388%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="85.4674%" y="309" width="0.1571%" height="15" fill="rgb(239,173,47)" fg:x="1088" fg:w="2"/><text x="85.7174%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="85.5460%" y="293" width="0.0786%" height="15" fill="rgb(218,190,42)" fg:x="1089" fg:w="1"/><text x="85.7960%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="85.5460%" y="277" width="0.0786%" height="15" fill="rgb(251,207,16)" fg:x="1089" fg:w="1"/><text x="85.7960%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="85.5460%" y="261" width="0.0786%" height="15" fill="rgb(222,199,47)" fg:x="1089" fg:w="1"/><text x="85.7960%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="85.6245%" y="309" width="0.0786%" height="15" fill="rgb(245,190,7)" fg:x="1090" fg:w="1"/><text x="85.8745%" y="319.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.6245%" y="293" width="0.0786%" height="15" fill="rgb(239,85,38)" fg:x="1090" fg:w="1"/><text x="85.8745%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.6245%" y="277" width="0.0786%" height="15" fill="rgb(229,69,51)" fg:x="1090" fg:w="1"/><text x="85.8745%" y="287.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="85.6245%" y="261" width="0.0786%" height="15" fill="rgb(231,104,51)" fg:x="1090" fg:w="1"/><text x="85.8745%" y="271.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="85.6245%" y="341" width="0.2357%" height="15" fill="rgb(235,49,4)" fg:x="1090" fg:w="3"/><text x="85.8745%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="85.6245%" y="325" width="0.2357%" height="15" fill="rgb(246,166,20)" fg:x="1090" fg:w="3"/><text x="85.8745%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="85.7031%" y="309" width="0.1571%" height="15" fill="rgb(230,119,37)" fg:x="1091" fg:w="2"/><text x="85.9531%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.9387%" y="293" width="0.0786%" height="15" fill="rgb(234,77,34)" fg:x="1094" fg:w="1"/><text x="86.1887%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="85.8602%" y="341" width="0.2357%" height="15" fill="rgb(211,222,33)" fg:x="1093" fg:w="3"/><text x="86.1102%" y="351.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="85.9387%" y="325" width="0.1571%" height="15" fill="rgb(226,45,42)" fg:x="1094" fg:w="2"/><text x="86.1887%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="85.9387%" y="309" width="0.1571%" height="15" fill="rgb(215,174,28)" fg:x="1094" fg:w="2"/><text x="86.1887%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="86.0173%" y="293" width="0.0786%" height="15" fill="rgb(254,173,49)" fg:x="1095" fg:w="1"/><text x="86.2673%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="86.0958%" y="325" width="0.1571%" height="15" fill="rgb(229,191,6)" fg:x="1096" fg:w="2"/><text x="86.3458%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.1744%" y="309" width="0.0786%" height="15" fill="rgb(212,145,22)" fg:x="1097" fg:w="1"/><text x="86.4244%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.1744%" y="293" width="0.0786%" height="15" fill="rgb(226,6,51)" fg:x="1097" fg:w="1"/><text x="86.4244%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="86.2529%" y="325" width="0.1571%" height="15" fill="rgb(227,128,8)" fg:x="1098" fg:w="2"/><text x="86.5029%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="86.2529%" y="309" width="0.1571%" height="15" fill="rgb(205,24,10)" fg:x="1098" fg:w="2"/><text x="86.5029%" y="319.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="86.2529%" y="293" width="0.1571%" height="15" fill="rgb(217,147,27)" fg:x="1098" fg:w="2"/><text x="86.5029%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="86.2529%" y="277" width="0.1571%" height="15" fill="rgb(250,82,42)" fg:x="1098" fg:w="2"/><text x="86.5029%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.3315%" y="261" width="0.0786%" height="15" fill="rgb(248,93,17)" fg:x="1099" fg:w="1"/><text x="86.5815%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="86.3315%" y="245" width="0.0786%" height="15" fill="rgb(254,212,40)" fg:x="1099" fg:w="1"/><text x="86.5815%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="86.3315%" y="229" width="0.0786%" height="15" fill="rgb(229,209,2)" fg:x="1099" fg:w="1"/><text x="86.5815%" y="239.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="86.3315%" y="213" width="0.0786%" height="15" fill="rgb(211,50,43)" fg:x="1099" fg:w="1"/><text x="86.5815%" y="223.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (19 samples, 1.49%)</title><rect x="85.0746%" y="389" width="1.4925%" height="15" fill="rgb(245,196,29)" fg:x="1083" fg:w="19"/><text x="85.3246%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.34%)</title><rect x="85.2317%" y="373" width="1.3354%" height="15" fill="rgb(216,132,13)" fg:x="1085" fg:w="17"/><text x="85.4817%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.94%)</title><rect x="85.6245%" y="357" width="0.9427%" height="15" fill="rgb(251,108,21)" fg:x="1090" fg:w="12"/><text x="85.8745%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.47%)</title><rect x="86.0958%" y="341" width="0.4713%" height="15" fill="rgb(229,174,54)" fg:x="1096" fg:w="6"/><text x="86.3458%" y="351.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="86.4101%" y="325" width="0.1571%" height="15" fill="rgb(211,175,47)" fg:x="1100" fg:w="2"/><text x="86.6601%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="86.5672%" y="357" width="0.1571%" height="15" fill="rgb(234,5,37)" fg:x="1102" fg:w="2"/><text x="86.8172%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.8028%" y="325" width="0.0786%" height="15" fill="rgb(244,150,43)" fg:x="1105" fg:w="1"/><text x="87.0528%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.8028%" y="309" width="0.0786%" height="15" fill="rgb(242,172,38)" fg:x="1105" fg:w="1"/><text x="87.0528%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="86.5672%" y="389" width="0.4713%" height="15" fill="rgb(205,27,8)" fg:x="1102" fg:w="6"/><text x="86.8172%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.47%)</title><rect x="86.5672%" y="373" width="0.4713%" height="15" fill="rgb(217,57,3)" fg:x="1102" fg:w="6"/><text x="86.8172%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="86.7243%" y="357" width="0.3142%" height="15" fill="rgb(242,21,38)" fg:x="1104" fg:w="4"/><text x="86.9743%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="86.8028%" y="341" width="0.2357%" height="15" fill="rgb(209,64,43)" fg:x="1105" fg:w="3"/><text x="87.0528%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="86.8814%" y="325" width="0.1571%" height="15" fill="rgb(222,2,46)" fg:x="1106" fg:w="2"/><text x="87.1314%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="86.8814%" y="309" width="0.1571%" height="15" fill="rgb(218,19,44)" fg:x="1106" fg:w="2"/><text x="87.1314%" y="319.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="87.0385%" y="373" width="0.0786%" height="15" fill="rgb(240,203,42)" fg:x="1108" fg:w="1"/><text x="87.2885%" y="383.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="87.0385%" y="357" width="0.0786%" height="15" fill="rgb(229,23,45)" fg:x="1108" fg:w="1"/><text x="87.2885%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="87.1170%" y="341" width="0.0786%" height="15" fill="rgb(205,228,51)" fg:x="1109" fg:w="1"/><text x="87.3670%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.1170%" y="325" width="0.0786%" height="15" fill="rgb(239,36,20)" fg:x="1109" fg:w="1"/><text x="87.3670%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.1170%" y="309" width="0.0786%" height="15" fill="rgb(248,172,27)" fg:x="1109" fg:w="1"/><text x="87.3670%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.1956%" y="309" width="0.0786%" height="15" fill="rgb(244,55,32)" fg:x="1110" fg:w="1"/><text x="87.4456%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="87.2742%" y="293" width="0.1571%" height="15" fill="rgb(215,97,16)" fg:x="1111" fg:w="2"/><text x="87.5242%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="87.2742%" y="277" width="0.1571%" height="15" fill="rgb(224,80,29)" fg:x="1111" fg:w="2"/><text x="87.5242%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="87.2742%" y="261" width="0.1571%" height="15" fill="rgb(216,93,47)" fg:x="1111" fg:w="2"/><text x="87.5242%" y="271.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="87.4313%" y="293" width="0.1571%" height="15" fill="rgb(238,159,10)" fg:x="1113" fg:w="2"/><text x="87.6813%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="87.4313%" y="277" width="0.1571%" height="15" fill="rgb(223,98,29)" fg:x="1113" fg:w="2"/><text x="87.6813%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="87.5098%" y="261" width="0.0786%" height="15" fill="rgb(210,176,23)" fg:x="1114" fg:w="1"/><text x="87.7598%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.5884%" y="261" width="0.0786%" height="15" fill="rgb(242,162,27)" fg:x="1115" fg:w="1"/><text x="87.8384%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.5884%" y="245" width="0.0786%" height="15" fill="rgb(245,109,32)" fg:x="1115" fg:w="1"/><text x="87.8384%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.5884%" y="229" width="0.0786%" height="15" fill="rgb(248,87,8)" fg:x="1115" fg:w="1"/><text x="87.8384%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="87.7455%" y="245" width="0.0786%" height="15" fill="rgb(250,160,50)" fg:x="1117" fg:w="1"/><text x="87.9955%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.7455%" y="229" width="0.0786%" height="15" fill="rgb(246,165,25)" fg:x="1117" fg:w="1"/><text x="87.9955%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.79%)</title><rect x="87.2742%" y="309" width="0.7855%" height="15" fill="rgb(249,219,3)" fg:x="1111" fg:w="10"/><text x="87.5242%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.47%)</title><rect x="87.5884%" y="293" width="0.4713%" height="15" fill="rgb(226,66,5)" fg:x="1115" fg:w="6"/><text x="87.8384%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.47%)</title><rect x="87.5884%" y="277" width="0.4713%" height="15" fill="rgb(250,220,43)" fg:x="1115" fg:w="6"/><text x="87.8384%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.39%)</title><rect x="87.6669%" y="261" width="0.3928%" height="15" fill="rgb(225,111,31)" fg:x="1116" fg:w="5"/><text x="87.9169%" y="271.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="87.8240%" y="245" width="0.2357%" height="15" fill="rgb(248,106,18)" fg:x="1118" fg:w="3"/><text x="88.0740%" y="255.50"></text></g><g><title>kernel::model::any_entity_changes (14 samples, 1.10%)</title><rect x="87.0385%" y="389" width="1.0998%" height="15" fill="rgb(220,226,45)" fg:x="1108" fg:w="14"/><text x="87.2885%" y="399.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (13 samples, 1.02%)</title><rect x="87.1170%" y="373" width="1.0212%" height="15" fill="rgb(208,58,53)" fg:x="1109" fg:w="13"/><text x="87.3670%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (13 samples, 1.02%)</title><rect x="87.1170%" y="357" width="1.0212%" height="15" fill="rgb(209,133,1)" fg:x="1109" fg:w="13"/><text x="87.3670%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.94%)</title><rect x="87.1956%" y="341" width="0.9427%" height="15" fill="rgb(228,216,27)" fg:x="1110" fg:w="12"/><text x="87.4456%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (12 samples, 0.94%)</title><rect x="87.1956%" y="325" width="0.9427%" height="15" fill="rgb(238,155,2)" fg:x="1110" fg:w="12"/><text x="87.4456%" y="335.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="88.0597%" y="309" width="0.0786%" height="15" fill="rgb(244,99,37)" fg:x="1121" fg:w="1"/><text x="88.3097%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.0597%" y="293" width="0.0786%" height="15" fill="rgb(254,32,3)" fg:x="1121" fg:w="1"/><text x="88.3097%" y="303.50"></text></g><g><title>engine::session::Session::flush (45 samples, 3.53%)</title><rect x="84.6819%" y="501" width="3.5350%" height="15" fill="rgb(234,46,50)" fg:x="1078" fg:w="45"/><text x="84.9319%" y="511.50">eng..</text></g><g><title>engine::session::Session::save_changes (43 samples, 3.38%)</title><rect x="84.8390%" y="485" width="3.3778%" height="15" fill="rgb(232,118,51)" fg:x="1080" fg:w="43"/><text x="85.0890%" y="495.50">eng..</text></g><g><title>engine::session::state::State::close (43 samples, 3.38%)</title><rect x="84.8390%" y="469" width="3.3778%" height="15" fill="rgb(207,24,32)" fg:x="1080" fg:w="43"/><text x="85.0890%" y="479.50">eng..</text></g><g><title>engine::session::state::State::flush_entities (43 samples, 3.38%)</title><rect x="84.8390%" y="453" width="3.3778%" height="15" fill="rgb(208,107,43)" fg:x="1080" fg:w="43"/><text x="85.0890%" y="463.50">eng..</text></g><g><title>core::iter::adapters::try_process (41 samples, 3.22%)</title><rect x="84.9961%" y="437" width="3.2207%" height="15" fill="rgb(231,28,9)" fg:x="1082" fg:w="41"/><text x="85.2461%" y="447.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (41 samples, 3.22%)</title><rect x="84.9961%" y="421" width="3.2207%" height="15" fill="rgb(241,204,15)" fg:x="1082" fg:w="41"/><text x="85.2461%" y="431.50">&lt;al..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (41 samples, 3.22%)</title><rect x="84.9961%" y="405" width="3.2207%" height="15" fill="rgb(214,54,15)" fg:x="1082" fg:w="41"/><text x="85.2461%" y="415.50">eng..</text></g><g><title>kernel::perms::find_acls (1 samples, 0.08%)</title><rect x="88.1383%" y="389" width="0.0786%" height="15" fill="rgb(230,12,28)" fg:x="1122" fg:w="1"/><text x="88.3883%" y="399.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="88.2168%" y="501" width="0.1571%" height="15" fill="rgb(221,171,5)" fg:x="1123" fg:w="2"/><text x="88.4668%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="88.2168%" y="485" width="0.1571%" height="15" fill="rgb(207,72,25)" fg:x="1123" fg:w="2"/><text x="88.4668%" y="495.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="88.2168%" y="469" width="0.1571%" height="15" fill="rgb(249,79,37)" fg:x="1123" fg:w="2"/><text x="88.4668%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="88.2168%" y="453" width="0.1571%" height="15" fill="rgb(209,98,49)" fg:x="1123" fg:w="2"/><text x="88.4668%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="88.2168%" y="437" width="0.1571%" height="15" fill="rgb(221,62,13)" fg:x="1123" fg:w="2"/><text x="88.4668%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="88.2168%" y="421" width="0.1571%" height="15" fill="rgb(223,39,6)" fg:x="1123" fg:w="2"/><text x="88.4668%" y="431.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="88.2168%" y="405" width="0.1571%" height="15" fill="rgb(246,163,20)" fg:x="1123" fg:w="2"/><text x="88.4668%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.2954%" y="389" width="0.0786%" height="15" fill="rgb(211,111,29)" fg:x="1124" fg:w="1"/><text x="88.5454%" y="399.50"></text></g><g><title>plugins_core::build::Build::new (2 samples, 0.16%)</title><rect x="88.3739%" y="501" width="0.1571%" height="15" fill="rgb(243,118,5)" fg:x="1125" fg:w="2"/><text x="88.6239%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (2 samples, 0.16%)</title><rect x="88.3739%" y="485" width="0.1571%" height="15" fill="rgb(240,144,52)" fg:x="1125" fg:w="2"/><text x="88.6239%" y="495.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (2 samples, 0.16%)</title><rect x="88.3739%" y="469" width="0.1571%" height="15" fill="rgb(244,158,36)" fg:x="1125" fg:w="2"/><text x="88.6239%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="88.4525%" y="453" width="0.0786%" height="15" fill="rgb(241,109,37)" fg:x="1126" fg:w="1"/><text x="88.7025%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="88.4525%" y="437" width="0.0786%" height="15" fill="rgb(213,95,32)" fg:x="1126" fg:w="1"/><text x="88.7025%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.4525%" y="421" width="0.0786%" height="15" fill="rgb(252,193,9)" fg:x="1126" fg:w="1"/><text x="88.7025%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.4525%" y="405" width="0.0786%" height="15" fill="rgb(225,213,21)" fg:x="1126" fg:w="1"/><text x="88.7025%" y="415.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="88.4525%" y="389" width="0.0786%" height="15" fill="rgb(220,172,46)" fg:x="1126" fg:w="1"/><text x="88.7025%" y="399.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="88.4525%" y="373" width="0.0786%" height="15" fill="rgb(235,75,41)" fg:x="1126" fg:w="1"/><text x="88.7025%" y="383.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="88.4525%" y="357" width="0.0786%" height="15" fill="rgb(213,86,9)" fg:x="1126" fg:w="1"/><text x="88.7025%" y="367.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.08%)</title><rect x="88.4525%" y="341" width="0.0786%" height="15" fill="rgb(238,127,51)" fg:x="1126" fg:w="1"/><text x="88.7025%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="88.5310%" y="469" width="0.0786%" height="15" fill="rgb(215,2,54)" fg:x="1127" fg:w="1"/><text x="88.7810%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="88.5310%" y="453" width="0.0786%" height="15" fill="rgb(245,80,6)" fg:x="1127" fg:w="1"/><text x="88.7810%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="88.5310%" y="437" width="0.0786%" height="15" fill="rgb(233,106,42)" fg:x="1127" fg:w="1"/><text x="88.7810%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.5310%" y="421" width="0.0786%" height="15" fill="rgb(244,86,38)" fg:x="1127" fg:w="1"/><text x="88.7810%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.5310%" y="405" width="0.0786%" height="15" fill="rgb(242,167,7)" fg:x="1127" fg:w="1"/><text x="88.7810%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.5310%" y="389" width="0.0786%" height="15" fill="rgb(218,216,3)" fg:x="1127" fg:w="1"/><text x="88.7810%" y="399.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="88.6096%" y="469" width="0.0786%" height="15" fill="rgb(206,136,36)" fg:x="1128" fg:w="1"/><text x="88.8596%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="88.6096%" y="453" width="0.0786%" height="15" fill="rgb(206,206,15)" fg:x="1128" fg:w="1"/><text x="88.8596%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="88.6096%" y="437" width="0.0786%" height="15" fill="rgb(207,163,34)" fg:x="1128" fg:w="1"/><text x="88.8596%" y="447.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="88.6096%" y="421" width="0.0786%" height="15" fill="rgb(240,127,22)" fg:x="1128" fg:w="1"/><text x="88.8596%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="88.6096%" y="405" width="0.0786%" height="15" fill="rgb(227,49,5)" fg:x="1128" fg:w="1"/><text x="88.8596%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.6096%" y="389" width="0.0786%" height="15" fill="rgb(231,8,6)" fg:x="1128" fg:w="1"/><text x="88.8596%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="88.6096%" y="373" width="0.0786%" height="15" fill="rgb(223,21,24)" fg:x="1128" fg:w="1"/><text x="88.8596%" y="383.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="88.6096%" y="357" width="0.0786%" height="15" fill="rgb(244,44,52)" fg:x="1128" fg:w="1"/><text x="88.8596%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.6096%" y="341" width="0.0786%" height="15" fill="rgb(207,73,28)" fg:x="1128" fg:w="1"/><text x="88.8596%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="88.5310%" y="485" width="0.2357%" height="15" fill="rgb(234,215,10)" fg:x="1127" fg:w="3"/><text x="88.7810%" y="495.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.08%)</title><rect x="88.6881%" y="469" width="0.0786%" height="15" fill="rgb(236,85,3)" fg:x="1129" fg:w="1"/><text x="88.9381%" y="479.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="88.6881%" y="453" width="0.0786%" height="15" fill="rgb(236,102,39)" fg:x="1129" fg:w="1"/><text x="88.9381%" y="463.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="88.6881%" y="437" width="0.0786%" height="15" fill="rgb(243,50,8)" fg:x="1129" fg:w="1"/><text x="88.9381%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.7667%" y="453" width="0.0786%" height="15" fill="rgb(207,111,4)" fg:x="1130" fg:w="1"/><text x="89.0167%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.7667%" y="437" width="0.0786%" height="15" fill="rgb(230,52,42)" fg:x="1130" fg:w="1"/><text x="89.0167%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.7667%" y="421" width="0.0786%" height="15" fill="rgb(252,178,50)" fg:x="1130" fg:w="1"/><text x="89.0167%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.7667%" y="405" width="0.0786%" height="15" fill="rgb(234,46,35)" fg:x="1130" fg:w="1"/><text x="89.0167%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.7667%" y="389" width="0.0786%" height="15" fill="rgb(228,69,37)" fg:x="1130" fg:w="1"/><text x="89.0167%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.7667%" y="373" width="0.0786%" height="15" fill="rgb(221,21,11)" fg:x="1130" fg:w="1"/><text x="89.0167%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.7667%" y="357" width="0.0786%" height="15" fill="rgb(223,56,9)" fg:x="1130" fg:w="1"/><text x="89.0167%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.7667%" y="341" width="0.0786%" height="15" fill="rgb(234,30,19)" fg:x="1130" fg:w="1"/><text x="89.0167%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.7667%" y="325" width="0.0786%" height="15" fill="rgb(211,64,54)" fg:x="1130" fg:w="1"/><text x="89.0167%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.7667%" y="309" width="0.0786%" height="15" fill="rgb(250,189,5)" fg:x="1130" fg:w="1"/><text x="89.0167%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.7667%" y="293" width="0.0786%" height="15" fill="rgb(214,180,13)" fg:x="1130" fg:w="1"/><text x="89.0167%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.7667%" y="277" width="0.0786%" height="15" fill="rgb(238,40,40)" fg:x="1130" fg:w="1"/><text x="89.0167%" y="287.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="88.7667%" y="261" width="0.0786%" height="15" fill="rgb(214,101,38)" fg:x="1130" fg:w="1"/><text x="89.0167%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.8452%" y="453" width="0.0786%" height="15" fill="rgb(242,65,53)" fg:x="1131" fg:w="1"/><text x="89.0952%" y="463.50"></text></g><g><title>plugins_core::build::Build::save (6 samples, 0.47%)</title><rect x="88.5310%" y="501" width="0.4713%" height="15" fill="rgb(230,22,45)" fg:x="1127" fg:w="6"/><text x="88.7810%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="88.7667%" y="485" width="0.2357%" height="15" fill="rgb(223,77,1)" fg:x="1130" fg:w="3"/><text x="89.0167%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="88.7667%" y="469" width="0.2357%" height="15" fill="rgb(227,33,37)" fg:x="1130" fg:w="3"/><text x="89.0167%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="88.9238%" y="453" width="0.0786%" height="15" fill="rgb(224,148,39)" fg:x="1132" fg:w="1"/><text x="89.1738%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="88.9238%" y="437" width="0.0786%" height="15" fill="rgb(232,212,39)" fg:x="1132" fg:w="1"/><text x="89.1738%" y="447.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="89.0024%" y="469" width="0.0786%" height="15" fill="rgb(251,172,7)" fg:x="1133" fg:w="1"/><text x="89.2524%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="89.0024%" y="453" width="0.0786%" height="15" fill="rgb(219,39,9)" fg:x="1133" fg:w="1"/><text x="89.2524%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="89.0024%" y="437" width="0.0786%" height="15" fill="rgb(228,118,14)" fg:x="1133" fg:w="1"/><text x="89.2524%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.1595%" y="389" width="0.0786%" height="15" fill="rgb(207,140,10)" fg:x="1135" fg:w="1"/><text x="89.4095%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="89.0809%" y="437" width="0.2357%" height="15" fill="rgb(227,111,53)" fg:x="1134" fg:w="3"/><text x="89.3309%" y="447.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="89.0809%" y="421" width="0.2357%" height="15" fill="rgb(216,165,16)" fg:x="1134" fg:w="3"/><text x="89.3309%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="89.0809%" y="405" width="0.2357%" height="15" fill="rgb(226,111,18)" fg:x="1134" fg:w="3"/><text x="89.3309%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.2380%" y="389" width="0.0786%" height="15" fill="rgb(251,27,17)" fg:x="1136" fg:w="1"/><text x="89.4880%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.2380%" y="373" width="0.0786%" height="15" fill="rgb(254,69,9)" fg:x="1136" fg:w="1"/><text x="89.4880%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.2380%" y="357" width="0.0786%" height="15" fill="rgb(234,140,37)" fg:x="1136" fg:w="1"/><text x="89.4880%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.2380%" y="341" width="0.0786%" height="15" fill="rgb(220,93,8)" fg:x="1136" fg:w="1"/><text x="89.4880%" y="351.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (6 samples, 0.47%)</title><rect x="89.0024%" y="501" width="0.4713%" height="15" fill="rgb(236,113,3)" fg:x="1133" fg:w="6"/><text x="89.2524%" y="511.50"></text></g><g><title>plugins_core::tools::set_occupying (6 samples, 0.47%)</title><rect x="89.0024%" y="485" width="0.4713%" height="15" fill="rgb(234,108,23)" fg:x="1133" fg:w="6"/><text x="89.2524%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (5 samples, 0.39%)</title><rect x="89.0809%" y="469" width="0.3928%" height="15" fill="rgb(205,114,34)" fg:x="1134" fg:w="5"/><text x="89.3309%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.39%)</title><rect x="89.0809%" y="453" width="0.3928%" height="15" fill="rgb(236,200,45)" fg:x="1134" fg:w="5"/><text x="89.3309%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="89.3166%" y="437" width="0.1571%" height="15" fill="rgb(227,194,29)" fg:x="1137" fg:w="2"/><text x="89.5666%" y="447.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="89.3166%" y="421" width="0.1571%" height="15" fill="rgb(250,76,42)" fg:x="1137" fg:w="2"/><text x="89.5666%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="89.3166%" y="405" width="0.1571%" height="15" fill="rgb(208,128,8)" fg:x="1137" fg:w="2"/><text x="89.5666%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.3166%" y="389" width="0.1571%" height="15" fill="rgb(229,209,35)" fg:x="1137" fg:w="2"/><text x="89.5666%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.3166%" y="373" width="0.1571%" height="15" fill="rgb(215,39,53)" fg:x="1137" fg:w="2"/><text x="89.5666%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.3951%" y="357" width="0.0786%" height="15" fill="rgb(219,123,41)" fg:x="1138" fg:w="1"/><text x="89.6451%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.4737%" y="469" width="0.1571%" height="15" fill="rgb(212,158,18)" fg:x="1139" fg:w="2"/><text x="89.7237%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.5522%" y="453" width="0.0786%" height="15" fill="rgb(234,196,53)" fg:x="1140" fg:w="1"/><text x="89.8022%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.5522%" y="437" width="0.0786%" height="15" fill="rgb(210,139,12)" fg:x="1140" fg:w="1"/><text x="89.8022%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.5522%" y="421" width="0.0786%" height="15" fill="rgb(220,116,54)" fg:x="1140" fg:w="1"/><text x="89.8022%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.5522%" y="405" width="0.0786%" height="15" fill="rgb(247,103,28)" fg:x="1140" fg:w="1"/><text x="89.8022%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.5522%" y="389" width="0.0786%" height="15" fill="rgb(253,156,45)" fg:x="1140" fg:w="1"/><text x="89.8022%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.5522%" y="373" width="0.0786%" height="15" fill="rgb(237,157,52)" fg:x="1140" fg:w="1"/><text x="89.8022%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.5522%" y="357" width="0.0786%" height="15" fill="rgb(253,112,16)" fg:x="1140" fg:w="1"/><text x="89.8022%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.5522%" y="341" width="0.0786%" height="15" fill="rgb(234,70,18)" fg:x="1140" fg:w="1"/><text x="89.8022%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.5522%" y="325" width="0.0786%" height="15" fill="rgb(247,138,19)" fg:x="1140" fg:w="1"/><text x="89.8022%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.5522%" y="309" width="0.0786%" height="15" fill="rgb(207,171,1)" fg:x="1140" fg:w="1"/><text x="89.8022%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.5522%" y="293" width="0.0786%" height="15" fill="rgb(239,213,3)" fg:x="1140" fg:w="1"/><text x="89.8022%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.5522%" y="277" width="0.0786%" height="15" fill="rgb(226,112,4)" fg:x="1140" fg:w="1"/><text x="89.8022%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.5522%" y="261" width="0.0786%" height="15" fill="rgb(252,170,12)" fg:x="1140" fg:w="1"/><text x="89.8022%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.5522%" y="245" width="0.0786%" height="15" fill="rgb(241,106,13)" fg:x="1140" fg:w="1"/><text x="89.8022%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.6308%" y="437" width="0.0786%" height="15" fill="rgb(225,73,23)" fg:x="1141" fg:w="1"/><text x="89.8808%" y="447.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (4 samples, 0.31%)</title><rect x="89.4737%" y="485" width="0.3142%" height="15" fill="rgb(251,227,29)" fg:x="1139" fg:w="4"/><text x="89.7237%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="89.6308%" y="469" width="0.1571%" height="15" fill="rgb(237,144,13)" fg:x="1141" fg:w="2"/><text x="89.8808%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.6308%" y="453" width="0.1571%" height="15" fill="rgb(232,106,46)" fg:x="1141" fg:w="2"/><text x="89.8808%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.7093%" y="437" width="0.0786%" height="15" fill="rgb(245,154,53)" fg:x="1142" fg:w="1"/><text x="89.9593%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.7093%" y="421" width="0.0786%" height="15" fill="rgb(212,119,47)" fg:x="1142" fg:w="1"/><text x="89.9593%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="89.7093%" y="405" width="0.0786%" height="15" fill="rgb(253,135,25)" fg:x="1142" fg:w="1"/><text x="89.9593%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="89.7093%" y="389" width="0.0786%" height="15" fill="rgb(253,208,39)" fg:x="1142" fg:w="1"/><text x="89.9593%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="89.7093%" y="373" width="0.0786%" height="15" fill="rgb(226,64,12)" fg:x="1142" fg:w="1"/><text x="89.9593%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::moving::model::Occupyable&gt; (1 samples, 0.08%)</title><rect x="89.7879%" y="485" width="0.0786%" height="15" fill="rgb(214,162,37)" fg:x="1143" fg:w="1"/><text x="90.0379%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="89.7879%" y="469" width="0.0786%" height="15" fill="rgb(250,104,5)" fg:x="1143" fg:w="1"/><text x="90.0379%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.7879%" y="453" width="0.0786%" height="15" fill="rgb(220,202,50)" fg:x="1143" fg:w="1"/><text x="90.0379%" y="463.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (6 samples, 0.47%)</title><rect x="89.4737%" y="501" width="0.4713%" height="15" fill="rgb(248,67,38)" fg:x="1139" fg:w="6"/><text x="89.7237%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="89.8665%" y="485" width="0.0786%" height="15" fill="rgb(242,94,35)" fg:x="1144" fg:w="1"/><text x="90.1165%" y="495.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="89.8665%" y="469" width="0.0786%" height="15" fill="rgb(209,78,37)" fg:x="1144" fg:w="1"/><text x="90.1165%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.8665%" y="453" width="0.0786%" height="15" fill="rgb(230,126,47)" fg:x="1144" fg:w="1"/><text x="90.1165%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="89.8665%" y="437" width="0.0786%" height="15" fill="rgb(222,110,35)" fg:x="1144" fg:w="1"/><text x="90.1165%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_variant (1 samples, 0.08%)</title><rect x="89.8665%" y="421" width="0.0786%" height="15" fill="rgb(233,154,20)" fg:x="1144" fg:w="1"/><text x="90.1165%" y="431.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::SimpleRoute&gt;::serialize (1 samples, 0.08%)</title><rect x="89.8665%" y="405" width="0.0786%" height="15" fill="rgb(223,53,50)" fg:x="1144" fg:w="1"/><text x="90.1165%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.8665%" y="389" width="0.0786%" height="15" fill="rgb(251,27,26)" fg:x="1144" fg:w="1"/><text x="90.1165%" y="399.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="89.9450%" y="485" width="0.0786%" height="15" fill="rgb(223,189,16)" fg:x="1145" fg:w="1"/><text x="90.1950%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="89.9450%" y="469" width="0.0786%" height="15" fill="rgb(207,5,54)" fg:x="1145" fg:w="1"/><text x="90.1950%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="89.9450%" y="453" width="0.0786%" height="15" fill="rgb(254,124,50)" fg:x="1145" fg:w="1"/><text x="90.1950%" y="463.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="90.0236%" y="485" width="0.0786%" height="15" fill="rgb(253,193,24)" fg:x="1146" fg:w="1"/><text x="90.2736%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="90.0236%" y="469" width="0.0786%" height="15" fill="rgb(235,170,24)" fg:x="1146" fg:w="1"/><text x="90.2736%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="90.0236%" y="453" width="0.0786%" height="15" fill="rgb(222,212,52)" fg:x="1146" fg:w="1"/><text x="90.2736%" y="463.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="90.0236%" y="437" width="0.0786%" height="15" fill="rgb(223,17,45)" fg:x="1146" fg:w="1"/><text x="90.2736%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="90.0236%" y="421" width="0.0786%" height="15" fill="rgb(227,103,26)" fg:x="1146" fg:w="1"/><text x="90.2736%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.0236%" y="405" width="0.0786%" height="15" fill="rgb(251,151,25)" fg:x="1146" fg:w="1"/><text x="90.2736%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.0236%" y="389" width="0.0786%" height="15" fill="rgb(248,144,29)" fg:x="1146" fg:w="1"/><text x="90.2736%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.0236%" y="373" width="0.0786%" height="15" fill="rgb(245,97,16)" fg:x="1146" fg:w="1"/><text x="90.2736%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.0236%" y="357" width="0.0786%" height="15" fill="rgb(220,200,29)" fg:x="1146" fg:w="1"/><text x="90.2736%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.0236%" y="341" width="0.0786%" height="15" fill="rgb(206,38,29)" fg:x="1146" fg:w="1"/><text x="90.2736%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.0236%" y="325" width="0.0786%" height="15" fill="rgb(245,19,52)" fg:x="1146" fg:w="1"/><text x="90.2736%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.0236%" y="309" width="0.0786%" height="15" fill="rgb(205,67,43)" fg:x="1146" fg:w="1"/><text x="90.2736%" y="319.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="90.1021%" y="485" width="0.0786%" height="15" fill="rgb(217,128,23)" fg:x="1147" fg:w="1"/><text x="90.3521%" y="495.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="90.1021%" y="469" width="0.0786%" height="15" fill="rgb(210,109,28)" fg:x="1147" fg:w="1"/><text x="90.3521%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.1021%" y="453" width="0.0786%" height="15" fill="rgb(233,181,7)" fg:x="1147" fg:w="1"/><text x="90.3521%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.1021%" y="437" width="0.0786%" height="15" fill="rgb(244,11,22)" fg:x="1147" fg:w="1"/><text x="90.3521%" y="447.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="90.1807%" y="421" width="0.0786%" height="15" fill="rgb(205,124,54)" fg:x="1148" fg:w="1"/><text x="90.4307%" y="431.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (77 samples, 6.05%)</title><rect x="84.2891%" y="517" width="6.0487%" height="15" fill="rgb(218,21,27)" fg:x="1073" fg:w="77"/><text x="84.5391%" y="527.50">plugins_..</text></g><g><title>plugins_core::tools::set_container (5 samples, 0.39%)</title><rect x="89.9450%" y="501" width="0.3928%" height="15" fill="rgb(224,153,33)" fg:x="1145" fg:w="5"/><text x="90.1950%" y="511.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="90.1807%" y="485" width="0.1571%" height="15" fill="rgb(240,219,28)" fg:x="1148" fg:w="2"/><text x="90.4307%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="90.1807%" y="469" width="0.1571%" height="15" fill="rgb(214,80,29)" fg:x="1148" fg:w="2"/><text x="90.4307%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="90.1807%" y="453" width="0.1571%" height="15" fill="rgb(247,148,44)" fg:x="1148" fg:w="2"/><text x="90.4307%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="90.1807%" y="437" width="0.1571%" height="15" fill="rgb(243,110,30)" fg:x="1148" fg:w="2"/><text x="90.4307%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="90.2592%" y="421" width="0.0786%" height="15" fill="rgb(243,173,41)" fg:x="1149" fg:w="1"/><text x="90.5092%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="90.2592%" y="405" width="0.0786%" height="15" fill="rgb(225,160,47)" fg:x="1149" fg:w="1"/><text x="90.5092%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.2592%" y="389" width="0.0786%" height="15" fill="rgb(215,44,21)" fg:x="1149" fg:w="1"/><text x="90.5092%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.2592%" y="373" width="0.0786%" height="15" fill="rgb(248,90,3)" fg:x="1149" fg:w="1"/><text x="90.5092%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.16%)</title><rect x="90.3378%" y="469" width="0.1571%" height="15" fill="rgb(220,196,49)" fg:x="1150" fg:w="2"/><text x="90.5878%" y="479.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (2 samples, 0.16%)</title><rect x="90.3378%" y="453" width="0.1571%" height="15" fill="rgb(217,138,14)" fg:x="1150" fg:w="2"/><text x="90.5878%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="90.4163%" y="437" width="0.0786%" height="15" fill="rgb(219,111,20)" fg:x="1151" fg:w="1"/><text x="90.6663%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="90.4163%" y="421" width="0.0786%" height="15" fill="rgb(218,114,4)" fg:x="1151" fg:w="1"/><text x="90.6663%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="90.4163%" y="405" width="0.0786%" height="15" fill="rgb(238,133,3)" fg:x="1151" fg:w="1"/><text x="90.6663%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="90.4163%" y="389" width="0.0786%" height="15" fill="rgb(224,95,0)" fg:x="1151" fg:w="1"/><text x="90.6663%" y="399.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="90.4163%" y="373" width="0.0786%" height="15" fill="rgb(220,169,35)" fg:x="1151" fg:w="1"/><text x="90.6663%" y="383.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="90.4163%" y="357" width="0.0786%" height="15" fill="rgb(242,116,47)" fg:x="1151" fg:w="1"/><text x="90.6663%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.4163%" y="341" width="0.0786%" height="15" fill="rgb(251,42,20)" fg:x="1151" fg:w="1"/><text x="90.6663%" y="351.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (3 samples, 0.24%)</title><rect x="90.3378%" y="517" width="0.2357%" height="15" fill="rgb(234,7,34)" fg:x="1150" fg:w="3"/><text x="90.5878%" y="527.50"></text></g><g><title>plugins_core::build::Build::new (3 samples, 0.24%)</title><rect x="90.3378%" y="501" width="0.2357%" height="15" fill="rgb(243,208,13)" fg:x="1150" fg:w="3"/><text x="90.5878%" y="511.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.24%)</title><rect x="90.3378%" y="485" width="0.2357%" height="15" fill="rgb(227,33,28)" fg:x="1150" fg:w="3"/><text x="90.5878%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="90.4949%" y="469" width="0.0786%" height="15" fill="rgb(250,47,37)" fg:x="1152" fg:w="1"/><text x="90.7449%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="90.4949%" y="453" width="0.0786%" height="15" fill="rgb(235,111,52)" fg:x="1152" fg:w="1"/><text x="90.7449%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.4949%" y="437" width="0.0786%" height="15" fill="rgb(223,64,28)" fg:x="1152" fg:w="1"/><text x="90.7449%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="90.4949%" y="421" width="0.0786%" height="15" fill="rgb(236,67,22)" fg:x="1152" fg:w="1"/><text x="90.7449%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="90.4949%" y="405" width="0.0786%" height="15" fill="rgb(243,79,24)" fg:x="1152" fg:w="1"/><text x="90.7449%" y="415.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="90.5734%" y="485" width="0.0786%" height="15" fill="rgb(241,225,22)" fg:x="1153" fg:w="1"/><text x="90.8234%" y="495.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="90.5734%" y="469" width="0.0786%" height="15" fill="rgb(228,214,26)" fg:x="1153" fg:w="1"/><text x="90.8234%" y="479.50"></text></g><g><title>kernel::model::builder::EntityBuilder::new (1 samples, 0.08%)</title><rect x="90.5734%" y="453" width="0.0786%" height="15" fill="rgb(219,84,52)" fg:x="1153" fg:w="1"/><text x="90.8234%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="90.6520%" y="421" width="0.0786%" height="15" fill="rgb(220,12,22)" fg:x="1154" fg:w="1"/><text x="90.9020%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.6520%" y="405" width="0.0786%" height="15" fill="rgb(219,9,49)" fg:x="1154" fg:w="1"/><text x="90.9020%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.6520%" y="389" width="0.0786%" height="15" fill="rgb(237,40,43)" fg:x="1154" fg:w="1"/><text x="90.9020%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.6520%" y="373" width="0.0786%" height="15" fill="rgb(212,189,32)" fg:x="1154" fg:w="1"/><text x="90.9020%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="90.6520%" y="453" width="0.1571%" height="15" fill="rgb(247,48,9)" fg:x="1154" fg:w="2"/><text x="90.9020%" y="463.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="90.6520%" y="437" width="0.1571%" height="15" fill="rgb(247,112,3)" fg:x="1154" fg:w="2"/><text x="90.9020%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.7306%" y="421" width="0.0786%" height="15" fill="rgb(243,110,18)" fg:x="1155" fg:w="1"/><text x="90.9806%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="90.6520%" y="469" width="0.2357%" height="15" fill="rgb(233,223,44)" fg:x="1154" fg:w="3"/><text x="90.9020%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="90.8091%" y="453" width="0.0786%" height="15" fill="rgb(245,160,20)" fg:x="1156" fg:w="1"/><text x="91.0591%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="90.8091%" y="437" width="0.0786%" height="15" fill="rgb(225,37,1)" fg:x="1156" fg:w="1"/><text x="91.0591%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.8091%" y="421" width="0.0786%" height="15" fill="rgb(253,227,39)" fg:x="1156" fg:w="1"/><text x="91.0591%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="90.8091%" y="405" width="0.0786%" height="15" fill="rgb(240,179,26)" fg:x="1156" fg:w="1"/><text x="91.0591%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.8091%" y="389" width="0.0786%" height="15" fill="rgb(237,212,23)" fg:x="1156" fg:w="1"/><text x="91.0591%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.8877%" y="469" width="0.0786%" height="15" fill="rgb(221,38,11)" fg:x="1157" fg:w="1"/><text x="91.1377%" y="479.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (6 samples, 0.47%)</title><rect x="90.5734%" y="517" width="0.4713%" height="15" fill="rgb(215,85,6)" fg:x="1153" fg:w="6"/><text x="90.8234%" y="527.50"></text></g><g><title>plugins_core::build::QuickThing::make (6 samples, 0.47%)</title><rect x="90.5734%" y="501" width="0.4713%" height="15" fill="rgb(239,64,14)" fg:x="1153" fg:w="6"/><text x="90.8234%" y="511.50"></text></g><g><title>plugins_core::build::Build::save (5 samples, 0.39%)</title><rect x="90.6520%" y="485" width="0.3928%" height="15" fill="rgb(215,150,32)" fg:x="1154" fg:w="5"/><text x="90.9020%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="90.9662%" y="469" width="0.0786%" height="15" fill="rgb(238,15,13)" fg:x="1158" fg:w="1"/><text x="91.2162%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="90.9662%" y="453" width="0.0786%" height="15" fill="rgb(251,87,8)" fg:x="1158" fg:w="1"/><text x="91.2162%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="90.9662%" y="437" width="0.0786%" height="15" fill="rgb(206,86,1)" fg:x="1158" fg:w="1"/><text x="91.2162%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.9662%" y="421" width="0.0786%" height="15" fill="rgb(208,151,45)" fg:x="1158" fg:w="1"/><text x="91.2162%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.9662%" y="405" width="0.0786%" height="15" fill="rgb(231,181,24)" fg:x="1158" fg:w="1"/><text x="91.2162%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.9662%" y="389" width="0.0786%" height="15" fill="rgb(240,106,29)" fg:x="1158" fg:w="1"/><text x="91.2162%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="91.0448%" y="501" width="0.0786%" height="15" fill="rgb(227,166,11)" fg:x="1159" fg:w="1"/><text x="91.2948%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="91.0448%" y="485" width="0.0786%" height="15" fill="rgb(254,14,34)" fg:x="1159" fg:w="1"/><text x="91.2948%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="91.0448%" y="469" width="0.0786%" height="15" fill="rgb(223,222,6)" fg:x="1159" fg:w="1"/><text x="91.2948%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.0448%" y="453" width="0.0786%" height="15" fill="rgb(245,69,24)" fg:x="1159" fg:w="1"/><text x="91.2948%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.0448%" y="437" width="0.0786%" height="15" fill="rgb(213,193,7)" fg:x="1159" fg:w="1"/><text x="91.2948%" y="447.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="91.1233%" y="485" width="0.0786%" height="15" fill="rgb(237,92,51)" fg:x="1160" fg:w="1"/><text x="91.3733%" y="495.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="91.1233%" y="469" width="0.0786%" height="15" fill="rgb(225,194,6)" fg:x="1160" fg:w="1"/><text x="91.3733%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="91.2019%" y="469" width="0.0786%" height="15" fill="rgb(205,159,49)" fg:x="1161" fg:w="1"/><text x="91.4519%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.2019%" y="453" width="0.0786%" height="15" fill="rgb(219,69,2)" fg:x="1161" fg:w="1"/><text x="91.4519%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="91.1233%" y="501" width="0.2357%" height="15" fill="rgb(215,107,24)" fg:x="1160" fg:w="3"/><text x="91.3733%" y="511.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="91.2019%" y="485" width="0.1571%" height="15" fill="rgb(249,208,29)" fg:x="1161" fg:w="2"/><text x="91.4519%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="91.2804%" y="469" width="0.0786%" height="15" fill="rgb(213,147,10)" fg:x="1162" fg:w="1"/><text x="91.5304%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="91.2804%" y="453" width="0.0786%" height="15" fill="rgb(254,140,42)" fg:x="1162" fg:w="1"/><text x="91.5304%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="91.2804%" y="437" width="0.0786%" height="15" fill="rgb(249,9,15)" fg:x="1162" fg:w="1"/><text x="91.5304%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="91.2804%" y="421" width="0.0786%" height="15" fill="rgb(210,19,33)" fg:x="1162" fg:w="1"/><text x="91.5304%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="91.2804%" y="405" width="0.0786%" height="15" fill="rgb(241,121,22)" fg:x="1162" fg:w="1"/><text x="91.5304%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (1 samples, 0.08%)</title><rect x="91.3590%" y="501" width="0.0786%" height="15" fill="rgb(244,69,52)" fg:x="1163" fg:w="1"/><text x="91.6090%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.3590%" y="485" width="0.0786%" height="15" fill="rgb(244,191,54)" fg:x="1163" fg:w="1"/><text x="91.6090%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="91.4375%" y="469" width="0.0786%" height="15" fill="rgb(250,3,53)" fg:x="1164" fg:w="1"/><text x="91.6875%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.4375%" y="453" width="0.0786%" height="15" fill="rgb(205,77,3)" fg:x="1164" fg:w="1"/><text x="91.6875%" y="463.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="91.5161%" y="453" width="0.0786%" height="15" fill="rgb(207,155,3)" fg:x="1165" fg:w="1"/><text x="91.7661%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="91.5161%" y="437" width="0.0786%" height="15" fill="rgb(224,79,2)" fg:x="1165" fg:w="1"/><text x="91.7661%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="91.5161%" y="421" width="0.0786%" height="15" fill="rgb(243,172,5)" fg:x="1165" fg:w="1"/><text x="91.7661%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="91.5161%" y="405" width="0.0786%" height="15" fill="rgb(217,23,43)" fg:x="1165" fg:w="1"/><text x="91.7661%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.5161%" y="389" width="0.0786%" height="15" fill="rgb(223,109,20)" fg:x="1165" fg:w="1"/><text x="91.7661%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.5161%" y="373" width="0.0786%" height="15" fill="rgb(232,159,21)" fg:x="1165" fg:w="1"/><text x="91.7661%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.5947%" y="421" width="0.1571%" height="15" fill="rgb(219,58,2)" fg:x="1166" fg:w="2"/><text x="91.8447%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.6732%" y="405" width="0.0786%" height="15" fill="rgb(241,56,8)" fg:x="1167" fg:w="1"/><text x="91.9232%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="91.6732%" y="389" width="0.0786%" height="15" fill="rgb(249,10,27)" fg:x="1167" fg:w="1"/><text x="91.9232%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.39%)</title><rect x="91.4375%" y="485" width="0.3928%" height="15" fill="rgb(248,177,5)" fg:x="1164" fg:w="5"/><text x="91.6875%" y="495.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.31%)</title><rect x="91.5161%" y="469" width="0.3142%" height="15" fill="rgb(239,12,30)" fg:x="1165" fg:w="4"/><text x="91.7661%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="91.5947%" y="453" width="0.2357%" height="15" fill="rgb(229,164,25)" fg:x="1166" fg:w="3"/><text x="91.8447%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="91.5947%" y="437" width="0.2357%" height="15" fill="rgb(231,217,50)" fg:x="1166" fg:w="3"/><text x="91.8447%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="91.7518%" y="421" width="0.0786%" height="15" fill="rgb(247,99,32)" fg:x="1168" fg:w="1"/><text x="92.0018%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="91.7518%" y="405" width="0.0786%" height="15" fill="rgb(240,74,50)" fg:x="1168" fg:w="1"/><text x="92.0018%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="91.7518%" y="389" width="0.0786%" height="15" fill="rgb(218,54,8)" fg:x="1168" fg:w="1"/><text x="92.0018%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="91.7518%" y="373" width="0.0786%" height="15" fill="rgb(227,132,20)" fg:x="1168" fg:w="1"/><text x="92.0018%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="91.7518%" y="357" width="0.0786%" height="15" fill="rgb(232,134,12)" fg:x="1168" fg:w="1"/><text x="92.0018%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="91.7518%" y="341" width="0.0786%" height="15" fill="rgb(250,129,18)" fg:x="1168" fg:w="1"/><text x="92.0018%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="91.7518%" y="325" width="0.0786%" height="15" fill="rgb(232,129,47)" fg:x="1168" fg:w="1"/><text x="92.0018%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.7518%" y="309" width="0.0786%" height="15" fill="rgb(230,31,40)" fg:x="1168" fg:w="1"/><text x="92.0018%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.7518%" y="293" width="0.0786%" height="15" fill="rgb(232,126,10)" fg:x="1168" fg:w="1"/><text x="92.0018%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.7518%" y="277" width="0.0786%" height="15" fill="rgb(205,46,31)" fg:x="1168" fg:w="1"/><text x="92.0018%" y="287.50"></text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (12 samples, 0.94%)</title><rect x="91.0448%" y="517" width="0.9427%" height="15" fill="rgb(232,37,37)" fg:x="1159" fg:w="12"/><text x="91.2948%" y="527.50"></text></g><g><title>plugins_core::build::Build::save (7 samples, 0.55%)</title><rect x="91.4375%" y="501" width="0.5499%" height="15" fill="rgb(240,91,16)" fg:x="1164" fg:w="7"/><text x="91.6875%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="91.8303%" y="485" width="0.1571%" height="15" fill="rgb(224,160,9)" fg:x="1169" fg:w="2"/><text x="92.0803%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.9089%" y="469" width="0.0786%" height="15" fill="rgb(215,116,14)" fg:x="1170" fg:w="1"/><text x="92.1589%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.9089%" y="453" width="0.0786%" height="15" fill="rgb(235,46,36)" fg:x="1170" fg:w="1"/><text x="92.1589%" y="463.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (157 samples, 12.33%)</title><rect x="79.7329%" y="533" width="12.3331%" height="15" fill="rgb(238,39,28)" fg:x="1015" fg:w="157"/><text x="79.9829%" y="543.50">&lt;tests::HoldingKey..</text></g><g><title>plugins_core::build::BuildSurroundings::route (1 samples, 0.08%)</title><rect x="91.9874%" y="517" width="0.0786%" height="15" fill="rgb(242,125,29)" fg:x="1171" fg:w="1"/><text x="92.2374%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="92.2231%" y="517" width="0.0786%" height="15" fill="rgb(238,211,30)" fg:x="1174" fg:w="1"/><text x="92.4731%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="92.2231%" y="501" width="0.0786%" height="15" fill="rgb(227,201,28)" fg:x="1174" fg:w="1"/><text x="92.4731%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="92.2231%" y="485" width="0.0786%" height="15" fill="rgb(238,77,29)" fg:x="1174" fg:w="1"/><text x="92.4731%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="92.2231%" y="469" width="0.0786%" height="15" fill="rgb(213,221,40)" fg:x="1174" fg:w="1"/><text x="92.4731%" y="479.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="92.2231%" y="453" width="0.0786%" height="15" fill="rgb(226,220,44)" fg:x="1174" fg:w="1"/><text x="92.4731%" y="463.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="92.2231%" y="437" width="0.0786%" height="15" fill="rgb(228,90,23)" fg:x="1174" fg:w="1"/><text x="92.4731%" y="447.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="92.2231%" y="421" width="0.0786%" height="15" fill="rgb(235,72,29)" fg:x="1174" fg:w="1"/><text x="92.4731%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="92.2231%" y="405" width="0.0786%" height="15" fill="rgb(248,117,39)" fg:x="1174" fg:w="1"/><text x="92.4731%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="92.2231%" y="389" width="0.0786%" height="15" fill="rgb(225,43,28)" fg:x="1174" fg:w="1"/><text x="92.4731%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="92.2231%" y="373" width="0.0786%" height="15" fill="rgb(240,93,4)" fg:x="1174" fg:w="1"/><text x="92.4731%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.2231%" y="357" width="0.0786%" height="15" fill="rgb(234,178,27)" fg:x="1174" fg:w="1"/><text x="92.4731%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.2231%" y="341" width="0.0786%" height="15" fill="rgb(254,88,22)" fg:x="1174" fg:w="1"/><text x="92.4731%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="92.2231%" y="325" width="0.0786%" height="15" fill="rgb(240,206,50)" fg:x="1174" fg:w="1"/><text x="92.4731%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="92.2231%" y="309" width="0.0786%" height="15" fill="rgb(249,103,8)" fg:x="1174" fg:w="1"/><text x="92.4731%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="92.2231%" y="293" width="0.0786%" height="15" fill="rgb(241,178,36)" fg:x="1174" fg:w="1"/><text x="92.4731%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="92.2231%" y="277" width="0.0786%" height="15" fill="rgb(246,110,15)" fg:x="1174" fg:w="1"/><text x="92.4731%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="92.2231%" y="261" width="0.0786%" height="15" fill="rgb(207,14,43)" fg:x="1174" fg:w="1"/><text x="92.4731%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="92.3016%" y="469" width="0.0786%" height="15" fill="rgb(253,219,19)" fg:x="1175" fg:w="1"/><text x="92.5516%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="92.3016%" y="453" width="0.0786%" height="15" fill="rgb(216,126,5)" fg:x="1175" fg:w="1"/><text x="92.5516%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="92.3016%" y="437" width="0.0786%" height="15" fill="rgb(218,78,42)" fg:x="1175" fg:w="1"/><text x="92.5516%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="92.3016%" y="485" width="0.1571%" height="15" fill="rgb(215,154,40)" fg:x="1175" fg:w="2"/><text x="92.5516%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::state::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="92.3802%" y="469" width="0.0786%" height="15" fill="rgb(235,129,32)" fg:x="1176" fg:w="1"/><text x="92.6302%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="92.4588%" y="405" width="0.1571%" height="15" fill="rgb(218,51,8)" fg:x="1177" fg:w="2"/><text x="92.7088%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="92.4588%" y="389" width="0.1571%" height="15" fill="rgb(245,48,4)" fg:x="1177" fg:w="2"/><text x="92.7088%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.5373%" y="373" width="0.0786%" height="15" fill="rgb(250,175,12)" fg:x="1178" fg:w="1"/><text x="92.7873%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.5373%" y="357" width="0.0786%" height="15" fill="rgb(237,95,40)" fg:x="1178" fg:w="1"/><text x="92.7873%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="92.4588%" y="421" width="0.2357%" height="15" fill="rgb(244,120,0)" fg:x="1177" fg:w="3"/><text x="92.7088%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.6159%" y="405" width="0.0786%" height="15" fill="rgb(241,19,42)" fg:x="1179" fg:w="1"/><text x="92.8659%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="92.7730%" y="405" width="0.0786%" height="15" fill="rgb(217,174,48)" fg:x="1181" fg:w="1"/><text x="93.0230%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="92.8515%" y="405" width="0.1571%" height="15" fill="rgb(239,36,38)" fg:x="1182" fg:w="2"/><text x="93.1015%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="92.8515%" y="389" width="0.1571%" height="15" fill="rgb(220,63,49)" fg:x="1182" fg:w="2"/><text x="93.1015%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="92.8515%" y="373" width="0.1571%" height="15" fill="rgb(240,101,13)" fg:x="1182" fg:w="2"/><text x="93.1015%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.9301%" y="357" width="0.0786%" height="15" fill="rgb(209,184,51)" fg:x="1183" fg:w="1"/><text x="93.1801%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="93.0086%" y="389" width="0.0786%" height="15" fill="rgb(206,136,39)" fg:x="1184" fg:w="1"/><text x="93.2586%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="93.1658%" y="373" width="0.0786%" height="15" fill="rgb(254,47,45)" fg:x="1186" fg:w="1"/><text x="93.4158%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="93.1658%" y="357" width="0.0786%" height="15" fill="rgb(252,103,20)" fg:x="1186" fg:w="1"/><text x="93.4158%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="93.2443%" y="373" width="0.1571%" height="15" fill="rgb(230,69,12)" fg:x="1187" fg:w="2"/><text x="93.4943%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="93.2443%" y="357" width="0.1571%" height="15" fill="rgb(219,2,28)" fg:x="1187" fg:w="2"/><text x="93.4943%" y="367.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="93.2443%" y="341" width="0.1571%" height="15" fill="rgb(210,9,12)" fg:x="1187" fg:w="2"/><text x="93.4943%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="93.2443%" y="325" width="0.1571%" height="15" fill="rgb(235,99,33)" fg:x="1187" fg:w="2"/><text x="93.4943%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.3229%" y="309" width="0.0786%" height="15" fill="rgb(230,11,38)" fg:x="1188" fg:w="1"/><text x="93.5729%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.47%)</title><rect x="93.0872%" y="389" width="0.4713%" height="15" fill="rgb(217,129,0)" fg:x="1185" fg:w="6"/><text x="93.3372%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="93.4014%" y="373" width="0.1571%" height="15" fill="rgb(222,198,4)" fg:x="1189" fg:w="2"/><text x="93.6514%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="93.4800%" y="357" width="0.0786%" height="15" fill="rgb(246,170,27)" fg:x="1190" fg:w="1"/><text x="93.7300%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.4800%" y="341" width="0.0786%" height="15" fill="rgb(229,17,28)" fg:x="1190" fg:w="1"/><text x="93.7300%" y="351.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (15 samples, 1.18%)</title><rect x="92.4588%" y="437" width="1.1783%" height="15" fill="rgb(233,198,48)" fg:x="1177" fg:w="15"/><text x="92.7088%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.94%)</title><rect x="92.6944%" y="421" width="0.9427%" height="15" fill="rgb(238,103,23)" fg:x="1180" fg:w="12"/><text x="92.9444%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.63%)</title><rect x="93.0086%" y="405" width="0.6284%" height="15" fill="rgb(206,91,41)" fg:x="1184" fg:w="8"/><text x="93.2586%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="93.5585%" y="389" width="0.0786%" height="15" fill="rgb(227,34,25)" fg:x="1191" fg:w="1"/><text x="93.8085%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="93.6371%" y="389" width="0.1571%" height="15" fill="rgb(210,110,44)" fg:x="1192" fg:w="2"/><text x="93.8871%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="93.6371%" y="437" width="0.2357%" height="15" fill="rgb(216,189,8)" fg:x="1192" fg:w="3"/><text x="93.8871%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="93.6371%" y="421" width="0.2357%" height="15" fill="rgb(234,9,46)" fg:x="1192" fg:w="3"/><text x="93.8871%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="93.6371%" y="405" width="0.2357%" height="15" fill="rgb(251,200,5)" fg:x="1192" fg:w="3"/><text x="93.8871%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.7942%" y="389" width="0.0786%" height="15" fill="rgb(238,165,37)" fg:x="1194" fg:w="1"/><text x="94.0442%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.7942%" y="373" width="0.0786%" height="15" fill="rgb(232,77,38)" fg:x="1194" fg:w="1"/><text x="94.0442%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.7942%" y="357" width="0.0786%" height="15" fill="rgb(253,179,33)" fg:x="1194" fg:w="1"/><text x="94.0442%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.8727%" y="373" width="0.0786%" height="15" fill="rgb(240,13,35)" fg:x="1195" fg:w="1"/><text x="94.1227%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.0299%" y="357" width="0.0786%" height="15" fill="rgb(242,150,49)" fg:x="1197" fg:w="1"/><text x="94.2799%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="94.1870%" y="341" width="0.1571%" height="15" fill="rgb(237,176,28)" fg:x="1199" fg:w="2"/><text x="94.4370%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.2655%" y="325" width="0.0786%" height="15" fill="rgb(214,176,33)" fg:x="1200" fg:w="1"/><text x="94.5155%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.3441%" y="325" width="0.0786%" height="15" fill="rgb(214,25,12)" fg:x="1201" fg:w="1"/><text x="94.5941%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.71%)</title><rect x="93.8727%" y="405" width="0.7070%" height="15" fill="rgb(238,190,20)" fg:x="1195" fg:w="9"/><text x="94.1227%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.71%)</title><rect x="93.8727%" y="389" width="0.7070%" height="15" fill="rgb(208,11,19)" fg:x="1195" fg:w="9"/><text x="94.1227%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.63%)</title><rect x="93.9513%" y="373" width="0.6284%" height="15" fill="rgb(239,90,4)" fg:x="1196" fg:w="8"/><text x="94.2013%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="94.1084%" y="357" width="0.4713%" height="15" fill="rgb(248,110,3)" fg:x="1198" fg:w="6"/><text x="94.3584%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="94.3441%" y="341" width="0.2357%" height="15" fill="rgb(210,41,30)" fg:x="1201" fg:w="3"/><text x="94.5941%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="94.4226%" y="325" width="0.1571%" height="15" fill="rgb(239,36,8)" fg:x="1202" fg:w="2"/><text x="94.6726%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.5012%" y="309" width="0.0786%" height="15" fill="rgb(237,201,47)" fg:x="1203" fg:w="1"/><text x="94.7512%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="94.5797%" y="389" width="0.2357%" height="15" fill="rgb(224,140,29)" fg:x="1204" fg:w="3"/><text x="94.8297%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="94.6583%" y="373" width="0.1571%" height="15" fill="rgb(231,209,17)" fg:x="1205" fg:w="2"/><text x="94.9083%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="94.6583%" y="357" width="0.1571%" height="15" fill="rgb(249,196,1)" fg:x="1205" fg:w="2"/><text x="94.9083%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="94.6583%" y="341" width="0.1571%" height="15" fill="rgb(223,207,51)" fg:x="1205" fg:w="2"/><text x="94.9083%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="94.7368%" y="325" width="0.0786%" height="15" fill="rgb(210,14,40)" fg:x="1206" fg:w="1"/><text x="94.9868%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.8154%" y="389" width="0.0786%" height="15" fill="rgb(250,20,52)" fg:x="1207" fg:w="1"/><text x="95.0654%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="94.8940%" y="389" width="0.0786%" height="15" fill="rgb(241,46,11)" fg:x="1208" fg:w="1"/><text x="95.1440%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="94.8940%" y="373" width="0.0786%" height="15" fill="rgb(219,105,5)" fg:x="1208" fg:w="1"/><text x="95.1440%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.8940%" y="357" width="0.0786%" height="15" fill="rgb(252,77,35)" fg:x="1208" fg:w="1"/><text x="95.1440%" y="367.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (15 samples, 1.18%)</title><rect x="93.8727%" y="421" width="1.1783%" height="15" fill="rgb(243,119,2)" fg:x="1195" fg:w="15"/><text x="94.1227%" y="431.50"></text></g><g><title>treediff::diff::diff (6 samples, 0.47%)</title><rect x="94.5797%" y="405" width="0.4713%" height="15" fill="rgb(206,82,28)" fg:x="1204" fg:w="6"/><text x="94.8297%" y="415.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="94.9725%" y="389" width="0.0786%" height="15" fill="rgb(227,120,12)" fg:x="1209" fg:w="1"/><text x="95.2225%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="95.2867%" y="389" width="0.0786%" height="15" fill="rgb(229,134,41)" fg:x="1213" fg:w="1"/><text x="95.5367%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="95.3653%" y="389" width="0.0786%" height="15" fill="rgb(239,96,32)" fg:x="1214" fg:w="1"/><text x="95.6153%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="95.3653%" y="373" width="0.0786%" height="15" fill="rgb(225,46,27)" fg:x="1214" fg:w="1"/><text x="95.6153%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.3653%" y="357" width="0.0786%" height="15" fill="rgb(215,168,2)" fg:x="1214" fg:w="1"/><text x="95.6153%" y="367.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="95.4438%" y="341" width="0.0786%" height="15" fill="rgb(207,170,52)" fg:x="1215" fg:w="1"/><text x="95.6938%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="95.5224%" y="341" width="0.0786%" height="15" fill="rgb(237,198,36)" fg:x="1216" fg:w="1"/><text x="95.7724%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="95.5224%" y="325" width="0.0786%" height="15" fill="rgb(213,27,14)" fg:x="1216" fg:w="1"/><text x="95.7724%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="95.5224%" y="309" width="0.0786%" height="15" fill="rgb(218,77,5)" fg:x="1216" fg:w="1"/><text x="95.7724%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="95.5224%" y="293" width="0.0786%" height="15" fill="rgb(230,219,39)" fg:x="1216" fg:w="1"/><text x="95.7724%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="95.5224%" y="277" width="0.0786%" height="15" fill="rgb(245,177,7)" fg:x="1216" fg:w="1"/><text x="95.7724%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="95.5224%" y="261" width="0.0786%" height="15" fill="rgb(246,44,46)" fg:x="1216" fg:w="1"/><text x="95.7724%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="95.5224%" y="245" width="0.0786%" height="15" fill="rgb(207,173,15)" fg:x="1216" fg:w="1"/><text x="95.7724%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.5224%" y="229" width="0.0786%" height="15" fill="rgb(245,170,50)" fg:x="1216" fg:w="1"/><text x="95.7724%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.5224%" y="213" width="0.0786%" height="15" fill="rgb(233,156,21)" fg:x="1216" fg:w="1"/><text x="95.7724%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.5224%" y="197" width="0.0786%" height="15" fill="rgb(253,146,27)" fg:x="1216" fg:w="1"/><text x="95.7724%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.6009%" y="309" width="0.1571%" height="15" fill="rgb(247,66,29)" fg:x="1217" fg:w="2"/><text x="95.8509%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.6009%" y="293" width="0.1571%" height="15" fill="rgb(218,207,26)" fg:x="1217" fg:w="2"/><text x="95.8509%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="95.6009%" y="277" width="0.1571%" height="15" fill="rgb(234,93,26)" fg:x="1217" fg:w="2"/><text x="95.8509%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.47%)</title><rect x="95.4438%" y="357" width="0.4713%" height="15" fill="rgb(214,75,48)" fg:x="1215" fg:w="6"/><text x="95.6938%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.31%)</title><rect x="95.6009%" y="341" width="0.3142%" height="15" fill="rgb(229,119,22)" fg:x="1217" fg:w="4"/><text x="95.8509%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="95.6009%" y="325" width="0.3142%" height="15" fill="rgb(226,153,19)" fg:x="1217" fg:w="4"/><text x="95.8509%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="95.7581%" y="309" width="0.1571%" height="15" fill="rgb(220,204,36)" fg:x="1219" fg:w="2"/><text x="96.0081%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="95.7581%" y="293" width="0.1571%" height="15" fill="rgb(253,181,43)" fg:x="1219" fg:w="2"/><text x="96.0081%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.7581%" y="277" width="0.1571%" height="15" fill="rgb(211,41,51)" fg:x="1219" fg:w="2"/><text x="96.0081%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.7581%" y="261" width="0.1571%" height="15" fill="rgb(207,215,0)" fg:x="1219" fg:w="2"/><text x="96.0081%" y="271.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (12 samples, 0.94%)</title><rect x="95.0511%" y="421" width="0.9427%" height="15" fill="rgb(212,153,10)" fg:x="1210" fg:w="12"/><text x="95.3011%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.94%)</title><rect x="95.0511%" y="405" width="0.9427%" height="15" fill="rgb(251,171,36)" fg:x="1210" fg:w="12"/><text x="95.3011%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.55%)</title><rect x="95.4438%" y="389" width="0.5499%" height="15" fill="rgb(225,219,41)" fg:x="1215" fg:w="7"/><text x="95.6938%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.55%)</title><rect x="95.4438%" y="373" width="0.5499%" height="15" fill="rgb(208,200,1)" fg:x="1215" fg:w="7"/><text x="95.6938%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="95.9152%" y="357" width="0.0786%" height="15" fill="rgb(206,75,47)" fg:x="1221" fg:w="1"/><text x="96.1652%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="96.3079%" y="245" width="0.0786%" height="15" fill="rgb(248,3,16)" fg:x="1226" fg:w="1"/><text x="96.5579%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.3079%" y="293" width="0.1571%" height="15" fill="rgb(242,157,36)" fg:x="1226" fg:w="2"/><text x="96.5579%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.3079%" y="277" width="0.1571%" height="15" fill="rgb(215,175,11)" fg:x="1226" fg:w="2"/><text x="96.5579%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.3079%" y="261" width="0.1571%" height="15" fill="rgb(252,222,22)" fg:x="1226" fg:w="2"/><text x="96.5579%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.3865%" y="245" width="0.0786%" height="15" fill="rgb(250,121,35)" fg:x="1227" fg:w="1"/><text x="96.6365%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.3865%" y="229" width="0.0786%" height="15" fill="rgb(233,120,49)" fg:x="1227" fg:w="1"/><text x="96.6365%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.3865%" y="213" width="0.0786%" height="15" fill="rgb(205,201,14)" fg:x="1227" fg:w="1"/><text x="96.6365%" y="223.50"></text></g><g><title>engine::session::Session::close (57 samples, 4.48%)</title><rect x="92.0660%" y="533" width="4.4776%" height="15" fill="rgb(219,58,45)" fg:x="1172" fg:w="57"/><text x="92.3160%" y="543.50">engin..</text></g><g><title>engine::session::state::State::close (54 samples, 4.24%)</title><rect x="92.3016%" y="517" width="4.2419%" height="15" fill="rgb(251,65,12)" fg:x="1175" fg:w="54"/><text x="92.5516%" y="527.50">engin..</text></g><g><title>engine::session::state::State::flush_entities (54 samples, 4.24%)</title><rect x="92.3016%" y="501" width="4.2419%" height="15" fill="rgb(224,47,31)" fg:x="1175" fg:w="54"/><text x="92.5516%" y="511.50">engin..</text></g><g><title>core::iter::adapters::try_process (52 samples, 4.08%)</title><rect x="92.4588%" y="485" width="4.0848%" height="15" fill="rgb(233,74,26)" fg:x="1177" fg:w="52"/><text x="92.7088%" y="495.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (52 samples, 4.08%)</title><rect x="92.4588%" y="469" width="4.0848%" height="15" fill="rgb(231,211,31)" fg:x="1177" fg:w="52"/><text x="92.7088%" y="479.50">&lt;all..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (52 samples, 4.08%)</title><rect x="92.4588%" y="453" width="4.0848%" height="15" fill="rgb(239,167,5)" fg:x="1177" fg:w="52"/><text x="92.7088%" y="463.50">engi..</text></g><g><title>kernel::model::any_entity_changes (34 samples, 2.67%)</title><rect x="93.8727%" y="437" width="2.6709%" height="15" fill="rgb(241,85,0)" fg:x="1195" fg:w="34"/><text x="94.1227%" y="447.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (7 samples, 0.55%)</title><rect x="95.9937%" y="421" width="0.5499%" height="15" fill="rgb(229,130,21)" fg:x="1222" fg:w="7"/><text x="96.2437%" y="431.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.55%)</title><rect x="95.9937%" y="405" width="0.5499%" height="15" fill="rgb(254,84,49)" fg:x="1222" fg:w="7"/><text x="96.2437%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.55%)</title><rect x="95.9937%" y="389" width="0.5499%" height="15" fill="rgb(235,85,21)" fg:x="1222" fg:w="7"/><text x="96.2437%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.55%)</title><rect x="95.9937%" y="373" width="0.5499%" height="15" fill="rgb(246,128,52)" fg:x="1222" fg:w="7"/><text x="96.2437%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.47%)</title><rect x="96.0723%" y="357" width="0.4713%" height="15" fill="rgb(243,114,49)" fg:x="1223" fg:w="6"/><text x="96.3223%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="96.1508%" y="341" width="0.3928%" height="15" fill="rgb(240,224,22)" fg:x="1224" fg:w="5"/><text x="96.4008%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.31%)</title><rect x="96.2294%" y="325" width="0.3142%" height="15" fill="rgb(247,201,52)" fg:x="1225" fg:w="4"/><text x="96.4794%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="96.2294%" y="309" width="0.3142%" height="15" fill="rgb(231,70,45)" fg:x="1225" fg:w="4"/><text x="96.4794%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.4650%" y="293" width="0.0786%" height="15" fill="rgb(217,215,20)" fg:x="1228" fg:w="1"/><text x="96.7150%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.4650%" y="277" width="0.0786%" height="15" fill="rgb(226,170,30)" fg:x="1228" fg:w="1"/><text x="96.7150%" y="287.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="96.6222%" y="405" width="0.0786%" height="15" fill="rgb(220,190,43)" fg:x="1230" fg:w="1"/><text x="96.8722%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.6222%" y="389" width="0.0786%" height="15" fill="rgb(218,20,18)" fg:x="1230" fg:w="1"/><text x="96.8722%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.6222%" y="373" width="0.0786%" height="15" fill="rgb(245,37,26)" fg:x="1230" fg:w="1"/><text x="96.8722%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.6222%" y="357" width="0.0786%" height="15" fill="rgb(241,127,29)" fg:x="1230" fg:w="1"/><text x="96.8722%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.6222%" y="341" width="0.0786%" height="15" fill="rgb(241,33,26)" fg:x="1230" fg:w="1"/><text x="96.8722%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.6222%" y="325" width="0.0786%" height="15" fill="rgb(220,106,21)" fg:x="1230" fg:w="1"/><text x="96.8722%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.6222%" y="309" width="0.0786%" height="15" fill="rgb(225,125,35)" fg:x="1230" fg:w="1"/><text x="96.8722%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.6222%" y="293" width="0.0786%" height="15" fill="rgb(248,80,22)" fg:x="1230" fg:w="1"/><text x="96.8722%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.6222%" y="277" width="0.0786%" height="15" fill="rgb(231,117,39)" fg:x="1230" fg:w="1"/><text x="96.8722%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.6222%" y="261" width="0.0786%" height="15" fill="rgb(239,183,16)" fg:x="1230" fg:w="1"/><text x="96.8722%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.6222%" y="245" width="0.0786%" height="15" fill="rgb(221,61,19)" fg:x="1230" fg:w="1"/><text x="96.8722%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.6222%" y="229" width="0.0786%" height="15" fill="rgb(239,196,44)" fg:x="1230" fg:w="1"/><text x="96.8722%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.6222%" y="213" width="0.0786%" height="15" fill="rgb(206,113,19)" fg:x="1230" fg:w="1"/><text x="96.8722%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.6222%" y="197" width="0.0786%" height="15" fill="rgb(245,114,12)" fg:x="1230" fg:w="1"/><text x="96.8722%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.6222%" y="181" width="0.0786%" height="15" fill="rgb(247,89,39)" fg:x="1230" fg:w="1"/><text x="96.8722%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.7007%" y="341" width="0.1571%" height="15" fill="rgb(213,85,14)" fg:x="1231" fg:w="2"/><text x="96.9507%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.7007%" y="325" width="0.1571%" height="15" fill="rgb(249,206,33)" fg:x="1231" fg:w="2"/><text x="96.9507%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.7007%" y="309" width="0.1571%" height="15" fill="rgb(235,167,47)" fg:x="1231" fg:w="2"/><text x="96.9507%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.7007%" y="293" width="0.1571%" height="15" fill="rgb(217,177,16)" fg:x="1231" fg:w="2"/><text x="96.9507%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.7007%" y="277" width="0.1571%" height="15" fill="rgb(250,228,29)" fg:x="1231" fg:w="2"/><text x="96.9507%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.7793%" y="261" width="0.0786%" height="15" fill="rgb(216,195,42)" fg:x="1232" fg:w="1"/><text x="97.0293%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.7793%" y="245" width="0.0786%" height="15" fill="rgb(232,192,32)" fg:x="1232" fg:w="1"/><text x="97.0293%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.7793%" y="229" width="0.0786%" height="15" fill="rgb(211,8,47)" fg:x="1232" fg:w="1"/><text x="97.0293%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.7793%" y="213" width="0.0786%" height="15" fill="rgb(251,201,9)" fg:x="1232" fg:w="1"/><text x="97.0293%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.7793%" y="197" width="0.0786%" height="15" fill="rgb(206,185,47)" fg:x="1232" fg:w="1"/><text x="97.0293%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.7793%" y="181" width="0.0786%" height="15" fill="rgb(245,54,32)" fg:x="1232" fg:w="1"/><text x="97.0293%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.7793%" y="165" width="0.0786%" height="15" fill="rgb(208,1,8)" fg:x="1232" fg:w="1"/><text x="97.0293%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.7793%" y="149" width="0.0786%" height="15" fill="rgb(228,57,24)" fg:x="1232" fg:w="1"/><text x="97.0293%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.7793%" y="133" width="0.0786%" height="15" fill="rgb(251,24,8)" fg:x="1232" fg:w="1"/><text x="97.0293%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.7793%" y="117" width="0.0786%" height="15" fill="rgb(236,196,50)" fg:x="1232" fg:w="1"/><text x="97.0293%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.7793%" y="101" width="0.0786%" height="15" fill="rgb(246,222,29)" fg:x="1232" fg:w="1"/><text x="97.0293%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.7793%" y="85" width="0.0786%" height="15" fill="rgb(211,34,40)" fg:x="1232" fg:w="1"/><text x="97.0293%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.8578%" y="245" width="0.0786%" height="15" fill="rgb(210,66,51)" fg:x="1233" fg:w="1"/><text x="97.1078%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.8578%" y="229" width="0.0786%" height="15" fill="rgb(250,56,43)" fg:x="1233" fg:w="1"/><text x="97.1078%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="96.8578%" y="213" width="0.0786%" height="15" fill="rgb(240,111,50)" fg:x="1233" fg:w="1"/><text x="97.1078%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.8578%" y="197" width="0.0786%" height="15" fill="rgb(209,117,13)" fg:x="1233" fg:w="1"/><text x="97.1078%" y="207.50"></text></g><g><title>kernel::model::entity::Entity::from_value (2 samples, 0.16%)</title><rect x="96.8578%" y="341" width="0.1571%" height="15" fill="rgb(232,164,45)" fg:x="1233" fg:w="2"/><text x="97.1078%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.8578%" y="325" width="0.1571%" height="15" fill="rgb(205,69,32)" fg:x="1233" fg:w="2"/><text x="97.1078%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.8578%" y="309" width="0.1571%" height="15" fill="rgb(240,147,45)" fg:x="1233" fg:w="2"/><text x="97.1078%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="96.8578%" y="293" width="0.1571%" height="15" fill="rgb(221,94,48)" fg:x="1233" fg:w="2"/><text x="97.1078%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.8578%" y="277" width="0.1571%" height="15" fill="rgb(249,209,17)" fg:x="1233" fg:w="2"/><text x="97.1078%" y="287.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="96.8578%" y="261" width="0.1571%" height="15" fill="rgb(228,57,28)" fg:x="1233" fg:w="2"/><text x="97.1078%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.9364%" y="245" width="0.0786%" height="15" fill="rgb(250,133,26)" fg:x="1234" fg:w="1"/><text x="97.1864%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.9364%" y="229" width="0.0786%" height="15" fill="rgb(254,15,16)" fg:x="1234" fg:w="1"/><text x="97.1864%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.9364%" y="213" width="0.0786%" height="15" fill="rgb(209,147,42)" fg:x="1234" fg:w="1"/><text x="97.1864%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.9364%" y="197" width="0.0786%" height="15" fill="rgb(208,5,29)" fg:x="1234" fg:w="1"/><text x="97.1864%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.9364%" y="181" width="0.0786%" height="15" fill="rgb(250,73,31)" fg:x="1234" fg:w="1"/><text x="97.1864%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.9364%" y="165" width="0.0786%" height="15" fill="rgb(238,45,10)" fg:x="1234" fg:w="1"/><text x="97.1864%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.0149%" y="245" width="0.0786%" height="15" fill="rgb(214,104,5)" fg:x="1235" fg:w="1"/><text x="97.2649%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.0149%" y="229" width="0.0786%" height="15" fill="rgb(242,217,19)" fg:x="1235" fg:w="1"/><text x="97.2649%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.0149%" y="213" width="0.0786%" height="15" fill="rgb(246,113,27)" fg:x="1235" fg:w="1"/><text x="97.2649%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.0149%" y="197" width="0.0786%" height="15" fill="rgb(221,34,27)" fg:x="1235" fg:w="1"/><text x="97.2649%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.0149%" y="181" width="0.0786%" height="15" fill="rgb(246,109,6)" fg:x="1235" fg:w="1"/><text x="97.2649%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.0149%" y="165" width="0.0786%" height="15" fill="rgb(217,12,25)" fg:x="1235" fg:w="1"/><text x="97.2649%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.0149%" y="149" width="0.0786%" height="15" fill="rgb(250,195,5)" fg:x="1235" fg:w="1"/><text x="97.2649%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.0149%" y="133" width="0.0786%" height="15" fill="rgb(244,140,45)" fg:x="1235" fg:w="1"/><text x="97.2649%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.0149%" y="117" width="0.0786%" height="15" fill="rgb(230,64,14)" fg:x="1235" fg:w="1"/><text x="97.2649%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.0149%" y="101" width="0.0786%" height="15" fill="rgb(206,27,27)" fg:x="1235" fg:w="1"/><text x="97.2649%" y="111.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.0149%" y="85" width="0.0786%" height="15" fill="rgb(230,14,50)" fg:x="1235" fg:w="1"/><text x="97.2649%" y="95.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.0149%" y="277" width="0.1571%" height="15" fill="rgb(237,172,14)" fg:x="1235" fg:w="2"/><text x="97.2649%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.0149%" y="261" width="0.1571%" height="15" fill="rgb(209,25,21)" fg:x="1235" fg:w="2"/><text x="97.2649%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.0935%" y="245" width="0.0786%" height="15" fill="rgb(248,148,22)" fg:x="1236" fg:w="1"/><text x="97.3435%" y="255.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (9 samples, 0.71%)</title><rect x="96.5436%" y="437" width="0.7070%" height="15" fill="rgb(234,100,22)" fg:x="1229" fg:w="9"/><text x="96.7936%" y="447.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (8 samples, 0.63%)</title><rect x="96.6222%" y="421" width="0.6284%" height="15" fill="rgb(210,20,30)" fg:x="1230" fg:w="8"/><text x="96.8722%" y="431.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (7 samples, 0.55%)</title><rect x="96.7007%" y="405" width="0.5499%" height="15" fill="rgb(232,58,0)" fg:x="1231" fg:w="7"/><text x="96.9507%" y="415.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (7 samples, 0.55%)</title><rect x="96.7007%" y="389" width="0.5499%" height="15" fill="rgb(221,68,13)" fg:x="1231" fg:w="7"/><text x="96.9507%" y="399.50"></text></g><g><title>engine::session::Session::load_entity (7 samples, 0.55%)</title><rect x="96.7007%" y="373" width="0.5499%" height="15" fill="rgb(231,194,11)" fg:x="1231" fg:w="7"/><text x="96.9507%" y="383.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (7 samples, 0.55%)</title><rect x="96.7007%" y="357" width="0.5499%" height="15" fill="rgb(235,51,41)" fg:x="1231" fg:w="7"/><text x="96.9507%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="97.0149%" y="341" width="0.2357%" height="15" fill="rgb(240,50,32)" fg:x="1235" fg:w="3"/><text x="97.2649%" y="351.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="97.0149%" y="325" width="0.2357%" height="15" fill="rgb(240,185,36)" fg:x="1235" fg:w="3"/><text x="97.2649%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="97.0149%" y="309" width="0.2357%" height="15" fill="rgb(211,168,15)" fg:x="1235" fg:w="3"/><text x="97.2649%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="97.0149%" y="293" width="0.2357%" height="15" fill="rgb(221,70,0)" fg:x="1235" fg:w="3"/><text x="97.2649%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.1720%" y="277" width="0.0786%" height="15" fill="rgb(205,21,33)" fg:x="1237" fg:w="1"/><text x="97.4220%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.1720%" y="261" width="0.0786%" height="15" fill="rgb(225,106,10)" fg:x="1237" fg:w="1"/><text x="97.4220%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (10 samples, 0.79%)</title><rect x="96.5436%" y="501" width="0.7855%" height="15" fill="rgb(236,200,50)" fg:x="1229" fg:w="10"/><text x="96.7936%" y="511.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (10 samples, 0.79%)</title><rect x="96.5436%" y="485" width="0.7855%" height="15" fill="rgb(249,93,23)" fg:x="1229" fg:w="10"/><text x="96.7936%" y="495.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (10 samples, 0.79%)</title><rect x="96.5436%" y="469" width="0.7855%" height="15" fill="rgb(244,115,35)" fg:x="1229" fg:w="10"/><text x="96.7936%" y="479.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (10 samples, 0.79%)</title><rect x="96.5436%" y="453" width="0.7855%" height="15" fill="rgb(231,129,47)" fg:x="1229" fg:w="10"/><text x="96.7936%" y="463.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="97.2506%" y="437" width="0.0786%" height="15" fill="rgb(225,160,50)" fg:x="1238" fg:w="1"/><text x="97.5006%" y="447.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="97.2506%" y="421" width="0.0786%" height="15" fill="rgb(218,135,23)" fg:x="1238" fg:w="1"/><text x="97.5006%" y="431.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="97.2506%" y="405" width="0.0786%" height="15" fill="rgb(227,119,14)" fg:x="1238" fg:w="1"/><text x="97.5006%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="97.2506%" y="389" width="0.0786%" height="15" fill="rgb(242,138,13)" fg:x="1238" fg:w="1"/><text x="97.5006%" y="399.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="97.2506%" y="373" width="0.0786%" height="15" fill="rgb(215,11,16)" fg:x="1238" fg:w="1"/><text x="97.5006%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="97.2506%" y="357" width="0.0786%" height="15" fill="rgb(234,170,50)" fg:x="1238" fg:w="1"/><text x="97.5006%" y="367.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="97.2506%" y="341" width="0.0786%" height="15" fill="rgb(233,34,20)" fg:x="1238" fg:w="1"/><text x="97.5006%" y="351.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="97.2506%" y="325" width="0.0786%" height="15" fill="rgb(237,100,45)" fg:x="1238" fg:w="1"/><text x="97.5006%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.2506%" y="309" width="0.0786%" height="15" fill="rgb(231,184,36)" fg:x="1238" fg:w="1"/><text x="97.5006%" y="319.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::find_name_key (1 samples, 0.08%)</title><rect x="97.3291%" y="501" width="0.0786%" height="15" fill="rgb(252,93,2)" fg:x="1239" fg:w="1"/><text x="97.5791%" y="511.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="97.3291%" y="485" width="0.0786%" height="15" fill="rgb(248,176,47)" fg:x="1239" fg:w="1"/><text x="97.5791%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.3291%" y="469" width="0.0786%" height="15" fill="rgb(249,125,23)" fg:x="1239" fg:w="1"/><text x="97.5791%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.3291%" y="453" width="0.0786%" height="15" fill="rgb(239,67,42)" fg:x="1239" fg:w="1"/><text x="97.5791%" y="463.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="97.4077%" y="501" width="0.0786%" height="15" fill="rgb(244,162,4)" fg:x="1240" fg:w="1"/><text x="97.6577%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="97.4077%" y="485" width="0.0786%" height="15" fill="rgb(214,150,38)" fg:x="1240" fg:w="1"/><text x="97.6577%" y="495.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="97.4077%" y="469" width="0.0786%" height="15" fill="rgb(228,211,28)" fg:x="1240" fg:w="1"/><text x="97.6577%" y="479.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="97.4077%" y="453" width="0.0786%" height="15" fill="rgb(212,98,48)" fg:x="1240" fg:w="1"/><text x="97.6577%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="97.4077%" y="437" width="0.0786%" height="15" fill="rgb(213,45,13)" fg:x="1240" fg:w="1"/><text x="97.6577%" y="447.50"></text></g><g><title>&lt;kernel::session::SetSession&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.4863%" y="501" width="0.0786%" height="15" fill="rgb(218,35,29)" fg:x="1241" fg:w="1"/><text x="97.7363%" y="511.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.5648%" y="469" width="0.0786%" height="15" fill="rgb(244,13,3)" fg:x="1242" fg:w="1"/><text x="97.8148%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="97.5648%" y="453" width="0.0786%" height="15" fill="rgb(235,170,19)" fg:x="1242" fg:w="1"/><text x="97.8148%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.5648%" y="437" width="0.0786%" height="15" fill="rgb(233,193,43)" fg:x="1242" fg:w="1"/><text x="97.8148%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6434%" y="453" width="0.0786%" height="15" fill="rgb(228,223,20)" fg:x="1243" fg:w="1"/><text x="97.8934%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6434%" y="437" width="0.0786%" height="15" fill="rgb(208,85,54)" fg:x="1243" fg:w="1"/><text x="97.8934%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6434%" y="421" width="0.0786%" height="15" fill="rgb(254,14,45)" fg:x="1243" fg:w="1"/><text x="97.8934%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6434%" y="405" width="0.0786%" height="15" fill="rgb(247,99,29)" fg:x="1243" fg:w="1"/><text x="97.8934%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6434%" y="389" width="0.0786%" height="15" fill="rgb(225,180,54)" fg:x="1243" fg:w="1"/><text x="97.8934%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.6434%" y="373" width="0.0786%" height="15" fill="rgb(239,88,43)" fg:x="1243" fg:w="1"/><text x="97.8934%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.6434%" y="357" width="0.0786%" height="15" fill="rgb(209,47,11)" fg:x="1243" fg:w="1"/><text x="97.8934%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.6434%" y="341" width="0.0786%" height="15" fill="rgb(219,179,23)" fg:x="1243" fg:w="1"/><text x="97.8934%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="97.6434%" y="325" width="0.0786%" height="15" fill="rgb(213,183,19)" fg:x="1243" fg:w="1"/><text x="97.8934%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="97.6434%" y="309" width="0.0786%" height="15" fill="rgb(210,11,9)" fg:x="1243" fg:w="1"/><text x="97.8934%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.7219%" y="405" width="0.0786%" height="15" fill="rgb(239,194,16)" fg:x="1244" fg:w="1"/><text x="97.9719%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.7219%" y="389" width="0.0786%" height="15" fill="rgb(246,23,50)" fg:x="1244" fg:w="1"/><text x="97.9719%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.7219%" y="373" width="0.0786%" height="15" fill="rgb(245,10,41)" fg:x="1244" fg:w="1"/><text x="97.9719%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.7219%" y="357" width="0.0786%" height="15" fill="rgb(228,43,24)" fg:x="1244" fg:w="1"/><text x="97.9719%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.7219%" y="341" width="0.0786%" height="15" fill="rgb(220,151,0)" fg:x="1244" fg:w="1"/><text x="97.9719%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.7219%" y="325" width="0.0786%" height="15" fill="rgb(232,219,10)" fg:x="1244" fg:w="1"/><text x="97.9719%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.7219%" y="309" width="0.0786%" height="15" fill="rgb(227,217,48)" fg:x="1244" fg:w="1"/><text x="97.9719%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.7219%" y="293" width="0.0786%" height="15" fill="rgb(210,66,35)" fg:x="1244" fg:w="1"/><text x="97.9719%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.7219%" y="277" width="0.0786%" height="15" fill="rgb(254,6,7)" fg:x="1244" fg:w="1"/><text x="97.9719%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.7219%" y="261" width="0.0786%" height="15" fill="rgb(235,222,42)" fg:x="1244" fg:w="1"/><text x="97.9719%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.7219%" y="245" width="0.0786%" height="15" fill="rgb(245,126,5)" fg:x="1244" fg:w="1"/><text x="97.9719%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.7219%" y="229" width="0.0786%" height="15" fill="rgb(215,73,17)" fg:x="1244" fg:w="1"/><text x="97.9719%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.7219%" y="213" width="0.0786%" height="15" fill="rgb(219,198,52)" fg:x="1244" fg:w="1"/><text x="97.9719%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.7219%" y="197" width="0.0786%" height="15" fill="rgb(217,159,18)" fg:x="1244" fg:w="1"/><text x="97.9719%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.7219%" y="181" width="0.0786%" height="15" fill="rgb(212,177,18)" fg:x="1244" fg:w="1"/><text x="97.9719%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.7219%" y="165" width="0.0786%" height="15" fill="rgb(241,10,11)" fg:x="1244" fg:w="1"/><text x="97.9719%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.8005%" y="309" width="0.0786%" height="15" fill="rgb(232,114,35)" fg:x="1245" fg:w="1"/><text x="98.0505%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="97.8005%" y="293" width="0.0786%" height="15" fill="rgb(238,222,8)" fg:x="1245" fg:w="1"/><text x="98.0505%" y="303.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="97.8005%" y="277" width="0.0786%" height="15" fill="rgb(251,153,44)" fg:x="1245" fg:w="1"/><text x="98.0505%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.8005%" y="261" width="0.0786%" height="15" fill="rgb(210,140,51)" fg:x="1245" fg:w="1"/><text x="98.0505%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.8005%" y="245" width="0.0786%" height="15" fill="rgb(222,63,0)" fg:x="1245" fg:w="1"/><text x="98.0505%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.8005%" y="229" width="0.0786%" height="15" fill="rgb(240,18,40)" fg:x="1245" fg:w="1"/><text x="98.0505%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.8005%" y="213" width="0.0786%" height="15" fill="rgb(237,88,16)" fg:x="1245" fg:w="1"/><text x="98.0505%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.8005%" y="197" width="0.0786%" height="15" fill="rgb(251,117,13)" fg:x="1245" fg:w="1"/><text x="98.0505%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.8005%" y="181" width="0.0786%" height="15" fill="rgb(251,228,8)" fg:x="1245" fg:w="1"/><text x="98.0505%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.8005%" y="165" width="0.0786%" height="15" fill="rgb(205,107,49)" fg:x="1245" fg:w="1"/><text x="98.0505%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.8005%" y="149" width="0.0786%" height="15" fill="rgb(238,72,41)" fg:x="1245" fg:w="1"/><text x="98.0505%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.8005%" y="133" width="0.0786%" height="15" fill="rgb(248,183,52)" fg:x="1245" fg:w="1"/><text x="98.0505%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.8005%" y="117" width="0.0786%" height="15" fill="rgb(215,58,20)" fg:x="1245" fg:w="1"/><text x="98.0505%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.8005%" y="101" width="0.0786%" height="15" fill="rgb(209,49,13)" fg:x="1245" fg:w="1"/><text x="98.0505%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.8005%" y="85" width="0.0786%" height="15" fill="rgb(208,113,17)" fg:x="1245" fg:w="1"/><text x="98.0505%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.8005%" y="69" width="0.0786%" height="15" fill="rgb(208,14,22)" fg:x="1245" fg:w="1"/><text x="98.0505%" y="79.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.08%)</title><rect x="97.8790%" y="197" width="0.0786%" height="15" fill="rgb(222,95,2)" fg:x="1246" fg:w="1"/><text x="98.1290%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.31%)</title><rect x="97.7219%" y="453" width="0.3142%" height="15" fill="rgb(253,180,37)" fg:x="1244" fg:w="4"/><text x="97.9719%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.31%)</title><rect x="97.7219%" y="437" width="0.3142%" height="15" fill="rgb(250,81,33)" fg:x="1244" fg:w="4"/><text x="97.9719%" y="447.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (4 samples, 0.31%)</title><rect x="97.7219%" y="421" width="0.3142%" height="15" fill="rgb(251,151,41)" fg:x="1244" fg:w="4"/><text x="97.9719%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="97.8005%" y="405" width="0.2357%" height="15" fill="rgb(210,135,17)" fg:x="1245" fg:w="3"/><text x="98.0505%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="97.8005%" y="389" width="0.2357%" height="15" fill="rgb(239,21,29)" fg:x="1245" fg:w="3"/><text x="98.0505%" y="399.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (3 samples, 0.24%)</title><rect x="97.8005%" y="373" width="0.2357%" height="15" fill="rgb(231,215,16)" fg:x="1245" fg:w="3"/><text x="98.0505%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="97.8005%" y="357" width="0.2357%" height="15" fill="rgb(239,151,54)" fg:x="1245" fg:w="3"/><text x="98.0505%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="97.8005%" y="341" width="0.2357%" height="15" fill="rgb(222,122,38)" fg:x="1245" fg:w="3"/><text x="98.0505%" y="351.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (3 samples, 0.24%)</title><rect x="97.8005%" y="325" width="0.2357%" height="15" fill="rgb(243,128,1)" fg:x="1245" fg:w="3"/><text x="98.0505%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.8790%" y="309" width="0.1571%" height="15" fill="rgb(225,74,21)" fg:x="1246" fg:w="2"/><text x="98.1290%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.8790%" y="293" width="0.1571%" height="15" fill="rgb(216,210,10)" fg:x="1246" fg:w="2"/><text x="98.1290%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (2 samples, 0.16%)</title><rect x="97.8790%" y="277" width="0.1571%" height="15" fill="rgb(228,76,19)" fg:x="1246" fg:w="2"/><text x="98.1290%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (2 samples, 0.16%)</title><rect x="97.8790%" y="261" width="0.1571%" height="15" fill="rgb(236,80,34)" fg:x="1246" fg:w="2"/><text x="98.1290%" y="271.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (2 samples, 0.16%)</title><rect x="97.8790%" y="245" width="0.1571%" height="15" fill="rgb(225,173,23)" fg:x="1246" fg:w="2"/><text x="98.1290%" y="255.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (2 samples, 0.16%)</title><rect x="97.8790%" y="229" width="0.1571%" height="15" fill="rgb(253,38,1)" fg:x="1246" fg:w="2"/><text x="98.1290%" y="239.50"></text></g><g><title>serde_json::error::make_error (2 samples, 0.16%)</title><rect x="97.8790%" y="213" width="0.1571%" height="15" fill="rgb(206,155,35)" fg:x="1246" fg:w="2"/><text x="98.1290%" y="223.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.08%)</title><rect x="97.9576%" y="197" width="0.0786%" height="15" fill="rgb(254,27,53)" fg:x="1247" fg:w="1"/><text x="98.2076%" y="207.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.08%)</title><rect x="97.9576%" y="181" width="0.0786%" height="15" fill="rgb(225,52,41)" fg:x="1247" fg:w="1"/><text x="98.2076%" y="191.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (1 samples, 0.08%)</title><rect x="97.9576%" y="165" width="0.0786%" height="15" fill="rgb(244,53,18)" fg:x="1247" fg:w="1"/><text x="98.2076%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.1147%" y="373" width="0.0786%" height="15" fill="rgb(254,206,48)" fg:x="1249" fg:w="1"/><text x="98.3647%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.1147%" y="357" width="0.0786%" height="15" fill="rgb(236,182,23)" fg:x="1249" fg:w="1"/><text x="98.3647%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="98.1932%" y="357" width="0.0786%" height="15" fill="rgb(236,191,37)" fg:x="1250" fg:w="1"/><text x="98.4432%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.1932%" y="341" width="0.0786%" height="15" fill="rgb(245,53,8)" fg:x="1250" fg:w="1"/><text x="98.4432%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.1932%" y="325" width="0.0786%" height="15" fill="rgb(245,147,9)" fg:x="1250" fg:w="1"/><text x="98.4432%" y="335.50"></text></g><g><title>engine::session::internal::Added::find_refs (10 samples, 0.79%)</title><rect x="97.5648%" y="485" width="0.7855%" height="15" fill="rgb(218,24,48)" fg:x="1242" fg:w="10"/><text x="97.8148%" y="495.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (9 samples, 0.71%)</title><rect x="97.6434%" y="469" width="0.7070%" height="15" fill="rgb(254,23,9)" fg:x="1243" fg:w="9"/><text x="97.8934%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="98.0361%" y="453" width="0.3142%" height="15" fill="rgb(244,105,9)" fg:x="1248" fg:w="4"/><text x="98.2861%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="98.0361%" y="437" width="0.3142%" height="15" fill="rgb(212,142,22)" fg:x="1248" fg:w="4"/><text x="98.2861%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="98.0361%" y="421" width="0.3142%" height="15" fill="rgb(221,114,49)" fg:x="1248" fg:w="4"/><text x="98.2861%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="98.1147%" y="405" width="0.2357%" height="15" fill="rgb(223,210,25)" fg:x="1249" fg:w="3"/><text x="98.3647%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="98.1147%" y="389" width="0.2357%" height="15" fill="rgb(235,162,44)" fg:x="1249" fg:w="3"/><text x="98.3647%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="98.1932%" y="373" width="0.1571%" height="15" fill="rgb(237,65,45)" fg:x="1250" fg:w="2"/><text x="98.4432%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.2718%" y="357" width="0.0786%" height="15" fill="rgb(208,79,9)" fg:x="1251" fg:w="1"/><text x="98.5218%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.2718%" y="341" width="0.0786%" height="15" fill="rgb(215,228,8)" fg:x="1251" fg:w="1"/><text x="98.5218%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3504%" y="469" width="0.0786%" height="15" fill="rgb(205,185,17)" fg:x="1252" fg:w="1"/><text x="98.6004%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3504%" y="453" width="0.0786%" height="15" fill="rgb(213,62,36)" fg:x="1252" fg:w="1"/><text x="98.6004%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3504%" y="437" width="0.0786%" height="15" fill="rgb(209,34,9)" fg:x="1252" fg:w="1"/><text x="98.6004%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.3504%" y="421" width="0.0786%" height="15" fill="rgb(246,151,27)" fg:x="1252" fg:w="1"/><text x="98.6004%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.4289%" y="469" width="0.0786%" height="15" fill="rgb(218,206,3)" fg:x="1253" fg:w="1"/><text x="98.6789%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.4289%" y="453" width="0.0786%" height="15" fill="rgb(242,202,1)" fg:x="1253" fg:w="1"/><text x="98.6789%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="98.4289%" y="437" width="0.0786%" height="15" fill="rgb(227,185,16)" fg:x="1253" fg:w="1"/><text x="98.6789%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.4289%" y="421" width="0.0786%" height="15" fill="rgb(241,1,14)" fg:x="1253" fg:w="1"/><text x="98.6789%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.4289%" y="405" width="0.0786%" height="15" fill="rgb(212,113,25)" fg:x="1253" fg:w="1"/><text x="98.6789%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.4289%" y="389" width="0.0786%" height="15" fill="rgb(247,37,43)" fg:x="1253" fg:w="1"/><text x="98.6789%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.4289%" y="373" width="0.0786%" height="15" fill="rgb(226,54,8)" fg:x="1253" fg:w="1"/><text x="98.6789%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.4289%" y="357" width="0.0786%" height="15" fill="rgb(251,205,25)" fg:x="1253" fg:w="1"/><text x="98.6789%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.4289%" y="341" width="0.0786%" height="15" fill="rgb(246,87,35)" fg:x="1253" fg:w="1"/><text x="98.6789%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.6646%" y="373" width="0.0786%" height="15" fill="rgb(251,145,46)" fg:x="1256" fg:w="1"/><text x="98.9146%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.6646%" y="357" width="0.0786%" height="15" fill="rgb(210,210,33)" fg:x="1256" fg:w="1"/><text x="98.9146%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.6646%" y="341" width="0.0786%" height="15" fill="rgb(221,151,11)" fg:x="1256" fg:w="1"/><text x="98.9146%" y="351.50"></text></g><g><title>kernel::model::entity::Entity::from_value (4 samples, 0.31%)</title><rect x="98.5075%" y="469" width="0.3142%" height="15" fill="rgb(208,160,28)" fg:x="1254" fg:w="4"/><text x="98.7575%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="98.5075%" y="453" width="0.3142%" height="15" fill="rgb(243,69,29)" fg:x="1254" fg:w="4"/><text x="98.7575%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="98.5075%" y="437" width="0.3142%" height="15" fill="rgb(224,144,4)" fg:x="1254" fg:w="4"/><text x="98.7575%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="98.6646%" y="421" width="0.1571%" height="15" fill="rgb(211,140,38)" fg:x="1256" fg:w="2"/><text x="98.9146%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.6646%" y="405" width="0.1571%" height="15" fill="rgb(252,189,15)" fg:x="1256" fg:w="2"/><text x="98.9146%" y="415.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.6646%" y="389" width="0.1571%" height="15" fill="rgb(251,175,23)" fg:x="1256" fg:w="2"/><text x="98.9146%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7431%" y="373" width="0.0786%" height="15" fill="rgb(212,184,11)" fg:x="1257" fg:w="1"/><text x="98.9931%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.7431%" y="357" width="0.0786%" height="15" fill="rgb(217,205,6)" fg:x="1257" fg:w="1"/><text x="98.9931%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.7431%" y="341" width="0.0786%" height="15" fill="rgb(235,45,45)" fg:x="1257" fg:w="1"/><text x="98.9931%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7431%" y="325" width="0.0786%" height="15" fill="rgb(211,157,53)" fg:x="1257" fg:w="1"/><text x="98.9931%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.7431%" y="309" width="0.0786%" height="15" fill="rgb(212,13,8)" fg:x="1257" fg:w="1"/><text x="98.9931%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9788%" y="293" width="0.0786%" height="15" fill="rgb(218,80,36)" fg:x="1260" fg:w="1"/><text x="99.2288%" y="303.50"></text></g><g><title>engine::session::Session::load_entity (20 samples, 1.57%)</title><rect x="97.5648%" y="501" width="1.5711%" height="15" fill="rgb(211,123,43)" fg:x="1242" fg:w="20"/><text x="97.8148%" y="511.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (10 samples, 0.79%)</title><rect x="98.3504%" y="485" width="0.7855%" height="15" fill="rgb(206,165,2)" fg:x="1252" fg:w="10"/><text x="98.6004%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.31%)</title><rect x="98.8217%" y="469" width="0.3142%" height="15" fill="rgb(248,63,35)" fg:x="1258" fg:w="4"/><text x="99.0717%" y="479.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.31%)</title><rect x="98.8217%" y="453" width="0.3142%" height="15" fill="rgb(219,133,41)" fg:x="1258" fg:w="4"/><text x="99.0717%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.31%)</title><rect x="98.8217%" y="437" width="0.3142%" height="15" fill="rgb(206,175,46)" fg:x="1258" fg:w="4"/><text x="99.0717%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="98.8217%" y="421" width="0.3142%" height="15" fill="rgb(224,41,35)" fg:x="1258" fg:w="4"/><text x="99.0717%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.31%)</title><rect x="98.8217%" y="405" width="0.3142%" height="15" fill="rgb(226,113,24)" fg:x="1258" fg:w="4"/><text x="99.0717%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.9002%" y="389" width="0.2357%" height="15" fill="rgb(219,51,41)" fg:x="1259" fg:w="3"/><text x="99.1502%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="98.9002%" y="373" width="0.2357%" height="15" fill="rgb(220,145,47)" fg:x="1259" fg:w="3"/><text x="99.1502%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.9788%" y="357" width="0.1571%" height="15" fill="rgb(239,121,47)" fg:x="1260" fg:w="2"/><text x="99.2288%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.9788%" y="341" width="0.1571%" height="15" fill="rgb(207,60,40)" fg:x="1260" fg:w="2"/><text x="99.2288%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.9788%" y="325" width="0.1571%" height="15" fill="rgb(224,229,11)" fg:x="1260" fg:w="2"/><text x="99.2288%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.9788%" y="309" width="0.1571%" height="15" fill="rgb(252,28,32)" fg:x="1260" fg:w="2"/><text x="99.2288%" y="319.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="99.0573%" y="293" width="0.0786%" height="15" fill="rgb(207,52,49)" fg:x="1261" fg:w="1"/><text x="99.3073%" y="303.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="99.1359%" y="469" width="0.0786%" height="15" fill="rgb(243,51,50)" fg:x="1262" fg:w="1"/><text x="99.3859%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.1359%" y="453" width="0.0786%" height="15" fill="rgb(212,92,21)" fg:x="1262" fg:w="1"/><text x="99.3859%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.2145%" y="453" width="0.1571%" height="15" fill="rgb(230,183,50)" fg:x="1263" fg:w="2"/><text x="99.4645%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.2145%" y="437" width="0.1571%" height="15" fill="rgb(225,48,9)" fg:x="1263" fg:w="2"/><text x="99.4645%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.2145%" y="421" width="0.1571%" height="15" fill="rgb(254,44,4)" fg:x="1263" fg:w="2"/><text x="99.4645%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.2145%" y="405" width="0.1571%" height="15" fill="rgb(252,128,37)" fg:x="1263" fg:w="2"/><text x="99.4645%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.2930%" y="389" width="0.0786%" height="15" fill="rgb(227,178,8)" fg:x="1264" fg:w="1"/><text x="99.5430%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.3716%" y="373" width="0.0786%" height="15" fill="rgb(205,206,32)" fg:x="1265" fg:w="1"/><text x="99.6216%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.3716%" y="357" width="0.0786%" height="15" fill="rgb(220,218,22)" fg:x="1265" fg:w="1"/><text x="99.6216%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::from_value (2 samples, 0.16%)</title><rect x="99.3716%" y="453" width="0.1571%" height="15" fill="rgb(236,41,28)" fg:x="1265" fg:w="2"/><text x="99.6216%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.3716%" y="437" width="0.1571%" height="15" fill="rgb(219,37,7)" fg:x="1265" fg:w="2"/><text x="99.6216%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.3716%" y="421" width="0.1571%" height="15" fill="rgb(206,160,15)" fg:x="1265" fg:w="2"/><text x="99.6216%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="99.3716%" y="405" width="0.1571%" height="15" fill="rgb(208,82,21)" fg:x="1265" fg:w="2"/><text x="99.6216%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.3716%" y="389" width="0.1571%" height="15" fill="rgb(226,130,25)" fg:x="1265" fg:w="2"/><text x="99.6216%" y="399.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.4501%" y="373" width="0.0786%" height="15" fill="rgb(212,72,24)" fg:x="1266" fg:w="1"/><text x="99.7001%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.4501%" y="357" width="0.0786%" height="15" fill="rgb(206,28,16)" fg:x="1266" fg:w="1"/><text x="99.7001%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4501%" y="341" width="0.0786%" height="15" fill="rgb(249,41,5)" fg:x="1266" fg:w="1"/><text x="99.7001%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.4501%" y="325" width="0.0786%" height="15" fill="rgb(233,96,48)" fg:x="1266" fg:w="1"/><text x="99.7001%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4501%" y="309" width="0.0786%" height="15" fill="rgb(240,198,11)" fg:x="1266" fg:w="1"/><text x="99.7001%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="99.4501%" y="293" width="0.0786%" height="15" fill="rgb(209,175,35)" fg:x="1266" fg:w="1"/><text x="99.7001%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.4501%" y="277" width="0.0786%" height="15" fill="rgb(214,40,51)" fg:x="1266" fg:w="1"/><text x="99.7001%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.6072%" y="325" width="0.0786%" height="15" fill="rgb(252,56,4)" fg:x="1268" fg:w="1"/><text x="99.8572%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6072%" y="309" width="0.0786%" height="15" fill="rgb(219,131,5)" fg:x="1268" fg:w="1"/><text x="99.8572%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.6072%" y="293" width="0.0786%" height="15" fill="rgb(223,67,53)" fg:x="1268" fg:w="1"/><text x="99.8572%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6072%" y="277" width="0.0786%" height="15" fill="rgb(227,154,8)" fg:x="1268" fg:w="1"/><text x="99.8572%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.6072%" y="261" width="0.0786%" height="15" fill="rgb(216,174,51)" fg:x="1268" fg:w="1"/><text x="99.8572%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.6072%" y="245" width="0.0786%" height="15" fill="rgb(239,60,34)" fg:x="1268" fg:w="1"/><text x="99.8572%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.6072%" y="229" width="0.0786%" height="15" fill="rgb(236,165,48)" fg:x="1268" fg:w="1"/><text x="99.8572%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.6072%" y="341" width="0.2357%" height="15" fill="rgb(210,37,26)" fg:x="1268" fg:w="3"/><text x="99.8572%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="99.6858%" y="325" width="0.1571%" height="15" fill="rgb(211,3,17)" fg:x="1269" fg:w="2"/><text x="99.9358%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.7643%" y="309" width="0.0786%" height="15" fill="rgb(234,88,49)" fg:x="1270" fg:w="1"/><text x="100.0143%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.7643%" y="293" width="0.0786%" height="15" fill="rgb(233,40,17)" fg:x="1270" fg:w="1"/><text x="100.0143%" y="303.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (43 samples, 3.38%)</title><rect x="96.5436%" y="533" width="3.3778%" height="15" fill="rgb(235,127,31)" fg:x="1229" fg:w="43"/><text x="96.7936%" y="543.50">eng..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (43 samples, 3.38%)</title><rect x="96.5436%" y="517" width="3.3778%" height="15" fill="rgb(248,167,17)" fg:x="1229" fg:w="43"/><text x="96.7936%" y="527.50">eng..</text></g><g><title>kernel::model::EntityPtrResolver::world (10 samples, 0.79%)</title><rect x="99.1359%" y="501" width="0.7855%" height="15" fill="rgb(218,179,8)" fg:x="1262" fg:w="10"/><text x="99.3859%" y="511.50"></text></g><g><title>engine::session::Session::load_entity (10 samples, 0.79%)</title><rect x="99.1359%" y="485" width="0.7855%" height="15" fill="rgb(216,92,14)" fg:x="1262" fg:w="10"/><text x="99.3859%" y="495.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (9 samples, 0.71%)</title><rect x="99.2145%" y="469" width="0.7070%" height="15" fill="rgb(221,198,46)" fg:x="1263" fg:w="9"/><text x="99.4645%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (5 samples, 0.39%)</title><rect x="99.5287%" y="453" width="0.3928%" height="15" fill="rgb(244,7,25)" fg:x="1267" fg:w="5"/><text x="99.7787%" y="463.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.39%)</title><rect x="99.5287%" y="437" width="0.3928%" height="15" fill="rgb(233,75,6)" fg:x="1267" fg:w="5"/><text x="99.7787%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.39%)</title><rect x="99.5287%" y="421" width="0.3928%" height="15" fill="rgb(240,189,41)" fg:x="1267" fg:w="5"/><text x="99.7787%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="99.6072%" y="405" width="0.3142%" height="15" fill="rgb(237,157,21)" fg:x="1268" fg:w="4"/><text x="99.8572%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.31%)</title><rect x="99.6072%" y="389" width="0.3142%" height="15" fill="rgb(210,136,49)" fg:x="1268" fg:w="4"/><text x="99.8572%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="99.6072%" y="373" width="0.3142%" height="15" fill="rgb(210,68,29)" fg:x="1268" fg:w="4"/><text x="99.8572%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.31%)</title><rect x="99.6072%" y="357" width="0.3142%" height="15" fill="rgb(247,207,20)" fg:x="1268" fg:w="4"/><text x="99.8572%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.8429%" y="341" width="0.0786%" height="15" fill="rgb(224,73,48)" fg:x="1271" fg:w="1"/><text x="100.0929%" y="351.50"></text></g><g><title>all (1,273 samples, 100%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(215,136,47)" fg:x="0" fg:w="1273"/><text x="0.2500%" y="895.50"></text></g><g><title>simple-e01ff2e0 (1,273 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(232,222,16)" fg:x="0" fg:w="1273"/><text x="0.2500%" y="879.50">simple-e01ff2e0</text></g><g><title>_start (1,273 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(249,202,47)" fg:x="0" fg:w="1273"/><text x="0.2500%" y="863.50">_start</text></g><g><title>__libc_start_main (1,273 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(236,56,8)" fg:x="0" fg:w="1273"/><text x="0.2500%" y="847.50">__libc_start_main</text></g><g><title>main (1,273 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(222,6,3)" fg:x="0" fg:w="1273"/><text x="0.2500%" y="831.50">main</text></g><g><title>std::rt::lang_start_internal (1,273 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(254,222,28)" fg:x="0" fg:w="1273"/><text x="0.2500%" y="815.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,273 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(219,57,23)" fg:x="0" fg:w="1273"/><text x="0.2500%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,273 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(251,106,48)" fg:x="0" fg:w="1273"/><text x="0.2500%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,273 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(242,2,23)" fg:x="0" fg:w="1273"/><text x="0.2500%" y="767.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,273 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(212,109,31)" fg:x="0" fg:w="1273"/><text x="0.2500%" y="751.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,273 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(241,9,22)" fg:x="0" fg:w="1273"/><text x="0.2500%" y="735.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,273 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(209,64,27)" fg:x="0" fg:w="1273"/><text x="0.2500%" y="719.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,273 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(248,13,44)" fg:x="0" fg:w="1273"/><text x="0.2500%" y="703.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,273 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(213,86,6)" fg:x="0" fg:w="1273"/><text x="0.2500%" y="687.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,273 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(247,11,18)" fg:x="0" fg:w="1273"/><text x="0.2500%" y="671.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,273 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(252,31,11)" fg:x="0" fg:w="1273"/><text x="0.2500%" y="655.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,273 samples, 100.00%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(215,63,51)" fg:x="0" fg:w="1273"/><text x="0.2500%" y="639.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,273 samples, 100.00%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(222,180,4)" fg:x="0" fg:w="1273"/><text x="0.2500%" y="623.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,273 samples, 100.00%)</title><rect x="0.0000%" y="597" width="100.0000%" height="15" fill="rgb(233,4,23)" fg:x="0" fg:w="1273"/><text x="0.2500%" y="607.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (286 samples, 22.47%)</title><rect x="77.5334%" y="581" width="22.4666%" height="15" fill="rgb(230,116,22)" fg:x="987" fg:w="286"/><text x="77.7834%" y="591.50">&lt;criterion::routine::Function&lt;M,F,T&gt;..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (286 samples, 22.47%)</title><rect x="77.5334%" y="565" width="22.4666%" height="15" fill="rgb(222,20,14)" fg:x="987" fg:w="286"/><text x="77.7834%" y="575.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (286 samples, 22.47%)</title><rect x="77.5334%" y="549" width="22.4666%" height="15" fill="rgb(210,176,43)" fg:x="987" fg:w="286"/><text x="77.7834%" y="559.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="99.9214%" y="533" width="0.0786%" height="15" fill="rgb(219,67,32)" fg:x="1272" fg:w="1"/><text x="100.1714%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="99.9214%" y="517" width="0.0786%" height="15" fill="rgb(228,91,39)" fg:x="1272" fg:w="1"/><text x="100.1714%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.9214%" y="501" width="0.0786%" height="15" fill="rgb(254,63,14)" fg:x="1272" fg:w="1"/><text x="100.1714%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="99.9214%" y="485" width="0.0786%" height="15" fill="rgb(216,171,39)" fg:x="1272" fg:w="1"/><text x="100.1714%" y="495.50"></text></g></svg></svg>