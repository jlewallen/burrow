<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1062" onload="init(evt)" viewBox="0 0 1200 1062" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1062" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1045.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1045.00"> </text><svg id="frames" x="10" width="1180" total_samples="1248"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.0000%" y="629" width="0.1603%" height="15" fill="rgb(224,160,9)" fg:x="0" fg:w="2"/><text x="0.2500%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.24%)</title><rect x="0.0000%" y="645" width="0.2404%" height="15" fill="rgb(215,116,14)" fg:x="0" fg:w="3"/><text x="0.2500%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.1603%" y="629" width="0.0801%" height="15" fill="rgb(235,46,36)" fg:x="2" fg:w="1"/><text x="0.4103%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.2404%" y="613" width="0.0801%" height="15" fill="rgb(238,39,28)" fg:x="3" fg:w="1"/><text x="0.4904%" y="623.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.4808%" y="549" width="0.2404%" height="15" fill="rgb(242,125,29)" fg:x="6" fg:w="3"/><text x="0.7308%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="0.7212%" y="549" width="0.2404%" height="15" fill="rgb(238,211,30)" fg:x="9" fg:w="3"/><text x="0.9712%" y="559.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.7212%" y="533" width="0.2404%" height="15" fill="rgb(227,201,28)" fg:x="9" fg:w="3"/><text x="0.9712%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.9615%" y="533" width="0.0801%" height="15" fill="rgb(238,77,29)" fg:x="12" fg:w="1"/><text x="1.2115%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.9615%" y="517" width="0.0801%" height="15" fill="rgb(213,221,40)" fg:x="12" fg:w="1"/><text x="1.2115%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.0417%" y="533" width="0.0801%" height="15" fill="rgb(226,220,44)" fg:x="13" fg:w="1"/><text x="1.2917%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.1218%" y="533" width="0.1603%" height="15" fill="rgb(228,90,23)" fg:x="14" fg:w="2"/><text x="1.3718%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.2019%" y="517" width="0.0801%" height="15" fill="rgb(235,72,29)" fg:x="15" fg:w="1"/><text x="1.4519%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.4423%" y="517" width="0.1603%" height="15" fill="rgb(248,117,39)" fg:x="18" fg:w="2"/><text x="1.6923%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.7628%" y="501" width="0.1603%" height="15" fill="rgb(225,43,28)" fg:x="22" fg:w="2"/><text x="2.0128%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.9231%" y="501" width="0.0801%" height="15" fill="rgb(240,93,4)" fg:x="24" fg:w="1"/><text x="2.1731%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.9231%" y="485" width="0.0801%" height="15" fill="rgb(234,178,27)" fg:x="24" fg:w="1"/><text x="2.1731%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.76%)</title><rect x="0.4006%" y="581" width="1.7628%" height="15" fill="rgb(254,88,22)" fg:x="5" fg:w="22"/><text x="0.6506%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.76%)</title><rect x="0.4006%" y="565" width="1.7628%" height="15" fill="rgb(240,206,50)" fg:x="5" fg:w="22"/><text x="0.6506%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.20%)</title><rect x="0.9615%" y="549" width="1.2019%" height="15" fill="rgb(249,103,8)" fg:x="12" fg:w="15"/><text x="1.2115%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="1.2821%" y="533" width="0.8814%" height="15" fill="rgb(241,178,36)" fg:x="16" fg:w="11"/><text x="1.5321%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="1.6026%" y="517" width="0.5609%" height="15" fill="rgb(246,110,15)" fg:x="20" fg:w="7"/><text x="1.8526%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="2.0032%" y="501" width="0.1603%" height="15" fill="rgb(207,14,43)" fg:x="25" fg:w="2"/><text x="2.2532%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="2.0833%" y="485" width="0.0801%" height="15" fill="rgb(253,219,19)" fg:x="26" fg:w="1"/><text x="2.3333%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 2.24%)</title><rect x="0.0000%" y="661" width="2.2436%" height="15" fill="rgb(216,126,5)" fg:x="0" fg:w="28"/><text x="0.2500%" y="671.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (25 samples, 2.00%)</title><rect x="0.2404%" y="645" width="2.0032%" height="15" fill="rgb(218,78,42)" fg:x="3" fg:w="25"/><text x="0.4904%" y="655.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 2.00%)</title><rect x="0.2404%" y="629" width="2.0032%" height="15" fill="rgb(215,154,40)" fg:x="3" fg:w="25"/><text x="0.4904%" y="639.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (24 samples, 1.92%)</title><rect x="0.3205%" y="613" width="1.9231%" height="15" fill="rgb(235,129,32)" fg:x="4" fg:w="24"/><text x="0.5705%" y="623.50">c..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 1.92%)</title><rect x="0.3205%" y="597" width="1.9231%" height="15" fill="rgb(218,51,8)" fg:x="4" fg:w="24"/><text x="0.5705%" y="607.50">&lt;..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.1635%" y="581" width="0.0801%" height="15" fill="rgb(245,48,4)" fg:x="27" fg:w="1"/><text x="2.4135%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryStorageFactory as engine::storage::StorageFactory&gt;::create_storage (1 samples, 0.08%)</title><rect x="2.2436%" y="629" width="0.0801%" height="15" fill="rgb(250,175,12)" fg:x="28" fg:w="1"/><text x="2.4936%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="2.3237%" y="613" width="0.0801%" height="15" fill="rgb(237,95,40)" fg:x="29" fg:w="1"/><text x="2.5737%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="2.5641%" y="565" width="0.1603%" height="15" fill="rgb(244,120,0)" fg:x="32" fg:w="2"/><text x="2.8141%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="2.5641%" y="549" width="0.1603%" height="15" fill="rgb(241,19,42)" fg:x="32" fg:w="2"/><text x="2.8141%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="2.5641%" y="533" width="0.1603%" height="15" fill="rgb(217,174,48)" fg:x="32" fg:w="2"/><text x="2.8141%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="2.5641%" y="517" width="0.1603%" height="15" fill="rgb(239,36,38)" fg:x="32" fg:w="2"/><text x="2.8141%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="2.6442%" y="501" width="0.0801%" height="15" fill="rgb(220,63,49)" fg:x="33" fg:w="1"/><text x="2.8942%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="2.6442%" y="485" width="0.0801%" height="15" fill="rgb(240,101,13)" fg:x="33" fg:w="1"/><text x="2.8942%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="2.6442%" y="469" width="0.0801%" height="15" fill="rgb(209,184,51)" fg:x="33" fg:w="1"/><text x="2.8942%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="2.6442%" y="453" width="0.0801%" height="15" fill="rgb(206,136,39)" fg:x="33" fg:w="1"/><text x="2.8942%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="2.6442%" y="437" width="0.0801%" height="15" fill="rgb(254,47,45)" fg:x="33" fg:w="1"/><text x="2.8942%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="2.6442%" y="421" width="0.0801%" height="15" fill="rgb(252,103,20)" fg:x="33" fg:w="1"/><text x="2.8942%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="2.6442%" y="405" width="0.0801%" height="15" fill="rgb(230,69,12)" fg:x="33" fg:w="1"/><text x="2.8942%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="2.6442%" y="389" width="0.0801%" height="15" fill="rgb(219,2,28)" fg:x="33" fg:w="1"/><text x="2.8942%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="2.6442%" y="373" width="0.0801%" height="15" fill="rgb(210,9,12)" fg:x="33" fg:w="1"/><text x="2.8942%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="2.6442%" y="357" width="0.0801%" height="15" fill="rgb(235,99,33)" fg:x="33" fg:w="1"/><text x="2.8942%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.08%)</title><rect x="2.6442%" y="341" width="0.0801%" height="15" fill="rgb(230,11,38)" fg:x="33" fg:w="1"/><text x="2.8942%" y="351.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="2.7244%" y="565" width="0.0801%" height="15" fill="rgb(217,129,0)" fg:x="34" fg:w="1"/><text x="2.9744%" y="575.50"></text></g><g><title>dlerror (5 samples, 0.40%)</title><rect x="2.8045%" y="549" width="0.4006%" height="15" fill="rgb(222,198,4)" fg:x="35" fg:w="5"/><text x="3.0545%" y="559.50"></text></g><g><title>__asprintf (3 samples, 0.24%)</title><rect x="2.9647%" y="533" width="0.2404%" height="15" fill="rgb(246,170,27)" fg:x="37" fg:w="3"/><text x="3.2147%" y="543.50"></text></g><g><title>_IO_default_xsputn (2 samples, 0.16%)</title><rect x="3.0449%" y="517" width="0.1603%" height="15" fill="rgb(229,17,28)" fg:x="38" fg:w="2"/><text x="3.2949%" y="527.50"></text></g><g><title>__pthread_mutex_unlock (1 samples, 0.08%)</title><rect x="3.3654%" y="485" width="0.0801%" height="15" fill="rgb(233,198,48)" fg:x="42" fg:w="1"/><text x="3.6154%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.6474%" y="469" width="0.0801%" height="15" fill="rgb(238,103,23)" fg:x="58" fg:w="1"/><text x="4.8974%" y="479.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (28 samples, 2.24%)</title><rect x="2.5641%" y="581" width="2.2436%" height="15" fill="rgb(206,91,41)" fg:x="32" fg:w="28"/><text x="2.8141%" y="591.50">&lt;..</text></g><g><title>libloading::safe::Library::new (25 samples, 2.00%)</title><rect x="2.8045%" y="565" width="2.0032%" height="15" fill="rgb(227,34,25)" fg:x="35" fg:w="25"/><text x="3.0545%" y="575.50">l..</text></g><g><title>dlopen (20 samples, 1.60%)</title><rect x="3.2051%" y="549" width="1.6026%" height="15" fill="rgb(210,110,44)" fg:x="40" fg:w="20"/><text x="3.4551%" y="559.50"></text></g><g><title>_dl_catch_error (19 samples, 1.52%)</title><rect x="3.2853%" y="533" width="1.5224%" height="15" fill="rgb(216,189,8)" fg:x="41" fg:w="19"/><text x="3.5353%" y="543.50"></text></g><g><title>_dl_catch_exception (18 samples, 1.44%)</title><rect x="3.3654%" y="517" width="1.4423%" height="15" fill="rgb(234,9,46)" fg:x="42" fg:w="18"/><text x="3.6154%" y="527.50"></text></g><g><title>_dl_catch_exception (18 samples, 1.44%)</title><rect x="3.3654%" y="501" width="1.4423%" height="15" fill="rgb(251,200,5)" fg:x="42" fg:w="18"/><text x="3.6154%" y="511.50"></text></g><g><title>_dl_catch_exception (17 samples, 1.36%)</title><rect x="3.4455%" y="485" width="1.3622%" height="15" fill="rgb(238,165,37)" fg:x="43" fg:w="17"/><text x="3.6955%" y="495.50"></text></g><g><title>_dl_find_dso_for_object (1 samples, 0.08%)</title><rect x="4.7276%" y="469" width="0.0801%" height="15" fill="rgb(232,77,38)" fg:x="59" fg:w="1"/><text x="4.9776%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="4.8077%" y="581" width="0.0801%" height="15" fill="rgb(253,179,33)" fg:x="60" fg:w="1"/><text x="5.0577%" y="591.50"></text></g><g><title>clock_getres (1 samples, 0.08%)</title><rect x="4.8878%" y="565" width="0.0801%" height="15" fill="rgb(240,13,35)" fg:x="61" fg:w="1"/><text x="5.1378%" y="575.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (31 samples, 2.48%)</title><rect x="2.5641%" y="597" width="2.4840%" height="15" fill="rgb(242,150,49)" fg:x="32" fg:w="31"/><text x="2.8141%" y="607.50">ke..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="4.8878%" y="581" width="0.1603%" height="15" fill="rgb(237,176,28)" fg:x="61" fg:w="2"/><text x="5.1378%" y="591.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="4.9679%" y="565" width="0.0801%" height="15" fill="rgb(214,176,33)" fg:x="62" fg:w="1"/><text x="5.2179%" y="575.50"></text></g><g><title>engine::session::Session::initialize (39 samples, 3.12%)</title><rect x="2.4038%" y="613" width="3.1250%" height="15" fill="rgb(214,25,12)" fg:x="30" fg:w="39"/><text x="2.6538%" y="623.50">eng..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (6 samples, 0.48%)</title><rect x="5.0481%" y="597" width="0.4808%" height="15" fill="rgb(238,190,20)" fg:x="63" fg:w="6"/><text x="5.2981%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="5.0481%" y="581" width="0.4808%" height="15" fill="rgb(208,11,19)" fg:x="63" fg:w="6"/><text x="5.2981%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="5.2083%" y="565" width="0.3205%" height="15" fill="rgb(239,90,4)" fg:x="65" fg:w="4"/><text x="5.4583%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="5.2083%" y="549" width="0.3205%" height="15" fill="rgb(248,110,3)" fg:x="65" fg:w="4"/><text x="5.4583%" y="559.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="5.2083%" y="533" width="0.3205%" height="15" fill="rgb(210,41,30)" fg:x="65" fg:w="4"/><text x="5.4583%" y="543.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (42 samples, 3.37%)</title><rect x="2.2436%" y="661" width="3.3654%" height="15" fill="rgb(239,36,8)" fg:x="28" fg:w="42"/><text x="2.4936%" y="671.50">&lt;en..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (42 samples, 3.37%)</title><rect x="2.2436%" y="645" width="3.3654%" height="15" fill="rgb(237,201,47)" fg:x="28" fg:w="42"/><text x="2.4936%" y="655.50">eng..</text></g><g><title>engine::session::Session::new (41 samples, 3.29%)</title><rect x="2.3237%" y="629" width="3.2853%" height="15" fill="rgb(224,140,29)" fg:x="29" fg:w="41"/><text x="2.5737%" y="639.50">eng..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="5.5288%" y="613" width="0.0801%" height="15" fill="rgb(231,209,17)" fg:x="69" fg:w="1"/><text x="5.7788%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="5.5288%" y="597" width="0.0801%" height="15" fill="rgb(249,196,1)" fg:x="69" fg:w="1"/><text x="5.7788%" y="607.50"></text></g><g><title>&lt;plugins_core::memory::MemoryPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="5.5288%" y="581" width="0.0801%" height="15" fill="rgb(223,207,51)" fg:x="69" fg:w="1"/><text x="5.7788%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="5.7692%" y="645" width="0.2404%" height="15" fill="rgb(210,14,40)" fg:x="72" fg:w="3"/><text x="6.0192%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="5.8494%" y="629" width="0.1603%" height="15" fill="rgb(250,20,52)" fg:x="73" fg:w="2"/><text x="6.0994%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="5.8494%" y="613" width="0.1603%" height="15" fill="rgb(241,46,11)" fg:x="73" fg:w="2"/><text x="6.0994%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="5.8494%" y="597" width="0.1603%" height="15" fill="rgb(219,105,5)" fg:x="73" fg:w="2"/><text x="6.0994%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="5.8494%" y="581" width="0.1603%" height="15" fill="rgb(252,77,35)" fg:x="73" fg:w="2"/><text x="6.0994%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="5.8494%" y="565" width="0.1603%" height="15" fill="rgb(243,119,2)" fg:x="73" fg:w="2"/><text x="6.0994%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="5.8494%" y="549" width="0.1603%" height="15" fill="rgb(206,82,28)" fg:x="73" fg:w="2"/><text x="6.0994%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="5.8494%" y="533" width="0.1603%" height="15" fill="rgb(227,120,12)" fg:x="73" fg:w="2"/><text x="6.0994%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="5.8494%" y="517" width="0.1603%" height="15" fill="rgb(229,134,41)" fg:x="73" fg:w="2"/><text x="6.0994%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="5.8494%" y="501" width="0.1603%" height="15" fill="rgb(239,96,32)" fg:x="73" fg:w="2"/><text x="6.0994%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="5.8494%" y="485" width="0.1603%" height="15" fill="rgb(225,46,27)" fg:x="73" fg:w="2"/><text x="6.0994%" y="495.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="5.8494%" y="469" width="0.1603%" height="15" fill="rgb(215,168,2)" fg:x="73" fg:w="2"/><text x="6.0994%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="5.8494%" y="453" width="0.1603%" height="15" fill="rgb(207,170,52)" fg:x="73" fg:w="2"/><text x="6.0994%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="6.0897%" y="533" width="0.0801%" height="15" fill="rgb(237,198,36)" fg:x="76" fg:w="1"/><text x="6.3397%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="6.0897%" y="517" width="0.0801%" height="15" fill="rgb(213,27,14)" fg:x="76" fg:w="1"/><text x="6.3397%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="6.0897%" y="501" width="0.0801%" height="15" fill="rgb(218,77,5)" fg:x="76" fg:w="1"/><text x="6.3397%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="6.0897%" y="485" width="0.0801%" height="15" fill="rgb(230,219,39)" fg:x="76" fg:w="1"/><text x="6.3397%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="6.0897%" y="469" width="0.0801%" height="15" fill="rgb(245,177,7)" fg:x="76" fg:w="1"/><text x="6.3397%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="6.0897%" y="453" width="0.0801%" height="15" fill="rgb(246,44,46)" fg:x="76" fg:w="1"/><text x="6.3397%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.0897%" y="437" width="0.0801%" height="15" fill="rgb(207,173,15)" fg:x="76" fg:w="1"/><text x="6.3397%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="6.0897%" y="613" width="0.1603%" height="15" fill="rgb(245,170,50)" fg:x="76" fg:w="2"/><text x="6.3397%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="6.0897%" y="597" width="0.1603%" height="15" fill="rgb(233,156,21)" fg:x="76" fg:w="2"/><text x="6.3397%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="6.0897%" y="581" width="0.1603%" height="15" fill="rgb(253,146,27)" fg:x="76" fg:w="2"/><text x="6.3397%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="6.0897%" y="565" width="0.1603%" height="15" fill="rgb(247,66,29)" fg:x="76" fg:w="2"/><text x="6.3397%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="6.0897%" y="549" width="0.1603%" height="15" fill="rgb(218,207,26)" fg:x="76" fg:w="2"/><text x="6.3397%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="6.1699%" y="533" width="0.0801%" height="15" fill="rgb(234,93,26)" fg:x="77" fg:w="1"/><text x="6.4199%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="6.1699%" y="517" width="0.0801%" height="15" fill="rgb(214,75,48)" fg:x="77" fg:w="1"/><text x="6.4199%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="6.0897%" y="629" width="0.2404%" height="15" fill="rgb(229,119,22)" fg:x="76" fg:w="3"/><text x="6.3397%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.2500%" y="613" width="0.0801%" height="15" fill="rgb(226,153,19)" fg:x="78" fg:w="1"/><text x="6.5000%" y="623.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="6.3301%" y="629" width="0.0801%" height="15" fill="rgb(220,204,36)" fg:x="79" fg:w="1"/><text x="6.5801%" y="639.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="6.3301%" y="613" width="0.0801%" height="15" fill="rgb(253,181,43)" fg:x="79" fg:w="1"/><text x="6.5801%" y="623.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="6.3301%" y="597" width="0.0801%" height="15" fill="rgb(211,41,51)" fg:x="79" fg:w="1"/><text x="6.5801%" y="607.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="6.3301%" y="581" width="0.0801%" height="15" fill="rgb(207,215,0)" fg:x="79" fg:w="1"/><text x="6.5801%" y="591.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="6.3301%" y="565" width="0.0801%" height="15" fill="rgb(212,153,10)" fg:x="79" fg:w="1"/><text x="6.5801%" y="575.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="6.3301%" y="549" width="0.0801%" height="15" fill="rgb(251,171,36)" fg:x="79" fg:w="1"/><text x="6.5801%" y="559.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="6.3301%" y="533" width="0.0801%" height="15" fill="rgb(225,219,41)" fg:x="79" fg:w="1"/><text x="6.5801%" y="543.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="6.3301%" y="517" width="0.0801%" height="15" fill="rgb(208,200,1)" fg:x="79" fg:w="1"/><text x="6.5801%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="6.4103%" y="597" width="0.0801%" height="15" fill="rgb(206,75,47)" fg:x="80" fg:w="1"/><text x="6.6603%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="6.4103%" y="581" width="0.0801%" height="15" fill="rgb(248,3,16)" fg:x="80" fg:w="1"/><text x="6.6603%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="6.4103%" y="565" width="0.0801%" height="15" fill="rgb(242,157,36)" fg:x="80" fg:w="1"/><text x="6.6603%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="6.4904%" y="581" width="0.0801%" height="15" fill="rgb(215,175,11)" fg:x="81" fg:w="1"/><text x="6.7404%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.4904%" y="565" width="0.0801%" height="15" fill="rgb(252,222,22)" fg:x="81" fg:w="1"/><text x="6.7404%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.4904%" y="549" width="0.0801%" height="15" fill="rgb(250,121,35)" fg:x="81" fg:w="1"/><text x="6.7404%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.5705%" y="565" width="0.0801%" height="15" fill="rgb(233,120,49)" fg:x="82" fg:w="1"/><text x="6.8205%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.5705%" y="549" width="0.0801%" height="15" fill="rgb(205,201,14)" fg:x="82" fg:w="1"/><text x="6.8205%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="6.5705%" y="533" width="0.0801%" height="15" fill="rgb(219,58,45)" fg:x="82" fg:w="1"/><text x="6.8205%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="6.5705%" y="517" width="0.0801%" height="15" fill="rgb(251,65,12)" fg:x="82" fg:w="1"/><text x="6.8205%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="6.5705%" y="501" width="0.0801%" height="15" fill="rgb(224,47,31)" fg:x="82" fg:w="1"/><text x="6.8205%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="6.5705%" y="485" width="0.0801%" height="15" fill="rgb(233,74,26)" fg:x="82" fg:w="1"/><text x="6.8205%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="6.5705%" y="469" width="0.0801%" height="15" fill="rgb(231,211,31)" fg:x="82" fg:w="1"/><text x="6.8205%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="6.5705%" y="453" width="0.0801%" height="15" fill="rgb(239,167,5)" fg:x="82" fg:w="1"/><text x="6.8205%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="6.5705%" y="437" width="0.0801%" height="15" fill="rgb(241,85,0)" fg:x="82" fg:w="1"/><text x="6.8205%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="6.5705%" y="421" width="0.0801%" height="15" fill="rgb(229,130,21)" fg:x="82" fg:w="1"/><text x="6.8205%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="6.5705%" y="405" width="0.0801%" height="15" fill="rgb(254,84,49)" fg:x="82" fg:w="1"/><text x="6.8205%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.5705%" y="389" width="0.0801%" height="15" fill="rgb(235,85,21)" fg:x="82" fg:w="1"/><text x="6.8205%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="6.7308%" y="533" width="0.5609%" height="15" fill="rgb(246,128,52)" fg:x="84" fg:w="7"/><text x="6.9808%" y="543.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="6.9712%" y="517" width="0.3205%" height="15" fill="rgb(243,114,49)" fg:x="87" fg:w="4"/><text x="7.2212%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="6.9712%" y="501" width="0.3205%" height="15" fill="rgb(240,224,22)" fg:x="87" fg:w="4"/><text x="7.2212%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="7.1314%" y="485" width="0.1603%" height="15" fill="rgb(247,201,52)" fg:x="89" fg:w="2"/><text x="7.3814%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.3718%" y="501" width="0.0801%" height="15" fill="rgb(231,70,45)" fg:x="92" fg:w="1"/><text x="7.6218%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (11 samples, 0.88%)</title><rect x="6.6506%" y="549" width="0.8814%" height="15" fill="rgb(217,215,20)" fg:x="83" fg:w="11"/><text x="6.9006%" y="559.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="7.2917%" y="533" width="0.2404%" height="15" fill="rgb(226,170,30)" fg:x="91" fg:w="3"/><text x="7.5417%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="7.3718%" y="517" width="0.1603%" height="15" fill="rgb(220,190,43)" fg:x="92" fg:w="2"/><text x="7.6218%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="7.4519%" y="501" width="0.0801%" height="15" fill="rgb(218,20,18)" fg:x="93" fg:w="1"/><text x="7.7019%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="7.7724%" y="533" width="0.0801%" height="15" fill="rgb(245,37,26)" fg:x="97" fg:w="1"/><text x="8.0224%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.7724%" y="517" width="0.0801%" height="15" fill="rgb(241,127,29)" fg:x="97" fg:w="1"/><text x="8.0224%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.7724%" y="501" width="0.0801%" height="15" fill="rgb(241,33,26)" fg:x="97" fg:w="1"/><text x="8.0224%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.7724%" y="485" width="0.0801%" height="15" fill="rgb(220,106,21)" fg:x="97" fg:w="1"/><text x="8.0224%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="8.1731%" y="485" width="0.0801%" height="15" fill="rgb(225,125,35)" fg:x="102" fg:w="1"/><text x="8.4231%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.1731%" y="469" width="0.0801%" height="15" fill="rgb(248,80,22)" fg:x="102" fg:w="1"/><text x="8.4231%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.1731%" y="453" width="0.0801%" height="15" fill="rgb(231,117,39)" fg:x="102" fg:w="1"/><text x="8.4231%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="8.1731%" y="501" width="0.1603%" height="15" fill="rgb(239,183,16)" fg:x="102" fg:w="2"/><text x="8.4231%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="8.2532%" y="485" width="0.0801%" height="15" fill="rgb(221,61,19)" fg:x="103" fg:w="1"/><text x="8.5032%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="8.2532%" y="469" width="0.0801%" height="15" fill="rgb(239,196,44)" fg:x="103" fg:w="1"/><text x="8.5032%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="8.1731%" y="517" width="0.2404%" height="15" fill="rgb(206,113,19)" fg:x="102" fg:w="3"/><text x="8.4231%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.3333%" y="501" width="0.0801%" height="15" fill="rgb(245,114,12)" fg:x="104" fg:w="1"/><text x="8.5833%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.3333%" y="485" width="0.0801%" height="15" fill="rgb(247,89,39)" fg:x="104" fg:w="1"/><text x="8.5833%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="8.3333%" y="469" width="0.0801%" height="15" fill="rgb(213,85,14)" fg:x="104" fg:w="1"/><text x="8.5833%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="8.4135%" y="517" width="0.3205%" height="15" fill="rgb(249,206,33)" fg:x="105" fg:w="4"/><text x="8.6635%" y="527.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="8.4135%" y="501" width="0.3205%" height="15" fill="rgb(235,167,47)" fg:x="105" fg:w="4"/><text x="8.6635%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="8.4936%" y="485" width="0.2404%" height="15" fill="rgb(217,177,16)" fg:x="106" fg:w="3"/><text x="8.7436%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="8.5737%" y="469" width="0.1603%" height="15" fill="rgb(250,228,29)" fg:x="107" fg:w="2"/><text x="8.8237%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="8.6538%" y="453" width="0.0801%" height="15" fill="rgb(216,195,42)" fg:x="108" fg:w="1"/><text x="8.9038%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.6538%" y="437" width="0.0801%" height="15" fill="rgb(232,192,32)" fg:x="108" fg:w="1"/><text x="8.9038%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="8.6538%" y="421" width="0.0801%" height="15" fill="rgb(211,8,47)" fg:x="108" fg:w="1"/><text x="8.9038%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="8.7340%" y="501" width="0.0801%" height="15" fill="rgb(251,201,9)" fg:x="109" fg:w="1"/><text x="8.9840%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.7340%" y="485" width="0.0801%" height="15" fill="rgb(206,185,47)" fg:x="109" fg:w="1"/><text x="8.9840%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.7340%" y="469" width="0.0801%" height="15" fill="rgb(245,54,32)" fg:x="109" fg:w="1"/><text x="8.9840%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.7340%" y="453" width="0.0801%" height="15" fill="rgb(208,1,8)" fg:x="109" fg:w="1"/><text x="8.9840%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="8.8141%" y="485" width="0.0801%" height="15" fill="rgb(228,57,24)" fg:x="110" fg:w="1"/><text x="9.0641%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="8.8942%" y="485" width="0.2404%" height="15" fill="rgb(251,24,8)" fg:x="111" fg:w="3"/><text x="9.1442%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.9744%" y="469" width="0.1603%" height="15" fill="rgb(236,196,50)" fg:x="112" fg:w="2"/><text x="9.2244%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="8.9744%" y="453" width="0.1603%" height="15" fill="rgb(246,222,29)" fg:x="112" fg:w="2"/><text x="9.2244%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="9.2147%" y="469" width="0.0801%" height="15" fill="rgb(211,34,40)" fg:x="115" fg:w="1"/><text x="9.4647%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.2147%" y="453" width="0.0801%" height="15" fill="rgb(210,66,51)" fg:x="115" fg:w="1"/><text x="9.4647%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.2147%" y="437" width="0.0801%" height="15" fill="rgb(250,56,43)" fg:x="115" fg:w="1"/><text x="9.4647%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="9.2949%" y="453" width="0.0801%" height="15" fill="rgb(240,111,50)" fg:x="116" fg:w="1"/><text x="9.5449%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="9.3750%" y="453" width="0.0801%" height="15" fill="rgb(209,117,13)" fg:x="117" fg:w="1"/><text x="9.6250%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="9.4551%" y="453" width="0.4006%" height="15" fill="rgb(232,164,45)" fg:x="118" fg:w="5"/><text x="9.7051%" y="463.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="9.4551%" y="437" width="0.4006%" height="15" fill="rgb(205,69,32)" fg:x="118" fg:w="5"/><text x="9.7051%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="9.6154%" y="421" width="0.2404%" height="15" fill="rgb(240,147,45)" fg:x="120" fg:w="3"/><text x="9.8654%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="9.6154%" y="405" width="0.2404%" height="15" fill="rgb(221,94,48)" fg:x="120" fg:w="3"/><text x="9.8654%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="9.7756%" y="389" width="0.0801%" height="15" fill="rgb(249,209,17)" fg:x="122" fg:w="1"/><text x="10.0256%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.7756%" y="373" width="0.0801%" height="15" fill="rgb(228,57,28)" fg:x="122" fg:w="1"/><text x="10.0256%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="9.7756%" y="357" width="0.0801%" height="15" fill="rgb(250,133,26)" fg:x="122" fg:w="1"/><text x="10.0256%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="9.2949%" y="469" width="0.6410%" height="15" fill="rgb(254,15,16)" fg:x="116" fg:w="8"/><text x="9.5449%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.8558%" y="453" width="0.0801%" height="15" fill="rgb(209,147,42)" fg:x="123" fg:w="1"/><text x="10.1058%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.28%)</title><rect x="8.8141%" y="501" width="1.2821%" height="15" fill="rgb(208,5,29)" fg:x="110" fg:w="16"/><text x="9.0641%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="9.1346%" y="485" width="0.9615%" height="15" fill="rgb(250,73,31)" fg:x="114" fg:w="12"/><text x="9.3846%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.9359%" y="469" width="0.1603%" height="15" fill="rgb(238,45,10)" fg:x="124" fg:w="2"/><text x="10.1859%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="9.9359%" y="453" width="0.1603%" height="15" fill="rgb(214,104,5)" fg:x="124" fg:w="2"/><text x="10.1859%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.1763%" y="469" width="0.0801%" height="15" fill="rgb(242,217,19)" fg:x="127" fg:w="1"/><text x="10.4263%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (31 samples, 2.48%)</title><rect x="7.8526%" y="533" width="2.4840%" height="15" fill="rgb(246,113,27)" fg:x="98" fg:w="31"/><text x="8.1026%" y="543.50">se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.60%)</title><rect x="8.7340%" y="517" width="1.6026%" height="15" fill="rgb(221,34,27)" fg:x="109" fg:w="20"/><text x="8.9840%" y="527.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="10.0962%" y="501" width="0.2404%" height="15" fill="rgb(246,109,6)" fg:x="126" fg:w="3"/><text x="10.3462%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="10.1763%" y="485" width="0.1603%" height="15" fill="rgb(217,12,25)" fg:x="127" fg:w="2"/><text x="10.4263%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="10.2564%" y="469" width="0.0801%" height="15" fill="rgb(250,195,5)" fg:x="128" fg:w="1"/><text x="10.5064%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (44 samples, 3.53%)</title><rect x="7.5321%" y="549" width="3.5256%" height="15" fill="rgb(244,140,45)" fg:x="94" fg:w="44"/><text x="7.7821%" y="559.50">ser..</text></g><g><title>std::io::Write::write_all (9 samples, 0.72%)</title><rect x="10.3365%" y="533" width="0.7212%" height="15" fill="rgb(230,64,14)" fg:x="129" fg:w="9"/><text x="10.5865%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (7 samples, 0.56%)</title><rect x="10.4968%" y="517" width="0.5609%" height="15" fill="rgb(206,27,27)" fg:x="131" fg:w="7"/><text x="10.7468%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.48%)</title><rect x="10.5769%" y="501" width="0.4808%" height="15" fill="rgb(230,14,50)" fg:x="132" fg:w="6"/><text x="10.8269%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="10.7372%" y="485" width="0.3205%" height="15" fill="rgb(237,172,14)" fg:x="134" fg:w="4"/><text x="10.9872%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="10.8173%" y="469" width="0.2404%" height="15" fill="rgb(209,25,21)" fg:x="135" fg:w="3"/><text x="11.0673%" y="479.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="10.8974%" y="453" width="0.1603%" height="15" fill="rgb(248,148,22)" fg:x="136" fg:w="2"/><text x="11.1474%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (56 samples, 4.49%)</title><rect x="6.6506%" y="565" width="4.4872%" height="15" fill="rgb(234,100,22)" fg:x="83" fg:w="56"/><text x="6.9006%" y="575.50">&lt;serd..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="11.0577%" y="549" width="0.0801%" height="15" fill="rgb(210,20,30)" fg:x="138" fg:w="1"/><text x="11.3077%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="11.0577%" y="533" width="0.0801%" height="15" fill="rgb(232,58,0)" fg:x="138" fg:w="1"/><text x="11.3077%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.0577%" y="517" width="0.0801%" height="15" fill="rgb(221,68,13)" fg:x="138" fg:w="1"/><text x="11.3077%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="11.0577%" y="501" width="0.0801%" height="15" fill="rgb(231,194,11)" fg:x="138" fg:w="1"/><text x="11.3077%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="11.0577%" y="485" width="0.0801%" height="15" fill="rgb(235,51,41)" fg:x="138" fg:w="1"/><text x="11.3077%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="11.0577%" y="469" width="0.0801%" height="15" fill="rgb(240,50,32)" fg:x="138" fg:w="1"/><text x="11.3077%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="11.0577%" y="453" width="0.0801%" height="15" fill="rgb(240,185,36)" fg:x="138" fg:w="1"/><text x="11.3077%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="11.2179%" y="533" width="0.1603%" height="15" fill="rgb(211,168,15)" fg:x="140" fg:w="2"/><text x="11.4679%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.4583%" y="517" width="0.0801%" height="15" fill="rgb(221,70,0)" fg:x="143" fg:w="1"/><text x="11.7083%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.6987%" y="501" width="0.0801%" height="15" fill="rgb(205,21,33)" fg:x="146" fg:w="1"/><text x="11.9487%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.7788%" y="485" width="0.0801%" height="15" fill="rgb(225,106,10)" fg:x="147" fg:w="1"/><text x="12.0288%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.8590%" y="485" width="0.0801%" height="15" fill="rgb(236,200,50)" fg:x="148" fg:w="1"/><text x="12.1090%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.8590%" y="469" width="0.0801%" height="15" fill="rgb(249,93,23)" fg:x="148" fg:w="1"/><text x="12.1090%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="11.9391%" y="485" width="0.1603%" height="15" fill="rgb(244,115,35)" fg:x="149" fg:w="2"/><text x="12.1891%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="11.9391%" y="469" width="0.1603%" height="15" fill="rgb(231,129,47)" fg:x="149" fg:w="2"/><text x="12.1891%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="11.9391%" y="453" width="0.1603%" height="15" fill="rgb(225,160,50)" fg:x="149" fg:w="2"/><text x="12.1891%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.20%)</title><rect x="11.1378%" y="565" width="1.2019%" height="15" fill="rgb(218,135,23)" fg:x="139" fg:w="15"/><text x="11.3878%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.20%)</title><rect x="11.1378%" y="549" width="1.2019%" height="15" fill="rgb(227,119,14)" fg:x="139" fg:w="15"/><text x="11.3878%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="11.3782%" y="533" width="0.9615%" height="15" fill="rgb(242,138,13)" fg:x="142" fg:w="12"/><text x="11.6282%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="11.5385%" y="517" width="0.8013%" height="15" fill="rgb(215,11,16)" fg:x="144" fg:w="10"/><text x="11.7885%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="11.7788%" y="501" width="0.5609%" height="15" fill="rgb(234,170,50)" fg:x="147" fg:w="7"/><text x="12.0288%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="12.0994%" y="485" width="0.2404%" height="15" fill="rgb(233,34,20)" fg:x="151" fg:w="3"/><text x="12.3494%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="12.1795%" y="469" width="0.1603%" height="15" fill="rgb(237,100,45)" fg:x="152" fg:w="2"/><text x="12.4295%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="12.1795%" y="453" width="0.1603%" height="15" fill="rgb(231,184,36)" fg:x="152" fg:w="2"/><text x="12.4295%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.2596%" y="437" width="0.0801%" height="15" fill="rgb(252,93,2)" fg:x="153" fg:w="1"/><text x="12.5096%" y="447.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="12.3397%" y="549" width="0.0801%" height="15" fill="rgb(248,176,47)" fg:x="154" fg:w="1"/><text x="12.5897%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="12.4199%" y="549" width="0.0801%" height="15" fill="rgb(249,125,23)" fg:x="155" fg:w="1"/><text x="12.6699%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.4199%" y="533" width="0.0801%" height="15" fill="rgb(239,67,42)" fg:x="155" fg:w="1"/><text x="12.6699%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="12.6603%" y="517" width="0.1603%" height="15" fill="rgb(244,162,4)" fg:x="158" fg:w="2"/><text x="12.9103%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.7404%" y="501" width="0.0801%" height="15" fill="rgb(214,150,38)" fg:x="159" fg:w="1"/><text x="12.9904%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="12.7404%" y="485" width="0.0801%" height="15" fill="rgb(228,211,28)" fg:x="159" fg:w="1"/><text x="12.9904%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="12.8205%" y="517" width="0.0801%" height="15" fill="rgb(212,98,48)" fg:x="160" fg:w="1"/><text x="13.0705%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.8205%" y="501" width="0.0801%" height="15" fill="rgb(213,45,13)" fg:x="160" fg:w="1"/><text x="13.0705%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="12.9006%" y="501" width="0.0801%" height="15" fill="rgb(218,35,29)" fg:x="161" fg:w="1"/><text x="13.1506%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="12.9006%" y="517" width="0.2404%" height="15" fill="rgb(244,13,3)" fg:x="161" fg:w="3"/><text x="13.1506%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="12.9808%" y="501" width="0.1603%" height="15" fill="rgb(235,170,19)" fg:x="162" fg:w="2"/><text x="13.2308%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.0609%" y="485" width="0.0801%" height="15" fill="rgb(233,193,43)" fg:x="163" fg:w="1"/><text x="13.3109%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.0609%" y="469" width="0.0801%" height="15" fill="rgb(228,223,20)" fg:x="163" fg:w="1"/><text x="13.3109%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="13.2212%" y="501" width="0.0801%" height="15" fill="rgb(208,85,54)" fg:x="165" fg:w="1"/><text x="13.4712%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="13.6218%" y="453" width="0.0801%" height="15" fill="rgb(254,14,45)" fg:x="170" fg:w="1"/><text x="13.8718%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.9423%" y="437" width="0.0801%" height="15" fill="rgb(247,99,29)" fg:x="174" fg:w="1"/><text x="14.1923%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.9423%" y="421" width="0.0801%" height="15" fill="rgb(225,180,54)" fg:x="174" fg:w="1"/><text x="14.1923%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.1026%" y="405" width="0.0801%" height="15" fill="rgb(239,88,43)" fg:x="176" fg:w="1"/><text x="14.3526%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.1026%" y="389" width="0.0801%" height="15" fill="rgb(209,47,11)" fg:x="176" fg:w="1"/><text x="14.3526%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.1026%" y="373" width="0.0801%" height="15" fill="rgb(219,179,23)" fg:x="176" fg:w="1"/><text x="14.3526%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="14.2628%" y="389" width="0.0801%" height="15" fill="rgb(213,183,19)" fg:x="178" fg:w="1"/><text x="14.5128%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="14.3429%" y="389" width="0.0801%" height="15" fill="rgb(210,11,9)" fg:x="179" fg:w="1"/><text x="14.5929%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.4231%" y="341" width="0.0801%" height="15" fill="rgb(239,194,16)" fg:x="180" fg:w="1"/><text x="14.6731%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.4231%" y="325" width="0.0801%" height="15" fill="rgb(246,23,50)" fg:x="180" fg:w="1"/><text x="14.6731%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.4231%" y="309" width="0.0801%" height="15" fill="rgb(245,10,41)" fg:x="180" fg:w="1"/><text x="14.6731%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="14.4231%" y="357" width="0.2404%" height="15" fill="rgb(228,43,24)" fg:x="180" fg:w="3"/><text x="14.6731%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="14.5032%" y="341" width="0.1603%" height="15" fill="rgb(220,151,0)" fg:x="181" fg:w="2"/><text x="14.7532%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="14.5833%" y="325" width="0.0801%" height="15" fill="rgb(232,219,10)" fg:x="182" fg:w="1"/><text x="14.8333%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="14.1026%" y="421" width="0.6410%" height="15" fill="rgb(227,217,48)" fg:x="176" fg:w="8"/><text x="14.3526%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="14.1827%" y="405" width="0.5609%" height="15" fill="rgb(210,66,35)" fg:x="177" fg:w="7"/><text x="14.4327%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="14.4231%" y="389" width="0.3205%" height="15" fill="rgb(254,6,7)" fg:x="180" fg:w="4"/><text x="14.6731%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="14.4231%" y="373" width="0.3205%" height="15" fill="rgb(235,222,42)" fg:x="180" fg:w="4"/><text x="14.6731%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.6635%" y="357" width="0.0801%" height="15" fill="rgb(245,126,5)" fg:x="183" fg:w="1"/><text x="14.9135%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.20%)</title><rect x="13.7019%" y="453" width="1.2019%" height="15" fill="rgb(215,73,17)" fg:x="171" fg:w="15"/><text x="13.9519%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.88%)</title><rect x="14.0224%" y="437" width="0.8814%" height="15" fill="rgb(219,198,52)" fg:x="175" fg:w="11"/><text x="14.2724%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="14.7436%" y="421" width="0.1603%" height="15" fill="rgb(217,159,18)" fg:x="184" fg:w="2"/><text x="14.9936%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.9038%" y="453" width="0.0801%" height="15" fill="rgb(212,177,18)" fg:x="186" fg:w="1"/><text x="15.1538%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (20 samples, 1.60%)</title><rect x="13.4615%" y="485" width="1.6026%" height="15" fill="rgb(241,10,11)" fg:x="168" fg:w="20"/><text x="13.7115%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (20 samples, 1.60%)</title><rect x="13.4615%" y="469" width="1.6026%" height="15" fill="rgb(232,114,35)" fg:x="168" fg:w="20"/><text x="13.7115%" y="479.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="14.9840%" y="453" width="0.0801%" height="15" fill="rgb(238,222,8)" fg:x="187" fg:w="1"/><text x="15.2340%" y="463.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="14.9840%" y="437" width="0.0801%" height="15" fill="rgb(251,153,44)" fg:x="187" fg:w="1"/><text x="15.2340%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (25 samples, 2.00%)</title><rect x="13.3013%" y="501" width="2.0032%" height="15" fill="rgb(210,140,51)" fg:x="166" fg:w="25"/><text x="13.5513%" y="511.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="15.0641%" y="485" width="0.2404%" height="15" fill="rgb(222,63,0)" fg:x="188" fg:w="3"/><text x="15.3141%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="15.1442%" y="469" width="0.1603%" height="15" fill="rgb(240,18,40)" fg:x="189" fg:w="2"/><text x="15.3942%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.3045%" y="501" width="0.0801%" height="15" fill="rgb(237,88,16)" fg:x="191" fg:w="1"/><text x="15.5545%" y="511.50"></text></g><g><title>engine::session::Session::flush (118 samples, 9.46%)</title><rect x="6.0096%" y="645" width="9.4551%" height="15" fill="rgb(251,117,13)" fg:x="75" fg:w="118"/><text x="6.2596%" y="655.50">engine::sessio..</text></g><g><title>engine::session::state::State::close (113 samples, 9.05%)</title><rect x="6.4103%" y="629" width="9.0545%" height="15" fill="rgb(251,228,8)" fg:x="80" fg:w="113"/><text x="6.6603%" y="639.50">engine::sessi..</text></g><g><title>engine::session::state::State::flush_entities (113 samples, 9.05%)</title><rect x="6.4103%" y="613" width="9.0545%" height="15" fill="rgb(205,107,49)" fg:x="80" fg:w="113"/><text x="6.6603%" y="623.50">engine::sessi..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (112 samples, 8.97%)</title><rect x="6.4904%" y="597" width="8.9744%" height="15" fill="rgb(238,72,41)" fg:x="81" fg:w="112"/><text x="6.7404%" y="607.50">engine::sessi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (111 samples, 8.89%)</title><rect x="6.5705%" y="581" width="8.8942%" height="15" fill="rgb(248,183,52)" fg:x="82" fg:w="111"/><text x="6.8205%" y="591.50">engine::sessi..</text></g><g><title>kernel::model::any_entity_changes (39 samples, 3.12%)</title><rect x="12.3397%" y="565" width="3.1250%" height="15" fill="rgb(215,58,20)" fg:x="154" fg:w="39"/><text x="12.5897%" y="575.50">ker..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (37 samples, 2.96%)</title><rect x="12.5000%" y="549" width="2.9647%" height="15" fill="rgb(209,49,13)" fg:x="156" fg:w="37"/><text x="12.7500%" y="559.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (37 samples, 2.96%)</title><rect x="12.5000%" y="533" width="2.9647%" height="15" fill="rgb(208,113,17)" fg:x="156" fg:w="37"/><text x="12.7500%" y="543.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (29 samples, 2.32%)</title><rect x="13.1410%" y="517" width="2.3237%" height="15" fill="rgb(208,14,22)" fg:x="164" fg:w="29"/><text x="13.3910%" y="527.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.3846%" y="501" width="0.0801%" height="15" fill="rgb(222,95,2)" fg:x="192" fg:w="1"/><text x="15.6346%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.3846%" y="485" width="0.0801%" height="15" fill="rgb(253,180,37)" fg:x="192" fg:w="1"/><text x="15.6346%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="15.3846%" y="469" width="0.0801%" height="15" fill="rgb(250,81,33)" fg:x="192" fg:w="1"/><text x="15.6346%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="15.4647%" y="613" width="0.0801%" height="15" fill="rgb(251,151,41)" fg:x="193" fg:w="1"/><text x="15.7147%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="15.4647%" y="597" width="0.0801%" height="15" fill="rgb(210,135,17)" fg:x="193" fg:w="1"/><text x="15.7147%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.5449%" y="501" width="0.0801%" height="15" fill="rgb(239,21,29)" fg:x="194" fg:w="1"/><text x="15.7949%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.5449%" y="485" width="0.0801%" height="15" fill="rgb(231,215,16)" fg:x="194" fg:w="1"/><text x="15.7949%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.5449%" y="469" width="0.0801%" height="15" fill="rgb(239,151,54)" fg:x="194" fg:w="1"/><text x="15.7949%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.5449%" y="453" width="0.0801%" height="15" fill="rgb(222,122,38)" fg:x="194" fg:w="1"/><text x="15.7949%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="15.5449%" y="613" width="0.1603%" height="15" fill="rgb(243,128,1)" fg:x="194" fg:w="2"/><text x="15.7949%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="15.5449%" y="597" width="0.1603%" height="15" fill="rgb(225,74,21)" fg:x="194" fg:w="2"/><text x="15.7949%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="15.5449%" y="581" width="0.1603%" height="15" fill="rgb(216,210,10)" fg:x="194" fg:w="2"/><text x="15.7949%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.5449%" y="565" width="0.1603%" height="15" fill="rgb(228,76,19)" fg:x="194" fg:w="2"/><text x="15.7949%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.5449%" y="549" width="0.1603%" height="15" fill="rgb(236,80,34)" fg:x="194" fg:w="2"/><text x="15.7949%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.5449%" y="533" width="0.1603%" height="15" fill="rgb(225,173,23)" fg:x="194" fg:w="2"/><text x="15.7949%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.5449%" y="517" width="0.1603%" height="15" fill="rgb(253,38,1)" fg:x="194" fg:w="2"/><text x="15.7949%" y="527.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="15.6250%" y="501" width="0.0801%" height="15" fill="rgb(206,155,35)" fg:x="195" fg:w="1"/><text x="15.8750%" y="511.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.7853%" y="565" width="0.0801%" height="15" fill="rgb(254,27,53)" fg:x="197" fg:w="1"/><text x="16.0353%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.7853%" y="549" width="0.0801%" height="15" fill="rgb(225,52,41)" fg:x="197" fg:w="1"/><text x="16.0353%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.7853%" y="533" width="0.0801%" height="15" fill="rgb(244,53,18)" fg:x="197" fg:w="1"/><text x="16.0353%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="15.7051%" y="597" width="0.2404%" height="15" fill="rgb(254,206,48)" fg:x="196" fg:w="3"/><text x="15.9551%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="15.7051%" y="581" width="0.2404%" height="15" fill="rgb(236,182,23)" fg:x="196" fg:w="3"/><text x="15.9551%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.8654%" y="565" width="0.0801%" height="15" fill="rgb(236,191,37)" fg:x="198" fg:w="1"/><text x="16.1154%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.8654%" y="549" width="0.0801%" height="15" fill="rgb(245,53,8)" fg:x="198" fg:w="1"/><text x="16.1154%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.8654%" y="533" width="0.0801%" height="15" fill="rgb(245,147,9)" fg:x="198" fg:w="1"/><text x="16.1154%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.8654%" y="517" width="0.0801%" height="15" fill="rgb(218,24,48)" fg:x="198" fg:w="1"/><text x="16.1154%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="15.8654%" y="501" width="0.0801%" height="15" fill="rgb(254,23,9)" fg:x="198" fg:w="1"/><text x="16.1154%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="15.8654%" y="485" width="0.0801%" height="15" fill="rgb(244,105,9)" fg:x="198" fg:w="1"/><text x="16.1154%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="15.8654%" y="469" width="0.0801%" height="15" fill="rgb(212,142,22)" fg:x="198" fg:w="1"/><text x="16.1154%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="16.0256%" y="581" width="0.1603%" height="15" fill="rgb(221,114,49)" fg:x="200" fg:w="2"/><text x="16.2756%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="16.0256%" y="565" width="0.1603%" height="15" fill="rgb(223,210,25)" fg:x="200" fg:w="2"/><text x="16.2756%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="16.0256%" y="549" width="0.1603%" height="15" fill="rgb(235,162,44)" fg:x="200" fg:w="2"/><text x="16.2756%" y="559.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (7 samples, 0.56%)</title><rect x="15.7051%" y="613" width="0.5609%" height="15" fill="rgb(237,65,45)" fg:x="196" fg:w="7"/><text x="15.9551%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="15.9455%" y="597" width="0.3205%" height="15" fill="rgb(208,79,9)" fg:x="199" fg:w="4"/><text x="16.1955%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.1859%" y="581" width="0.0801%" height="15" fill="rgb(215,228,8)" fg:x="202" fg:w="1"/><text x="16.4359%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.1859%" y="565" width="0.0801%" height="15" fill="rgb(205,185,17)" fg:x="202" fg:w="1"/><text x="16.4359%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.3462%" y="533" width="0.0801%" height="15" fill="rgb(213,62,36)" fg:x="204" fg:w="1"/><text x="16.5962%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.3462%" y="517" width="0.0801%" height="15" fill="rgb(209,34,9)" fg:x="204" fg:w="1"/><text x="16.5962%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.3462%" y="501" width="0.0801%" height="15" fill="rgb(246,151,27)" fg:x="204" fg:w="1"/><text x="16.5962%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.3462%" y="485" width="0.0801%" height="15" fill="rgb(218,206,3)" fg:x="204" fg:w="1"/><text x="16.5962%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.3462%" y="469" width="0.0801%" height="15" fill="rgb(242,202,1)" fg:x="204" fg:w="1"/><text x="16.5962%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.3462%" y="453" width="0.0801%" height="15" fill="rgb(227,185,16)" fg:x="204" fg:w="1"/><text x="16.5962%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.3462%" y="437" width="0.0801%" height="15" fill="rgb(241,1,14)" fg:x="204" fg:w="1"/><text x="16.5962%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.3462%" y="421" width="0.0801%" height="15" fill="rgb(212,113,25)" fg:x="204" fg:w="1"/><text x="16.5962%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.3462%" y="405" width="0.0801%" height="15" fill="rgb(247,37,43)" fg:x="204" fg:w="1"/><text x="16.5962%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.3462%" y="389" width="0.0801%" height="15" fill="rgb(226,54,8)" fg:x="204" fg:w="1"/><text x="16.5962%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.3462%" y="373" width="0.0801%" height="15" fill="rgb(251,205,25)" fg:x="204" fg:w="1"/><text x="16.5962%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.3462%" y="357" width="0.0801%" height="15" fill="rgb(246,87,35)" fg:x="204" fg:w="1"/><text x="16.5962%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.3462%" y="341" width="0.0801%" height="15" fill="rgb(251,145,46)" fg:x="204" fg:w="1"/><text x="16.5962%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.3462%" y="325" width="0.0801%" height="15" fill="rgb(210,210,33)" fg:x="204" fg:w="1"/><text x="16.5962%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.3462%" y="309" width="0.0801%" height="15" fill="rgb(221,151,11)" fg:x="204" fg:w="1"/><text x="16.5962%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.3462%" y="293" width="0.0801%" height="15" fill="rgb(208,160,28)" fg:x="204" fg:w="1"/><text x="16.5962%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.4263%" y="533" width="0.0801%" height="15" fill="rgb(243,69,29)" fg:x="205" fg:w="1"/><text x="16.6763%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.4263%" y="517" width="0.0801%" height="15" fill="rgb(224,144,4)" fg:x="205" fg:w="1"/><text x="16.6763%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.4263%" y="501" width="0.0801%" height="15" fill="rgb(211,140,38)" fg:x="205" fg:w="1"/><text x="16.6763%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.4263%" y="485" width="0.0801%" height="15" fill="rgb(252,189,15)" fg:x="205" fg:w="1"/><text x="16.6763%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="16.5064%" y="485" width="0.0801%" height="15" fill="rgb(251,175,23)" fg:x="206" fg:w="1"/><text x="16.7564%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="16.5865%" y="437" width="0.0801%" height="15" fill="rgb(212,184,11)" fg:x="207" fg:w="1"/><text x="16.8365%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.5865%" y="421" width="0.0801%" height="15" fill="rgb(217,205,6)" fg:x="207" fg:w="1"/><text x="16.8365%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="16.2660%" y="597" width="0.4808%" height="15" fill="rgb(235,45,45)" fg:x="203" fg:w="6"/><text x="16.5160%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (6 samples, 0.48%)</title><rect x="16.2660%" y="581" width="0.4808%" height="15" fill="rgb(211,157,53)" fg:x="203" fg:w="6"/><text x="16.5160%" y="591.50"></text></g><g><title>kernel::model::props::save_props (5 samples, 0.40%)</title><rect x="16.3462%" y="565" width="0.4006%" height="15" fill="rgb(212,13,8)" fg:x="204" fg:w="5"/><text x="16.5962%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="16.3462%" y="549" width="0.4006%" height="15" fill="rgb(218,80,36)" fg:x="204" fg:w="5"/><text x="16.5962%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="16.5064%" y="533" width="0.2404%" height="15" fill="rgb(211,123,43)" fg:x="206" fg:w="3"/><text x="16.7564%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="16.5064%" y="517" width="0.2404%" height="15" fill="rgb(206,165,2)" fg:x="206" fg:w="3"/><text x="16.7564%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="16.5064%" y="501" width="0.2404%" height="15" fill="rgb(248,63,35)" fg:x="206" fg:w="3"/><text x="16.7564%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="16.5865%" y="485" width="0.1603%" height="15" fill="rgb(219,133,41)" fg:x="207" fg:w="2"/><text x="16.8365%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="16.5865%" y="469" width="0.1603%" height="15" fill="rgb(206,175,46)" fg:x="207" fg:w="2"/><text x="16.8365%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="16.5865%" y="453" width="0.1603%" height="15" fill="rgb(224,41,35)" fg:x="207" fg:w="2"/><text x="16.8365%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.6667%" y="437" width="0.0801%" height="15" fill="rgb(226,113,24)" fg:x="208" fg:w="1"/><text x="16.9167%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="16.6667%" y="421" width="0.0801%" height="15" fill="rgb(219,51,41)" fg:x="208" fg:w="1"/><text x="16.9167%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.6667%" y="405" width="0.0801%" height="15" fill="rgb(220,145,47)" fg:x="208" fg:w="1"/><text x="16.9167%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.6667%" y="389" width="0.0801%" height="15" fill="rgb(239,121,47)" fg:x="208" fg:w="1"/><text x="16.9167%" y="399.50"></text></g><g><title>__libc_malloc (13 samples, 1.04%)</title><rect x="16.8269%" y="533" width="1.0417%" height="15" fill="rgb(207,60,40)" fg:x="210" fg:w="13"/><text x="17.0769%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (21 samples, 1.68%)</title><rect x="16.2660%" y="613" width="1.6827%" height="15" fill="rgb(224,229,11)" fg:x="203" fg:w="21"/><text x="16.5160%" y="623.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (15 samples, 1.20%)</title><rect x="16.7468%" y="597" width="1.2019%" height="15" fill="rgb(252,28,32)" fg:x="209" fg:w="15"/><text x="16.9968%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15 samples, 1.20%)</title><rect x="16.7468%" y="581" width="1.2019%" height="15" fill="rgb(207,52,49)" fg:x="209" fg:w="15"/><text x="16.9968%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (14 samples, 1.12%)</title><rect x="16.8269%" y="565" width="1.1218%" height="15" fill="rgb(243,51,50)" fg:x="210" fg:w="14"/><text x="17.0769%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (14 samples, 1.12%)</title><rect x="16.8269%" y="549" width="1.1218%" height="15" fill="rgb(212,92,21)" fg:x="210" fg:w="14"/><text x="17.0769%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.8686%" y="533" width="0.0801%" height="15" fill="rgb(230,183,50)" fg:x="223" fg:w="1"/><text x="18.1186%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="17.8686%" y="517" width="0.0801%" height="15" fill="rgb(225,48,9)" fg:x="223" fg:w="1"/><text x="18.1186%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (32 samples, 2.56%)</title><rect x="15.4647%" y="629" width="2.5641%" height="15" fill="rgb(254,44,4)" fg:x="193" fg:w="32"/><text x="15.7147%" y="639.50">&lt;e..</text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="17.9487%" y="613" width="0.0801%" height="15" fill="rgb(252,128,37)" fg:x="224" fg:w="1"/><text x="18.1987%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.1891%" y="533" width="0.0801%" height="15" fill="rgb(227,178,8)" fg:x="227" fg:w="1"/><text x="18.4391%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.1891%" y="517" width="0.0801%" height="15" fill="rgb(205,206,32)" fg:x="227" fg:w="1"/><text x="18.4391%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="18.2692%" y="437" width="0.0801%" height="15" fill="rgb(220,218,22)" fg:x="228" fg:w="1"/><text x="18.5192%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="18.1090%" y="581" width="0.4006%" height="15" fill="rgb(236,41,28)" fg:x="226" fg:w="5"/><text x="18.3590%" y="591.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="18.1090%" y="565" width="0.4006%" height="15" fill="rgb(219,37,7)" fg:x="226" fg:w="5"/><text x="18.3590%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="18.1090%" y="549" width="0.4006%" height="15" fill="rgb(206,160,15)" fg:x="226" fg:w="5"/><text x="18.3590%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="18.2692%" y="533" width="0.2404%" height="15" fill="rgb(208,82,21)" fg:x="228" fg:w="3"/><text x="18.5192%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="18.2692%" y="517" width="0.2404%" height="15" fill="rgb(226,130,25)" fg:x="228" fg:w="3"/><text x="18.5192%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="18.2692%" y="501" width="0.2404%" height="15" fill="rgb(212,72,24)" fg:x="228" fg:w="3"/><text x="18.5192%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="18.2692%" y="485" width="0.2404%" height="15" fill="rgb(206,28,16)" fg:x="228" fg:w="3"/><text x="18.5192%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="18.2692%" y="469" width="0.2404%" height="15" fill="rgb(249,41,5)" fg:x="228" fg:w="3"/><text x="18.5192%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="18.2692%" y="453" width="0.2404%" height="15" fill="rgb(233,96,48)" fg:x="228" fg:w="3"/><text x="18.5192%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="18.3494%" y="437" width="0.1603%" height="15" fill="rgb(240,198,11)" fg:x="229" fg:w="2"/><text x="18.5994%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.3494%" y="421" width="0.1603%" height="15" fill="rgb(209,175,35)" fg:x="229" fg:w="2"/><text x="18.5994%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.4295%" y="405" width="0.0801%" height="15" fill="rgb(214,40,51)" fg:x="230" fg:w="1"/><text x="18.6795%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.4295%" y="389" width="0.0801%" height="15" fill="rgb(252,56,4)" fg:x="230" fg:w="1"/><text x="18.6795%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.4295%" y="373" width="0.0801%" height="15" fill="rgb(219,131,5)" fg:x="230" fg:w="1"/><text x="18.6795%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.4295%" y="357" width="0.0801%" height="15" fill="rgb(223,67,53)" fg:x="230" fg:w="1"/><text x="18.6795%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.5897%" y="533" width="0.1603%" height="15" fill="rgb(227,154,8)" fg:x="232" fg:w="2"/><text x="18.8397%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.6699%" y="517" width="0.0801%" height="15" fill="rgb(216,174,51)" fg:x="233" fg:w="1"/><text x="18.9199%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.6699%" y="501" width="0.0801%" height="15" fill="rgb(239,60,34)" fg:x="233" fg:w="1"/><text x="18.9199%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.6699%" y="485" width="0.0801%" height="15" fill="rgb(236,165,48)" fg:x="233" fg:w="1"/><text x="18.9199%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.6699%" y="469" width="0.0801%" height="15" fill="rgb(210,37,26)" fg:x="233" fg:w="1"/><text x="18.9199%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.6699%" y="453" width="0.0801%" height="15" fill="rgb(211,3,17)" fg:x="233" fg:w="1"/><text x="18.9199%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.6699%" y="437" width="0.0801%" height="15" fill="rgb(234,88,49)" fg:x="233" fg:w="1"/><text x="18.9199%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.6699%" y="421" width="0.0801%" height="15" fill="rgb(233,40,17)" fg:x="233" fg:w="1"/><text x="18.9199%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.6699%" y="405" width="0.0801%" height="15" fill="rgb(235,127,31)" fg:x="233" fg:w="1"/><text x="18.9199%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="18.6699%" y="389" width="0.0801%" height="15" fill="rgb(248,167,17)" fg:x="233" fg:w="1"/><text x="18.9199%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="18.6699%" y="373" width="0.0801%" height="15" fill="rgb(218,179,8)" fg:x="233" fg:w="1"/><text x="18.9199%" y="383.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.72%)</title><rect x="18.1090%" y="613" width="0.7212%" height="15" fill="rgb(216,92,14)" fg:x="226" fg:w="9"/><text x="18.3590%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (9 samples, 0.72%)</title><rect x="18.1090%" y="597" width="0.7212%" height="15" fill="rgb(221,198,46)" fg:x="226" fg:w="9"/><text x="18.3590%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="18.5096%" y="581" width="0.3205%" height="15" fill="rgb(244,7,25)" fg:x="231" fg:w="4"/><text x="18.7596%" y="591.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="18.5096%" y="565" width="0.3205%" height="15" fill="rgb(233,75,6)" fg:x="231" fg:w="4"/><text x="18.7596%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="18.5096%" y="549" width="0.3205%" height="15" fill="rgb(240,189,41)" fg:x="231" fg:w="4"/><text x="18.7596%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.7500%" y="533" width="0.0801%" height="15" fill="rgb(237,157,21)" fg:x="234" fg:w="1"/><text x="19.0000%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.7500%" y="517" width="0.0801%" height="15" fill="rgb(210,136,49)" fg:x="234" fg:w="1"/><text x="19.0000%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.7500%" y="501" width="0.0801%" height="15" fill="rgb(210,68,29)" fg:x="234" fg:w="1"/><text x="19.0000%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.7500%" y="485" width="0.0801%" height="15" fill="rgb(247,207,20)" fg:x="234" fg:w="1"/><text x="19.0000%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.7500%" y="469" width="0.0801%" height="15" fill="rgb(224,73,48)" fg:x="234" fg:w="1"/><text x="19.0000%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.7500%" y="453" width="0.0801%" height="15" fill="rgb(215,136,47)" fg:x="234" fg:w="1"/><text x="19.0000%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.7500%" y="437" width="0.0801%" height="15" fill="rgb(232,222,16)" fg:x="234" fg:w="1"/><text x="19.0000%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.7500%" y="421" width="0.0801%" height="15" fill="rgb(249,202,47)" fg:x="234" fg:w="1"/><text x="19.0000%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.8301%" y="517" width="0.1603%" height="15" fill="rgb(236,56,8)" fg:x="235" fg:w="2"/><text x="19.0801%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.8301%" y="501" width="0.1603%" height="15" fill="rgb(222,6,3)" fg:x="235" fg:w="2"/><text x="19.0801%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.8301%" y="485" width="0.1603%" height="15" fill="rgb(254,222,28)" fg:x="235" fg:w="2"/><text x="19.0801%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.9904%" y="469" width="0.0801%" height="15" fill="rgb(219,57,23)" fg:x="237" fg:w="1"/><text x="19.2404%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.0705%" y="453" width="0.0801%" height="15" fill="rgb(251,106,48)" fg:x="238" fg:w="1"/><text x="19.3205%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="18.8301%" y="565" width="0.4006%" height="15" fill="rgb(242,2,23)" fg:x="235" fg:w="5"/><text x="19.0801%" y="575.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="18.8301%" y="549" width="0.4006%" height="15" fill="rgb(212,109,31)" fg:x="235" fg:w="5"/><text x="19.0801%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="18.8301%" y="533" width="0.4006%" height="15" fill="rgb(241,9,22)" fg:x="235" fg:w="5"/><text x="19.0801%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="18.9904%" y="517" width="0.2404%" height="15" fill="rgb(209,64,27)" fg:x="237" fg:w="3"/><text x="19.2404%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="18.9904%" y="501" width="0.2404%" height="15" fill="rgb(248,13,44)" fg:x="237" fg:w="3"/><text x="19.2404%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="18.9904%" y="485" width="0.2404%" height="15" fill="rgb(213,86,6)" fg:x="237" fg:w="3"/><text x="19.2404%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="19.0705%" y="469" width="0.1603%" height="15" fill="rgb(247,11,18)" fg:x="238" fg:w="2"/><text x="19.3205%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.1506%" y="453" width="0.0801%" height="15" fill="rgb(252,31,11)" fg:x="239" fg:w="1"/><text x="19.4006%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.1506%" y="437" width="0.0801%" height="15" fill="rgb(215,63,51)" fg:x="239" fg:w="1"/><text x="19.4006%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.1506%" y="421" width="0.0801%" height="15" fill="rgb(222,180,4)" fg:x="239" fg:w="1"/><text x="19.4006%" y="431.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="19.2308%" y="549" width="0.0801%" height="15" fill="rgb(233,4,23)" fg:x="240" fg:w="1"/><text x="19.4808%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.3109%" y="501" width="0.0801%" height="15" fill="rgb(230,116,22)" fg:x="241" fg:w="1"/><text x="19.5609%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.3109%" y="485" width="0.0801%" height="15" fill="rgb(222,20,14)" fg:x="241" fg:w="1"/><text x="19.5609%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.3109%" y="469" width="0.0801%" height="15" fill="rgb(210,176,43)" fg:x="241" fg:w="1"/><text x="19.5609%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.3109%" y="517" width="0.1603%" height="15" fill="rgb(219,67,32)" fg:x="241" fg:w="2"/><text x="19.5609%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.3910%" y="501" width="0.0801%" height="15" fill="rgb(228,91,39)" fg:x="242" fg:w="1"/><text x="19.6410%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.72%)</title><rect x="18.8301%" y="597" width="0.7212%" height="15" fill="rgb(254,63,14)" fg:x="235" fg:w="9"/><text x="19.0801%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (9 samples, 0.72%)</title><rect x="18.8301%" y="581" width="0.7212%" height="15" fill="rgb(216,171,39)" fg:x="235" fg:w="9"/><text x="19.0801%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="19.2308%" y="565" width="0.3205%" height="15" fill="rgb(248,68,25)" fg:x="240" fg:w="4"/><text x="19.4808%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="19.3109%" y="549" width="0.2404%" height="15" fill="rgb(239,63,16)" fg:x="241" fg:w="3"/><text x="19.5609%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="19.3109%" y="533" width="0.2404%" height="15" fill="rgb(225,111,43)" fg:x="241" fg:w="3"/><text x="19.5609%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.4712%" y="517" width="0.0801%" height="15" fill="rgb(246,165,17)" fg:x="243" fg:w="1"/><text x="19.7212%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.4712%" y="501" width="0.0801%" height="15" fill="rgb(208,124,1)" fg:x="243" fg:w="1"/><text x="19.7212%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.4712%" y="485" width="0.0801%" height="15" fill="rgb(234,147,33)" fg:x="243" fg:w="1"/><text x="19.7212%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.4712%" y="469" width="0.0801%" height="15" fill="rgb(240,86,30)" fg:x="243" fg:w="1"/><text x="19.7212%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.4712%" y="453" width="0.0801%" height="15" fill="rgb(237,34,51)" fg:x="243" fg:w="1"/><text x="19.7212%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.4712%" y="437" width="0.0801%" height="15" fill="rgb(232,131,41)" fg:x="243" fg:w="1"/><text x="19.7212%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.4712%" y="421" width="0.0801%" height="15" fill="rgb(227,129,53)" fg:x="243" fg:w="1"/><text x="19.7212%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.4712%" y="405" width="0.0801%" height="15" fill="rgb(230,90,35)" fg:x="243" fg:w="1"/><text x="19.7212%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.4712%" y="389" width="0.0801%" height="15" fill="rgb(248,88,27)" fg:x="243" fg:w="1"/><text x="19.7212%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.4712%" y="373" width="0.0801%" height="15" fill="rgb(223,18,17)" fg:x="243" fg:w="1"/><text x="19.7212%" y="383.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (10 samples, 0.80%)</title><rect x="18.8301%" y="613" width="0.8013%" height="15" fill="rgb(241,11,10)" fg:x="235" fg:w="10"/><text x="19.0801%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="19.5513%" y="597" width="0.0801%" height="15" fill="rgb(232,111,52)" fg:x="244" fg:w="1"/><text x="19.8013%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="19.5513%" y="581" width="0.0801%" height="15" fill="rgb(228,67,8)" fg:x="244" fg:w="1"/><text x="19.8013%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="19.5513%" y="565" width="0.0801%" height="15" fill="rgb(251,168,31)" fg:x="244" fg:w="1"/><text x="19.8013%" y="575.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="19.5513%" y="549" width="0.0801%" height="15" fill="rgb(249,164,11)" fg:x="244" fg:w="1"/><text x="19.8013%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.7115%" y="517" width="0.0801%" height="15" fill="rgb(239,81,9)" fg:x="246" fg:w="1"/><text x="19.9615%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.7917%" y="517" width="0.0801%" height="15" fill="rgb(222,145,38)" fg:x="247" fg:w="1"/><text x="20.0417%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.7917%" y="501" width="0.0801%" height="15" fill="rgb(238,80,54)" fg:x="247" fg:w="1"/><text x="20.0417%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="19.7917%" y="485" width="0.0801%" height="15" fill="rgb(237,116,16)" fg:x="247" fg:w="1"/><text x="20.0417%" y="495.50"></text></g><g><title>plugins_core::build::Build::holding (56 samples, 4.49%)</title><rect x="15.4647%" y="645" width="4.4872%" height="15" fill="rgb(218,135,19)" fg:x="193" fg:w="56"/><text x="15.7147%" y="655.50">plugi..</text></g><g><title>plugins_core::tools::set_container (24 samples, 1.92%)</title><rect x="18.0288%" y="629" width="1.9231%" height="15" fill="rgb(216,207,44)" fg:x="225" fg:w="24"/><text x="18.2788%" y="639.50">p..</text></g><g><title>plugins_core::location::Location::set (4 samples, 0.32%)</title><rect x="19.6314%" y="613" width="0.3205%" height="15" fill="rgb(226,152,40)" fg:x="245" fg:w="4"/><text x="19.8814%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="19.6314%" y="597" width="0.3205%" height="15" fill="rgb(219,98,35)" fg:x="245" fg:w="4"/><text x="19.8814%" y="607.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (4 samples, 0.32%)</title><rect x="19.6314%" y="581" width="0.3205%" height="15" fill="rgb(222,136,46)" fg:x="245" fg:w="4"/><text x="19.8814%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="19.6314%" y="565" width="0.3205%" height="15" fill="rgb(222,71,8)" fg:x="245" fg:w="4"/><text x="19.8814%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (4 samples, 0.32%)</title><rect x="19.6314%" y="549" width="0.3205%" height="15" fill="rgb(209,89,53)" fg:x="245" fg:w="4"/><text x="19.8814%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="19.7115%" y="533" width="0.2404%" height="15" fill="rgb(210,97,51)" fg:x="246" fg:w="3"/><text x="19.9615%" y="543.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="19.8718%" y="517" width="0.0801%" height="15" fill="rgb(248,65,21)" fg:x="248" fg:w="1"/><text x="20.1218%" y="527.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="19.8718%" y="501" width="0.0801%" height="15" fill="rgb(222,5,31)" fg:x="248" fg:w="1"/><text x="20.1218%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="19.9519%" y="613" width="0.0801%" height="15" fill="rgb(241,16,30)" fg:x="249" fg:w="1"/><text x="20.2019%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="19.9519%" y="597" width="0.0801%" height="15" fill="rgb(215,86,30)" fg:x="249" fg:w="1"/><text x="20.2019%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="19.9519%" y="581" width="0.0801%" height="15" fill="rgb(235,26,44)" fg:x="249" fg:w="1"/><text x="20.2019%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="19.9519%" y="565" width="0.0801%" height="15" fill="rgb(228,147,14)" fg:x="249" fg:w="1"/><text x="20.2019%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="19.9519%" y="549" width="0.0801%" height="15" fill="rgb(253,38,50)" fg:x="249" fg:w="1"/><text x="20.2019%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="19.9519%" y="533" width="0.0801%" height="15" fill="rgb(251,151,16)" fg:x="249" fg:w="1"/><text x="20.2019%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="19.9519%" y="517" width="0.0801%" height="15" fill="rgb(224,64,19)" fg:x="249" fg:w="1"/><text x="20.2019%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="19.9519%" y="501" width="0.0801%" height="15" fill="rgb(235,214,47)" fg:x="249" fg:w="1"/><text x="20.2019%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="19.9519%" y="485" width="0.0801%" height="15" fill="rgb(218,15,19)" fg:x="249" fg:w="1"/><text x="20.2019%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="19.9519%" y="469" width="0.0801%" height="15" fill="rgb(247,209,3)" fg:x="249" fg:w="1"/><text x="20.2019%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="19.9519%" y="453" width="0.0801%" height="15" fill="rgb(217,29,2)" fg:x="249" fg:w="1"/><text x="20.2019%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="19.9519%" y="437" width="0.0801%" height="15" fill="rgb(234,9,9)" fg:x="249" fg:w="1"/><text x="20.2019%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="19.9519%" y="421" width="0.0801%" height="15" fill="rgb(207,43,14)" fg:x="249" fg:w="1"/><text x="20.2019%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="19.9519%" y="405" width="0.0801%" height="15" fill="rgb(216,219,36)" fg:x="249" fg:w="1"/><text x="20.2019%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="19.9519%" y="389" width="0.0801%" height="15" fill="rgb(238,12,26)" fg:x="249" fg:w="1"/><text x="20.2019%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="19.9519%" y="373" width="0.0801%" height="15" fill="rgb(226,67,30)" fg:x="249" fg:w="1"/><text x="20.2019%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="19.9519%" y="357" width="0.0801%" height="15" fill="rgb(229,154,7)" fg:x="249" fg:w="1"/><text x="20.2019%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="19.9519%" y="341" width="0.0801%" height="15" fill="rgb(249,90,18)" fg:x="249" fg:w="1"/><text x="20.2019%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.9519%" y="325" width="0.0801%" height="15" fill="rgb(223,53,15)" fg:x="249" fg:w="1"/><text x="20.2019%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.9519%" y="309" width="0.0801%" height="15" fill="rgb(253,86,38)" fg:x="249" fg:w="1"/><text x="20.2019%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="19.9519%" y="293" width="0.0801%" height="15" fill="rgb(222,198,9)" fg:x="249" fg:w="1"/><text x="20.2019%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="19.9519%" y="277" width="0.0801%" height="15" fill="rgb(240,146,25)" fg:x="249" fg:w="1"/><text x="20.2019%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="19.9519%" y="261" width="0.0801%" height="15" fill="rgb(225,38,10)" fg:x="249" fg:w="1"/><text x="20.2019%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="19.9519%" y="245" width="0.0801%" height="15" fill="rgb(246,93,4)" fg:x="249" fg:w="1"/><text x="20.2019%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="19.9519%" y="229" width="0.0801%" height="15" fill="rgb(222,55,18)" fg:x="249" fg:w="1"/><text x="20.2019%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="19.9519%" y="213" width="0.0801%" height="15" fill="rgb(233,137,48)" fg:x="249" fg:w="1"/><text x="20.2019%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="19.9519%" y="197" width="0.0801%" height="15" fill="rgb(214,8,54)" fg:x="249" fg:w="1"/><text x="20.2019%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="19.9519%" y="181" width="0.0801%" height="15" fill="rgb(206,75,4)" fg:x="249" fg:w="1"/><text x="20.2019%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="19.9519%" y="165" width="0.0801%" height="15" fill="rgb(238,171,14)" fg:x="249" fg:w="1"/><text x="20.2019%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="19.9519%" y="149" width="0.0801%" height="15" fill="rgb(233,70,41)" fg:x="249" fg:w="1"/><text x="20.2019%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="19.9519%" y="133" width="0.0801%" height="15" fill="rgb(214,68,36)" fg:x="249" fg:w="1"/><text x="20.2019%" y="143.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="19.9519%" y="117" width="0.0801%" height="15" fill="rgb(223,29,5)" fg:x="249" fg:w="1"/><text x="20.2019%" y="127.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="19.9519%" y="101" width="0.0801%" height="15" fill="rgb(251,22,40)" fg:x="249" fg:w="1"/><text x="20.2019%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.0321%" y="501" width="0.0801%" height="15" fill="rgb(210,67,41)" fg:x="250" fg:w="1"/><text x="20.2821%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.0321%" y="485" width="0.0801%" height="15" fill="rgb(225,177,31)" fg:x="250" fg:w="1"/><text x="20.2821%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.0321%" y="469" width="0.0801%" height="15" fill="rgb(221,229,11)" fg:x="250" fg:w="1"/><text x="20.2821%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.0321%" y="453" width="0.0801%" height="15" fill="rgb(247,172,52)" fg:x="250" fg:w="1"/><text x="20.2821%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.0321%" y="437" width="0.0801%" height="15" fill="rgb(212,73,19)" fg:x="250" fg:w="1"/><text x="20.2821%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.0321%" y="421" width="0.0801%" height="15" fill="rgb(244,7,46)" fg:x="250" fg:w="1"/><text x="20.2821%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.0321%" y="405" width="0.0801%" height="15" fill="rgb(230,113,20)" fg:x="250" fg:w="1"/><text x="20.2821%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.0321%" y="389" width="0.0801%" height="15" fill="rgb(209,97,30)" fg:x="250" fg:w="1"/><text x="20.2821%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.0321%" y="373" width="0.0801%" height="15" fill="rgb(243,89,12)" fg:x="250" fg:w="1"/><text x="20.2821%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.0321%" y="357" width="0.0801%" height="15" fill="rgb(228,32,19)" fg:x="250" fg:w="1"/><text x="20.2821%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.0321%" y="341" width="0.0801%" height="15" fill="rgb(248,25,17)" fg:x="250" fg:w="1"/><text x="20.2821%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.0321%" y="325" width="0.0801%" height="15" fill="rgb(232,161,29)" fg:x="250" fg:w="1"/><text x="20.2821%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.0321%" y="549" width="0.1603%" height="15" fill="rgb(251,192,11)" fg:x="250" fg:w="2"/><text x="20.2821%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.0321%" y="533" width="0.1603%" height="15" fill="rgb(240,47,32)" fg:x="250" fg:w="2"/><text x="20.2821%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.0321%" y="517" width="0.1603%" height="15" fill="rgb(250,16,45)" fg:x="250" fg:w="2"/><text x="20.2821%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.1122%" y="501" width="0.0801%" height="15" fill="rgb(227,217,42)" fg:x="251" fg:w="1"/><text x="20.3622%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="20.0321%" y="565" width="0.2404%" height="15" fill="rgb(206,82,54)" fg:x="250" fg:w="3"/><text x="20.2821%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.1923%" y="549" width="0.0801%" height="15" fill="rgb(243,145,25)" fg:x="252" fg:w="1"/><text x="20.4423%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.1923%" y="533" width="0.0801%" height="15" fill="rgb(207,166,24)" fg:x="252" fg:w="1"/><text x="20.4423%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.1923%" y="517" width="0.0801%" height="15" fill="rgb(215,191,44)" fg:x="252" fg:w="1"/><text x="20.4423%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.1923%" y="501" width="0.0801%" height="15" fill="rgb(234,218,51)" fg:x="252" fg:w="1"/><text x="20.4423%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.1923%" y="485" width="0.0801%" height="15" fill="rgb(245,133,21)" fg:x="252" fg:w="1"/><text x="20.4423%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="20.1923%" y="469" width="0.0801%" height="15" fill="rgb(230,136,45)" fg:x="252" fg:w="1"/><text x="20.4423%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="20.1923%" y="453" width="0.0801%" height="15" fill="rgb(247,63,43)" fg:x="252" fg:w="1"/><text x="20.4423%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.2724%" y="533" width="0.0801%" height="15" fill="rgb(254,223,31)" fg:x="253" fg:w="1"/><text x="20.5224%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.3526%" y="533" width="0.0801%" height="15" fill="rgb(236,185,0)" fg:x="254" fg:w="1"/><text x="20.6026%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="20.4327%" y="469" width="0.0801%" height="15" fill="rgb(231,139,46)" fg:x="255" fg:w="1"/><text x="20.6827%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.4327%" y="453" width="0.0801%" height="15" fill="rgb(236,147,31)" fg:x="255" fg:w="1"/><text x="20.6827%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.64%)</title><rect x="20.0321%" y="613" width="0.6410%" height="15" fill="rgb(225,222,22)" fg:x="250" fg:w="8"/><text x="20.2821%" y="623.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.64%)</title><rect x="20.0321%" y="597" width="0.6410%" height="15" fill="rgb(225,193,14)" fg:x="250" fg:w="8"/><text x="20.2821%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="20.0321%" y="581" width="0.6410%" height="15" fill="rgb(253,193,46)" fg:x="250" fg:w="8"/><text x="20.2821%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="20.2724%" y="565" width="0.4006%" height="15" fill="rgb(218,187,39)" fg:x="253" fg:w="5"/><text x="20.5224%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="20.2724%" y="549" width="0.4006%" height="15" fill="rgb(227,162,48)" fg:x="253" fg:w="5"/><text x="20.5224%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="20.4327%" y="533" width="0.2404%" height="15" fill="rgb(222,25,5)" fg:x="255" fg:w="3"/><text x="20.6827%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="20.4327%" y="517" width="0.2404%" height="15" fill="rgb(211,205,16)" fg:x="255" fg:w="3"/><text x="20.6827%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="20.4327%" y="501" width="0.2404%" height="15" fill="rgb(244,191,2)" fg:x="255" fg:w="3"/><text x="20.6827%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="20.4327%" y="485" width="0.2404%" height="15" fill="rgb(248,159,12)" fg:x="255" fg:w="3"/><text x="20.6827%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.5128%" y="469" width="0.1603%" height="15" fill="rgb(235,204,17)" fg:x="256" fg:w="2"/><text x="20.7628%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.5128%" y="453" width="0.1603%" height="15" fill="rgb(240,21,27)" fg:x="256" fg:w="2"/><text x="20.7628%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.5929%" y="437" width="0.0801%" height="15" fill="rgb(224,170,31)" fg:x="257" fg:w="1"/><text x="20.8429%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="20.6731%" y="597" width="0.1603%" height="15" fill="rgb(223,145,32)" fg:x="258" fg:w="2"/><text x="20.9231%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="20.6731%" y="581" width="0.1603%" height="15" fill="rgb(243,100,5)" fg:x="258" fg:w="2"/><text x="20.9231%" y="591.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="20.6731%" y="565" width="0.1603%" height="15" fill="rgb(242,131,51)" fg:x="258" fg:w="2"/><text x="20.9231%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.6731%" y="549" width="0.1603%" height="15" fill="rgb(223,156,46)" fg:x="258" fg:w="2"/><text x="20.9231%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.7532%" y="533" width="0.0801%" height="15" fill="rgb(215,10,40)" fg:x="259" fg:w="1"/><text x="21.0032%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="20.8333%" y="581" width="0.0801%" height="15" fill="rgb(233,155,0)" fg:x="260" fg:w="1"/><text x="21.0833%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="20.8333%" y="565" width="0.0801%" height="15" fill="rgb(247,78,6)" fg:x="260" fg:w="1"/><text x="21.0833%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.8333%" y="549" width="0.0801%" height="15" fill="rgb(237,217,21)" fg:x="260" fg:w="1"/><text x="21.0833%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.8333%" y="533" width="0.0801%" height="15" fill="rgb(212,1,21)" fg:x="260" fg:w="1"/><text x="21.0833%" y="543.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="20.6731%" y="613" width="0.3205%" height="15" fill="rgb(213,7,14)" fg:x="258" fg:w="4"/><text x="20.9231%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="20.8333%" y="597" width="0.1603%" height="15" fill="rgb(225,84,14)" fg:x="260" fg:w="2"/><text x="21.0833%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.9135%" y="581" width="0.0801%" height="15" fill="rgb(239,216,39)" fg:x="261" fg:w="1"/><text x="21.1635%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.9135%" y="565" width="0.0801%" height="15" fill="rgb(253,29,23)" fg:x="261" fg:w="1"/><text x="21.1635%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.9936%" y="597" width="0.0801%" height="15" fill="rgb(220,167,50)" fg:x="262" fg:w="1"/><text x="21.2436%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="21.1538%" y="565" width="0.0801%" height="15" fill="rgb(232,141,1)" fg:x="264" fg:w="1"/><text x="21.4038%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="21.1538%" y="549" width="0.0801%" height="15" fill="rgb(222,210,1)" fg:x="264" fg:w="1"/><text x="21.4038%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.1538%" y="533" width="0.0801%" height="15" fill="rgb(219,84,10)" fg:x="264" fg:w="1"/><text x="21.4038%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.1538%" y="517" width="0.0801%" height="15" fill="rgb(245,188,6)" fg:x="264" fg:w="1"/><text x="21.4038%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.1538%" y="501" width="0.0801%" height="15" fill="rgb(252,139,39)" fg:x="264" fg:w="1"/><text x="21.4038%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.1538%" y="485" width="0.0801%" height="15" fill="rgb(218,42,26)" fg:x="264" fg:w="1"/><text x="21.4038%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.1538%" y="469" width="0.0801%" height="15" fill="rgb(237,226,51)" fg:x="264" fg:w="1"/><text x="21.4038%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.1538%" y="453" width="0.0801%" height="15" fill="rgb(246,15,17)" fg:x="264" fg:w="1"/><text x="21.4038%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.1538%" y="437" width="0.0801%" height="15" fill="rgb(228,170,42)" fg:x="264" fg:w="1"/><text x="21.4038%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.1538%" y="421" width="0.0801%" height="15" fill="rgb(248,118,53)" fg:x="264" fg:w="1"/><text x="21.4038%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.1538%" y="405" width="0.0801%" height="15" fill="rgb(207,30,10)" fg:x="264" fg:w="1"/><text x="21.4038%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.1538%" y="389" width="0.0801%" height="15" fill="rgb(217,104,38)" fg:x="264" fg:w="1"/><text x="21.4038%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.1538%" y="373" width="0.0801%" height="15" fill="rgb(211,165,26)" fg:x="264" fg:w="1"/><text x="21.4038%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.1538%" y="357" width="0.0801%" height="15" fill="rgb(247,38,9)" fg:x="264" fg:w="1"/><text x="21.4038%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.1538%" y="341" width="0.0801%" height="15" fill="rgb(218,187,8)" fg:x="264" fg:w="1"/><text x="21.4038%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.1538%" y="325" width="0.0801%" height="15" fill="rgb(247,94,28)" fg:x="264" fg:w="1"/><text x="21.4038%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.1538%" y="309" width="0.0801%" height="15" fill="rgb(218,173,30)" fg:x="264" fg:w="1"/><text x="21.4038%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="21.2340%" y="549" width="0.0801%" height="15" fill="rgb(245,45,36)" fg:x="265" fg:w="1"/><text x="21.4840%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="21.2340%" y="533" width="0.0801%" height="15" fill="rgb(221,172,44)" fg:x="265" fg:w="1"/><text x="21.4840%" y="543.50"></text></g><g><title>plugins_core::build::Build::into_entry (19 samples, 1.52%)</title><rect x="19.9519%" y="645" width="1.5224%" height="15" fill="rgb(222,45,12)" fg:x="249" fg:w="19"/><text x="20.2019%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (19 samples, 1.52%)</title><rect x="19.9519%" y="629" width="1.5224%" height="15" fill="rgb(250,10,22)" fg:x="249" fg:w="19"/><text x="20.2019%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="20.9936%" y="613" width="0.4808%" height="15" fill="rgb(239,27,0)" fg:x="262" fg:w="6"/><text x="21.2436%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="21.0737%" y="597" width="0.4006%" height="15" fill="rgb(223,118,22)" fg:x="263" fg:w="5"/><text x="21.3237%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="21.1538%" y="581" width="0.3205%" height="15" fill="rgb(251,81,25)" fg:x="264" fg:w="4"/><text x="21.4038%" y="591.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="21.2340%" y="565" width="0.2404%" height="15" fill="rgb(237,225,53)" fg:x="265" fg:w="3"/><text x="21.4840%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="21.3141%" y="549" width="0.1603%" height="15" fill="rgb(237,186,51)" fg:x="266" fg:w="2"/><text x="21.5641%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="21.3141%" y="533" width="0.1603%" height="15" fill="rgb(247,209,11)" fg:x="266" fg:w="2"/><text x="21.5641%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="21.3141%" y="517" width="0.1603%" height="15" fill="rgb(223,109,27)" fg:x="266" fg:w="2"/><text x="21.5641%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="21.3141%" y="501" width="0.1603%" height="15" fill="rgb(246,181,13)" fg:x="266" fg:w="2"/><text x="21.5641%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="21.3141%" y="485" width="0.1603%" height="15" fill="rgb(234,57,44)" fg:x="266" fg:w="2"/><text x="21.5641%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="21.3141%" y="469" width="0.1603%" height="15" fill="rgb(211,227,50)" fg:x="266" fg:w="2"/><text x="21.5641%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="21.3141%" y="453" width="0.1603%" height="15" fill="rgb(254,57,34)" fg:x="266" fg:w="2"/><text x="21.5641%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="21.3141%" y="437" width="0.1603%" height="15" fill="rgb(227,212,26)" fg:x="266" fg:w="2"/><text x="21.5641%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="21.3942%" y="421" width="0.0801%" height="15" fill="rgb(244,169,44)" fg:x="267" fg:w="1"/><text x="21.6442%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="21.4744%" y="613" width="0.0801%" height="15" fill="rgb(236,135,50)" fg:x="268" fg:w="1"/><text x="21.7244%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="21.4744%" y="597" width="0.0801%" height="15" fill="rgb(241,89,30)" fg:x="268" fg:w="1"/><text x="21.7244%" y="607.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="21.4744%" y="645" width="0.1603%" height="15" fill="rgb(206,113,34)" fg:x="268" fg:w="2"/><text x="21.7244%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="21.4744%" y="629" width="0.1603%" height="15" fill="rgb(218,104,52)" fg:x="268" fg:w="2"/><text x="21.7244%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="21.5545%" y="613" width="0.0801%" height="15" fill="rgb(223,82,32)" fg:x="269" fg:w="1"/><text x="21.8045%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="21.5545%" y="597" width="0.0801%" height="15" fill="rgb(249,219,30)" fg:x="269" fg:w="1"/><text x="21.8045%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.5545%" y="581" width="0.0801%" height="15" fill="rgb(233,141,21)" fg:x="269" fg:w="1"/><text x="21.8045%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.5545%" y="565" width="0.0801%" height="15" fill="rgb(252,87,44)" fg:x="269" fg:w="1"/><text x="21.8045%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.5545%" y="549" width="0.0801%" height="15" fill="rgb(229,48,33)" fg:x="269" fg:w="1"/><text x="21.8045%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="21.7949%" y="613" width="0.0801%" height="15" fill="rgb(229,23,22)" fg:x="272" fg:w="1"/><text x="22.0449%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="21.7949%" y="597" width="0.0801%" height="15" fill="rgb(244,116,16)" fg:x="272" fg:w="1"/><text x="22.0449%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="21.7949%" y="581" width="0.0801%" height="15" fill="rgb(247,45,10)" fg:x="272" fg:w="1"/><text x="22.0449%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="21.7949%" y="565" width="0.0801%" height="15" fill="rgb(228,60,29)" fg:x="272" fg:w="1"/><text x="22.0449%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="21.7949%" y="549" width="0.0801%" height="15" fill="rgb(205,129,15)" fg:x="272" fg:w="1"/><text x="22.0449%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="21.7949%" y="533" width="0.0801%" height="15" fill="rgb(206,229,4)" fg:x="272" fg:w="1"/><text x="22.0449%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="21.7949%" y="517" width="0.0801%" height="15" fill="rgb(249,191,30)" fg:x="272" fg:w="1"/><text x="22.0449%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="21.7949%" y="501" width="0.0801%" height="15" fill="rgb(250,84,54)" fg:x="272" fg:w="1"/><text x="22.0449%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="21.7949%" y="485" width="0.0801%" height="15" fill="rgb(207,25,53)" fg:x="272" fg:w="1"/><text x="22.0449%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="21.7949%" y="469" width="0.0801%" height="15" fill="rgb(235,40,8)" fg:x="272" fg:w="1"/><text x="22.0449%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="21.7949%" y="453" width="0.0801%" height="15" fill="rgb(226,169,33)" fg:x="272" fg:w="1"/><text x="22.0449%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="21.7949%" y="437" width="0.0801%" height="15" fill="rgb(238,110,8)" fg:x="272" fg:w="1"/><text x="22.0449%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="21.7949%" y="421" width="0.0801%" height="15" fill="rgb(251,206,12)" fg:x="272" fg:w="1"/><text x="22.0449%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="21.7949%" y="405" width="0.0801%" height="15" fill="rgb(248,171,18)" fg:x="272" fg:w="1"/><text x="22.0449%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.7949%" y="389" width="0.0801%" height="15" fill="rgb(213,65,46)" fg:x="272" fg:w="1"/><text x="22.0449%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.7949%" y="373" width="0.0801%" height="15" fill="rgb(211,154,15)" fg:x="272" fg:w="1"/><text x="22.0449%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="21.7949%" y="357" width="0.0801%" height="15" fill="rgb(217,75,43)" fg:x="272" fg:w="1"/><text x="22.0449%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="21.7949%" y="341" width="0.0801%" height="15" fill="rgb(230,32,33)" fg:x="272" fg:w="1"/><text x="22.0449%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="21.7949%" y="325" width="0.0801%" height="15" fill="rgb(221,100,16)" fg:x="272" fg:w="1"/><text x="22.0449%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="21.7949%" y="309" width="0.0801%" height="15" fill="rgb(212,129,47)" fg:x="272" fg:w="1"/><text x="22.0449%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="21.7949%" y="293" width="0.0801%" height="15" fill="rgb(239,217,47)" fg:x="272" fg:w="1"/><text x="22.0449%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="21.7949%" y="277" width="0.0801%" height="15" fill="rgb(230,84,24)" fg:x="272" fg:w="1"/><text x="22.0449%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="21.7949%" y="261" width="0.0801%" height="15" fill="rgb(214,153,51)" fg:x="272" fg:w="1"/><text x="22.0449%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="21.7949%" y="245" width="0.0801%" height="15" fill="rgb(231,6,35)" fg:x="272" fg:w="1"/><text x="22.0449%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="21.7949%" y="229" width="0.0801%" height="15" fill="rgb(229,122,30)" fg:x="272" fg:w="1"/><text x="22.0449%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="21.7949%" y="213" width="0.0801%" height="15" fill="rgb(234,71,10)" fg:x="272" fg:w="1"/><text x="22.0449%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="21.7949%" y="197" width="0.0801%" height="15" fill="rgb(215,173,26)" fg:x="272" fg:w="1"/><text x="22.0449%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.8750%" y="597" width="0.0801%" height="15" fill="rgb(248,118,52)" fg:x="273" fg:w="1"/><text x="22.1250%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.9551%" y="565" width="0.1603%" height="15" fill="rgb(237,55,46)" fg:x="274" fg:w="2"/><text x="22.2051%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.9551%" y="549" width="0.1603%" height="15" fill="rgb(243,214,43)" fg:x="274" fg:w="2"/><text x="22.2051%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.9551%" y="533" width="0.1603%" height="15" fill="rgb(252,123,30)" fg:x="274" fg:w="2"/><text x="22.2051%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.0353%" y="517" width="0.0801%" height="15" fill="rgb(215,73,39)" fg:x="275" fg:w="1"/><text x="22.2853%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.0353%" y="501" width="0.0801%" height="15" fill="rgb(251,194,29)" fg:x="275" fg:w="1"/><text x="22.2853%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.0353%" y="485" width="0.0801%" height="15" fill="rgb(224,58,52)" fg:x="275" fg:w="1"/><text x="22.2853%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.0353%" y="469" width="0.0801%" height="15" fill="rgb(248,106,46)" fg:x="275" fg:w="1"/><text x="22.2853%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.0353%" y="453" width="0.0801%" height="15" fill="rgb(223,80,29)" fg:x="275" fg:w="1"/><text x="22.2853%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.0353%" y="437" width="0.0801%" height="15" fill="rgb(243,137,9)" fg:x="275" fg:w="1"/><text x="22.2853%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="22.0353%" y="421" width="0.0801%" height="15" fill="rgb(235,121,28)" fg:x="275" fg:w="1"/><text x="22.2853%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="22.0353%" y="405" width="0.0801%" height="15" fill="rgb(219,121,41)" fg:x="275" fg:w="1"/><text x="22.2853%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.1154%" y="565" width="0.0801%" height="15" fill="rgb(251,60,6)" fg:x="276" fg:w="1"/><text x="22.3654%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="22.1154%" y="549" width="0.0801%" height="15" fill="rgb(208,12,30)" fg:x="276" fg:w="1"/><text x="22.3654%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.1154%" y="533" width="0.0801%" height="15" fill="rgb(207,176,36)" fg:x="276" fg:w="1"/><text x="22.3654%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.1154%" y="517" width="0.0801%" height="15" fill="rgb(211,188,29)" fg:x="276" fg:w="1"/><text x="22.3654%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.1154%" y="501" width="0.0801%" height="15" fill="rgb(220,184,37)" fg:x="276" fg:w="1"/><text x="22.3654%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="21.8750%" y="613" width="0.4808%" height="15" fill="rgb(239,87,37)" fg:x="273" fg:w="6"/><text x="22.1250%" y="623.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="21.9551%" y="597" width="0.4006%" height="15" fill="rgb(232,113,44)" fg:x="274" fg:w="5"/><text x="22.2051%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="21.9551%" y="581" width="0.4006%" height="15" fill="rgb(246,25,39)" fg:x="274" fg:w="5"/><text x="22.2051%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="22.1955%" y="565" width="0.1603%" height="15" fill="rgb(247,30,13)" fg:x="277" fg:w="2"/><text x="22.4455%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.1955%" y="549" width="0.1603%" height="15" fill="rgb(230,176,35)" fg:x="277" fg:w="2"/><text x="22.4455%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.2756%" y="533" width="0.0801%" height="15" fill="rgb(222,23,18)" fg:x="278" fg:w="1"/><text x="22.5256%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.2756%" y="517" width="0.0801%" height="15" fill="rgb(234,86,8)" fg:x="278" fg:w="1"/><text x="22.5256%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.2756%" y="501" width="0.0801%" height="15" fill="rgb(206,218,47)" fg:x="278" fg:w="1"/><text x="22.5256%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.2756%" y="485" width="0.0801%" height="15" fill="rgb(229,35,31)" fg:x="278" fg:w="1"/><text x="22.5256%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.2756%" y="469" width="0.0801%" height="15" fill="rgb(242,81,7)" fg:x="278" fg:w="1"/><text x="22.5256%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.2756%" y="453" width="0.0801%" height="15" fill="rgb(231,11,35)" fg:x="278" fg:w="1"/><text x="22.5256%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="22.2756%" y="437" width="0.0801%" height="15" fill="rgb(219,218,17)" fg:x="278" fg:w="1"/><text x="22.5256%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="21.7949%" y="629" width="0.6410%" height="15" fill="rgb(221,83,32)" fg:x="272" fg:w="8"/><text x="22.0449%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="22.3558%" y="613" width="0.0801%" height="15" fill="rgb(233,49,54)" fg:x="279" fg:w="1"/><text x="22.6058%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.3558%" y="597" width="0.0801%" height="15" fill="rgb(206,18,51)" fg:x="279" fg:w="1"/><text x="22.6058%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.3558%" y="581" width="0.0801%" height="15" fill="rgb(249,193,15)" fg:x="279" fg:w="1"/><text x="22.6058%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.3558%" y="565" width="0.0801%" height="15" fill="rgb(245,186,19)" fg:x="279" fg:w="1"/><text x="22.6058%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.3558%" y="549" width="0.0801%" height="15" fill="rgb(230,4,24)" fg:x="279" fg:w="1"/><text x="22.6058%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.3558%" y="533" width="0.0801%" height="15" fill="rgb(234,75,27)" fg:x="279" fg:w="1"/><text x="22.6058%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.3558%" y="517" width="0.0801%" height="15" fill="rgb(244,187,35)" fg:x="279" fg:w="1"/><text x="22.6058%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.3558%" y="501" width="0.0801%" height="15" fill="rgb(241,97,43)" fg:x="279" fg:w="1"/><text x="22.6058%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.3558%" y="485" width="0.0801%" height="15" fill="rgb(236,94,2)" fg:x="279" fg:w="1"/><text x="22.6058%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.3558%" y="469" width="0.0801%" height="15" fill="rgb(231,175,7)" fg:x="279" fg:w="1"/><text x="22.6058%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.3558%" y="453" width="0.0801%" height="15" fill="rgb(236,89,47)" fg:x="279" fg:w="1"/><text x="22.6058%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.3558%" y="437" width="0.0801%" height="15" fill="rgb(213,191,37)" fg:x="279" fg:w="1"/><text x="22.6058%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.3558%" y="421" width="0.0801%" height="15" fill="rgb(252,0,34)" fg:x="279" fg:w="1"/><text x="22.6058%" y="431.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.4359%" y="629" width="0.0801%" height="15" fill="rgb(208,145,44)" fg:x="280" fg:w="1"/><text x="22.6859%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.4359%" y="613" width="0.0801%" height="15" fill="rgb(227,95,50)" fg:x="280" fg:w="1"/><text x="22.6859%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.4359%" y="597" width="0.0801%" height="15" fill="rgb(222,136,24)" fg:x="280" fg:w="1"/><text x="22.6859%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.4359%" y="581" width="0.0801%" height="15" fill="rgb(218,105,10)" fg:x="280" fg:w="1"/><text x="22.6859%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.4359%" y="565" width="0.0801%" height="15" fill="rgb(216,65,28)" fg:x="280" fg:w="1"/><text x="22.6859%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.4359%" y="549" width="0.0801%" height="15" fill="rgb(229,6,28)" fg:x="280" fg:w="1"/><text x="22.6859%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.4359%" y="533" width="0.0801%" height="15" fill="rgb(222,160,42)" fg:x="280" fg:w="1"/><text x="22.6859%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.4359%" y="517" width="0.0801%" height="15" fill="rgb(235,83,49)" fg:x="280" fg:w="1"/><text x="22.6859%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.4359%" y="501" width="0.0801%" height="15" fill="rgb(236,86,36)" fg:x="280" fg:w="1"/><text x="22.6859%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.4359%" y="485" width="0.0801%" height="15" fill="rgb(236,19,41)" fg:x="280" fg:w="1"/><text x="22.6859%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.4359%" y="469" width="0.0801%" height="15" fill="rgb(217,71,31)" fg:x="280" fg:w="1"/><text x="22.6859%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.4359%" y="453" width="0.0801%" height="15" fill="rgb(236,209,25)" fg:x="280" fg:w="1"/><text x="22.6859%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.4359%" y="437" width="0.0801%" height="15" fill="rgb(247,104,21)" fg:x="280" fg:w="1"/><text x="22.6859%" y="447.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="22.5160%" y="629" width="0.1603%" height="15" fill="rgb(243,80,38)" fg:x="281" fg:w="2"/><text x="22.7660%" y="639.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="22.5160%" y="613" width="0.1603%" height="15" fill="rgb(232,109,38)" fg:x="281" fg:w="2"/><text x="22.7660%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.5962%" y="597" width="0.0801%" height="15" fill="rgb(212,177,53)" fg:x="282" fg:w="1"/><text x="22.8462%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.5962%" y="581" width="0.0801%" height="15" fill="rgb(227,30,34)" fg:x="282" fg:w="1"/><text x="22.8462%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="22.5962%" y="565" width="0.0801%" height="15" fill="rgb(205,175,25)" fg:x="282" fg:w="1"/><text x="22.8462%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.5962%" y="549" width="0.0801%" height="15" fill="rgb(249,39,54)" fg:x="282" fg:w="1"/><text x="22.8462%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.6763%" y="629" width="0.0801%" height="15" fill="rgb(215,54,37)" fg:x="283" fg:w="1"/><text x="22.9263%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="22.8365%" y="517" width="0.0801%" height="15" fill="rgb(205,60,46)" fg:x="285" fg:w="1"/><text x="23.0865%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.24%)</title><rect x="22.8365%" y="565" width="0.2404%" height="15" fill="rgb(238,89,29)" fg:x="285" fg:w="3"/><text x="23.0865%" y="575.50"></text></g><g><title>serde_json::value::to_value (3 samples, 0.24%)</title><rect x="22.8365%" y="549" width="0.2404%" height="15" fill="rgb(212,48,10)" fg:x="285" fg:w="3"/><text x="23.0865%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="22.8365%" y="533" width="0.2404%" height="15" fill="rgb(237,186,28)" fg:x="285" fg:w="3"/><text x="23.0865%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.9167%" y="517" width="0.1603%" height="15" fill="rgb(237,204,4)" fg:x="286" fg:w="2"/><text x="23.1667%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="22.9167%" y="501" width="0.1603%" height="15" fill="rgb(237,15,47)" fg:x="286" fg:w="2"/><text x="23.1667%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.9167%" y="485" width="0.1603%" height="15" fill="rgb(244,110,25)" fg:x="286" fg:w="2"/><text x="23.1667%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="22.9968%" y="469" width="0.0801%" height="15" fill="rgb(241,12,16)" fg:x="287" fg:w="1"/><text x="23.2468%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (4 samples, 0.32%)</title><rect x="22.8365%" y="581" width="0.3205%" height="15" fill="rgb(235,25,9)" fg:x="285" fg:w="4"/><text x="23.0865%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="23.0769%" y="565" width="0.0801%" height="15" fill="rgb(245,159,19)" fg:x="288" fg:w="1"/><text x="23.3269%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="23.0769%" y="549" width="0.0801%" height="15" fill="rgb(236,63,32)" fg:x="288" fg:w="1"/><text x="23.3269%" y="559.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="23.0769%" y="533" width="0.0801%" height="15" fill="rgb(235,32,52)" fg:x="288" fg:w="1"/><text x="23.3269%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.1571%" y="469" width="0.0801%" height="15" fill="rgb(209,176,21)" fg:x="289" fg:w="1"/><text x="23.4071%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.1571%" y="453" width="0.0801%" height="15" fill="rgb(205,90,42)" fg:x="289" fg:w="1"/><text x="23.4071%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.1571%" y="501" width="0.1603%" height="15" fill="rgb(213,132,16)" fg:x="289" fg:w="2"/><text x="23.4071%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.1571%" y="485" width="0.1603%" height="15" fill="rgb(232,11,22)" fg:x="289" fg:w="2"/><text x="23.4071%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.2372%" y="469" width="0.0801%" height="15" fill="rgb(248,167,41)" fg:x="290" fg:w="1"/><text x="23.4872%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.3173%" y="501" width="0.0801%" height="15" fill="rgb(209,127,6)" fg:x="291" fg:w="1"/><text x="23.5673%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.3173%" y="485" width="0.0801%" height="15" fill="rgb(246,210,34)" fg:x="291" fg:w="1"/><text x="23.5673%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.3173%" y="469" width="0.0801%" height="15" fill="rgb(238,165,13)" fg:x="291" fg:w="1"/><text x="23.5673%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.3173%" y="453" width="0.0801%" height="15" fill="rgb(233,98,15)" fg:x="291" fg:w="1"/><text x="23.5673%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.3173%" y="437" width="0.0801%" height="15" fill="rgb(215,215,51)" fg:x="291" fg:w="1"/><text x="23.5673%" y="447.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.32%)</title><rect x="23.1571%" y="581" width="0.3205%" height="15" fill="rgb(217,161,25)" fg:x="289" fg:w="4"/><text x="23.4071%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="23.1571%" y="565" width="0.3205%" height="15" fill="rgb(217,167,48)" fg:x="289" fg:w="4"/><text x="23.4071%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="23.1571%" y="549" width="0.3205%" height="15" fill="rgb(205,163,34)" fg:x="289" fg:w="4"/><text x="23.4071%" y="559.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="23.1571%" y="533" width="0.3205%" height="15" fill="rgb(241,197,31)" fg:x="289" fg:w="4"/><text x="23.4071%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="23.1571%" y="517" width="0.3205%" height="15" fill="rgb(225,123,11)" fg:x="289" fg:w="4"/><text x="23.4071%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.3974%" y="501" width="0.0801%" height="15" fill="rgb(217,4,20)" fg:x="292" fg:w="1"/><text x="23.6474%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.3974%" y="485" width="0.0801%" height="15" fill="rgb(215,55,9)" fg:x="292" fg:w="1"/><text x="23.6474%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.3974%" y="469" width="0.0801%" height="15" fill="rgb(218,165,5)" fg:x="292" fg:w="1"/><text x="23.6474%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.3974%" y="453" width="0.0801%" height="15" fill="rgb(222,175,15)" fg:x="292" fg:w="1"/><text x="23.6474%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="23.4776%" y="549" width="0.0801%" height="15" fill="rgb(223,85,34)" fg:x="293" fg:w="1"/><text x="23.7276%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="23.4776%" y="533" width="0.0801%" height="15" fill="rgb(234,228,29)" fg:x="293" fg:w="1"/><text x="23.7276%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="23.4776%" y="517" width="0.0801%" height="15" fill="rgb(239,7,28)" fg:x="293" fg:w="1"/><text x="23.7276%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="23.4776%" y="501" width="0.0801%" height="15" fill="rgb(252,222,53)" fg:x="293" fg:w="1"/><text x="23.7276%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.4776%" y="485" width="0.0801%" height="15" fill="rgb(232,146,44)" fg:x="293" fg:w="1"/><text x="23.7276%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.4776%" y="469" width="0.0801%" height="15" fill="rgb(243,223,53)" fg:x="293" fg:w="1"/><text x="23.7276%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="23.4776%" y="453" width="0.0801%" height="15" fill="rgb(219,128,25)" fg:x="293" fg:w="1"/><text x="23.7276%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="23.4776%" y="437" width="0.0801%" height="15" fill="rgb(223,56,32)" fg:x="293" fg:w="1"/><text x="23.7276%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.4776%" y="421" width="0.0801%" height="15" fill="rgb(237,41,3)" fg:x="293" fg:w="1"/><text x="23.7276%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.4776%" y="405" width="0.0801%" height="15" fill="rgb(235,138,9)" fg:x="293" fg:w="1"/><text x="23.7276%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="23.4776%" y="389" width="0.0801%" height="15" fill="rgb(214,131,10)" fg:x="293" fg:w="1"/><text x="23.7276%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="23.4776%" y="373" width="0.0801%" height="15" fill="rgb(229,89,7)" fg:x="293" fg:w="1"/><text x="23.7276%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.4776%" y="357" width="0.0801%" height="15" fill="rgb(240,24,42)" fg:x="293" fg:w="1"/><text x="23.7276%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.4776%" y="341" width="0.0801%" height="15" fill="rgb(243,188,54)" fg:x="293" fg:w="1"/><text x="23.7276%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="23.4776%" y="325" width="0.0801%" height="15" fill="rgb(246,92,22)" fg:x="293" fg:w="1"/><text x="23.7276%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="23.4776%" y="309" width="0.0801%" height="15" fill="rgb(211,176,51)" fg:x="293" fg:w="1"/><text x="23.7276%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.4776%" y="293" width="0.0801%" height="15" fill="rgb(246,207,34)" fg:x="293" fg:w="1"/><text x="23.7276%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.4776%" y="277" width="0.0801%" height="15" fill="rgb(239,95,2)" fg:x="293" fg:w="1"/><text x="23.7276%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.4776%" y="261" width="0.0801%" height="15" fill="rgb(211,124,25)" fg:x="293" fg:w="1"/><text x="23.7276%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.4776%" y="245" width="0.0801%" height="15" fill="rgb(231,221,19)" fg:x="293" fg:w="1"/><text x="23.7276%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="23.4776%" y="229" width="0.0801%" height="15" fill="rgb(239,183,19)" fg:x="293" fg:w="1"/><text x="23.7276%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="23.4776%" y="213" width="0.0801%" height="15" fill="rgb(221,130,29)" fg:x="293" fg:w="1"/><text x="23.7276%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="23.4776%" y="197" width="0.0801%" height="15" fill="rgb(206,130,36)" fg:x="293" fg:w="1"/><text x="23.7276%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="23.4776%" y="181" width="0.0801%" height="15" fill="rgb(215,70,19)" fg:x="293" fg:w="1"/><text x="23.7276%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="23.4776%" y="165" width="0.0801%" height="15" fill="rgb(244,16,43)" fg:x="293" fg:w="1"/><text x="23.7276%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="23.4776%" y="149" width="0.0801%" height="15" fill="rgb(222,115,32)" fg:x="293" fg:w="1"/><text x="23.7276%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="23.4776%" y="133" width="0.0801%" height="15" fill="rgb(247,48,25)" fg:x="293" fg:w="1"/><text x="23.7276%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="23.4776%" y="117" width="0.0801%" height="15" fill="rgb(226,180,51)" fg:x="293" fg:w="1"/><text x="23.7276%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="23.4776%" y="101" width="0.0801%" height="15" fill="rgb(217,142,42)" fg:x="293" fg:w="1"/><text x="23.7276%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="23.4776%" y="85" width="0.0801%" height="15" fill="rgb(220,178,3)" fg:x="293" fg:w="1"/><text x="23.7276%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="23.4776%" y="69" width="0.0801%" height="15" fill="rgb(217,221,4)" fg:x="293" fg:w="1"/><text x="23.7276%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="23.4776%" y="53" width="0.0801%" height="15" fill="rgb(237,63,43)" fg:x="293" fg:w="1"/><text x="23.7276%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="23.4776%" y="37" width="0.0801%" height="15" fill="rgb(220,57,8)" fg:x="293" fg:w="1"/><text x="23.7276%" y="47.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="23.5577%" y="549" width="0.1603%" height="15" fill="rgb(254,186,27)" fg:x="294" fg:w="2"/><text x="23.8077%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="23.5577%" y="533" width="0.1603%" height="15" fill="rgb(251,57,28)" fg:x="294" fg:w="2"/><text x="23.8077%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="23.5577%" y="517" width="0.1603%" height="15" fill="rgb(215,228,0)" fg:x="294" fg:w="2"/><text x="23.8077%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6378%" y="501" width="0.0801%" height="15" fill="rgb(237,218,39)" fg:x="295" fg:w="1"/><text x="23.8878%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6378%" y="485" width="0.0801%" height="15" fill="rgb(207,2,54)" fg:x="295" fg:w="1"/><text x="23.8878%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6378%" y="469" width="0.0801%" height="15" fill="rgb(232,76,50)" fg:x="295" fg:w="1"/><text x="23.8878%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.6378%" y="453" width="0.0801%" height="15" fill="rgb(211,85,31)" fg:x="295" fg:w="1"/><text x="23.8878%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="23.7179%" y="533" width="0.0801%" height="15" fill="rgb(223,210,27)" fg:x="296" fg:w="1"/><text x="23.9679%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::OpenedScopeMut&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="23.7179%" y="517" width="0.0801%" height="15" fill="rgb(254,36,8)" fg:x="296" fg:w="1"/><text x="23.9679%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="23.7981%" y="533" width="0.0801%" height="15" fill="rgb(213,4,25)" fg:x="297" fg:w="1"/><text x="24.0481%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.7981%" y="517" width="0.0801%" height="15" fill="rgb(224,2,39)" fg:x="297" fg:w="1"/><text x="24.0481%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.7981%" y="501" width="0.0801%" height="15" fill="rgb(208,8,39)" fg:x="297" fg:w="1"/><text x="24.0481%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.7981%" y="485" width="0.0801%" height="15" fill="rgb(216,226,3)" fg:x="297" fg:w="1"/><text x="24.0481%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.7981%" y="469" width="0.0801%" height="15" fill="rgb(249,139,31)" fg:x="297" fg:w="1"/><text x="24.0481%" y="479.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="23.7179%" y="549" width="0.2404%" height="15" fill="rgb(242,170,35)" fg:x="296" fg:w="3"/><text x="23.9679%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="23.8782%" y="533" width="0.0801%" height="15" fill="rgb(238,14,9)" fg:x="298" fg:w="1"/><text x="24.1282%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="23.8782%" y="517" width="0.0801%" height="15" fill="rgb(251,81,46)" fg:x="298" fg:w="1"/><text x="24.1282%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.8782%" y="501" width="0.0801%" height="15" fill="rgb(230,23,4)" fg:x="298" fg:w="1"/><text x="24.1282%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.8782%" y="485" width="0.0801%" height="15" fill="rgb(211,85,25)" fg:x="298" fg:w="1"/><text x="24.1282%" y="495.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="23.9583%" y="501" width="0.0801%" height="15" fill="rgb(252,23,31)" fg:x="299" fg:w="1"/><text x="24.2083%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.9583%" y="485" width="0.0801%" height="15" fill="rgb(234,163,38)" fg:x="299" fg:w="1"/><text x="24.2083%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.9583%" y="469" width="0.0801%" height="15" fill="rgb(210,190,50)" fg:x="299" fg:w="1"/><text x="24.2083%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.9583%" y="453" width="0.0801%" height="15" fill="rgb(228,158,3)" fg:x="299" fg:w="1"/><text x="24.2083%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.9583%" y="437" width="0.0801%" height="15" fill="rgb(216,130,0)" fg:x="299" fg:w="1"/><text x="24.2083%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.9583%" y="421" width="0.0801%" height="15" fill="rgb(224,184,10)" fg:x="299" fg:w="1"/><text x="24.2083%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.1987%" y="405" width="0.0801%" height="15" fill="rgb(214,202,18)" fg:x="302" fg:w="1"/><text x="24.4487%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.1987%" y="389" width="0.0801%" height="15" fill="rgb(213,229,54)" fg:x="302" fg:w="1"/><text x="24.4487%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.1987%" y="469" width="0.1603%" height="15" fill="rgb(246,120,0)" fg:x="302" fg:w="2"/><text x="24.4487%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.1987%" y="453" width="0.1603%" height="15" fill="rgb(237,6,15)" fg:x="302" fg:w="2"/><text x="24.4487%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.1987%" y="437" width="0.1603%" height="15" fill="rgb(252,156,15)" fg:x="302" fg:w="2"/><text x="24.4487%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.1987%" y="421" width="0.1603%" height="15" fill="rgb(249,78,18)" fg:x="302" fg:w="2"/><text x="24.4487%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.2788%" y="405" width="0.0801%" height="15" fill="rgb(230,223,44)" fg:x="303" fg:w="1"/><text x="24.5288%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.2788%" y="389" width="0.0801%" height="15" fill="rgb(230,222,32)" fg:x="303" fg:w="1"/><text x="24.5288%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.2788%" y="373" width="0.0801%" height="15" fill="rgb(247,54,6)" fg:x="303" fg:w="1"/><text x="24.5288%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.2788%" y="357" width="0.0801%" height="15" fill="rgb(247,115,45)" fg:x="303" fg:w="1"/><text x="24.5288%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.2788%" y="341" width="0.0801%" height="15" fill="rgb(213,203,37)" fg:x="303" fg:w="1"/><text x="24.5288%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.2788%" y="325" width="0.0801%" height="15" fill="rgb(248,188,18)" fg:x="303" fg:w="1"/><text x="24.5288%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.2788%" y="309" width="0.0801%" height="15" fill="rgb(206,80,8)" fg:x="303" fg:w="1"/><text x="24.5288%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.2788%" y="293" width="0.0801%" height="15" fill="rgb(245,217,31)" fg:x="303" fg:w="1"/><text x="24.5288%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.2788%" y="277" width="0.0801%" height="15" fill="rgb(220,193,15)" fg:x="303" fg:w="1"/><text x="24.5288%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.2788%" y="261" width="0.0801%" height="15" fill="rgb(226,7,19)" fg:x="303" fg:w="1"/><text x="24.5288%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.2788%" y="245" width="0.0801%" height="15" fill="rgb(222,145,31)" fg:x="303" fg:w="1"/><text x="24.5288%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.04%)</title><rect x="23.4776%" y="565" width="1.0417%" height="15" fill="rgb(241,193,36)" fg:x="293" fg:w="13"/><text x="23.7276%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="23.9583%" y="549" width="0.5609%" height="15" fill="rgb(225,123,33)" fg:x="299" fg:w="7"/><text x="24.2083%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (7 samples, 0.56%)</title><rect x="23.9583%" y="533" width="0.5609%" height="15" fill="rgb(246,136,38)" fg:x="299" fg:w="7"/><text x="24.2083%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (7 samples, 0.56%)</title><rect x="23.9583%" y="517" width="0.5609%" height="15" fill="rgb(243,56,24)" fg:x="299" fg:w="7"/><text x="24.2083%" y="527.50"></text></g><g><title>kernel::model::props::save_props (6 samples, 0.48%)</title><rect x="24.0385%" y="501" width="0.4808%" height="15" fill="rgb(215,147,2)" fg:x="300" fg:w="6"/><text x="24.2885%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="24.1186%" y="485" width="0.4006%" height="15" fill="rgb(209,155,27)" fg:x="301" fg:w="5"/><text x="24.3686%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="24.3590%" y="469" width="0.1603%" height="15" fill="rgb(222,177,11)" fg:x="304" fg:w="2"/><text x="24.6090%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="24.3590%" y="453" width="0.1603%" height="15" fill="rgb(212,227,15)" fg:x="304" fg:w="2"/><text x="24.6090%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="24.3590%" y="437" width="0.1603%" height="15" fill="rgb(214,138,20)" fg:x="304" fg:w="2"/><text x="24.6090%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="24.3590%" y="421" width="0.1603%" height="15" fill="rgb(221,170,31)" fg:x="304" fg:w="2"/><text x="24.6090%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="24.4391%" y="405" width="0.0801%" height="15" fill="rgb(253,207,5)" fg:x="305" fg:w="1"/><text x="24.6891%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.5192%" y="565" width="0.0801%" height="15" fill="rgb(212,64,37)" fg:x="306" fg:w="1"/><text x="24.7692%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="24.5994%" y="565" width="0.0801%" height="15" fill="rgb(208,113,51)" fg:x="307" fg:w="1"/><text x="24.8494%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.5994%" y="549" width="0.0801%" height="15" fill="rgb(237,15,5)" fg:x="307" fg:w="1"/><text x="24.8494%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Exit&gt;&gt; (1 samples, 0.08%)</title><rect x="24.6795%" y="549" width="0.0801%" height="15" fill="rgb(238,33,18)" fg:x="308" fg:w="1"/><text x="24.9295%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="24.6795%" y="533" width="0.0801%" height="15" fill="rgb(253,206,50)" fg:x="308" fg:w="1"/><text x="24.9295%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.6795%" y="517" width="0.0801%" height="15" fill="rgb(242,158,43)" fg:x="308" fg:w="1"/><text x="24.9295%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.7596%" y="517" width="0.0801%" height="15" fill="rgb(213,125,27)" fg:x="309" fg:w="1"/><text x="25.0096%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.7596%" y="501" width="0.0801%" height="15" fill="rgb(233,161,31)" fg:x="309" fg:w="1"/><text x="25.0096%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.7596%" y="485" width="0.0801%" height="15" fill="rgb(218,135,6)" fg:x="309" fg:w="1"/><text x="25.0096%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.7596%" y="469" width="0.0801%" height="15" fill="rgb(222,73,53)" fg:x="309" fg:w="1"/><text x="25.0096%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.7596%" y="453" width="0.0801%" height="15" fill="rgb(229,66,53)" fg:x="309" fg:w="1"/><text x="25.0096%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.7596%" y="437" width="0.0801%" height="15" fill="rgb(208,128,19)" fg:x="309" fg:w="1"/><text x="25.0096%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.7596%" y="421" width="0.0801%" height="15" fill="rgb(235,70,27)" fg:x="309" fg:w="1"/><text x="25.0096%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.7596%" y="405" width="0.0801%" height="15" fill="rgb(241,130,30)" fg:x="309" fg:w="1"/><text x="25.0096%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.7596%" y="389" width="0.0801%" height="15" fill="rgb(222,57,48)" fg:x="309" fg:w="1"/><text x="25.0096%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.7596%" y="373" width="0.0801%" height="15" fill="rgb(225,204,29)" fg:x="309" fg:w="1"/><text x="25.0096%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.7596%" y="357" width="0.0801%" height="15" fill="rgb(240,196,35)" fg:x="309" fg:w="1"/><text x="25.0096%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.7596%" y="341" width="0.0801%" height="15" fill="rgb(215,150,16)" fg:x="309" fg:w="1"/><text x="25.0096%" y="351.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="24.8397%" y="501" width="0.0801%" height="15" fill="rgb(209,170,13)" fg:x="310" fg:w="1"/><text x="25.0897%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="24.8397%" y="485" width="0.0801%" height="15" fill="rgb(235,75,31)" fg:x="310" fg:w="1"/><text x="25.0897%" y="495.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="25.0801%" y="373" width="0.0801%" height="15" fill="rgb(252,1,47)" fg:x="313" fg:w="1"/><text x="25.3301%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="24.8397%" y="517" width="0.4006%" height="15" fill="rgb(241,2,36)" fg:x="310" fg:w="5"/><text x="25.0897%" y="527.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="24.9199%" y="501" width="0.3205%" height="15" fill="rgb(236,191,4)" fg:x="311" fg:w="4"/><text x="25.1699%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="24.9199%" y="485" width="0.3205%" height="15" fill="rgb(212,65,35)" fg:x="311" fg:w="4"/><text x="25.1699%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="25.0000%" y="469" width="0.2404%" height="15" fill="rgb(209,49,33)" fg:x="312" fg:w="3"/><text x="25.2500%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="25.0000%" y="453" width="0.2404%" height="15" fill="rgb(208,36,46)" fg:x="312" fg:w="3"/><text x="25.2500%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="25.0801%" y="437" width="0.1603%" height="15" fill="rgb(210,125,2)" fg:x="313" fg:w="2"/><text x="25.3301%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.0801%" y="421" width="0.1603%" height="15" fill="rgb(225,62,6)" fg:x="313" fg:w="2"/><text x="25.3301%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="25.0801%" y="405" width="0.1603%" height="15" fill="rgb(210,54,27)" fg:x="313" fg:w="2"/><text x="25.3301%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.0801%" y="389" width="0.1603%" height="15" fill="rgb(249,189,52)" fg:x="313" fg:w="2"/><text x="25.3301%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.1603%" y="373" width="0.0801%" height="15" fill="rgb(225,134,40)" fg:x="314" fg:w="1"/><text x="25.4103%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.1603%" y="357" width="0.0801%" height="15" fill="rgb(206,13,37)" fg:x="314" fg:w="1"/><text x="25.4103%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.1603%" y="341" width="0.0801%" height="15" fill="rgb(232,114,28)" fg:x="314" fg:w="1"/><text x="25.4103%" y="351.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="25.2404%" y="501" width="0.1603%" height="15" fill="rgb(253,215,8)" fg:x="315" fg:w="2"/><text x="25.4904%" y="511.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="25.4006%" y="501" width="0.0801%" height="15" fill="rgb(254,64,19)" fg:x="317" fg:w="1"/><text x="25.6506%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="25.4006%" y="485" width="0.0801%" height="15" fill="rgb(242,18,46)" fg:x="317" fg:w="1"/><text x="25.6506%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.5609%" y="469" width="0.0801%" height="15" fill="rgb(239,192,30)" fg:x="319" fg:w="1"/><text x="25.8109%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.5609%" y="453" width="0.0801%" height="15" fill="rgb(232,73,14)" fg:x="319" fg:w="1"/><text x="25.8109%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.5609%" y="437" width="0.0801%" height="15" fill="rgb(225,51,9)" fg:x="319" fg:w="1"/><text x="25.8109%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.5609%" y="421" width="0.0801%" height="15" fill="rgb(242,217,54)" fg:x="319" fg:w="1"/><text x="25.8109%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.5609%" y="405" width="0.0801%" height="15" fill="rgb(216,93,3)" fg:x="319" fg:w="1"/><text x="25.8109%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.5609%" y="389" width="0.0801%" height="15" fill="rgb(230,119,33)" fg:x="319" fg:w="1"/><text x="25.8109%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.5609%" y="373" width="0.0801%" height="15" fill="rgb(238,170,27)" fg:x="319" fg:w="1"/><text x="25.8109%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.5609%" y="357" width="0.0801%" height="15" fill="rgb(229,8,2)" fg:x="319" fg:w="1"/><text x="25.8109%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.5609%" y="341" width="0.0801%" height="15" fill="rgb(205,214,42)" fg:x="319" fg:w="1"/><text x="25.8109%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.5609%" y="325" width="0.0801%" height="15" fill="rgb(245,113,1)" fg:x="319" fg:w="1"/><text x="25.8109%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.5609%" y="309" width="0.0801%" height="15" fill="rgb(252,50,2)" fg:x="319" fg:w="1"/><text x="25.8109%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="25.5609%" y="293" width="0.0801%" height="15" fill="rgb(225,122,24)" fg:x="319" fg:w="1"/><text x="25.8109%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="25.5609%" y="277" width="0.0801%" height="15" fill="rgb(234,129,31)" fg:x="319" fg:w="1"/><text x="25.8109%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="25.5609%" y="261" width="0.0801%" height="15" fill="rgb(219,177,4)" fg:x="319" fg:w="1"/><text x="25.8109%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="25.5609%" y="245" width="0.0801%" height="15" fill="rgb(225,142,27)" fg:x="319" fg:w="1"/><text x="25.8109%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.5609%" y="229" width="0.0801%" height="15" fill="rgb(205,107,51)" fg:x="319" fg:w="1"/><text x="25.8109%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.7212%" y="341" width="0.0801%" height="15" fill="rgb(236,223,15)" fg:x="321" fg:w="1"/><text x="25.9712%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.7212%" y="325" width="0.0801%" height="15" fill="rgb(235,133,11)" fg:x="321" fg:w="1"/><text x="25.9712%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.7212%" y="309" width="0.0801%" height="15" fill="rgb(247,172,13)" fg:x="321" fg:w="1"/><text x="25.9712%" y="319.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (14 samples, 1.12%)</title><rect x="24.7596%" y="549" width="1.1218%" height="15" fill="rgb(233,191,41)" fg:x="309" fg:w="14"/><text x="25.0096%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (14 samples, 1.12%)</title><rect x="24.7596%" y="533" width="1.1218%" height="15" fill="rgb(250,65,16)" fg:x="309" fg:w="14"/><text x="25.0096%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (8 samples, 0.64%)</title><rect x="25.2404%" y="517" width="0.6410%" height="15" fill="rgb(206,10,27)" fg:x="315" fg:w="8"/><text x="25.4904%" y="527.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="25.4808%" y="501" width="0.4006%" height="15" fill="rgb(212,96,22)" fg:x="318" fg:w="5"/><text x="25.7308%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="25.4808%" y="485" width="0.4006%" height="15" fill="rgb(206,50,0)" fg:x="318" fg:w="5"/><text x="25.7308%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="25.6410%" y="469" width="0.2404%" height="15" fill="rgb(249,105,52)" fg:x="320" fg:w="3"/><text x="25.8910%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="25.6410%" y="453" width="0.2404%" height="15" fill="rgb(216,93,51)" fg:x="320" fg:w="3"/><text x="25.8910%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="25.6410%" y="437" width="0.2404%" height="15" fill="rgb(217,172,13)" fg:x="320" fg:w="3"/><text x="25.8910%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="25.6410%" y="421" width="0.2404%" height="15" fill="rgb(235,199,38)" fg:x="320" fg:w="3"/><text x="25.8910%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="25.7212%" y="405" width="0.1603%" height="15" fill="rgb(221,97,33)" fg:x="321" fg:w="2"/><text x="25.9712%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.7212%" y="389" width="0.1603%" height="15" fill="rgb(205,156,50)" fg:x="321" fg:w="2"/><text x="25.9712%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="25.7212%" y="373" width="0.1603%" height="15" fill="rgb(215,142,19)" fg:x="321" fg:w="2"/><text x="25.9712%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.7212%" y="357" width="0.1603%" height="15" fill="rgb(232,170,7)" fg:x="321" fg:w="2"/><text x="25.9712%" y="367.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="25.8013%" y="341" width="0.0801%" height="15" fill="rgb(223,50,17)" fg:x="322" fg:w="1"/><text x="26.0513%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="25.8814%" y="549" width="0.1603%" height="15" fill="rgb(230,103,46)" fg:x="323" fg:w="2"/><text x="26.1314%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.9615%" y="533" width="0.0801%" height="15" fill="rgb(254,30,34)" fg:x="324" fg:w="1"/><text x="26.2115%" y="543.50"></text></g><g><title>plugins_core::build::Build::leads_to (33 samples, 2.64%)</title><rect x="23.4776%" y="581" width="2.6442%" height="15" fill="rgb(235,198,1)" fg:x="293" fg:w="33"/><text x="23.7276%" y="591.50">pl..</text></g><g><title>plugins_core::tools::leads_to (18 samples, 1.44%)</title><rect x="24.6795%" y="565" width="1.4423%" height="15" fill="rgb(217,105,47)" fg:x="308" fg:w="18"/><text x="24.9295%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="26.0417%" y="549" width="0.0801%" height="15" fill="rgb(231,18,12)" fg:x="325" fg:w="1"/><text x="26.2917%" y="559.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="26.0417%" y="533" width="0.0801%" height="15" fill="rgb(218,196,1)" fg:x="325" fg:w="1"/><text x="26.2917%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.0417%" y="517" width="0.0801%" height="15" fill="rgb(210,32,3)" fg:x="325" fg:w="1"/><text x="26.2917%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="26.0417%" y="501" width="0.0801%" height="15" fill="rgb(227,178,30)" fg:x="325" fg:w="1"/><text x="26.2917%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.0417%" y="485" width="0.0801%" height="15" fill="rgb(231,140,27)" fg:x="325" fg:w="1"/><text x="26.2917%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.0417%" y="469" width="0.0801%" height="15" fill="rgb(206,66,35)" fg:x="325" fg:w="1"/><text x="26.2917%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.0417%" y="453" width="0.0801%" height="15" fill="rgb(212,34,2)" fg:x="325" fg:w="1"/><text x="26.2917%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="26.0417%" y="437" width="0.0801%" height="15" fill="rgb(207,201,33)" fg:x="325" fg:w="1"/><text x="26.2917%" y="447.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="26.1218%" y="549" width="0.1603%" height="15" fill="rgb(221,135,32)" fg:x="326" fg:w="2"/><text x="26.3718%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="26.1218%" y="533" width="0.1603%" height="15" fill="rgb(206,77,31)" fg:x="326" fg:w="2"/><text x="26.3718%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="26.1218%" y="517" width="0.1603%" height="15" fill="rgb(252,198,50)" fg:x="326" fg:w="2"/><text x="26.3718%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="26.1218%" y="501" width="0.1603%" height="15" fill="rgb(206,79,27)" fg:x="326" fg:w="2"/><text x="26.3718%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.2019%" y="485" width="0.0801%" height="15" fill="rgb(228,108,9)" fg:x="327" fg:w="1"/><text x="26.4519%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.2019%" y="469" width="0.0801%" height="15" fill="rgb(213,9,39)" fg:x="327" fg:w="1"/><text x="26.4519%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="26.2019%" y="453" width="0.0801%" height="15" fill="rgb(252,51,13)" fg:x="327" fg:w="1"/><text x="26.4519%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.2019%" y="437" width="0.0801%" height="15" fill="rgb(218,202,39)" fg:x="327" fg:w="1"/><text x="26.4519%" y="447.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="26.1218%" y="581" width="0.2404%" height="15" fill="rgb(214,122,21)" fg:x="326" fg:w="3"/><text x="26.3718%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="26.1218%" y="565" width="0.2404%" height="15" fill="rgb(217,205,48)" fg:x="326" fg:w="3"/><text x="26.3718%" y="575.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="26.2821%" y="549" width="0.0801%" height="15" fill="rgb(230,216,13)" fg:x="328" fg:w="1"/><text x="26.5321%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="26.2821%" y="533" width="0.0801%" height="15" fill="rgb(249,118,4)" fg:x="328" fg:w="1"/><text x="26.5321%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (46 samples, 3.69%)</title><rect x="22.7564%" y="629" width="3.6859%" height="15" fill="rgb(212,207,40)" fg:x="284" fg:w="46"/><text x="23.0064%" y="639.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (46 samples, 3.69%)</title><rect x="22.7564%" y="613" width="3.6859%" height="15" fill="rgb(217,156,26)" fg:x="284" fg:w="46"/><text x="23.0064%" y="623.50">&lt;all..</text></g><g><title>plugins_core::build::QuickThing::make (46 samples, 3.69%)</title><rect x="22.7564%" y="597" width="3.6859%" height="15" fill="rgb(226,86,34)" fg:x="284" fg:w="46"/><text x="23.0064%" y="607.50">plug..</text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="26.3622%" y="581" width="0.0801%" height="15" fill="rgb(217,111,30)" fg:x="329" fg:w="1"/><text x="26.6122%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.3622%" y="565" width="0.0801%" height="15" fill="rgb(228,64,18)" fg:x="329" fg:w="1"/><text x="26.6122%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.3622%" y="549" width="0.0801%" height="15" fill="rgb(254,217,48)" fg:x="329" fg:w="1"/><text x="26.6122%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.3622%" y="533" width="0.0801%" height="15" fill="rgb(226,156,48)" fg:x="329" fg:w="1"/><text x="26.6122%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.3622%" y="517" width="0.0801%" height="15" fill="rgb(236,168,20)" fg:x="329" fg:w="1"/><text x="26.6122%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.3622%" y="501" width="0.0801%" height="15" fill="rgb(239,210,33)" fg:x="329" fg:w="1"/><text x="26.6122%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.3622%" y="485" width="0.0801%" height="15" fill="rgb(242,85,17)" fg:x="329" fg:w="1"/><text x="26.6122%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="26.3622%" y="469" width="0.0801%" height="15" fill="rgb(221,196,15)" fg:x="329" fg:w="1"/><text x="26.6122%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="26.3622%" y="453" width="0.0801%" height="15" fill="rgb(249,76,21)" fg:x="329" fg:w="1"/><text x="26.6122%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.5224%" y="597" width="0.0801%" height="15" fill="rgb(243,67,29)" fg:x="331" fg:w="1"/><text x="26.7724%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.6026%" y="597" width="0.0801%" height="15" fill="rgb(240,159,2)" fg:x="332" fg:w="1"/><text x="26.8526%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.6026%" y="581" width="0.0801%" height="15" fill="rgb(244,64,3)" fg:x="332" fg:w="1"/><text x="26.8526%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="26.6026%" y="565" width="0.0801%" height="15" fill="rgb(220,86,40)" fg:x="332" fg:w="1"/><text x="26.8526%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.32%)</title><rect x="26.4423%" y="613" width="0.3205%" height="15" fill="rgb(222,194,51)" fg:x="330" fg:w="4"/><text x="26.6923%" y="623.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="26.6827%" y="597" width="0.0801%" height="15" fill="rgb(207,154,19)" fg:x="333" fg:w="1"/><text x="26.9327%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.6827%" y="581" width="0.0801%" height="15" fill="rgb(206,178,36)" fg:x="333" fg:w="1"/><text x="26.9327%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="26.8429%" y="565" width="0.0801%" height="15" fill="rgb(218,8,24)" fg:x="335" fg:w="1"/><text x="27.0929%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.8429%" y="549" width="0.0801%" height="15" fill="rgb(226,83,41)" fg:x="335" fg:w="1"/><text x="27.0929%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.8429%" y="533" width="0.0801%" height="15" fill="rgb(224,23,22)" fg:x="335" fg:w="1"/><text x="27.0929%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="26.8429%" y="517" width="0.0801%" height="15" fill="rgb(218,198,45)" fg:x="335" fg:w="1"/><text x="27.0929%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="26.9231%" y="533" width="0.1603%" height="15" fill="rgb(249,147,41)" fg:x="336" fg:w="2"/><text x="27.1731%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.0032%" y="517" width="0.0801%" height="15" fill="rgb(244,224,13)" fg:x="337" fg:w="1"/><text x="27.2532%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.0032%" y="501" width="0.0801%" height="15" fill="rgb(225,97,27)" fg:x="337" fg:w="1"/><text x="27.2532%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.0032%" y="485" width="0.0801%" height="15" fill="rgb(254,64,0)" fg:x="337" fg:w="1"/><text x="27.2532%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.0032%" y="469" width="0.0801%" height="15" fill="rgb(208,130,43)" fg:x="337" fg:w="1"/><text x="27.2532%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.0032%" y="453" width="0.0801%" height="15" fill="rgb(247,91,25)" fg:x="337" fg:w="1"/><text x="27.2532%" y="463.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="26.9231%" y="565" width="0.2404%" height="15" fill="rgb(215,218,42)" fg:x="336" fg:w="3"/><text x="27.1731%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="26.9231%" y="549" width="0.2404%" height="15" fill="rgb(233,9,24)" fg:x="336" fg:w="3"/><text x="27.1731%" y="559.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="27.0833%" y="533" width="0.0801%" height="15" fill="rgb(252,105,38)" fg:x="338" fg:w="1"/><text x="27.3333%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.2436%" y="453" width="0.0801%" height="15" fill="rgb(225,40,49)" fg:x="340" fg:w="1"/><text x="27.4936%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.2436%" y="437" width="0.0801%" height="15" fill="rgb(232,196,19)" fg:x="340" fg:w="1"/><text x="27.4936%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.2436%" y="421" width="0.0801%" height="15" fill="rgb(207,35,15)" fg:x="340" fg:w="1"/><text x="27.4936%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="27.2436%" y="405" width="0.0801%" height="15" fill="rgb(238,68,36)" fg:x="340" fg:w="1"/><text x="27.4936%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="27.2436%" y="389" width="0.0801%" height="15" fill="rgb(205,158,20)" fg:x="340" fg:w="1"/><text x="27.4936%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="27.2436%" y="533" width="0.1603%" height="15" fill="rgb(232,32,22)" fg:x="340" fg:w="2"/><text x="27.4936%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="27.2436%" y="517" width="0.1603%" height="15" fill="rgb(210,169,6)" fg:x="340" fg:w="2"/><text x="27.4936%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="27.2436%" y="501" width="0.1603%" height="15" fill="rgb(229,28,12)" fg:x="340" fg:w="2"/><text x="27.4936%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="27.2436%" y="485" width="0.1603%" height="15" fill="rgb(229,78,10)" fg:x="340" fg:w="2"/><text x="27.4936%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="27.2436%" y="469" width="0.1603%" height="15" fill="rgb(223,139,54)" fg:x="340" fg:w="2"/><text x="27.4936%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="27.3237%" y="453" width="0.0801%" height="15" fill="rgb(207,110,4)" fg:x="341" fg:w="1"/><text x="27.5737%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="27.3237%" y="437" width="0.0801%" height="15" fill="rgb(248,30,41)" fg:x="341" fg:w="1"/><text x="27.5737%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="27.4038%" y="533" width="0.1603%" height="15" fill="rgb(235,54,25)" fg:x="342" fg:w="2"/><text x="27.6538%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="27.4038%" y="517" width="0.1603%" height="15" fill="rgb(213,107,41)" fg:x="342" fg:w="2"/><text x="27.6538%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="27.4038%" y="501" width="0.1603%" height="15" fill="rgb(237,102,9)" fg:x="342" fg:w="2"/><text x="27.6538%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="27.4840%" y="485" width="0.0801%" height="15" fill="rgb(252,137,49)" fg:x="343" fg:w="1"/><text x="27.7340%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="27.6442%" y="501" width="0.0801%" height="15" fill="rgb(233,202,33)" fg:x="345" fg:w="1"/><text x="27.8942%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.6442%" y="485" width="0.0801%" height="15" fill="rgb(223,14,51)" fg:x="345" fg:w="1"/><text x="27.8942%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="27.6442%" y="517" width="0.1603%" height="15" fill="rgb(248,70,23)" fg:x="345" fg:w="2"/><text x="27.8942%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.7244%" y="501" width="0.0801%" height="15" fill="rgb(209,207,47)" fg:x="346" fg:w="1"/><text x="27.9744%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.7244%" y="485" width="0.0801%" height="15" fill="rgb(245,124,2)" fg:x="346" fg:w="1"/><text x="27.9744%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="28.1250%" y="501" width="0.0801%" height="15" fill="rgb(249,208,11)" fg:x="351" fg:w="1"/><text x="28.3750%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (9 samples, 0.72%)</title><rect x="28.2051%" y="501" width="0.7212%" height="15" fill="rgb(247,112,7)" fg:x="352" fg:w="9"/><text x="28.4551%" y="511.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="28.3654%" y="485" width="0.5609%" height="15" fill="rgb(209,192,31)" fg:x="354" fg:w="7"/><text x="28.6154%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="28.6058%" y="469" width="0.3205%" height="15" fill="rgb(236,55,19)" fg:x="357" fg:w="4"/><text x="28.8558%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="28.6859%" y="453" width="0.2404%" height="15" fill="rgb(252,89,41)" fg:x="358" fg:w="3"/><text x="28.9359%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="28.7660%" y="437" width="0.1603%" height="15" fill="rgb(220,172,14)" fg:x="359" fg:w="2"/><text x="29.0160%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="28.7660%" y="421" width="0.1603%" height="15" fill="rgb(252,65,2)" fg:x="359" fg:w="2"/><text x="29.0160%" y="431.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="28.7660%" y="405" width="0.1603%" height="15" fill="rgb(250,20,8)" fg:x="359" fg:w="2"/><text x="29.0160%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="29.0064%" y="453" width="0.2404%" height="15" fill="rgb(234,149,13)" fg:x="362" fg:w="3"/><text x="29.2564%" y="463.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="29.0064%" y="437" width="0.2404%" height="15" fill="rgb(223,219,12)" fg:x="362" fg:w="3"/><text x="29.2564%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="29.0865%" y="421" width="0.1603%" height="15" fill="rgb(234,13,49)" fg:x="363" fg:w="2"/><text x="29.3365%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.1667%" y="405" width="0.0801%" height="15" fill="rgb(214,41,25)" fg:x="364" fg:w="1"/><text x="29.4167%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="29.1667%" y="389" width="0.0801%" height="15" fill="rgb(232,198,52)" fg:x="364" fg:w="1"/><text x="29.4167%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="29.1667%" y="373" width="0.0801%" height="15" fill="rgb(236,111,46)" fg:x="364" fg:w="1"/><text x="29.4167%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="29.1667%" y="357" width="0.0801%" height="15" fill="rgb(253,30,20)" fg:x="364" fg:w="1"/><text x="29.4167%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="29.2468%" y="453" width="0.1603%" height="15" fill="rgb(247,141,17)" fg:x="365" fg:w="2"/><text x="29.4968%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="29.2468%" y="437" width="0.1603%" height="15" fill="rgb(214,195,21)" fg:x="365" fg:w="2"/><text x="29.4968%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.3269%" y="421" width="0.0801%" height="15" fill="rgb(214,98,12)" fg:x="366" fg:w="1"/><text x="29.5769%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.3269%" y="405" width="0.0801%" height="15" fill="rgb(239,4,26)" fg:x="366" fg:w="1"/><text x="29.5769%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.3269%" y="389" width="0.0801%" height="15" fill="rgb(234,210,35)" fg:x="366" fg:w="1"/><text x="29.5769%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (7 samples, 0.56%)</title><rect x="28.9263%" y="485" width="0.5609%" height="15" fill="rgb(252,178,27)" fg:x="361" fg:w="7"/><text x="29.1763%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="28.9263%" y="469" width="0.5609%" height="15" fill="rgb(217,50,1)" fg:x="361" fg:w="7"/><text x="29.1763%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.4071%" y="453" width="0.0801%" height="15" fill="rgb(233,137,5)" fg:x="367" fg:w="1"/><text x="29.6571%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.4071%" y="437" width="0.0801%" height="15" fill="rgb(217,227,25)" fg:x="367" fg:w="1"/><text x="29.6571%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.4071%" y="421" width="0.0801%" height="15" fill="rgb(242,89,38)" fg:x="367" fg:w="1"/><text x="29.6571%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="29.4872%" y="485" width="0.4808%" height="15" fill="rgb(212,190,30)" fg:x="368" fg:w="6"/><text x="29.7372%" y="495.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="29.5673%" y="469" width="0.4006%" height="15" fill="rgb(222,120,8)" fg:x="369" fg:w="5"/><text x="29.8173%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="29.7276%" y="453" width="0.2404%" height="15" fill="rgb(227,181,9)" fg:x="371" fg:w="3"/><text x="29.9776%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="29.8077%" y="437" width="0.1603%" height="15" fill="rgb(222,125,29)" fg:x="372" fg:w="2"/><text x="30.0577%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="29.8878%" y="421" width="0.0801%" height="15" fill="rgb(215,153,31)" fg:x="373" fg:w="1"/><text x="30.1378%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="29.8878%" y="405" width="0.0801%" height="15" fill="rgb(228,77,30)" fg:x="373" fg:w="1"/><text x="30.1378%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="29.8878%" y="389" width="0.0801%" height="15" fill="rgb(226,110,9)" fg:x="373" fg:w="1"/><text x="30.1378%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="30.1282%" y="469" width="0.0801%" height="15" fill="rgb(219,111,7)" fg:x="376" fg:w="1"/><text x="30.3782%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="30.2083%" y="469" width="0.1603%" height="15" fill="rgb(229,167,25)" fg:x="377" fg:w="2"/><text x="30.4583%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="30.2083%" y="453" width="0.1603%" height="15" fill="rgb(209,77,43)" fg:x="377" fg:w="2"/><text x="30.4583%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="30.2083%" y="437" width="0.1603%" height="15" fill="rgb(233,70,39)" fg:x="377" fg:w="2"/><text x="30.4583%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.2885%" y="421" width="0.0801%" height="15" fill="rgb(207,171,44)" fg:x="378" fg:w="1"/><text x="30.5385%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="30.3686%" y="453" width="0.0801%" height="15" fill="rgb(244,91,6)" fg:x="379" fg:w="1"/><text x="30.6186%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="30.3686%" y="437" width="0.0801%" height="15" fill="rgb(234,136,12)" fg:x="379" fg:w="1"/><text x="30.6186%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="30.3686%" y="421" width="0.0801%" height="15" fill="rgb(216,210,38)" fg:x="379" fg:w="1"/><text x="30.6186%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.3686%" y="405" width="0.0801%" height="15" fill="rgb(241,227,7)" fg:x="379" fg:w="1"/><text x="30.6186%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="30.4487%" y="437" width="0.0801%" height="15" fill="rgb(241,222,11)" fg:x="380" fg:w="1"/><text x="30.6987%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="30.5288%" y="437" width="0.2404%" height="15" fill="rgb(246,86,18)" fg:x="381" fg:w="3"/><text x="30.7788%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="30.7692%" y="421" width="0.0801%" height="15" fill="rgb(224,151,49)" fg:x="384" fg:w="1"/><text x="31.0192%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="30.7692%" y="437" width="0.2404%" height="15" fill="rgb(235,4,41)" fg:x="384" fg:w="3"/><text x="31.0192%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="30.8494%" y="421" width="0.1603%" height="15" fill="rgb(218,30,52)" fg:x="385" fg:w="2"/><text x="31.0994%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="30.8494%" y="405" width="0.1603%" height="15" fill="rgb(205,124,51)" fg:x="385" fg:w="2"/><text x="31.0994%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="30.8494%" y="389" width="0.1603%" height="15" fill="rgb(237,126,51)" fg:x="385" fg:w="2"/><text x="31.0994%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="30.8494%" y="373" width="0.1603%" height="15" fill="rgb(225,32,46)" fg:x="385" fg:w="2"/><text x="31.0994%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="30.9295%" y="357" width="0.0801%" height="15" fill="rgb(251,60,49)" fg:x="386" fg:w="1"/><text x="31.1795%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="30.9295%" y="341" width="0.0801%" height="15" fill="rgb(234,18,23)" fg:x="386" fg:w="1"/><text x="31.1795%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="30.9295%" y="325" width="0.0801%" height="15" fill="rgb(234,25,23)" fg:x="386" fg:w="1"/><text x="31.1795%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="30.4487%" y="453" width="0.6410%" height="15" fill="rgb(210,43,52)" fg:x="380" fg:w="8"/><text x="30.6987%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="31.0096%" y="437" width="0.0801%" height="15" fill="rgb(237,198,21)" fg:x="387" fg:w="1"/><text x="31.2596%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="30.3686%" y="469" width="0.8013%" height="15" fill="rgb(211,20,34)" fg:x="379" fg:w="10"/><text x="30.6186%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="31.0897%" y="453" width="0.0801%" height="15" fill="rgb(221,155,50)" fg:x="388" fg:w="1"/><text x="31.3397%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="31.0897%" y="437" width="0.0801%" height="15" fill="rgb(213,214,53)" fg:x="388" fg:w="1"/><text x="31.3397%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.0897%" y="421" width="0.0801%" height="15" fill="rgb(215,229,48)" fg:x="388" fg:w="1"/><text x="31.3397%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.52%)</title><rect x="29.9679%" y="485" width="1.5224%" height="15" fill="rgb(243,88,5)" fg:x="374" fg:w="19"/><text x="30.2179%" y="495.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="31.1699%" y="469" width="0.3205%" height="15" fill="rgb(216,199,8)" fg:x="389" fg:w="4"/><text x="31.4199%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="31.3301%" y="453" width="0.1603%" height="15" fill="rgb(241,22,4)" fg:x="391" fg:w="2"/><text x="31.5801%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="31.3301%" y="437" width="0.1603%" height="15" fill="rgb(209,190,22)" fg:x="391" fg:w="2"/><text x="31.5801%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (33 samples, 2.64%)</title><rect x="28.9263%" y="501" width="2.6442%" height="15" fill="rgb(251,138,45)" fg:x="361" fg:w="33"/><text x="29.1763%" y="511.50">se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="31.4904%" y="485" width="0.0801%" height="15" fill="rgb(219,111,22)" fg:x="393" fg:w="1"/><text x="31.7404%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="31.4904%" y="469" width="0.0801%" height="15" fill="rgb(253,29,49)" fg:x="393" fg:w="1"/><text x="31.7404%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (57 samples, 4.57%)</title><rect x="27.8045%" y="517" width="4.5673%" height="15" fill="rgb(238,129,49)" fg:x="347" fg:w="57"/><text x="28.0545%" y="527.50">serde..</text></g><g><title>std::io::Write::write_all (10 samples, 0.80%)</title><rect x="31.5705%" y="501" width="0.8013%" height="15" fill="rgb(240,26,41)" fg:x="394" fg:w="10"/><text x="31.8205%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (7 samples, 0.56%)</title><rect x="31.8109%" y="485" width="0.5609%" height="15" fill="rgb(221,47,33)" fg:x="397" fg:w="7"/><text x="32.0609%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="32.0513%" y="469" width="0.3205%" height="15" fill="rgb(216,200,17)" fg:x="400" fg:w="4"/><text x="32.3013%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="32.2917%" y="453" width="0.0801%" height="15" fill="rgb(230,151,26)" fg:x="403" fg:w="1"/><text x="32.5417%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="32.2917%" y="437" width="0.0801%" height="15" fill="rgb(242,182,16)" fg:x="403" fg:w="1"/><text x="32.5417%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="32.2917%" y="421" width="0.0801%" height="15" fill="rgb(236,35,53)" fg:x="403" fg:w="1"/><text x="32.5417%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (61 samples, 4.89%)</title><rect x="27.5641%" y="533" width="4.8878%" height="15" fill="rgb(214,180,28)" fg:x="344" fg:w="61"/><text x="27.8141%" y="543.50">&lt;serde..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="32.3718%" y="517" width="0.0801%" height="15" fill="rgb(208,173,36)" fg:x="404" fg:w="1"/><text x="32.6218%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="32.3718%" y="501" width="0.0801%" height="15" fill="rgb(218,39,15)" fg:x="404" fg:w="1"/><text x="32.6218%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="32.3718%" y="485" width="0.0801%" height="15" fill="rgb(213,145,15)" fg:x="404" fg:w="1"/><text x="32.6218%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="32.6122%" y="501" width="0.1603%" height="15" fill="rgb(242,110,37)" fg:x="407" fg:w="2"/><text x="32.8622%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="32.7724%" y="501" width="0.1603%" height="15" fill="rgb(247,146,22)" fg:x="409" fg:w="2"/><text x="33.0224%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.8526%" y="485" width="0.0801%" height="15" fill="rgb(215,191,7)" fg:x="410" fg:w="1"/><text x="33.1026%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.0128%" y="485" width="0.0801%" height="15" fill="rgb(240,158,1)" fg:x="412" fg:w="1"/><text x="33.2628%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="33.0929%" y="485" width="0.1603%" height="15" fill="rgb(241,78,32)" fg:x="413" fg:w="2"/><text x="33.3429%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.1731%" y="469" width="0.0801%" height="15" fill="rgb(248,83,10)" fg:x="414" fg:w="1"/><text x="33.4231%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.2532%" y="469" width="0.0801%" height="15" fill="rgb(241,52,0)" fg:x="415" fg:w="1"/><text x="33.5032%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.3333%" y="453" width="0.0801%" height="15" fill="rgb(238,37,13)" fg:x="416" fg:w="1"/><text x="33.5833%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="33.4135%" y="453" width="0.0801%" height="15" fill="rgb(242,194,17)" fg:x="417" fg:w="1"/><text x="33.6635%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="33.4135%" y="437" width="0.0801%" height="15" fill="rgb(236,96,3)" fg:x="417" fg:w="1"/><text x="33.6635%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.4135%" y="421" width="0.0801%" height="15" fill="rgb(235,148,34)" fg:x="417" fg:w="1"/><text x="33.6635%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.4936%" y="437" width="0.0801%" height="15" fill="rgb(254,12,11)" fg:x="418" fg:w="1"/><text x="33.7436%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.5737%" y="421" width="0.0801%" height="15" fill="rgb(207,31,54)" fg:x="419" fg:w="1"/><text x="33.8237%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="33.6538%" y="421" width="0.1603%" height="15" fill="rgb(252,14,28)" fg:x="420" fg:w="2"/><text x="33.9038%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.7340%" y="405" width="0.0801%" height="15" fill="rgb(252,108,36)" fg:x="421" fg:w="1"/><text x="33.9840%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 1.44%)</title><rect x="32.4519%" y="533" width="1.4423%" height="15" fill="rgb(214,149,7)" fg:x="405" fg:w="18"/><text x="32.7019%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (18 samples, 1.44%)</title><rect x="32.4519%" y="517" width="1.4423%" height="15" fill="rgb(243,94,12)" fg:x="405" fg:w="18"/><text x="32.7019%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="32.9327%" y="501" width="0.9615%" height="15" fill="rgb(208,36,10)" fg:x="411" fg:w="12"/><text x="33.1827%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="33.2532%" y="485" width="0.6410%" height="15" fill="rgb(233,185,52)" fg:x="415" fg:w="8"/><text x="33.5032%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="33.3333%" y="469" width="0.5609%" height="15" fill="rgb(234,50,45)" fg:x="416" fg:w="7"/><text x="33.5833%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="33.4936%" y="453" width="0.4006%" height="15" fill="rgb(228,92,54)" fg:x="418" fg:w="5"/><text x="33.7436%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="33.5737%" y="437" width="0.3205%" height="15" fill="rgb(224,85,25)" fg:x="419" fg:w="4"/><text x="33.8237%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.8141%" y="421" width="0.0801%" height="15" fill="rgb(246,1,45)" fg:x="422" fg:w="1"/><text x="34.0641%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.8141%" y="405" width="0.0801%" height="15" fill="rgb(240,66,23)" fg:x="422" fg:w="1"/><text x="34.0641%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.8141%" y="389" width="0.0801%" height="15" fill="rgb(222,96,27)" fg:x="422" fg:w="1"/><text x="34.0641%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="33.8942%" y="501" width="0.0801%" height="15" fill="rgb(212,136,10)" fg:x="423" fg:w="1"/><text x="34.1442%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.8942%" y="485" width="0.0801%" height="15" fill="rgb(226,192,50)" fg:x="423" fg:w="1"/><text x="34.1442%" y="495.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="33.8942%" y="517" width="0.1603%" height="15" fill="rgb(241,182,31)" fg:x="423" fg:w="2"/><text x="34.1442%" y="527.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="33.9744%" y="501" width="0.0801%" height="15" fill="rgb(219,205,47)" fg:x="424" fg:w="1"/><text x="34.2244%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="33.9744%" y="485" width="0.0801%" height="15" fill="rgb(207,96,14)" fg:x="424" fg:w="1"/><text x="34.2244%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="34.0545%" y="517" width="0.0801%" height="15" fill="rgb(216,119,9)" fg:x="425" fg:w="1"/><text x="34.3045%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.0545%" y="501" width="0.0801%" height="15" fill="rgb(235,62,36)" fg:x="425" fg:w="1"/><text x="34.3045%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.4551%" y="485" width="0.0801%" height="15" fill="rgb(214,41,27)" fg:x="430" fg:w="1"/><text x="34.7051%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="34.5353%" y="485" width="0.3205%" height="15" fill="rgb(214,174,37)" fg:x="431" fg:w="4"/><text x="34.7853%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="34.6955%" y="469" width="0.1603%" height="15" fill="rgb(212,11,25)" fg:x="433" fg:w="2"/><text x="34.9455%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="34.8558%" y="485" width="0.0801%" height="15" fill="rgb(217,71,35)" fg:x="435" fg:w="1"/><text x="35.1058%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="34.8558%" y="469" width="0.0801%" height="15" fill="rgb(234,152,9)" fg:x="435" fg:w="1"/><text x="35.1058%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="34.9359%" y="485" width="0.0801%" height="15" fill="rgb(228,32,51)" fg:x="436" fg:w="1"/><text x="35.1859%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.9359%" y="469" width="0.0801%" height="15" fill="rgb(209,14,47)" fg:x="436" fg:w="1"/><text x="35.1859%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="35.0160%" y="469" width="0.0801%" height="15" fill="rgb(218,201,17)" fg:x="437" fg:w="1"/><text x="35.2660%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="35.2564%" y="437" width="0.3205%" height="15" fill="rgb(218,98,15)" fg:x="440" fg:w="4"/><text x="35.5064%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="35.3365%" y="421" width="0.2404%" height="15" fill="rgb(233,202,29)" fg:x="441" fg:w="3"/><text x="35.5865%" y="431.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="35.3365%" y="405" width="0.2404%" height="15" fill="rgb(207,196,44)" fg:x="441" fg:w="3"/><text x="35.5865%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="35.6571%" y="389" width="0.3205%" height="15" fill="rgb(218,63,34)" fg:x="445" fg:w="4"/><text x="35.9071%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="35.7372%" y="373" width="0.2404%" height="15" fill="rgb(209,10,5)" fg:x="446" fg:w="3"/><text x="35.9872%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="35.8173%" y="357" width="0.1603%" height="15" fill="rgb(224,36,28)" fg:x="447" fg:w="2"/><text x="36.0673%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.48%)</title><rect x="35.5769%" y="437" width="0.4808%" height="15" fill="rgb(249,178,7)" fg:x="444" fg:w="6"/><text x="35.8269%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="35.6571%" y="421" width="0.4006%" height="15" fill="rgb(253,163,10)" fg:x="445" fg:w="5"/><text x="35.9071%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="35.6571%" y="405" width="0.4006%" height="15" fill="rgb(245,67,46)" fg:x="445" fg:w="5"/><text x="35.9071%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="35.9776%" y="389" width="0.0801%" height="15" fill="rgb(225,14,18)" fg:x="449" fg:w="1"/><text x="36.2276%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.9776%" y="373" width="0.0801%" height="15" fill="rgb(217,41,54)" fg:x="449" fg:w="1"/><text x="36.2276%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="36.2981%" y="421" width="0.0801%" height="15" fill="rgb(222,111,11)" fg:x="453" fg:w="1"/><text x="36.5481%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="36.3782%" y="405" width="0.2404%" height="15" fill="rgb(211,85,31)" fg:x="454" fg:w="3"/><text x="36.6282%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.5385%" y="389" width="0.0801%" height="15" fill="rgb(223,29,26)" fg:x="456" fg:w="1"/><text x="36.7885%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.5385%" y="373" width="0.0801%" height="15" fill="rgb(236,124,50)" fg:x="456" fg:w="1"/><text x="36.7885%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="36.7788%" y="389" width="0.0801%" height="15" fill="rgb(219,148,15)" fg:x="459" fg:w="1"/><text x="37.0288%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="36.8590%" y="389" width="0.0801%" height="15" fill="rgb(248,159,33)" fg:x="460" fg:w="1"/><text x="37.1090%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="36.9391%" y="341" width="0.1603%" height="15" fill="rgb(252,65,8)" fg:x="461" fg:w="2"/><text x="37.1891%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="36.9391%" y="325" width="0.1603%" height="15" fill="rgb(236,45,7)" fg:x="461" fg:w="2"/><text x="37.1891%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.0994%" y="309" width="0.0801%" height="15" fill="rgb(244,3,48)" fg:x="463" fg:w="1"/><text x="37.3494%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.0994%" y="293" width="0.0801%" height="15" fill="rgb(224,123,53)" fg:x="463" fg:w="1"/><text x="37.3494%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.0994%" y="277" width="0.0801%" height="15" fill="rgb(223,173,15)" fg:x="463" fg:w="1"/><text x="37.3494%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="36.9391%" y="389" width="0.3205%" height="15" fill="rgb(254,181,5)" fg:x="461" fg:w="4"/><text x="37.1891%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="36.9391%" y="373" width="0.3205%" height="15" fill="rgb(243,124,33)" fg:x="461" fg:w="4"/><text x="37.1891%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="36.9391%" y="357" width="0.3205%" height="15" fill="rgb(253,220,11)" fg:x="461" fg:w="4"/><text x="37.1891%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="37.0994%" y="341" width="0.1603%" height="15" fill="rgb(217,14,4)" fg:x="463" fg:w="2"/><text x="37.3494%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="37.0994%" y="325" width="0.1603%" height="15" fill="rgb(209,196,12)" fg:x="463" fg:w="2"/><text x="37.3494%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="37.1795%" y="309" width="0.0801%" height="15" fill="rgb(237,108,29)" fg:x="464" fg:w="1"/><text x="37.4295%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.96%)</title><rect x="36.3782%" y="421" width="0.9615%" height="15" fill="rgb(216,173,20)" fg:x="454" fg:w="12"/><text x="36.6282%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="36.6186%" y="405" width="0.7212%" height="15" fill="rgb(245,27,6)" fg:x="457" fg:w="9"/><text x="36.8686%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.2596%" y="389" width="0.0801%" height="15" fill="rgb(210,181,20)" fg:x="465" fg:w="1"/><text x="37.5096%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (29 samples, 2.32%)</title><rect x="35.0962%" y="453" width="2.3237%" height="15" fill="rgb(235,213,1)" fg:x="438" fg:w="29"/><text x="35.3462%" y="463.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (17 samples, 1.36%)</title><rect x="36.0577%" y="437" width="1.3622%" height="15" fill="rgb(239,68,43)" fg:x="450" fg:w="17"/><text x="36.3077%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.3397%" y="421" width="0.0801%" height="15" fill="rgb(254,137,43)" fg:x="466" fg:w="1"/><text x="37.5897%" y="431.50"></text></g><g><title>engine::session::Session::flush (138 samples, 11.06%)</title><rect x="26.4423%" y="629" width="11.0577%" height="15" fill="rgb(252,170,38)" fg:x="330" fg:w="138"/><text x="26.6923%" y="639.50">engine::session:..</text></g><g><title>engine::session::Session::save_changes (134 samples, 10.74%)</title><rect x="26.7628%" y="613" width="10.7372%" height="15" fill="rgb(234,21,42)" fg:x="334" fg:w="134"/><text x="27.0128%" y="623.50">engine::session:..</text></g><g><title>engine::session::state::State::close (134 samples, 10.74%)</title><rect x="26.7628%" y="597" width="10.7372%" height="15" fill="rgb(216,145,40)" fg:x="334" fg:w="134"/><text x="27.0128%" y="607.50">engine::session:..</text></g><g><title>engine::session::state::State::flush_entities (134 samples, 10.74%)</title><rect x="26.7628%" y="581" width="10.7372%" height="15" fill="rgb(251,73,9)" fg:x="334" fg:w="134"/><text x="27.0128%" y="591.50">engine::session:..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (129 samples, 10.34%)</title><rect x="27.1635%" y="565" width="10.3365%" height="15" fill="rgb(242,54,6)" fg:x="339" fg:w="129"/><text x="27.4135%" y="575.50">engine::session..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (129 samples, 10.34%)</title><rect x="27.1635%" y="549" width="10.3365%" height="15" fill="rgb(239,70,7)" fg:x="339" fg:w="129"/><text x="27.4135%" y="559.50">engine::session..</text></g><g><title>kernel::model::any_entity_changes (45 samples, 3.61%)</title><rect x="33.8942%" y="533" width="3.6058%" height="15" fill="rgb(216,159,35)" fg:x="423" fg:w="45"/><text x="34.1442%" y="543.50">kern..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (42 samples, 3.37%)</title><rect x="34.1346%" y="517" width="3.3654%" height="15" fill="rgb(224,50,39)" fg:x="426" fg:w="42"/><text x="34.3846%" y="527.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (42 samples, 3.37%)</title><rect x="34.1346%" y="501" width="3.3654%" height="15" fill="rgb(235,9,35)" fg:x="426" fg:w="42"/><text x="34.3846%" y="511.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (31 samples, 2.48%)</title><rect x="35.0160%" y="485" width="2.4840%" height="15" fill="rgb(239,34,21)" fg:x="437" fg:w="31"/><text x="35.2660%" y="495.50">se..</text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (30 samples, 2.40%)</title><rect x="35.0962%" y="469" width="2.4038%" height="15" fill="rgb(218,162,43)" fg:x="438" fg:w="30"/><text x="35.3462%" y="479.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="37.4199%" y="453" width="0.0801%" height="15" fill="rgb(219,89,33)" fg:x="467" fg:w="1"/><text x="37.6699%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.4199%" y="437" width="0.0801%" height="15" fill="rgb(226,125,37)" fg:x="467" fg:w="1"/><text x="37.6699%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="37.5000%" y="613" width="0.0801%" height="15" fill="rgb(233,149,30)" fg:x="468" fg:w="1"/><text x="37.7500%" y="623.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="37.5000%" y="597" width="0.0801%" height="15" fill="rgb(236,8,18)" fg:x="468" fg:w="1"/><text x="37.7500%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.5000%" y="581" width="0.0801%" height="15" fill="rgb(205,176,9)" fg:x="468" fg:w="1"/><text x="37.7500%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.5000%" y="565" width="0.0801%" height="15" fill="rgb(252,103,44)" fg:x="468" fg:w="1"/><text x="37.7500%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="37.5801%" y="597" width="0.1603%" height="15" fill="rgb(207,68,53)" fg:x="469" fg:w="2"/><text x="37.8301%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="37.5801%" y="581" width="0.1603%" height="15" fill="rgb(218,193,48)" fg:x="469" fg:w="2"/><text x="37.8301%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="37.5801%" y="565" width="0.1603%" height="15" fill="rgb(234,121,52)" fg:x="469" fg:w="2"/><text x="37.8301%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.6603%" y="549" width="0.0801%" height="15" fill="rgb(227,218,49)" fg:x="470" fg:w="1"/><text x="37.9103%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.6603%" y="533" width="0.0801%" height="15" fill="rgb(221,8,7)" fg:x="470" fg:w="1"/><text x="37.9103%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.6603%" y="517" width="0.0801%" height="15" fill="rgb(217,151,36)" fg:x="470" fg:w="1"/><text x="37.9103%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.6603%" y="501" width="0.0801%" height="15" fill="rgb(213,71,5)" fg:x="470" fg:w="1"/><text x="37.9103%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.6603%" y="485" width="0.0801%" height="15" fill="rgb(225,145,43)" fg:x="470" fg:w="1"/><text x="37.9103%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.6603%" y="469" width="0.0801%" height="15" fill="rgb(235,118,19)" fg:x="470" fg:w="1"/><text x="37.9103%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.6603%" y="453" width="0.0801%" height="15" fill="rgb(214,102,36)" fg:x="470" fg:w="1"/><text x="37.9103%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.6603%" y="437" width="0.0801%" height="15" fill="rgb(220,56,43)" fg:x="470" fg:w="1"/><text x="37.9103%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.6603%" y="421" width="0.0801%" height="15" fill="rgb(246,136,46)" fg:x="470" fg:w="1"/><text x="37.9103%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.6603%" y="405" width="0.0801%" height="15" fill="rgb(249,99,12)" fg:x="470" fg:w="1"/><text x="37.9103%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.6603%" y="389" width="0.0801%" height="15" fill="rgb(224,31,42)" fg:x="470" fg:w="1"/><text x="37.9103%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.6603%" y="373" width="0.0801%" height="15" fill="rgb(208,96,21)" fg:x="470" fg:w="1"/><text x="37.9103%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.6603%" y="357" width="0.0801%" height="15" fill="rgb(237,229,7)" fg:x="470" fg:w="1"/><text x="37.9103%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.7404%" y="517" width="0.0801%" height="15" fill="rgb(210,12,6)" fg:x="471" fg:w="1"/><text x="37.9904%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (5 samples, 0.40%)</title><rect x="37.5000%" y="629" width="0.4006%" height="15" fill="rgb(240,9,34)" fg:x="468" fg:w="5"/><text x="37.7500%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="37.5801%" y="613" width="0.3205%" height="15" fill="rgb(211,68,37)" fg:x="469" fg:w="4"/><text x="37.8301%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="37.7404%" y="597" width="0.1603%" height="15" fill="rgb(249,138,50)" fg:x="471" fg:w="2"/><text x="37.9904%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="37.7404%" y="581" width="0.1603%" height="15" fill="rgb(243,185,40)" fg:x="471" fg:w="2"/><text x="37.9904%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="37.7404%" y="565" width="0.1603%" height="15" fill="rgb(242,92,35)" fg:x="471" fg:w="2"/><text x="37.9904%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="37.7404%" y="549" width="0.1603%" height="15" fill="rgb(244,98,5)" fg:x="471" fg:w="2"/><text x="37.9904%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.7404%" y="533" width="0.1603%" height="15" fill="rgb(228,186,29)" fg:x="471" fg:w="2"/><text x="37.9904%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.8205%" y="517" width="0.0801%" height="15" fill="rgb(253,7,44)" fg:x="472" fg:w="1"/><text x="38.0705%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.8205%" y="501" width="0.0801%" height="15" fill="rgb(216,11,45)" fg:x="472" fg:w="1"/><text x="38.0705%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.8205%" y="485" width="0.0801%" height="15" fill="rgb(205,67,3)" fg:x="472" fg:w="1"/><text x="38.0705%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="37.9808%" y="597" width="0.0801%" height="15" fill="rgb(250,18,3)" fg:x="474" fg:w="1"/><text x="38.2308%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="37.9808%" y="581" width="0.0801%" height="15" fill="rgb(241,222,43)" fg:x="474" fg:w="1"/><text x="38.2308%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.1410%" y="501" width="0.1603%" height="15" fill="rgb(233,115,3)" fg:x="476" fg:w="2"/><text x="38.3910%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.2212%" y="485" width="0.0801%" height="15" fill="rgb(215,165,25)" fg:x="477" fg:w="1"/><text x="38.4712%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.2212%" y="469" width="0.0801%" height="15" fill="rgb(234,179,6)" fg:x="477" fg:w="1"/><text x="38.4712%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.2212%" y="453" width="0.0801%" height="15" fill="rgb(215,82,23)" fg:x="477" fg:w="1"/><text x="38.4712%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.2212%" y="437" width="0.0801%" height="15" fill="rgb(211,47,18)" fg:x="477" fg:w="1"/><text x="38.4712%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.2212%" y="421" width="0.0801%" height="15" fill="rgb(248,17,9)" fg:x="477" fg:w="1"/><text x="38.4712%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.2212%" y="405" width="0.0801%" height="15" fill="rgb(210,212,12)" fg:x="477" fg:w="1"/><text x="38.4712%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.2212%" y="389" width="0.0801%" height="15" fill="rgb(230,135,45)" fg:x="477" fg:w="1"/><text x="38.4712%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.2212%" y="373" width="0.0801%" height="15" fill="rgb(214,121,41)" fg:x="477" fg:w="1"/><text x="38.4712%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.2212%" y="357" width="0.0801%" height="15" fill="rgb(239,165,45)" fg:x="477" fg:w="1"/><text x="38.4712%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.2212%" y="341" width="0.0801%" height="15" fill="rgb(214,85,51)" fg:x="477" fg:w="1"/><text x="38.4712%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.2212%" y="325" width="0.0801%" height="15" fill="rgb(223,90,27)" fg:x="477" fg:w="1"/><text x="38.4712%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.2212%" y="309" width="0.0801%" height="15" fill="rgb(244,84,11)" fg:x="477" fg:w="1"/><text x="38.4712%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="38.0609%" y="549" width="0.3205%" height="15" fill="rgb(253,41,47)" fg:x="475" fg:w="4"/><text x="38.3109%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="38.0609%" y="533" width="0.3205%" height="15" fill="rgb(232,39,5)" fg:x="475" fg:w="4"/><text x="38.3109%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="38.1410%" y="517" width="0.2404%" height="15" fill="rgb(211,93,4)" fg:x="476" fg:w="3"/><text x="38.3910%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.3013%" y="501" width="0.0801%" height="15" fill="rgb(219,50,49)" fg:x="478" fg:w="1"/><text x="38.5513%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.3013%" y="485" width="0.0801%" height="15" fill="rgb(232,80,19)" fg:x="478" fg:w="1"/><text x="38.5513%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.3013%" y="469" width="0.0801%" height="15" fill="rgb(215,227,39)" fg:x="478" fg:w="1"/><text x="38.5513%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.3013%" y="453" width="0.0801%" height="15" fill="rgb(211,99,12)" fg:x="478" fg:w="1"/><text x="38.5513%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.3013%" y="437" width="0.0801%" height="15" fill="rgb(214,158,5)" fg:x="478" fg:w="1"/><text x="38.5513%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.3013%" y="421" width="0.0801%" height="15" fill="rgb(242,19,53)" fg:x="478" fg:w="1"/><text x="38.5513%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.3013%" y="405" width="0.0801%" height="15" fill="rgb(208,18,20)" fg:x="478" fg:w="1"/><text x="38.5513%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.3013%" y="389" width="0.0801%" height="15" fill="rgb(250,44,11)" fg:x="478" fg:w="1"/><text x="38.5513%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.3013%" y="373" width="0.0801%" height="15" fill="rgb(238,159,13)" fg:x="478" fg:w="1"/><text x="38.5513%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.3013%" y="357" width="0.0801%" height="15" fill="rgb(231,74,18)" fg:x="478" fg:w="1"/><text x="38.5513%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.3013%" y="341" width="0.0801%" height="15" fill="rgb(229,219,45)" fg:x="478" fg:w="1"/><text x="38.5513%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.3013%" y="325" width="0.0801%" height="15" fill="rgb(210,221,1)" fg:x="478" fg:w="1"/><text x="38.5513%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.3814%" y="549" width="0.0801%" height="15" fill="rgb(209,60,51)" fg:x="479" fg:w="1"/><text x="38.6314%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="38.3814%" y="533" width="0.0801%" height="15" fill="rgb(252,97,34)" fg:x="479" fg:w="1"/><text x="38.6314%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.3814%" y="517" width="0.0801%" height="15" fill="rgb(243,211,37)" fg:x="479" fg:w="1"/><text x="38.6314%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.3814%" y="501" width="0.0801%" height="15" fill="rgb(210,229,37)" fg:x="479" fg:w="1"/><text x="38.6314%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.3814%" y="485" width="0.0801%" height="15" fill="rgb(220,208,43)" fg:x="479" fg:w="1"/><text x="38.6314%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.3814%" y="469" width="0.0801%" height="15" fill="rgb(218,118,50)" fg:x="479" fg:w="1"/><text x="38.6314%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.3814%" y="453" width="0.0801%" height="15" fill="rgb(254,169,52)" fg:x="479" fg:w="1"/><text x="38.6314%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="38.0609%" y="597" width="0.4808%" height="15" fill="rgb(221,214,37)" fg:x="475" fg:w="6"/><text x="38.3109%" y="607.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="38.0609%" y="581" width="0.4808%" height="15" fill="rgb(254,186,32)" fg:x="475" fg:w="6"/><text x="38.3109%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="38.0609%" y="565" width="0.4808%" height="15" fill="rgb(215,144,43)" fg:x="475" fg:w="6"/><text x="38.3109%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.4615%" y="549" width="0.0801%" height="15" fill="rgb(252,21,46)" fg:x="480" fg:w="1"/><text x="38.7115%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.4615%" y="533" width="0.0801%" height="15" fill="rgb(207,166,46)" fg:x="480" fg:w="1"/><text x="38.7115%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.4615%" y="517" width="0.0801%" height="15" fill="rgb(253,37,49)" fg:x="480" fg:w="1"/><text x="38.7115%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.4615%" y="501" width="0.0801%" height="15" fill="rgb(222,97,20)" fg:x="480" fg:w="1"/><text x="38.7115%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="38.4615%" y="485" width="0.0801%" height="15" fill="rgb(244,181,26)" fg:x="480" fg:w="1"/><text x="38.7115%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.4615%" y="469" width="0.0801%" height="15" fill="rgb(241,22,29)" fg:x="480" fg:w="1"/><text x="38.7115%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.4615%" y="453" width="0.0801%" height="15" fill="rgb(206,200,43)" fg:x="480" fg:w="1"/><text x="38.7115%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.4615%" y="437" width="0.0801%" height="15" fill="rgb(226,224,43)" fg:x="480" fg:w="1"/><text x="38.7115%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.4615%" y="421" width="0.0801%" height="15" fill="rgb(253,129,28)" fg:x="480" fg:w="1"/><text x="38.7115%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.4615%" y="405" width="0.0801%" height="15" fill="rgb(252,99,33)" fg:x="480" fg:w="1"/><text x="38.7115%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="38.4615%" y="389" width="0.0801%" height="15" fill="rgb(208,123,45)" fg:x="480" fg:w="1"/><text x="38.7115%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="38.5417%" y="581" width="0.0801%" height="15" fill="rgb(251,106,12)" fg:x="481" fg:w="1"/><text x="38.7917%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="38.5417%" y="565" width="0.0801%" height="15" fill="rgb(240,209,35)" fg:x="481" fg:w="1"/><text x="38.7917%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.6218%" y="565" width="0.0801%" height="15" fill="rgb(214,52,50)" fg:x="482" fg:w="1"/><text x="38.8718%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.6218%" y="549" width="0.0801%" height="15" fill="rgb(234,119,4)" fg:x="482" fg:w="1"/><text x="38.8718%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.6218%" y="533" width="0.0801%" height="15" fill="rgb(228,181,36)" fg:x="482" fg:w="1"/><text x="38.8718%" y="543.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="38.5417%" y="597" width="0.2404%" height="15" fill="rgb(213,171,42)" fg:x="481" fg:w="3"/><text x="38.7917%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="38.6218%" y="581" width="0.1603%" height="15" fill="rgb(239,14,41)" fg:x="482" fg:w="2"/><text x="38.8718%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="38.7019%" y="565" width="0.0801%" height="15" fill="rgb(239,111,46)" fg:x="483" fg:w="1"/><text x="38.9519%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="38.7019%" y="549" width="0.0801%" height="15" fill="rgb(214,72,7)" fg:x="483" fg:w="1"/><text x="38.9519%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.7019%" y="533" width="0.0801%" height="15" fill="rgb(221,114,1)" fg:x="483" fg:w="1"/><text x="38.9519%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.7821%" y="517" width="0.0801%" height="15" fill="rgb(213,143,14)" fg:x="484" fg:w="1"/><text x="39.0321%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.7821%" y="501" width="0.0801%" height="15" fill="rgb(220,221,53)" fg:x="484" fg:w="1"/><text x="39.0321%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.7821%" y="485" width="0.0801%" height="15" fill="rgb(236,189,27)" fg:x="484" fg:w="1"/><text x="39.0321%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.7821%" y="469" width="0.0801%" height="15" fill="rgb(252,139,49)" fg:x="484" fg:w="1"/><text x="39.0321%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.7821%" y="453" width="0.0801%" height="15" fill="rgb(231,158,33)" fg:x="484" fg:w="1"/><text x="39.0321%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.7821%" y="437" width="0.0801%" height="15" fill="rgb(207,201,15)" fg:x="484" fg:w="1"/><text x="39.0321%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.7821%" y="421" width="0.0801%" height="15" fill="rgb(218,43,48)" fg:x="484" fg:w="1"/><text x="39.0321%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.7821%" y="405" width="0.0801%" height="15" fill="rgb(244,63,52)" fg:x="484" fg:w="1"/><text x="39.0321%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.7821%" y="389" width="0.0801%" height="15" fill="rgb(236,60,17)" fg:x="484" fg:w="1"/><text x="39.0321%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.7821%" y="373" width="0.0801%" height="15" fill="rgb(205,206,29)" fg:x="484" fg:w="1"/><text x="39.0321%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.7821%" y="357" width="0.0801%" height="15" fill="rgb(205,209,35)" fg:x="484" fg:w="1"/><text x="39.0321%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.7821%" y="341" width="0.0801%" height="15" fill="rgb(227,112,14)" fg:x="484" fg:w="1"/><text x="39.0321%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.7821%" y="325" width="0.0801%" height="15" fill="rgb(248,151,9)" fg:x="484" fg:w="1"/><text x="39.0321%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.7821%" y="309" width="0.0801%" height="15" fill="rgb(247,45,40)" fg:x="484" fg:w="1"/><text x="39.0321%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.7821%" y="293" width="0.0801%" height="15" fill="rgb(232,185,16)" fg:x="484" fg:w="1"/><text x="39.0321%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.7821%" y="277" width="0.0801%" height="15" fill="rgb(215,45,44)" fg:x="484" fg:w="1"/><text x="39.0321%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.7821%" y="261" width="0.0801%" height="15" fill="rgb(206,69,32)" fg:x="484" fg:w="1"/><text x="39.0321%" y="271.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="38.7821%" y="581" width="0.1603%" height="15" fill="rgb(233,98,50)" fg:x="484" fg:w="2"/><text x="39.0321%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="38.7821%" y="565" width="0.1603%" height="15" fill="rgb(232,217,52)" fg:x="484" fg:w="2"/><text x="39.0321%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="38.7821%" y="549" width="0.1603%" height="15" fill="rgb(250,42,51)" fg:x="484" fg:w="2"/><text x="39.0321%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="38.7821%" y="533" width="0.1603%" height="15" fill="rgb(241,200,26)" fg:x="484" fg:w="2"/><text x="39.0321%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.8622%" y="517" width="0.0801%" height="15" fill="rgb(207,10,32)" fg:x="485" fg:w="1"/><text x="39.1122%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.8622%" y="501" width="0.0801%" height="15" fill="rgb(214,63,15)" fg:x="485" fg:w="1"/><text x="39.1122%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.8622%" y="485" width="0.0801%" height="15" fill="rgb(234,176,14)" fg:x="485" fg:w="1"/><text x="39.1122%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.8622%" y="469" width="0.0801%" height="15" fill="rgb(226,104,52)" fg:x="485" fg:w="1"/><text x="39.1122%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="38.8622%" y="453" width="0.0801%" height="15" fill="rgb(211,222,1)" fg:x="485" fg:w="1"/><text x="39.1122%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.8622%" y="437" width="0.0801%" height="15" fill="rgb(237,7,3)" fg:x="485" fg:w="1"/><text x="39.1122%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.8622%" y="421" width="0.0801%" height="15" fill="rgb(218,143,7)" fg:x="485" fg:w="1"/><text x="39.1122%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.8622%" y="405" width="0.0801%" height="15" fill="rgb(208,25,22)" fg:x="485" fg:w="1"/><text x="39.1122%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.12%)</title><rect x="37.9006%" y="613" width="1.1218%" height="15" fill="rgb(228,127,16)" fg:x="473" fg:w="14"/><text x="38.1506%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="38.7821%" y="597" width="0.2404%" height="15" fill="rgb(237,86,27)" fg:x="484" fg:w="3"/><text x="39.0321%" y="607.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="38.9423%" y="581" width="0.0801%" height="15" fill="rgb(207,125,19)" fg:x="486" fg:w="1"/><text x="39.1923%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.9423%" y="565" width="0.0801%" height="15" fill="rgb(243,195,0)" fg:x="486" fg:w="1"/><text x="39.1923%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.9423%" y="549" width="0.0801%" height="15" fill="rgb(230,95,18)" fg:x="486" fg:w="1"/><text x="39.1923%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.9423%" y="533" width="0.0801%" height="15" fill="rgb(232,157,21)" fg:x="486" fg:w="1"/><text x="39.1923%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.9423%" y="517" width="0.0801%" height="15" fill="rgb(212,120,50)" fg:x="486" fg:w="1"/><text x="39.1923%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.9423%" y="501" width="0.0801%" height="15" fill="rgb(222,204,44)" fg:x="486" fg:w="1"/><text x="39.1923%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.9423%" y="485" width="0.0801%" height="15" fill="rgb(236,6,33)" fg:x="486" fg:w="1"/><text x="39.1923%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.9423%" y="469" width="0.0801%" height="15" fill="rgb(247,11,38)" fg:x="486" fg:w="1"/><text x="39.1923%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.9423%" y="453" width="0.0801%" height="15" fill="rgb(215,111,0)" fg:x="486" fg:w="1"/><text x="39.1923%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.9423%" y="437" width="0.0801%" height="15" fill="rgb(211,65,46)" fg:x="486" fg:w="1"/><text x="39.1923%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.9423%" y="421" width="0.0801%" height="15" fill="rgb(216,5,12)" fg:x="486" fg:w="1"/><text x="39.1923%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.9423%" y="405" width="0.0801%" height="15" fill="rgb(226,7,2)" fg:x="486" fg:w="1"/><text x="39.1923%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.9423%" y="389" width="0.0801%" height="15" fill="rgb(242,116,12)" fg:x="486" fg:w="1"/><text x="39.1923%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="39.0224%" y="613" width="0.0801%" height="15" fill="rgb(249,209,7)" fg:x="487" fg:w="1"/><text x="39.2724%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="39.0224%" y="597" width="0.0801%" height="15" fill="rgb(232,73,17)" fg:x="487" fg:w="1"/><text x="39.2724%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.0224%" y="581" width="0.0801%" height="15" fill="rgb(214,13,32)" fg:x="487" fg:w="1"/><text x="39.2724%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="39.1026%" y="597" width="0.0801%" height="15" fill="rgb(221,125,10)" fg:x="488" fg:w="1"/><text x="39.3526%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="39.1026%" y="581" width="0.0801%" height="15" fill="rgb(246,7,44)" fg:x="488" fg:w="1"/><text x="39.3526%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.1026%" y="565" width="0.0801%" height="15" fill="rgb(239,18,35)" fg:x="488" fg:w="1"/><text x="39.3526%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.1827%" y="453" width="0.1603%" height="15" fill="rgb(250,222,16)" fg:x="489" fg:w="2"/><text x="39.4327%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.2628%" y="437" width="0.0801%" height="15" fill="rgb(219,100,8)" fg:x="490" fg:w="1"/><text x="39.5128%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.2628%" y="421" width="0.0801%" height="15" fill="rgb(240,62,13)" fg:x="490" fg:w="1"/><text x="39.5128%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.2628%" y="405" width="0.0801%" height="15" fill="rgb(253,194,2)" fg:x="490" fg:w="1"/><text x="39.5128%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.2628%" y="389" width="0.0801%" height="15" fill="rgb(235,58,31)" fg:x="490" fg:w="1"/><text x="39.5128%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.2628%" y="373" width="0.0801%" height="15" fill="rgb(231,37,11)" fg:x="490" fg:w="1"/><text x="39.5128%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.2628%" y="357" width="0.0801%" height="15" fill="rgb(235,133,0)" fg:x="490" fg:w="1"/><text x="39.5128%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.2628%" y="341" width="0.0801%" height="15" fill="rgb(212,185,40)" fg:x="490" fg:w="1"/><text x="39.5128%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.2628%" y="325" width="0.0801%" height="15" fill="rgb(216,68,42)" fg:x="490" fg:w="1"/><text x="39.5128%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.2628%" y="309" width="0.0801%" height="15" fill="rgb(239,81,4)" fg:x="490" fg:w="1"/><text x="39.5128%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.2628%" y="293" width="0.0801%" height="15" fill="rgb(206,86,6)" fg:x="490" fg:w="1"/><text x="39.5128%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.2628%" y="277" width="0.0801%" height="15" fill="rgb(249,95,27)" fg:x="490" fg:w="1"/><text x="39.5128%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.2628%" y="261" width="0.0801%" height="15" fill="rgb(205,155,45)" fg:x="490" fg:w="1"/><text x="39.5128%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="39.1827%" y="469" width="0.3205%" height="15" fill="rgb(213,55,42)" fg:x="489" fg:w="4"/><text x="39.4327%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="39.3429%" y="453" width="0.1603%" height="15" fill="rgb(249,197,4)" fg:x="491" fg:w="2"/><text x="39.5929%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="39.3429%" y="437" width="0.1603%" height="15" fill="rgb(212,128,32)" fg:x="491" fg:w="2"/><text x="39.5929%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="39.3429%" y="421" width="0.1603%" height="15" fill="rgb(252,47,30)" fg:x="491" fg:w="2"/><text x="39.5929%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="39.3429%" y="405" width="0.1603%" height="15" fill="rgb(209,79,18)" fg:x="491" fg:w="2"/><text x="39.5929%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="39.3429%" y="389" width="0.1603%" height="15" fill="rgb(225,81,38)" fg:x="491" fg:w="2"/><text x="39.5929%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="39.3429%" y="373" width="0.1603%" height="15" fill="rgb(205,95,16)" fg:x="491" fg:w="2"/><text x="39.5929%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="39.3429%" y="357" width="0.1603%" height="15" fill="rgb(214,30,4)" fg:x="491" fg:w="2"/><text x="39.5929%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="39.3429%" y="341" width="0.1603%" height="15" fill="rgb(232,137,22)" fg:x="491" fg:w="2"/><text x="39.5929%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="39.3429%" y="325" width="0.1603%" height="15" fill="rgb(232,156,19)" fg:x="491" fg:w="2"/><text x="39.5929%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="39.3429%" y="309" width="0.1603%" height="15" fill="rgb(248,157,26)" fg:x="491" fg:w="2"/><text x="39.5929%" y="319.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="39.3429%" y="293" width="0.1603%" height="15" fill="rgb(242,24,3)" fg:x="491" fg:w="2"/><text x="39.5929%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="39.3429%" y="277" width="0.1603%" height="15" fill="rgb(218,195,48)" fg:x="491" fg:w="2"/><text x="39.5929%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="39.1827%" y="517" width="0.4006%" height="15" fill="rgb(214,193,36)" fg:x="489" fg:w="5"/><text x="39.4327%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="39.1827%" y="501" width="0.4006%" height="15" fill="rgb(242,110,40)" fg:x="489" fg:w="5"/><text x="39.4327%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="39.1827%" y="485" width="0.4006%" height="15" fill="rgb(233,150,26)" fg:x="489" fg:w="5"/><text x="39.4327%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.5032%" y="469" width="0.0801%" height="15" fill="rgb(239,200,30)" fg:x="493" fg:w="1"/><text x="39.7532%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="39.5833%" y="517" width="0.0801%" height="15" fill="rgb(226,28,11)" fg:x="494" fg:w="1"/><text x="39.8333%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.6635%" y="453" width="0.0801%" height="15" fill="rgb(220,26,48)" fg:x="495" fg:w="1"/><text x="39.9135%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.64%)</title><rect x="39.1827%" y="565" width="0.6410%" height="15" fill="rgb(232,10,11)" fg:x="489" fg:w="8"/><text x="39.4327%" y="575.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.64%)</title><rect x="39.1827%" y="549" width="0.6410%" height="15" fill="rgb(252,143,50)" fg:x="489" fg:w="8"/><text x="39.4327%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="39.1827%" y="533" width="0.6410%" height="15" fill="rgb(206,58,22)" fg:x="489" fg:w="8"/><text x="39.4327%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.6635%" y="517" width="0.1603%" height="15" fill="rgb(250,9,45)" fg:x="495" fg:w="2"/><text x="39.9135%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.6635%" y="501" width="0.1603%" height="15" fill="rgb(225,148,14)" fg:x="495" fg:w="2"/><text x="39.9135%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.6635%" y="485" width="0.1603%" height="15" fill="rgb(205,178,40)" fg:x="495" fg:w="2"/><text x="39.9135%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.6635%" y="469" width="0.1603%" height="15" fill="rgb(215,201,4)" fg:x="495" fg:w="2"/><text x="39.9135%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="39.7436%" y="453" width="0.0801%" height="15" fill="rgb(219,223,24)" fg:x="496" fg:w="1"/><text x="39.9936%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.7436%" y="437" width="0.0801%" height="15" fill="rgb(217,19,31)" fg:x="496" fg:w="1"/><text x="39.9936%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.7436%" y="421" width="0.0801%" height="15" fill="rgb(235,33,3)" fg:x="496" fg:w="1"/><text x="39.9936%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.7436%" y="405" width="0.0801%" height="15" fill="rgb(221,39,18)" fg:x="496" fg:w="1"/><text x="39.9936%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.8237%" y="517" width="0.0801%" height="15" fill="rgb(242,162,33)" fg:x="497" fg:w="1"/><text x="40.0737%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.8237%" y="501" width="0.0801%" height="15" fill="rgb(233,215,28)" fg:x="497" fg:w="1"/><text x="40.0737%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.8237%" y="485" width="0.0801%" height="15" fill="rgb(212,117,9)" fg:x="497" fg:w="1"/><text x="40.0737%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.8237%" y="469" width="0.0801%" height="15" fill="rgb(237,70,47)" fg:x="497" fg:w="1"/><text x="40.0737%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.8237%" y="453" width="0.0801%" height="15" fill="rgb(206,177,13)" fg:x="497" fg:w="1"/><text x="40.0737%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.8237%" y="437" width="0.0801%" height="15" fill="rgb(209,174,33)" fg:x="497" fg:w="1"/><text x="40.0737%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.8237%" y="421" width="0.0801%" height="15" fill="rgb(226,6,11)" fg:x="497" fg:w="1"/><text x="40.0737%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.8237%" y="405" width="0.0801%" height="15" fill="rgb(240,214,6)" fg:x="497" fg:w="1"/><text x="40.0737%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.8237%" y="389" width="0.0801%" height="15" fill="rgb(254,214,40)" fg:x="497" fg:w="1"/><text x="40.0737%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.8237%" y="373" width="0.0801%" height="15" fill="rgb(230,187,15)" fg:x="497" fg:w="1"/><text x="40.0737%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.8237%" y="357" width="0.0801%" height="15" fill="rgb(250,11,27)" fg:x="497" fg:w="1"/><text x="40.0737%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.8237%" y="341" width="0.0801%" height="15" fill="rgb(243,107,19)" fg:x="497" fg:w="1"/><text x="40.0737%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.8237%" y="325" width="0.0801%" height="15" fill="rgb(253,66,26)" fg:x="497" fg:w="1"/><text x="40.0737%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.8237%" y="309" width="0.0801%" height="15" fill="rgb(228,43,8)" fg:x="497" fg:w="1"/><text x="40.0737%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.8237%" y="293" width="0.0801%" height="15" fill="rgb(232,197,36)" fg:x="497" fg:w="1"/><text x="40.0737%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.9038%" y="485" width="0.0801%" height="15" fill="rgb(221,182,31)" fg:x="498" fg:w="1"/><text x="40.1538%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.9038%" y="469" width="0.0801%" height="15" fill="rgb(244,25,36)" fg:x="498" fg:w="1"/><text x="40.1538%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="39.9038%" y="517" width="0.1603%" height="15" fill="rgb(247,101,19)" fg:x="498" fg:w="2"/><text x="40.1538%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="39.9038%" y="501" width="0.1603%" height="15" fill="rgb(223,117,19)" fg:x="498" fg:w="2"/><text x="40.1538%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.9840%" y="485" width="0.0801%" height="15" fill="rgb(249,63,38)" fg:x="499" fg:w="1"/><text x="40.2340%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.9840%" y="469" width="0.0801%" height="15" fill="rgb(220,143,23)" fg:x="499" fg:w="1"/><text x="40.2340%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.9840%" y="453" width="0.0801%" height="15" fill="rgb(252,183,22)" fg:x="499" fg:w="1"/><text x="40.2340%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.9840%" y="437" width="0.0801%" height="15" fill="rgb(243,176,15)" fg:x="499" fg:w="1"/><text x="40.2340%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.1442%" y="485" width="0.0801%" height="15" fill="rgb(244,204,46)" fg:x="501" fg:w="1"/><text x="40.3942%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.1442%" y="469" width="0.0801%" height="15" fill="rgb(227,28,54)" fg:x="501" fg:w="1"/><text x="40.3942%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (14 samples, 1.12%)</title><rect x="39.1827%" y="597" width="1.1218%" height="15" fill="rgb(231,10,15)" fg:x="489" fg:w="14"/><text x="39.4327%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (14 samples, 1.12%)</title><rect x="39.1827%" y="581" width="1.1218%" height="15" fill="rgb(210,200,17)" fg:x="489" fg:w="14"/><text x="39.4327%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="39.8237%" y="565" width="0.4808%" height="15" fill="rgb(251,106,46)" fg:x="497" fg:w="6"/><text x="40.0737%" y="575.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="39.8237%" y="549" width="0.4808%" height="15" fill="rgb(218,211,15)" fg:x="497" fg:w="6"/><text x="40.0737%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="39.8237%" y="533" width="0.4808%" height="15" fill="rgb(239,62,10)" fg:x="497" fg:w="6"/><text x="40.0737%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="40.0641%" y="517" width="0.2404%" height="15" fill="rgb(225,53,53)" fg:x="500" fg:w="3"/><text x="40.3141%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.0641%" y="501" width="0.2404%" height="15" fill="rgb(207,16,24)" fg:x="500" fg:w="3"/><text x="40.3141%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.2244%" y="485" width="0.0801%" height="15" fill="rgb(217,52,28)" fg:x="502" fg:w="1"/><text x="40.4744%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.2244%" y="469" width="0.0801%" height="15" fill="rgb(246,1,5)" fg:x="502" fg:w="1"/><text x="40.4744%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="40.2244%" y="453" width="0.0801%" height="15" fill="rgb(221,29,26)" fg:x="502" fg:w="1"/><text x="40.4744%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.2244%" y="437" width="0.0801%" height="15" fill="rgb(250,133,32)" fg:x="502" fg:w="1"/><text x="40.4744%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.2244%" y="421" width="0.0801%" height="15" fill="rgb(236,63,16)" fg:x="502" fg:w="1"/><text x="40.4744%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.2244%" y="405" width="0.0801%" height="15" fill="rgb(231,159,14)" fg:x="502" fg:w="1"/><text x="40.4744%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.2244%" y="389" width="0.0801%" height="15" fill="rgb(207,102,36)" fg:x="502" fg:w="1"/><text x="40.4744%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.2244%" y="373" width="0.0801%" height="15" fill="rgb(230,224,31)" fg:x="502" fg:w="1"/><text x="40.4744%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.2244%" y="357" width="0.0801%" height="15" fill="rgb(215,182,16)" fg:x="502" fg:w="1"/><text x="40.4744%" y="367.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="40.3045%" y="597" width="0.0801%" height="15" fill="rgb(226,113,2)" fg:x="503" fg:w="1"/><text x="40.5545%" y="607.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="40.3045%" y="581" width="0.0801%" height="15" fill="rgb(241,18,35)" fg:x="503" fg:w="1"/><text x="40.5545%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.3045%" y="565" width="0.0801%" height="15" fill="rgb(240,165,44)" fg:x="503" fg:w="1"/><text x="40.5545%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="40.3045%" y="549" width="0.0801%" height="15" fill="rgb(229,130,47)" fg:x="503" fg:w="1"/><text x="40.5545%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="40.3045%" y="533" width="0.0801%" height="15" fill="rgb(223,93,7)" fg:x="503" fg:w="1"/><text x="40.5545%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.3045%" y="517" width="0.0801%" height="15" fill="rgb(205,180,36)" fg:x="503" fg:w="1"/><text x="40.5545%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="40.3846%" y="581" width="0.0801%" height="15" fill="rgb(221,103,28)" fg:x="504" fg:w="1"/><text x="40.6346%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="40.4647%" y="533" width="0.0801%" height="15" fill="rgb(212,4,3)" fg:x="505" fg:w="1"/><text x="40.7147%" y="543.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="40.5449%" y="533" width="0.0801%" height="15" fill="rgb(209,221,53)" fg:x="506" fg:w="1"/><text x="40.7949%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.7051%" y="453" width="0.0801%" height="15" fill="rgb(233,229,52)" fg:x="508" fg:w="1"/><text x="40.9551%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.7051%" y="437" width="0.0801%" height="15" fill="rgb(254,127,37)" fg:x="508" fg:w="1"/><text x="40.9551%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="40.6250%" y="501" width="0.2404%" height="15" fill="rgb(207,161,26)" fg:x="507" fg:w="3"/><text x="40.8750%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.7051%" y="485" width="0.1603%" height="15" fill="rgb(223,75,5)" fg:x="508" fg:w="2"/><text x="40.9551%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.7051%" y="469" width="0.1603%" height="15" fill="rgb(235,115,52)" fg:x="508" fg:w="2"/><text x="40.9551%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.7853%" y="453" width="0.0801%" height="15" fill="rgb(240,91,46)" fg:x="509" fg:w="1"/><text x="41.0353%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.7853%" y="437" width="0.0801%" height="15" fill="rgb(251,144,21)" fg:x="509" fg:w="1"/><text x="41.0353%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.7853%" y="421" width="0.0801%" height="15" fill="rgb(247,220,47)" fg:x="509" fg:w="1"/><text x="41.0353%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.7853%" y="405" width="0.0801%" height="15" fill="rgb(253,122,1)" fg:x="509" fg:w="1"/><text x="41.0353%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.7853%" y="389" width="0.0801%" height="15" fill="rgb(221,0,24)" fg:x="509" fg:w="1"/><text x="41.0353%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.7853%" y="373" width="0.0801%" height="15" fill="rgb(220,204,54)" fg:x="509" fg:w="1"/><text x="41.0353%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.7853%" y="357" width="0.0801%" height="15" fill="rgb(205,96,25)" fg:x="509" fg:w="1"/><text x="41.0353%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.7853%" y="341" width="0.0801%" height="15" fill="rgb(247,77,20)" fg:x="509" fg:w="1"/><text x="41.0353%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.7853%" y="325" width="0.0801%" height="15" fill="rgb(245,151,8)" fg:x="509" fg:w="1"/><text x="41.0353%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.7853%" y="309" width="0.0801%" height="15" fill="rgb(242,158,39)" fg:x="509" fg:w="1"/><text x="41.0353%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.7853%" y="293" width="0.0801%" height="15" fill="rgb(222,214,50)" fg:x="509" fg:w="1"/><text x="41.0353%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.7853%" y="277" width="0.0801%" height="15" fill="rgb(229,60,39)" fg:x="509" fg:w="1"/><text x="41.0353%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="40.4647%" y="549" width="0.5609%" height="15" fill="rgb(240,148,18)" fg:x="505" fg:w="7"/><text x="40.7147%" y="559.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="40.6250%" y="533" width="0.4006%" height="15" fill="rgb(215,96,11)" fg:x="507" fg:w="5"/><text x="40.8750%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="40.6250%" y="517" width="0.4006%" height="15" fill="rgb(238,162,53)" fg:x="507" fg:w="5"/><text x="40.8750%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="40.8654%" y="501" width="0.1603%" height="15" fill="rgb(214,83,18)" fg:x="510" fg:w="2"/><text x="41.1154%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.8654%" y="485" width="0.1603%" height="15" fill="rgb(248,117,24)" fg:x="510" fg:w="2"/><text x="41.1154%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.9455%" y="469" width="0.0801%" height="15" fill="rgb(238,190,6)" fg:x="511" fg:w="1"/><text x="41.1955%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.9455%" y="453" width="0.0801%" height="15" fill="rgb(213,51,6)" fg:x="511" fg:w="1"/><text x="41.1955%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="40.9455%" y="437" width="0.0801%" height="15" fill="rgb(212,136,1)" fg:x="511" fg:w="1"/><text x="41.1955%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.9455%" y="421" width="0.0801%" height="15" fill="rgb(221,192,14)" fg:x="511" fg:w="1"/><text x="41.1955%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.9455%" y="405" width="0.0801%" height="15" fill="rgb(244,38,54)" fg:x="511" fg:w="1"/><text x="41.1955%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.9455%" y="389" width="0.0801%" height="15" fill="rgb(240,45,28)" fg:x="511" fg:w="1"/><text x="41.1955%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="40.9455%" y="373" width="0.0801%" height="15" fill="rgb(240,123,12)" fg:x="511" fg:w="1"/><text x="41.1955%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.0256%" y="533" width="0.0801%" height="15" fill="rgb(216,14,30)" fg:x="512" fg:w="1"/><text x="41.2756%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.1058%" y="437" width="0.0801%" height="15" fill="rgb(212,50,24)" fg:x="513" fg:w="1"/><text x="41.3558%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.1058%" y="421" width="0.0801%" height="15" fill="rgb(253,229,47)" fg:x="513" fg:w="1"/><text x="41.3558%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.1058%" y="405" width="0.0801%" height="15" fill="rgb(214,26,17)" fg:x="513" fg:w="1"/><text x="41.3558%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.1058%" y="389" width="0.0801%" height="15" fill="rgb(252,60,11)" fg:x="513" fg:w="1"/><text x="41.3558%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.1058%" y="373" width="0.0801%" height="15" fill="rgb(209,59,37)" fg:x="513" fg:w="1"/><text x="41.3558%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.1058%" y="357" width="0.0801%" height="15" fill="rgb(228,126,53)" fg:x="513" fg:w="1"/><text x="41.3558%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.1058%" y="341" width="0.0801%" height="15" fill="rgb(233,99,2)" fg:x="513" fg:w="1"/><text x="41.3558%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.1058%" y="325" width="0.0801%" height="15" fill="rgb(217,106,34)" fg:x="513" fg:w="1"/><text x="41.3558%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.1058%" y="309" width="0.0801%" height="15" fill="rgb(222,46,19)" fg:x="513" fg:w="1"/><text x="41.3558%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.1058%" y="293" width="0.0801%" height="15" fill="rgb(251,87,31)" fg:x="513" fg:w="1"/><text x="41.3558%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.1058%" y="277" width="0.0801%" height="15" fill="rgb(213,70,51)" fg:x="513" fg:w="1"/><text x="41.3558%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.1058%" y="261" width="0.0801%" height="15" fill="rgb(229,144,18)" fg:x="513" fg:w="1"/><text x="41.3558%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.1058%" y="245" width="0.0801%" height="15" fill="rgb(254,60,26)" fg:x="513" fg:w="1"/><text x="41.3558%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="41.1058%" y="453" width="0.1603%" height="15" fill="rgb(243,127,51)" fg:x="513" fg:w="2"/><text x="41.3558%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.1859%" y="437" width="0.0801%" height="15" fill="rgb(221,51,25)" fg:x="514" fg:w="1"/><text x="41.4359%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.1859%" y="421" width="0.0801%" height="15" fill="rgb(205,42,7)" fg:x="514" fg:w="1"/><text x="41.4359%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.1859%" y="405" width="0.0801%" height="15" fill="rgb(236,177,48)" fg:x="514" fg:w="1"/><text x="41.4359%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.1859%" y="389" width="0.0801%" height="15" fill="rgb(226,79,31)" fg:x="514" fg:w="1"/><text x="41.4359%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.1859%" y="373" width="0.0801%" height="15" fill="rgb(216,170,12)" fg:x="514" fg:w="1"/><text x="41.4359%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.1859%" y="357" width="0.0801%" height="15" fill="rgb(208,62,51)" fg:x="514" fg:w="1"/><text x="41.4359%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.1859%" y="341" width="0.0801%" height="15" fill="rgb(254,129,9)" fg:x="514" fg:w="1"/><text x="41.4359%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.1859%" y="325" width="0.0801%" height="15" fill="rgb(243,209,31)" fg:x="514" fg:w="1"/><text x="41.4359%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.1859%" y="309" width="0.0801%" height="15" fill="rgb(213,159,23)" fg:x="514" fg:w="1"/><text x="41.4359%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.1859%" y="293" width="0.0801%" height="15" fill="rgb(249,77,39)" fg:x="514" fg:w="1"/><text x="41.4359%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.1859%" y="277" width="0.0801%" height="15" fill="rgb(230,13,33)" fg:x="514" fg:w="1"/><text x="41.4359%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.1859%" y="261" width="0.0801%" height="15" fill="rgb(215,215,7)" fg:x="514" fg:w="1"/><text x="41.4359%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="41.1058%" y="501" width="0.2404%" height="15" fill="rgb(222,92,25)" fg:x="513" fg:w="3"/><text x="41.3558%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="41.1058%" y="485" width="0.2404%" height="15" fill="rgb(215,173,22)" fg:x="513" fg:w="3"/><text x="41.3558%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="41.1058%" y="469" width="0.2404%" height="15" fill="rgb(247,205,52)" fg:x="513" fg:w="3"/><text x="41.3558%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.2660%" y="453" width="0.0801%" height="15" fill="rgb(240,210,37)" fg:x="515" fg:w="1"/><text x="41.5160%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.3462%" y="501" width="0.0801%" height="15" fill="rgb(224,13,10)" fg:x="516" fg:w="1"/><text x="41.5962%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="41.3462%" y="485" width="0.0801%" height="15" fill="rgb(209,48,33)" fg:x="516" fg:w="1"/><text x="41.5962%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.3462%" y="469" width="0.0801%" height="15" fill="rgb(228,219,23)" fg:x="516" fg:w="1"/><text x="41.5962%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.3462%" y="453" width="0.0801%" height="15" fill="rgb(239,46,49)" fg:x="516" fg:w="1"/><text x="41.5962%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.3462%" y="437" width="0.0801%" height="15" fill="rgb(206,172,51)" fg:x="516" fg:w="1"/><text x="41.5962%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.3462%" y="421" width="0.0801%" height="15" fill="rgb(213,212,35)" fg:x="516" fg:w="1"/><text x="41.5962%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.5064%" y="373" width="0.0801%" height="15" fill="rgb(252,40,27)" fg:x="518" fg:w="1"/><text x="41.7564%" y="383.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (15 samples, 1.20%)</title><rect x="40.4647%" y="581" width="1.2019%" height="15" fill="rgb(212,33,41)" fg:x="505" fg:w="15"/><text x="40.7147%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (15 samples, 1.20%)</title><rect x="40.4647%" y="565" width="1.2019%" height="15" fill="rgb(232,160,27)" fg:x="505" fg:w="15"/><text x="40.7147%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (8 samples, 0.64%)</title><rect x="41.0256%" y="549" width="0.6410%" height="15" fill="rgb(244,160,20)" fg:x="512" fg:w="8"/><text x="41.2756%" y="559.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="41.1058%" y="533" width="0.5609%" height="15" fill="rgb(205,66,20)" fg:x="513" fg:w="7"/><text x="41.3558%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="41.1058%" y="517" width="0.5609%" height="15" fill="rgb(236,158,6)" fg:x="513" fg:w="7"/><text x="41.3558%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="41.4263%" y="501" width="0.2404%" height="15" fill="rgb(232,25,36)" fg:x="517" fg:w="3"/><text x="41.6763%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="41.4263%" y="485" width="0.2404%" height="15" fill="rgb(220,153,35)" fg:x="517" fg:w="3"/><text x="41.6763%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="41.4263%" y="469" width="0.2404%" height="15" fill="rgb(216,5,8)" fg:x="517" fg:w="3"/><text x="41.6763%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="41.4263%" y="453" width="0.2404%" height="15" fill="rgb(240,97,3)" fg:x="517" fg:w="3"/><text x="41.6763%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="41.4263%" y="437" width="0.2404%" height="15" fill="rgb(220,99,26)" fg:x="517" fg:w="3"/><text x="41.6763%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="41.4263%" y="421" width="0.2404%" height="15" fill="rgb(237,96,2)" fg:x="517" fg:w="3"/><text x="41.6763%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.5064%" y="405" width="0.1603%" height="15" fill="rgb(217,197,47)" fg:x="518" fg:w="2"/><text x="41.7564%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.5064%" y="389" width="0.1603%" height="15" fill="rgb(252,133,54)" fg:x="518" fg:w="2"/><text x="41.7564%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.5865%" y="373" width="0.0801%" height="15" fill="rgb(233,37,30)" fg:x="519" fg:w="1"/><text x="41.8365%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.5865%" y="357" width="0.0801%" height="15" fill="rgb(239,182,12)" fg:x="519" fg:w="1"/><text x="41.8365%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="41.5865%" y="341" width="0.0801%" height="15" fill="rgb(245,83,39)" fg:x="519" fg:w="1"/><text x="41.8365%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="41.5865%" y="325" width="0.0801%" height="15" fill="rgb(222,109,36)" fg:x="519" fg:w="1"/><text x="41.8365%" y="335.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (18 samples, 1.44%)</title><rect x="40.3846%" y="597" width="1.4423%" height="15" fill="rgb(237,95,44)" fg:x="504" fg:w="18"/><text x="40.6346%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="41.6667%" y="581" width="0.1603%" height="15" fill="rgb(216,36,54)" fg:x="520" fg:w="2"/><text x="41.9167%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="41.7468%" y="565" width="0.0801%" height="15" fill="rgb(236,164,3)" fg:x="521" fg:w="1"/><text x="41.9968%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="41.7468%" y="549" width="0.0801%" height="15" fill="rgb(223,15,21)" fg:x="521" fg:w="1"/><text x="41.9968%" y="559.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="41.7468%" y="533" width="0.0801%" height="15" fill="rgb(239,191,12)" fg:x="521" fg:w="1"/><text x="41.9968%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="41.8269%" y="581" width="0.0801%" height="15" fill="rgb(231,191,37)" fg:x="522" fg:w="1"/><text x="42.0769%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="41.8269%" y="565" width="0.0801%" height="15" fill="rgb(209,155,36)" fg:x="522" fg:w="1"/><text x="42.0769%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.8269%" y="549" width="0.0801%" height="15" fill="rgb(216,222,49)" fg:x="522" fg:w="1"/><text x="42.0769%" y="559.50"></text></g><g><title>plugins_core::build::Build::holding (51 samples, 4.09%)</title><rect x="37.9006%" y="629" width="4.0865%" height="15" fill="rgb(218,181,2)" fg:x="473" fg:w="51"/><text x="38.1506%" y="639.50">plug..</text></g><g><title>plugins_core::tools::set_container (36 samples, 2.88%)</title><rect x="39.1026%" y="613" width="2.8846%" height="15" fill="rgb(239,125,9)" fg:x="488" fg:w="36"/><text x="39.3526%" y="623.50">pl..</text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="41.8269%" y="597" width="0.1603%" height="15" fill="rgb(233,103,7)" fg:x="522" fg:w="2"/><text x="42.0769%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="41.9071%" y="581" width="0.0801%" height="15" fill="rgb(209,223,5)" fg:x="523" fg:w="1"/><text x="42.1571%" y="591.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="41.9071%" y="565" width="0.0801%" height="15" fill="rgb(234,71,27)" fg:x="523" fg:w="1"/><text x="42.1571%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="41.9071%" y="549" width="0.0801%" height="15" fill="rgb(251,202,16)" fg:x="523" fg:w="1"/><text x="42.1571%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="41.9071%" y="533" width="0.0801%" height="15" fill="rgb(231,180,0)" fg:x="523" fg:w="1"/><text x="42.1571%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="41.9071%" y="517" width="0.0801%" height="15" fill="rgb(223,58,28)" fg:x="523" fg:w="1"/><text x="42.1571%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.9071%" y="501" width="0.0801%" height="15" fill="rgb(250,34,24)" fg:x="523" fg:w="1"/><text x="42.1571%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.9872%" y="549" width="0.0801%" height="15" fill="rgb(235,24,16)" fg:x="524" fg:w="1"/><text x="42.2372%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.9872%" y="533" width="0.0801%" height="15" fill="rgb(219,28,33)" fg:x="524" fg:w="1"/><text x="42.2372%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.9872%" y="517" width="0.0801%" height="15" fill="rgb(228,150,43)" fg:x="524" fg:w="1"/><text x="42.2372%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.9872%" y="501" width="0.0801%" height="15" fill="rgb(221,228,36)" fg:x="524" fg:w="1"/><text x="42.2372%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.9872%" y="485" width="0.0801%" height="15" fill="rgb(232,116,17)" fg:x="524" fg:w="1"/><text x="42.2372%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.9872%" y="469" width="0.0801%" height="15" fill="rgb(220,110,51)" fg:x="524" fg:w="1"/><text x="42.2372%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.9872%" y="453" width="0.0801%" height="15" fill="rgb(207,26,25)" fg:x="524" fg:w="1"/><text x="42.2372%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.9872%" y="437" width="0.0801%" height="15" fill="rgb(223,58,19)" fg:x="524" fg:w="1"/><text x="42.2372%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.9872%" y="421" width="0.0801%" height="15" fill="rgb(234,125,39)" fg:x="524" fg:w="1"/><text x="42.2372%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.9872%" y="405" width="0.0801%" height="15" fill="rgb(241,48,36)" fg:x="524" fg:w="1"/><text x="42.2372%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.9872%" y="389" width="0.0801%" height="15" fill="rgb(217,148,51)" fg:x="524" fg:w="1"/><text x="42.2372%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.9872%" y="373" width="0.0801%" height="15" fill="rgb(247,17,25)" fg:x="524" fg:w="1"/><text x="42.2372%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.9872%" y="357" width="0.0801%" height="15" fill="rgb(219,89,38)" fg:x="524" fg:w="1"/><text x="42.2372%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.9872%" y="341" width="0.0801%" height="15" fill="rgb(220,145,2)" fg:x="524" fg:w="1"/><text x="42.2372%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.9872%" y="325" width="0.0801%" height="15" fill="rgb(244,66,47)" fg:x="524" fg:w="1"/><text x="42.2372%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.9872%" y="309" width="0.0801%" height="15" fill="rgb(226,182,5)" fg:x="524" fg:w="1"/><text x="42.2372%" y="319.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="41.9872%" y="629" width="0.1603%" height="15" fill="rgb(211,98,20)" fg:x="524" fg:w="2"/><text x="42.2372%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="41.9872%" y="613" width="0.1603%" height="15" fill="rgb(217,103,52)" fg:x="524" fg:w="2"/><text x="42.2372%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="41.9872%" y="597" width="0.1603%" height="15" fill="rgb(208,125,52)" fg:x="524" fg:w="2"/><text x="42.2372%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="41.9872%" y="581" width="0.1603%" height="15" fill="rgb(244,70,13)" fg:x="524" fg:w="2"/><text x="42.2372%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="41.9872%" y="565" width="0.1603%" height="15" fill="rgb(253,124,3)" fg:x="524" fg:w="2"/><text x="42.2372%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.0673%" y="549" width="0.0801%" height="15" fill="rgb(222,145,32)" fg:x="525" fg:w="1"/><text x="42.3173%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="42.0673%" y="533" width="0.0801%" height="15" fill="rgb(232,183,47)" fg:x="525" fg:w="1"/><text x="42.3173%" y="543.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="42.1474%" y="597" width="0.0801%" height="15" fill="rgb(246,226,4)" fg:x="526" fg:w="1"/><text x="42.3974%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.1474%" y="581" width="0.0801%" height="15" fill="rgb(228,185,46)" fg:x="526" fg:w="1"/><text x="42.3974%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.3077%" y="533" width="0.0801%" height="15" fill="rgb(213,196,4)" fg:x="528" fg:w="1"/><text x="42.5577%" y="543.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="42.1474%" y="629" width="0.3205%" height="15" fill="rgb(212,2,45)" fg:x="526" fg:w="4"/><text x="42.3974%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="42.1474%" y="613" width="0.3205%" height="15" fill="rgb(217,145,50)" fg:x="526" fg:w="4"/><text x="42.3974%" y="623.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="42.2276%" y="597" width="0.2404%" height="15" fill="rgb(242,10,46)" fg:x="527" fg:w="3"/><text x="42.4776%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="42.2276%" y="581" width="0.2404%" height="15" fill="rgb(252,91,48)" fg:x="527" fg:w="3"/><text x="42.4776%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="42.3077%" y="565" width="0.1603%" height="15" fill="rgb(216,72,13)" fg:x="528" fg:w="2"/><text x="42.5577%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="42.3077%" y="549" width="0.1603%" height="15" fill="rgb(219,6,37)" fg:x="528" fg:w="2"/><text x="42.5577%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="42.3878%" y="533" width="0.0801%" height="15" fill="rgb(236,185,40)" fg:x="529" fg:w="1"/><text x="42.6378%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.3878%" y="517" width="0.0801%" height="15" fill="rgb(208,81,48)" fg:x="529" fg:w="1"/><text x="42.6378%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="42.3878%" y="501" width="0.0801%" height="15" fill="rgb(211,42,33)" fg:x="529" fg:w="1"/><text x="42.6378%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="42.3878%" y="485" width="0.0801%" height="15" fill="rgb(211,90,39)" fg:x="529" fg:w="1"/><text x="42.6378%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="42.3878%" y="469" width="0.0801%" height="15" fill="rgb(218,136,12)" fg:x="529" fg:w="1"/><text x="42.6378%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.3878%" y="453" width="0.0801%" height="15" fill="rgb(234,12,32)" fg:x="529" fg:w="1"/><text x="42.6378%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="42.5481%" y="597" width="0.1603%" height="15" fill="rgb(221,164,18)" fg:x="531" fg:w="2"/><text x="42.7981%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="42.5481%" y="581" width="0.1603%" height="15" fill="rgb(239,135,14)" fg:x="531" fg:w="2"/><text x="42.7981%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="42.5481%" y="565" width="0.1603%" height="15" fill="rgb(226,198,47)" fg:x="531" fg:w="2"/><text x="42.7981%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="42.5481%" y="549" width="0.1603%" height="15" fill="rgb(244,121,47)" fg:x="531" fg:w="2"/><text x="42.7981%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="42.5481%" y="533" width="0.1603%" height="15" fill="rgb(226,21,48)" fg:x="531" fg:w="2"/><text x="42.7981%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="42.5481%" y="517" width="0.1603%" height="15" fill="rgb(215,178,47)" fg:x="531" fg:w="2"/><text x="42.7981%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="42.5481%" y="501" width="0.1603%" height="15" fill="rgb(206,212,19)" fg:x="531" fg:w="2"/><text x="42.7981%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="42.5481%" y="485" width="0.1603%" height="15" fill="rgb(230,104,34)" fg:x="531" fg:w="2"/><text x="42.7981%" y="495.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="42.5481%" y="469" width="0.1603%" height="15" fill="rgb(210,96,51)" fg:x="531" fg:w="2"/><text x="42.7981%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="42.5481%" y="453" width="0.1603%" height="15" fill="rgb(229,111,47)" fg:x="531" fg:w="2"/><text x="42.7981%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="42.5481%" y="437" width="0.1603%" height="15" fill="rgb(218,174,45)" fg:x="531" fg:w="2"/><text x="42.7981%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="42.5481%" y="421" width="0.1603%" height="15" fill="rgb(215,21,32)" fg:x="531" fg:w="2"/><text x="42.7981%" y="431.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="42.5481%" y="405" width="0.1603%" height="15" fill="rgb(235,72,21)" fg:x="531" fg:w="2"/><text x="42.7981%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="42.5481%" y="389" width="0.1603%" height="15" fill="rgb(250,113,30)" fg:x="531" fg:w="2"/><text x="42.7981%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="42.5481%" y="373" width="0.1603%" height="15" fill="rgb(244,136,34)" fg:x="531" fg:w="2"/><text x="42.7981%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="42.5481%" y="357" width="0.1603%" height="15" fill="rgb(213,226,47)" fg:x="531" fg:w="2"/><text x="42.7981%" y="367.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="42.5481%" y="341" width="0.1603%" height="15" fill="rgb(224,136,40)" fg:x="531" fg:w="2"/><text x="42.7981%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="42.6282%" y="325" width="0.0801%" height="15" fill="rgb(253,124,12)" fg:x="532" fg:w="1"/><text x="42.8782%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.6282%" y="309" width="0.0801%" height="15" fill="rgb(210,67,8)" fg:x="532" fg:w="1"/><text x="42.8782%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.6282%" y="293" width="0.0801%" height="15" fill="rgb(210,204,0)" fg:x="532" fg:w="1"/><text x="42.8782%" y="303.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="42.6282%" y="277" width="0.0801%" height="15" fill="rgb(217,179,22)" fg:x="532" fg:w="1"/><text x="42.8782%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="42.6282%" y="261" width="0.0801%" height="15" fill="rgb(237,192,33)" fg:x="532" fg:w="1"/><text x="42.8782%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="42.6282%" y="245" width="0.0801%" height="15" fill="rgb(211,104,28)" fg:x="532" fg:w="1"/><text x="42.8782%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="42.6282%" y="229" width="0.0801%" height="15" fill="rgb(214,75,30)" fg:x="532" fg:w="1"/><text x="42.8782%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="42.6282%" y="213" width="0.0801%" height="15" fill="rgb(220,227,12)" fg:x="532" fg:w="1"/><text x="42.8782%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="42.6282%" y="197" width="0.0801%" height="15" fill="rgb(233,134,28)" fg:x="532" fg:w="1"/><text x="42.8782%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="42.6282%" y="181" width="0.0801%" height="15" fill="rgb(215,146,24)" fg:x="532" fg:w="1"/><text x="42.8782%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="42.6282%" y="165" width="0.0801%" height="15" fill="rgb(248,227,20)" fg:x="532" fg:w="1"/><text x="42.8782%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="42.6282%" y="149" width="0.0801%" height="15" fill="rgb(250,44,42)" fg:x="532" fg:w="1"/><text x="42.8782%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="42.6282%" y="133" width="0.0801%" height="15" fill="rgb(219,5,35)" fg:x="532" fg:w="1"/><text x="42.8782%" y="143.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="42.6282%" y="117" width="0.0801%" height="15" fill="rgb(241,132,32)" fg:x="532" fg:w="1"/><text x="42.8782%" y="127.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="42.6282%" y="101" width="0.0801%" height="15" fill="rgb(234,212,51)" fg:x="532" fg:w="1"/><text x="42.8782%" y="111.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="42.6282%" y="85" width="0.0801%" height="15" fill="rgb(242,173,29)" fg:x="532" fg:w="1"/><text x="42.8782%" y="95.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.7083%" y="501" width="0.0801%" height="15" fill="rgb(212,159,2)" fg:x="533" fg:w="1"/><text x="42.9583%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.7083%" y="485" width="0.0801%" height="15" fill="rgb(238,165,31)" fg:x="533" fg:w="1"/><text x="42.9583%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.7083%" y="469" width="0.0801%" height="15" fill="rgb(241,57,36)" fg:x="533" fg:w="1"/><text x="42.9583%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.7083%" y="453" width="0.0801%" height="15" fill="rgb(249,7,4)" fg:x="533" fg:w="1"/><text x="42.9583%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.7083%" y="437" width="0.0801%" height="15" fill="rgb(250,137,44)" fg:x="533" fg:w="1"/><text x="42.9583%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.7083%" y="421" width="0.0801%" height="15" fill="rgb(244,185,1)" fg:x="533" fg:w="1"/><text x="42.9583%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.7083%" y="405" width="0.0801%" height="15" fill="rgb(216,5,53)" fg:x="533" fg:w="1"/><text x="42.9583%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.7083%" y="389" width="0.0801%" height="15" fill="rgb(234,89,21)" fg:x="533" fg:w="1"/><text x="42.9583%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.7083%" y="373" width="0.0801%" height="15" fill="rgb(250,81,43)" fg:x="533" fg:w="1"/><text x="42.9583%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.7083%" y="357" width="0.0801%" height="15" fill="rgb(243,132,11)" fg:x="533" fg:w="1"/><text x="42.9583%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.7083%" y="341" width="0.0801%" height="15" fill="rgb(253,159,28)" fg:x="533" fg:w="1"/><text x="42.9583%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.7083%" y="325" width="0.0801%" height="15" fill="rgb(237,167,34)" fg:x="533" fg:w="1"/><text x="42.9583%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.7083%" y="549" width="0.1603%" height="15" fill="rgb(237,16,50)" fg:x="533" fg:w="2"/><text x="42.9583%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.7083%" y="533" width="0.1603%" height="15" fill="rgb(247,125,2)" fg:x="533" fg:w="2"/><text x="42.9583%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.7083%" y="517" width="0.1603%" height="15" fill="rgb(254,35,3)" fg:x="533" fg:w="2"/><text x="42.9583%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.7885%" y="501" width="0.0801%" height="15" fill="rgb(237,209,21)" fg:x="534" fg:w="1"/><text x="43.0385%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="42.7083%" y="597" width="0.3205%" height="15" fill="rgb(224,122,20)" fg:x="533" fg:w="4"/><text x="42.9583%" y="607.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="42.7083%" y="581" width="0.3205%" height="15" fill="rgb(224,11,46)" fg:x="533" fg:w="4"/><text x="42.9583%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="42.7083%" y="565" width="0.3205%" height="15" fill="rgb(248,21,33)" fg:x="533" fg:w="4"/><text x="42.9583%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="42.8686%" y="549" width="0.1603%" height="15" fill="rgb(222,144,7)" fg:x="535" fg:w="2"/><text x="43.1186%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="42.8686%" y="533" width="0.1603%" height="15" fill="rgb(205,141,37)" fg:x="535" fg:w="2"/><text x="43.1186%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="42.8686%" y="517" width="0.1603%" height="15" fill="rgb(237,130,8)" fg:x="535" fg:w="2"/><text x="43.1186%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="42.8686%" y="501" width="0.1603%" height="15" fill="rgb(209,179,39)" fg:x="535" fg:w="2"/><text x="43.1186%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="42.8686%" y="485" width="0.1603%" height="15" fill="rgb(207,52,17)" fg:x="535" fg:w="2"/><text x="43.1186%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="42.8686%" y="469" width="0.1603%" height="15" fill="rgb(253,158,17)" fg:x="535" fg:w="2"/><text x="43.1186%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="42.8686%" y="453" width="0.1603%" height="15" fill="rgb(208,19,53)" fg:x="535" fg:w="2"/><text x="43.1186%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="42.8686%" y="437" width="0.1603%" height="15" fill="rgb(233,152,13)" fg:x="535" fg:w="2"/><text x="43.1186%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="42.9487%" y="421" width="0.0801%" height="15" fill="rgb(231,84,1)" fg:x="536" fg:w="1"/><text x="43.1987%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="43.0288%" y="565" width="0.0801%" height="15" fill="rgb(229,142,48)" fg:x="537" fg:w="1"/><text x="43.2788%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="43.0288%" y="549" width="0.0801%" height="15" fill="rgb(248,70,29)" fg:x="537" fg:w="1"/><text x="43.2788%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.0288%" y="533" width="0.0801%" height="15" fill="rgb(250,85,7)" fg:x="537" fg:w="1"/><text x="43.2788%" y="543.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="43.0288%" y="597" width="0.1603%" height="15" fill="rgb(235,140,43)" fg:x="537" fg:w="2"/><text x="43.2788%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="43.0288%" y="581" width="0.1603%" height="15" fill="rgb(216,0,5)" fg:x="537" fg:w="2"/><text x="43.2788%" y="591.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="43.1090%" y="565" width="0.0801%" height="15" fill="rgb(223,167,29)" fg:x="538" fg:w="1"/><text x="43.3590%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.1090%" y="549" width="0.0801%" height="15" fill="rgb(229,150,33)" fg:x="538" fg:w="1"/><text x="43.3590%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="43.1090%" y="533" width="0.0801%" height="15" fill="rgb(227,26,52)" fg:x="538" fg:w="1"/><text x="43.3590%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.1090%" y="517" width="0.0801%" height="15" fill="rgb(250,60,52)" fg:x="538" fg:w="1"/><text x="43.3590%" y="527.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="43.1090%" y="501" width="0.0801%" height="15" fill="rgb(228,81,46)" fg:x="538" fg:w="1"/><text x="43.3590%" y="511.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="43.1090%" y="485" width="0.0801%" height="15" fill="rgb(225,218,31)" fg:x="538" fg:w="1"/><text x="43.3590%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.1891%" y="517" width="0.0801%" height="15" fill="rgb(230,35,16)" fg:x="539" fg:w="1"/><text x="43.4391%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="43.1891%" y="549" width="0.1603%" height="15" fill="rgb(247,100,0)" fg:x="539" fg:w="2"/><text x="43.4391%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="43.1891%" y="533" width="0.1603%" height="15" fill="rgb(223,135,11)" fg:x="539" fg:w="2"/><text x="43.4391%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.2692%" y="517" width="0.0801%" height="15" fill="rgb(207,136,0)" fg:x="540" fg:w="1"/><text x="43.5192%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.2692%" y="501" width="0.0801%" height="15" fill="rgb(246,131,25)" fg:x="540" fg:w="1"/><text x="43.5192%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.2692%" y="485" width="0.0801%" height="15" fill="rgb(209,47,12)" fg:x="540" fg:w="1"/><text x="43.5192%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.2692%" y="469" width="0.0801%" height="15" fill="rgb(221,25,16)" fg:x="540" fg:w="1"/><text x="43.5192%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="43.2692%" y="453" width="0.0801%" height="15" fill="rgb(223,164,33)" fg:x="540" fg:w="1"/><text x="43.5192%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.2692%" y="437" width="0.0801%" height="15" fill="rgb(220,26,23)" fg:x="540" fg:w="1"/><text x="43.5192%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.2692%" y="421" width="0.0801%" height="15" fill="rgb(231,224,1)" fg:x="540" fg:w="1"/><text x="43.5192%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.2692%" y="405" width="0.0801%" height="15" fill="rgb(229,221,24)" fg:x="540" fg:w="1"/><text x="43.5192%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.2692%" y="389" width="0.0801%" height="15" fill="rgb(213,34,10)" fg:x="540" fg:w="1"/><text x="43.5192%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.2692%" y="373" width="0.0801%" height="15" fill="rgb(215,33,11)" fg:x="540" fg:w="1"/><text x="43.5192%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.2692%" y="357" width="0.0801%" height="15" fill="rgb(216,20,41)" fg:x="540" fg:w="1"/><text x="43.5192%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.3494%" y="517" width="0.0801%" height="15" fill="rgb(228,43,31)" fg:x="541" fg:w="1"/><text x="43.5994%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="43.3494%" y="501" width="0.0801%" height="15" fill="rgb(227,83,26)" fg:x="541" fg:w="1"/><text x="43.5994%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.3494%" y="485" width="0.0801%" height="15" fill="rgb(217,168,19)" fg:x="541" fg:w="1"/><text x="43.5994%" y="495.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="43.1891%" y="581" width="0.4006%" height="15" fill="rgb(231,34,33)" fg:x="539" fg:w="5"/><text x="43.4391%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="43.1891%" y="565" width="0.4006%" height="15" fill="rgb(230,120,51)" fg:x="539" fg:w="5"/><text x="43.4391%" y="575.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="43.3494%" y="549" width="0.2404%" height="15" fill="rgb(215,138,27)" fg:x="541" fg:w="3"/><text x="43.5994%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="43.3494%" y="533" width="0.2404%" height="15" fill="rgb(246,80,47)" fg:x="541" fg:w="3"/><text x="43.5994%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="43.4295%" y="517" width="0.1603%" height="15" fill="rgb(215,57,53)" fg:x="542" fg:w="2"/><text x="43.6795%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="43.4295%" y="501" width="0.1603%" height="15" fill="rgb(229,137,5)" fg:x="542" fg:w="2"/><text x="43.6795%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="43.4295%" y="485" width="0.1603%" height="15" fill="rgb(210,86,2)" fg:x="542" fg:w="2"/><text x="43.6795%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="43.4295%" y="469" width="0.1603%" height="15" fill="rgb(231,226,51)" fg:x="542" fg:w="2"/><text x="43.6795%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="43.4295%" y="453" width="0.1603%" height="15" fill="rgb(216,62,29)" fg:x="542" fg:w="2"/><text x="43.6795%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="43.4295%" y="437" width="0.1603%" height="15" fill="rgb(248,202,3)" fg:x="542" fg:w="2"/><text x="43.6795%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="43.4295%" y="421" width="0.1603%" height="15" fill="rgb(225,181,7)" fg:x="542" fg:w="2"/><text x="43.6795%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="43.4295%" y="405" width="0.1603%" height="15" fill="rgb(247,170,54)" fg:x="542" fg:w="2"/><text x="43.6795%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="43.4295%" y="389" width="0.1603%" height="15" fill="rgb(236,204,33)" fg:x="542" fg:w="2"/><text x="43.6795%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="43.4295%" y="373" width="0.1603%" height="15" fill="rgb(216,45,30)" fg:x="542" fg:w="2"/><text x="43.6795%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="43.5096%" y="357" width="0.0801%" height="15" fill="rgb(213,203,16)" fg:x="543" fg:w="1"/><text x="43.7596%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.12%)</title><rect x="42.5481%" y="613" width="1.1218%" height="15" fill="rgb(215,46,16)" fg:x="531" fg:w="14"/><text x="42.7981%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="43.1891%" y="597" width="0.4808%" height="15" fill="rgb(217,162,46)" fg:x="539" fg:w="6"/><text x="43.4391%" y="607.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="43.5897%" y="581" width="0.0801%" height="15" fill="rgb(224,189,20)" fg:x="544" fg:w="1"/><text x="43.8397%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.5897%" y="565" width="0.0801%" height="15" fill="rgb(232,35,51)" fg:x="544" fg:w="1"/><text x="43.8397%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.6699%" y="469" width="0.0801%" height="15" fill="rgb(243,221,46)" fg:x="545" fg:w="1"/><text x="43.9199%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.6699%" y="453" width="0.0801%" height="15" fill="rgb(248,16,16)" fg:x="545" fg:w="1"/><text x="43.9199%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.6699%" y="437" width="0.0801%" height="15" fill="rgb(220,168,13)" fg:x="545" fg:w="1"/><text x="43.9199%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.6699%" y="421" width="0.0801%" height="15" fill="rgb(243,102,39)" fg:x="545" fg:w="1"/><text x="43.9199%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.6699%" y="405" width="0.0801%" height="15" fill="rgb(245,82,32)" fg:x="545" fg:w="1"/><text x="43.9199%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.6699%" y="389" width="0.0801%" height="15" fill="rgb(230,164,19)" fg:x="545" fg:w="1"/><text x="43.9199%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.6699%" y="373" width="0.0801%" height="15" fill="rgb(221,9,41)" fg:x="545" fg:w="1"/><text x="43.9199%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.6699%" y="357" width="0.0801%" height="15" fill="rgb(216,93,0)" fg:x="545" fg:w="1"/><text x="43.9199%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="43.6699%" y="501" width="0.1603%" height="15" fill="rgb(235,113,9)" fg:x="545" fg:w="2"/><text x="43.9199%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="43.6699%" y="485" width="0.1603%" height="15" fill="rgb(209,224,10)" fg:x="545" fg:w="2"/><text x="43.9199%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.7500%" y="469" width="0.0801%" height="15" fill="rgb(226,54,34)" fg:x="546" fg:w="1"/><text x="44.0000%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="43.6699%" y="517" width="0.2404%" height="15" fill="rgb(222,60,8)" fg:x="545" fg:w="3"/><text x="43.9199%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.8301%" y="501" width="0.0801%" height="15" fill="rgb(248,228,41)" fg:x="547" fg:w="1"/><text x="44.0801%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="43.6699%" y="565" width="0.4006%" height="15" fill="rgb(226,31,32)" fg:x="545" fg:w="5"/><text x="43.9199%" y="575.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="43.6699%" y="549" width="0.4006%" height="15" fill="rgb(242,132,49)" fg:x="545" fg:w="5"/><text x="43.9199%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="43.6699%" y="533" width="0.4006%" height="15" fill="rgb(224,194,19)" fg:x="545" fg:w="5"/><text x="43.9199%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="43.9103%" y="517" width="0.1603%" height="15" fill="rgb(232,200,51)" fg:x="548" fg:w="2"/><text x="44.1603%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.9103%" y="501" width="0.1603%" height="15" fill="rgb(235,60,46)" fg:x="548" fg:w="2"/><text x="44.1603%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.9904%" y="485" width="0.0801%" height="15" fill="rgb(240,109,52)" fg:x="549" fg:w="1"/><text x="44.2404%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.9904%" y="469" width="0.0801%" height="15" fill="rgb(215,78,37)" fg:x="549" fg:w="1"/><text x="44.2404%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="43.9904%" y="453" width="0.0801%" height="15" fill="rgb(225,141,7)" fg:x="549" fg:w="1"/><text x="44.2404%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.9904%" y="437" width="0.0801%" height="15" fill="rgb(216,102,54)" fg:x="549" fg:w="1"/><text x="44.2404%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.9904%" y="421" width="0.0801%" height="15" fill="rgb(238,143,13)" fg:x="549" fg:w="1"/><text x="44.2404%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.9904%" y="405" width="0.0801%" height="15" fill="rgb(219,45,51)" fg:x="549" fg:w="1"/><text x="44.2404%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.9904%" y="389" width="0.0801%" height="15" fill="rgb(242,105,46)" fg:x="549" fg:w="1"/><text x="44.2404%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="43.6699%" y="597" width="0.4808%" height="15" fill="rgb(206,154,49)" fg:x="545" fg:w="6"/><text x="43.9199%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="43.6699%" y="581" width="0.4808%" height="15" fill="rgb(239,215,4)" fg:x="545" fg:w="6"/><text x="43.9199%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="44.0705%" y="565" width="0.0801%" height="15" fill="rgb(238,82,17)" fg:x="550" fg:w="1"/><text x="44.3205%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="44.0705%" y="549" width="0.0801%" height="15" fill="rgb(242,49,30)" fg:x="550" fg:w="1"/><text x="44.3205%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="44.0705%" y="533" width="0.0801%" height="15" fill="rgb(248,5,16)" fg:x="550" fg:w="1"/><text x="44.3205%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.0705%" y="517" width="0.0801%" height="15" fill="rgb(237,138,32)" fg:x="550" fg:w="1"/><text x="44.3205%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.0705%" y="501" width="0.0801%" height="15" fill="rgb(235,79,45)" fg:x="550" fg:w="1"/><text x="44.3205%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.0705%" y="485" width="0.0801%" height="15" fill="rgb(213,105,25)" fg:x="550" fg:w="1"/><text x="44.3205%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.0705%" y="469" width="0.0801%" height="15" fill="rgb(251,131,7)" fg:x="550" fg:w="1"/><text x="44.3205%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.0705%" y="453" width="0.0801%" height="15" fill="rgb(211,155,7)" fg:x="550" fg:w="1"/><text x="44.3205%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.0705%" y="437" width="0.0801%" height="15" fill="rgb(243,70,15)" fg:x="550" fg:w="1"/><text x="44.3205%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.0705%" y="421" width="0.0801%" height="15" fill="rgb(215,171,2)" fg:x="550" fg:w="1"/><text x="44.3205%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.0705%" y="405" width="0.0801%" height="15" fill="rgb(244,121,35)" fg:x="550" fg:w="1"/><text x="44.3205%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.0705%" y="389" width="0.0801%" height="15" fill="rgb(249,147,17)" fg:x="550" fg:w="1"/><text x="44.3205%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.0705%" y="373" width="0.0801%" height="15" fill="rgb(241,193,52)" fg:x="550" fg:w="1"/><text x="44.3205%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.0705%" y="357" width="0.0801%" height="15" fill="rgb(217,159,39)" fg:x="550" fg:w="1"/><text x="44.3205%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.0705%" y="341" width="0.0801%" height="15" fill="rgb(248,110,0)" fg:x="550" fg:w="1"/><text x="44.3205%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.0705%" y="325" width="0.0801%" height="15" fill="rgb(233,227,0)" fg:x="550" fg:w="1"/><text x="44.3205%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.0705%" y="309" width="0.0801%" height="15" fill="rgb(252,55,2)" fg:x="550" fg:w="1"/><text x="44.3205%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.0705%" y="293" width="0.0801%" height="15" fill="rgb(224,194,24)" fg:x="550" fg:w="1"/><text x="44.3205%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.0705%" y="277" width="0.0801%" height="15" fill="rgb(247,5,33)" fg:x="550" fg:w="1"/><text x="44.3205%" y="287.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="44.1506%" y="581" width="0.0801%" height="15" fill="rgb(242,66,47)" fg:x="551" fg:w="1"/><text x="44.4006%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.1506%" y="565" width="0.0801%" height="15" fill="rgb(213,107,12)" fg:x="551" fg:w="1"/><text x="44.4006%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="44.1506%" y="549" width="0.0801%" height="15" fill="rgb(206,131,1)" fg:x="551" fg:w="1"/><text x="44.4006%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="44.1506%" y="533" width="0.0801%" height="15" fill="rgb(214,9,36)" fg:x="551" fg:w="1"/><text x="44.4006%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.1506%" y="517" width="0.0801%" height="15" fill="rgb(251,215,18)" fg:x="551" fg:w="1"/><text x="44.4006%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.1506%" y="501" width="0.0801%" height="15" fill="rgb(251,64,9)" fg:x="551" fg:w="1"/><text x="44.4006%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.1506%" y="485" width="0.0801%" height="15" fill="rgb(235,68,21)" fg:x="551" fg:w="1"/><text x="44.4006%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="44.1506%" y="469" width="0.0801%" height="15" fill="rgb(240,69,38)" fg:x="551" fg:w="1"/><text x="44.4006%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="44.1506%" y="597" width="0.1603%" height="15" fill="rgb(231,18,27)" fg:x="551" fg:w="2"/><text x="44.4006%" y="607.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="44.2308%" y="581" width="0.0801%" height="15" fill="rgb(215,154,25)" fg:x="552" fg:w="1"/><text x="44.4808%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.2308%" y="565" width="0.0801%" height="15" fill="rgb(224,33,46)" fg:x="552" fg:w="1"/><text x="44.4808%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.3109%" y="501" width="0.0801%" height="15" fill="rgb(248,191,53)" fg:x="553" fg:w="1"/><text x="44.5609%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.3109%" y="485" width="0.0801%" height="15" fill="rgb(231,3,37)" fg:x="553" fg:w="1"/><text x="44.5609%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.3109%" y="469" width="0.0801%" height="15" fill="rgb(209,152,2)" fg:x="553" fg:w="1"/><text x="44.5609%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.3910%" y="373" width="0.0801%" height="15" fill="rgb(212,208,43)" fg:x="554" fg:w="1"/><text x="44.6410%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="44.3109%" y="549" width="0.2404%" height="15" fill="rgb(208,60,49)" fg:x="553" fg:w="3"/><text x="44.5609%" y="559.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="44.3109%" y="533" width="0.2404%" height="15" fill="rgb(245,135,6)" fg:x="553" fg:w="3"/><text x="44.5609%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="44.3109%" y="517" width="0.2404%" height="15" fill="rgb(243,86,23)" fg:x="553" fg:w="3"/><text x="44.5609%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="44.3910%" y="501" width="0.1603%" height="15" fill="rgb(223,7,20)" fg:x="554" fg:w="2"/><text x="44.6410%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.3910%" y="485" width="0.1603%" height="15" fill="rgb(212,182,17)" fg:x="554" fg:w="2"/><text x="44.6410%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="44.3910%" y="469" width="0.1603%" height="15" fill="rgb(237,94,50)" fg:x="554" fg:w="2"/><text x="44.6410%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.3910%" y="453" width="0.1603%" height="15" fill="rgb(232,185,44)" fg:x="554" fg:w="2"/><text x="44.6410%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="44.3910%" y="437" width="0.1603%" height="15" fill="rgb(205,50,36)" fg:x="554" fg:w="2"/><text x="44.6410%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.3910%" y="421" width="0.1603%" height="15" fill="rgb(252,32,32)" fg:x="554" fg:w="2"/><text x="44.6410%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="44.3910%" y="405" width="0.1603%" height="15" fill="rgb(241,123,33)" fg:x="554" fg:w="2"/><text x="44.6410%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.3910%" y="389" width="0.1603%" height="15" fill="rgb(212,140,16)" fg:x="554" fg:w="2"/><text x="44.6410%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.4712%" y="373" width="0.0801%" height="15" fill="rgb(247,132,5)" fg:x="555" fg:w="1"/><text x="44.7212%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.4712%" y="357" width="0.0801%" height="15" fill="rgb(209,137,38)" fg:x="555" fg:w="1"/><text x="44.7212%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="44.4712%" y="341" width="0.0801%" height="15" fill="rgb(248,32,42)" fg:x="555" fg:w="1"/><text x="44.7212%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="44.4712%" y="325" width="0.0801%" height="15" fill="rgb(216,188,40)" fg:x="555" fg:w="1"/><text x="44.7212%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="44.5513%" y="405" width="0.0801%" height="15" fill="rgb(209,127,53)" fg:x="556" fg:w="1"/><text x="44.8013%" y="415.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (289 samples, 23.16%)</title><rect x="21.6346%" y="645" width="23.1571%" height="15" fill="rgb(254,162,9)" fg:x="270" fg:w="289"/><text x="21.8846%" y="655.50">plugins_core::build::BuildSurrounding..</text></g><g><title>plugins_core::build::Build::occupying (29 samples, 2.32%)</title><rect x="42.4679%" y="629" width="2.3237%" height="15" fill="rgb(219,183,10)" fg:x="530" fg:w="29"/><text x="42.7179%" y="639.50">p..</text></g><g><title>plugins_core::tools::set_occupying (14 samples, 1.12%)</title><rect x="43.6699%" y="613" width="1.1218%" height="15" fill="rgb(217,192,21)" fg:x="545" fg:w="14"/><text x="43.9199%" y="623.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (6 samples, 0.48%)</title><rect x="44.3109%" y="597" width="0.4808%" height="15" fill="rgb(251,89,27)" fg:x="553" fg:w="6"/><text x="44.5609%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="44.3109%" y="581" width="0.4808%" height="15" fill="rgb(253,55,28)" fg:x="553" fg:w="6"/><text x="44.5609%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="44.3109%" y="565" width="0.4808%" height="15" fill="rgb(216,159,8)" fg:x="553" fg:w="6"/><text x="44.5609%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="44.5513%" y="549" width="0.2404%" height="15" fill="rgb(231,228,44)" fg:x="556" fg:w="3"/><text x="44.8013%" y="559.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="44.5513%" y="533" width="0.2404%" height="15" fill="rgb(247,34,48)" fg:x="556" fg:w="3"/><text x="44.8013%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="44.5513%" y="517" width="0.2404%" height="15" fill="rgb(247,222,18)" fg:x="556" fg:w="3"/><text x="44.8013%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="44.5513%" y="501" width="0.2404%" height="15" fill="rgb(227,49,4)" fg:x="556" fg:w="3"/><text x="44.8013%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="44.5513%" y="485" width="0.2404%" height="15" fill="rgb(219,189,53)" fg:x="556" fg:w="3"/><text x="44.8013%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="44.5513%" y="469" width="0.2404%" height="15" fill="rgb(241,160,53)" fg:x="556" fg:w="3"/><text x="44.8013%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="44.5513%" y="453" width="0.2404%" height="15" fill="rgb(227,115,4)" fg:x="556" fg:w="3"/><text x="44.8013%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="44.5513%" y="437" width="0.2404%" height="15" fill="rgb(215,28,28)" fg:x="556" fg:w="3"/><text x="44.8013%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="44.5513%" y="421" width="0.2404%" height="15" fill="rgb(237,143,40)" fg:x="556" fg:w="3"/><text x="44.8013%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="44.6314%" y="405" width="0.1603%" height="15" fill="rgb(205,107,24)" fg:x="557" fg:w="2"/><text x="44.8814%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.7115%" y="389" width="0.0801%" height="15" fill="rgb(209,112,35)" fg:x="558" fg:w="1"/><text x="44.9615%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.7115%" y="373" width="0.0801%" height="15" fill="rgb(206,135,5)" fg:x="558" fg:w="1"/><text x="44.9615%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.7115%" y="357" width="0.0801%" height="15" fill="rgb(227,217,38)" fg:x="558" fg:w="1"/><text x="44.9615%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="44.7917%" y="613" width="0.1603%" height="15" fill="rgb(205,0,41)" fg:x="559" fg:w="2"/><text x="45.0417%" y="623.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="44.8718%" y="597" width="0.0801%" height="15" fill="rgb(220,20,40)" fg:x="560" fg:w="1"/><text x="45.1218%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.8718%" y="581" width="0.0801%" height="15" fill="rgb(216,145,3)" fg:x="560" fg:w="1"/><text x="45.1218%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="44.8718%" y="565" width="0.0801%" height="15" fill="rgb(207,130,51)" fg:x="560" fg:w="1"/><text x="45.1218%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.9519%" y="549" width="0.0801%" height="15" fill="rgb(252,93,13)" fg:x="561" fg:w="1"/><text x="45.2019%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="45.0321%" y="549" width="0.0801%" height="15" fill="rgb(210,105,15)" fg:x="562" fg:w="1"/><text x="45.2821%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="45.0321%" y="533" width="0.0801%" height="15" fill="rgb(212,126,31)" fg:x="562" fg:w="1"/><text x="45.2821%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="44.9519%" y="597" width="0.2404%" height="15" fill="rgb(241,167,46)" fg:x="561" fg:w="3"/><text x="45.2019%" y="607.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="44.9519%" y="581" width="0.2404%" height="15" fill="rgb(217,143,19)" fg:x="561" fg:w="3"/><text x="45.2019%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="44.9519%" y="565" width="0.2404%" height="15" fill="rgb(235,117,33)" fg:x="561" fg:w="3"/><text x="45.2019%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.1122%" y="549" width="0.0801%" height="15" fill="rgb(247,95,6)" fg:x="563" fg:w="1"/><text x="45.3622%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.1122%" y="533" width="0.0801%" height="15" fill="rgb(243,206,43)" fg:x="563" fg:w="1"/><text x="45.3622%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.1122%" y="517" width="0.0801%" height="15" fill="rgb(229,65,54)" fg:x="563" fg:w="1"/><text x="45.3622%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.1122%" y="501" width="0.0801%" height="15" fill="rgb(247,137,34)" fg:x="563" fg:w="1"/><text x="45.3622%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.1122%" y="485" width="0.0801%" height="15" fill="rgb(245,174,44)" fg:x="563" fg:w="1"/><text x="45.3622%" y="495.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (6 samples, 0.48%)</title><rect x="44.7917%" y="645" width="0.4808%" height="15" fill="rgb(223,64,15)" fg:x="559" fg:w="6"/><text x="45.0417%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (6 samples, 0.48%)</title><rect x="44.7917%" y="629" width="0.4808%" height="15" fill="rgb(243,153,36)" fg:x="559" fg:w="6"/><text x="45.0417%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="44.9519%" y="613" width="0.3205%" height="15" fill="rgb(252,23,4)" fg:x="561" fg:w="4"/><text x="45.2019%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="45.1923%" y="597" width="0.0801%" height="15" fill="rgb(209,132,13)" fg:x="564" fg:w="1"/><text x="45.4423%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.1923%" y="581" width="0.0801%" height="15" fill="rgb(209,196,21)" fg:x="564" fg:w="1"/><text x="45.4423%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="45.2724%" y="581" width="0.0801%" height="15" fill="rgb(252,197,1)" fg:x="565" fg:w="1"/><text x="45.5224%" y="591.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="45.2724%" y="565" width="0.0801%" height="15" fill="rgb(229,42,46)" fg:x="565" fg:w="1"/><text x="45.5224%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.3526%" y="421" width="0.0801%" height="15" fill="rgb(219,85,8)" fg:x="566" fg:w="1"/><text x="45.6026%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="45.2724%" y="597" width="0.2404%" height="15" fill="rgb(223,185,14)" fg:x="565" fg:w="3"/><text x="45.5224%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="45.3526%" y="581" width="0.1603%" height="15" fill="rgb(217,196,18)" fg:x="566" fg:w="2"/><text x="45.6026%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="45.3526%" y="565" width="0.1603%" height="15" fill="rgb(220,122,37)" fg:x="566" fg:w="2"/><text x="45.6026%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="45.3526%" y="549" width="0.1603%" height="15" fill="rgb(236,135,33)" fg:x="566" fg:w="2"/><text x="45.6026%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="45.3526%" y="533" width="0.1603%" height="15" fill="rgb(222,86,54)" fg:x="566" fg:w="2"/><text x="45.6026%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="45.3526%" y="517" width="0.1603%" height="15" fill="rgb(227,42,22)" fg:x="566" fg:w="2"/><text x="45.6026%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="45.3526%" y="501" width="0.1603%" height="15" fill="rgb(243,101,27)" fg:x="566" fg:w="2"/><text x="45.6026%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="45.3526%" y="485" width="0.1603%" height="15" fill="rgb(229,100,8)" fg:x="566" fg:w="2"/><text x="45.6026%" y="495.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="45.3526%" y="469" width="0.1603%" height="15" fill="rgb(252,68,10)" fg:x="566" fg:w="2"/><text x="45.6026%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="45.3526%" y="453" width="0.1603%" height="15" fill="rgb(219,19,31)" fg:x="566" fg:w="2"/><text x="45.6026%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="45.3526%" y="437" width="0.1603%" height="15" fill="rgb(246,150,44)" fg:x="566" fg:w="2"/><text x="45.6026%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="45.4327%" y="421" width="0.0801%" height="15" fill="rgb(211,14,39)" fg:x="567" fg:w="1"/><text x="45.6827%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="45.4327%" y="405" width="0.0801%" height="15" fill="rgb(221,98,29)" fg:x="567" fg:w="1"/><text x="45.6827%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.4327%" y="389" width="0.0801%" height="15" fill="rgb(221,70,26)" fg:x="567" fg:w="1"/><text x="45.6827%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.4327%" y="373" width="0.0801%" height="15" fill="rgb(236,146,30)" fg:x="567" fg:w="1"/><text x="45.6827%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="45.4327%" y="357" width="0.0801%" height="15" fill="rgb(226,94,34)" fg:x="567" fg:w="1"/><text x="45.6827%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="45.4327%" y="341" width="0.0801%" height="15" fill="rgb(248,132,21)" fg:x="567" fg:w="1"/><text x="45.6827%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="45.4327%" y="325" width="0.0801%" height="15" fill="rgb(245,43,50)" fg:x="567" fg:w="1"/><text x="45.6827%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="45.4327%" y="309" width="0.0801%" height="15" fill="rgb(245,132,31)" fg:x="567" fg:w="1"/><text x="45.6827%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="45.4327%" y="293" width="0.0801%" height="15" fill="rgb(230,171,4)" fg:x="567" fg:w="1"/><text x="45.6827%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="45.4327%" y="277" width="0.0801%" height="15" fill="rgb(235,6,45)" fg:x="567" fg:w="1"/><text x="45.6827%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="45.4327%" y="261" width="0.0801%" height="15" fill="rgb(220,80,28)" fg:x="567" fg:w="1"/><text x="45.6827%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="45.4327%" y="245" width="0.0801%" height="15" fill="rgb(242,171,9)" fg:x="567" fg:w="1"/><text x="45.6827%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="45.4327%" y="229" width="0.0801%" height="15" fill="rgb(214,135,29)" fg:x="567" fg:w="1"/><text x="45.6827%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.4327%" y="213" width="0.0801%" height="15" fill="rgb(221,229,16)" fg:x="567" fg:w="1"/><text x="45.6827%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="45.5128%" y="597" width="0.2404%" height="15" fill="rgb(253,59,46)" fg:x="568" fg:w="3"/><text x="45.7628%" y="607.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="45.5128%" y="581" width="0.2404%" height="15" fill="rgb(250,147,20)" fg:x="568" fg:w="3"/><text x="45.7628%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="45.5128%" y="565" width="0.2404%" height="15" fill="rgb(236,64,48)" fg:x="568" fg:w="3"/><text x="45.7628%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="45.5929%" y="549" width="0.1603%" height="15" fill="rgb(240,37,42)" fg:x="569" fg:w="2"/><text x="45.8429%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="45.5929%" y="533" width="0.1603%" height="15" fill="rgb(220,41,50)" fg:x="569" fg:w="2"/><text x="45.8429%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="45.5929%" y="517" width="0.1603%" height="15" fill="rgb(216,51,14)" fg:x="569" fg:w="2"/><text x="45.8429%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.7532%" y="597" width="0.0801%" height="15" fill="rgb(215,83,10)" fg:x="571" fg:w="1"/><text x="46.0032%" y="607.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="45.8333%" y="597" width="0.1603%" height="15" fill="rgb(206,144,17)" fg:x="572" fg:w="2"/><text x="46.0833%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="45.8333%" y="581" width="0.1603%" height="15" fill="rgb(219,196,37)" fg:x="572" fg:w="2"/><text x="46.0833%" y="591.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="45.9135%" y="565" width="0.0801%" height="15" fill="rgb(226,135,26)" fg:x="573" fg:w="1"/><text x="46.1635%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="45.9135%" y="549" width="0.0801%" height="15" fill="rgb(237,195,40)" fg:x="573" fg:w="1"/><text x="46.1635%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.9936%" y="517" width="0.0801%" height="15" fill="rgb(228,182,42)" fg:x="574" fg:w="1"/><text x="46.2436%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.9936%" y="501" width="0.0801%" height="15" fill="rgb(224,135,50)" fg:x="574" fg:w="1"/><text x="46.2436%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.9936%" y="485" width="0.0801%" height="15" fill="rgb(236,215,34)" fg:x="574" fg:w="1"/><text x="46.2436%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.9936%" y="469" width="0.0801%" height="15" fill="rgb(244,213,27)" fg:x="574" fg:w="1"/><text x="46.2436%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="46.0737%" y="517" width="0.0801%" height="15" fill="rgb(233,37,53)" fg:x="575" fg:w="1"/><text x="46.3237%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="46.0737%" y="501" width="0.0801%" height="15" fill="rgb(222,132,14)" fg:x="575" fg:w="1"/><text x="46.3237%" y="511.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="45.9936%" y="549" width="0.2404%" height="15" fill="rgb(219,202,29)" fg:x="574" fg:w="3"/><text x="46.2436%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="45.9936%" y="533" width="0.2404%" height="15" fill="rgb(226,157,39)" fg:x="574" fg:w="3"/><text x="46.2436%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.1538%" y="517" width="0.0801%" height="15" fill="rgb(235,213,2)" fg:x="576" fg:w="1"/><text x="46.4038%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.1538%" y="501" width="0.0801%" height="15" fill="rgb(250,121,2)" fg:x="576" fg:w="1"/><text x="46.4038%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.1538%" y="485" width="0.0801%" height="15" fill="rgb(206,192,33)" fg:x="576" fg:w="1"/><text x="46.4038%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.1538%" y="469" width="0.0801%" height="15" fill="rgb(240,161,6)" fg:x="576" fg:w="1"/><text x="46.4038%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="46.1538%" y="453" width="0.0801%" height="15" fill="rgb(246,53,30)" fg:x="576" fg:w="1"/><text x="46.4038%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.1538%" y="437" width="0.0801%" height="15" fill="rgb(219,123,43)" fg:x="576" fg:w="1"/><text x="46.4038%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.1538%" y="421" width="0.0801%" height="15" fill="rgb(236,53,49)" fg:x="576" fg:w="1"/><text x="46.4038%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.1538%" y="405" width="0.0801%" height="15" fill="rgb(241,156,1)" fg:x="576" fg:w="1"/><text x="46.4038%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.2340%" y="405" width="0.0801%" height="15" fill="rgb(209,73,26)" fg:x="577" fg:w="1"/><text x="46.4840%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.2340%" y="389" width="0.0801%" height="15" fill="rgb(206,114,3)" fg:x="577" fg:w="1"/><text x="46.4840%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.2340%" y="373" width="0.0801%" height="15" fill="rgb(230,214,9)" fg:x="577" fg:w="1"/><text x="46.4840%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="45.9936%" y="581" width="0.4006%" height="15" fill="rgb(240,184,46)" fg:x="574" fg:w="5"/><text x="46.2436%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="45.9936%" y="565" width="0.4006%" height="15" fill="rgb(242,169,54)" fg:x="574" fg:w="5"/><text x="46.2436%" y="575.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="46.2340%" y="549" width="0.1603%" height="15" fill="rgb(207,168,50)" fg:x="577" fg:w="2"/><text x="46.4840%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="46.2340%" y="533" width="0.1603%" height="15" fill="rgb(240,114,2)" fg:x="577" fg:w="2"/><text x="46.4840%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="46.2340%" y="517" width="0.1603%" height="15" fill="rgb(211,17,40)" fg:x="577" fg:w="2"/><text x="46.4840%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="46.2340%" y="501" width="0.1603%" height="15" fill="rgb(235,97,36)" fg:x="577" fg:w="2"/><text x="46.4840%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="46.2340%" y="485" width="0.1603%" height="15" fill="rgb(208,164,11)" fg:x="577" fg:w="2"/><text x="46.4840%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="46.2340%" y="469" width="0.1603%" height="15" fill="rgb(242,11,17)" fg:x="577" fg:w="2"/><text x="46.4840%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="46.2340%" y="453" width="0.1603%" height="15" fill="rgb(215,86,33)" fg:x="577" fg:w="2"/><text x="46.4840%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="46.2340%" y="437" width="0.1603%" height="15" fill="rgb(245,185,28)" fg:x="577" fg:w="2"/><text x="46.4840%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="46.2340%" y="421" width="0.1603%" height="15" fill="rgb(231,89,42)" fg:x="577" fg:w="2"/><text x="46.4840%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="46.3141%" y="405" width="0.0801%" height="15" fill="rgb(210,18,47)" fg:x="578" fg:w="1"/><text x="46.5641%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="46.3141%" y="389" width="0.0801%" height="15" fill="rgb(214,84,8)" fg:x="578" fg:w="1"/><text x="46.5641%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="46.3141%" y="373" width="0.0801%" height="15" fill="rgb(214,222,23)" fg:x="578" fg:w="1"/><text x="46.5641%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="46.3141%" y="357" width="0.0801%" height="15" fill="rgb(213,104,21)" fg:x="578" fg:w="1"/><text x="46.5641%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.20%)</title><rect x="45.2724%" y="613" width="1.2019%" height="15" fill="rgb(238,138,6)" fg:x="565" fg:w="15"/><text x="45.5224%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="45.9936%" y="597" width="0.4808%" height="15" fill="rgb(205,167,50)" fg:x="574" fg:w="6"/><text x="46.2436%" y="607.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="46.3942%" y="581" width="0.0801%" height="15" fill="rgb(230,105,27)" fg:x="579" fg:w="1"/><text x="46.6442%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.3942%" y="565" width="0.0801%" height="15" fill="rgb(222,97,48)" fg:x="579" fg:w="1"/><text x="46.6442%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.3942%" y="549" width="0.0801%" height="15" fill="rgb(222,197,14)" fg:x="579" fg:w="1"/><text x="46.6442%" y="559.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="46.4744%" y="597" width="0.0801%" height="15" fill="rgb(210,105,47)" fg:x="580" fg:w="1"/><text x="46.7244%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="46.4744%" y="581" width="0.0801%" height="15" fill="rgb(238,158,19)" fg:x="580" fg:w="1"/><text x="46.7244%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="46.5545%" y="581" width="0.1603%" height="15" fill="rgb(226,176,23)" fg:x="581" fg:w="2"/><text x="46.8045%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="46.5545%" y="565" width="0.1603%" height="15" fill="rgb(208,79,31)" fg:x="581" fg:w="2"/><text x="46.8045%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="46.5545%" y="549" width="0.1603%" height="15" fill="rgb(221,154,21)" fg:x="581" fg:w="2"/><text x="46.8045%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.6346%" y="533" width="0.0801%" height="15" fill="rgb(213,61,41)" fg:x="582" fg:w="1"/><text x="46.8846%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.6346%" y="517" width="0.0801%" height="15" fill="rgb(215,28,33)" fg:x="582" fg:w="1"/><text x="46.8846%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="46.7147%" y="533" width="0.0801%" height="15" fill="rgb(231,139,26)" fg:x="583" fg:w="1"/><text x="46.9647%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="46.7147%" y="517" width="0.0801%" height="15" fill="rgb(232,159,16)" fg:x="583" fg:w="1"/><text x="46.9647%" y="527.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="46.5545%" y="597" width="0.3205%" height="15" fill="rgb(233,80,10)" fg:x="581" fg:w="4"/><text x="46.8045%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="46.7147%" y="581" width="0.1603%" height="15" fill="rgb(208,147,29)" fg:x="583" fg:w="2"/><text x="46.9647%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="46.7147%" y="565" width="0.1603%" height="15" fill="rgb(213,10,12)" fg:x="583" fg:w="2"/><text x="46.9647%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="46.7147%" y="549" width="0.1603%" height="15" fill="rgb(231,218,13)" fg:x="583" fg:w="2"/><text x="46.9647%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.7949%" y="533" width="0.0801%" height="15" fill="rgb(244,199,44)" fg:x="584" fg:w="1"/><text x="47.0449%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.7949%" y="517" width="0.0801%" height="15" fill="rgb(240,144,53)" fg:x="584" fg:w="1"/><text x="47.0449%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="46.7949%" y="501" width="0.0801%" height="15" fill="rgb(223,57,28)" fg:x="584" fg:w="1"/><text x="47.0449%" y="511.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (6 samples, 0.48%)</title><rect x="46.4744%" y="613" width="0.4808%" height="15" fill="rgb(213,134,38)" fg:x="580" fg:w="6"/><text x="46.7244%" y="623.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="46.8750%" y="597" width="0.0801%" height="15" fill="rgb(251,182,42)" fg:x="585" fg:w="1"/><text x="47.1250%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="47.0353%" y="485" width="0.0801%" height="15" fill="rgb(229,93,13)" fg:x="587" fg:w="1"/><text x="47.2853%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="47.0353%" y="469" width="0.0801%" height="15" fill="rgb(234,171,3)" fg:x="587" fg:w="1"/><text x="47.2853%" y="479.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (24 samples, 1.92%)</title><rect x="45.2724%" y="645" width="1.9231%" height="15" fill="rgb(241,105,32)" fg:x="565" fg:w="24"/><text x="45.5224%" y="655.50">p..</text></g><g><title>plugins_core::build::QuickThing::make (24 samples, 1.92%)</title><rect x="45.2724%" y="629" width="1.9231%" height="15" fill="rgb(221,66,3)" fg:x="565" fg:w="24"/><text x="45.5224%" y="639.50">p..</text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="46.9551%" y="613" width="0.2404%" height="15" fill="rgb(248,155,29)" fg:x="586" fg:w="3"/><text x="47.2051%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="46.9551%" y="597" width="0.2404%" height="15" fill="rgb(231,31,5)" fg:x="586" fg:w="3"/><text x="47.2051%" y="607.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="46.9551%" y="581" width="0.2404%" height="15" fill="rgb(213,188,31)" fg:x="586" fg:w="3"/><text x="47.2051%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="46.9551%" y="565" width="0.2404%" height="15" fill="rgb(212,104,33)" fg:x="586" fg:w="3"/><text x="47.2051%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="46.9551%" y="549" width="0.2404%" height="15" fill="rgb(254,77,51)" fg:x="586" fg:w="3"/><text x="47.2051%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="46.9551%" y="533" width="0.2404%" height="15" fill="rgb(234,39,26)" fg:x="586" fg:w="3"/><text x="47.2051%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="46.9551%" y="517" width="0.2404%" height="15" fill="rgb(208,88,36)" fg:x="586" fg:w="3"/><text x="47.2051%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="47.0353%" y="501" width="0.1603%" height="15" fill="rgb(243,222,10)" fg:x="587" fg:w="2"/><text x="47.2853%" y="511.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="47.1154%" y="485" width="0.0801%" height="15" fill="rgb(218,133,52)" fg:x="588" fg:w="1"/><text x="47.3654%" y="495.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="47.1154%" y="469" width="0.0801%" height="15" fill="rgb(222,25,26)" fg:x="588" fg:w="1"/><text x="47.3654%" y="479.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="47.3558%" y="565" width="0.0801%" height="15" fill="rgb(243,174,24)" fg:x="591" fg:w="1"/><text x="47.6058%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.4359%" y="533" width="0.0801%" height="15" fill="rgb(233,188,52)" fg:x="592" fg:w="1"/><text x="47.6859%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.4359%" y="517" width="0.0801%" height="15" fill="rgb(208,89,14)" fg:x="592" fg:w="1"/><text x="47.6859%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.4359%" y="501" width="0.0801%" height="15" fill="rgb(205,204,21)" fg:x="592" fg:w="1"/><text x="47.6859%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.4359%" y="485" width="0.0801%" height="15" fill="rgb(246,39,28)" fg:x="592" fg:w="1"/><text x="47.6859%" y="495.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="47.4359%" y="565" width="0.1603%" height="15" fill="rgb(235,71,19)" fg:x="592" fg:w="2"/><text x="47.6859%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="47.4359%" y="549" width="0.1603%" height="15" fill="rgb(211,62,39)" fg:x="592" fg:w="2"/><text x="47.6859%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="47.5160%" y="533" width="0.0801%" height="15" fill="rgb(246,118,20)" fg:x="593" fg:w="1"/><text x="47.7660%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="47.5160%" y="517" width="0.0801%" height="15" fill="rgb(230,82,12)" fg:x="593" fg:w="1"/><text x="47.7660%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="47.5160%" y="501" width="0.0801%" height="15" fill="rgb(205,212,34)" fg:x="593" fg:w="1"/><text x="47.7660%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.5962%" y="501" width="0.0801%" height="15" fill="rgb(239,90,1)" fg:x="594" fg:w="1"/><text x="47.8462%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="47.2756%" y="629" width="0.4808%" height="15" fill="rgb(225,198,50)" fg:x="590" fg:w="6"/><text x="47.5256%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="47.3558%" y="613" width="0.4006%" height="15" fill="rgb(227,208,48)" fg:x="591" fg:w="5"/><text x="47.6058%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="47.3558%" y="597" width="0.4006%" height="15" fill="rgb(238,134,41)" fg:x="591" fg:w="5"/><text x="47.6058%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="47.3558%" y="581" width="0.4006%" height="15" fill="rgb(241,58,39)" fg:x="591" fg:w="5"/><text x="47.6058%" y="591.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="47.5962%" y="565" width="0.1603%" height="15" fill="rgb(214,126,4)" fg:x="594" fg:w="2"/><text x="47.8462%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="47.5962%" y="549" width="0.1603%" height="15" fill="rgb(235,149,4)" fg:x="594" fg:w="2"/><text x="47.8462%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="47.5962%" y="533" width="0.1603%" height="15" fill="rgb(236,59,29)" fg:x="594" fg:w="2"/><text x="47.8462%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="47.5962%" y="517" width="0.1603%" height="15" fill="rgb(246,11,33)" fg:x="594" fg:w="2"/><text x="47.8462%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="47.6763%" y="501" width="0.0801%" height="15" fill="rgb(232,180,35)" fg:x="595" fg:w="1"/><text x="47.9263%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.7564%" y="549" width="0.0801%" height="15" fill="rgb(220,35,37)" fg:x="596" fg:w="1"/><text x="48.0064%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.7564%" y="533" width="0.0801%" height="15" fill="rgb(238,107,48)" fg:x="596" fg:w="1"/><text x="48.0064%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.7564%" y="517" width="0.0801%" height="15" fill="rgb(205,65,21)" fg:x="596" fg:w="1"/><text x="48.0064%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="47.7564%" y="501" width="0.0801%" height="15" fill="rgb(246,138,48)" fg:x="596" fg:w="1"/><text x="48.0064%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="47.7564%" y="485" width="0.0801%" height="15" fill="rgb(209,220,47)" fg:x="596" fg:w="1"/><text x="48.0064%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="47.7564%" y="469" width="0.0801%" height="15" fill="rgb(222,162,49)" fg:x="596" fg:w="1"/><text x="48.0064%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="47.7564%" y="453" width="0.0801%" height="15" fill="rgb(243,123,11)" fg:x="596" fg:w="1"/><text x="48.0064%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="47.7564%" y="437" width="0.0801%" height="15" fill="rgb(221,229,41)" fg:x="596" fg:w="1"/><text x="48.0064%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="47.7564%" y="565" width="0.1603%" height="15" fill="rgb(216,68,4)" fg:x="596" fg:w="2"/><text x="48.0064%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.8365%" y="549" width="0.0801%" height="15" fill="rgb(207,88,35)" fg:x="597" fg:w="1"/><text x="48.0865%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.9167%" y="565" width="0.1603%" height="15" fill="rgb(252,2,5)" fg:x="598" fg:w="2"/><text x="48.1667%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="47.9167%" y="549" width="0.1603%" height="15" fill="rgb(209,173,7)" fg:x="598" fg:w="2"/><text x="48.1667%" y="559.50"></text></g><g><title>plugins_core::build::Build::named (5 samples, 0.40%)</title><rect x="47.7564%" y="629" width="0.4006%" height="15" fill="rgb(210,198,52)" fg:x="596" fg:w="5"/><text x="48.0064%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (5 samples, 0.40%)</title><rect x="47.7564%" y="613" width="0.4006%" height="15" fill="rgb(228,152,32)" fg:x="596" fg:w="5"/><text x="48.0064%" y="623.50"></text></g><g><title>kernel::model::props::save_props (5 samples, 0.40%)</title><rect x="47.7564%" y="597" width="0.4006%" height="15" fill="rgb(249,98,29)" fg:x="596" fg:w="5"/><text x="48.0064%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="47.7564%" y="581" width="0.4006%" height="15" fill="rgb(205,148,48)" fg:x="596" fg:w="5"/><text x="48.0064%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="48.0769%" y="565" width="0.0801%" height="15" fill="rgb(236,69,34)" fg:x="600" fg:w="1"/><text x="48.3269%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="48.0769%" y="549" width="0.0801%" height="15" fill="rgb(220,151,41)" fg:x="600" fg:w="1"/><text x="48.3269%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="48.0769%" y="533" width="0.0801%" height="15" fill="rgb(254,106,24)" fg:x="600" fg:w="1"/><text x="48.3269%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="48.0769%" y="517" width="0.0801%" height="15" fill="rgb(210,37,48)" fg:x="600" fg:w="1"/><text x="48.3269%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="48.0769%" y="501" width="0.0801%" height="15" fill="rgb(254,131,5)" fg:x="600" fg:w="1"/><text x="48.3269%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="48.0769%" y="485" width="0.0801%" height="15" fill="rgb(216,55,41)" fg:x="600" fg:w="1"/><text x="48.3269%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="48.0769%" y="469" width="0.0801%" height="15" fill="rgb(250,35,31)" fg:x="600" fg:w="1"/><text x="48.3269%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.0769%" y="453" width="0.0801%" height="15" fill="rgb(207,124,33)" fg:x="600" fg:w="1"/><text x="48.3269%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="48.2372%" y="581" width="0.0801%" height="15" fill="rgb(249,175,17)" fg:x="602" fg:w="1"/><text x="48.4872%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="48.2372%" y="565" width="0.0801%" height="15" fill="rgb(224,175,39)" fg:x="602" fg:w="1"/><text x="48.4872%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="48.2372%" y="549" width="0.0801%" height="15" fill="rgb(208,67,49)" fg:x="602" fg:w="1"/><text x="48.4872%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.2372%" y="533" width="0.0801%" height="15" fill="rgb(222,188,41)" fg:x="602" fg:w="1"/><text x="48.4872%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.2372%" y="517" width="0.0801%" height="15" fill="rgb(243,213,30)" fg:x="602" fg:w="1"/><text x="48.4872%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.2372%" y="501" width="0.0801%" height="15" fill="rgb(253,100,45)" fg:x="602" fg:w="1"/><text x="48.4872%" y="511.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="48.3173%" y="565" width="0.0801%" height="15" fill="rgb(226,24,44)" fg:x="603" fg:w="1"/><text x="48.5673%" y="575.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (535 samples, 42.87%)</title><rect x="5.6090%" y="661" width="42.8686%" height="15" fill="rgb(215,41,24)" fg:x="70" fg:w="535"/><text x="5.8590%" y="671.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (16 samples, 1.28%)</title><rect x="47.1955%" y="645" width="1.2821%" height="15" fill="rgb(254,53,33)" fg:x="589" fg:w="16"/><text x="47.4455%" y="655.50"></text></g><g><title>plugins_core::build::Build::new_world (4 samples, 0.32%)</title><rect x="48.1571%" y="629" width="0.3205%" height="15" fill="rgb(242,103,10)" fg:x="601" fg:w="4"/><text x="48.4071%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::new (3 samples, 0.24%)</title><rect x="48.2372%" y="613" width="0.2404%" height="15" fill="rgb(246,29,21)" fg:x="602" fg:w="3"/><text x="48.4872%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="48.2372%" y="597" width="0.2404%" height="15" fill="rgb(251,154,1)" fg:x="602" fg:w="3"/><text x="48.4872%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="48.3173%" y="581" width="0.1603%" height="15" fill="rgb(254,212,26)" fg:x="603" fg:w="2"/><text x="48.5673%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="48.3974%" y="565" width="0.0801%" height="15" fill="rgb(251,187,46)" fg:x="604" fg:w="1"/><text x="48.6474%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="48.3974%" y="549" width="0.0801%" height="15" fill="rgb(224,208,14)" fg:x="604" fg:w="1"/><text x="48.6474%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.3974%" y="533" width="0.0801%" height="15" fill="rgb(222,176,26)" fg:x="604" fg:w="1"/><text x="48.6474%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.4776%" y="661" width="0.0801%" height="15" fill="rgb(241,219,52)" fg:x="605" fg:w="1"/><text x="48.7276%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (2 samples, 0.16%)</title><rect x="48.5577%" y="661" width="0.1603%" height="15" fill="rgb(252,198,21)" fg:x="606" fg:w="2"/><text x="48.8077%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="48.5577%" y="645" width="0.1603%" height="15" fill="rgb(244,196,23)" fg:x="606" fg:w="2"/><text x="48.8077%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="48.5577%" y="629" width="0.1603%" height="15" fill="rgb(239,121,44)" fg:x="606" fg:w="2"/><text x="48.8077%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="48.5577%" y="613" width="0.1603%" height="15" fill="rgb(249,203,23)" fg:x="606" fg:w="2"/><text x="48.8077%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="48.5577%" y="597" width="0.1603%" height="15" fill="rgb(238,219,10)" fg:x="606" fg:w="2"/><text x="48.8077%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="48.7179%" y="645" width="0.1603%" height="15" fill="rgb(241,35,46)" fg:x="608" fg:w="2"/><text x="48.9679%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.7981%" y="629" width="0.0801%" height="15" fill="rgb(218,28,6)" fg:x="609" fg:w="1"/><text x="49.0481%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="48.7981%" y="613" width="0.0801%" height="15" fill="rgb(233,151,50)" fg:x="609" fg:w="1"/><text x="49.0481%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="48.8782%" y="645" width="0.0801%" height="15" fill="rgb(208,57,8)" fg:x="610" fg:w="1"/><text x="49.1282%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="48.8782%" y="629" width="0.0801%" height="15" fill="rgb(253,99,10)" fg:x="610" fg:w="1"/><text x="49.1282%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="48.8782%" y="613" width="0.0801%" height="15" fill="rgb(237,196,49)" fg:x="610" fg:w="1"/><text x="49.1282%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="48.8782%" y="597" width="0.0801%" height="15" fill="rgb(209,51,3)" fg:x="610" fg:w="1"/><text x="49.1282%" y="607.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="48.8782%" y="581" width="0.0801%" height="15" fill="rgb(238,129,10)" fg:x="610" fg:w="1"/><text x="49.1282%" y="591.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="48.8782%" y="565" width="0.0801%" height="15" fill="rgb(246,201,16)" fg:x="610" fg:w="1"/><text x="49.1282%" y="575.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="48.8782%" y="549" width="0.0801%" height="15" fill="rgb(250,160,20)" fg:x="610" fg:w="1"/><text x="49.1282%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="48.8782%" y="533" width="0.0801%" height="15" fill="rgb(251,107,25)" fg:x="610" fg:w="1"/><text x="49.1282%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="48.8782%" y="517" width="0.0801%" height="15" fill="rgb(212,103,39)" fg:x="610" fg:w="1"/><text x="49.1282%" y="527.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="49.0385%" y="549" width="0.0801%" height="15" fill="rgb(207,9,29)" fg:x="612" fg:w="1"/><text x="49.2885%" y="559.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.08%)</title><rect x="49.0385%" y="533" width="0.0801%" height="15" fill="rgb(227,84,3)" fg:x="612" fg:w="1"/><text x="49.2885%" y="543.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.08%)</title><rect x="49.0385%" y="517" width="0.0801%" height="15" fill="rgb(242,194,7)" fg:x="612" fg:w="1"/><text x="49.2885%" y="527.50"></text></g><g><title>engine::session::should_force_rollback (4 samples, 0.32%)</title><rect x="48.9583%" y="645" width="0.3205%" height="15" fill="rgb(230,40,4)" fg:x="611" fg:w="4"/><text x="49.2083%" y="655.50"></text></g><g><title>std::env::_var (3 samples, 0.24%)</title><rect x="49.0385%" y="629" width="0.2404%" height="15" fill="rgb(243,229,33)" fg:x="612" fg:w="3"/><text x="49.2885%" y="639.50"></text></g><g><title>std::env::var_os (3 samples, 0.24%)</title><rect x="49.0385%" y="613" width="0.2404%" height="15" fill="rgb(240,65,24)" fg:x="612" fg:w="3"/><text x="49.2885%" y="623.50"></text></g><g><title>std::env::_var_os (3 samples, 0.24%)</title><rect x="49.0385%" y="597" width="0.2404%" height="15" fill="rgb(212,28,20)" fg:x="612" fg:w="3"/><text x="49.2885%" y="607.50"></text></g><g><title>std::sys::unix::os::getenv (3 samples, 0.24%)</title><rect x="49.0385%" y="581" width="0.2404%" height="15" fill="rgb(209,72,3)" fg:x="612" fg:w="3"/><text x="49.2885%" y="591.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (3 samples, 0.24%)</title><rect x="49.0385%" y="565" width="0.2404%" height="15" fill="rgb(238,170,36)" fg:x="612" fg:w="3"/><text x="49.2885%" y="575.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (2 samples, 0.16%)</title><rect x="49.1186%" y="549" width="0.1603%" height="15" fill="rgb(236,19,38)" fg:x="613" fg:w="2"/><text x="49.3686%" y="559.50"></text></g><g><title>getenv (2 samples, 0.16%)</title><rect x="49.1186%" y="533" width="0.1603%" height="15" fill="rgb(230,67,43)" fg:x="613" fg:w="2"/><text x="49.3686%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="49.2788%" y="581" width="0.1603%" height="15" fill="rgb(227,14,36)" fg:x="615" fg:w="2"/><text x="49.5288%" y="591.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="49.2788%" y="613" width="0.2404%" height="15" fill="rgb(247,171,49)" fg:x="615" fg:w="3"/><text x="49.5288%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="49.2788%" y="597" width="0.2404%" height="15" fill="rgb(235,164,51)" fg:x="615" fg:w="3"/><text x="49.5288%" y="607.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="49.4391%" y="581" width="0.0801%" height="15" fill="rgb(246,107,20)" fg:x="617" fg:w="1"/><text x="49.6891%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="49.5192%" y="597" width="0.0801%" height="15" fill="rgb(226,88,18)" fg:x="618" fg:w="1"/><text x="49.7692%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.5192%" y="581" width="0.0801%" height="15" fill="rgb(235,136,9)" fg:x="618" fg:w="1"/><text x="49.7692%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="49.5192%" y="565" width="0.0801%" height="15" fill="rgb(209,3,34)" fg:x="618" fg:w="1"/><text x="49.7692%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="49.6795%" y="581" width="0.1603%" height="15" fill="rgb(213,38,19)" fg:x="620" fg:w="2"/><text x="49.9295%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.7596%" y="565" width="0.0801%" height="15" fill="rgb(254,24,24)" fg:x="621" fg:w="1"/><text x="50.0096%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.7596%" y="549" width="0.0801%" height="15" fill="rgb(219,122,42)" fg:x="621" fg:w="1"/><text x="50.0096%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.7596%" y="533" width="0.0801%" height="15" fill="rgb(205,128,31)" fg:x="621" fg:w="1"/><text x="50.0096%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.7596%" y="517" width="0.0801%" height="15" fill="rgb(212,142,0)" fg:x="621" fg:w="1"/><text x="50.0096%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.7596%" y="501" width="0.0801%" height="15" fill="rgb(211,25,35)" fg:x="621" fg:w="1"/><text x="50.0096%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.7596%" y="485" width="0.0801%" height="15" fill="rgb(220,150,53)" fg:x="621" fg:w="1"/><text x="50.0096%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="49.7596%" y="469" width="0.0801%" height="15" fill="rgb(220,30,24)" fg:x="621" fg:w="1"/><text x="50.0096%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="49.7596%" y="453" width="0.0801%" height="15" fill="rgb(218,86,23)" fg:x="621" fg:w="1"/><text x="50.0096%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="49.7596%" y="437" width="0.0801%" height="15" fill="rgb(206,62,27)" fg:x="621" fg:w="1"/><text x="50.0096%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="49.7596%" y="421" width="0.0801%" height="15" fill="rgb(249,174,0)" fg:x="621" fg:w="1"/><text x="50.0096%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.7596%" y="405" width="0.0801%" height="15" fill="rgb(246,67,27)" fg:x="621" fg:w="1"/><text x="50.0096%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.8397%" y="565" width="0.0801%" height="15" fill="rgb(250,195,30)" fg:x="622" fg:w="1"/><text x="50.0897%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="49.9199%" y="549" width="0.1603%" height="15" fill="rgb(251,171,50)" fg:x="623" fg:w="2"/><text x="50.1699%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="50.0000%" y="533" width="0.0801%" height="15" fill="rgb(236,196,10)" fg:x="624" fg:w="1"/><text x="50.2500%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="49.9199%" y="565" width="0.2404%" height="15" fill="rgb(249,228,52)" fg:x="623" fg:w="3"/><text x="50.1699%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="50.0801%" y="549" width="0.0801%" height="15" fill="rgb(219,60,51)" fg:x="625" fg:w="1"/><text x="50.3301%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="50.0801%" y="533" width="0.0801%" height="15" fill="rgb(240,198,24)" fg:x="625" fg:w="1"/><text x="50.3301%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="50.0801%" y="517" width="0.0801%" height="15" fill="rgb(240,192,40)" fg:x="625" fg:w="1"/><text x="50.3301%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="50.4006%" y="501" width="0.2404%" height="15" fill="rgb(219,118,5)" fg:x="629" fg:w="3"/><text x="50.6506%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="50.2404%" y="549" width="0.4808%" height="15" fill="rgb(205,202,34)" fg:x="627" fg:w="6"/><text x="50.4904%" y="559.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="50.4006%" y="533" width="0.3205%" height="15" fill="rgb(234,153,26)" fg:x="629" fg:w="4"/><text x="50.6506%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="50.4006%" y="517" width="0.3205%" height="15" fill="rgb(229,26,29)" fg:x="629" fg:w="4"/><text x="50.6506%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="50.6410%" y="501" width="0.0801%" height="15" fill="rgb(237,115,21)" fg:x="632" fg:w="1"/><text x="50.8910%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="50.8013%" y="501" width="0.0801%" height="15" fill="rgb(252,144,15)" fg:x="634" fg:w="1"/><text x="51.0513%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="50.8013%" y="485" width="0.0801%" height="15" fill="rgb(232,26,13)" fg:x="634" fg:w="1"/><text x="51.0513%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="50.8013%" y="469" width="0.0801%" height="15" fill="rgb(206,44,19)" fg:x="634" fg:w="1"/><text x="51.0513%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="50.8013%" y="453" width="0.0801%" height="15" fill="rgb(249,159,2)" fg:x="634" fg:w="1"/><text x="51.0513%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="50.8814%" y="501" width="0.1603%" height="15" fill="rgb(231,5,32)" fg:x="635" fg:w="2"/><text x="51.1314%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="50.9615%" y="485" width="0.0801%" height="15" fill="rgb(249,210,18)" fg:x="636" fg:w="1"/><text x="51.2115%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="50.9615%" y="469" width="0.0801%" height="15" fill="rgb(215,223,36)" fg:x="636" fg:w="1"/><text x="51.2115%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="50.9615%" y="453" width="0.0801%" height="15" fill="rgb(245,185,20)" fg:x="636" fg:w="1"/><text x="51.2115%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="50.9615%" y="437" width="0.0801%" height="15" fill="rgb(206,224,11)" fg:x="636" fg:w="1"/><text x="51.2115%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="50.7212%" y="533" width="0.4006%" height="15" fill="rgb(248,73,42)" fg:x="633" fg:w="5"/><text x="50.9712%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="50.7212%" y="517" width="0.4006%" height="15" fill="rgb(219,149,31)" fg:x="633" fg:w="5"/><text x="50.9712%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="51.0417%" y="501" width="0.0801%" height="15" fill="rgb(243,104,17)" fg:x="637" fg:w="1"/><text x="51.2917%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="51.1218%" y="533" width="0.3205%" height="15" fill="rgb(244,117,33)" fg:x="638" fg:w="4"/><text x="51.3718%" y="543.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="51.1218%" y="517" width="0.3205%" height="15" fill="rgb(251,25,47)" fg:x="638" fg:w="4"/><text x="51.3718%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="51.2821%" y="501" width="0.1603%" height="15" fill="rgb(249,70,13)" fg:x="640" fg:w="2"/><text x="51.5321%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.3622%" y="485" width="0.0801%" height="15" fill="rgb(217,133,18)" fg:x="641" fg:w="1"/><text x="51.6122%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="51.6026%" y="517" width="0.1603%" height="15" fill="rgb(248,97,28)" fg:x="644" fg:w="2"/><text x="51.8526%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="51.6827%" y="501" width="0.0801%" height="15" fill="rgb(237,193,4)" fg:x="645" fg:w="1"/><text x="51.9327%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="51.7628%" y="501" width="0.4808%" height="15" fill="rgb(247,198,45)" fg:x="646" fg:w="6"/><text x="52.0128%" y="511.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="51.8429%" y="485" width="0.4006%" height="15" fill="rgb(245,2,20)" fg:x="647" fg:w="5"/><text x="52.0929%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="52.0833%" y="469" width="0.1603%" height="15" fill="rgb(210,71,36)" fg:x="650" fg:w="2"/><text x="52.3333%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="52.0833%" y="453" width="0.1603%" height="15" fill="rgb(238,114,30)" fg:x="650" fg:w="2"/><text x="52.3333%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="52.2436%" y="485" width="0.1603%" height="15" fill="rgb(241,200,2)" fg:x="652" fg:w="2"/><text x="52.4936%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="52.2436%" y="469" width="0.1603%" height="15" fill="rgb(232,106,18)" fg:x="652" fg:w="2"/><text x="52.4936%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="52.4038%" y="469" width="0.2404%" height="15" fill="rgb(211,141,18)" fg:x="654" fg:w="3"/><text x="52.6538%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="52.6442%" y="469" width="0.0801%" height="15" fill="rgb(224,9,9)" fg:x="657" fg:w="1"/><text x="52.8942%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="52.6442%" y="453" width="0.0801%" height="15" fill="rgb(249,137,46)" fg:x="657" fg:w="1"/><text x="52.8942%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="52.6442%" y="437" width="0.0801%" height="15" fill="rgb(236,44,45)" fg:x="657" fg:w="1"/><text x="52.8942%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="52.7244%" y="469" width="0.2404%" height="15" fill="rgb(205,68,40)" fg:x="658" fg:w="3"/><text x="52.9744%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="52.8045%" y="453" width="0.1603%" height="15" fill="rgb(214,198,49)" fg:x="659" fg:w="2"/><text x="53.0545%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="52.8045%" y="437" width="0.1603%" height="15" fill="rgb(226,140,45)" fg:x="659" fg:w="2"/><text x="53.0545%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="52.8045%" y="421" width="0.1603%" height="15" fill="rgb(209,109,20)" fg:x="659" fg:w="2"/><text x="53.0545%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="52.8045%" y="405" width="0.1603%" height="15" fill="rgb(217,33,46)" fg:x="659" fg:w="2"/><text x="53.0545%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="52.8045%" y="389" width="0.1603%" height="15" fill="rgb(232,150,33)" fg:x="659" fg:w="2"/><text x="53.0545%" y="399.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="52.8045%" y="373" width="0.1603%" height="15" fill="rgb(233,76,25)" fg:x="659" fg:w="2"/><text x="53.0545%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="52.4038%" y="485" width="0.6410%" height="15" fill="rgb(254,219,23)" fg:x="654" fg:w="8"/><text x="52.6538%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="52.9647%" y="469" width="0.0801%" height="15" fill="rgb(233,108,4)" fg:x="661" fg:w="1"/><text x="53.2147%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="52.9647%" y="453" width="0.0801%" height="15" fill="rgb(229,98,6)" fg:x="661" fg:w="1"/><text x="53.2147%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.76%)</title><rect x="51.4423%" y="533" width="1.7628%" height="15" fill="rgb(217,40,27)" fg:x="642" fg:w="22"/><text x="51.6923%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.44%)</title><rect x="51.7628%" y="517" width="1.4423%" height="15" fill="rgb(221,35,43)" fg:x="646" fg:w="18"/><text x="52.0128%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="52.2436%" y="501" width="0.9615%" height="15" fill="rgb(212,107,11)" fg:x="652" fg:w="12"/><text x="52.4936%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="53.0449%" y="485" width="0.1603%" height="15" fill="rgb(245,42,44)" fg:x="662" fg:w="2"/><text x="53.2949%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="53.0449%" y="469" width="0.1603%" height="15" fill="rgb(209,31,12)" fg:x="662" fg:w="2"/><text x="53.2949%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="53.0449%" y="453" width="0.1603%" height="15" fill="rgb(210,228,54)" fg:x="662" fg:w="2"/><text x="53.2949%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="53.1250%" y="437" width="0.0801%" height="15" fill="rgb(241,19,33)" fg:x="663" fg:w="1"/><text x="53.3750%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="53.1250%" y="421" width="0.0801%" height="15" fill="rgb(229,51,27)" fg:x="663" fg:w="1"/><text x="53.3750%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="53.1250%" y="405" width="0.0801%" height="15" fill="rgb(214,167,49)" fg:x="663" fg:w="1"/><text x="53.3750%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (35 samples, 2.80%)</title><rect x="50.7212%" y="549" width="2.8045%" height="15" fill="rgb(248,140,47)" fg:x="633" fg:w="35"/><text x="50.9712%" y="559.50">se..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="53.2051%" y="533" width="0.3205%" height="15" fill="rgb(228,6,51)" fg:x="664" fg:w="4"/><text x="53.4551%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="53.4455%" y="517" width="0.0801%" height="15" fill="rgb(242,44,53)" fg:x="667" fg:w="1"/><text x="53.6955%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.4455%" y="501" width="0.0801%" height="15" fill="rgb(249,90,50)" fg:x="667" fg:w="1"/><text x="53.6955%" y="511.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="53.7660%" y="469" width="0.0801%" height="15" fill="rgb(222,84,19)" fg:x="671" fg:w="1"/><text x="54.0160%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.08%)</title><rect x="53.7660%" y="453" width="0.0801%" height="15" fill="rgb(214,140,12)" fg:x="671" fg:w="1"/><text x="54.0160%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (51 samples, 4.09%)</title><rect x="49.8397%" y="581" width="4.0865%" height="15" fill="rgb(210,20,43)" fg:x="622" fg:w="51"/><text x="50.0897%" y="591.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (47 samples, 3.77%)</title><rect x="50.1603%" y="565" width="3.7660%" height="15" fill="rgb(243,1,40)" fg:x="626" fg:w="47"/><text x="50.4103%" y="575.50">serd..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="53.5256%" y="549" width="0.4006%" height="15" fill="rgb(224,102,26)" fg:x="668" fg:w="5"/><text x="53.7756%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="53.5256%" y="533" width="0.4006%" height="15" fill="rgb(221,179,1)" fg:x="668" fg:w="5"/><text x="53.7756%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="53.5256%" y="517" width="0.4006%" height="15" fill="rgb(216,209,47)" fg:x="668" fg:w="5"/><text x="53.7756%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="53.7660%" y="501" width="0.1603%" height="15" fill="rgb(251,135,9)" fg:x="671" fg:w="2"/><text x="54.0160%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="53.7660%" y="485" width="0.1603%" height="15" fill="rgb(242,9,36)" fg:x="671" fg:w="2"/><text x="54.0160%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="53.8462%" y="469" width="0.0801%" height="15" fill="rgb(249,60,37)" fg:x="672" fg:w="1"/><text x="54.0962%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.0064%" y="533" width="0.0801%" height="15" fill="rgb(230,66,45)" fg:x="674" fg:w="1"/><text x="54.2564%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.0865%" y="533" width="0.0801%" height="15" fill="rgb(216,1,47)" fg:x="675" fg:w="1"/><text x="54.3365%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.2468%" y="517" width="0.0801%" height="15" fill="rgb(235,8,23)" fg:x="677" fg:w="1"/><text x="54.4968%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.4071%" y="501" width="0.0801%" height="15" fill="rgb(225,136,11)" fg:x="679" fg:w="1"/><text x="54.6571%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="54.4872%" y="501" width="0.0801%" height="15" fill="rgb(228,63,44)" fg:x="680" fg:w="1"/><text x="54.7372%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="54.4872%" y="485" width="0.0801%" height="15" fill="rgb(240,43,52)" fg:x="680" fg:w="1"/><text x="54.7372%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.4872%" y="469" width="0.0801%" height="15" fill="rgb(217,167,36)" fg:x="680" fg:w="1"/><text x="54.7372%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.5673%" y="485" width="0.0801%" height="15" fill="rgb(250,19,6)" fg:x="681" fg:w="1"/><text x="54.8173%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.5673%" y="469" width="0.0801%" height="15" fill="rgb(236,60,51)" fg:x="681" fg:w="1"/><text x="54.8173%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="53.9263%" y="581" width="0.8013%" height="15" fill="rgb(222,217,20)" fg:x="673" fg:w="10"/><text x="54.1763%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10 samples, 0.80%)</title><rect x="53.9263%" y="565" width="0.8013%" height="15" fill="rgb(242,65,52)" fg:x="673" fg:w="10"/><text x="54.1763%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="53.9263%" y="549" width="0.8013%" height="15" fill="rgb(217,5,41)" fg:x="673" fg:w="10"/><text x="54.1763%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="54.1667%" y="533" width="0.5609%" height="15" fill="rgb(223,208,53)" fg:x="676" fg:w="7"/><text x="54.4167%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="54.3269%" y="517" width="0.4006%" height="15" fill="rgb(221,104,30)" fg:x="678" fg:w="5"/><text x="54.5769%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="54.5673%" y="501" width="0.1603%" height="15" fill="rgb(230,210,42)" fg:x="681" fg:w="2"/><text x="54.8173%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="54.6474%" y="485" width="0.0801%" height="15" fill="rgb(206,205,27)" fg:x="682" fg:w="1"/><text x="54.8974%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="54.6474%" y="469" width="0.0801%" height="15" fill="rgb(233,114,38)" fg:x="682" fg:w="1"/><text x="54.8974%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.6474%" y="453" width="0.0801%" height="15" fill="rgb(216,174,36)" fg:x="682" fg:w="1"/><text x="54.8974%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.6474%" y="437" width="0.0801%" height="15" fill="rgb(211,30,9)" fg:x="682" fg:w="1"/><text x="54.8974%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.8878%" y="517" width="0.0801%" height="15" fill="rgb(216,8,21)" fg:x="685" fg:w="1"/><text x="55.1378%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.8878%" y="501" width="0.0801%" height="15" fill="rgb(237,209,39)" fg:x="685" fg:w="1"/><text x="55.1378%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="55.2083%" y="437" width="0.1603%" height="15" fill="rgb(235,111,47)" fg:x="689" fg:w="2"/><text x="55.4583%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.24%)</title><rect x="55.2083%" y="469" width="0.2404%" height="15" fill="rgb(216,139,9)" fg:x="689" fg:w="3"/><text x="55.4583%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="55.2083%" y="453" width="0.2404%" height="15" fill="rgb(248,185,4)" fg:x="689" fg:w="3"/><text x="55.4583%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.3686%" y="437" width="0.0801%" height="15" fill="rgb(239,185,25)" fg:x="691" fg:w="1"/><text x="55.6186%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.3686%" y="421" width="0.0801%" height="15" fill="rgb(233,207,8)" fg:x="691" fg:w="1"/><text x="55.6186%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="55.4487%" y="453" width="0.1603%" height="15" fill="rgb(249,220,24)" fg:x="692" fg:w="2"/><text x="55.6987%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.5288%" y="437" width="0.0801%" height="15" fill="rgb(221,50,14)" fg:x="693" fg:w="1"/><text x="55.7788%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.7692%" y="437" width="0.0801%" height="15" fill="rgb(227,79,42)" fg:x="696" fg:w="1"/><text x="56.0192%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.12%)</title><rect x="54.8077%" y="549" width="1.1218%" height="15" fill="rgb(228,218,49)" fg:x="684" fg:w="14"/><text x="55.0577%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.04%)</title><rect x="54.8878%" y="533" width="1.0417%" height="15" fill="rgb(249,18,15)" fg:x="685" fg:w="13"/><text x="55.1378%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="54.9679%" y="517" width="0.9615%" height="15" fill="rgb(212,84,27)" fg:x="686" fg:w="12"/><text x="55.2179%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="55.1282%" y="501" width="0.8013%" height="15" fill="rgb(207,83,24)" fg:x="688" fg:w="10"/><text x="55.3782%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="55.2083%" y="485" width="0.7212%" height="15" fill="rgb(219,61,7)" fg:x="689" fg:w="9"/><text x="55.4583%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="55.4487%" y="469" width="0.4808%" height="15" fill="rgb(211,43,29)" fg:x="692" fg:w="6"/><text x="55.6987%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="55.6090%" y="453" width="0.3205%" height="15" fill="rgb(243,15,23)" fg:x="694" fg:w="4"/><text x="55.8590%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.8494%" y="437" width="0.0801%" height="15" fill="rgb(217,52,28)" fg:x="697" fg:w="1"/><text x="56.0994%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.8494%" y="421" width="0.0801%" height="15" fill="rgb(210,35,6)" fg:x="697" fg:w="1"/><text x="56.0994%" y="431.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (19 samples, 1.52%)</title><rect x="54.8077%" y="565" width="1.5224%" height="15" fill="rgb(237,187,28)" fg:x="684" fg:w="19"/><text x="55.0577%" y="575.50"></text></g><g><title>treediff::diff::diff (5 samples, 0.40%)</title><rect x="55.9295%" y="549" width="0.4006%" height="15" fill="rgb(231,136,24)" fg:x="698" fg:w="5"/><text x="56.1795%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="55.9295%" y="533" width="0.4006%" height="15" fill="rgb(205,176,52)" fg:x="698" fg:w="5"/><text x="56.1795%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="55.9295%" y="517" width="0.4006%" height="15" fill="rgb(218,65,12)" fg:x="698" fg:w="5"/><text x="56.1795%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.4904%" y="533" width="0.0801%" height="15" fill="rgb(234,101,21)" fg:x="705" fg:w="1"/><text x="56.7404%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="56.5705%" y="533" width="0.4006%" height="15" fill="rgb(206,13,20)" fg:x="706" fg:w="5"/><text x="56.8205%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.8910%" y="517" width="0.0801%" height="15" fill="rgb(236,89,44)" fg:x="710" fg:w="1"/><text x="57.1410%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="56.8910%" y="501" width="0.0801%" height="15" fill="rgb(225,52,17)" fg:x="710" fg:w="1"/><text x="57.1410%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (3 samples, 0.24%)</title><rect x="56.9712%" y="533" width="0.2404%" height="15" fill="rgb(214,27,25)" fg:x="711" fg:w="3"/><text x="57.2212%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (2 samples, 0.16%)</title><rect x="57.0513%" y="517" width="0.1603%" height="15" fill="rgb(240,141,35)" fg:x="712" fg:w="2"/><text x="57.3013%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.2115%" y="501" width="0.1603%" height="15" fill="rgb(216,126,3)" fg:x="714" fg:w="2"/><text x="57.4615%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="57.2115%" y="533" width="0.2404%" height="15" fill="rgb(249,196,23)" fg:x="714" fg:w="3"/><text x="57.4615%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="57.2115%" y="517" width="0.2404%" height="15" fill="rgb(215,185,43)" fg:x="714" fg:w="3"/><text x="57.4615%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.3718%" y="501" width="0.0801%" height="15" fill="rgb(208,194,36)" fg:x="716" fg:w="1"/><text x="57.6218%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.3718%" y="485" width="0.0801%" height="15" fill="rgb(245,182,12)" fg:x="716" fg:w="1"/><text x="57.6218%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="57.6122%" y="501" width="0.0801%" height="15" fill="rgb(244,222,52)" fg:x="719" fg:w="1"/><text x="57.8622%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="57.7724%" y="485" width="0.2404%" height="15" fill="rgb(236,222,51)" fg:x="721" fg:w="3"/><text x="58.0224%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="57.7724%" y="469" width="0.2404%" height="15" fill="rgb(254,71,22)" fg:x="721" fg:w="3"/><text x="58.0224%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.8526%" y="453" width="0.1603%" height="15" fill="rgb(250,104,15)" fg:x="722" fg:w="2"/><text x="58.1026%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="58.0128%" y="453" width="0.0801%" height="15" fill="rgb(229,223,46)" fg:x="724" fg:w="1"/><text x="58.2628%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="58.0929%" y="453" width="0.0801%" height="15" fill="rgb(209,129,18)" fg:x="725" fg:w="1"/><text x="58.3429%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="58.1731%" y="453" width="0.4006%" height="15" fill="rgb(224,160,1)" fg:x="726" fg:w="5"/><text x="58.4231%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="58.1731%" y="437" width="0.4006%" height="15" fill="rgb(237,112,21)" fg:x="726" fg:w="5"/><text x="58.4231%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="58.3333%" y="421" width="0.2404%" height="15" fill="rgb(215,198,53)" fg:x="728" fg:w="3"/><text x="58.5833%" y="431.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="58.3333%" y="405" width="0.2404%" height="15" fill="rgb(218,227,35)" fg:x="728" fg:w="3"/><text x="58.5833%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (8 samples, 0.64%)</title><rect x="58.0128%" y="485" width="0.6410%" height="15" fill="rgb(232,121,22)" fg:x="724" fg:w="8"/><text x="58.2628%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="58.0128%" y="469" width="0.6410%" height="15" fill="rgb(235,52,54)" fg:x="724" fg:w="8"/><text x="58.2628%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.5737%" y="453" width="0.0801%" height="15" fill="rgb(219,21,44)" fg:x="731" fg:w="1"/><text x="58.8237%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.8942%" y="453" width="0.1603%" height="15" fill="rgb(221,51,43)" fg:x="735" fg:w="2"/><text x="59.1442%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.8942%" y="437" width="0.1603%" height="15" fill="rgb(225,77,42)" fg:x="735" fg:w="2"/><text x="59.1442%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.9744%" y="421" width="0.0801%" height="15" fill="rgb(214,117,53)" fg:x="736" fg:w="1"/><text x="59.2244%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="59.4551%" y="405" width="0.0801%" height="15" fill="rgb(218,227,27)" fg:x="742" fg:w="1"/><text x="59.7051%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.5353%" y="389" width="0.0801%" height="15" fill="rgb(223,214,36)" fg:x="743" fg:w="1"/><text x="59.7853%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.5353%" y="373" width="0.0801%" height="15" fill="rgb(235,21,7)" fg:x="743" fg:w="1"/><text x="59.7853%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.5353%" y="357" width="0.0801%" height="15" fill="rgb(244,216,4)" fg:x="743" fg:w="1"/><text x="59.7853%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="59.6154%" y="373" width="0.0801%" height="15" fill="rgb(249,197,24)" fg:x="744" fg:w="1"/><text x="59.8654%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="59.6955%" y="357" width="0.4006%" height="15" fill="rgb(222,169,49)" fg:x="745" fg:w="5"/><text x="59.9455%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="59.7756%" y="341" width="0.3205%" height="15" fill="rgb(207,137,33)" fg:x="746" fg:w="4"/><text x="60.0256%" y="351.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="59.8558%" y="325" width="0.2404%" height="15" fill="rgb(219,180,40)" fg:x="747" fg:w="3"/><text x="60.1058%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="59.6955%" y="373" width="0.5609%" height="15" fill="rgb(250,163,42)" fg:x="745" fg:w="7"/><text x="59.9455%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="60.0962%" y="357" width="0.1603%" height="15" fill="rgb(239,163,0)" fg:x="750" fg:w="2"/><text x="60.3462%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="60.1763%" y="341" width="0.0801%" height="15" fill="rgb(252,38,28)" fg:x="751" fg:w="1"/><text x="60.4263%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (17 samples, 1.36%)</title><rect x="59.2147%" y="437" width="1.3622%" height="15" fill="rgb(254,203,26)" fg:x="739" fg:w="17"/><text x="59.4647%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 1.28%)</title><rect x="59.2949%" y="421" width="1.2821%" height="15" fill="rgb(209,129,32)" fg:x="740" fg:w="16"/><text x="59.5449%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.04%)</title><rect x="59.5353%" y="405" width="1.0417%" height="15" fill="rgb(207,177,52)" fg:x="743" fg:w="13"/><text x="59.7853%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.96%)</title><rect x="59.6154%" y="389" width="0.9615%" height="15" fill="rgb(230,209,36)" fg:x="744" fg:w="12"/><text x="59.8654%" y="399.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="60.2564%" y="373" width="0.3205%" height="15" fill="rgb(238,131,0)" fg:x="752" fg:w="4"/><text x="60.5064%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (37 samples, 2.96%)</title><rect x="57.6923%" y="501" width="2.9647%" height="15" fill="rgb(218,61,31)" fg:x="720" fg:w="37"/><text x="57.9423%" y="511.50">&lt;se..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (25 samples, 2.00%)</title><rect x="58.6538%" y="485" width="2.0032%" height="15" fill="rgb(232,6,53)" fg:x="732" fg:w="25"/><text x="58.9038%" y="495.50">s..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (24 samples, 1.92%)</title><rect x="58.7340%" y="469" width="1.9231%" height="15" fill="rgb(254,100,32)" fg:x="733" fg:w="24"/><text x="58.9840%" y="479.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (20 samples, 1.60%)</title><rect x="59.0545%" y="453" width="1.6026%" height="15" fill="rgb(229,194,49)" fg:x="737" fg:w="20"/><text x="59.3045%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.5769%" y="437" width="0.0801%" height="15" fill="rgb(206,208,39)" fg:x="756" fg:w="1"/><text x="60.8269%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (41 samples, 3.29%)</title><rect x="57.4519%" y="517" width="3.2853%" height="15" fill="rgb(246,226,14)" fg:x="717" fg:w="41"/><text x="57.7019%" y="527.50">&lt;se..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="60.6571%" y="501" width="0.0801%" height="15" fill="rgb(226,48,32)" fg:x="757" fg:w="1"/><text x="60.9071%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.6571%" y="485" width="0.0801%" height="15" fill="rgb(252,43,54)" fg:x="757" fg:w="1"/><text x="60.9071%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.7372%" y="517" width="0.0801%" height="15" fill="rgb(207,124,0)" fg:x="758" fg:w="1"/><text x="60.9872%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (58 samples, 4.65%)</title><rect x="56.3301%" y="565" width="4.6474%" height="15" fill="rgb(248,188,30)" fg:x="703" fg:w="58"/><text x="56.5801%" y="575.50">kerne..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (58 samples, 4.65%)</title><rect x="56.3301%" y="549" width="4.6474%" height="15" fill="rgb(232,14,43)" fg:x="703" fg:w="58"/><text x="56.5801%" y="559.50">&lt;serd..</text></g><g><title>serde::ser::Serializer::collect_map (44 samples, 3.53%)</title><rect x="57.4519%" y="533" width="3.5256%" height="15" fill="rgb(218,52,29)" fg:x="717" fg:w="44"/><text x="57.7019%" y="543.50">ser..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="60.8173%" y="517" width="0.1603%" height="15" fill="rgb(218,176,50)" fg:x="759" fg:w="2"/><text x="61.0673%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="60.8173%" y="501" width="0.1603%" height="15" fill="rgb(213,112,0)" fg:x="759" fg:w="2"/><text x="61.0673%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="61.2179%" y="453" width="0.0801%" height="15" fill="rgb(244,216,8)" fg:x="764" fg:w="1"/><text x="61.4679%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="61.4583%" y="325" width="0.0801%" height="15" fill="rgb(224,148,53)" fg:x="767" fg:w="1"/><text x="61.7083%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.5385%" y="309" width="0.0801%" height="15" fill="rgb(241,133,40)" fg:x="768" fg:w="1"/><text x="61.7885%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="61.3782%" y="341" width="0.3205%" height="15" fill="rgb(232,17,44)" fg:x="766" fg:w="4"/><text x="61.6282%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="61.5385%" y="325" width="0.1603%" height="15" fill="rgb(213,32,25)" fg:x="768" fg:w="2"/><text x="61.7885%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.6186%" y="309" width="0.0801%" height="15" fill="rgb(249,115,27)" fg:x="769" fg:w="1"/><text x="61.8686%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.6186%" y="293" width="0.0801%" height="15" fill="rgb(241,50,1)" fg:x="769" fg:w="1"/><text x="61.8686%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.6186%" y="277" width="0.0801%" height="15" fill="rgb(244,175,40)" fg:x="769" fg:w="1"/><text x="61.8686%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="61.3782%" y="373" width="0.4006%" height="15" fill="rgb(230,94,34)" fg:x="766" fg:w="5"/><text x="61.6282%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="61.3782%" y="357" width="0.4006%" height="15" fill="rgb(223,185,29)" fg:x="766" fg:w="5"/><text x="61.6282%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.6987%" y="341" width="0.0801%" height="15" fill="rgb(225,193,15)" fg:x="770" fg:w="1"/><text x="61.9487%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="61.6987%" y="325" width="0.0801%" height="15" fill="rgb(252,121,38)" fg:x="770" fg:w="1"/><text x="61.9487%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="61.2179%" y="469" width="0.6410%" height="15" fill="rgb(232,44,12)" fg:x="764" fg:w="8"/><text x="61.4679%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="61.2981%" y="453" width="0.5609%" height="15" fill="rgb(226,45,54)" fg:x="765" fg:w="7"/><text x="61.5481%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="61.2981%" y="437" width="0.5609%" height="15" fill="rgb(209,67,17)" fg:x="765" fg:w="7"/><text x="61.5481%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="61.2981%" y="421" width="0.5609%" height="15" fill="rgb(219,108,52)" fg:x="765" fg:w="7"/><text x="61.5481%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="61.3782%" y="405" width="0.4808%" height="15" fill="rgb(216,118,19)" fg:x="766" fg:w="6"/><text x="61.6282%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="61.3782%" y="389" width="0.4808%" height="15" fill="rgb(228,120,40)" fg:x="766" fg:w="6"/><text x="61.6282%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.7788%" y="373" width="0.0801%" height="15" fill="rgb(221,218,34)" fg:x="771" fg:w="1"/><text x="62.0288%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="61.7788%" y="357" width="0.0801%" height="15" fill="rgb(235,89,14)" fg:x="771" fg:w="1"/><text x="62.0288%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="61.9391%" y="453" width="0.0801%" height="15" fill="rgb(248,89,7)" fg:x="773" fg:w="1"/><text x="62.1891%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="61.8590%" y="469" width="0.2404%" height="15" fill="rgb(212,114,34)" fg:x="772" fg:w="3"/><text x="62.1090%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.0192%" y="453" width="0.0801%" height="15" fill="rgb(246,88,32)" fg:x="774" fg:w="1"/><text x="62.2692%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.12%)</title><rect x="61.1378%" y="501" width="1.1218%" height="15" fill="rgb(237,135,0)" fg:x="763" fg:w="14"/><text x="61.3878%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.12%)</title><rect x="61.1378%" y="485" width="1.1218%" height="15" fill="rgb(220,201,54)" fg:x="763" fg:w="14"/><text x="61.3878%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="62.0994%" y="469" width="0.1603%" height="15" fill="rgb(210,142,36)" fg:x="775" fg:w="2"/><text x="62.3494%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="62.0994%" y="453" width="0.1603%" height="15" fill="rgb(247,189,26)" fg:x="775" fg:w="2"/><text x="62.3494%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="62.0994%" y="437" width="0.1603%" height="15" fill="rgb(223,89,24)" fg:x="775" fg:w="2"/><text x="62.3494%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="62.3397%" y="485" width="0.0801%" height="15" fill="rgb(205,90,19)" fg:x="778" fg:w="1"/><text x="62.5897%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5 samples, 0.40%)</title><rect x="62.2596%" y="501" width="0.4006%" height="15" fill="rgb(234,57,40)" fg:x="777" fg:w="5"/><text x="62.5096%" y="511.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="62.4199%" y="485" width="0.2404%" height="15" fill="rgb(213,109,10)" fg:x="779" fg:w="3"/><text x="62.6699%" y="495.50"></text></g><g><title>engine::session::state::State::close (172 samples, 13.78%)</title><rect x="49.2788%" y="645" width="13.7821%" height="15" fill="rgb(214,189,23)" fg:x="615" fg:w="172"/><text x="49.5288%" y="655.50">engine::session::stat..</text></g><g><title>engine::session::state::State::flush_entities (172 samples, 13.78%)</title><rect x="49.2788%" y="629" width="13.7821%" height="15" fill="rgb(234,200,10)" fg:x="615" fg:w="172"/><text x="49.5288%" y="639.50">engine::session::stat..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (169 samples, 13.54%)</title><rect x="49.5192%" y="613" width="13.5417%" height="15" fill="rgb(221,148,16)" fg:x="618" fg:w="169"/><text x="49.7692%" y="623.50">engine::session::int..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (168 samples, 13.46%)</title><rect x="49.5994%" y="597" width="13.4615%" height="15" fill="rgb(230,115,10)" fg:x="619" fg:w="168"/><text x="49.8494%" y="607.50">engine::session::sta..</text></g><g><title>kernel::model::any_entity_changes (104 samples, 8.33%)</title><rect x="54.7276%" y="581" width="8.3333%" height="15" fill="rgb(220,106,42)" fg:x="683" fg:w="104"/><text x="54.9776%" y="591.50">kernel::mode..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (26 samples, 2.08%)</title><rect x="60.9776%" y="565" width="2.0833%" height="15" fill="rgb(225,105,39)" fg:x="761" fg:w="26"/><text x="61.2276%" y="575.50">s..</text></g><g><title>serde_json::de::from_trait (26 samples, 2.08%)</title><rect x="60.9776%" y="549" width="2.0833%" height="15" fill="rgb(211,161,38)" fg:x="761" fg:w="26"/><text x="61.2276%" y="559.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (25 samples, 2.00%)</title><rect x="61.0577%" y="533" width="2.0032%" height="15" fill="rgb(213,23,19)" fg:x="762" fg:w="25"/><text x="61.3077%" y="543.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (25 samples, 2.00%)</title><rect x="61.0577%" y="517" width="2.0032%" height="15" fill="rgb(240,2,33)" fg:x="762" fg:w="25"/><text x="61.3077%" y="527.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="62.6603%" y="501" width="0.4006%" height="15" fill="rgb(221,29,45)" fg:x="782" fg:w="5"/><text x="62.9103%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="62.9006%" y="485" width="0.1603%" height="15" fill="rgb(242,10,19)" fg:x="785" fg:w="2"/><text x="63.1506%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="62.9006%" y="469" width="0.1603%" height="15" fill="rgb(250,84,37)" fg:x="785" fg:w="2"/><text x="63.1506%" y="479.50"></text></g><g><title>kernel::plugins::SessionPlugins::stop (2 samples, 0.16%)</title><rect x="63.0609%" y="645" width="0.1603%" height="15" fill="rgb(214,136,7)" fg:x="787" fg:w="2"/><text x="63.3109%" y="655.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::deliver (1 samples, 0.08%)</title><rect x="63.1410%" y="629" width="0.0801%" height="15" fill="rgb(231,189,12)" fg:x="788" fg:w="1"/><text x="63.3910%" y="639.50"></text></g><g><title>engine::session::Session::close (183 samples, 14.66%)</title><rect x="48.7179%" y="661" width="14.6635%" height="15" fill="rgb(244,40,16)" fg:x="608" fg:w="183"/><text x="48.9679%" y="671.50">engine::session::Sessi..</text></g><g><title>std::time::Instant::elapsed (2 samples, 0.16%)</title><rect x="63.2212%" y="645" width="0.1603%" height="15" fill="rgb(217,29,15)" fg:x="789" fg:w="2"/><text x="63.4712%" y="655.50"></text></g><g><title>std::time::Instant::now (2 samples, 0.16%)</title><rect x="63.2212%" y="629" width="0.1603%" height="15" fill="rgb(235,172,33)" fg:x="789" fg:w="2"/><text x="63.4712%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (2 samples, 0.16%)</title><rect x="63.2212%" y="613" width="0.1603%" height="15" fill="rgb(206,148,28)" fg:x="789" fg:w="2"/><text x="63.4712%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="63.2212%" y="597" width="0.1603%" height="15" fill="rgb(251,167,37)" fg:x="789" fg:w="2"/><text x="63.4712%" y="607.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="63.2212%" y="581" width="0.1603%" height="15" fill="rgb(229,94,52)" fg:x="789" fg:w="2"/><text x="63.4712%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.4615%" y="549" width="0.0801%" height="15" fill="rgb(216,132,9)" fg:x="792" fg:w="1"/><text x="63.7115%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.4615%" y="533" width="0.0801%" height="15" fill="rgb(208,110,29)" fg:x="792" fg:w="1"/><text x="63.7115%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.4615%" y="517" width="0.0801%" height="15" fill="rgb(241,23,8)" fg:x="792" fg:w="1"/><text x="63.7115%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.4615%" y="501" width="0.0801%" height="15" fill="rgb(208,26,35)" fg:x="792" fg:w="1"/><text x="63.7115%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.4615%" y="485" width="0.0801%" height="15" fill="rgb(242,165,34)" fg:x="792" fg:w="1"/><text x="63.7115%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.4615%" y="469" width="0.0801%" height="15" fill="rgb(222,222,33)" fg:x="792" fg:w="1"/><text x="63.7115%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.4615%" y="453" width="0.0801%" height="15" fill="rgb(227,16,52)" fg:x="792" fg:w="1"/><text x="63.7115%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.4615%" y="437" width="0.0801%" height="15" fill="rgb(213,93,12)" fg:x="792" fg:w="1"/><text x="63.7115%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.4615%" y="421" width="0.0801%" height="15" fill="rgb(238,41,5)" fg:x="792" fg:w="1"/><text x="63.7115%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.4615%" y="405" width="0.0801%" height="15" fill="rgb(211,60,15)" fg:x="792" fg:w="1"/><text x="63.7115%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.4615%" y="389" width="0.0801%" height="15" fill="rgb(209,11,34)" fg:x="792" fg:w="1"/><text x="63.7115%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.4615%" y="373" width="0.0801%" height="15" fill="rgb(254,155,53)" fg:x="792" fg:w="1"/><text x="63.7115%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.4615%" y="357" width="0.0801%" height="15" fill="rgb(236,174,8)" fg:x="792" fg:w="1"/><text x="63.7115%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="63.5417%" y="533" width="0.1603%" height="15" fill="rgb(229,31,27)" fg:x="793" fg:w="2"/><text x="63.7917%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="63.9423%" y="421" width="0.0801%" height="15" fill="rgb(242,226,26)" fg:x="798" fg:w="1"/><text x="64.1923%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="63.9423%" y="405" width="0.0801%" height="15" fill="rgb(234,32,40)" fg:x="798" fg:w="1"/><text x="64.1923%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="63.9423%" y="389" width="0.0801%" height="15" fill="rgb(249,226,47)" fg:x="798" fg:w="1"/><text x="64.1923%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.9423%" y="373" width="0.0801%" height="15" fill="rgb(212,6,26)" fg:x="798" fg:w="1"/><text x="64.1923%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.9423%" y="357" width="0.0801%" height="15" fill="rgb(249,202,29)" fg:x="798" fg:w="1"/><text x="64.1923%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.9423%" y="341" width="0.0801%" height="15" fill="rgb(226,106,4)" fg:x="798" fg:w="1"/><text x="64.1923%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.9423%" y="325" width="0.0801%" height="15" fill="rgb(251,2,27)" fg:x="798" fg:w="1"/><text x="64.1923%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="63.9423%" y="309" width="0.0801%" height="15" fill="rgb(236,208,0)" fg:x="798" fg:w="1"/><text x="64.1923%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.9423%" y="293" width="0.0801%" height="15" fill="rgb(211,66,17)" fg:x="798" fg:w="1"/><text x="64.1923%" y="303.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="63.9423%" y="277" width="0.0801%" height="15" fill="rgb(216,129,9)" fg:x="798" fg:w="1"/><text x="64.1923%" y="287.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="63.8622%" y="453" width="0.3205%" height="15" fill="rgb(215,130,23)" fg:x="797" fg:w="4"/><text x="64.1122%" y="463.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="63.9423%" y="437" width="0.2404%" height="15" fill="rgb(253,157,11)" fg:x="798" fg:w="3"/><text x="64.1923%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="64.0224%" y="421" width="0.1603%" height="15" fill="rgb(224,25,14)" fg:x="799" fg:w="2"/><text x="64.2724%" y="431.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="64.0224%" y="405" width="0.1603%" height="15" fill="rgb(238,16,7)" fg:x="799" fg:w="2"/><text x="64.2724%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="64.0224%" y="389" width="0.1603%" height="15" fill="rgb(228,74,11)" fg:x="799" fg:w="2"/><text x="64.2724%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="64.0224%" y="373" width="0.1603%" height="15" fill="rgb(239,221,27)" fg:x="799" fg:w="2"/><text x="64.2724%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.0224%" y="357" width="0.1603%" height="15" fill="rgb(229,166,18)" fg:x="799" fg:w="2"/><text x="64.2724%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="64.0224%" y="341" width="0.1603%" height="15" fill="rgb(254,94,46)" fg:x="799" fg:w="2"/><text x="64.2724%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.0224%" y="325" width="0.1603%" height="15" fill="rgb(241,79,19)" fg:x="799" fg:w="2"/><text x="64.2724%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="64.0224%" y="309" width="0.1603%" height="15" fill="rgb(228,99,51)" fg:x="799" fg:w="2"/><text x="64.2724%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.1026%" y="293" width="0.0801%" height="15" fill="rgb(211,15,6)" fg:x="800" fg:w="1"/><text x="64.3526%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.1026%" y="277" width="0.0801%" height="15" fill="rgb(245,107,54)" fg:x="800" fg:w="1"/><text x="64.3526%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.1026%" y="261" width="0.0801%" height="15" fill="rgb(243,3,2)" fg:x="800" fg:w="1"/><text x="64.3526%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.1026%" y="245" width="0.0801%" height="15" fill="rgb(206,122,10)" fg:x="800" fg:w="1"/><text x="64.3526%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.1026%" y="229" width="0.0801%" height="15" fill="rgb(224,88,4)" fg:x="800" fg:w="1"/><text x="64.3526%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="64.1827%" y="389" width="0.1603%" height="15" fill="rgb(230,1,41)" fg:x="801" fg:w="2"/><text x="64.4327%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.2628%" y="373" width="0.0801%" height="15" fill="rgb(230,1,31)" fg:x="802" fg:w="1"/><text x="64.5128%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.3429%" y="357" width="0.0801%" height="15" fill="rgb(232,67,19)" fg:x="803" fg:w="1"/><text x="64.5929%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.3429%" y="341" width="0.0801%" height="15" fill="rgb(222,206,20)" fg:x="803" fg:w="1"/><text x="64.5929%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="64.4231%" y="325" width="0.1603%" height="15" fill="rgb(217,225,19)" fg:x="804" fg:w="2"/><text x="64.6731%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.5032%" y="309" width="0.0801%" height="15" fill="rgb(234,13,33)" fg:x="805" fg:w="1"/><text x="64.7532%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.6635%" y="261" width="0.0801%" height="15" fill="rgb(254,5,1)" fg:x="807" fg:w="1"/><text x="64.9135%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.6635%" y="309" width="0.1603%" height="15" fill="rgb(211,121,41)" fg:x="807" fg:w="2"/><text x="64.9135%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="64.6635%" y="293" width="0.1603%" height="15" fill="rgb(213,199,35)" fg:x="807" fg:w="2"/><text x="64.9135%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.6635%" y="277" width="0.1603%" height="15" fill="rgb(240,118,22)" fg:x="807" fg:w="2"/><text x="64.9135%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="64.7436%" y="261" width="0.0801%" height="15" fill="rgb(238,184,25)" fg:x="808" fg:w="1"/><text x="64.9936%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.7436%" y="245" width="0.0801%" height="15" fill="rgb(210,165,6)" fg:x="808" fg:w="1"/><text x="64.9936%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.7436%" y="229" width="0.0801%" height="15" fill="rgb(235,149,5)" fg:x="808" fg:w="1"/><text x="64.9936%" y="239.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="64.7436%" y="213" width="0.0801%" height="15" fill="rgb(221,63,5)" fg:x="808" fg:w="1"/><text x="64.9936%" y="223.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.72%)</title><rect x="64.1827%" y="437" width="0.7212%" height="15" fill="rgb(250,44,41)" fg:x="801" fg:w="9"/><text x="64.4327%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="64.1827%" y="421" width="0.7212%" height="15" fill="rgb(235,112,47)" fg:x="801" fg:w="9"/><text x="64.4327%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="64.1827%" y="405" width="0.7212%" height="15" fill="rgb(252,176,34)" fg:x="801" fg:w="9"/><text x="64.4327%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="64.3429%" y="389" width="0.5609%" height="15" fill="rgb(234,50,19)" fg:x="803" fg:w="7"/><text x="64.5929%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="64.3429%" y="373" width="0.5609%" height="15" fill="rgb(241,195,31)" fg:x="803" fg:w="7"/><text x="64.5929%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="64.4231%" y="357" width="0.4808%" height="15" fill="rgb(212,93,11)" fg:x="804" fg:w="6"/><text x="64.6731%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="64.4231%" y="341" width="0.4808%" height="15" fill="rgb(254,98,51)" fg:x="804" fg:w="6"/><text x="64.6731%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="64.5833%" y="325" width="0.3205%" height="15" fill="rgb(246,18,45)" fg:x="806" fg:w="4"/><text x="64.8333%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="64.8237%" y="309" width="0.0801%" height="15" fill="rgb(215,148,23)" fg:x="809" fg:w="1"/><text x="65.0737%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.8237%" y="293" width="0.0801%" height="15" fill="rgb(227,22,7)" fg:x="809" fg:w="1"/><text x="65.0737%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.8237%" y="277" width="0.0801%" height="15" fill="rgb(207,210,37)" fg:x="809" fg:w="1"/><text x="65.0737%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.8237%" y="261" width="0.0801%" height="15" fill="rgb(247,147,42)" fg:x="809" fg:w="1"/><text x="65.0737%" y="271.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="64.8237%" y="245" width="0.0801%" height="15" fill="rgb(226,213,14)" fg:x="809" fg:w="1"/><text x="65.0737%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="64.9038%" y="405" width="0.0801%" height="15" fill="rgb(223,18,10)" fg:x="810" fg:w="1"/><text x="65.1538%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.9840%" y="325" width="0.0801%" height="15" fill="rgb(253,34,22)" fg:x="811" fg:w="1"/><text x="65.2340%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.9840%" y="309" width="0.0801%" height="15" fill="rgb(222,90,31)" fg:x="811" fg:w="1"/><text x="65.2340%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.9840%" y="293" width="0.0801%" height="15" fill="rgb(220,182,30)" fg:x="811" fg:w="1"/><text x="65.2340%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.9840%" y="277" width="0.0801%" height="15" fill="rgb(229,170,12)" fg:x="811" fg:w="1"/><text x="65.2340%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.9840%" y="261" width="0.0801%" height="15" fill="rgb(210,101,21)" fg:x="811" fg:w="1"/><text x="65.2340%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.9840%" y="245" width="0.0801%" height="15" fill="rgb(237,177,31)" fg:x="811" fg:w="1"/><text x="65.2340%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.9840%" y="229" width="0.0801%" height="15" fill="rgb(215,91,34)" fg:x="811" fg:w="1"/><text x="65.2340%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="65.0641%" y="261" width="0.0801%" height="15" fill="rgb(229,206,16)" fg:x="812" fg:w="1"/><text x="65.3141%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="64.9840%" y="357" width="0.2404%" height="15" fill="rgb(235,207,10)" fg:x="811" fg:w="3"/><text x="65.2340%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="64.9840%" y="341" width="0.2404%" height="15" fill="rgb(247,18,10)" fg:x="811" fg:w="3"/><text x="65.2340%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="65.0641%" y="325" width="0.1603%" height="15" fill="rgb(232,4,6)" fg:x="812" fg:w="2"/><text x="65.3141%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="65.0641%" y="309" width="0.1603%" height="15" fill="rgb(247,93,45)" fg:x="812" fg:w="2"/><text x="65.3141%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="65.0641%" y="293" width="0.1603%" height="15" fill="rgb(240,181,18)" fg:x="812" fg:w="2"/><text x="65.3141%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.0641%" y="277" width="0.1603%" height="15" fill="rgb(208,224,0)" fg:x="812" fg:w="2"/><text x="65.3141%" y="287.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="65.1442%" y="261" width="0.0801%" height="15" fill="rgb(224,207,54)" fg:x="813" fg:w="1"/><text x="65.3942%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="65.2244%" y="357" width="0.0801%" height="15" fill="rgb(217,152,29)" fg:x="814" fg:w="1"/><text x="65.4744%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="65.2244%" y="341" width="0.0801%" height="15" fill="rgb(243,78,27)" fg:x="814" fg:w="1"/><text x="65.4744%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="65.2244%" y="325" width="0.0801%" height="15" fill="rgb(228,111,9)" fg:x="814" fg:w="1"/><text x="65.4744%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="65.2244%" y="309" width="0.0801%" height="15" fill="rgb(230,213,21)" fg:x="814" fg:w="1"/><text x="65.4744%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="65.2244%" y="293" width="0.0801%" height="15" fill="rgb(248,50,36)" fg:x="814" fg:w="1"/><text x="65.4744%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.3045%" y="325" width="0.0801%" height="15" fill="rgb(226,19,31)" fg:x="815" fg:w="1"/><text x="65.5545%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.3045%" y="309" width="0.0801%" height="15" fill="rgb(205,132,21)" fg:x="815" fg:w="1"/><text x="65.5545%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="65.3846%" y="309" width="0.0801%" height="15" fill="rgb(207,42,19)" fg:x="816" fg:w="1"/><text x="65.6346%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="65.3846%" y="293" width="0.0801%" height="15" fill="rgb(229,69,35)" fg:x="816" fg:w="1"/><text x="65.6346%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.3846%" y="277" width="0.0801%" height="15" fill="rgb(226,96,11)" fg:x="816" fg:w="1"/><text x="65.6346%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.4647%" y="181" width="0.0801%" height="15" fill="rgb(236,133,54)" fg:x="817" fg:w="1"/><text x="65.7147%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (9 samples, 0.72%)</title><rect x="64.9840%" y="405" width="0.7212%" height="15" fill="rgb(247,166,21)" fg:x="811" fg:w="9"/><text x="65.2340%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="64.9840%" y="389" width="0.7212%" height="15" fill="rgb(220,132,12)" fg:x="811" fg:w="9"/><text x="65.2340%" y="399.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.72%)</title><rect x="64.9840%" y="373" width="0.7212%" height="15" fill="rgb(233,27,30)" fg:x="811" fg:w="9"/><text x="65.2340%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="65.3045%" y="357" width="0.4006%" height="15" fill="rgb(246,161,27)" fg:x="815" fg:w="5"/><text x="65.5545%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="65.3045%" y="341" width="0.4006%" height="15" fill="rgb(240,56,3)" fg:x="815" fg:w="5"/><text x="65.5545%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.32%)</title><rect x="65.3846%" y="325" width="0.3205%" height="15" fill="rgb(242,190,9)" fg:x="816" fg:w="4"/><text x="65.6346%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="65.4647%" y="309" width="0.2404%" height="15" fill="rgb(234,3,52)" fg:x="817" fg:w="3"/><text x="65.7147%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="65.4647%" y="293" width="0.2404%" height="15" fill="rgb(220,221,19)" fg:x="817" fg:w="3"/><text x="65.7147%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="65.4647%" y="277" width="0.2404%" height="15" fill="rgb(247,178,30)" fg:x="817" fg:w="3"/><text x="65.7147%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="65.4647%" y="261" width="0.2404%" height="15" fill="rgb(234,212,27)" fg:x="817" fg:w="3"/><text x="65.7147%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="65.4647%" y="245" width="0.2404%" height="15" fill="rgb(226,199,38)" fg:x="817" fg:w="3"/><text x="65.7147%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="65.4647%" y="229" width="0.2404%" height="15" fill="rgb(248,114,22)" fg:x="817" fg:w="3"/><text x="65.7147%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="65.4647%" y="213" width="0.2404%" height="15" fill="rgb(221,180,4)" fg:x="817" fg:w="3"/><text x="65.7147%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="65.4647%" y="197" width="0.2404%" height="15" fill="rgb(220,229,24)" fg:x="817" fg:w="3"/><text x="65.7147%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="65.5449%" y="181" width="0.1603%" height="15" fill="rgb(226,184,27)" fg:x="818" fg:w="2"/><text x="65.7949%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.5449%" y="165" width="0.1603%" height="15" fill="rgb(232,99,15)" fg:x="818" fg:w="2"/><text x="65.7949%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.5449%" y="149" width="0.1603%" height="15" fill="rgb(250,167,16)" fg:x="818" fg:w="2"/><text x="65.7949%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="65.6250%" y="133" width="0.0801%" height="15" fill="rgb(243,113,6)" fg:x="819" fg:w="1"/><text x="65.8750%" y="143.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="65.6250%" y="117" width="0.0801%" height="15" fill="rgb(244,147,52)" fg:x="819" fg:w="1"/><text x="65.8750%" y="127.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (20 samples, 1.60%)</title><rect x="64.1827%" y="453" width="1.6026%" height="15" fill="rgb(235,59,50)" fg:x="801" fg:w="20"/><text x="64.4327%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.88%)</title><rect x="64.9038%" y="437" width="0.8814%" height="15" fill="rgb(250,188,6)" fg:x="810" fg:w="11"/><text x="65.1538%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="64.9038%" y="421" width="0.8814%" height="15" fill="rgb(236,173,11)" fg:x="810" fg:w="11"/><text x="65.1538%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.7051%" y="405" width="0.0801%" height="15" fill="rgb(233,64,3)" fg:x="820" fg:w="1"/><text x="65.9551%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.7051%" y="389" width="0.0801%" height="15" fill="rgb(207,92,7)" fg:x="820" fg:w="1"/><text x="65.9551%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.7051%" y="373" width="0.0801%" height="15" fill="rgb(221,30,19)" fg:x="820" fg:w="1"/><text x="65.9551%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.7853%" y="405" width="0.0801%" height="15" fill="rgb(245,22,49)" fg:x="821" fg:w="1"/><text x="66.0353%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.7853%" y="389" width="0.0801%" height="15" fill="rgb(218,39,20)" fg:x="821" fg:w="1"/><text x="66.0353%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.7853%" y="373" width="0.0801%" height="15" fill="rgb(222,144,21)" fg:x="821" fg:w="1"/><text x="66.0353%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.7853%" y="357" width="0.0801%" height="15" fill="rgb(222,78,51)" fg:x="821" fg:w="1"/><text x="66.0353%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (26 samples, 2.08%)</title><rect x="63.8622%" y="485" width="2.0833%" height="15" fill="rgb(248,213,53)" fg:x="797" fg:w="26"/><text x="64.1122%" y="495.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (26 samples, 2.08%)</title><rect x="63.8622%" y="469" width="2.0833%" height="15" fill="rgb(245,28,34)" fg:x="797" fg:w="26"/><text x="64.1122%" y="479.50">e..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="65.7853%" y="453" width="0.1603%" height="15" fill="rgb(229,186,26)" fg:x="821" fg:w="2"/><text x="66.0353%" y="463.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="65.7853%" y="437" width="0.1603%" height="15" fill="rgb(224,0,41)" fg:x="821" fg:w="2"/><text x="66.0353%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="65.7853%" y="421" width="0.1603%" height="15" fill="rgb(223,136,51)" fg:x="821" fg:w="2"/><text x="66.0353%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.8654%" y="405" width="0.0801%" height="15" fill="rgb(234,50,9)" fg:x="822" fg:w="1"/><text x="66.1154%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.8654%" y="389" width="0.0801%" height="15" fill="rgb(242,164,20)" fg:x="822" fg:w="1"/><text x="66.1154%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.8654%" y="373" width="0.0801%" height="15" fill="rgb(230,169,22)" fg:x="822" fg:w="1"/><text x="66.1154%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.8654%" y="357" width="0.0801%" height="15" fill="rgb(228,82,26)" fg:x="822" fg:w="1"/><text x="66.1154%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (29 samples, 2.32%)</title><rect x="63.7821%" y="501" width="2.3237%" height="15" fill="rgb(244,220,31)" fg:x="796" fg:w="29"/><text x="64.0321%" y="511.50">&lt;..</text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (2 samples, 0.16%)</title><rect x="65.9455%" y="485" width="0.1603%" height="15" fill="rgb(214,35,25)" fg:x="823" fg:w="2"/><text x="66.1955%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="65.9455%" y="469" width="0.1603%" height="15" fill="rgb(245,162,54)" fg:x="823" fg:w="2"/><text x="66.1955%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="65.9455%" y="453" width="0.1603%" height="15" fill="rgb(210,43,24)" fg:x="823" fg:w="2"/><text x="66.1955%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="65.9455%" y="437" width="0.1603%" height="15" fill="rgb(226,145,51)" fg:x="823" fg:w="2"/><text x="66.1955%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="65.9455%" y="421" width="0.1603%" height="15" fill="rgb(237,52,53)" fg:x="823" fg:w="2"/><text x="66.1955%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="65.9455%" y="405" width="0.1603%" height="15" fill="rgb(216,226,7)" fg:x="823" fg:w="2"/><text x="66.1955%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="65.9455%" y="389" width="0.1603%" height="15" fill="rgb(206,223,18)" fg:x="823" fg:w="2"/><text x="66.1955%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="65.9455%" y="373" width="0.1603%" height="15" fill="rgb(221,1,10)" fg:x="823" fg:w="2"/><text x="66.1955%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="65.9455%" y="357" width="0.1603%" height="15" fill="rgb(221,151,42)" fg:x="823" fg:w="2"/><text x="66.1955%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="65.9455%" y="341" width="0.1603%" height="15" fill="rgb(205,183,46)" fg:x="823" fg:w="2"/><text x="66.1955%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="65.9455%" y="325" width="0.1603%" height="15" fill="rgb(239,229,1)" fg:x="823" fg:w="2"/><text x="66.1955%" y="335.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="65.9455%" y="309" width="0.1603%" height="15" fill="rgb(236,192,23)" fg:x="823" fg:w="2"/><text x="66.1955%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="65.9455%" y="293" width="0.1603%" height="15" fill="rgb(215,146,3)" fg:x="823" fg:w="2"/><text x="66.1955%" y="303.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.1058%" y="501" width="0.0801%" height="15" fill="rgb(235,52,27)" fg:x="825" fg:w="1"/><text x="66.3558%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.1058%" y="485" width="0.0801%" height="15" fill="rgb(236,45,20)" fg:x="825" fg:w="1"/><text x="66.3558%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.1058%" y="469" width="0.0801%" height="15" fill="rgb(235,86,41)" fg:x="825" fg:w="1"/><text x="66.3558%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.1058%" y="453" width="0.0801%" height="15" fill="rgb(235,27,27)" fg:x="825" fg:w="1"/><text x="66.3558%" y="463.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (34 samples, 2.72%)</title><rect x="63.5417%" y="549" width="2.7244%" height="15" fill="rgb(232,4,34)" fg:x="793" fg:w="34"/><text x="63.7917%" y="559.50">&lt;p..</text></g><g><title>kernel::model::entry::Entry::scope (32 samples, 2.56%)</title><rect x="63.7019%" y="533" width="2.5641%" height="15" fill="rgb(215,22,10)" fg:x="795" fg:w="32"/><text x="63.9519%" y="543.50">ke..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (32 samples, 2.56%)</title><rect x="63.7019%" y="517" width="2.5641%" height="15" fill="rgb(230,228,27)" fg:x="795" fg:w="32"/><text x="63.9519%" y="527.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.1859%" y="501" width="0.0801%" height="15" fill="rgb(216,26,51)" fg:x="826" fg:w="1"/><text x="66.4359%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.1859%" y="485" width="0.0801%" height="15" fill="rgb(225,180,50)" fg:x="826" fg:w="1"/><text x="66.4359%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.1859%" y="469" width="0.0801%" height="15" fill="rgb(236,211,2)" fg:x="826" fg:w="1"/><text x="66.4359%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="66.2660%" y="501" width="0.0801%" height="15" fill="rgb(250,51,20)" fg:x="827" fg:w="1"/><text x="66.5160%" y="511.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="66.2660%" y="485" width="0.0801%" height="15" fill="rgb(232,70,37)" fg:x="827" fg:w="1"/><text x="66.5160%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.2660%" y="469" width="0.0801%" height="15" fill="rgb(226,183,39)" fg:x="827" fg:w="1"/><text x="66.5160%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.2660%" y="453" width="0.0801%" height="15" fill="rgb(232,228,21)" fg:x="827" fg:w="1"/><text x="66.5160%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.2660%" y="437" width="0.0801%" height="15" fill="rgb(251,118,32)" fg:x="827" fg:w="1"/><text x="66.5160%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.2660%" y="421" width="0.0801%" height="15" fill="rgb(235,172,38)" fg:x="827" fg:w="1"/><text x="66.5160%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.2660%" y="405" width="0.0801%" height="15" fill="rgb(235,63,18)" fg:x="827" fg:w="1"/><text x="66.5160%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.2660%" y="389" width="0.0801%" height="15" fill="rgb(225,4,7)" fg:x="827" fg:w="1"/><text x="66.5160%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.2660%" y="373" width="0.0801%" height="15" fill="rgb(231,61,1)" fg:x="827" fg:w="1"/><text x="66.5160%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.2660%" y="357" width="0.0801%" height="15" fill="rgb(241,155,22)" fg:x="827" fg:w="1"/><text x="66.5160%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.2660%" y="341" width="0.0801%" height="15" fill="rgb(209,100,26)" fg:x="827" fg:w="1"/><text x="66.5160%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.2660%" y="325" width="0.0801%" height="15" fill="rgb(248,181,15)" fg:x="827" fg:w="1"/><text x="66.5160%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.2660%" y="309" width="0.0801%" height="15" fill="rgb(214,94,31)" fg:x="827" fg:w="1"/><text x="66.5160%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.2660%" y="293" width="0.0801%" height="15" fill="rgb(207,16,42)" fg:x="827" fg:w="1"/><text x="66.5160%" y="303.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="66.3462%" y="293" width="0.0801%" height="15" fill="rgb(208,127,13)" fg:x="828" fg:w="1"/><text x="66.5962%" y="303.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="66.3462%" y="277" width="0.0801%" height="15" fill="rgb(220,211,18)" fg:x="828" fg:w="1"/><text x="66.5962%" y="287.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (38 samples, 3.04%)</title><rect x="63.4615%" y="565" width="3.0449%" height="15" fill="rgb(221,55,38)" fg:x="792" fg:w="38"/><text x="63.7115%" y="575.50">&lt;en..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (3 samples, 0.24%)</title><rect x="66.2660%" y="549" width="0.2404%" height="15" fill="rgb(252,219,45)" fg:x="827" fg:w="3"/><text x="66.5160%" y="559.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="66.2660%" y="533" width="0.2404%" height="15" fill="rgb(248,53,35)" fg:x="827" fg:w="3"/><text x="66.5160%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="66.2660%" y="517" width="0.2404%" height="15" fill="rgb(210,87,2)" fg:x="827" fg:w="3"/><text x="66.5160%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="66.3462%" y="501" width="0.1603%" height="15" fill="rgb(239,133,9)" fg:x="828" fg:w="2"/><text x="66.5962%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="66.3462%" y="485" width="0.1603%" height="15" fill="rgb(214,114,5)" fg:x="828" fg:w="2"/><text x="66.5962%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="66.3462%" y="469" width="0.1603%" height="15" fill="rgb(206,124,24)" fg:x="828" fg:w="2"/><text x="66.5962%" y="479.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="66.3462%" y="453" width="0.1603%" height="15" fill="rgb(212,57,33)" fg:x="828" fg:w="2"/><text x="66.5962%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="66.3462%" y="437" width="0.1603%" height="15" fill="rgb(246,21,20)" fg:x="828" fg:w="2"/><text x="66.5962%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="66.3462%" y="421" width="0.1603%" height="15" fill="rgb(253,210,39)" fg:x="828" fg:w="2"/><text x="66.5962%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="66.3462%" y="405" width="0.1603%" height="15" fill="rgb(209,187,24)" fg:x="828" fg:w="2"/><text x="66.5962%" y="415.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="66.3462%" y="389" width="0.1603%" height="15" fill="rgb(246,136,17)" fg:x="828" fg:w="2"/><text x="66.5962%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="66.3462%" y="373" width="0.1603%" height="15" fill="rgb(211,0,30)" fg:x="828" fg:w="2"/><text x="66.5962%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="66.3462%" y="357" width="0.1603%" height="15" fill="rgb(216,199,7)" fg:x="828" fg:w="2"/><text x="66.5962%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="66.3462%" y="341" width="0.1603%" height="15" fill="rgb(207,210,19)" fg:x="828" fg:w="2"/><text x="66.5962%" y="351.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="66.3462%" y="325" width="0.1603%" height="15" fill="rgb(237,187,39)" fg:x="828" fg:w="2"/><text x="66.5962%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="66.3462%" y="309" width="0.1603%" height="15" fill="rgb(243,194,42)" fg:x="828" fg:w="2"/><text x="66.5962%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.4263%" y="293" width="0.0801%" height="15" fill="rgb(225,194,19)" fg:x="829" fg:w="1"/><text x="66.6763%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.4263%" y="277" width="0.0801%" height="15" fill="rgb(224,192,14)" fg:x="829" fg:w="1"/><text x="66.6763%" y="287.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="66.4263%" y="261" width="0.0801%" height="15" fill="rgb(252,21,18)" fg:x="829" fg:w="1"/><text x="66.6763%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="66.4263%" y="245" width="0.0801%" height="15" fill="rgb(229,69,19)" fg:x="829" fg:w="1"/><text x="66.6763%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="66.4263%" y="229" width="0.0801%" height="15" fill="rgb(251,31,53)" fg:x="829" fg:w="1"/><text x="66.6763%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="66.4263%" y="213" width="0.0801%" height="15" fill="rgb(218,39,50)" fg:x="829" fg:w="1"/><text x="66.6763%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="66.4263%" y="197" width="0.0801%" height="15" fill="rgb(231,50,17)" fg:x="829" fg:w="1"/><text x="66.6763%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="66.4263%" y="181" width="0.0801%" height="15" fill="rgb(223,217,31)" fg:x="829" fg:w="1"/><text x="66.6763%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="66.4263%" y="165" width="0.0801%" height="15" fill="rgb(225,91,12)" fg:x="829" fg:w="1"/><text x="66.6763%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="66.4263%" y="149" width="0.0801%" height="15" fill="rgb(242,58,43)" fg:x="829" fg:w="1"/><text x="66.6763%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="66.4263%" y="133" width="0.0801%" height="15" fill="rgb(242,32,21)" fg:x="829" fg:w="1"/><text x="66.6763%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="66.4263%" y="117" width="0.0801%" height="15" fill="rgb(211,127,1)" fg:x="829" fg:w="1"/><text x="66.6763%" y="127.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="66.4263%" y="101" width="0.0801%" height="15" fill="rgb(231,93,13)" fg:x="829" fg:w="1"/><text x="66.6763%" y="111.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="66.4263%" y="85" width="0.0801%" height="15" fill="rgb(218,83,4)" fg:x="829" fg:w="1"/><text x="66.6763%" y="95.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="66.4263%" y="69" width="0.0801%" height="15" fill="rgb(230,218,10)" fg:x="829" fg:w="1"/><text x="66.6763%" y="79.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (1 samples, 0.08%)</title><rect x="66.6667%" y="437" width="0.0801%" height="15" fill="rgb(235,127,18)" fg:x="832" fg:w="1"/><text x="66.9167%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="66.6667%" y="421" width="0.0801%" height="15" fill="rgb(213,137,46)" fg:x="832" fg:w="1"/><text x="66.9167%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="66.6667%" y="405" width="0.0801%" height="15" fill="rgb(235,179,24)" fg:x="832" fg:w="1"/><text x="66.9167%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (43 samples, 3.45%)</title><rect x="63.3814%" y="629" width="3.4455%" height="15" fill="rgb(247,58,49)" fg:x="791" fg:w="43"/><text x="63.6314%" y="639.50">&lt;en..</text></g><g><title>kernel::plugins::mw::apply_middleware (43 samples, 3.45%)</title><rect x="63.3814%" y="613" width="3.4455%" height="15" fill="rgb(242,222,5)" fg:x="791" fg:w="43"/><text x="63.6314%" y="623.50">ker..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (43 samples, 3.45%)</title><rect x="63.3814%" y="597" width="3.4455%" height="15" fill="rgb(230,16,48)" fg:x="791" fg:w="43"/><text x="63.6314%" y="607.50">ker..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (43 samples, 3.45%)</title><rect x="63.3814%" y="581" width="3.4455%" height="15" fill="rgb(241,192,16)" fg:x="791" fg:w="43"/><text x="63.6314%" y="591.50">&lt;en..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="66.5064%" y="565" width="0.3205%" height="15" fill="rgb(209,25,37)" fg:x="830" fg:w="4"/><text x="66.7564%" y="575.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (4 samples, 0.32%)</title><rect x="66.5064%" y="549" width="0.3205%" height="15" fill="rgb(229,215,13)" fg:x="830" fg:w="4"/><text x="66.7564%" y="559.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="66.5865%" y="533" width="0.2404%" height="15" fill="rgb(213,199,8)" fg:x="831" fg:w="3"/><text x="66.8365%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="66.6667%" y="517" width="0.1603%" height="15" fill="rgb(226,151,19)" fg:x="832" fg:w="2"/><text x="66.9167%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="66.6667%" y="501" width="0.1603%" height="15" fill="rgb(254,183,12)" fg:x="832" fg:w="2"/><text x="66.9167%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="66.6667%" y="485" width="0.1603%" height="15" fill="rgb(245,8,3)" fg:x="832" fg:w="2"/><text x="66.9167%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.16%)</title><rect x="66.6667%" y="469" width="0.1603%" height="15" fill="rgb(229,159,35)" fg:x="832" fg:w="2"/><text x="66.9167%" y="479.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (2 samples, 0.16%)</title><rect x="66.6667%" y="453" width="0.1603%" height="15" fill="rgb(209,145,1)" fg:x="832" fg:w="2"/><text x="66.9167%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="66.7468%" y="437" width="0.0801%" height="15" fill="rgb(228,183,16)" fg:x="833" fg:w="1"/><text x="66.9968%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="66.7468%" y="421" width="0.0801%" height="15" fill="rgb(222,68,0)" fg:x="833" fg:w="1"/><text x="66.9968%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.7468%" y="405" width="0.0801%" height="15" fill="rgb(209,130,50)" fg:x="833" fg:w="1"/><text x="66.9968%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.8269%" y="501" width="0.0801%" height="15" fill="rgb(228,176,44)" fg:x="834" fg:w="1"/><text x="67.0769%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.8269%" y="485" width="0.0801%" height="15" fill="rgb(221,164,2)" fg:x="834" fg:w="1"/><text x="67.0769%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.8269%" y="469" width="0.0801%" height="15" fill="rgb(249,199,49)" fg:x="834" fg:w="1"/><text x="67.0769%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.8269%" y="453" width="0.0801%" height="15" fill="rgb(228,205,53)" fg:x="834" fg:w="1"/><text x="67.0769%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.8269%" y="437" width="0.0801%" height="15" fill="rgb(235,77,20)" fg:x="834" fg:w="1"/><text x="67.0769%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.8269%" y="421" width="0.0801%" height="15" fill="rgb(227,147,34)" fg:x="834" fg:w="1"/><text x="67.0769%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.8269%" y="405" width="0.0801%" height="15" fill="rgb(226,203,52)" fg:x="834" fg:w="1"/><text x="67.0769%" y="415.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (2 samples, 0.16%)</title><rect x="66.8269%" y="597" width="0.1603%" height="15" fill="rgb(226,186,23)" fg:x="834" fg:w="2"/><text x="67.0769%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="66.8269%" y="581" width="0.1603%" height="15" fill="rgb(236,13,30)" fg:x="834" fg:w="2"/><text x="67.0769%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="66.8269%" y="565" width="0.1603%" height="15" fill="rgb(228,121,22)" fg:x="834" fg:w="2"/><text x="67.0769%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="66.8269%" y="549" width="0.1603%" height="15" fill="rgb(248,222,26)" fg:x="834" fg:w="2"/><text x="67.0769%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="66.8269%" y="533" width="0.1603%" height="15" fill="rgb(251,72,25)" fg:x="834" fg:w="2"/><text x="67.0769%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="66.8269%" y="517" width="0.1603%" height="15" fill="rgb(223,114,24)" fg:x="834" fg:w="2"/><text x="67.0769%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="66.9071%" y="501" width="0.0801%" height="15" fill="rgb(232,190,43)" fg:x="835" fg:w="1"/><text x="67.1571%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="66.9071%" y="485" width="0.0801%" height="15" fill="rgb(208,90,0)" fg:x="835" fg:w="1"/><text x="67.1571%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.0673%" y="501" width="0.1603%" height="15" fill="rgb(234,149,31)" fg:x="837" fg:w="2"/><text x="67.3173%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.0673%" y="485" width="0.1603%" height="15" fill="rgb(235,188,36)" fg:x="837" fg:w="2"/><text x="67.3173%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.0673%" y="469" width="0.1603%" height="15" fill="rgb(219,59,51)" fg:x="837" fg:w="2"/><text x="67.3173%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.0673%" y="453" width="0.1603%" height="15" fill="rgb(236,101,40)" fg:x="837" fg:w="2"/><text x="67.3173%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.1474%" y="437" width="0.0801%" height="15" fill="rgb(235,33,7)" fg:x="838" fg:w="1"/><text x="67.3974%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.1474%" y="421" width="0.0801%" height="15" fill="rgb(213,169,26)" fg:x="838" fg:w="1"/><text x="67.3974%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.1474%" y="405" width="0.0801%" height="15" fill="rgb(218,99,34)" fg:x="838" fg:w="1"/><text x="67.3974%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.1474%" y="389" width="0.0801%" height="15" fill="rgb(210,57,24)" fg:x="838" fg:w="1"/><text x="67.3974%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.1474%" y="373" width="0.0801%" height="15" fill="rgb(231,181,54)" fg:x="838" fg:w="1"/><text x="67.3974%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.1474%" y="357" width="0.0801%" height="15" fill="rgb(251,188,48)" fg:x="838" fg:w="1"/><text x="67.3974%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.1474%" y="341" width="0.0801%" height="15" fill="rgb(243,12,45)" fg:x="838" fg:w="1"/><text x="67.3974%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.1474%" y="325" width="0.0801%" height="15" fill="rgb(250,197,9)" fg:x="838" fg:w="1"/><text x="67.3974%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.1474%" y="309" width="0.0801%" height="15" fill="rgb(235,149,35)" fg:x="838" fg:w="1"/><text x="67.3974%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.1474%" y="293" width="0.0801%" height="15" fill="rgb(219,27,19)" fg:x="838" fg:w="1"/><text x="67.3974%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.1474%" y="277" width="0.0801%" height="15" fill="rgb(244,78,31)" fg:x="838" fg:w="1"/><text x="67.3974%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.1474%" y="261" width="0.0801%" height="15" fill="rgb(241,13,4)" fg:x="838" fg:w="1"/><text x="67.3974%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="67.0673%" y="549" width="0.2404%" height="15" fill="rgb(212,194,26)" fg:x="837" fg:w="3"/><text x="67.3173%" y="559.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="67.0673%" y="533" width="0.2404%" height="15" fill="rgb(236,80,11)" fg:x="837" fg:w="3"/><text x="67.3173%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="67.0673%" y="517" width="0.2404%" height="15" fill="rgb(206,1,24)" fg:x="837" fg:w="3"/><text x="67.3173%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.2276%" y="501" width="0.0801%" height="15" fill="rgb(238,215,50)" fg:x="839" fg:w="1"/><text x="67.4776%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.2276%" y="485" width="0.0801%" height="15" fill="rgb(254,126,32)" fg:x="839" fg:w="1"/><text x="67.4776%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.2276%" y="469" width="0.0801%" height="15" fill="rgb(206,111,53)" fg:x="839" fg:w="1"/><text x="67.4776%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.2276%" y="453" width="0.0801%" height="15" fill="rgb(218,72,44)" fg:x="839" fg:w="1"/><text x="67.4776%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="67.2276%" y="437" width="0.0801%" height="15" fill="rgb(238,25,3)" fg:x="839" fg:w="1"/><text x="67.4776%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.2276%" y="421" width="0.0801%" height="15" fill="rgb(250,191,7)" fg:x="839" fg:w="1"/><text x="67.4776%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.2276%" y="405" width="0.0801%" height="15" fill="rgb(238,56,30)" fg:x="839" fg:w="1"/><text x="67.4776%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.5481%" y="501" width="0.0801%" height="15" fill="rgb(210,27,45)" fg:x="843" fg:w="1"/><text x="67.7981%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.5481%" y="485" width="0.0801%" height="15" fill="rgb(207,10,50)" fg:x="843" fg:w="1"/><text x="67.7981%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.5481%" y="469" width="0.0801%" height="15" fill="rgb(249,30,23)" fg:x="843" fg:w="1"/><text x="67.7981%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.5481%" y="453" width="0.0801%" height="15" fill="rgb(250,80,12)" fg:x="843" fg:w="1"/><text x="67.7981%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.5481%" y="437" width="0.0801%" height="15" fill="rgb(210,221,37)" fg:x="843" fg:w="1"/><text x="67.7981%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.5481%" y="421" width="0.0801%" height="15" fill="rgb(205,96,24)" fg:x="843" fg:w="1"/><text x="67.7981%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.5481%" y="405" width="0.0801%" height="15" fill="rgb(247,104,22)" fg:x="843" fg:w="1"/><text x="67.7981%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.5481%" y="389" width="0.0801%" height="15" fill="rgb(222,61,53)" fg:x="843" fg:w="1"/><text x="67.7981%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.5481%" y="373" width="0.0801%" height="15" fill="rgb(241,11,53)" fg:x="843" fg:w="1"/><text x="67.7981%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.5481%" y="357" width="0.0801%" height="15" fill="rgb(230,111,47)" fg:x="843" fg:w="1"/><text x="67.7981%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.5481%" y="341" width="0.0801%" height="15" fill="rgb(218,187,29)" fg:x="843" fg:w="1"/><text x="67.7981%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.5481%" y="325" width="0.0801%" height="15" fill="rgb(210,121,46)" fg:x="843" fg:w="1"/><text x="67.7981%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.5481%" y="309" width="0.0801%" height="15" fill="rgb(250,43,19)" fg:x="843" fg:w="1"/><text x="67.7981%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.5481%" y="293" width="0.0801%" height="15" fill="rgb(238,61,12)" fg:x="843" fg:w="1"/><text x="67.7981%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.5481%" y="277" width="0.0801%" height="15" fill="rgb(251,198,9)" fg:x="843" fg:w="1"/><text x="67.7981%" y="287.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="67.5481%" y="261" width="0.0801%" height="15" fill="rgb(214,192,38)" fg:x="843" fg:w="1"/><text x="67.7981%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="67.5481%" y="245" width="0.0801%" height="15" fill="rgb(214,73,19)" fg:x="843" fg:w="1"/><text x="67.7981%" y="255.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (11 samples, 0.88%)</title><rect x="66.9872%" y="581" width="0.8814%" height="15" fill="rgb(249,222,49)" fg:x="836" fg:w="11"/><text x="67.2372%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (10 samples, 0.80%)</title><rect x="67.0673%" y="565" width="0.8013%" height="15" fill="rgb(231,181,54)" fg:x="837" fg:w="10"/><text x="67.3173%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="67.3077%" y="549" width="0.5609%" height="15" fill="rgb(240,1,13)" fg:x="840" fg:w="7"/><text x="67.5577%" y="559.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="67.4679%" y="533" width="0.4006%" height="15" fill="rgb(225,21,16)" fg:x="842" fg:w="5"/><text x="67.7179%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="67.4679%" y="517" width="0.4006%" height="15" fill="rgb(246,176,50)" fg:x="842" fg:w="5"/><text x="67.7179%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="67.6282%" y="501" width="0.2404%" height="15" fill="rgb(208,96,50)" fg:x="844" fg:w="3"/><text x="67.8782%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="67.6282%" y="485" width="0.2404%" height="15" fill="rgb(240,219,19)" fg:x="844" fg:w="3"/><text x="67.8782%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="67.7083%" y="469" width="0.1603%" height="15" fill="rgb(234,73,5)" fg:x="845" fg:w="2"/><text x="67.9583%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="67.7083%" y="453" width="0.1603%" height="15" fill="rgb(225,52,53)" fg:x="845" fg:w="2"/><text x="67.9583%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="67.7083%" y="437" width="0.1603%" height="15" fill="rgb(250,12,14)" fg:x="845" fg:w="2"/><text x="67.9583%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="67.7083%" y="421" width="0.1603%" height="15" fill="rgb(242,185,54)" fg:x="845" fg:w="2"/><text x="67.9583%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="67.7083%" y="405" width="0.1603%" height="15" fill="rgb(211,206,31)" fg:x="845" fg:w="2"/><text x="67.9583%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="67.7885%" y="389" width="0.0801%" height="15" fill="rgb(252,10,33)" fg:x="846" fg:w="1"/><text x="68.0385%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="67.7885%" y="373" width="0.0801%" height="15" fill="rgb(216,26,7)" fg:x="846" fg:w="1"/><text x="68.0385%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="68.0288%" y="517" width="0.2404%" height="15" fill="rgb(228,112,40)" fg:x="849" fg:w="3"/><text x="68.2788%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.1891%" y="501" width="0.0801%" height="15" fill="rgb(212,21,16)" fg:x="851" fg:w="1"/><text x="68.4391%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="68.2692%" y="501" width="0.0801%" height="15" fill="rgb(249,3,29)" fg:x="852" fg:w="1"/><text x="68.5192%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.3494%" y="485" width="0.0801%" height="15" fill="rgb(221,42,51)" fg:x="853" fg:w="1"/><text x="68.5994%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.5096%" y="453" width="0.0801%" height="15" fill="rgb(225,90,21)" fg:x="855" fg:w="1"/><text x="68.7596%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.5096%" y="437" width="0.0801%" height="15" fill="rgb(242,131,5)" fg:x="855" fg:w="1"/><text x="68.7596%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.5897%" y="453" width="0.0801%" height="15" fill="rgb(220,187,28)" fg:x="856" fg:w="1"/><text x="68.8397%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.5897%" y="437" width="0.0801%" height="15" fill="rgb(210,75,48)" fg:x="856" fg:w="1"/><text x="68.8397%" y="447.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="68.5897%" y="421" width="0.0801%" height="15" fill="rgb(211,91,40)" fg:x="856" fg:w="1"/><text x="68.8397%" y="431.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="68.5897%" y="405" width="0.0801%" height="15" fill="rgb(205,43,18)" fg:x="856" fg:w="1"/><text x="68.8397%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.7500%" y="421" width="0.0801%" height="15" fill="rgb(207,123,11)" fg:x="858" fg:w="1"/><text x="69.0000%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.7500%" y="405" width="0.0801%" height="15" fill="rgb(235,89,39)" fg:x="858" fg:w="1"/><text x="69.0000%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="68.7500%" y="389" width="0.0801%" height="15" fill="rgb(245,217,27)" fg:x="858" fg:w="1"/><text x="69.0000%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="68.8301%" y="389" width="0.1603%" height="15" fill="rgb(216,55,17)" fg:x="859" fg:w="2"/><text x="69.0801%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="68.8301%" y="373" width="0.1603%" height="15" fill="rgb(252,116,44)" fg:x="859" fg:w="2"/><text x="69.0801%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="68.7500%" y="437" width="0.3205%" height="15" fill="rgb(229,153,4)" fg:x="858" fg:w="4"/><text x="69.0000%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="68.8301%" y="421" width="0.2404%" height="15" fill="rgb(222,24,35)" fg:x="859" fg:w="3"/><text x="69.0801%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="68.8301%" y="405" width="0.2404%" height="15" fill="rgb(214,26,20)" fg:x="859" fg:w="3"/><text x="69.0801%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="68.9904%" y="389" width="0.0801%" height="15" fill="rgb(215,14,45)" fg:x="861" fg:w="1"/><text x="69.2404%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.9904%" y="373" width="0.0801%" height="15" fill="rgb(217,212,50)" fg:x="861" fg:w="1"/><text x="69.2404%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.9904%" y="357" width="0.0801%" height="15" fill="rgb(230,172,52)" fg:x="861" fg:w="1"/><text x="69.2404%" y="367.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="69.0705%" y="437" width="0.0801%" height="15" fill="rgb(210,48,36)" fg:x="862" fg:w="1"/><text x="69.3205%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.1506%" y="405" width="0.0801%" height="15" fill="rgb(216,213,32)" fg:x="863" fg:w="1"/><text x="69.4006%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.1506%" y="389" width="0.0801%" height="15" fill="rgb(237,202,41)" fg:x="863" fg:w="1"/><text x="69.4006%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="69.1506%" y="373" width="0.0801%" height="15" fill="rgb(209,14,29)" fg:x="863" fg:w="1"/><text x="69.4006%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.04%)</title><rect x="68.3494%" y="501" width="1.0417%" height="15" fill="rgb(219,29,3)" fg:x="853" fg:w="13"/><text x="68.5994%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12 samples, 0.96%)</title><rect x="68.4295%" y="485" width="0.9615%" height="15" fill="rgb(229,13,49)" fg:x="854" fg:w="12"/><text x="68.6795%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="68.5096%" y="469" width="0.8814%" height="15" fill="rgb(210,206,2)" fg:x="855" fg:w="11"/><text x="68.7596%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="68.6699%" y="453" width="0.7212%" height="15" fill="rgb(216,154,46)" fg:x="857" fg:w="9"/><text x="68.9199%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="69.1506%" y="437" width="0.2404%" height="15" fill="rgb(211,170,52)" fg:x="863" fg:w="3"/><text x="69.4006%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="69.1506%" y="421" width="0.2404%" height="15" fill="rgb(233,109,47)" fg:x="863" fg:w="3"/><text x="69.4006%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="69.2308%" y="405" width="0.1603%" height="15" fill="rgb(208,212,30)" fg:x="864" fg:w="2"/><text x="69.4808%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="69.2308%" y="389" width="0.1603%" height="15" fill="rgb(215,190,19)" fg:x="864" fg:w="2"/><text x="69.4808%" y="399.50"></text></g><g><title>serde_json::de::from_trait (19 samples, 1.52%)</title><rect x="67.9487%" y="565" width="1.5224%" height="15" fill="rgb(207,164,53)" fg:x="848" fg:w="19"/><text x="68.1987%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (19 samples, 1.52%)</title><rect x="67.9487%" y="549" width="1.5224%" height="15" fill="rgb(213,87,49)" fg:x="848" fg:w="19"/><text x="68.1987%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19 samples, 1.52%)</title><rect x="67.9487%" y="533" width="1.5224%" height="15" fill="rgb(241,216,24)" fg:x="848" fg:w="19"/><text x="68.1987%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15 samples, 1.20%)</title><rect x="68.2692%" y="517" width="1.2019%" height="15" fill="rgb(241,123,45)" fg:x="852" fg:w="15"/><text x="68.5192%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.3910%" y="501" width="0.0801%" height="15" fill="rgb(220,36,15)" fg:x="866" fg:w="1"/><text x="69.6410%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.5513%" y="533" width="0.0801%" height="15" fill="rgb(215,202,9)" fg:x="868" fg:w="1"/><text x="69.8013%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.7115%" y="501" width="0.0801%" height="15" fill="rgb(252,71,26)" fg:x="870" fg:w="1"/><text x="69.9615%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.7917%" y="501" width="0.0801%" height="15" fill="rgb(243,195,19)" fg:x="871" fg:w="1"/><text x="70.0417%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="70.2724%" y="421" width="0.0801%" height="15" fill="rgb(207,167,27)" fg:x="877" fg:w="1"/><text x="70.5224%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.2724%" y="405" width="0.0801%" height="15" fill="rgb(250,146,54)" fg:x="877" fg:w="1"/><text x="70.5224%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="70.2724%" y="389" width="0.0801%" height="15" fill="rgb(245,79,9)" fg:x="877" fg:w="1"/><text x="70.5224%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="70.2724%" y="373" width="0.0801%" height="15" fill="rgb(234,197,22)" fg:x="877" fg:w="1"/><text x="70.5224%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.2724%" y="357" width="0.0801%" height="15" fill="rgb(221,52,48)" fg:x="877" fg:w="1"/><text x="70.5224%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="70.1122%" y="453" width="0.3205%" height="15" fill="rgb(235,80,0)" fg:x="875" fg:w="4"/><text x="70.3622%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="70.1122%" y="437" width="0.3205%" height="15" fill="rgb(221,117,53)" fg:x="875" fg:w="4"/><text x="70.3622%" y="447.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="70.3526%" y="421" width="0.0801%" height="15" fill="rgb(239,48,47)" fg:x="878" fg:w="1"/><text x="70.6026%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="70.3526%" y="405" width="0.0801%" height="15" fill="rgb(227,191,52)" fg:x="878" fg:w="1"/><text x="70.6026%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="69.8718%" y="485" width="0.7212%" height="15" fill="rgb(241,118,1)" fg:x="872" fg:w="9"/><text x="70.1218%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="69.9519%" y="469" width="0.6410%" height="15" fill="rgb(240,85,3)" fg:x="873" fg:w="8"/><text x="70.2019%" y="479.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="70.4327%" y="453" width="0.1603%" height="15" fill="rgb(237,68,37)" fg:x="879" fg:w="2"/><text x="70.6827%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="70.4327%" y="437" width="0.1603%" height="15" fill="rgb(212,9,20)" fg:x="879" fg:w="2"/><text x="70.6827%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="70.5128%" y="421" width="0.0801%" height="15" fill="rgb(218,84,17)" fg:x="880" fg:w="1"/><text x="70.7628%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.5128%" y="405" width="0.0801%" height="15" fill="rgb(235,147,20)" fg:x="880" fg:w="1"/><text x="70.7628%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.6731%" y="437" width="0.0801%" height="15" fill="rgb(208,224,1)" fg:x="882" fg:w="1"/><text x="70.9231%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (4 samples, 0.32%)</title><rect x="70.5929%" y="485" width="0.3205%" height="15" fill="rgb(232,97,50)" fg:x="881" fg:w="4"/><text x="70.8429%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="70.5929%" y="469" width="0.3205%" height="15" fill="rgb(238,15,45)" fg:x="881" fg:w="4"/><text x="70.8429%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (4 samples, 0.32%)</title><rect x="70.5929%" y="453" width="0.3205%" height="15" fill="rgb(231,46,18)" fg:x="881" fg:w="4"/><text x="70.8429%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="70.7532%" y="437" width="0.1603%" height="15" fill="rgb(254,169,10)" fg:x="883" fg:w="2"/><text x="71.0032%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.8333%" y="421" width="0.0801%" height="15" fill="rgb(243,169,30)" fg:x="884" fg:w="1"/><text x="71.0833%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.8333%" y="405" width="0.0801%" height="15" fill="rgb(236,90,49)" fg:x="884" fg:w="1"/><text x="71.0833%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="70.9936%" y="405" width="0.0801%" height="15" fill="rgb(218,80,15)" fg:x="886" fg:w="1"/><text x="71.2436%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="71.1538%" y="309" width="0.1603%" height="15" fill="rgb(222,115,37)" fg:x="888" fg:w="2"/><text x="71.4038%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.2340%" y="293" width="0.0801%" height="15" fill="rgb(227,0,6)" fg:x="889" fg:w="1"/><text x="71.4840%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="71.3141%" y="277" width="0.0801%" height="15" fill="rgb(217,189,13)" fg:x="890" fg:w="1"/><text x="71.5641%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="70.9135%" y="421" width="0.5609%" height="15" fill="rgb(220,74,19)" fg:x="885" fg:w="7"/><text x="71.1635%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.40%)</title><rect x="71.0737%" y="405" width="0.4006%" height="15" fill="rgb(224,81,18)" fg:x="887" fg:w="5"/><text x="71.3237%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="71.0737%" y="389" width="0.4006%" height="15" fill="rgb(245,178,48)" fg:x="887" fg:w="5"/><text x="71.3237%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="71.0737%" y="373" width="0.4006%" height="15" fill="rgb(207,78,24)" fg:x="887" fg:w="5"/><text x="71.3237%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.32%)</title><rect x="71.1538%" y="357" width="0.3205%" height="15" fill="rgb(223,222,30)" fg:x="888" fg:w="4"/><text x="71.4038%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="71.1538%" y="341" width="0.3205%" height="15" fill="rgb(234,101,12)" fg:x="888" fg:w="4"/><text x="71.4038%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="71.1538%" y="325" width="0.3205%" height="15" fill="rgb(209,80,46)" fg:x="888" fg:w="4"/><text x="71.4038%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="71.3141%" y="309" width="0.1603%" height="15" fill="rgb(228,79,14)" fg:x="890" fg:w="2"/><text x="71.5641%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.3141%" y="293" width="0.1603%" height="15" fill="rgb(220,219,34)" fg:x="890" fg:w="2"/><text x="71.5641%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="71.3942%" y="277" width="0.0801%" height="15" fill="rgb(207,80,21)" fg:x="891" fg:w="1"/><text x="71.6442%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (8 samples, 0.64%)</title><rect x="70.9135%" y="453" width="0.6410%" height="15" fill="rgb(210,154,44)" fg:x="885" fg:w="8"/><text x="71.1635%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="70.9135%" y="437" width="0.6410%" height="15" fill="rgb(246,44,39)" fg:x="885" fg:w="8"/><text x="71.1635%" y="447.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="71.4744%" y="421" width="0.0801%" height="15" fill="rgb(252,175,13)" fg:x="892" fg:w="1"/><text x="71.7244%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (25 samples, 2.00%)</title><rect x="69.6314%" y="533" width="2.0032%" height="15" fill="rgb(211,50,39)" fg:x="869" fg:w="25"/><text x="69.8814%" y="543.50">s..</text></g><g><title>serde_json::value::de::visit_object (25 samples, 2.00%)</title><rect x="69.6314%" y="517" width="2.0032%" height="15" fill="rgb(231,204,27)" fg:x="869" fg:w="25"/><text x="69.8814%" y="527.50">s..</text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (22 samples, 1.76%)</title><rect x="69.8718%" y="501" width="1.7628%" height="15" fill="rgb(253,26,34)" fg:x="872" fg:w="22"/><text x="70.1218%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="70.9135%" y="485" width="0.7212%" height="15" fill="rgb(207,139,38)" fg:x="885" fg:w="9"/><text x="71.1635%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="70.9135%" y="469" width="0.7212%" height="15" fill="rgb(248,54,27)" fg:x="885" fg:w="9"/><text x="71.1635%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.5545%" y="453" width="0.0801%" height="15" fill="rgb(234,25,33)" fg:x="893" fg:w="1"/><text x="71.8045%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (49 samples, 3.93%)</title><rect x="67.8686%" y="581" width="3.9263%" height="15" fill="rgb(249,107,47)" fg:x="847" fg:w="49"/><text x="68.1186%" y="591.50">&lt;ker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (29 samples, 2.32%)</title><rect x="69.4712%" y="565" width="2.3237%" height="15" fill="rgb(230,190,31)" fg:x="867" fg:w="29"/><text x="69.7212%" y="575.50">s..</text></g><g><title>serde_json::value::de::visit_object (29 samples, 2.32%)</title><rect x="69.4712%" y="549" width="2.3237%" height="15" fill="rgb(238,173,45)" fg:x="867" fg:w="29"/><text x="69.7212%" y="559.50">s..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="71.6346%" y="533" width="0.1603%" height="15" fill="rgb(222,16,50)" fg:x="894" fg:w="2"/><text x="71.8846%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.7147%" y="517" width="0.0801%" height="15" fill="rgb(251,204,47)" fg:x="895" fg:w="1"/><text x="71.9647%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.7949%" y="565" width="0.0801%" height="15" fill="rgb(225,12,3)" fg:x="896" fg:w="1"/><text x="72.0449%" y="575.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="71.8750%" y="565" width="0.1603%" height="15" fill="rgb(214,208,22)" fg:x="897" fg:w="2"/><text x="72.1250%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="71.9551%" y="549" width="0.0801%" height="15" fill="rgb(240,57,32)" fg:x="898" fg:w="1"/><text x="72.2051%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.1154%" y="485" width="0.0801%" height="15" fill="rgb(243,113,48)" fg:x="900" fg:w="1"/><text x="72.3654%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="72.0353%" y="533" width="0.2404%" height="15" fill="rgb(225,135,30)" fg:x="899" fg:w="3"/><text x="72.2853%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="72.0353%" y="517" width="0.2404%" height="15" fill="rgb(222,3,53)" fg:x="899" fg:w="3"/><text x="72.2853%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="72.0353%" y="501" width="0.2404%" height="15" fill="rgb(243,142,2)" fg:x="899" fg:w="3"/><text x="72.2853%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.1955%" y="485" width="0.0801%" height="15" fill="rgb(233,67,14)" fg:x="901" fg:w="1"/><text x="72.4455%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.2756%" y="533" width="0.0801%" height="15" fill="rgb(245,125,36)" fg:x="902" fg:w="1"/><text x="72.5256%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.64%)</title><rect x="71.7949%" y="581" width="0.6410%" height="15" fill="rgb(225,199,6)" fg:x="896" fg:w="8"/><text x="72.0449%" y="591.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="72.0353%" y="565" width="0.4006%" height="15" fill="rgb(244,71,6)" fg:x="899" fg:w="5"/><text x="72.2853%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="72.0353%" y="549" width="0.4006%" height="15" fill="rgb(225,62,9)" fg:x="899" fg:w="5"/><text x="72.2853%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.3558%" y="533" width="0.0801%" height="15" fill="rgb(246,139,53)" fg:x="903" fg:w="1"/><text x="72.6058%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.3558%" y="517" width="0.0801%" height="15" fill="rgb(243,161,46)" fg:x="903" fg:w="1"/><text x="72.6058%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.3558%" y="501" width="0.0801%" height="15" fill="rgb(236,153,7)" fg:x="903" fg:w="1"/><text x="72.6058%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.3558%" y="485" width="0.0801%" height="15" fill="rgb(248,42,35)" fg:x="903" fg:w="1"/><text x="72.6058%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="72.3558%" y="469" width="0.0801%" height="15" fill="rgb(250,17,31)" fg:x="903" fg:w="1"/><text x="72.6058%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.3558%" y="453" width="0.0801%" height="15" fill="rgb(248,138,14)" fg:x="903" fg:w="1"/><text x="72.6058%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.3558%" y="437" width="0.0801%" height="15" fill="rgb(228,161,3)" fg:x="903" fg:w="1"/><text x="72.6058%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.3558%" y="421" width="0.0801%" height="15" fill="rgb(248,116,17)" fg:x="903" fg:w="1"/><text x="72.6058%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (71 samples, 5.69%)</title><rect x="66.8269%" y="613" width="5.6891%" height="15" fill="rgb(207,78,24)" fg:x="834" fg:w="71"/><text x="67.0769%" y="623.50">&lt;engine..</text></g><g><title>engine::session::internal::Entities::add_persisted (69 samples, 5.53%)</title><rect x="66.9872%" y="597" width="5.5288%" height="15" fill="rgb(234,99,48)" fg:x="836" fg:w="69"/><text x="67.2372%" y="607.50">engine:..</text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="72.4359%" y="581" width="0.0801%" height="15" fill="rgb(242,22,26)" fg:x="904" fg:w="1"/><text x="72.6859%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.4359%" y="565" width="0.0801%" height="15" fill="rgb(227,78,32)" fg:x="904" fg:w="1"/><text x="72.6859%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="72.4359%" y="549" width="0.0801%" height="15" fill="rgb(226,189,43)" fg:x="904" fg:w="1"/><text x="72.6859%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.5962%" y="453" width="0.0801%" height="15" fill="rgb(227,218,35)" fg:x="906" fg:w="1"/><text x="72.8462%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.5962%" y="437" width="0.0801%" height="15" fill="rgb(206,111,40)" fg:x="906" fg:w="1"/><text x="72.8462%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.5962%" y="421" width="0.0801%" height="15" fill="rgb(208,217,22)" fg:x="906" fg:w="1"/><text x="72.8462%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.5962%" y="405" width="0.0801%" height="15" fill="rgb(248,20,20)" fg:x="906" fg:w="1"/><text x="72.8462%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.5962%" y="389" width="0.0801%" height="15" fill="rgb(239,155,16)" fg:x="906" fg:w="1"/><text x="72.8462%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.5962%" y="373" width="0.0801%" height="15" fill="rgb(238,171,46)" fg:x="906" fg:w="1"/><text x="72.8462%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.5962%" y="357" width="0.0801%" height="15" fill="rgb(248,11,36)" fg:x="906" fg:w="1"/><text x="72.8462%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.5962%" y="341" width="0.0801%" height="15" fill="rgb(220,148,37)" fg:x="906" fg:w="1"/><text x="72.8462%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.5962%" y="325" width="0.0801%" height="15" fill="rgb(218,144,42)" fg:x="906" fg:w="1"/><text x="72.8462%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.5962%" y="309" width="0.0801%" height="15" fill="rgb(245,20,20)" fg:x="906" fg:w="1"/><text x="72.8462%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.5962%" y="293" width="0.0801%" height="15" fill="rgb(240,111,48)" fg:x="906" fg:w="1"/><text x="72.8462%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.5962%" y="277" width="0.0801%" height="15" fill="rgb(237,225,32)" fg:x="906" fg:w="1"/><text x="72.8462%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.6763%" y="453" width="0.0801%" height="15" fill="rgb(228,161,46)" fg:x="907" fg:w="1"/><text x="72.9263%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.8365%" y="421" width="0.0801%" height="15" fill="rgb(235,196,21)" fg:x="909" fg:w="1"/><text x="73.0865%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.8365%" y="405" width="0.0801%" height="15" fill="rgb(250,133,21)" fg:x="909" fg:w="1"/><text x="73.0865%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="72.8365%" y="389" width="0.0801%" height="15" fill="rgb(236,94,32)" fg:x="909" fg:w="1"/><text x="73.0865%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="72.8365%" y="373" width="0.0801%" height="15" fill="rgb(219,176,25)" fg:x="909" fg:w="1"/><text x="73.0865%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="72.8365%" y="357" width="0.0801%" height="15" fill="rgb(211,17,43)" fg:x="909" fg:w="1"/><text x="73.0865%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="72.8365%" y="341" width="0.0801%" height="15" fill="rgb(220,75,23)" fg:x="909" fg:w="1"/><text x="73.0865%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="72.8365%" y="325" width="0.0801%" height="15" fill="rgb(215,122,32)" fg:x="909" fg:w="1"/><text x="73.0865%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (77 samples, 6.17%)</title><rect x="66.8269%" y="629" width="6.1699%" height="15" fill="rgb(218,57,38)" fg:x="834" fg:w="77"/><text x="67.0769%" y="639.50">&lt;engine:..</text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="72.5160%" y="613" width="0.4808%" height="15" fill="rgb(233,208,46)" fg:x="905" fg:w="6"/><text x="72.7660%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (6 samples, 0.48%)</title><rect x="72.5160%" y="597" width="0.4808%" height="15" fill="rgb(221,35,50)" fg:x="905" fg:w="6"/><text x="72.7660%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.48%)</title><rect x="72.5160%" y="581" width="0.4808%" height="15" fill="rgb(229,213,29)" fg:x="905" fg:w="6"/><text x="72.7660%" y="591.50"></text></g><g><title>core::fmt::write (6 samples, 0.48%)</title><rect x="72.5160%" y="565" width="0.4808%" height="15" fill="rgb(229,110,40)" fg:x="905" fg:w="6"/><text x="72.7660%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (5 samples, 0.40%)</title><rect x="72.5962%" y="549" width="0.4006%" height="15" fill="rgb(247,206,19)" fg:x="906" fg:w="5"/><text x="72.8462%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (5 samples, 0.40%)</title><rect x="72.5962%" y="533" width="0.4006%" height="15" fill="rgb(216,229,45)" fg:x="906" fg:w="5"/><text x="72.8462%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (5 samples, 0.40%)</title><rect x="72.5962%" y="517" width="0.4006%" height="15" fill="rgb(205,184,31)" fg:x="906" fg:w="5"/><text x="72.8462%" y="527.50"></text></g><g><title>core::fmt::write (5 samples, 0.40%)</title><rect x="72.5962%" y="501" width="0.4006%" height="15" fill="rgb(213,91,10)" fg:x="906" fg:w="5"/><text x="72.8462%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (5 samples, 0.40%)</title><rect x="72.5962%" y="485" width="0.4006%" height="15" fill="rgb(250,49,8)" fg:x="906" fg:w="5"/><text x="72.8462%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (5 samples, 0.40%)</title><rect x="72.5962%" y="469" width="0.4006%" height="15" fill="rgb(207,26,8)" fg:x="906" fg:w="5"/><text x="72.8462%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="72.7564%" y="453" width="0.2404%" height="15" fill="rgb(224,2,13)" fg:x="908" fg:w="3"/><text x="73.0064%" y="463.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="72.7564%" y="437" width="0.2404%" height="15" fill="rgb(219,108,27)" fg:x="908" fg:w="3"/><text x="73.0064%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="72.9167%" y="421" width="0.0801%" height="15" fill="rgb(240,89,32)" fg:x="910" fg:w="1"/><text x="73.1667%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.9167%" y="405" width="0.0801%" height="15" fill="rgb(248,205,3)" fg:x="910" fg:w="1"/><text x="73.1667%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.9167%" y="389" width="0.0801%" height="15" fill="rgb(236,197,47)" fg:x="910" fg:w="1"/><text x="73.1667%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="72.9167%" y="373" width="0.0801%" height="15" fill="rgb(244,185,52)" fg:x="910" fg:w="1"/><text x="73.1667%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="72.9167%" y="357" width="0.0801%" height="15" fill="rgb(210,206,23)" fg:x="910" fg:w="1"/><text x="73.1667%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="72.9167%" y="341" width="0.0801%" height="15" fill="rgb(251,177,30)" fg:x="910" fg:w="1"/><text x="73.1667%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="72.9167%" y="325" width="0.0801%" height="15" fill="rgb(243,27,45)" fg:x="910" fg:w="1"/><text x="73.1667%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="72.9167%" y="309" width="0.0801%" height="15" fill="rgb(248,141,51)" fg:x="910" fg:w="1"/><text x="73.1667%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="72.9167%" y="293" width="0.0801%" height="15" fill="rgb(235,102,15)" fg:x="910" fg:w="1"/><text x="73.1667%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="72.9167%" y="277" width="0.0801%" height="15" fill="rgb(214,164,53)" fg:x="910" fg:w="1"/><text x="73.1667%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="72.9167%" y="261" width="0.0801%" height="15" fill="rgb(228,18,51)" fg:x="910" fg:w="1"/><text x="73.1667%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="72.9167%" y="245" width="0.0801%" height="15" fill="rgb(205,211,11)" fg:x="910" fg:w="1"/><text x="73.1667%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="72.9167%" y="229" width="0.0801%" height="15" fill="rgb(208,63,6)" fg:x="910" fg:w="1"/><text x="73.1667%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="72.9167%" y="213" width="0.0801%" height="15" fill="rgb(245,76,14)" fg:x="910" fg:w="1"/><text x="73.1667%" y="223.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="72.9167%" y="197" width="0.0801%" height="15" fill="rgb(234,176,34)" fg:x="910" fg:w="1"/><text x="73.1667%" y="207.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="72.9167%" y="181" width="0.0801%" height="15" fill="rgb(243,156,42)" fg:x="910" fg:w="1"/><text x="73.1667%" y="191.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::de::Deserialize for engine::users::model::Usernames&gt;::deserialize (2 samples, 0.16%)</title><rect x="73.2372%" y="565" width="0.1603%" height="15" fill="rgb(237,182,10)" fg:x="914" fg:w="2"/><text x="73.4872%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="73.2372%" y="549" width="0.1603%" height="15" fill="rgb(244,117,0)" fg:x="914" fg:w="2"/><text x="73.4872%" y="559.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="73.3173%" y="533" width="0.0801%" height="15" fill="rgb(239,91,50)" fg:x="915" fg:w="1"/><text x="73.5673%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.3173%" y="517" width="0.0801%" height="15" fill="rgb(206,38,9)" fg:x="915" fg:w="1"/><text x="73.5673%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.3173%" y="501" width="0.0801%" height="15" fill="rgb(205,25,10)" fg:x="915" fg:w="1"/><text x="73.5673%" y="511.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (6 samples, 0.48%)</title><rect x="72.9968%" y="629" width="0.4808%" height="15" fill="rgb(206,224,7)" fg:x="911" fg:w="6"/><text x="73.2468%" y="639.50"></text></g><g><title>engine::users::model::username_to_key (5 samples, 0.40%)</title><rect x="73.0769%" y="613" width="0.4006%" height="15" fill="rgb(227,157,10)" fg:x="912" fg:w="5"/><text x="73.3269%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="73.0769%" y="597" width="0.4006%" height="15" fill="rgb(214,157,37)" fg:x="912" fg:w="5"/><text x="73.3269%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="73.0769%" y="581" width="0.4006%" height="15" fill="rgb(209,180,35)" fg:x="912" fg:w="5"/><text x="73.3269%" y="591.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="73.3974%" y="565" width="0.0801%" height="15" fill="rgb(216,174,49)" fg:x="916" fg:w="1"/><text x="73.6474%" y="575.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="73.4776%" y="629" width="0.1603%" height="15" fill="rgb(205,96,20)" fg:x="917" fg:w="2"/><text x="73.7276%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="73.4776%" y="613" width="0.1603%" height="15" fill="rgb(214,220,39)" fg:x="917" fg:w="2"/><text x="73.7276%" y="623.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="73.4776%" y="597" width="0.1603%" height="15" fill="rgb(245,126,30)" fg:x="917" fg:w="2"/><text x="73.7276%" y="607.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="73.4776%" y="581" width="0.1603%" height="15" fill="rgb(215,88,33)" fg:x="917" fg:w="2"/><text x="73.7276%" y="591.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (2 samples, 0.16%)</title><rect x="73.4776%" y="565" width="0.1603%" height="15" fill="rgb(210,1,49)" fg:x="917" fg:w="2"/><text x="73.7276%" y="575.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="73.5577%" y="549" width="0.0801%" height="15" fill="rgb(207,133,3)" fg:x="918" fg:w="1"/><text x="73.8077%" y="559.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (1 samples, 0.08%)</title><rect x="73.5577%" y="533" width="0.0801%" height="15" fill="rgb(231,47,43)" fg:x="918" fg:w="1"/><text x="73.8077%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="73.6378%" y="629" width="0.0801%" height="15" fill="rgb(245,64,1)" fg:x="919" fg:w="1"/><text x="73.8878%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="73.6378%" y="613" width="0.0801%" height="15" fill="rgb(253,145,20)" fg:x="919" fg:w="1"/><text x="73.8878%" y="623.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (130 samples, 10.42%)</title><rect x="63.3814%" y="661" width="10.4167%" height="15" fill="rgb(211,39,18)" fg:x="791" fg:w="130"/><text x="63.6314%" y="671.50">engine::session..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (130 samples, 10.42%)</title><rect x="63.3814%" y="645" width="10.4167%" height="15" fill="rgb(223,225,18)" fg:x="791" fg:w="130"/><text x="63.6314%" y="655.50">engine::session..</text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="73.7179%" y="629" width="0.0801%" height="15" fill="rgb(210,202,44)" fg:x="920" fg:w="1"/><text x="73.9679%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.7179%" y="613" width="0.0801%" height="15" fill="rgb(231,138,36)" fg:x="920" fg:w="1"/><text x="73.9679%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (922 samples, 73.88%)</title><rect x="0.0000%" y="709" width="73.8782%" height="15" fill="rgb(237,115,25)" fg:x="0" fg:w="922"/><text x="0.2500%" y="719.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (922 samples, 73.88%)</title><rect x="0.0000%" y="693" width="73.8782%" height="15" fill="rgb(215,53,48)" fg:x="0" fg:w="922"/><text x="0.2500%" y="703.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (922 samples, 73.88%)</title><rect x="0.0000%" y="677" width="73.8782%" height="15" fill="rgb(243,193,24)" fg:x="0" fg:w="922"/><text x="0.2500%" y="687.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="73.7981%" y="661" width="0.0801%" height="15" fill="rgb(210,106,28)" fg:x="921" fg:w="1"/><text x="74.0481%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="73.7981%" y="645" width="0.0801%" height="15" fill="rgb(249,192,0)" fg:x="921" fg:w="1"/><text x="74.0481%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.7981%" y="629" width="0.0801%" height="15" fill="rgb(224,96,21)" fg:x="921" fg:w="1"/><text x="74.0481%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="73.7981%" y="613" width="0.0801%" height="15" fill="rgb(243,160,19)" fg:x="921" fg:w="1"/><text x="74.0481%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.8782%" y="549" width="0.0801%" height="15" fill="rgb(219,205,50)" fg:x="922" fg:w="1"/><text x="74.1282%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.8782%" y="533" width="0.0801%" height="15" fill="rgb(218,175,44)" fg:x="922" fg:w="1"/><text x="74.1282%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.9583%" y="501" width="0.0801%" height="15" fill="rgb(251,84,47)" fg:x="923" fg:w="1"/><text x="74.2083%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="74.0385%" y="501" width="0.1603%" height="15" fill="rgb(241,14,16)" fg:x="924" fg:w="2"/><text x="74.2885%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="73.8782%" y="629" width="0.4006%" height="15" fill="rgb(207,142,28)" fg:x="922" fg:w="5"/><text x="74.1282%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (5 samples, 0.40%)</title><rect x="73.8782%" y="613" width="0.4006%" height="15" fill="rgb(208,116,22)" fg:x="922" fg:w="5"/><text x="74.1282%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="73.8782%" y="597" width="0.4006%" height="15" fill="rgb(210,0,43)" fg:x="922" fg:w="5"/><text x="74.1282%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="73.8782%" y="581" width="0.4006%" height="15" fill="rgb(246,33,21)" fg:x="922" fg:w="5"/><text x="74.1282%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="73.8782%" y="565" width="0.4006%" height="15" fill="rgb(208,158,54)" fg:x="922" fg:w="5"/><text x="74.1282%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="73.9583%" y="549" width="0.3205%" height="15" fill="rgb(218,99,29)" fg:x="923" fg:w="4"/><text x="74.2083%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="73.9583%" y="533" width="0.3205%" height="15" fill="rgb(226,29,7)" fg:x="923" fg:w="4"/><text x="74.2083%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="73.9583%" y="517" width="0.3205%" height="15" fill="rgb(206,178,46)" fg:x="923" fg:w="4"/><text x="74.2083%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.1987%" y="501" width="0.0801%" height="15" fill="rgb(205,169,32)" fg:x="926" fg:w="1"/><text x="74.4487%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.1987%" y="485" width="0.0801%" height="15" fill="rgb(217,4,13)" fg:x="926" fg:w="1"/><text x="74.4487%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.1987%" y="469" width="0.0801%" height="15" fill="rgb(210,140,37)" fg:x="926" fg:w="1"/><text x="74.4487%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="73.8782%" y="661" width="0.4808%" height="15" fill="rgb(229,80,10)" fg:x="922" fg:w="6"/><text x="74.1282%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (6 samples, 0.48%)</title><rect x="73.8782%" y="645" width="0.4808%" height="15" fill="rgb(212,175,34)" fg:x="922" fg:w="6"/><text x="74.1282%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.2788%" y="629" width="0.0801%" height="15" fill="rgb(216,207,24)" fg:x="927" fg:w="1"/><text x="74.5288%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="74.3590%" y="565" width="0.0801%" height="15" fill="rgb(234,163,3)" fg:x="928" fg:w="1"/><text x="74.6090%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="74.3590%" y="549" width="0.0801%" height="15" fill="rgb(248,101,16)" fg:x="928" fg:w="1"/><text x="74.6090%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="74.3590%" y="533" width="0.0801%" height="15" fill="rgb(209,152,54)" fg:x="928" fg:w="1"/><text x="74.6090%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="74.3590%" y="517" width="0.0801%" height="15" fill="rgb(229,124,51)" fg:x="928" fg:w="1"/><text x="74.6090%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.3590%" y="501" width="0.0801%" height="15" fill="rgb(219,83,18)" fg:x="928" fg:w="1"/><text x="74.6090%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.3590%" y="485" width="0.0801%" height="15" fill="rgb(206,29,38)" fg:x="928" fg:w="1"/><text x="74.6090%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="74.3590%" y="469" width="0.0801%" height="15" fill="rgb(245,123,23)" fg:x="928" fg:w="1"/><text x="74.6090%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="74.3590%" y="453" width="0.0801%" height="15" fill="rgb(238,50,33)" fg:x="928" fg:w="1"/><text x="74.6090%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="74.3590%" y="437" width="0.0801%" height="15" fill="rgb(234,165,23)" fg:x="928" fg:w="1"/><text x="74.6090%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="74.3590%" y="421" width="0.0801%" height="15" fill="rgb(211,82,31)" fg:x="928" fg:w="1"/><text x="74.6090%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="74.3590%" y="405" width="0.0801%" height="15" fill="rgb(224,166,46)" fg:x="928" fg:w="1"/><text x="74.6090%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="74.3590%" y="389" width="0.0801%" height="15" fill="rgb(211,13,8)" fg:x="928" fg:w="1"/><text x="74.6090%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="74.3590%" y="373" width="0.0801%" height="15" fill="rgb(212,7,42)" fg:x="928" fg:w="1"/><text x="74.6090%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="74.3590%" y="357" width="0.0801%" height="15" fill="rgb(249,102,19)" fg:x="928" fg:w="1"/><text x="74.6090%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="74.3590%" y="341" width="0.0801%" height="15" fill="rgb(225,41,13)" fg:x="928" fg:w="1"/><text x="74.6090%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="74.3590%" y="325" width="0.0801%" height="15" fill="rgb(220,65,27)" fg:x="928" fg:w="1"/><text x="74.6090%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="74.3590%" y="309" width="0.0801%" height="15" fill="rgb(206,4,41)" fg:x="928" fg:w="1"/><text x="74.6090%" y="319.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="74.3590%" y="293" width="0.0801%" height="15" fill="rgb(219,60,39)" fg:x="928" fg:w="1"/><text x="74.6090%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="74.3590%" y="277" width="0.0801%" height="15" fill="rgb(226,4,38)" fg:x="928" fg:w="1"/><text x="74.6090%" y="287.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="74.4391%" y="565" width="0.0801%" height="15" fill="rgb(250,52,3)" fg:x="929" fg:w="1"/><text x="74.6891%" y="575.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="74.4391%" y="549" width="0.0801%" height="15" fill="rgb(234,93,0)" fg:x="929" fg:w="1"/><text x="74.6891%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="74.4391%" y="533" width="0.0801%" height="15" fill="rgb(251,47,47)" fg:x="929" fg:w="1"/><text x="74.6891%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="74.4391%" y="517" width="0.0801%" height="15" fill="rgb(205,166,47)" fg:x="929" fg:w="1"/><text x="74.6891%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="74.4391%" y="501" width="0.0801%" height="15" fill="rgb(231,148,8)" fg:x="929" fg:w="1"/><text x="74.6891%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="74.4391%" y="485" width="0.0801%" height="15" fill="rgb(244,185,19)" fg:x="929" fg:w="1"/><text x="74.6891%" y="495.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (6 samples, 0.48%)</title><rect x="74.3590%" y="581" width="0.4808%" height="15" fill="rgb(224,201,45)" fg:x="928" fg:w="6"/><text x="74.6090%" y="591.50"></text></g><g><title>libloading::safe::Library::new (4 samples, 0.32%)</title><rect x="74.5192%" y="565" width="0.3205%" height="15" fill="rgb(240,77,39)" fg:x="930" fg:w="4"/><text x="74.7692%" y="575.50"></text></g><g><title>dlopen (4 samples, 0.32%)</title><rect x="74.5192%" y="549" width="0.3205%" height="15" fill="rgb(248,211,29)" fg:x="930" fg:w="4"/><text x="74.7692%" y="559.50"></text></g><g><title>_dl_catch_error (4 samples, 0.32%)</title><rect x="74.5192%" y="533" width="0.3205%" height="15" fill="rgb(232,214,46)" fg:x="930" fg:w="4"/><text x="74.7692%" y="543.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="74.5192%" y="517" width="0.3205%" height="15" fill="rgb(213,99,54)" fg:x="930" fg:w="4"/><text x="74.7692%" y="527.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="74.5192%" y="501" width="0.3205%" height="15" fill="rgb(240,19,46)" fg:x="930" fg:w="4"/><text x="74.7692%" y="511.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="74.5192%" y="485" width="0.3205%" height="15" fill="rgb(243,89,10)" fg:x="930" fg:w="4"/><text x="74.7692%" y="495.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (8 samples, 0.64%)</title><rect x="74.3590%" y="597" width="0.6410%" height="15" fill="rgb(249,28,32)" fg:x="928" fg:w="8"/><text x="74.6090%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="74.8397%" y="581" width="0.1603%" height="15" fill="rgb(253,30,9)" fg:x="934" fg:w="2"/><text x="75.0897%" y="591.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="74.8397%" y="565" width="0.1603%" height="15" fill="rgb(217,2,26)" fg:x="934" fg:w="2"/><text x="75.0897%" y="575.50"></text></g><g><title>engine::session::Session::initialize (9 samples, 0.72%)</title><rect x="74.3590%" y="613" width="0.7212%" height="15" fill="rgb(220,28,10)" fg:x="928" fg:w="9"/><text x="74.6090%" y="623.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="75.0000%" y="597" width="0.0801%" height="15" fill="rgb(228,167,49)" fg:x="936" fg:w="1"/><text x="75.2500%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="75.0000%" y="581" width="0.0801%" height="15" fill="rgb(238,212,3)" fg:x="936" fg:w="1"/><text x="75.2500%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="75.0000%" y="565" width="0.0801%" height="15" fill="rgb(229,134,44)" fg:x="936" fg:w="1"/><text x="75.2500%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.0000%" y="549" width="0.0801%" height="15" fill="rgb(208,71,4)" fg:x="936" fg:w="1"/><text x="75.2500%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="75.0000%" y="533" width="0.0801%" height="15" fill="rgb(221,205,45)" fg:x="936" fg:w="1"/><text x="75.2500%" y="543.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (10 samples, 0.80%)</title><rect x="74.3590%" y="661" width="0.8013%" height="15" fill="rgb(215,132,38)" fg:x="928" fg:w="10"/><text x="74.6090%" y="671.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (10 samples, 0.80%)</title><rect x="74.3590%" y="645" width="0.8013%" height="15" fill="rgb(227,158,6)" fg:x="928" fg:w="10"/><text x="74.6090%" y="655.50"></text></g><g><title>engine::session::Session::new (10 samples, 0.80%)</title><rect x="74.3590%" y="629" width="0.8013%" height="15" fill="rgb(250,10,38)" fg:x="928" fg:w="10"/><text x="74.6090%" y="639.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="75.0801%" y="613" width="0.0801%" height="15" fill="rgb(225,171,40)" fg:x="937" fg:w="1"/><text x="75.3301%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="75.0801%" y="597" width="0.0801%" height="15" fill="rgb(238,17,43)" fg:x="937" fg:w="1"/><text x="75.3301%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.0801%" y="581" width="0.0801%" height="15" fill="rgb(208,145,4)" fg:x="937" fg:w="1"/><text x="75.3301%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="75.2404%" y="645" width="0.0801%" height="15" fill="rgb(232,82,7)" fg:x="939" fg:w="1"/><text x="75.4904%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="75.2404%" y="629" width="0.0801%" height="15" fill="rgb(205,166,38)" fg:x="939" fg:w="1"/><text x="75.4904%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.2404%" y="613" width="0.0801%" height="15" fill="rgb(240,228,4)" fg:x="939" fg:w="1"/><text x="75.4904%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.3205%" y="629" width="0.0801%" height="15" fill="rgb(233,121,40)" fg:x="940" fg:w="1"/><text x="75.5705%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="75.4006%" y="629" width="0.0801%" height="15" fill="rgb(243,84,30)" fg:x="941" fg:w="1"/><text x="75.6506%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.4006%" y="613" width="0.0801%" height="15" fill="rgb(235,81,48)" fg:x="941" fg:w="1"/><text x="75.6506%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (4 samples, 0.32%)</title><rect x="75.3205%" y="645" width="0.3205%" height="15" fill="rgb(218,137,0)" fg:x="940" fg:w="4"/><text x="75.5705%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::QuickThing&gt; (2 samples, 0.16%)</title><rect x="75.4808%" y="629" width="0.1603%" height="15" fill="rgb(223,151,48)" fg:x="942" fg:w="2"/><text x="75.7308%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="75.5609%" y="613" width="0.0801%" height="15" fill="rgb(247,30,19)" fg:x="943" fg:w="1"/><text x="75.8109%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="75.5609%" y="597" width="0.0801%" height="15" fill="rgb(205,129,29)" fg:x="943" fg:w="1"/><text x="75.8109%" y="607.50"></text></g><g><title>&lt;kernel::session::SetSession as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="75.7212%" y="629" width="0.0801%" height="15" fill="rgb(222,29,2)" fg:x="945" fg:w="1"/><text x="75.9712%" y="639.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="75.8013%" y="597" width="0.0801%" height="15" fill="rgb(232,145,33)" fg:x="946" fg:w="1"/><text x="76.0513%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="75.8013%" y="581" width="0.0801%" height="15" fill="rgb(217,30,31)" fg:x="946" fg:w="1"/><text x="76.0513%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.8013%" y="565" width="0.0801%" height="15" fill="rgb(243,22,52)" fg:x="946" fg:w="1"/><text x="76.0513%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="75.8814%" y="533" width="0.1603%" height="15" fill="rgb(254,228,14)" fg:x="947" fg:w="2"/><text x="76.1314%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="75.8814%" y="517" width="0.1603%" height="15" fill="rgb(231,45,50)" fg:x="947" fg:w="2"/><text x="76.1314%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="75.8814%" y="549" width="0.2404%" height="15" fill="rgb(248,125,3)" fg:x="947" fg:w="3"/><text x="76.1314%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.0417%" y="533" width="0.0801%" height="15" fill="rgb(213,76,9)" fg:x="949" fg:w="1"/><text x="76.2917%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.0417%" y="517" width="0.0801%" height="15" fill="rgb(238,108,21)" fg:x="949" fg:w="1"/><text x="76.2917%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.0417%" y="501" width="0.0801%" height="15" fill="rgb(229,214,19)" fg:x="949" fg:w="1"/><text x="76.2917%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="76.1218%" y="533" width="0.0801%" height="15" fill="rgb(252,201,5)" fg:x="950" fg:w="1"/><text x="76.3718%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.1218%" y="517" width="0.0801%" height="15" fill="rgb(233,165,49)" fg:x="950" fg:w="1"/><text x="76.3718%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.1218%" y="501" width="0.0801%" height="15" fill="rgb(208,165,19)" fg:x="950" fg:w="1"/><text x="76.3718%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.1218%" y="485" width="0.0801%" height="15" fill="rgb(216,220,31)" fg:x="950" fg:w="1"/><text x="76.3718%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="76.2019%" y="517" width="0.0801%" height="15" fill="rgb(214,8,31)" fg:x="951" fg:w="1"/><text x="76.4519%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="76.2019%" y="501" width="0.0801%" height="15" fill="rgb(220,32,32)" fg:x="951" fg:w="1"/><text x="76.4519%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="76.2019%" y="485" width="0.0801%" height="15" fill="rgb(237,172,34)" fg:x="951" fg:w="1"/><text x="76.4519%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.2821%" y="469" width="0.0801%" height="15" fill="rgb(240,209,5)" fg:x="952" fg:w="1"/><text x="76.5321%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="76.2821%" y="517" width="0.1603%" height="15" fill="rgb(221,219,1)" fg:x="952" fg:w="2"/><text x="76.5321%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="76.2821%" y="501" width="0.1603%" height="15" fill="rgb(237,90,36)" fg:x="952" fg:w="2"/><text x="76.5321%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="76.2821%" y="485" width="0.1603%" height="15" fill="rgb(245,14,51)" fg:x="952" fg:w="2"/><text x="76.5321%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="76.3622%" y="469" width="0.0801%" height="15" fill="rgb(211,71,49)" fg:x="953" fg:w="1"/><text x="76.6122%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="76.4423%" y="485" width="0.1603%" height="15" fill="rgb(230,223,9)" fg:x="954" fg:w="2"/><text x="76.6923%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="76.4423%" y="469" width="0.1603%" height="15" fill="rgb(212,33,31)" fg:x="954" fg:w="2"/><text x="76.6923%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="76.6026%" y="469" width="0.0801%" height="15" fill="rgb(218,141,5)" fg:x="956" fg:w="1"/><text x="76.8526%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.6026%" y="453" width="0.0801%" height="15" fill="rgb(239,194,8)" fg:x="956" fg:w="1"/><text x="76.8526%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="76.6827%" y="453" width="0.1603%" height="15" fill="rgb(225,119,29)" fg:x="957" fg:w="2"/><text x="76.9327%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="76.6827%" y="437" width="0.1603%" height="15" fill="rgb(233,32,3)" fg:x="957" fg:w="2"/><text x="76.9327%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="76.6827%" y="421" width="0.1603%" height="15" fill="rgb(248,126,40)" fg:x="957" fg:w="2"/><text x="76.9327%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="76.6827%" y="405" width="0.1603%" height="15" fill="rgb(213,102,53)" fg:x="957" fg:w="2"/><text x="76.9327%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="76.6827%" y="389" width="0.1603%" height="15" fill="rgb(212,69,15)" fg:x="957" fg:w="2"/><text x="76.9327%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="76.6827%" y="373" width="0.1603%" height="15" fill="rgb(253,39,34)" fg:x="957" fg:w="2"/><text x="76.9327%" y="383.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="76.6827%" y="357" width="0.1603%" height="15" fill="rgb(205,189,54)" fg:x="957" fg:w="2"/><text x="76.9327%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="76.6026%" y="485" width="0.3205%" height="15" fill="rgb(234,229,45)" fg:x="956" fg:w="4"/><text x="76.8526%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="76.6827%" y="469" width="0.2404%" height="15" fill="rgb(243,79,48)" fg:x="957" fg:w="3"/><text x="76.9327%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.8429%" y="453" width="0.0801%" height="15" fill="rgb(206,71,50)" fg:x="959" fg:w="1"/><text x="77.0929%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.8429%" y="437" width="0.0801%" height="15" fill="rgb(209,32,17)" fg:x="959" fg:w="1"/><text x="77.0929%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="76.4423%" y="501" width="0.5609%" height="15" fill="rgb(219,229,6)" fg:x="954" fg:w="7"/><text x="76.6923%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.9231%" y="485" width="0.0801%" height="15" fill="rgb(226,25,27)" fg:x="960" fg:w="1"/><text x="77.1731%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.9231%" y="469" width="0.0801%" height="15" fill="rgb(218,185,23)" fg:x="960" fg:w="1"/><text x="77.1731%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.9231%" y="453" width="0.0801%" height="15" fill="rgb(242,123,5)" fg:x="960" fg:w="1"/><text x="77.1731%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="76.4423%" y="517" width="0.6410%" height="15" fill="rgb(215,53,19)" fg:x="954" fg:w="8"/><text x="76.6923%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.0032%" y="501" width="0.0801%" height="15" fill="rgb(233,20,30)" fg:x="961" fg:w="1"/><text x="77.2532%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="76.2019%" y="533" width="0.9615%" height="15" fill="rgb(209,67,20)" fg:x="951" fg:w="12"/><text x="76.4519%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.0833%" y="517" width="0.0801%" height="15" fill="rgb(227,181,50)" fg:x="962" fg:w="1"/><text x="77.3333%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (17 samples, 1.36%)</title><rect x="75.8814%" y="565" width="1.3622%" height="15" fill="rgb(252,75,38)" fg:x="947" fg:w="17"/><text x="76.1314%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.12%)</title><rect x="76.1218%" y="549" width="1.1218%" height="15" fill="rgb(235,9,33)" fg:x="950" fg:w="14"/><text x="76.3718%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.1635%" y="533" width="0.0801%" height="15" fill="rgb(208,87,30)" fg:x="963" fg:w="1"/><text x="77.4135%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.1635%" y="517" width="0.0801%" height="15" fill="rgb(215,199,39)" fg:x="963" fg:w="1"/><text x="77.4135%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.1635%" y="501" width="0.0801%" height="15" fill="rgb(246,208,12)" fg:x="963" fg:w="1"/><text x="77.4135%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.2436%" y="501" width="0.0801%" height="15" fill="rgb(206,195,10)" fg:x="964" fg:w="1"/><text x="77.4936%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="77.2436%" y="565" width="0.1603%" height="15" fill="rgb(244,1,30)" fg:x="964" fg:w="2"/><text x="77.4936%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="77.2436%" y="549" width="0.1603%" height="15" fill="rgb(230,83,5)" fg:x="964" fg:w="2"/><text x="77.4936%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="77.2436%" y="533" width="0.1603%" height="15" fill="rgb(239,62,17)" fg:x="964" fg:w="2"/><text x="77.4936%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="77.2436%" y="517" width="0.1603%" height="15" fill="rgb(252,193,41)" fg:x="964" fg:w="2"/><text x="77.4936%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.3237%" y="501" width="0.0801%" height="15" fill="rgb(216,142,19)" fg:x="965" fg:w="1"/><text x="77.5737%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.3237%" y="485" width="0.0801%" height="15" fill="rgb(240,81,38)" fg:x="965" fg:w="1"/><text x="77.5737%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.3237%" y="469" width="0.0801%" height="15" fill="rgb(240,109,40)" fg:x="965" fg:w="1"/><text x="77.5737%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.3237%" y="453" width="0.0801%" height="15" fill="rgb(230,123,10)" fg:x="965" fg:w="1"/><text x="77.5737%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.3237%" y="437" width="0.0801%" height="15" fill="rgb(253,42,32)" fg:x="965" fg:w="1"/><text x="77.5737%" y="447.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="77.4038%" y="549" width="0.0801%" height="15" fill="rgb(218,154,8)" fg:x="966" fg:w="1"/><text x="77.6538%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.5641%" y="517" width="0.0801%" height="15" fill="rgb(216,197,10)" fg:x="968" fg:w="1"/><text x="77.8141%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.5641%" y="501" width="0.0801%" height="15" fill="rgb(223,107,12)" fg:x="968" fg:w="1"/><text x="77.8141%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="77.5641%" y="485" width="0.0801%" height="15" fill="rgb(241,174,42)" fg:x="968" fg:w="1"/><text x="77.8141%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="77.6442%" y="517" width="0.0801%" height="15" fill="rgb(231,78,20)" fg:x="969" fg:w="1"/><text x="77.8942%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="77.7244%" y="517" width="0.0801%" height="15" fill="rgb(230,208,49)" fg:x="970" fg:w="1"/><text x="77.9744%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.7244%" y="501" width="0.0801%" height="15" fill="rgb(238,11,34)" fg:x="970" fg:w="1"/><text x="77.9744%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.7244%" y="485" width="0.0801%" height="15" fill="rgb(210,130,26)" fg:x="970" fg:w="1"/><text x="77.9744%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.8846%" y="469" width="0.0801%" height="15" fill="rgb(242,131,11)" fg:x="972" fg:w="1"/><text x="78.1346%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.8846%" y="453" width="0.0801%" height="15" fill="rgb(237,38,28)" fg:x="972" fg:w="1"/><text x="78.1346%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.8846%" y="437" width="0.0801%" height="15" fill="rgb(244,180,43)" fg:x="972" fg:w="1"/><text x="78.1346%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.40%)</title><rect x="77.8045%" y="501" width="0.4006%" height="15" fill="rgb(214,171,19)" fg:x="971" fg:w="5"/><text x="78.0545%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="77.8846%" y="485" width="0.3205%" height="15" fill="rgb(252,101,45)" fg:x="972" fg:w="4"/><text x="78.1346%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="77.9647%" y="469" width="0.2404%" height="15" fill="rgb(211,96,33)" fg:x="973" fg:w="3"/><text x="78.2147%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="77.9647%" y="453" width="0.2404%" height="15" fill="rgb(207,80,25)" fg:x="973" fg:w="3"/><text x="78.2147%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="78.0449%" y="437" width="0.1603%" height="15" fill="rgb(225,15,35)" fg:x="974" fg:w="2"/><text x="78.2949%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="78.0449%" y="421" width="0.1603%" height="15" fill="rgb(214,93,43)" fg:x="974" fg:w="2"/><text x="78.2949%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="78.1250%" y="405" width="0.0801%" height="15" fill="rgb(248,42,37)" fg:x="975" fg:w="1"/><text x="78.3750%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="78.1250%" y="389" width="0.0801%" height="15" fill="rgb(217,135,32)" fg:x="975" fg:w="1"/><text x="78.3750%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="78.1250%" y="373" width="0.0801%" height="15" fill="rgb(216,74,28)" fg:x="975" fg:w="1"/><text x="78.3750%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="78.1250%" y="357" width="0.0801%" height="15" fill="rgb(247,108,16)" fg:x="975" fg:w="1"/><text x="78.3750%" y="367.50"></text></g><g><title>engine::session::Session::flush (33 samples, 2.64%)</title><rect x="75.6410%" y="645" width="2.6442%" height="15" fill="rgb(205,219,30)" fg:x="944" fg:w="33"/><text x="75.8910%" y="655.50">en..</text></g><g><title>engine::session::state::State::close (31 samples, 2.48%)</title><rect x="75.8013%" y="629" width="2.4840%" height="15" fill="rgb(241,122,9)" fg:x="946" fg:w="31"/><text x="76.0513%" y="639.50">en..</text></g><g><title>engine::session::state::State::flush_entities (31 samples, 2.48%)</title><rect x="75.8013%" y="613" width="2.4840%" height="15" fill="rgb(216,148,50)" fg:x="946" fg:w="31"/><text x="76.0513%" y="623.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (30 samples, 2.40%)</title><rect x="75.8814%" y="597" width="2.4038%" height="15" fill="rgb(226,154,2)" fg:x="947" fg:w="30"/><text x="76.1314%" y="607.50">en..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (30 samples, 2.40%)</title><rect x="75.8814%" y="581" width="2.4038%" height="15" fill="rgb(220,128,1)" fg:x="947" fg:w="30"/><text x="76.1314%" y="591.50">en..</text></g><g><title>kernel::model::any_entity_changes (11 samples, 0.88%)</title><rect x="77.4038%" y="565" width="0.8814%" height="15" fill="rgb(245,185,29)" fg:x="966" fg:w="11"/><text x="77.6538%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (10 samples, 0.80%)</title><rect x="77.4840%" y="549" width="0.8013%" height="15" fill="rgb(243,161,2)" fg:x="967" fg:w="10"/><text x="77.7340%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.80%)</title><rect x="77.4840%" y="533" width="0.8013%" height="15" fill="rgb(249,215,17)" fg:x="967" fg:w="10"/><text x="77.7340%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.48%)</title><rect x="77.8045%" y="517" width="0.4808%" height="15" fill="rgb(237,67,11)" fg:x="971" fg:w="6"/><text x="78.0545%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.2051%" y="501" width="0.0801%" height="15" fill="rgb(239,17,24)" fg:x="976" fg:w="1"/><text x="78.4551%" y="511.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="78.2853%" y="613" width="0.0801%" height="15" fill="rgb(215,97,29)" fg:x="977" fg:w="1"/><text x="78.5353%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="78.2853%" y="597" width="0.0801%" height="15" fill="rgb(253,228,42)" fg:x="977" fg:w="1"/><text x="78.5353%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.2853%" y="581" width="0.0801%" height="15" fill="rgb(240,85,2)" fg:x="977" fg:w="1"/><text x="78.5353%" y="591.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.2853%" y="565" width="0.0801%" height="15" fill="rgb(214,155,4)" fg:x="977" fg:w="1"/><text x="78.5353%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.2853%" y="549" width="0.0801%" height="15" fill="rgb(247,120,22)" fg:x="977" fg:w="1"/><text x="78.5353%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.2853%" y="533" width="0.0801%" height="15" fill="rgb(211,208,6)" fg:x="977" fg:w="1"/><text x="78.5353%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.2853%" y="517" width="0.0801%" height="15" fill="rgb(235,99,41)" fg:x="977" fg:w="1"/><text x="78.5353%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.2853%" y="501" width="0.0801%" height="15" fill="rgb(223,28,8)" fg:x="977" fg:w="1"/><text x="78.5353%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.2853%" y="485" width="0.0801%" height="15" fill="rgb(212,71,20)" fg:x="977" fg:w="1"/><text x="78.5353%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.2853%" y="469" width="0.0801%" height="15" fill="rgb(206,85,3)" fg:x="977" fg:w="1"/><text x="78.5353%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.2853%" y="453" width="0.0801%" height="15" fill="rgb(244,180,11)" fg:x="977" fg:w="1"/><text x="78.5353%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.2853%" y="437" width="0.0801%" height="15" fill="rgb(223,16,21)" fg:x="977" fg:w="1"/><text x="78.5353%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.2853%" y="421" width="0.0801%" height="15" fill="rgb(238,85,42)" fg:x="977" fg:w="1"/><text x="78.5353%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.2853%" y="405" width="0.0801%" height="15" fill="rgb(205,85,8)" fg:x="977" fg:w="1"/><text x="78.5353%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.2853%" y="389" width="0.0801%" height="15" fill="rgb(217,190,15)" fg:x="977" fg:w="1"/><text x="78.5353%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.2853%" y="373" width="0.0801%" height="15" fill="rgb(243,192,23)" fg:x="977" fg:w="1"/><text x="78.5353%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.2853%" y="357" width="0.0801%" height="15" fill="rgb(223,220,37)" fg:x="977" fg:w="1"/><text x="78.5353%" y="367.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="78.3654%" y="565" width="0.0801%" height="15" fill="rgb(208,41,17)" fg:x="978" fg:w="1"/><text x="78.6154%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.3654%" y="549" width="0.0801%" height="15" fill="rgb(224,188,7)" fg:x="978" fg:w="1"/><text x="78.6154%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.3654%" y="533" width="0.0801%" height="15" fill="rgb(236,16,50)" fg:x="978" fg:w="1"/><text x="78.6154%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.3654%" y="517" width="0.0801%" height="15" fill="rgb(238,6,24)" fg:x="978" fg:w="1"/><text x="78.6154%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.3654%" y="501" width="0.0801%" height="15" fill="rgb(253,67,45)" fg:x="978" fg:w="1"/><text x="78.6154%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.3654%" y="485" width="0.0801%" height="15" fill="rgb(210,89,32)" fg:x="978" fg:w="1"/><text x="78.6154%" y="495.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="78.3654%" y="597" width="0.1603%" height="15" fill="rgb(208,89,9)" fg:x="978" fg:w="2"/><text x="78.6154%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="78.3654%" y="581" width="0.1603%" height="15" fill="rgb(222,180,44)" fg:x="978" fg:w="2"/><text x="78.6154%" y="591.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="78.4455%" y="565" width="0.0801%" height="15" fill="rgb(250,181,46)" fg:x="979" fg:w="1"/><text x="78.6955%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="78.4455%" y="549" width="0.0801%" height="15" fill="rgb(210,190,26)" fg:x="979" fg:w="1"/><text x="78.6955%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.4455%" y="533" width="0.0801%" height="15" fill="rgb(253,49,13)" fg:x="979" fg:w="1"/><text x="78.6955%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.4455%" y="517" width="0.0801%" height="15" fill="rgb(240,184,42)" fg:x="979" fg:w="1"/><text x="78.6955%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.64%)</title><rect x="78.3654%" y="613" width="0.6410%" height="15" fill="rgb(246,59,37)" fg:x="978" fg:w="8"/><text x="78.6154%" y="623.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (6 samples, 0.48%)</title><rect x="78.5256%" y="597" width="0.4808%" height="15" fill="rgb(207,134,54)" fg:x="980" fg:w="6"/><text x="78.7756%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.48%)</title><rect x="78.5256%" y="581" width="0.4808%" height="15" fill="rgb(250,122,24)" fg:x="980" fg:w="6"/><text x="78.7756%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.48%)</title><rect x="78.5256%" y="565" width="0.4808%" height="15" fill="rgb(239,206,3)" fg:x="980" fg:w="6"/><text x="78.7756%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.48%)</title><rect x="78.5256%" y="549" width="0.4808%" height="15" fill="rgb(253,220,32)" fg:x="980" fg:w="6"/><text x="78.7756%" y="559.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="78.6058%" y="533" width="0.4006%" height="15" fill="rgb(209,217,48)" fg:x="981" fg:w="5"/><text x="78.8558%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.80%)</title><rect x="78.2853%" y="629" width="0.8013%" height="15" fill="rgb(242,91,39)" fg:x="977" fg:w="10"/><text x="78.5353%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="79.0064%" y="613" width="0.0801%" height="15" fill="rgb(228,4,13)" fg:x="986" fg:w="1"/><text x="79.2564%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.0865%" y="533" width="0.0801%" height="15" fill="rgb(223,133,4)" fg:x="987" fg:w="1"/><text x="79.3365%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.0865%" y="517" width="0.0801%" height="15" fill="rgb(215,105,30)" fg:x="987" fg:w="1"/><text x="79.3365%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.0865%" y="501" width="0.0801%" height="15" fill="rgb(230,9,4)" fg:x="987" fg:w="1"/><text x="79.3365%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.0865%" y="485" width="0.0801%" height="15" fill="rgb(248,15,2)" fg:x="987" fg:w="1"/><text x="79.3365%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.0865%" y="469" width="0.0801%" height="15" fill="rgb(208,210,22)" fg:x="987" fg:w="1"/><text x="79.3365%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.0865%" y="453" width="0.0801%" height="15" fill="rgb(208,112,41)" fg:x="987" fg:w="1"/><text x="79.3365%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="79.0865%" y="437" width="0.0801%" height="15" fill="rgb(232,83,14)" fg:x="987" fg:w="1"/><text x="79.3365%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="79.0865%" y="421" width="0.0801%" height="15" fill="rgb(229,65,11)" fg:x="987" fg:w="1"/><text x="79.3365%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="79.0865%" y="405" width="0.0801%" height="15" fill="rgb(228,126,24)" fg:x="987" fg:w="1"/><text x="79.3365%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.0865%" y="389" width="0.0801%" height="15" fill="rgb(218,66,33)" fg:x="987" fg:w="1"/><text x="79.3365%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.0865%" y="373" width="0.0801%" height="15" fill="rgb(251,49,52)" fg:x="987" fg:w="1"/><text x="79.3365%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="79.0865%" y="357" width="0.0801%" height="15" fill="rgb(219,46,37)" fg:x="987" fg:w="1"/><text x="79.3365%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="79.0865%" y="341" width="0.0801%" height="15" fill="rgb(213,53,49)" fg:x="987" fg:w="1"/><text x="79.3365%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="79.0865%" y="325" width="0.0801%" height="15" fill="rgb(214,134,1)" fg:x="987" fg:w="1"/><text x="79.3365%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="79.0865%" y="309" width="0.0801%" height="15" fill="rgb(208,139,43)" fg:x="987" fg:w="1"/><text x="79.3365%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="79.0865%" y="581" width="0.1603%" height="15" fill="rgb(231,105,35)" fg:x="987" fg:w="2"/><text x="79.3365%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="79.0865%" y="565" width="0.1603%" height="15" fill="rgb(247,189,9)" fg:x="987" fg:w="2"/><text x="79.3365%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="79.0865%" y="549" width="0.1603%" height="15" fill="rgb(252,48,51)" fg:x="987" fg:w="2"/><text x="79.3365%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.1667%" y="533" width="0.0801%" height="15" fill="rgb(209,121,1)" fg:x="988" fg:w="1"/><text x="79.4167%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.1667%" y="517" width="0.0801%" height="15" fill="rgb(231,40,26)" fg:x="988" fg:w="1"/><text x="79.4167%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.1667%" y="501" width="0.0801%" height="15" fill="rgb(251,8,13)" fg:x="988" fg:w="1"/><text x="79.4167%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.1667%" y="485" width="0.0801%" height="15" fill="rgb(231,110,2)" fg:x="988" fg:w="1"/><text x="79.4167%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="79.1667%" y="469" width="0.0801%" height="15" fill="rgb(216,153,22)" fg:x="988" fg:w="1"/><text x="79.4167%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.1667%" y="453" width="0.0801%" height="15" fill="rgb(249,116,49)" fg:x="988" fg:w="1"/><text x="79.4167%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="79.1667%" y="437" width="0.0801%" height="15" fill="rgb(230,89,2)" fg:x="988" fg:w="1"/><text x="79.4167%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.1667%" y="421" width="0.0801%" height="15" fill="rgb(231,125,23)" fg:x="988" fg:w="1"/><text x="79.4167%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="79.0865%" y="613" width="0.2404%" height="15" fill="rgb(212,217,18)" fg:x="987" fg:w="3"/><text x="79.3365%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="79.0865%" y="597" width="0.2404%" height="15" fill="rgb(210,21,33)" fg:x="987" fg:w="3"/><text x="79.3365%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="79.2468%" y="581" width="0.0801%" height="15" fill="rgb(241,97,9)" fg:x="989" fg:w="1"/><text x="79.4968%" y="591.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="79.2468%" y="565" width="0.0801%" height="15" fill="rgb(221,35,31)" fg:x="989" fg:w="1"/><text x="79.4968%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="79.2468%" y="549" width="0.0801%" height="15" fill="rgb(251,23,23)" fg:x="989" fg:w="1"/><text x="79.4968%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.3269%" y="517" width="0.0801%" height="15" fill="rgb(227,165,2)" fg:x="990" fg:w="1"/><text x="79.5769%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.3269%" y="501" width="0.0801%" height="15" fill="rgb(242,24,2)" fg:x="990" fg:w="1"/><text x="79.5769%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.3269%" y="485" width="0.0801%" height="15" fill="rgb(242,138,51)" fg:x="990" fg:w="1"/><text x="79.5769%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.4071%" y="517" width="0.0801%" height="15" fill="rgb(220,219,5)" fg:x="991" fg:w="1"/><text x="79.6571%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="79.4071%" y="501" width="0.0801%" height="15" fill="rgb(247,53,29)" fg:x="991" fg:w="1"/><text x="79.6571%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.4071%" y="485" width="0.0801%" height="15" fill="rgb(233,43,39)" fg:x="991" fg:w="1"/><text x="79.6571%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.4071%" y="469" width="0.0801%" height="15" fill="rgb(230,128,54)" fg:x="991" fg:w="1"/><text x="79.6571%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.4071%" y="453" width="0.0801%" height="15" fill="rgb(218,20,12)" fg:x="991" fg:w="1"/><text x="79.6571%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.4071%" y="437" width="0.0801%" height="15" fill="rgb(206,51,14)" fg:x="991" fg:w="1"/><text x="79.6571%" y="447.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="79.3269%" y="613" width="0.2404%" height="15" fill="rgb(223,16,35)" fg:x="990" fg:w="3"/><text x="79.5769%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="79.3269%" y="597" width="0.2404%" height="15" fill="rgb(226,165,37)" fg:x="990" fg:w="3"/><text x="79.5769%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="79.3269%" y="581" width="0.2404%" height="15" fill="rgb(240,26,21)" fg:x="990" fg:w="3"/><text x="79.5769%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="79.3269%" y="565" width="0.2404%" height="15" fill="rgb(240,72,46)" fg:x="990" fg:w="3"/><text x="79.5769%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="79.3269%" y="549" width="0.2404%" height="15" fill="rgb(211,33,41)" fg:x="990" fg:w="3"/><text x="79.5769%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="79.3269%" y="533" width="0.2404%" height="15" fill="rgb(224,157,46)" fg:x="990" fg:w="3"/><text x="79.5769%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.4872%" y="517" width="0.0801%" height="15" fill="rgb(223,59,19)" fg:x="992" fg:w="1"/><text x="79.7372%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.4872%" y="501" width="0.0801%" height="15" fill="rgb(239,187,1)" fg:x="992" fg:w="1"/><text x="79.7372%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.4872%" y="485" width="0.0801%" height="15" fill="rgb(226,95,9)" fg:x="992" fg:w="1"/><text x="79.7372%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.4872%" y="469" width="0.0801%" height="15" fill="rgb(234,61,54)" fg:x="992" fg:w="1"/><text x="79.7372%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.4872%" y="453" width="0.0801%" height="15" fill="rgb(205,209,47)" fg:x="992" fg:w="1"/><text x="79.7372%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.4872%" y="437" width="0.0801%" height="15" fill="rgb(228,7,43)" fg:x="992" fg:w="1"/><text x="79.7372%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="79.5673%" y="597" width="0.0801%" height="15" fill="rgb(240,217,52)" fg:x="993" fg:w="1"/><text x="79.8173%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="79.5673%" y="581" width="0.0801%" height="15" fill="rgb(211,178,21)" fg:x="993" fg:w="1"/><text x="79.8173%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.5673%" y="565" width="0.0801%" height="15" fill="rgb(205,25,34)" fg:x="993" fg:w="1"/><text x="79.8173%" y="575.50"></text></g><g><title>plugins_core::build::Build::holding (20 samples, 1.60%)</title><rect x="78.2853%" y="645" width="1.6026%" height="15" fill="rgb(209,57,11)" fg:x="977" fg:w="20"/><text x="78.5353%" y="655.50"></text></g><g><title>plugins_core::tools::set_container (10 samples, 0.80%)</title><rect x="79.0865%" y="629" width="0.8013%" height="15" fill="rgb(221,99,2)" fg:x="987" fg:w="10"/><text x="79.3365%" y="639.50"></text></g><g><title>plugins_core::location::Location::set (4 samples, 0.32%)</title><rect x="79.5673%" y="613" width="0.3205%" height="15" fill="rgb(232,79,22)" fg:x="993" fg:w="4"/><text x="79.8173%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="79.6474%" y="597" width="0.2404%" height="15" fill="rgb(221,145,32)" fg:x="994" fg:w="3"/><text x="79.8974%" y="607.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (3 samples, 0.24%)</title><rect x="79.6474%" y="581" width="0.2404%" height="15" fill="rgb(236,133,36)" fg:x="994" fg:w="3"/><text x="79.8974%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="79.6474%" y="565" width="0.2404%" height="15" fill="rgb(208,224,44)" fg:x="994" fg:w="3"/><text x="79.8974%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="79.6474%" y="549" width="0.2404%" height="15" fill="rgb(235,143,15)" fg:x="994" fg:w="3"/><text x="79.8974%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="79.6474%" y="533" width="0.2404%" height="15" fill="rgb(249,83,27)" fg:x="994" fg:w="3"/><text x="79.8974%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="79.7276%" y="517" width="0.1603%" height="15" fill="rgb(238,226,19)" fg:x="995" fg:w="2"/><text x="79.9776%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="79.7276%" y="501" width="0.1603%" height="15" fill="rgb(226,206,27)" fg:x="995" fg:w="2"/><text x="79.9776%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="79.8077%" y="485" width="0.0801%" height="15" fill="rgb(251,182,9)" fg:x="996" fg:w="1"/><text x="80.0577%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="79.8878%" y="613" width="0.1603%" height="15" fill="rgb(212,140,41)" fg:x="997" fg:w="2"/><text x="80.1378%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="79.8878%" y="597" width="0.1603%" height="15" fill="rgb(220,106,18)" fg:x="997" fg:w="2"/><text x="80.1378%" y="607.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="79.8878%" y="581" width="0.1603%" height="15" fill="rgb(252,46,41)" fg:x="997" fg:w="2"/><text x="80.1378%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.9679%" y="565" width="0.0801%" height="15" fill="rgb(209,222,15)" fg:x="998" fg:w="1"/><text x="80.2179%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.0481%" y="565" width="0.0801%" height="15" fill="rgb(233,83,50)" fg:x="999" fg:w="1"/><text x="80.2981%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.0481%" y="549" width="0.0801%" height="15" fill="rgb(205,212,0)" fg:x="999" fg:w="1"/><text x="80.2981%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.0481%" y="533" width="0.0801%" height="15" fill="rgb(235,117,51)" fg:x="999" fg:w="1"/><text x="80.2981%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.0481%" y="517" width="0.0801%" height="15" fill="rgb(233,133,48)" fg:x="999" fg:w="1"/><text x="80.2981%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.0481%" y="501" width="0.0801%" height="15" fill="rgb(219,3,2)" fg:x="999" fg:w="1"/><text x="80.2981%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.0481%" y="485" width="0.0801%" height="15" fill="rgb(225,80,52)" fg:x="999" fg:w="1"/><text x="80.2981%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="80.0481%" y="613" width="0.1603%" height="15" fill="rgb(235,195,42)" fg:x="999" fg:w="2"/><text x="80.2981%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="80.0481%" y="597" width="0.1603%" height="15" fill="rgb(240,207,46)" fg:x="999" fg:w="2"/><text x="80.2981%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="80.0481%" y="581" width="0.1603%" height="15" fill="rgb(236,112,50)" fg:x="999" fg:w="2"/><text x="80.2981%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.1282%" y="565" width="0.0801%" height="15" fill="rgb(249,151,27)" fg:x="1000" fg:w="1"/><text x="80.3782%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="80.1282%" y="549" width="0.0801%" height="15" fill="rgb(253,223,52)" fg:x="1000" fg:w="1"/><text x="80.3782%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.1282%" y="533" width="0.0801%" height="15" fill="rgb(215,55,33)" fg:x="1000" fg:w="1"/><text x="80.3782%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.1282%" y="517" width="0.0801%" height="15" fill="rgb(207,24,17)" fg:x="1000" fg:w="1"/><text x="80.3782%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.1282%" y="501" width="0.0801%" height="15" fill="rgb(218,169,32)" fg:x="1000" fg:w="1"/><text x="80.3782%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.1282%" y="485" width="0.0801%" height="15" fill="rgb(209,210,6)" fg:x="1000" fg:w="1"/><text x="80.3782%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.1282%" y="469" width="0.0801%" height="15" fill="rgb(225,208,8)" fg:x="1000" fg:w="1"/><text x="80.3782%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="80.2083%" y="597" width="0.1603%" height="15" fill="rgb(238,14,32)" fg:x="1001" fg:w="2"/><text x="80.4583%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="80.2083%" y="581" width="0.1603%" height="15" fill="rgb(211,137,3)" fg:x="1001" fg:w="2"/><text x="80.4583%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="80.2885%" y="565" width="0.0801%" height="15" fill="rgb(207,171,19)" fg:x="1002" fg:w="1"/><text x="80.5385%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.2885%" y="549" width="0.0801%" height="15" fill="rgb(250,80,8)" fg:x="1002" fg:w="1"/><text x="80.5385%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.2885%" y="533" width="0.0801%" height="15" fill="rgb(209,103,53)" fg:x="1002" fg:w="1"/><text x="80.5385%" y="543.50"></text></g><g><title>plugins_core::build::Build::into_entry (8 samples, 0.64%)</title><rect x="79.8878%" y="645" width="0.6410%" height="15" fill="rgb(233,198,10)" fg:x="997" fg:w="8"/><text x="80.1378%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="79.8878%" y="629" width="0.6410%" height="15" fill="rgb(236,125,25)" fg:x="997" fg:w="8"/><text x="80.1378%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="80.2083%" y="613" width="0.3205%" height="15" fill="rgb(254,182,48)" fg:x="1001" fg:w="4"/><text x="80.4583%" y="623.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="80.3686%" y="597" width="0.1603%" height="15" fill="rgb(216,108,44)" fg:x="1003" fg:w="2"/><text x="80.6186%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="80.3686%" y="581" width="0.1603%" height="15" fill="rgb(222,72,39)" fg:x="1003" fg:w="2"/><text x="80.6186%" y="591.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="80.5288%" y="645" width="0.1603%" height="15" fill="rgb(252,70,39)" fg:x="1005" fg:w="2"/><text x="80.7788%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="80.6090%" y="629" width="0.0801%" height="15" fill="rgb(243,99,34)" fg:x="1006" fg:w="1"/><text x="80.8590%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="80.6090%" y="613" width="0.0801%" height="15" fill="rgb(252,109,12)" fg:x="1006" fg:w="1"/><text x="80.8590%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="80.6090%" y="597" width="0.0801%" height="15" fill="rgb(211,186,10)" fg:x="1006" fg:w="1"/><text x="80.8590%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="80.6891%" y="629" width="0.0801%" height="15" fill="rgb(246,90,8)" fg:x="1007" fg:w="1"/><text x="80.9391%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="80.6891%" y="613" width="0.0801%" height="15" fill="rgb(226,91,24)" fg:x="1007" fg:w="1"/><text x="80.9391%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="80.6891%" y="597" width="0.0801%" height="15" fill="rgb(216,28,44)" fg:x="1007" fg:w="1"/><text x="80.9391%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="80.6891%" y="581" width="0.0801%" height="15" fill="rgb(229,36,0)" fg:x="1007" fg:w="1"/><text x="80.9391%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="80.6891%" y="565" width="0.0801%" height="15" fill="rgb(245,97,18)" fg:x="1007" fg:w="1"/><text x="80.9391%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.6891%" y="549" width="0.0801%" height="15" fill="rgb(241,97,54)" fg:x="1007" fg:w="1"/><text x="80.9391%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="80.6891%" y="533" width="0.0801%" height="15" fill="rgb(234,125,17)" fg:x="1007" fg:w="1"/><text x="80.9391%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="80.6891%" y="517" width="0.0801%" height="15" fill="rgb(228,172,39)" fg:x="1007" fg:w="1"/><text x="80.9391%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="80.6891%" y="501" width="0.0801%" height="15" fill="rgb(227,169,1)" fg:x="1007" fg:w="1"/><text x="80.9391%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.6891%" y="485" width="0.0801%" height="15" fill="rgb(206,13,35)" fg:x="1007" fg:w="1"/><text x="80.9391%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="80.6891%" y="469" width="0.0801%" height="15" fill="rgb(211,117,30)" fg:x="1007" fg:w="1"/><text x="80.9391%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="80.6891%" y="453" width="0.0801%" height="15" fill="rgb(230,198,4)" fg:x="1007" fg:w="1"/><text x="80.9391%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.6891%" y="437" width="0.0801%" height="15" fill="rgb(213,87,54)" fg:x="1007" fg:w="1"/><text x="80.9391%" y="447.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="80.8494%" y="581" width="0.0801%" height="15" fill="rgb(248,43,22)" fg:x="1009" fg:w="1"/><text x="81.0994%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="80.8494%" y="565" width="0.0801%" height="15" fill="rgb(213,175,48)" fg:x="1009" fg:w="1"/><text x="81.0994%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="80.8494%" y="549" width="0.0801%" height="15" fill="rgb(252,55,9)" fg:x="1009" fg:w="1"/><text x="81.0994%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="80.8494%" y="533" width="0.0801%" height="15" fill="rgb(231,72,33)" fg:x="1009" fg:w="1"/><text x="81.0994%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.8494%" y="517" width="0.0801%" height="15" fill="rgb(213,2,54)" fg:x="1009" fg:w="1"/><text x="81.0994%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.8494%" y="501" width="0.0801%" height="15" fill="rgb(208,88,25)" fg:x="1009" fg:w="1"/><text x="81.0994%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.8494%" y="485" width="0.0801%" height="15" fill="rgb(215,117,13)" fg:x="1009" fg:w="1"/><text x="81.0994%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="80.9295%" y="549" width="0.0801%" height="15" fill="rgb(243,147,21)" fg:x="1010" fg:w="1"/><text x="81.1795%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="80.9295%" y="533" width="0.0801%" height="15" fill="rgb(208,215,36)" fg:x="1010" fg:w="1"/><text x="81.1795%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.9295%" y="517" width="0.0801%" height="15" fill="rgb(238,187,24)" fg:x="1010" fg:w="1"/><text x="81.1795%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.9295%" y="501" width="0.0801%" height="15" fill="rgb(214,173,11)" fg:x="1010" fg:w="1"/><text x="81.1795%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.9295%" y="485" width="0.0801%" height="15" fill="rgb(222,71,20)" fg:x="1010" fg:w="1"/><text x="81.1795%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.9295%" y="469" width="0.0801%" height="15" fill="rgb(242,125,4)" fg:x="1010" fg:w="1"/><text x="81.1795%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.9295%" y="453" width="0.0801%" height="15" fill="rgb(217,101,52)" fg:x="1010" fg:w="1"/><text x="81.1795%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.9295%" y="437" width="0.0801%" height="15" fill="rgb(223,2,50)" fg:x="1010" fg:w="1"/><text x="81.1795%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.9295%" y="421" width="0.0801%" height="15" fill="rgb(225,197,9)" fg:x="1010" fg:w="1"/><text x="81.1795%" y="431.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="80.9295%" y="581" width="0.1603%" height="15" fill="rgb(234,76,27)" fg:x="1010" fg:w="2"/><text x="81.1795%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="80.9295%" y="565" width="0.1603%" height="15" fill="rgb(213,161,26)" fg:x="1010" fg:w="2"/><text x="81.1795%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.0096%" y="549" width="0.0801%" height="15" fill="rgb(210,228,2)" fg:x="1011" fg:w="1"/><text x="81.2596%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="81.0897%" y="549" width="0.0801%" height="15" fill="rgb(235,4,16)" fg:x="1012" fg:w="1"/><text x="81.3397%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.0897%" y="533" width="0.0801%" height="15" fill="rgb(235,83,42)" fg:x="1012" fg:w="1"/><text x="81.3397%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="81.1699%" y="533" width="0.0801%" height="15" fill="rgb(207,116,39)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.1699%" y="517" width="0.0801%" height="15" fill="rgb(253,206,9)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.1699%" y="501" width="0.0801%" height="15" fill="rgb(234,32,47)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.1699%" y="485" width="0.0801%" height="15" fill="rgb(247,40,39)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.1699%" y="469" width="0.0801%" height="15" fill="rgb(236,199,13)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.1699%" y="453" width="0.0801%" height="15" fill="rgb(240,127,44)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.1699%" y="437" width="0.0801%" height="15" fill="rgb(248,220,47)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.1699%" y="421" width="0.0801%" height="15" fill="rgb(240,78,9)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.1699%" y="405" width="0.0801%" height="15" fill="rgb(245,119,5)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.1699%" y="389" width="0.0801%" height="15" fill="rgb(238,175,31)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.1699%" y="373" width="0.0801%" height="15" fill="rgb(232,140,42)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="81.1699%" y="357" width="0.0801%" height="15" fill="rgb(218,179,7)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="81.1699%" y="341" width="0.0801%" height="15" fill="rgb(232,79,27)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="81.1699%" y="325" width="0.0801%" height="15" fill="rgb(247,11,19)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="81.1699%" y="309" width="0.0801%" height="15" fill="rgb(216,171,54)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.1699%" y="293" width="0.0801%" height="15" fill="rgb(233,158,36)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="303.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="81.1699%" y="549" width="0.1603%" height="15" fill="rgb(215,48,47)" fg:x="1013" fg:w="2"/><text x="81.4199%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.2500%" y="533" width="0.0801%" height="15" fill="rgb(230,223,15)" fg:x="1014" fg:w="1"/><text x="81.5000%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.2500%" y="517" width="0.0801%" height="15" fill="rgb(234,49,19)" fg:x="1014" fg:w="1"/><text x="81.5000%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.2500%" y="501" width="0.0801%" height="15" fill="rgb(232,89,25)" fg:x="1014" fg:w="1"/><text x="81.5000%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.2500%" y="485" width="0.0801%" height="15" fill="rgb(237,206,28)" fg:x="1014" fg:w="1"/><text x="81.5000%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="81.3301%" y="469" width="0.0801%" height="15" fill="rgb(249,68,37)" fg:x="1015" fg:w="1"/><text x="81.5801%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="81.0897%" y="565" width="0.4006%" height="15" fill="rgb(226,99,43)" fg:x="1012" fg:w="5"/><text x="81.3397%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="81.3301%" y="549" width="0.1603%" height="15" fill="rgb(216,46,28)" fg:x="1015" fg:w="2"/><text x="81.5801%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="81.3301%" y="533" width="0.1603%" height="15" fill="rgb(216,33,9)" fg:x="1015" fg:w="2"/><text x="81.5801%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="81.3301%" y="517" width="0.1603%" height="15" fill="rgb(216,129,4)" fg:x="1015" fg:w="2"/><text x="81.5801%" y="527.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="81.3301%" y="501" width="0.1603%" height="15" fill="rgb(216,106,3)" fg:x="1015" fg:w="2"/><text x="81.5801%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="81.3301%" y="485" width="0.1603%" height="15" fill="rgb(217,79,45)" fg:x="1015" fg:w="2"/><text x="81.5801%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="81.4103%" y="469" width="0.0801%" height="15" fill="rgb(239,98,13)" fg:x="1016" fg:w="1"/><text x="81.6603%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.4103%" y="453" width="0.0801%" height="15" fill="rgb(221,115,4)" fg:x="1016" fg:w="1"/><text x="81.6603%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="81.4103%" y="437" width="0.0801%" height="15" fill="rgb(215,85,0)" fg:x="1016" fg:w="1"/><text x="81.6603%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.4103%" y="421" width="0.0801%" height="15" fill="rgb(230,62,15)" fg:x="1016" fg:w="1"/><text x="81.6603%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="81.4103%" y="405" width="0.0801%" height="15" fill="rgb(247,162,2)" fg:x="1016" fg:w="1"/><text x="81.6603%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="81.4103%" y="389" width="0.0801%" height="15" fill="rgb(212,112,32)" fg:x="1016" fg:w="1"/><text x="81.6603%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="81.4103%" y="373" width="0.0801%" height="15" fill="rgb(216,137,9)" fg:x="1016" fg:w="1"/><text x="81.6603%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="81.4103%" y="357" width="0.0801%" height="15" fill="rgb(250,149,33)" fg:x="1016" fg:w="1"/><text x="81.6603%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Exit&gt;&gt; (1 samples, 0.08%)</title><rect x="81.4904%" y="549" width="0.0801%" height="15" fill="rgb(246,124,31)" fg:x="1017" fg:w="1"/><text x="81.7404%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="81.4904%" y="533" width="0.0801%" height="15" fill="rgb(216,210,22)" fg:x="1017" fg:w="1"/><text x="81.7404%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.5705%" y="517" width="0.0801%" height="15" fill="rgb(228,128,36)" fg:x="1018" fg:w="1"/><text x="81.8205%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="81.5705%" y="501" width="0.0801%" height="15" fill="rgb(231,41,0)" fg:x="1018" fg:w="1"/><text x="81.8205%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.5705%" y="485" width="0.0801%" height="15" fill="rgb(232,61,26)" fg:x="1018" fg:w="1"/><text x="81.8205%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="81.5705%" y="549" width="0.1603%" height="15" fill="rgb(217,60,9)" fg:x="1018" fg:w="2"/><text x="81.8205%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="81.5705%" y="533" width="0.1603%" height="15" fill="rgb(233,41,35)" fg:x="1018" fg:w="2"/><text x="81.8205%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="81.6506%" y="517" width="0.0801%" height="15" fill="rgb(253,139,43)" fg:x="1019" fg:w="1"/><text x="81.9006%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="81.6506%" y="501" width="0.0801%" height="15" fill="rgb(245,100,51)" fg:x="1019" fg:w="1"/><text x="81.9006%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.6506%" y="485" width="0.0801%" height="15" fill="rgb(250,208,18)" fg:x="1019" fg:w="1"/><text x="81.9006%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.6506%" y="469" width="0.0801%" height="15" fill="rgb(245,33,2)" fg:x="1019" fg:w="1"/><text x="81.9006%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.6506%" y="453" width="0.0801%" height="15" fill="rgb(244,171,31)" fg:x="1019" fg:w="1"/><text x="81.9006%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.6506%" y="437" width="0.0801%" height="15" fill="rgb(229,1,43)" fg:x="1019" fg:w="1"/><text x="81.9006%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.6506%" y="421" width="0.0801%" height="15" fill="rgb(223,153,28)" fg:x="1019" fg:w="1"/><text x="81.9006%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.6506%" y="405" width="0.0801%" height="15" fill="rgb(241,4,46)" fg:x="1019" fg:w="1"/><text x="81.9006%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.6506%" y="389" width="0.0801%" height="15" fill="rgb(230,81,11)" fg:x="1019" fg:w="1"/><text x="81.9006%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.6506%" y="373" width="0.0801%" height="15" fill="rgb(253,204,39)" fg:x="1019" fg:w="1"/><text x="81.9006%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.6506%" y="357" width="0.0801%" height="15" fill="rgb(250,96,8)" fg:x="1019" fg:w="1"/><text x="81.9006%" y="367.50"></text></g><g><title>plugins_core::build::Build::leads_to (9 samples, 0.72%)</title><rect x="81.0897%" y="581" width="0.7212%" height="15" fill="rgb(219,89,54)" fg:x="1012" fg:w="9"/><text x="81.3397%" y="591.50"></text></g><g><title>plugins_core::tools::leads_to (4 samples, 0.32%)</title><rect x="81.4904%" y="565" width="0.3205%" height="15" fill="rgb(235,136,39)" fg:x="1017" fg:w="4"/><text x="81.7404%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="81.7308%" y="549" width="0.0801%" height="15" fill="rgb(230,155,37)" fg:x="1020" fg:w="1"/><text x="81.9808%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (14 samples, 1.12%)</title><rect x="80.7692%" y="629" width="1.1218%" height="15" fill="rgb(235,199,50)" fg:x="1008" fg:w="14"/><text x="81.0192%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 1.12%)</title><rect x="80.7692%" y="613" width="1.1218%" height="15" fill="rgb(227,81,32)" fg:x="1008" fg:w="14"/><text x="81.0192%" y="623.50"></text></g><g><title>plugins_core::build::QuickThing::make (14 samples, 1.12%)</title><rect x="80.7692%" y="597" width="1.1218%" height="15" fill="rgb(225,6,28)" fg:x="1008" fg:w="14"/><text x="81.0192%" y="607.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="81.8109%" y="581" width="0.0801%" height="15" fill="rgb(207,211,17)" fg:x="1021" fg:w="1"/><text x="82.0609%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="81.8109%" y="565" width="0.0801%" height="15" fill="rgb(228,31,49)" fg:x="1021" fg:w="1"/><text x="82.0609%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::Build&gt; (1 samples, 0.08%)</title><rect x="81.8910%" y="629" width="0.0801%" height="15" fill="rgb(230,185,3)" fg:x="1022" fg:w="1"/><text x="82.1410%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.9712%" y="597" width="0.0801%" height="15" fill="rgb(206,167,15)" fg:x="1023" fg:w="1"/><text x="82.2212%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.9712%" y="581" width="0.0801%" height="15" fill="rgb(234,2,36)" fg:x="1023" fg:w="1"/><text x="82.2212%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.9712%" y="565" width="0.0801%" height="15" fill="rgb(239,160,29)" fg:x="1023" fg:w="1"/><text x="82.2212%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.9712%" y="549" width="0.0801%" height="15" fill="rgb(236,117,2)" fg:x="1023" fg:w="1"/><text x="82.2212%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.9712%" y="533" width="0.0801%" height="15" fill="rgb(215,117,37)" fg:x="1023" fg:w="1"/><text x="82.2212%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="81.9712%" y="517" width="0.0801%" height="15" fill="rgb(244,48,36)" fg:x="1023" fg:w="1"/><text x="82.2212%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="81.9712%" y="501" width="0.0801%" height="15" fill="rgb(223,101,37)" fg:x="1023" fg:w="1"/><text x="82.2212%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="81.9712%" y="613" width="0.1603%" height="15" fill="rgb(205,200,1)" fg:x="1023" fg:w="2"/><text x="82.2212%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.0513%" y="597" width="0.0801%" height="15" fill="rgb(209,193,20)" fg:x="1024" fg:w="1"/><text x="82.3013%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.2115%" y="501" width="0.0801%" height="15" fill="rgb(214,63,13)" fg:x="1026" fg:w="1"/><text x="82.4615%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.2115%" y="485" width="0.0801%" height="15" fill="rgb(253,113,46)" fg:x="1026" fg:w="1"/><text x="82.4615%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.2115%" y="469" width="0.0801%" height="15" fill="rgb(237,103,34)" fg:x="1026" fg:w="1"/><text x="82.4615%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.2115%" y="453" width="0.0801%" height="15" fill="rgb(223,38,25)" fg:x="1026" fg:w="1"/><text x="82.4615%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="82.2115%" y="517" width="0.1603%" height="15" fill="rgb(251,32,32)" fg:x="1026" fg:w="2"/><text x="82.4615%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.2917%" y="501" width="0.0801%" height="15" fill="rgb(228,65,22)" fg:x="1027" fg:w="1"/><text x="82.5417%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="82.3718%" y="501" width="0.2404%" height="15" fill="rgb(205,11,46)" fg:x="1028" fg:w="3"/><text x="82.6218%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="82.4519%" y="485" width="0.1603%" height="15" fill="rgb(220,35,2)" fg:x="1029" fg:w="2"/><text x="82.7019%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="82.4519%" y="469" width="0.1603%" height="15" fill="rgb(217,151,17)" fg:x="1029" fg:w="2"/><text x="82.7019%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="82.4519%" y="453" width="0.1603%" height="15" fill="rgb(243,227,35)" fg:x="1029" fg:w="2"/><text x="82.7019%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="82.6923%" y="485" width="0.0801%" height="15" fill="rgb(214,0,34)" fg:x="1032" fg:w="1"/><text x="82.9423%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="82.6923%" y="469" width="0.0801%" height="15" fill="rgb(209,42,37)" fg:x="1032" fg:w="1"/><text x="82.9423%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="82.6923%" y="453" width="0.0801%" height="15" fill="rgb(251,176,30)" fg:x="1032" fg:w="1"/><text x="82.9423%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.6923%" y="437" width="0.0801%" height="15" fill="rgb(223,64,40)" fg:x="1032" fg:w="1"/><text x="82.9423%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.6923%" y="421" width="0.0801%" height="15" fill="rgb(227,180,23)" fg:x="1032" fg:w="1"/><text x="82.9423%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.7724%" y="485" width="0.0801%" height="15" fill="rgb(220,137,31)" fg:x="1033" fg:w="1"/><text x="83.0224%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.7724%" y="469" width="0.0801%" height="15" fill="rgb(245,124,25)" fg:x="1033" fg:w="1"/><text x="83.0224%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.7724%" y="453" width="0.0801%" height="15" fill="rgb(217,157,5)" fg:x="1033" fg:w="1"/><text x="83.0224%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.7724%" y="437" width="0.0801%" height="15" fill="rgb(225,59,2)" fg:x="1033" fg:w="1"/><text x="83.0224%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="82.9327%" y="437" width="0.1603%" height="15" fill="rgb(220,182,9)" fg:x="1035" fg:w="2"/><text x="83.1827%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.0128%" y="421" width="0.0801%" height="15" fill="rgb(249,54,24)" fg:x="1036" fg:w="1"/><text x="83.2628%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.0128%" y="405" width="0.0801%" height="15" fill="rgb(216,89,17)" fg:x="1036" fg:w="1"/><text x="83.2628%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.0128%" y="389" width="0.0801%" height="15" fill="rgb(245,20,45)" fg:x="1036" fg:w="1"/><text x="83.2628%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="83.0929%" y="421" width="0.3205%" height="15" fill="rgb(230,83,14)" fg:x="1037" fg:w="4"/><text x="83.3429%" y="431.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="83.0929%" y="405" width="0.3205%" height="15" fill="rgb(246,109,11)" fg:x="1037" fg:w="4"/><text x="83.3429%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="83.1731%" y="389" width="0.2404%" height="15" fill="rgb(235,85,23)" fg:x="1038" fg:w="3"/><text x="83.4231%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="83.1731%" y="373" width="0.2404%" height="15" fill="rgb(215,101,36)" fg:x="1038" fg:w="3"/><text x="83.4231%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="83.1731%" y="357" width="0.2404%" height="15" fill="rgb(228,140,31)" fg:x="1038" fg:w="3"/><text x="83.4231%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="83.1731%" y="341" width="0.2404%" height="15" fill="rgb(234,162,37)" fg:x="1038" fg:w="3"/><text x="83.4231%" y="351.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="83.1731%" y="325" width="0.2404%" height="15" fill="rgb(221,0,24)" fg:x="1038" fg:w="3"/><text x="83.4231%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="83.0929%" y="437" width="0.4006%" height="15" fill="rgb(230,161,41)" fg:x="1037" fg:w="5"/><text x="83.3429%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.4135%" y="421" width="0.0801%" height="15" fill="rgb(224,46,24)" fg:x="1041" fg:w="1"/><text x="83.6635%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="82.9327%" y="453" width="0.6410%" height="15" fill="rgb(205,59,32)" fg:x="1035" fg:w="8"/><text x="83.1827%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.4936%" y="437" width="0.0801%" height="15" fill="rgb(239,31,20)" fg:x="1042" fg:w="1"/><text x="83.7436%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.4936%" y="421" width="0.0801%" height="15" fill="rgb(233,149,44)" fg:x="1042" fg:w="1"/><text x="83.7436%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="83.4936%" y="405" width="0.0801%" height="15" fill="rgb(243,47,26)" fg:x="1042" fg:w="1"/><text x="83.7436%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="82.6122%" y="501" width="1.0417%" height="15" fill="rgb(233,107,5)" fg:x="1031" fg:w="13"/><text x="82.8622%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="82.8526%" y="485" width="0.8013%" height="15" fill="rgb(248,140,33)" fg:x="1034" fg:w="10"/><text x="83.1026%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="82.9327%" y="469" width="0.7212%" height="15" fill="rgb(228,178,19)" fg:x="1035" fg:w="9"/><text x="83.1827%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.5737%" y="453" width="0.0801%" height="15" fill="rgb(224,39,49)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.5737%" y="437" width="0.0801%" height="15" fill="rgb(246,56,47)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.60%)</title><rect x="82.3718%" y="517" width="1.6026%" height="15" fill="rgb(220,73,27)" fg:x="1028" fg:w="20"/><text x="82.6218%" y="527.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="83.6538%" y="501" width="0.3205%" height="15" fill="rgb(239,112,21)" fg:x="1044" fg:w="4"/><text x="83.9038%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="83.8141%" y="485" width="0.1603%" height="15" fill="rgb(253,14,51)" fg:x="1046" fg:w="2"/><text x="84.0641%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="83.8141%" y="469" width="0.1603%" height="15" fill="rgb(215,58,12)" fg:x="1046" fg:w="2"/><text x="84.0641%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="83.8141%" y="453" width="0.1603%" height="15" fill="rgb(207,181,19)" fg:x="1046" fg:w="2"/><text x="84.0641%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="83.8141%" y="437" width="0.1603%" height="15" fill="rgb(211,214,34)" fg:x="1046" fg:w="2"/><text x="84.0641%" y="447.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="83.8141%" y="421" width="0.1603%" height="15" fill="rgb(243,124,39)" fg:x="1046" fg:w="2"/><text x="84.0641%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (24 samples, 1.92%)</title><rect x="82.2115%" y="533" width="1.9231%" height="15" fill="rgb(248,135,21)" fg:x="1026" fg:w="24"/><text x="82.4615%" y="543.50">&lt;..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="83.9744%" y="517" width="0.1603%" height="15" fill="rgb(245,218,3)" fg:x="1048" fg:w="2"/><text x="84.2244%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="83.9744%" y="501" width="0.1603%" height="15" fill="rgb(225,144,22)" fg:x="1048" fg:w="2"/><text x="84.2244%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.0545%" y="485" width="0.0801%" height="15" fill="rgb(250,90,15)" fg:x="1049" fg:w="1"/><text x="84.3045%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.1346%" y="485" width="0.0801%" height="15" fill="rgb(224,64,29)" fg:x="1050" fg:w="1"/><text x="84.3846%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.1346%" y="469" width="0.0801%" height="15" fill="rgb(217,50,47)" fg:x="1050" fg:w="1"/><text x="84.3846%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.2147%" y="469" width="0.0801%" height="15" fill="rgb(231,159,47)" fg:x="1051" fg:w="1"/><text x="84.4647%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.2949%" y="469" width="0.0801%" height="15" fill="rgb(213,89,29)" fg:x="1052" fg:w="1"/><text x="84.5449%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.2949%" y="453" width="0.0801%" height="15" fill="rgb(243,90,23)" fg:x="1052" fg:w="1"/><text x="84.5449%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="84.4551%" y="453" width="0.1603%" height="15" fill="rgb(213,21,6)" fg:x="1054" fg:w="2"/><text x="84.7051%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="84.6154%" y="453" width="0.1603%" height="15" fill="rgb(237,139,17)" fg:x="1056" fg:w="2"/><text x="84.8654%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="84.6154%" y="437" width="0.1603%" height="15" fill="rgb(250,147,17)" fg:x="1056" fg:w="2"/><text x="84.8654%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="84.6154%" y="421" width="0.1603%" height="15" fill="rgb(212,208,42)" fg:x="1056" fg:w="2"/><text x="84.8654%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.6955%" y="405" width="0.0801%" height="15" fill="rgb(215,229,40)" fg:x="1057" fg:w="1"/><text x="84.9455%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="84.1346%" y="533" width="0.8013%" height="15" fill="rgb(206,204,1)" fg:x="1050" fg:w="10"/><text x="84.3846%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10 samples, 0.80%)</title><rect x="84.1346%" y="517" width="0.8013%" height="15" fill="rgb(230,62,32)" fg:x="1050" fg:w="10"/><text x="84.3846%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="84.1346%" y="501" width="0.8013%" height="15" fill="rgb(223,22,42)" fg:x="1050" fg:w="10"/><text x="84.3846%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="84.2147%" y="485" width="0.7212%" height="15" fill="rgb(244,6,23)" fg:x="1051" fg:w="9"/><text x="84.4647%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="84.3750%" y="469" width="0.5609%" height="15" fill="rgb(240,221,42)" fg:x="1053" fg:w="7"/><text x="84.6250%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="84.7756%" y="453" width="0.1603%" height="15" fill="rgb(222,74,7)" fg:x="1058" fg:w="2"/><text x="85.0256%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="84.7756%" y="437" width="0.1603%" height="15" fill="rgb(227,191,38)" fg:x="1058" fg:w="2"/><text x="85.0256%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.8558%" y="421" width="0.0801%" height="15" fill="rgb(227,89,34)" fg:x="1059" fg:w="1"/><text x="85.1058%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="85.0962%" y="485" width="0.1603%" height="15" fill="rgb(215,153,25)" fg:x="1062" fg:w="2"/><text x="85.3462%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.1763%" y="469" width="0.0801%" height="15" fill="rgb(215,153,46)" fg:x="1063" fg:w="1"/><text x="85.4263%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="85.2564%" y="485" width="0.0801%" height="15" fill="rgb(242,38,52)" fg:x="1064" fg:w="1"/><text x="85.5064%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.2564%" y="469" width="0.0801%" height="15" fill="rgb(218,112,4)" fg:x="1064" fg:w="1"/><text x="85.5064%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="85.2564%" y="453" width="0.0801%" height="15" fill="rgb(231,210,31)" fg:x="1064" fg:w="1"/><text x="85.5064%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="85.3365%" y="485" width="0.0801%" height="15" fill="rgb(245,223,36)" fg:x="1065" fg:w="1"/><text x="85.5865%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.3365%" y="469" width="0.0801%" height="15" fill="rgb(246,41,2)" fg:x="1065" fg:w="1"/><text x="85.5865%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.3365%" y="453" width="0.0801%" height="15" fill="rgb(227,51,31)" fg:x="1065" fg:w="1"/><text x="85.5865%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.3365%" y="437" width="0.0801%" height="15" fill="rgb(222,95,26)" fg:x="1065" fg:w="1"/><text x="85.5865%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="85.4167%" y="485" width="0.1603%" height="15" fill="rgb(224,190,1)" fg:x="1066" fg:w="2"/><text x="85.6667%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="85.4167%" y="469" width="0.1603%" height="15" fill="rgb(209,90,42)" fg:x="1066" fg:w="2"/><text x="85.6667%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="85.4167%" y="453" width="0.1603%" height="15" fill="rgb(232,225,50)" fg:x="1066" fg:w="2"/><text x="85.6667%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.8173%" y="341" width="0.0801%" height="15" fill="rgb(239,89,47)" fg:x="1071" fg:w="1"/><text x="86.0673%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="85.8173%" y="389" width="0.2404%" height="15" fill="rgb(230,212,50)" fg:x="1071" fg:w="3"/><text x="86.0673%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="85.8173%" y="373" width="0.2404%" height="15" fill="rgb(252,1,27)" fg:x="1071" fg:w="3"/><text x="86.0673%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="85.8173%" y="357" width="0.2404%" height="15" fill="rgb(237,179,41)" fg:x="1071" fg:w="3"/><text x="86.0673%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="85.8974%" y="341" width="0.1603%" height="15" fill="rgb(214,151,37)" fg:x="1072" fg:w="2"/><text x="86.1474%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="85.9776%" y="325" width="0.0801%" height="15" fill="rgb(211,74,11)" fg:x="1073" fg:w="1"/><text x="86.2276%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.9776%" y="309" width="0.0801%" height="15" fill="rgb(242,21,21)" fg:x="1073" fg:w="1"/><text x="86.2276%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.9776%" y="293" width="0.0801%" height="15" fill="rgb(226,106,43)" fg:x="1073" fg:w="1"/><text x="86.2276%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.9776%" y="277" width="0.0801%" height="15" fill="rgb(229,162,39)" fg:x="1073" fg:w="1"/><text x="86.2276%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="85.8173%" y="421" width="0.3205%" height="15" fill="rgb(228,159,25)" fg:x="1071" fg:w="4"/><text x="86.0673%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="85.8173%" y="405" width="0.3205%" height="15" fill="rgb(237,32,23)" fg:x="1071" fg:w="4"/><text x="86.0673%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.0577%" y="389" width="0.0801%" height="15" fill="rgb(212,35,32)" fg:x="1074" fg:w="1"/><text x="86.3077%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.56%)</title><rect x="85.6571%" y="469" width="0.5609%" height="15" fill="rgb(215,199,1)" fg:x="1069" fg:w="7"/><text x="85.9071%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="85.6571%" y="453" width="0.5609%" height="15" fill="rgb(215,67,13)" fg:x="1069" fg:w="7"/><text x="85.9071%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="85.6571%" y="437" width="0.5609%" height="15" fill="rgb(216,20,47)" fg:x="1069" fg:w="7"/><text x="85.9071%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.1378%" y="421" width="0.0801%" height="15" fill="rgb(249,183,48)" fg:x="1075" fg:w="1"/><text x="86.3878%" y="431.50"></text></g><g><title>engine::session::Session::flush (54 samples, 4.33%)</title><rect x="81.9712%" y="629" width="4.3269%" height="15" fill="rgb(208,86,37)" fg:x="1023" fg:w="54"/><text x="82.2212%" y="639.50">engin..</text></g><g><title>engine::session::Session::save_changes (52 samples, 4.17%)</title><rect x="82.1314%" y="613" width="4.1667%" height="15" fill="rgb(251,192,7)" fg:x="1025" fg:w="52"/><text x="82.3814%" y="623.50">engin..</text></g><g><title>engine::session::state::State::close (52 samples, 4.17%)</title><rect x="82.1314%" y="597" width="4.1667%" height="15" fill="rgb(234,196,3)" fg:x="1025" fg:w="52"/><text x="82.3814%" y="607.50">engin..</text></g><g><title>engine::session::state::State::flush_entities (51 samples, 4.09%)</title><rect x="82.2115%" y="581" width="4.0865%" height="15" fill="rgb(229,150,39)" fg:x="1026" fg:w="51"/><text x="82.4615%" y="591.50">engi..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (51 samples, 4.09%)</title><rect x="82.2115%" y="565" width="4.0865%" height="15" fill="rgb(226,19,29)" fg:x="1026" fg:w="51"/><text x="82.4615%" y="575.50">engi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (51 samples, 4.09%)</title><rect x="82.2115%" y="549" width="4.0865%" height="15" fill="rgb(226,222,2)" fg:x="1026" fg:w="51"/><text x="82.4615%" y="559.50">engi..</text></g><g><title>kernel::model::any_entity_changes (17 samples, 1.36%)</title><rect x="84.9359%" y="533" width="1.3622%" height="15" fill="rgb(235,85,29)" fg:x="1060" fg:w="17"/><text x="85.1859%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (17 samples, 1.36%)</title><rect x="84.9359%" y="517" width="1.3622%" height="15" fill="rgb(237,194,43)" fg:x="1060" fg:w="17"/><text x="85.1859%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 1.36%)</title><rect x="84.9359%" y="501" width="1.3622%" height="15" fill="rgb(211,4,42)" fg:x="1060" fg:w="17"/><text x="85.1859%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.72%)</title><rect x="85.5769%" y="485" width="0.7212%" height="15" fill="rgb(221,80,37)" fg:x="1068" fg:w="9"/><text x="85.8269%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.2179%" y="469" width="0.0801%" height="15" fill="rgb(222,47,31)" fg:x="1076" fg:w="1"/><text x="86.4679%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.2179%" y="453" width="0.0801%" height="15" fill="rgb(249,82,52)" fg:x="1076" fg:w="1"/><text x="86.4679%" y="463.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="86.2981%" y="629" width="0.0801%" height="15" fill="rgb(218,203,2)" fg:x="1077" fg:w="1"/><text x="86.5481%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="86.2981%" y="613" width="0.0801%" height="15" fill="rgb(210,175,14)" fg:x="1077" fg:w="1"/><text x="86.5481%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="86.2981%" y="597" width="0.0801%" height="15" fill="rgb(216,210,12)" fg:x="1077" fg:w="1"/><text x="86.5481%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.2981%" y="581" width="0.0801%" height="15" fill="rgb(229,120,18)" fg:x="1077" fg:w="1"/><text x="86.5481%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.2981%" y="565" width="0.0801%" height="15" fill="rgb(231,174,12)" fg:x="1077" fg:w="1"/><text x="86.5481%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="86.3782%" y="581" width="0.0801%" height="15" fill="rgb(214,101,53)" fg:x="1078" fg:w="1"/><text x="86.6282%" y="591.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="86.3782%" y="565" width="0.0801%" height="15" fill="rgb(246,89,43)" fg:x="1078" fg:w="1"/><text x="86.6282%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.3782%" y="549" width="0.0801%" height="15" fill="rgb(222,9,51)" fg:x="1078" fg:w="1"/><text x="86.6282%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="86.3782%" y="597" width="0.1603%" height="15" fill="rgb(252,221,9)" fg:x="1078" fg:w="2"/><text x="86.6282%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="86.4583%" y="581" width="0.0801%" height="15" fill="rgb(248,28,15)" fg:x="1079" fg:w="1"/><text x="86.7083%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="86.4583%" y="565" width="0.0801%" height="15" fill="rgb(213,54,52)" fg:x="1079" fg:w="1"/><text x="86.7083%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="86.4583%" y="549" width="0.0801%" height="15" fill="rgb(240,3,45)" fg:x="1079" fg:w="1"/><text x="86.7083%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.4583%" y="533" width="0.0801%" height="15" fill="rgb(239,138,24)" fg:x="1079" fg:w="1"/><text x="86.7083%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="86.4583%" y="517" width="0.0801%" height="15" fill="rgb(233,45,54)" fg:x="1079" fg:w="1"/><text x="86.7083%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="86.4583%" y="501" width="0.0801%" height="15" fill="rgb(220,131,2)" fg:x="1079" fg:w="1"/><text x="86.7083%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="86.4583%" y="485" width="0.0801%" height="15" fill="rgb(240,154,36)" fg:x="1079" fg:w="1"/><text x="86.7083%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.4583%" y="469" width="0.0801%" height="15" fill="rgb(251,221,1)" fg:x="1079" fg:w="1"/><text x="86.7083%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="86.4583%" y="453" width="0.0801%" height="15" fill="rgb(225,217,1)" fg:x="1079" fg:w="1"/><text x="86.7083%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="86.4583%" y="437" width="0.0801%" height="15" fill="rgb(241,105,49)" fg:x="1079" fg:w="1"/><text x="86.7083%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="86.4583%" y="421" width="0.0801%" height="15" fill="rgb(215,44,32)" fg:x="1079" fg:w="1"/><text x="86.7083%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.4583%" y="405" width="0.0801%" height="15" fill="rgb(213,222,14)" fg:x="1079" fg:w="1"/><text x="86.7083%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.4583%" y="389" width="0.0801%" height="15" fill="rgb(207,99,52)" fg:x="1079" fg:w="1"/><text x="86.7083%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.4583%" y="373" width="0.0801%" height="15" fill="rgb(214,208,52)" fg:x="1079" fg:w="1"/><text x="86.7083%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="86.4583%" y="357" width="0.0801%" height="15" fill="rgb(244,169,0)" fg:x="1079" fg:w="1"/><text x="86.7083%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="86.4583%" y="341" width="0.0801%" height="15" fill="rgb(216,193,37)" fg:x="1079" fg:w="1"/><text x="86.7083%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="86.4583%" y="325" width="0.0801%" height="15" fill="rgb(212,158,10)" fg:x="1079" fg:w="1"/><text x="86.7083%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="86.4583%" y="309" width="0.0801%" height="15" fill="rgb(213,110,20)" fg:x="1079" fg:w="1"/><text x="86.7083%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="86.4583%" y="293" width="0.0801%" height="15" fill="rgb(226,5,42)" fg:x="1079" fg:w="1"/><text x="86.7083%" y="303.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="86.5385%" y="597" width="0.0801%" height="15" fill="rgb(211,93,8)" fg:x="1080" fg:w="1"/><text x="86.7885%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="86.5385%" y="581" width="0.0801%" height="15" fill="rgb(240,208,12)" fg:x="1080" fg:w="1"/><text x="86.7885%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="86.5385%" y="565" width="0.0801%" height="15" fill="rgb(233,127,50)" fg:x="1080" fg:w="1"/><text x="86.7885%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.5385%" y="549" width="0.0801%" height="15" fill="rgb(227,199,53)" fg:x="1080" fg:w="1"/><text x="86.7885%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.5385%" y="533" width="0.0801%" height="15" fill="rgb(235,199,10)" fg:x="1080" fg:w="1"/><text x="86.7885%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.6186%" y="549" width="0.0801%" height="15" fill="rgb(228,148,35)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.6186%" y="533" width="0.0801%" height="15" fill="rgb(217,87,19)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.6186%" y="517" width="0.0801%" height="15" fill="rgb(239,9,32)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.6186%" y="501" width="0.0801%" height="15" fill="rgb(229,101,29)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.6186%" y="485" width="0.0801%" height="15" fill="rgb(208,143,26)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="495.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="86.6186%" y="581" width="0.1603%" height="15" fill="rgb(214,10,2)" fg:x="1081" fg:w="2"/><text x="86.8686%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="86.6186%" y="565" width="0.1603%" height="15" fill="rgb(254,203,30)" fg:x="1081" fg:w="2"/><text x="86.8686%" y="575.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="86.6987%" y="549" width="0.0801%" height="15" fill="rgb(242,45,3)" fg:x="1082" fg:w="1"/><text x="86.9487%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="86.6987%" y="533" width="0.0801%" height="15" fill="rgb(209,146,51)" fg:x="1082" fg:w="1"/><text x="86.9487%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.6987%" y="517" width="0.0801%" height="15" fill="rgb(222,80,5)" fg:x="1082" fg:w="1"/><text x="86.9487%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.6987%" y="501" width="0.0801%" height="15" fill="rgb(252,80,35)" fg:x="1082" fg:w="1"/><text x="86.9487%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.6987%" y="485" width="0.0801%" height="15" fill="rgb(246,125,28)" fg:x="1082" fg:w="1"/><text x="86.9487%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.6987%" y="469" width="0.0801%" height="15" fill="rgb(224,143,51)" fg:x="1082" fg:w="1"/><text x="86.9487%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.6987%" y="453" width="0.0801%" height="15" fill="rgb(205,24,17)" fg:x="1082" fg:w="1"/><text x="86.9487%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.6987%" y="437" width="0.0801%" height="15" fill="rgb(253,128,30)" fg:x="1082" fg:w="1"/><text x="86.9487%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.6987%" y="421" width="0.0801%" height="15" fill="rgb(214,153,25)" fg:x="1082" fg:w="1"/><text x="86.9487%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.6987%" y="405" width="0.0801%" height="15" fill="rgb(214,4,28)" fg:x="1082" fg:w="1"/><text x="86.9487%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.6987%" y="389" width="0.0801%" height="15" fill="rgb(235,179,52)" fg:x="1082" fg:w="1"/><text x="86.9487%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.6987%" y="373" width="0.0801%" height="15" fill="rgb(233,27,42)" fg:x="1082" fg:w="1"/><text x="86.9487%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.6987%" y="357" width="0.0801%" height="15" fill="rgb(238,35,25)" fg:x="1082" fg:w="1"/><text x="86.9487%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.6987%" y="341" width="0.0801%" height="15" fill="rgb(227,44,31)" fg:x="1082" fg:w="1"/><text x="86.9487%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.6987%" y="325" width="0.0801%" height="15" fill="rgb(232,201,13)" fg:x="1082" fg:w="1"/><text x="86.9487%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.6987%" y="309" width="0.0801%" height="15" fill="rgb(224,172,52)" fg:x="1082" fg:w="1"/><text x="86.9487%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="86.3782%" y="613" width="0.4808%" height="15" fill="rgb(214,27,26)" fg:x="1078" fg:w="6"/><text x="86.6282%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="86.6186%" y="597" width="0.2404%" height="15" fill="rgb(210,185,52)" fg:x="1081" fg:w="3"/><text x="86.8686%" y="607.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="86.7788%" y="581" width="0.0801%" height="15" fill="rgb(249,59,32)" fg:x="1083" fg:w="1"/><text x="87.0288%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.7788%" y="565" width="0.0801%" height="15" fill="rgb(242,209,18)" fg:x="1083" fg:w="1"/><text x="87.0288%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.7788%" y="549" width="0.0801%" height="15" fill="rgb(229,0,18)" fg:x="1083" fg:w="1"/><text x="87.0288%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.7788%" y="533" width="0.0801%" height="15" fill="rgb(217,138,29)" fg:x="1083" fg:w="1"/><text x="87.0288%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.7788%" y="517" width="0.0801%" height="15" fill="rgb(215,72,42)" fg:x="1083" fg:w="1"/><text x="87.0288%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.7788%" y="501" width="0.0801%" height="15" fill="rgb(254,115,11)" fg:x="1083" fg:w="1"/><text x="87.0288%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.7788%" y="485" width="0.0801%" height="15" fill="rgb(205,133,39)" fg:x="1083" fg:w="1"/><text x="87.0288%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.7788%" y="469" width="0.0801%" height="15" fill="rgb(211,36,27)" fg:x="1083" fg:w="1"/><text x="87.0288%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.7788%" y="453" width="0.0801%" height="15" fill="rgb(221,48,10)" fg:x="1083" fg:w="1"/><text x="87.0288%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.7788%" y="437" width="0.0801%" height="15" fill="rgb(230,172,50)" fg:x="1083" fg:w="1"/><text x="87.0288%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.7788%" y="421" width="0.0801%" height="15" fill="rgb(249,72,18)" fg:x="1083" fg:w="1"/><text x="87.0288%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.7788%" y="405" width="0.0801%" height="15" fill="rgb(237,58,48)" fg:x="1083" fg:w="1"/><text x="87.0288%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.7788%" y="389" width="0.0801%" height="15" fill="rgb(242,123,3)" fg:x="1083" fg:w="1"/><text x="87.0288%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.8590%" y="517" width="0.0801%" height="15" fill="rgb(232,111,32)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.8590%" y="501" width="0.0801%" height="15" fill="rgb(229,108,3)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.8590%" y="485" width="0.0801%" height="15" fill="rgb(222,158,10)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.8590%" y="469" width="0.0801%" height="15" fill="rgb(205,34,49)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.8590%" y="453" width="0.0801%" height="15" fill="rgb(232,21,14)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.8590%" y="437" width="0.0801%" height="15" fill="rgb(229,127,44)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.8590%" y="421" width="0.0801%" height="15" fill="rgb(232,171,4)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.8590%" y="405" width="0.0801%" height="15" fill="rgb(250,92,16)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.8590%" y="389" width="0.0801%" height="15" fill="rgb(230,103,38)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.8590%" y="373" width="0.0801%" height="15" fill="rgb(253,167,9)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.8590%" y="357" width="0.0801%" height="15" fill="rgb(222,118,11)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.8590%" y="341" width="0.0801%" height="15" fill="rgb(240,202,0)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.8590%" y="325" width="0.0801%" height="15" fill="rgb(236,124,4)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.8590%" y="309" width="0.0801%" height="15" fill="rgb(244,128,18)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.8590%" y="293" width="0.0801%" height="15" fill="rgb(231,206,5)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.8590%" y="277" width="0.0801%" height="15" fill="rgb(237,111,8)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="86.8590%" y="565" width="0.2404%" height="15" fill="rgb(225,127,3)" fg:x="1084" fg:w="3"/><text x="87.1090%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="86.8590%" y="549" width="0.2404%" height="15" fill="rgb(222,85,48)" fg:x="1084" fg:w="3"/><text x="87.1090%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="86.8590%" y="533" width="0.2404%" height="15" fill="rgb(221,108,37)" fg:x="1084" fg:w="3"/><text x="87.1090%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="86.9391%" y="517" width="0.1603%" height="15" fill="rgb(226,169,36)" fg:x="1085" fg:w="2"/><text x="87.1891%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.9391%" y="501" width="0.1603%" height="15" fill="rgb(237,76,12)" fg:x="1085" fg:w="2"/><text x="87.1891%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="86.9391%" y="485" width="0.1603%" height="15" fill="rgb(210,227,32)" fg:x="1085" fg:w="2"/><text x="87.1891%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.9391%" y="469" width="0.1603%" height="15" fill="rgb(214,117,20)" fg:x="1085" fg:w="2"/><text x="87.1891%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="86.9391%" y="453" width="0.1603%" height="15" fill="rgb(234,119,41)" fg:x="1085" fg:w="2"/><text x="87.1891%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.0192%" y="437" width="0.0801%" height="15" fill="rgb(230,130,47)" fg:x="1086" fg:w="1"/><text x="87.2692%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.0192%" y="421" width="0.0801%" height="15" fill="rgb(215,21,41)" fg:x="1086" fg:w="1"/><text x="87.2692%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.0192%" y="405" width="0.0801%" height="15" fill="rgb(226,26,53)" fg:x="1086" fg:w="1"/><text x="87.2692%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="87.0192%" y="389" width="0.0801%" height="15" fill="rgb(221,92,23)" fg:x="1086" fg:w="1"/><text x="87.2692%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="86.8590%" y="597" width="0.3205%" height="15" fill="rgb(213,156,21)" fg:x="1084" fg:w="4"/><text x="87.1090%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="86.8590%" y="581" width="0.3205%" height="15" fill="rgb(254,166,29)" fg:x="1084" fg:w="4"/><text x="87.1090%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="87.0994%" y="565" width="0.0801%" height="15" fill="rgb(213,71,1)" fg:x="1087" fg:w="1"/><text x="87.3494%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.0994%" y="549" width="0.0801%" height="15" fill="rgb(245,8,13)" fg:x="1087" fg:w="1"/><text x="87.3494%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.0994%" y="533" width="0.0801%" height="15" fill="rgb(213,32,32)" fg:x="1087" fg:w="1"/><text x="87.3494%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.0994%" y="517" width="0.0801%" height="15" fill="rgb(251,86,50)" fg:x="1087" fg:w="1"/><text x="87.3494%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.0994%" y="501" width="0.0801%" height="15" fill="rgb(252,92,41)" fg:x="1087" fg:w="1"/><text x="87.3494%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.0994%" y="485" width="0.0801%" height="15" fill="rgb(234,70,35)" fg:x="1087" fg:w="1"/><text x="87.3494%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="87.1795%" y="597" width="0.0801%" height="15" fill="rgb(210,157,19)" fg:x="1088" fg:w="1"/><text x="87.4295%" y="607.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="87.1795%" y="581" width="0.0801%" height="15" fill="rgb(206,20,45)" fg:x="1088" fg:w="1"/><text x="87.4295%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.1795%" y="565" width="0.0801%" height="15" fill="rgb(207,34,7)" fg:x="1088" fg:w="1"/><text x="87.4295%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="87.1795%" y="549" width="0.0801%" height="15" fill="rgb(253,151,14)" fg:x="1088" fg:w="1"/><text x="87.4295%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="87.1795%" y="533" width="0.0801%" height="15" fill="rgb(252,1,18)" fg:x="1088" fg:w="1"/><text x="87.4295%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.1795%" y="517" width="0.0801%" height="15" fill="rgb(214,77,52)" fg:x="1088" fg:w="1"/><text x="87.4295%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.1795%" y="501" width="0.0801%" height="15" fill="rgb(254,106,35)" fg:x="1088" fg:w="1"/><text x="87.4295%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.1795%" y="485" width="0.0801%" height="15" fill="rgb(212,67,40)" fg:x="1088" fg:w="1"/><text x="87.4295%" y="495.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="87.2596%" y="533" width="0.0801%" height="15" fill="rgb(228,76,23)" fg:x="1089" fg:w="1"/><text x="87.5096%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.3397%" y="485" width="0.0801%" height="15" fill="rgb(250,198,5)" fg:x="1090" fg:w="1"/><text x="87.5897%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.3397%" y="469" width="0.0801%" height="15" fill="rgb(209,20,25)" fg:x="1090" fg:w="1"/><text x="87.5897%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.3397%" y="453" width="0.0801%" height="15" fill="rgb(236,32,4)" fg:x="1090" fg:w="1"/><text x="87.5897%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="87.3397%" y="501" width="0.1603%" height="15" fill="rgb(215,31,6)" fg:x="1090" fg:w="2"/><text x="87.5897%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.4199%" y="485" width="0.0801%" height="15" fill="rgb(207,186,49)" fg:x="1091" fg:w="1"/><text x="87.6699%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.5000%" y="469" width="0.0801%" height="15" fill="rgb(211,212,49)" fg:x="1092" fg:w="1"/><text x="87.7500%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="87.2596%" y="549" width="0.4006%" height="15" fill="rgb(229,51,41)" fg:x="1089" fg:w="5"/><text x="87.5096%" y="559.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="87.3397%" y="533" width="0.3205%" height="15" fill="rgb(205,225,36)" fg:x="1090" fg:w="4"/><text x="87.5897%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="87.3397%" y="517" width="0.3205%" height="15" fill="rgb(209,213,45)" fg:x="1090" fg:w="4"/><text x="87.5897%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="87.5000%" y="501" width="0.1603%" height="15" fill="rgb(219,35,49)" fg:x="1092" fg:w="2"/><text x="87.7500%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="87.5000%" y="485" width="0.1603%" height="15" fill="rgb(215,205,22)" fg:x="1092" fg:w="2"/><text x="87.7500%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.5801%" y="469" width="0.0801%" height="15" fill="rgb(248,204,34)" fg:x="1093" fg:w="1"/><text x="87.8301%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.5801%" y="453" width="0.0801%" height="15" fill="rgb(219,223,31)" fg:x="1093" fg:w="1"/><text x="87.8301%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.5801%" y="437" width="0.0801%" height="15" fill="rgb(236,14,8)" fg:x="1093" fg:w="1"/><text x="87.8301%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.5801%" y="421" width="0.0801%" height="15" fill="rgb(243,129,23)" fg:x="1093" fg:w="1"/><text x="87.8301%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.5801%" y="405" width="0.0801%" height="15" fill="rgb(205,204,5)" fg:x="1093" fg:w="1"/><text x="87.8301%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="87.5801%" y="389" width="0.0801%" height="15" fill="rgb(244,115,32)" fg:x="1093" fg:w="1"/><text x="87.8301%" y="399.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.48%)</title><rect x="87.2596%" y="597" width="0.4808%" height="15" fill="rgb(229,123,14)" fg:x="1089" fg:w="6"/><text x="87.5096%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="87.2596%" y="581" width="0.4808%" height="15" fill="rgb(250,85,1)" fg:x="1089" fg:w="6"/><text x="87.5096%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="87.2596%" y="565" width="0.4808%" height="15" fill="rgb(209,141,54)" fg:x="1089" fg:w="6"/><text x="87.5096%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="87.6603%" y="549" width="0.0801%" height="15" fill="rgb(244,107,39)" fg:x="1094" fg:w="1"/><text x="87.9103%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.6603%" y="533" width="0.0801%" height="15" fill="rgb(230,68,26)" fg:x="1094" fg:w="1"/><text x="87.9103%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.6603%" y="517" width="0.0801%" height="15" fill="rgb(220,178,33)" fg:x="1094" fg:w="1"/><text x="87.9103%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.6603%" y="501" width="0.0801%" height="15" fill="rgb(220,77,53)" fg:x="1094" fg:w="1"/><text x="87.9103%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.6603%" y="485" width="0.0801%" height="15" fill="rgb(224,108,19)" fg:x="1094" fg:w="1"/><text x="87.9103%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.6603%" y="469" width="0.0801%" height="15" fill="rgb(223,203,27)" fg:x="1094" fg:w="1"/><text x="87.9103%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.6603%" y="453" width="0.0801%" height="15" fill="rgb(211,32,46)" fg:x="1094" fg:w="1"/><text x="87.9103%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.6603%" y="437" width="0.0801%" height="15" fill="rgb(240,101,27)" fg:x="1094" fg:w="1"/><text x="87.9103%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.6603%" y="421" width="0.0801%" height="15" fill="rgb(217,210,11)" fg:x="1094" fg:w="1"/><text x="87.9103%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.6603%" y="405" width="0.0801%" height="15" fill="rgb(236,130,21)" fg:x="1094" fg:w="1"/><text x="87.9103%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.6603%" y="389" width="0.0801%" height="15" fill="rgb(250,136,8)" fg:x="1094" fg:w="1"/><text x="87.9103%" y="399.50"></text></g><g><title>plugins_core::build::Build::holding (18 samples, 1.44%)</title><rect x="86.3782%" y="629" width="1.4423%" height="15" fill="rgb(243,223,36)" fg:x="1078" fg:w="18"/><text x="86.6282%" y="639.50"></text></g><g><title>plugins_core::tools::set_container (12 samples, 0.96%)</title><rect x="86.8590%" y="613" width="0.9615%" height="15" fill="rgb(246,184,8)" fg:x="1084" fg:w="12"/><text x="87.1090%" y="623.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="87.7404%" y="597" width="0.0801%" height="15" fill="rgb(222,158,36)" fg:x="1095" fg:w="1"/><text x="87.9904%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="87.7404%" y="581" width="0.0801%" height="15" fill="rgb(210,220,19)" fg:x="1095" fg:w="1"/><text x="87.9904%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="87.7404%" y="565" width="0.0801%" height="15" fill="rgb(246,44,38)" fg:x="1095" fg:w="1"/><text x="87.9904%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.7404%" y="549" width="0.0801%" height="15" fill="rgb(246,186,14)" fg:x="1095" fg:w="1"/><text x="87.9904%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="87.8205%" y="597" width="0.0801%" height="15" fill="rgb(233,193,20)" fg:x="1096" fg:w="1"/><text x="88.0705%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="87.8205%" y="581" width="0.0801%" height="15" fill="rgb(215,60,5)" fg:x="1096" fg:w="1"/><text x="88.0705%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="87.8205%" y="629" width="0.1603%" height="15" fill="rgb(207,128,10)" fg:x="1096" fg:w="2"/><text x="88.0705%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="87.8205%" y="613" width="0.1603%" height="15" fill="rgb(238,84,54)" fg:x="1096" fg:w="2"/><text x="88.0705%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.9006%" y="597" width="0.0801%" height="15" fill="rgb(213,130,11)" fg:x="1097" fg:w="1"/><text x="88.1506%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.9006%" y="581" width="0.0801%" height="15" fill="rgb(235,62,9)" fg:x="1097" fg:w="1"/><text x="88.1506%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.9006%" y="565" width="0.0801%" height="15" fill="rgb(222,64,24)" fg:x="1097" fg:w="1"/><text x="88.1506%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.9006%" y="549" width="0.0801%" height="15" fill="rgb(238,193,42)" fg:x="1097" fg:w="1"/><text x="88.1506%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.9006%" y="533" width="0.0801%" height="15" fill="rgb(243,204,46)" fg:x="1097" fg:w="1"/><text x="88.1506%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.9006%" y="517" width="0.0801%" height="15" fill="rgb(243,196,11)" fg:x="1097" fg:w="1"/><text x="88.1506%" y="527.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="87.9808%" y="597" width="0.0801%" height="15" fill="rgb(232,77,22)" fg:x="1098" fg:w="1"/><text x="88.2308%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.9808%" y="581" width="0.0801%" height="15" fill="rgb(215,80,25)" fg:x="1098" fg:w="1"/><text x="88.2308%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.9808%" y="565" width="0.0801%" height="15" fill="rgb(210,173,7)" fg:x="1098" fg:w="1"/><text x="88.2308%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="88.0609%" y="597" width="0.0801%" height="15" fill="rgb(207,101,10)" fg:x="1099" fg:w="1"/><text x="88.3109%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.0609%" y="581" width="0.0801%" height="15" fill="rgb(246,57,48)" fg:x="1099" fg:w="1"/><text x="88.3109%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.0609%" y="565" width="0.0801%" height="15" fill="rgb(236,184,40)" fg:x="1099" fg:w="1"/><text x="88.3109%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.0609%" y="549" width="0.0801%" height="15" fill="rgb(210,205,13)" fg:x="1099" fg:w="1"/><text x="88.3109%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.0609%" y="533" width="0.0801%" height="15" fill="rgb(231,129,42)" fg:x="1099" fg:w="1"/><text x="88.3109%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.0609%" y="517" width="0.0801%" height="15" fill="rgb(220,229,54)" fg:x="1099" fg:w="1"/><text x="88.3109%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="88.0609%" y="501" width="0.0801%" height="15" fill="rgb(230,192,26)" fg:x="1099" fg:w="1"/><text x="88.3109%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.0609%" y="485" width="0.0801%" height="15" fill="rgb(253,18,30)" fg:x="1099" fg:w="1"/><text x="88.3109%" y="495.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="87.9808%" y="629" width="0.2404%" height="15" fill="rgb(216,62,53)" fg:x="1098" fg:w="3"/><text x="88.2308%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="87.9808%" y="613" width="0.2404%" height="15" fill="rgb(230,79,29)" fg:x="1098" fg:w="3"/><text x="88.2308%" y="623.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="88.1410%" y="597" width="0.0801%" height="15" fill="rgb(242,26,26)" fg:x="1100" fg:w="1"/><text x="88.3910%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="88.1410%" y="581" width="0.0801%" height="15" fill="rgb(227,125,21)" fg:x="1100" fg:w="1"/><text x="88.3910%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="88.2212%" y="597" width="0.0801%" height="15" fill="rgb(229,93,26)" fg:x="1101" fg:w="1"/><text x="88.4712%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="88.2212%" y="581" width="0.0801%" height="15" fill="rgb(227,228,8)" fg:x="1101" fg:w="1"/><text x="88.4712%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="88.2212%" y="565" width="0.0801%" height="15" fill="rgb(233,56,0)" fg:x="1101" fg:w="1"/><text x="88.4712%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="88.2212%" y="549" width="0.0801%" height="15" fill="rgb(225,185,17)" fg:x="1101" fg:w="1"/><text x="88.4712%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.2212%" y="533" width="0.0801%" height="15" fill="rgb(238,202,30)" fg:x="1101" fg:w="1"/><text x="88.4712%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.2212%" y="517" width="0.0801%" height="15" fill="rgb(236,60,13)" fg:x="1101" fg:w="1"/><text x="88.4712%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="88.2212%" y="501" width="0.0801%" height="15" fill="rgb(244,92,0)" fg:x="1101" fg:w="1"/><text x="88.4712%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="88.2212%" y="485" width="0.0801%" height="15" fill="rgb(225,57,15)" fg:x="1101" fg:w="1"/><text x="88.4712%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.2212%" y="469" width="0.0801%" height="15" fill="rgb(228,5,28)" fg:x="1101" fg:w="1"/><text x="88.4712%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.2212%" y="453" width="0.0801%" height="15" fill="rgb(252,34,51)" fg:x="1101" fg:w="1"/><text x="88.4712%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="88.2212%" y="437" width="0.0801%" height="15" fill="rgb(235,58,7)" fg:x="1101" fg:w="1"/><text x="88.4712%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="88.2212%" y="421" width="0.0801%" height="15" fill="rgb(250,132,20)" fg:x="1101" fg:w="1"/><text x="88.4712%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.2212%" y="405" width="0.0801%" height="15" fill="rgb(217,164,0)" fg:x="1101" fg:w="1"/><text x="88.4712%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.2212%" y="389" width="0.0801%" height="15" fill="rgb(208,220,35)" fg:x="1101" fg:w="1"/><text x="88.4712%" y="399.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="88.2212%" y="373" width="0.0801%" height="15" fill="rgb(227,42,51)" fg:x="1101" fg:w="1"/><text x="88.4712%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.3013%" y="549" width="0.0801%" height="15" fill="rgb(225,146,38)" fg:x="1102" fg:w="1"/><text x="88.5513%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="88.3013%" y="597" width="0.1603%" height="15" fill="rgb(252,108,37)" fg:x="1102" fg:w="2"/><text x="88.5513%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="88.3013%" y="581" width="0.1603%" height="15" fill="rgb(244,101,24)" fg:x="1102" fg:w="2"/><text x="88.5513%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="88.3013%" y="565" width="0.1603%" height="15" fill="rgb(213,161,50)" fg:x="1102" fg:w="2"/><text x="88.5513%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.3814%" y="549" width="0.0801%" height="15" fill="rgb(248,159,19)" fg:x="1103" fg:w="1"/><text x="88.6314%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.3814%" y="533" width="0.0801%" height="15" fill="rgb(233,179,15)" fg:x="1103" fg:w="1"/><text x="88.6314%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.3814%" y="517" width="0.0801%" height="15" fill="rgb(248,178,3)" fg:x="1103" fg:w="1"/><text x="88.6314%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.3814%" y="501" width="0.0801%" height="15" fill="rgb(245,190,41)" fg:x="1103" fg:w="1"/><text x="88.6314%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.3814%" y="485" width="0.0801%" height="15" fill="rgb(218,151,19)" fg:x="1103" fg:w="1"/><text x="88.6314%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.3814%" y="469" width="0.0801%" height="15" fill="rgb(245,25,44)" fg:x="1103" fg:w="1"/><text x="88.6314%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.3814%" y="453" width="0.0801%" height="15" fill="rgb(235,172,47)" fg:x="1103" fg:w="1"/><text x="88.6314%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.3814%" y="437" width="0.0801%" height="15" fill="rgb(246,33,12)" fg:x="1103" fg:w="1"/><text x="88.6314%" y="447.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.4615%" y="549" width="0.0801%" height="15" fill="rgb(214,124,7)" fg:x="1104" fg:w="1"/><text x="88.7115%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.4615%" y="533" width="0.0801%" height="15" fill="rgb(246,186,18)" fg:x="1104" fg:w="1"/><text x="88.7115%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.5417%" y="517" width="0.0801%" height="15" fill="rgb(231,94,1)" fg:x="1105" fg:w="1"/><text x="88.7917%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="88.2212%" y="613" width="0.4808%" height="15" fill="rgb(208,33,48)" fg:x="1101" fg:w="6"/><text x="88.4712%" y="623.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="88.4615%" y="597" width="0.2404%" height="15" fill="rgb(208,195,44)" fg:x="1104" fg:w="3"/><text x="88.7115%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="88.4615%" y="581" width="0.2404%" height="15" fill="rgb(226,13,52)" fg:x="1104" fg:w="3"/><text x="88.7115%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="88.4615%" y="565" width="0.2404%" height="15" fill="rgb(217,219,45)" fg:x="1104" fg:w="3"/><text x="88.7115%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="88.5417%" y="549" width="0.1603%" height="15" fill="rgb(223,45,25)" fg:x="1105" fg:w="2"/><text x="88.7917%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="88.5417%" y="533" width="0.1603%" height="15" fill="rgb(241,163,0)" fg:x="1105" fg:w="2"/><text x="88.7917%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.6218%" y="517" width="0.0801%" height="15" fill="rgb(216,68,47)" fg:x="1106" fg:w="1"/><text x="88.8718%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.6218%" y="501" width="0.0801%" height="15" fill="rgb(236,119,45)" fg:x="1106" fg:w="1"/><text x="88.8718%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.6218%" y="485" width="0.0801%" height="15" fill="rgb(209,188,24)" fg:x="1106" fg:w="1"/><text x="88.8718%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="88.7019%" y="597" width="0.0801%" height="15" fill="rgb(221,118,7)" fg:x="1107" fg:w="1"/><text x="88.9519%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Occupying&gt;&gt; (1 samples, 0.08%)</title><rect x="88.7821%" y="597" width="0.0801%" height="15" fill="rgb(213,148,43)" fg:x="1108" fg:w="1"/><text x="89.0321%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="88.7821%" y="581" width="0.0801%" height="15" fill="rgb(231,21,43)" fg:x="1108" fg:w="1"/><text x="89.0321%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.7821%" y="565" width="0.0801%" height="15" fill="rgb(232,213,43)" fg:x="1108" fg:w="1"/><text x="89.0321%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="88.8622%" y="565" width="0.0801%" height="15" fill="rgb(239,145,50)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="88.8622%" y="549" width="0.0801%" height="15" fill="rgb(222,131,18)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.8622%" y="533" width="0.0801%" height="15" fill="rgb(243,181,13)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="88.8622%" y="517" width="0.0801%" height="15" fill="rgb(212,74,41)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="88.8622%" y="501" width="0.0801%" height="15" fill="rgb(237,143,34)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="88.8622%" y="597" width="0.1603%" height="15" fill="rgb(228,139,0)" fg:x="1109" fg:w="2"/><text x="89.1122%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="88.8622%" y="581" width="0.1603%" height="15" fill="rgb(227,214,11)" fg:x="1109" fg:w="2"/><text x="89.1122%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="88.9423%" y="565" width="0.0801%" height="15" fill="rgb(228,118,39)" fg:x="1110" fg:w="1"/><text x="89.1923%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="88.9423%" y="549" width="0.0801%" height="15" fill="rgb(207,117,22)" fg:x="1110" fg:w="1"/><text x="89.1923%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.9423%" y="533" width="0.0801%" height="15" fill="rgb(225,91,8)" fg:x="1110" fg:w="1"/><text x="89.1923%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.9423%" y="517" width="0.0801%" height="15" fill="rgb(230,219,48)" fg:x="1110" fg:w="1"/><text x="89.1923%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.9423%" y="501" width="0.0801%" height="15" fill="rgb(244,0,23)" fg:x="1110" fg:w="1"/><text x="89.1923%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.9423%" y="485" width="0.0801%" height="15" fill="rgb(206,212,23)" fg:x="1110" fg:w="1"/><text x="89.1923%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.9423%" y="469" width="0.0801%" height="15" fill="rgb(254,62,10)" fg:x="1110" fg:w="1"/><text x="89.1923%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.9423%" y="453" width="0.0801%" height="15" fill="rgb(236,58,8)" fg:x="1110" fg:w="1"/><text x="89.1923%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.9423%" y="437" width="0.0801%" height="15" fill="rgb(232,212,17)" fg:x="1110" fg:w="1"/><text x="89.1923%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.9423%" y="421" width="0.0801%" height="15" fill="rgb(206,132,9)" fg:x="1110" fg:w="1"/><text x="89.1923%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.9423%" y="405" width="0.0801%" height="15" fill="rgb(234,97,28)" fg:x="1110" fg:w="1"/><text x="89.1923%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="89.0224%" y="597" width="0.0801%" height="15" fill="rgb(254,144,9)" fg:x="1111" fg:w="1"/><text x="89.2724%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="89.0224%" y="581" width="0.0801%" height="15" fill="rgb(244,204,43)" fg:x="1111" fg:w="1"/><text x="89.2724%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="89.0224%" y="565" width="0.0801%" height="15" fill="rgb(248,177,16)" fg:x="1111" fg:w="1"/><text x="89.2724%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="89.1026%" y="549" width="0.0801%" height="15" fill="rgb(219,110,15)" fg:x="1112" fg:w="1"/><text x="89.3526%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="89.1026%" y="533" width="0.0801%" height="15" fill="rgb(212,203,25)" fg:x="1112" fg:w="1"/><text x="89.3526%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="89.1026%" y="517" width="0.0801%" height="15" fill="rgb(205,50,1)" fg:x="1112" fg:w="1"/><text x="89.3526%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.1026%" y="501" width="0.0801%" height="15" fill="rgb(222,152,41)" fg:x="1112" fg:w="1"/><text x="89.3526%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="89.1026%" y="485" width="0.0801%" height="15" fill="rgb(236,83,3)" fg:x="1112" fg:w="1"/><text x="89.3526%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.1026%" y="469" width="0.0801%" height="15" fill="rgb(214,30,54)" fg:x="1112" fg:w="1"/><text x="89.3526%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.1026%" y="453" width="0.0801%" height="15" fill="rgb(250,117,31)" fg:x="1112" fg:w="1"/><text x="89.3526%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.1026%" y="437" width="0.0801%" height="15" fill="rgb(228,77,14)" fg:x="1112" fg:w="1"/><text x="89.3526%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.1026%" y="421" width="0.0801%" height="15" fill="rgb(241,3,28)" fg:x="1112" fg:w="1"/><text x="89.3526%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.1026%" y="405" width="0.0801%" height="15" fill="rgb(221,175,52)" fg:x="1112" fg:w="1"/><text x="89.3526%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.1827%" y="501" width="0.0801%" height="15" fill="rgb(237,91,6)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="511.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (108 samples, 8.65%)</title><rect x="80.6891%" y="645" width="8.6538%" height="15" fill="rgb(246,46,42)" fg:x="1007" fg:w="108"/><text x="80.9391%" y="655.50">plugins_core..</text></g><g><title>plugins_core::build::Build::occupying (14 samples, 1.12%)</title><rect x="88.2212%" y="629" width="1.1218%" height="15" fill="rgb(235,199,0)" fg:x="1101" fg:w="14"/><text x="88.4712%" y="639.50"></text></g><g><title>plugins_core::tools::set_occupying (8 samples, 0.64%)</title><rect x="88.7019%" y="613" width="0.6410%" height="15" fill="rgb(224,44,40)" fg:x="1107" fg:w="8"/><text x="88.9519%" y="623.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (3 samples, 0.24%)</title><rect x="89.1026%" y="597" width="0.2404%" height="15" fill="rgb(209,24,35)" fg:x="1112" fg:w="3"/><text x="89.3526%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="89.1026%" y="581" width="0.2404%" height="15" fill="rgb(244,46,22)" fg:x="1112" fg:w="3"/><text x="89.3526%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="89.1026%" y="565" width="0.2404%" height="15" fill="rgb(235,99,8)" fg:x="1112" fg:w="3"/><text x="89.3526%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="89.1827%" y="549" width="0.1603%" height="15" fill="rgb(218,127,36)" fg:x="1113" fg:w="2"/><text x="89.4327%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="89.1827%" y="533" width="0.1603%" height="15" fill="rgb(238,47,46)" fg:x="1113" fg:w="2"/><text x="89.4327%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="89.1827%" y="517" width="0.1603%" height="15" fill="rgb(233,65,17)" fg:x="1113" fg:w="2"/><text x="89.4327%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.2628%" y="501" width="0.0801%" height="15" fill="rgb(239,22,33)" fg:x="1114" fg:w="1"/><text x="89.5128%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.2628%" y="485" width="0.0801%" height="15" fill="rgb(243,66,43)" fg:x="1114" fg:w="1"/><text x="89.5128%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.2628%" y="469" width="0.0801%" height="15" fill="rgb(235,210,28)" fg:x="1114" fg:w="1"/><text x="89.5128%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.2628%" y="453" width="0.0801%" height="15" fill="rgb(205,191,50)" fg:x="1114" fg:w="1"/><text x="89.5128%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="89.2628%" y="437" width="0.0801%" height="15" fill="rgb(251,217,19)" fg:x="1114" fg:w="1"/><text x="89.5128%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.2628%" y="421" width="0.0801%" height="15" fill="rgb(205,174,37)" fg:x="1114" fg:w="1"/><text x="89.5128%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.2628%" y="405" width="0.0801%" height="15" fill="rgb(212,158,42)" fg:x="1114" fg:w="1"/><text x="89.5128%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.2628%" y="389" width="0.0801%" height="15" fill="rgb(212,208,51)" fg:x="1114" fg:w="1"/><text x="89.5128%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.2628%" y="373" width="0.0801%" height="15" fill="rgb(225,198,20)" fg:x="1114" fg:w="1"/><text x="89.5128%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.2628%" y="357" width="0.0801%" height="15" fill="rgb(247,41,44)" fg:x="1114" fg:w="1"/><text x="89.5128%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="89.2628%" y="341" width="0.0801%" height="15" fill="rgb(228,33,41)" fg:x="1114" fg:w="1"/><text x="89.5128%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.2628%" y="325" width="0.0801%" height="15" fill="rgb(215,47,52)" fg:x="1114" fg:w="1"/><text x="89.5128%" y="335.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="89.3429%" y="645" width="0.0801%" height="15" fill="rgb(248,106,37)" fg:x="1115" fg:w="1"/><text x="89.5929%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="89.3429%" y="629" width="0.0801%" height="15" fill="rgb(238,91,29)" fg:x="1115" fg:w="1"/><text x="89.5929%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="89.3429%" y="613" width="0.0801%" height="15" fill="rgb(226,111,40)" fg:x="1115" fg:w="1"/><text x="89.5929%" y="623.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="89.3429%" y="597" width="0.0801%" height="15" fill="rgb(229,159,36)" fg:x="1115" fg:w="1"/><text x="89.5929%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="89.3429%" y="581" width="0.0801%" height="15" fill="rgb(221,109,4)" fg:x="1115" fg:w="1"/><text x="89.5929%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.3429%" y="565" width="0.0801%" height="15" fill="rgb(236,56,25)" fg:x="1115" fg:w="1"/><text x="89.5929%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="89.5032%" y="597" width="0.0801%" height="15" fill="rgb(244,113,23)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="89.5032%" y="581" width="0.0801%" height="15" fill="rgb(249,132,2)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="89.5032%" y="565" width="0.0801%" height="15" fill="rgb(205,185,21)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="89.5032%" y="549" width="0.0801%" height="15" fill="rgb(245,130,2)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="89.5032%" y="533" width="0.0801%" height="15" fill="rgb(246,71,26)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="89.5032%" y="517" width="0.0801%" height="15" fill="rgb(234,194,6)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="89.5032%" y="501" width="0.0801%" height="15" fill="rgb(206,24,32)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="89.5032%" y="485" width="0.0801%" height="15" fill="rgb(233,7,54)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="89.5032%" y="469" width="0.0801%" height="15" fill="rgb(252,46,1)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="89.5032%" y="453" width="0.0801%" height="15" fill="rgb(216,113,53)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="89.5032%" y="437" width="0.0801%" height="15" fill="rgb(215,40,24)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="89.5032%" y="421" width="0.0801%" height="15" fill="rgb(233,222,8)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="89.5032%" y="405" width="0.0801%" height="15" fill="rgb(248,73,28)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="89.5032%" y="389" width="0.0801%" height="15" fill="rgb(247,126,28)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.5032%" y="373" width="0.0801%" height="15" fill="rgb(242,173,54)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.5032%" y="357" width="0.0801%" height="15" fill="rgb(244,186,22)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="89.5032%" y="341" width="0.0801%" height="15" fill="rgb(231,187,4)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="89.5032%" y="325" width="0.0801%" height="15" fill="rgb(252,66,47)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="89.5032%" y="309" width="0.0801%" height="15" fill="rgb(240,228,28)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="89.5032%" y="293" width="0.0801%" height="15" fill="rgb(237,63,43)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="89.5032%" y="277" width="0.0801%" height="15" fill="rgb(214,1,44)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="287.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="89.5833%" y="597" width="0.0801%" height="15" fill="rgb(212,2,46)" fg:x="1118" fg:w="1"/><text x="89.8333%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="89.5833%" y="581" width="0.0801%" height="15" fill="rgb(213,142,5)" fg:x="1118" fg:w="1"/><text x="89.8333%" y="591.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="89.5833%" y="565" width="0.0801%" height="15" fill="rgb(229,135,1)" fg:x="1118" fg:w="1"/><text x="89.8333%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.5833%" y="549" width="0.0801%" height="15" fill="rgb(252,98,38)" fg:x="1118" fg:w="1"/><text x="89.8333%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="89.5833%" y="533" width="0.0801%" height="15" fill="rgb(206,89,40)" fg:x="1118" fg:w="1"/><text x="89.8333%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.5833%" y="517" width="0.0801%" height="15" fill="rgb(219,73,36)" fg:x="1118" fg:w="1"/><text x="89.8333%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="89.5833%" y="501" width="0.0801%" height="15" fill="rgb(207,168,32)" fg:x="1118" fg:w="1"/><text x="89.8333%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.6635%" y="485" width="0.0801%" height="15" fill="rgb(215,113,21)" fg:x="1119" fg:w="1"/><text x="89.9135%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="89.6635%" y="517" width="0.1603%" height="15" fill="rgb(217,144,43)" fg:x="1119" fg:w="2"/><text x="89.9135%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="89.6635%" y="501" width="0.1603%" height="15" fill="rgb(249,48,50)" fg:x="1119" fg:w="2"/><text x="89.9135%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.7436%" y="485" width="0.0801%" height="15" fill="rgb(242,1,26)" fg:x="1120" fg:w="1"/><text x="89.9936%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.7436%" y="469" width="0.0801%" height="15" fill="rgb(231,167,42)" fg:x="1120" fg:w="1"/><text x="89.9936%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.7436%" y="453" width="0.0801%" height="15" fill="rgb(242,177,45)" fg:x="1120" fg:w="1"/><text x="89.9936%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.7436%" y="437" width="0.0801%" height="15" fill="rgb(232,121,42)" fg:x="1120" fg:w="1"/><text x="89.9936%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (6 samples, 0.48%)</title><rect x="89.4231%" y="645" width="0.4808%" height="15" fill="rgb(205,8,42)" fg:x="1116" fg:w="6"/><text x="89.6731%" y="655.50"></text></g><g><title>plugins_core::build::QuickThing::make (6 samples, 0.48%)</title><rect x="89.4231%" y="629" width="0.4808%" height="15" fill="rgb(238,199,24)" fg:x="1116" fg:w="6"/><text x="89.6731%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="89.4231%" y="613" width="0.4808%" height="15" fill="rgb(228,112,2)" fg:x="1116" fg:w="6"/><text x="89.6731%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="89.6635%" y="597" width="0.2404%" height="15" fill="rgb(215,115,33)" fg:x="1119" fg:w="3"/><text x="89.9135%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="89.6635%" y="581" width="0.2404%" height="15" fill="rgb(230,209,34)" fg:x="1119" fg:w="3"/><text x="89.9135%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="89.6635%" y="565" width="0.2404%" height="15" fill="rgb(246,76,12)" fg:x="1119" fg:w="3"/><text x="89.9135%" y="575.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="89.6635%" y="549" width="0.2404%" height="15" fill="rgb(240,110,9)" fg:x="1119" fg:w="3"/><text x="89.9135%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="89.6635%" y="533" width="0.2404%" height="15" fill="rgb(224,94,46)" fg:x="1119" fg:w="3"/><text x="89.9135%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="89.8237%" y="517" width="0.0801%" height="15" fill="rgb(247,150,22)" fg:x="1121" fg:w="1"/><text x="90.0737%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.8237%" y="501" width="0.0801%" height="15" fill="rgb(249,85,13)" fg:x="1121" fg:w="1"/><text x="90.0737%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="89.8237%" y="485" width="0.0801%" height="15" fill="rgb(208,77,41)" fg:x="1121" fg:w="1"/><text x="90.0737%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.8237%" y="469" width="0.0801%" height="15" fill="rgb(240,42,44)" fg:x="1121" fg:w="1"/><text x="90.0737%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="89.8237%" y="453" width="0.0801%" height="15" fill="rgb(222,10,51)" fg:x="1121" fg:w="1"/><text x="90.0737%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="89.8237%" y="437" width="0.0801%" height="15" fill="rgb(208,146,53)" fg:x="1121" fg:w="1"/><text x="90.0737%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.8237%" y="421" width="0.0801%" height="15" fill="rgb(236,162,23)" fg:x="1121" fg:w="1"/><text x="90.0737%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.8237%" y="405" width="0.0801%" height="15" fill="rgb(218,66,21)" fg:x="1121" fg:w="1"/><text x="90.0737%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="89.9038%" y="613" width="0.0801%" height="15" fill="rgb(233,6,47)" fg:x="1122" fg:w="1"/><text x="90.1538%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="89.9038%" y="597" width="0.0801%" height="15" fill="rgb(236,59,51)" fg:x="1122" fg:w="1"/><text x="90.1538%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="89.9038%" y="581" width="0.0801%" height="15" fill="rgb(242,12,46)" fg:x="1122" fg:w="1"/><text x="90.1538%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.9038%" y="565" width="0.0801%" height="15" fill="rgb(243,142,19)" fg:x="1122" fg:w="1"/><text x="90.1538%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.9038%" y="549" width="0.0801%" height="15" fill="rgb(217,28,17)" fg:x="1122" fg:w="1"/><text x="90.1538%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.9038%" y="533" width="0.0801%" height="15" fill="rgb(228,2,27)" fg:x="1122" fg:w="1"/><text x="90.1538%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.9038%" y="517" width="0.0801%" height="15" fill="rgb(214,221,4)" fg:x="1122" fg:w="1"/><text x="90.1538%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.9038%" y="501" width="0.0801%" height="15" fill="rgb(224,69,26)" fg:x="1122" fg:w="1"/><text x="90.1538%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.9840%" y="597" width="0.0801%" height="15" fill="rgb(219,70,4)" fg:x="1123" fg:w="1"/><text x="90.2340%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.9840%" y="581" width="0.0801%" height="15" fill="rgb(218,157,39)" fg:x="1123" fg:w="1"/><text x="90.2340%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.9840%" y="565" width="0.0801%" height="15" fill="rgb(238,36,28)" fg:x="1123" fg:w="1"/><text x="90.2340%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.9840%" y="549" width="0.0801%" height="15" fill="rgb(232,29,0)" fg:x="1123" fg:w="1"/><text x="90.2340%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.9840%" y="533" width="0.0801%" height="15" fill="rgb(243,138,46)" fg:x="1123" fg:w="1"/><text x="90.2340%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.9840%" y="517" width="0.0801%" height="15" fill="rgb(232,186,41)" fg:x="1123" fg:w="1"/><text x="90.2340%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.9840%" y="501" width="0.0801%" height="15" fill="rgb(252,166,17)" fg:x="1123" fg:w="1"/><text x="90.2340%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.9840%" y="485" width="0.0801%" height="15" fill="rgb(228,179,12)" fg:x="1123" fg:w="1"/><text x="90.2340%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.9840%" y="469" width="0.0801%" height="15" fill="rgb(254,205,53)" fg:x="1123" fg:w="1"/><text x="90.2340%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.9840%" y="453" width="0.0801%" height="15" fill="rgb(224,163,47)" fg:x="1123" fg:w="1"/><text x="90.2340%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.9840%" y="437" width="0.0801%" height="15" fill="rgb(208,43,47)" fg:x="1123" fg:w="1"/><text x="90.2340%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.9840%" y="421" width="0.0801%" height="15" fill="rgb(224,198,38)" fg:x="1123" fg:w="1"/><text x="90.2340%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.9840%" y="405" width="0.0801%" height="15" fill="rgb(234,12,40)" fg:x="1123" fg:w="1"/><text x="90.2340%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="89.9038%" y="629" width="0.2404%" height="15" fill="rgb(237,212,39)" fg:x="1122" fg:w="3"/><text x="90.1538%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="89.9840%" y="613" width="0.1603%" height="15" fill="rgb(253,2,33)" fg:x="1123" fg:w="2"/><text x="90.2340%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="90.0641%" y="597" width="0.0801%" height="15" fill="rgb(251,29,16)" fg:x="1124" fg:w="1"/><text x="90.3141%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="90.0641%" y="581" width="0.0801%" height="15" fill="rgb(214,38,29)" fg:x="1124" fg:w="1"/><text x="90.3141%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="90.0641%" y="565" width="0.0801%" height="15" fill="rgb(226,226,29)" fg:x="1124" fg:w="1"/><text x="90.3141%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="90.0641%" y="549" width="0.0801%" height="15" fill="rgb(236,79,42)" fg:x="1124" fg:w="1"/><text x="90.3141%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.0641%" y="533" width="0.0801%" height="15" fill="rgb(222,12,36)" fg:x="1124" fg:w="1"/><text x="90.3141%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.0641%" y="517" width="0.0801%" height="15" fill="rgb(232,123,44)" fg:x="1124" fg:w="1"/><text x="90.3141%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.0641%" y="501" width="0.0801%" height="15" fill="rgb(234,93,50)" fg:x="1124" fg:w="1"/><text x="90.3141%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.0641%" y="485" width="0.0801%" height="15" fill="rgb(210,86,49)" fg:x="1124" fg:w="1"/><text x="90.3141%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.0641%" y="469" width="0.0801%" height="15" fill="rgb(224,91,54)" fg:x="1124" fg:w="1"/><text x="90.3141%" y="479.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="90.1442%" y="629" width="0.0801%" height="15" fill="rgb(239,169,9)" fg:x="1125" fg:w="1"/><text x="90.3942%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="90.1442%" y="613" width="0.0801%" height="15" fill="rgb(238,29,17)" fg:x="1125" fg:w="1"/><text x="90.3942%" y="623.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="90.1442%" y="597" width="0.0801%" height="15" fill="rgb(227,160,22)" fg:x="1125" fg:w="1"/><text x="90.3942%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.1442%" y="581" width="0.0801%" height="15" fill="rgb(231,129,52)" fg:x="1125" fg:w="1"/><text x="90.3942%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.1442%" y="565" width="0.0801%" height="15" fill="rgb(241,184,9)" fg:x="1125" fg:w="1"/><text x="90.3942%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="90.1442%" y="549" width="0.0801%" height="15" fill="rgb(217,43,48)" fg:x="1125" fg:w="1"/><text x="90.3942%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="90.2244%" y="613" width="0.1603%" height="15" fill="rgb(213,49,1)" fg:x="1126" fg:w="2"/><text x="90.4744%" y="623.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="90.3045%" y="597" width="0.0801%" height="15" fill="rgb(223,79,39)" fg:x="1127" fg:w="1"/><text x="90.5545%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="90.3045%" y="581" width="0.0801%" height="15" fill="rgb(228,227,46)" fg:x="1127" fg:w="1"/><text x="90.5545%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.3045%" y="565" width="0.0801%" height="15" fill="rgb(245,89,41)" fg:x="1127" fg:w="1"/><text x="90.5545%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.3045%" y="549" width="0.0801%" height="15" fill="rgb(253,83,21)" fg:x="1127" fg:w="1"/><text x="90.5545%" y="559.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (191 samples, 15.30%)</title><rect x="75.1603%" y="661" width="15.3045%" height="15" fill="rgb(229,116,51)" fg:x="938" fg:w="191"/><text x="75.4103%" y="671.50">&lt;tests::HoldingKeyInVes..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (7 samples, 0.56%)</title><rect x="89.9038%" y="645" width="0.5609%" height="15" fill="rgb(246,67,26)" fg:x="1122" fg:w="7"/><text x="90.1538%" y="655.50"></text></g><g><title>plugins_core::build::Build::new_world (3 samples, 0.24%)</title><rect x="90.2244%" y="629" width="0.2404%" height="15" fill="rgb(250,117,20)" fg:x="1126" fg:w="3"/><text x="90.4744%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="90.3846%" y="613" width="0.0801%" height="15" fill="rgb(207,88,17)" fg:x="1128" fg:w="1"/><text x="90.6346%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="90.3846%" y="597" width="0.0801%" height="15" fill="rgb(212,98,36)" fg:x="1128" fg:w="1"/><text x="90.6346%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="90.3846%" y="581" width="0.0801%" height="15" fill="rgb(221,72,6)" fg:x="1128" fg:w="1"/><text x="90.6346%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="90.3846%" y="565" width="0.0801%" height="15" fill="rgb(235,129,19)" fg:x="1128" fg:w="1"/><text x="90.6346%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="90.3846%" y="549" width="0.0801%" height="15" fill="rgb(237,200,6)" fg:x="1128" fg:w="1"/><text x="90.6346%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.3846%" y="533" width="0.0801%" height="15" fill="rgb(239,69,54)" fg:x="1128" fg:w="1"/><text x="90.6346%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.3846%" y="517" width="0.0801%" height="15" fill="rgb(214,68,45)" fg:x="1128" fg:w="1"/><text x="90.6346%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="90.4647%" y="661" width="0.0801%" height="15" fill="rgb(254,160,8)" fg:x="1129" fg:w="1"/><text x="90.7147%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="90.4647%" y="645" width="0.0801%" height="15" fill="rgb(215,226,31)" fg:x="1129" fg:w="1"/><text x="90.7147%" y="655.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="90.5449%" y="549" width="0.0801%" height="15" fill="rgb(253,6,35)" fg:x="1130" fg:w="1"/><text x="90.7949%" y="559.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.08%)</title><rect x="90.5449%" y="533" width="0.0801%" height="15" fill="rgb(219,96,42)" fg:x="1130" fg:w="1"/><text x="90.7949%" y="543.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.08%)</title><rect x="90.5449%" y="517" width="0.0801%" height="15" fill="rgb(207,170,13)" fg:x="1130" fg:w="1"/><text x="90.7949%" y="527.50"></text></g><g><title>engine::session::should_force_rollback (2 samples, 0.16%)</title><rect x="90.5449%" y="645" width="0.1603%" height="15" fill="rgb(239,101,5)" fg:x="1130" fg:w="2"/><text x="90.7949%" y="655.50"></text></g><g><title>std::env::_var (2 samples, 0.16%)</title><rect x="90.5449%" y="629" width="0.1603%" height="15" fill="rgb(228,183,34)" fg:x="1130" fg:w="2"/><text x="90.7949%" y="639.50"></text></g><g><title>std::env::var_os (2 samples, 0.16%)</title><rect x="90.5449%" y="613" width="0.1603%" height="15" fill="rgb(205,28,31)" fg:x="1130" fg:w="2"/><text x="90.7949%" y="623.50"></text></g><g><title>std::env::_var_os (2 samples, 0.16%)</title><rect x="90.5449%" y="597" width="0.1603%" height="15" fill="rgb(214,118,50)" fg:x="1130" fg:w="2"/><text x="90.7949%" y="607.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.16%)</title><rect x="90.5449%" y="581" width="0.1603%" height="15" fill="rgb(213,108,51)" fg:x="1130" fg:w="2"/><text x="90.7949%" y="591.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="90.5449%" y="565" width="0.1603%" height="15" fill="rgb(238,56,37)" fg:x="1130" fg:w="2"/><text x="90.7949%" y="575.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="90.6250%" y="549" width="0.0801%" height="15" fill="rgb(214,136,28)" fg:x="1131" fg:w="1"/><text x="90.8750%" y="559.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="90.6250%" y="533" width="0.0801%" height="15" fill="rgb(221,201,54)" fg:x="1131" fg:w="1"/><text x="90.8750%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="90.7051%" y="613" width="0.0801%" height="15" fill="rgb(228,216,39)" fg:x="1132" fg:w="1"/><text x="90.9551%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="90.7051%" y="597" width="0.0801%" height="15" fill="rgb(207,229,49)" fg:x="1132" fg:w="1"/><text x="90.9551%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="90.7051%" y="581" width="0.0801%" height="15" fill="rgb(224,23,43)" fg:x="1132" fg:w="1"/><text x="90.9551%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="90.7853%" y="549" width="0.0801%" height="15" fill="rgb(247,97,18)" fg:x="1133" fg:w="1"/><text x="91.0353%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.7853%" y="533" width="0.0801%" height="15" fill="rgb(232,53,32)" fg:x="1133" fg:w="1"/><text x="91.0353%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.7853%" y="517" width="0.0801%" height="15" fill="rgb(247,38,23)" fg:x="1133" fg:w="1"/><text x="91.0353%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="90.7853%" y="565" width="0.1603%" height="15" fill="rgb(228,101,52)" fg:x="1133" fg:w="2"/><text x="91.0353%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.8654%" y="549" width="0.0801%" height="15" fill="rgb(231,45,36)" fg:x="1134" fg:w="1"/><text x="91.1154%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.8654%" y="533" width="0.0801%" height="15" fill="rgb(221,183,50)" fg:x="1134" fg:w="1"/><text x="91.1154%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.8654%" y="517" width="0.0801%" height="15" fill="rgb(251,132,12)" fg:x="1134" fg:w="1"/><text x="91.1154%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="90.9455%" y="549" width="0.0801%" height="15" fill="rgb(252,50,16)" fg:x="1135" fg:w="1"/><text x="91.1955%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.9455%" y="533" width="0.0801%" height="15" fill="rgb(224,60,15)" fg:x="1135" fg:w="1"/><text x="91.1955%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.9455%" y="517" width="0.0801%" height="15" fill="rgb(254,2,34)" fg:x="1135" fg:w="1"/><text x="91.1955%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="91.0256%" y="549" width="0.1603%" height="15" fill="rgb(232,154,8)" fg:x="1136" fg:w="2"/><text x="91.2756%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="91.0256%" y="533" width="0.1603%" height="15" fill="rgb(235,190,52)" fg:x="1136" fg:w="2"/><text x="91.2756%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="91.0256%" y="517" width="0.1603%" height="15" fill="rgb(213,218,38)" fg:x="1136" fg:w="2"/><text x="91.2756%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="91.1058%" y="501" width="0.0801%" height="15" fill="rgb(237,50,37)" fg:x="1137" fg:w="1"/><text x="91.3558%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="91.2660%" y="501" width="0.1603%" height="15" fill="rgb(235,51,35)" fg:x="1139" fg:w="2"/><text x="91.5160%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="91.2660%" y="485" width="0.1603%" height="15" fill="rgb(244,40,52)" fg:x="1139" fg:w="2"/><text x="91.5160%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="91.2660%" y="469" width="0.1603%" height="15" fill="rgb(217,225,45)" fg:x="1139" fg:w="2"/><text x="91.5160%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="91.3462%" y="453" width="0.0801%" height="15" fill="rgb(247,191,36)" fg:x="1140" fg:w="1"/><text x="91.5962%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="91.2660%" y="533" width="0.2404%" height="15" fill="rgb(251,144,31)" fg:x="1139" fg:w="3"/><text x="91.5160%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="91.2660%" y="517" width="0.2404%" height="15" fill="rgb(227,155,41)" fg:x="1139" fg:w="3"/><text x="91.5160%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="91.4263%" y="501" width="0.0801%" height="15" fill="rgb(236,121,36)" fg:x="1141" fg:w="1"/><text x="91.6763%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="91.4263%" y="485" width="0.0801%" height="15" fill="rgb(221,128,28)" fg:x="1141" fg:w="1"/><text x="91.6763%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="91.4263%" y="469" width="0.0801%" height="15" fill="rgb(249,67,50)" fg:x="1141" fg:w="1"/><text x="91.6763%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="91.5064%" y="533" width="0.2404%" height="15" fill="rgb(241,126,38)" fg:x="1142" fg:w="3"/><text x="91.7564%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="91.6667%" y="517" width="0.0801%" height="15" fill="rgb(239,33,14)" fg:x="1144" fg:w="1"/><text x="91.9167%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="91.6667%" y="501" width="0.0801%" height="15" fill="rgb(207,221,54)" fg:x="1144" fg:w="1"/><text x="91.9167%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="91.7468%" y="501" width="0.2404%" height="15" fill="rgb(242,138,43)" fg:x="1145" fg:w="3"/><text x="91.9968%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="91.8269%" y="485" width="0.1603%" height="15" fill="rgb(231,118,19)" fg:x="1146" fg:w="2"/><text x="92.0769%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="91.9071%" y="469" width="0.0801%" height="15" fill="rgb(214,128,54)" fg:x="1147" fg:w="1"/><text x="92.1571%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="91.9071%" y="453" width="0.0801%" height="15" fill="rgb(236,136,6)" fg:x="1147" fg:w="1"/><text x="92.1571%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="91.9872%" y="485" width="0.0801%" height="15" fill="rgb(247,30,38)" fg:x="1148" fg:w="1"/><text x="92.2372%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="91.9872%" y="469" width="0.0801%" height="15" fill="rgb(249,189,40)" fg:x="1148" fg:w="1"/><text x="92.2372%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="92.1474%" y="469" width="0.4808%" height="15" fill="rgb(247,179,7)" fg:x="1150" fg:w="6"/><text x="92.3974%" y="479.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="92.2276%" y="453" width="0.4006%" height="15" fill="rgb(239,46,52)" fg:x="1151" fg:w="5"/><text x="92.4776%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="92.2276%" y="437" width="0.4006%" height="15" fill="rgb(225,28,52)" fg:x="1151" fg:w="5"/><text x="92.4776%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="92.2276%" y="421" width="0.4006%" height="15" fill="rgb(217,208,44)" fg:x="1151" fg:w="5"/><text x="92.4776%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.40%)</title><rect x="92.2276%" y="405" width="0.4006%" height="15" fill="rgb(224,11,34)" fg:x="1151" fg:w="5"/><text x="92.4776%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.40%)</title><rect x="92.2276%" y="389" width="0.4006%" height="15" fill="rgb(205,134,17)" fg:x="1151" fg:w="5"/><text x="92.4776%" y="399.50"></text></g><g><title>realloc (5 samples, 0.40%)</title><rect x="92.2276%" y="373" width="0.4006%" height="15" fill="rgb(237,125,9)" fg:x="1151" fg:w="5"/><text x="92.4776%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.60%)</title><rect x="91.1859%" y="549" width="1.6026%" height="15" fill="rgb(208,139,47)" fg:x="1138" fg:w="20"/><text x="91.4359%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="91.7468%" y="533" width="1.0417%" height="15" fill="rgb(242,5,5)" fg:x="1145" fg:w="13"/><text x="91.9968%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="91.7468%" y="517" width="1.0417%" height="15" fill="rgb(218,78,2)" fg:x="1145" fg:w="13"/><text x="91.9968%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="91.9872%" y="501" width="0.8013%" height="15" fill="rgb(217,75,16)" fg:x="1148" fg:w="10"/><text x="92.2372%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="92.0673%" y="485" width="0.7212%" height="15" fill="rgb(212,56,17)" fg:x="1149" fg:w="9"/><text x="92.3173%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="92.6282%" y="469" width="0.1603%" height="15" fill="rgb(228,61,29)" fg:x="1156" fg:w="2"/><text x="92.8782%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.7083%" y="453" width="0.0801%" height="15" fill="rgb(247,202,38)" fg:x="1157" fg:w="1"/><text x="92.9583%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.7083%" y="437" width="0.0801%" height="15" fill="rgb(211,216,43)" fg:x="1157" fg:w="1"/><text x="92.9583%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (26 samples, 2.08%)</title><rect x="90.7853%" y="581" width="2.0833%" height="15" fill="rgb(220,7,49)" fg:x="1133" fg:w="26"/><text x="91.0353%" y="591.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24 samples, 1.92%)</title><rect x="90.9455%" y="565" width="1.9231%" height="15" fill="rgb(219,158,7)" fg:x="1135" fg:w="24"/><text x="91.1955%" y="575.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.7885%" y="549" width="0.0801%" height="15" fill="rgb(206,127,9)" fg:x="1158" fg:w="1"/><text x="93.0385%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.7885%" y="533" width="0.0801%" height="15" fill="rgb(206,103,43)" fg:x="1158" fg:w="1"/><text x="93.0385%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.7885%" y="517" width="0.0801%" height="15" fill="rgb(240,108,41)" fg:x="1158" fg:w="1"/><text x="93.0385%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="92.7885%" y="501" width="0.0801%" height="15" fill="rgb(252,212,6)" fg:x="1158" fg:w="1"/><text x="93.0385%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="92.7885%" y="485" width="0.0801%" height="15" fill="rgb(248,105,31)" fg:x="1158" fg:w="1"/><text x="93.0385%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="92.7885%" y="469" width="0.0801%" height="15" fill="rgb(241,123,4)" fg:x="1158" fg:w="1"/><text x="93.0385%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.8686%" y="533" width="0.0801%" height="15" fill="rgb(223,74,37)" fg:x="1159" fg:w="1"/><text x="93.1186%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.8686%" y="517" width="0.0801%" height="15" fill="rgb(251,219,28)" fg:x="1159" fg:w="1"/><text x="93.1186%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.9487%" y="501" width="0.0801%" height="15" fill="rgb(218,36,31)" fg:x="1160" fg:w="1"/><text x="93.1987%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="92.8686%" y="581" width="0.2404%" height="15" fill="rgb(229,40,15)" fg:x="1159" fg:w="3"/><text x="93.1186%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="92.8686%" y="565" width="0.2404%" height="15" fill="rgb(208,138,37)" fg:x="1159" fg:w="3"/><text x="93.1186%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="92.8686%" y="549" width="0.2404%" height="15" fill="rgb(208,40,52)" fg:x="1159" fg:w="3"/><text x="93.1186%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="92.9487%" y="533" width="0.1603%" height="15" fill="rgb(246,181,48)" fg:x="1160" fg:w="2"/><text x="93.1987%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="92.9487%" y="517" width="0.1603%" height="15" fill="rgb(253,178,36)" fg:x="1160" fg:w="2"/><text x="93.1987%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="93.0288%" y="501" width="0.0801%" height="15" fill="rgb(210,170,6)" fg:x="1161" fg:w="1"/><text x="93.2788%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.1090%" y="501" width="0.0801%" height="15" fill="rgb(243,62,22)" fg:x="1162" fg:w="1"/><text x="93.3590%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.1891%" y="501" width="0.0801%" height="15" fill="rgb(213,145,26)" fg:x="1163" fg:w="1"/><text x="93.4391%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.1891%" y="485" width="0.0801%" height="15" fill="rgb(237,177,23)" fg:x="1163" fg:w="1"/><text x="93.4391%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="93.2692%" y="469" width="0.2404%" height="15" fill="rgb(252,5,24)" fg:x="1164" fg:w="3"/><text x="93.5192%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="93.3494%" y="453" width="0.1603%" height="15" fill="rgb(230,108,54)" fg:x="1165" fg:w="2"/><text x="93.5994%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="93.1090%" y="549" width="0.4808%" height="15" fill="rgb(252,192,41)" fg:x="1162" fg:w="6"/><text x="93.3590%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="93.1090%" y="533" width="0.4808%" height="15" fill="rgb(218,125,20)" fg:x="1162" fg:w="6"/><text x="93.3590%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="93.1090%" y="517" width="0.4808%" height="15" fill="rgb(230,223,15)" fg:x="1162" fg:w="6"/><text x="93.3590%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="93.2692%" y="501" width="0.3205%" height="15" fill="rgb(239,99,47)" fg:x="1164" fg:w="4"/><text x="93.5192%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="93.2692%" y="485" width="0.3205%" height="15" fill="rgb(222,214,23)" fg:x="1164" fg:w="4"/><text x="93.5192%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.5096%" y="469" width="0.0801%" height="15" fill="rgb(250,98,43)" fg:x="1167" fg:w="1"/><text x="93.7596%" y="479.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (7 samples, 0.56%)</title><rect x="93.1090%" y="565" width="0.5609%" height="15" fill="rgb(226,140,11)" fg:x="1162" fg:w="7"/><text x="93.3590%" y="575.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="93.5897%" y="549" width="0.0801%" height="15" fill="rgb(239,2,22)" fg:x="1168" fg:w="1"/><text x="93.8397%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="93.5897%" y="533" width="0.0801%" height="15" fill="rgb(209,106,26)" fg:x="1168" fg:w="1"/><text x="93.8397%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="93.5897%" y="517" width="0.0801%" height="15" fill="rgb(209,135,11)" fg:x="1168" fg:w="1"/><text x="93.8397%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="93.5897%" y="501" width="0.0801%" height="15" fill="rgb(241,58,6)" fg:x="1168" fg:w="1"/><text x="93.8397%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.7500%" y="533" width="0.0801%" height="15" fill="rgb(214,78,1)" fg:x="1170" fg:w="1"/><text x="94.0000%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.8301%" y="533" width="0.0801%" height="15" fill="rgb(229,135,33)" fg:x="1171" fg:w="1"/><text x="94.0801%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="93.9103%" y="533" width="0.1603%" height="15" fill="rgb(245,87,50)" fg:x="1172" fg:w="2"/><text x="94.1603%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="93.9103%" y="517" width="0.1603%" height="15" fill="rgb(222,222,8)" fg:x="1172" fg:w="2"/><text x="94.1603%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="93.9103%" y="501" width="0.1603%" height="15" fill="rgb(214,97,50)" fg:x="1172" fg:w="2"/><text x="94.1603%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="93.9103%" y="485" width="0.1603%" height="15" fill="rgb(244,161,51)" fg:x="1172" fg:w="2"/><text x="94.1603%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="93.9103%" y="469" width="0.1603%" height="15" fill="rgb(225,17,4)" fg:x="1172" fg:w="2"/><text x="94.1603%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="94.0705%" y="533" width="0.0801%" height="15" fill="rgb(238,10,13)" fg:x="1174" fg:w="1"/><text x="94.3205%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="94.0705%" y="517" width="0.0801%" height="15" fill="rgb(239,169,14)" fg:x="1174" fg:w="1"/><text x="94.3205%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.0705%" y="501" width="0.0801%" height="15" fill="rgb(213,105,25)" fg:x="1174" fg:w="1"/><text x="94.3205%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="94.2308%" y="501" width="0.0801%" height="15" fill="rgb(233,4,17)" fg:x="1176" fg:w="1"/><text x="94.4808%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.3109%" y="485" width="0.0801%" height="15" fill="rgb(212,5,35)" fg:x="1177" fg:w="1"/><text x="94.5609%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.3109%" y="469" width="0.0801%" height="15" fill="rgb(216,3,14)" fg:x="1177" fg:w="1"/><text x="94.5609%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.3109%" y="453" width="0.0801%" height="15" fill="rgb(240,105,33)" fg:x="1177" fg:w="1"/><text x="94.5609%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="94.3910%" y="485" width="0.1603%" height="15" fill="rgb(216,73,0)" fg:x="1178" fg:w="2"/><text x="94.6410%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="94.3910%" y="469" width="0.1603%" height="15" fill="rgb(217,153,48)" fg:x="1178" fg:w="2"/><text x="94.6410%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="94.4712%" y="453" width="0.0801%" height="15" fill="rgb(218,180,8)" fg:x="1179" fg:w="1"/><text x="94.7212%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="94.4712%" y="437" width="0.0801%" height="15" fill="rgb(252,168,2)" fg:x="1179" fg:w="1"/><text x="94.7212%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.5513%" y="453" width="0.0801%" height="15" fill="rgb(224,116,33)" fg:x="1180" fg:w="1"/><text x="94.8013%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.7115%" y="357" width="0.0801%" height="15" fill="rgb(229,205,17)" fg:x="1182" fg:w="1"/><text x="94.9615%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.7115%" y="341" width="0.0801%" height="15" fill="rgb(234,1,41)" fg:x="1182" fg:w="1"/><text x="94.9615%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.7115%" y="325" width="0.0801%" height="15" fill="rgb(244,185,8)" fg:x="1182" fg:w="1"/><text x="94.9615%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="94.5513%" y="469" width="0.3205%" height="15" fill="rgb(248,51,21)" fg:x="1180" fg:w="4"/><text x="94.8013%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="94.6314%" y="453" width="0.2404%" height="15" fill="rgb(248,157,31)" fg:x="1181" fg:w="3"/><text x="94.8814%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="94.6314%" y="437" width="0.2404%" height="15" fill="rgb(210,34,47)" fg:x="1181" fg:w="3"/><text x="94.8814%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="94.6314%" y="421" width="0.2404%" height="15" fill="rgb(227,139,53)" fg:x="1181" fg:w="3"/><text x="94.8814%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="94.6314%" y="405" width="0.2404%" height="15" fill="rgb(232,211,37)" fg:x="1181" fg:w="3"/><text x="94.8814%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="94.7115%" y="389" width="0.1603%" height="15" fill="rgb(236,133,10)" fg:x="1182" fg:w="2"/><text x="94.9615%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="94.7115%" y="373" width="0.1603%" height="15" fill="rgb(243,202,25)" fg:x="1182" fg:w="2"/><text x="94.9615%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="94.7917%" y="357" width="0.0801%" height="15" fill="rgb(224,59,9)" fg:x="1183" fg:w="1"/><text x="95.0417%" y="367.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (16 samples, 1.28%)</title><rect x="93.6699%" y="565" width="1.2821%" height="15" fill="rgb(206,146,16)" fg:x="1169" fg:w="16"/><text x="93.9199%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (16 samples, 1.28%)</title><rect x="93.6699%" y="549" width="1.2821%" height="15" fill="rgb(220,47,2)" fg:x="1169" fg:w="16"/><text x="93.9199%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.80%)</title><rect x="94.1506%" y="533" width="0.8013%" height="15" fill="rgb(225,124,51)" fg:x="1175" fg:w="10"/><text x="94.4006%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.80%)</title><rect x="94.1506%" y="517" width="0.8013%" height="15" fill="rgb(241,220,50)" fg:x="1175" fg:w="10"/><text x="94.4006%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="94.3109%" y="501" width="0.6410%" height="15" fill="rgb(232,168,5)" fg:x="1177" fg:w="8"/><text x="94.5609%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="94.5513%" y="485" width="0.4006%" height="15" fill="rgb(243,90,22)" fg:x="1180" fg:w="5"/><text x="94.8013%" y="495.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="94.8718%" y="469" width="0.0801%" height="15" fill="rgb(223,153,32)" fg:x="1184" fg:w="1"/><text x="95.1218%" y="479.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="94.8718%" y="453" width="0.0801%" height="15" fill="rgb(243,124,20)" fg:x="1184" fg:w="1"/><text x="95.1218%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="94.9519%" y="453" width="0.0801%" height="15" fill="rgb(246,168,39)" fg:x="1185" fg:w="1"/><text x="95.2019%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.0321%" y="421" width="0.0801%" height="15" fill="rgb(222,165,54)" fg:x="1186" fg:w="1"/><text x="95.2821%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.0321%" y="405" width="0.0801%" height="15" fill="rgb(251,142,27)" fg:x="1186" fg:w="1"/><text x="95.2821%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.0321%" y="389" width="0.0801%" height="15" fill="rgb(207,168,50)" fg:x="1186" fg:w="1"/><text x="95.2821%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.0321%" y="373" width="0.0801%" height="15" fill="rgb(250,139,25)" fg:x="1186" fg:w="1"/><text x="95.2821%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.1923%" y="405" width="0.1603%" height="15" fill="rgb(214,194,48)" fg:x="1188" fg:w="2"/><text x="95.4423%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.2724%" y="389" width="0.0801%" height="15" fill="rgb(227,138,47)" fg:x="1189" fg:w="1"/><text x="95.5224%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="94.9519%" y="501" width="0.4808%" height="15" fill="rgb(250,162,5)" fg:x="1185" fg:w="6"/><text x="95.2019%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="94.9519%" y="485" width="0.4808%" height="15" fill="rgb(229,74,25)" fg:x="1185" fg:w="6"/><text x="95.2019%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="94.9519%" y="469" width="0.4808%" height="15" fill="rgb(221,124,34)" fg:x="1185" fg:w="6"/><text x="95.2019%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="95.0321%" y="453" width="0.4006%" height="15" fill="rgb(225,94,25)" fg:x="1186" fg:w="5"/><text x="95.2821%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="95.0321%" y="437" width="0.4006%" height="15" fill="rgb(210,100,12)" fg:x="1186" fg:w="5"/><text x="95.2821%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="95.1122%" y="421" width="0.3205%" height="15" fill="rgb(206,62,48)" fg:x="1187" fg:w="4"/><text x="95.3622%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.3526%" y="405" width="0.0801%" height="15" fill="rgb(222,181,9)" fg:x="1190" fg:w="1"/><text x="95.6026%" y="415.50"></text></g><g><title>engine::session::Session::close (63 samples, 5.05%)</title><rect x="90.5449%" y="661" width="5.0481%" height="15" fill="rgb(248,42,38)" fg:x="1130" fg:w="63"/><text x="90.7949%" y="671.50">engine..</text></g><g><title>engine::session::state::State::close (61 samples, 4.89%)</title><rect x="90.7051%" y="645" width="4.8878%" height="15" fill="rgb(213,40,6)" fg:x="1132" fg:w="61"/><text x="90.9551%" y="655.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (61 samples, 4.89%)</title><rect x="90.7051%" y="629" width="4.8878%" height="15" fill="rgb(211,108,15)" fg:x="1132" fg:w="61"/><text x="90.9551%" y="639.50">engine..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (60 samples, 4.81%)</title><rect x="90.7853%" y="613" width="4.8077%" height="15" fill="rgb(249,62,9)" fg:x="1133" fg:w="60"/><text x="91.0353%" y="623.50">engine..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (60 samples, 4.81%)</title><rect x="90.7853%" y="597" width="4.8077%" height="15" fill="rgb(233,26,54)" fg:x="1133" fg:w="60"/><text x="91.0353%" y="607.50">engine..</text></g><g><title>kernel::model::any_entity_changes (31 samples, 2.48%)</title><rect x="93.1090%" y="581" width="2.4840%" height="15" fill="rgb(210,175,26)" fg:x="1162" fg:w="31"/><text x="93.3590%" y="591.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (8 samples, 0.64%)</title><rect x="94.9519%" y="565" width="0.6410%" height="15" fill="rgb(210,43,33)" fg:x="1185" fg:w="8"/><text x="95.2019%" y="575.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="94.9519%" y="549" width="0.6410%" height="15" fill="rgb(224,46,17)" fg:x="1185" fg:w="8"/><text x="95.2019%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="94.9519%" y="533" width="0.6410%" height="15" fill="rgb(254,24,38)" fg:x="1185" fg:w="8"/><text x="95.2019%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="94.9519%" y="517" width="0.6410%" height="15" fill="rgb(248,32,0)" fg:x="1185" fg:w="8"/><text x="95.2019%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.4327%" y="501" width="0.1603%" height="15" fill="rgb(224,37,41)" fg:x="1191" fg:w="2"/><text x="95.6827%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.4327%" y="485" width="0.1603%" height="15" fill="rgb(252,70,22)" fg:x="1191" fg:w="2"/><text x="95.6827%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="95.5128%" y="469" width="0.0801%" height="15" fill="rgb(241,123,50)" fg:x="1192" fg:w="1"/><text x="95.7628%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="95.6731%" y="533" width="0.0801%" height="15" fill="rgb(246,138,33)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="95.6731%" y="517" width="0.0801%" height="15" fill="rgb(218,39,32)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="95.6731%" y="501" width="0.0801%" height="15" fill="rgb(241,229,10)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="95.6731%" y="485" width="0.0801%" height="15" fill="rgb(212,160,10)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="95.6731%" y="469" width="0.0801%" height="15" fill="rgb(227,48,51)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="95.6731%" y="453" width="0.0801%" height="15" fill="rgb(238,159,21)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="95.6731%" y="437" width="0.0801%" height="15" fill="rgb(216,1,10)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="95.6731%" y="421" width="0.0801%" height="15" fill="rgb(209,228,25)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="95.6731%" y="405" width="0.0801%" height="15" fill="rgb(234,160,10)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="95.6731%" y="389" width="0.0801%" height="15" fill="rgb(212,66,25)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="95.6731%" y="373" width="0.0801%" height="15" fill="rgb(254,121,18)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="95.6731%" y="357" width="0.0801%" height="15" fill="rgb(219,127,1)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="95.6731%" y="341" width="0.0801%" height="15" fill="rgb(219,224,42)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="95.6731%" y="325" width="0.0801%" height="15" fill="rgb(253,130,22)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="95.6731%" y="309" width="0.0801%" height="15" fill="rgb(253,39,28)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="95.6731%" y="293" width="0.0801%" height="15" fill="rgb(231,126,37)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="95.7532%" y="533" width="0.0801%" height="15" fill="rgb(251,145,14)" fg:x="1195" fg:w="1"/><text x="96.0032%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.7532%" y="517" width="0.0801%" height="15" fill="rgb(229,164,30)" fg:x="1195" fg:w="1"/><text x="96.0032%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="95.8333%" y="453" width="0.0801%" height="15" fill="rgb(233,227,54)" fg:x="1196" fg:w="1"/><text x="96.0833%" y="463.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="95.8333%" y="437" width="0.0801%" height="15" fill="rgb(240,94,22)" fg:x="1196" fg:w="1"/><text x="96.0833%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.8333%" y="421" width="0.0801%" height="15" fill="rgb(217,56,16)" fg:x="1196" fg:w="1"/><text x="96.0833%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.8333%" y="405" width="0.0801%" height="15" fill="rgb(229,133,38)" fg:x="1196" fg:w="1"/><text x="96.0833%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.8333%" y="389" width="0.0801%" height="15" fill="rgb(225,139,35)" fg:x="1196" fg:w="1"/><text x="96.0833%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.8333%" y="373" width="0.0801%" height="15" fill="rgb(223,100,16)" fg:x="1196" fg:w="1"/><text x="96.0833%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.8333%" y="357" width="0.0801%" height="15" fill="rgb(207,43,50)" fg:x="1196" fg:w="1"/><text x="96.0833%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.8333%" y="341" width="0.0801%" height="15" fill="rgb(237,221,9)" fg:x="1196" fg:w="1"/><text x="96.0833%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.8333%" y="325" width="0.0801%" height="15" fill="rgb(236,134,24)" fg:x="1196" fg:w="1"/><text x="96.0833%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.8333%" y="309" width="0.0801%" height="15" fill="rgb(222,173,4)" fg:x="1196" fg:w="1"/><text x="96.0833%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.8333%" y="293" width="0.0801%" height="15" fill="rgb(234,144,52)" fg:x="1196" fg:w="1"/><text x="96.0833%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.8333%" y="277" width="0.0801%" height="15" fill="rgb(223,41,7)" fg:x="1196" fg:w="1"/><text x="96.0833%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.8333%" y="261" width="0.0801%" height="15" fill="rgb(226,143,9)" fg:x="1196" fg:w="1"/><text x="96.0833%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.8333%" y="245" width="0.0801%" height="15" fill="rgb(234,43,37)" fg:x="1196" fg:w="1"/><text x="96.0833%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.9135%" y="389" width="0.0801%" height="15" fill="rgb(224,188,11)" fg:x="1197" fg:w="1"/><text x="96.1635%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="95.9135%" y="373" width="0.0801%" height="15" fill="rgb(233,113,28)" fg:x="1197" fg:w="1"/><text x="96.1635%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="95.9135%" y="357" width="0.0801%" height="15" fill="rgb(215,16,1)" fg:x="1197" fg:w="1"/><text x="96.1635%" y="367.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="95.9135%" y="437" width="0.2404%" height="15" fill="rgb(238,74,38)" fg:x="1197" fg:w="3"/><text x="96.1635%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="95.9135%" y="421" width="0.2404%" height="15" fill="rgb(221,66,35)" fg:x="1197" fg:w="3"/><text x="96.1635%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="95.9135%" y="405" width="0.2404%" height="15" fill="rgb(251,225,2)" fg:x="1197" fg:w="3"/><text x="96.1635%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="95.9936%" y="389" width="0.1603%" height="15" fill="rgb(240,169,18)" fg:x="1198" fg:w="2"/><text x="96.2436%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.0737%" y="373" width="0.0801%" height="15" fill="rgb(243,130,50)" fg:x="1199" fg:w="1"/><text x="96.3237%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.0737%" y="357" width="0.0801%" height="15" fill="rgb(228,75,13)" fg:x="1199" fg:w="1"/><text x="96.3237%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="96.0737%" y="341" width="0.0801%" height="15" fill="rgb(252,95,35)" fg:x="1199" fg:w="1"/><text x="96.3237%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="96.2340%" y="357" width="0.2404%" height="15" fill="rgb(222,180,54)" fg:x="1201" fg:w="3"/><text x="96.4840%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="96.2340%" y="341" width="0.2404%" height="15" fill="rgb(250,110,34)" fg:x="1201" fg:w="3"/><text x="96.4840%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="96.3141%" y="325" width="0.1603%" height="15" fill="rgb(208,100,21)" fg:x="1202" fg:w="2"/><text x="96.5641%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.3141%" y="309" width="0.1603%" height="15" fill="rgb(209,123,47)" fg:x="1202" fg:w="2"/><text x="96.5641%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.3141%" y="293" width="0.1603%" height="15" fill="rgb(237,147,9)" fg:x="1202" fg:w="2"/><text x="96.5641%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.3141%" y="277" width="0.1603%" height="15" fill="rgb(228,206,23)" fg:x="1202" fg:w="2"/><text x="96.5641%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.3942%" y="261" width="0.0801%" height="15" fill="rgb(217,174,46)" fg:x="1203" fg:w="1"/><text x="96.6442%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.4744%" y="325" width="0.0801%" height="15" fill="rgb(231,126,21)" fg:x="1204" fg:w="1"/><text x="96.7244%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4744%" y="309" width="0.0801%" height="15" fill="rgb(245,26,1)" fg:x="1204" fg:w="1"/><text x="96.7244%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.4744%" y="293" width="0.0801%" height="15" fill="rgb(224,138,39)" fg:x="1204" fg:w="1"/><text x="96.7244%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.4744%" y="277" width="0.0801%" height="15" fill="rgb(208,97,3)" fg:x="1204" fg:w="1"/><text x="96.7244%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4744%" y="261" width="0.0801%" height="15" fill="rgb(222,77,29)" fg:x="1204" fg:w="1"/><text x="96.7244%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.4744%" y="245" width="0.0801%" height="15" fill="rgb(243,188,36)" fg:x="1204" fg:w="1"/><text x="96.7244%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.4744%" y="229" width="0.0801%" height="15" fill="rgb(218,214,3)" fg:x="1204" fg:w="1"/><text x="96.7244%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4744%" y="213" width="0.0801%" height="15" fill="rgb(211,183,45)" fg:x="1204" fg:w="1"/><text x="96.7244%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.4744%" y="197" width="0.0801%" height="15" fill="rgb(230,218,25)" fg:x="1204" fg:w="1"/><text x="96.7244%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.4744%" y="181" width="0.0801%" height="15" fill="rgb(233,86,6)" fg:x="1204" fg:w="1"/><text x="96.7244%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.4744%" y="165" width="0.0801%" height="15" fill="rgb(220,59,24)" fg:x="1204" fg:w="1"/><text x="96.7244%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.4744%" y="149" width="0.0801%" height="15" fill="rgb(227,60,1)" fg:x="1204" fg:w="1"/><text x="96.7244%" y="159.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (9 samples, 0.72%)</title><rect x="95.9135%" y="453" width="0.7212%" height="15" fill="rgb(216,212,54)" fg:x="1197" fg:w="9"/><text x="96.1635%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="96.1538%" y="437" width="0.4808%" height="15" fill="rgb(227,81,54)" fg:x="1200" fg:w="6"/><text x="96.4038%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="96.1538%" y="421" width="0.4808%" height="15" fill="rgb(206,204,43)" fg:x="1200" fg:w="6"/><text x="96.4038%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="96.1538%" y="405" width="0.4808%" height="15" fill="rgb(219,29,26)" fg:x="1200" fg:w="6"/><text x="96.4038%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="96.1538%" y="389" width="0.4808%" height="15" fill="rgb(252,40,36)" fg:x="1200" fg:w="6"/><text x="96.4038%" y="399.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="96.2340%" y="373" width="0.4006%" height="15" fill="rgb(224,205,39)" fg:x="1201" fg:w="5"/><text x="96.4840%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.4744%" y="357" width="0.1603%" height="15" fill="rgb(222,13,21)" fg:x="1204" fg:w="2"/><text x="96.7244%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.4744%" y="341" width="0.1603%" height="15" fill="rgb(243,139,6)" fg:x="1204" fg:w="2"/><text x="96.7244%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.5545%" y="325" width="0.0801%" height="15" fill="rgb(237,101,11)" fg:x="1205" fg:w="1"/><text x="96.8045%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="96.6346%" y="437" width="0.0801%" height="15" fill="rgb(254,49,28)" fg:x="1206" fg:w="1"/><text x="96.8846%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.6346%" y="421" width="0.0801%" height="15" fill="rgb(223,41,21)" fg:x="1206" fg:w="1"/><text x="96.8846%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.7147%" y="341" width="0.0801%" height="15" fill="rgb(225,103,29)" fg:x="1207" fg:w="1"/><text x="96.9647%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.7147%" y="405" width="0.1603%" height="15" fill="rgb(244,82,43)" fg:x="1207" fg:w="2"/><text x="96.9647%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.7147%" y="389" width="0.1603%" height="15" fill="rgb(217,39,3)" fg:x="1207" fg:w="2"/><text x="96.9647%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.7147%" y="373" width="0.1603%" height="15" fill="rgb(239,128,25)" fg:x="1207" fg:w="2"/><text x="96.9647%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.7147%" y="357" width="0.1603%" height="15" fill="rgb(210,192,37)" fg:x="1207" fg:w="2"/><text x="96.9647%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.7949%" y="341" width="0.0801%" height="15" fill="rgb(219,98,18)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.7949%" y="325" width="0.0801%" height="15" fill="rgb(224,228,38)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.7949%" y="309" width="0.0801%" height="15" fill="rgb(241,129,43)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.7949%" y="293" width="0.0801%" height="15" fill="rgb(223,8,51)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.7949%" y="277" width="0.0801%" height="15" fill="rgb(233,76,24)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.7949%" y="261" width="0.0801%" height="15" fill="rgb(219,115,10)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.7949%" y="245" width="0.0801%" height="15" fill="rgb(222,137,12)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.7949%" y="229" width="0.0801%" height="15" fill="rgb(216,192,16)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.7949%" y="213" width="0.0801%" height="15" fill="rgb(247,6,27)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.7949%" y="197" width="0.0801%" height="15" fill="rgb(254,39,44)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.7949%" y="181" width="0.0801%" height="15" fill="rgb(251,116,35)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.7949%" y="165" width="0.0801%" height="15" fill="rgb(208,61,44)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="175.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (14 samples, 1.12%)</title><rect x="95.8333%" y="501" width="1.1218%" height="15" fill="rgb(250,34,5)" fg:x="1196" fg:w="14"/><text x="96.0833%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (14 samples, 1.12%)</title><rect x="95.8333%" y="485" width="1.1218%" height="15" fill="rgb(241,40,15)" fg:x="1196" fg:w="14"/><text x="96.0833%" y="495.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (14 samples, 1.12%)</title><rect x="95.8333%" y="469" width="1.1218%" height="15" fill="rgb(229,182,2)" fg:x="1196" fg:w="14"/><text x="96.0833%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="96.6346%" y="453" width="0.3205%" height="15" fill="rgb(244,148,52)" fg:x="1206" fg:w="4"/><text x="96.8846%" y="463.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="96.7147%" y="437" width="0.2404%" height="15" fill="rgb(225,211,4)" fg:x="1207" fg:w="3"/><text x="96.9647%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="96.7147%" y="421" width="0.2404%" height="15" fill="rgb(208,222,47)" fg:x="1207" fg:w="3"/><text x="96.9647%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.8750%" y="405" width="0.0801%" height="15" fill="rgb(233,162,0)" fg:x="1209" fg:w="1"/><text x="97.1250%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8750%" y="389" width="0.0801%" height="15" fill="rgb(241,54,13)" fg:x="1209" fg:w="1"/><text x="97.1250%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.8750%" y="373" width="0.0801%" height="15" fill="rgb(213,89,18)" fg:x="1209" fg:w="1"/><text x="97.1250%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8750%" y="357" width="0.0801%" height="15" fill="rgb(215,170,37)" fg:x="1209" fg:w="1"/><text x="97.1250%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.8750%" y="341" width="0.0801%" height="15" fill="rgb(216,133,15)" fg:x="1209" fg:w="1"/><text x="97.1250%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8750%" y="325" width="0.0801%" height="15" fill="rgb(230,42,19)" fg:x="1209" fg:w="1"/><text x="97.1250%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.8750%" y="309" width="0.0801%" height="15" fill="rgb(221,103,41)" fg:x="1209" fg:w="1"/><text x="97.1250%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8750%" y="293" width="0.0801%" height="15" fill="rgb(220,142,31)" fg:x="1209" fg:w="1"/><text x="97.1250%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.8750%" y="277" width="0.0801%" height="15" fill="rgb(239,218,4)" fg:x="1209" fg:w="1"/><text x="97.1250%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8750%" y="261" width="0.0801%" height="15" fill="rgb(232,16,4)" fg:x="1209" fg:w="1"/><text x="97.1250%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="96.9551%" y="437" width="0.0801%" height="15" fill="rgb(226,213,25)" fg:x="1210" fg:w="1"/><text x="97.2051%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.9551%" y="421" width="0.0801%" height="15" fill="rgb(235,135,19)" fg:x="1210" fg:w="1"/><text x="97.2051%" y="431.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (18 samples, 1.44%)</title><rect x="95.6731%" y="549" width="1.4423%" height="15" fill="rgb(240,107,29)" fg:x="1194" fg:w="18"/><text x="95.9231%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (16 samples, 1.28%)</title><rect x="95.8333%" y="533" width="1.2821%" height="15" fill="rgb(206,164,44)" fg:x="1196" fg:w="16"/><text x="96.0833%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (16 samples, 1.28%)</title><rect x="95.8333%" y="517" width="1.2821%" height="15" fill="rgb(210,23,48)" fg:x="1196" fg:w="16"/><text x="96.0833%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.9551%" y="501" width="0.1603%" height="15" fill="rgb(212,138,25)" fg:x="1210" fg:w="2"/><text x="97.2051%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.9551%" y="485" width="0.1603%" height="15" fill="rgb(224,152,3)" fg:x="1210" fg:w="2"/><text x="97.2051%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.9551%" y="469" width="0.1603%" height="15" fill="rgb(214,38,23)" fg:x="1210" fg:w="2"/><text x="97.2051%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.9551%" y="453" width="0.1603%" height="15" fill="rgb(215,161,10)" fg:x="1210" fg:w="2"/><text x="97.2051%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="97.0353%" y="437" width="0.0801%" height="15" fill="rgb(240,185,7)" fg:x="1211" fg:w="1"/><text x="97.2853%" y="447.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1154%" y="533" width="0.0801%" height="15" fill="rgb(244,104,25)" fg:x="1212" fg:w="1"/><text x="97.3654%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="97.2756%" y="501" width="0.0801%" height="15" fill="rgb(242,140,44)" fg:x="1214" fg:w="1"/><text x="97.5256%" y="511.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="97.2756%" y="485" width="0.0801%" height="15" fill="rgb(245,30,19)" fg:x="1214" fg:w="1"/><text x="97.5256%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.2756%" y="469" width="0.0801%" height="15" fill="rgb(219,208,35)" fg:x="1214" fg:w="1"/><text x="97.5256%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.2756%" y="453" width="0.0801%" height="15" fill="rgb(235,200,7)" fg:x="1214" fg:w="1"/><text x="97.5256%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.2756%" y="437" width="0.0801%" height="15" fill="rgb(220,193,10)" fg:x="1214" fg:w="1"/><text x="97.5256%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.2756%" y="421" width="0.0801%" height="15" fill="rgb(212,216,39)" fg:x="1214" fg:w="1"/><text x="97.5256%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.2756%" y="405" width="0.0801%" height="15" fill="rgb(212,134,19)" fg:x="1214" fg:w="1"/><text x="97.5256%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.2756%" y="389" width="0.0801%" height="15" fill="rgb(230,57,24)" fg:x="1214" fg:w="1"/><text x="97.5256%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.2756%" y="373" width="0.0801%" height="15" fill="rgb(238,209,37)" fg:x="1214" fg:w="1"/><text x="97.5256%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.2756%" y="357" width="0.0801%" height="15" fill="rgb(247,11,45)" fg:x="1214" fg:w="1"/><text x="97.5256%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.2756%" y="341" width="0.0801%" height="15" fill="rgb(222,126,6)" fg:x="1214" fg:w="1"/><text x="97.5256%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.2756%" y="325" width="0.0801%" height="15" fill="rgb(245,77,24)" fg:x="1214" fg:w="1"/><text x="97.5256%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.2756%" y="309" width="0.0801%" height="15" fill="rgb(227,14,24)" fg:x="1214" fg:w="1"/><text x="97.5256%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.2756%" y="293" width="0.0801%" height="15" fill="rgb(211,112,42)" fg:x="1214" fg:w="1"/><text x="97.5256%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.2756%" y="277" width="0.0801%" height="15" fill="rgb(230,103,42)" fg:x="1214" fg:w="1"/><text x="97.5256%" y="287.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (4 samples, 0.32%)</title><rect x="97.1154%" y="549" width="0.3205%" height="15" fill="rgb(228,125,42)" fg:x="1212" fg:w="4"/><text x="97.3654%" y="559.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="97.1955%" y="533" width="0.2404%" height="15" fill="rgb(243,33,6)" fg:x="1213" fg:w="3"/><text x="97.4455%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="97.1955%" y="517" width="0.2404%" height="15" fill="rgb(231,2,40)" fg:x="1213" fg:w="3"/><text x="97.4455%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="97.3558%" y="501" width="0.0801%" height="15" fill="rgb(224,200,53)" fg:x="1215" fg:w="1"/><text x="97.6058%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="97.3558%" y="485" width="0.0801%" height="15" fill="rgb(215,116,36)" fg:x="1215" fg:w="1"/><text x="97.6058%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="97.3558%" y="469" width="0.0801%" height="15" fill="rgb(240,23,51)" fg:x="1215" fg:w="1"/><text x="97.6058%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="97.3558%" y="453" width="0.0801%" height="15" fill="rgb(221,72,5)" fg:x="1215" fg:w="1"/><text x="97.6058%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="97.3558%" y="437" width="0.0801%" height="15" fill="rgb(245,142,9)" fg:x="1215" fg:w="1"/><text x="97.6058%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="97.3558%" y="421" width="0.0801%" height="15" fill="rgb(207,34,16)" fg:x="1215" fg:w="1"/><text x="97.6058%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="97.3558%" y="405" width="0.0801%" height="15" fill="rgb(252,101,12)" fg:x="1215" fg:w="1"/><text x="97.6058%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="97.3558%" y="389" width="0.0801%" height="15" fill="rgb(239,89,37)" fg:x="1215" fg:w="1"/><text x="97.6058%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="97.3558%" y="373" width="0.0801%" height="15" fill="rgb(252,227,37)" fg:x="1215" fg:w="1"/><text x="97.6058%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="97.3558%" y="357" width="0.0801%" height="15" fill="rgb(212,164,17)" fg:x="1215" fg:w="1"/><text x="97.6058%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="97.3558%" y="341" width="0.0801%" height="15" fill="rgb(240,86,13)" fg:x="1215" fg:w="1"/><text x="97.6058%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="97.3558%" y="325" width="0.0801%" height="15" fill="rgb(233,183,32)" fg:x="1215" fg:w="1"/><text x="97.6058%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="97.3558%" y="309" width="0.0801%" height="15" fill="rgb(205,201,38)" fg:x="1215" fg:w="1"/><text x="97.6058%" y="319.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="97.3558%" y="293" width="0.0801%" height="15" fill="rgb(210,122,38)" fg:x="1215" fg:w="1"/><text x="97.6058%" y="303.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="97.3558%" y="277" width="0.0801%" height="15" fill="rgb(241,174,26)" fg:x="1215" fg:w="1"/><text x="97.6058%" y="287.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="97.3558%" y="261" width="0.0801%" height="15" fill="rgb(219,89,7)" fg:x="1215" fg:w="1"/><text x="97.6058%" y="271.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="97.3558%" y="245" width="0.0801%" height="15" fill="rgb(246,9,24)" fg:x="1215" fg:w="1"/><text x="97.6058%" y="255.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="97.3558%" y="229" width="0.0801%" height="15" fill="rgb(205,132,21)" fg:x="1215" fg:w="1"/><text x="97.6058%" y="239.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="97.3558%" y="213" width="0.0801%" height="15" fill="rgb(210,11,17)" fg:x="1215" fg:w="1"/><text x="97.6058%" y="223.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (23 samples, 1.84%)</title><rect x="95.6731%" y="565" width="1.8429%" height="15" fill="rgb(226,138,14)" fg:x="1194" fg:w="23"/><text x="95.9231%" y="575.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="97.4359%" y="549" width="0.0801%" height="15" fill="rgb(224,108,44)" fg:x="1216" fg:w="1"/><text x="97.6859%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="97.4359%" y="533" width="0.0801%" height="15" fill="rgb(247,114,36)" fg:x="1216" fg:w="1"/><text x="97.6859%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.4359%" y="517" width="0.0801%" height="15" fill="rgb(231,183,14)" fg:x="1216" fg:w="1"/><text x="97.6859%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="97.5160%" y="565" width="0.1603%" height="15" fill="rgb(218,168,4)" fg:x="1217" fg:w="2"/><text x="97.7660%" y="575.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (2 samples, 0.16%)</title><rect x="97.6763%" y="437" width="0.1603%" height="15" fill="rgb(210,8,3)" fg:x="1219" fg:w="2"/><text x="97.9263%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="97.6763%" y="421" width="0.1603%" height="15" fill="rgb(216,165,0)" fg:x="1219" fg:w="2"/><text x="97.9263%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="97.6763%" y="405" width="0.1603%" height="15" fill="rgb(245,120,5)" fg:x="1219" fg:w="2"/><text x="97.9263%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (29 samples, 2.32%)</title><rect x="95.5929%" y="629" width="2.3237%" height="15" fill="rgb(249,121,32)" fg:x="1193" fg:w="29"/><text x="95.8429%" y="639.50">&lt;..</text></g><g><title>kernel::plugins::mw::apply_middleware (29 samples, 2.32%)</title><rect x="95.5929%" y="613" width="2.3237%" height="15" fill="rgb(211,55,33)" fg:x="1193" fg:w="29"/><text x="95.8429%" y="623.50">k..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (29 samples, 2.32%)</title><rect x="95.5929%" y="597" width="2.3237%" height="15" fill="rgb(254,46,35)" fg:x="1193" fg:w="29"/><text x="95.8429%" y="607.50">k..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (29 samples, 2.32%)</title><rect x="95.5929%" y="581" width="2.3237%" height="15" fill="rgb(213,213,19)" fg:x="1193" fg:w="29"/><text x="95.8429%" y="591.50">&lt;..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="97.6763%" y="565" width="0.2404%" height="15" fill="rgb(207,152,44)" fg:x="1219" fg:w="3"/><text x="97.9263%" y="575.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (3 samples, 0.24%)</title><rect x="97.6763%" y="549" width="0.2404%" height="15" fill="rgb(227,195,36)" fg:x="1219" fg:w="3"/><text x="97.9263%" y="559.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="97.6763%" y="533" width="0.2404%" height="15" fill="rgb(210,137,36)" fg:x="1219" fg:w="3"/><text x="97.9263%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="97.6763%" y="517" width="0.2404%" height="15" fill="rgb(253,47,47)" fg:x="1219" fg:w="3"/><text x="97.9263%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="97.6763%" y="501" width="0.2404%" height="15" fill="rgb(230,147,18)" fg:x="1219" fg:w="3"/><text x="97.9263%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="97.6763%" y="485" width="0.2404%" height="15" fill="rgb(247,33,49)" fg:x="1219" fg:w="3"/><text x="97.9263%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.24%)</title><rect x="97.6763%" y="469" width="0.2404%" height="15" fill="rgb(239,26,29)" fg:x="1219" fg:w="3"/><text x="97.9263%" y="479.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (3 samples, 0.24%)</title><rect x="97.6763%" y="453" width="0.2404%" height="15" fill="rgb(245,145,52)" fg:x="1219" fg:w="3"/><text x="97.9263%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="97.8365%" y="437" width="0.0801%" height="15" fill="rgb(224,139,32)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="97.8365%" y="421" width="0.0801%" height="15" fill="rgb(238,202,19)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9167%" y="501" width="0.0801%" height="15" fill="rgb(249,211,53)" fg:x="1222" fg:w="1"/><text x="98.1667%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9167%" y="485" width="0.0801%" height="15" fill="rgb(237,229,33)" fg:x="1222" fg:w="1"/><text x="98.1667%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9167%" y="469" width="0.0801%" height="15" fill="rgb(208,97,40)" fg:x="1222" fg:w="1"/><text x="98.1667%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9167%" y="453" width="0.0801%" height="15" fill="rgb(254,36,16)" fg:x="1222" fg:w="1"/><text x="98.1667%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9167%" y="437" width="0.0801%" height="15" fill="rgb(221,7,12)" fg:x="1222" fg:w="1"/><text x="98.1667%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="97.9167%" y="549" width="0.1603%" height="15" fill="rgb(205,11,12)" fg:x="1222" fg:w="2"/><text x="98.1667%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="97.9167%" y="533" width="0.1603%" height="15" fill="rgb(227,72,28)" fg:x="1222" fg:w="2"/><text x="98.1667%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="97.9167%" y="517" width="0.1603%" height="15" fill="rgb(228,7,34)" fg:x="1222" fg:w="2"/><text x="98.1667%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.9968%" y="501" width="0.0801%" height="15" fill="rgb(230,52,42)" fg:x="1223" fg:w="1"/><text x="98.2468%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9968%" y="485" width="0.0801%" height="15" fill="rgb(219,177,53)" fg:x="1223" fg:w="1"/><text x="98.2468%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.9968%" y="469" width="0.0801%" height="15" fill="rgb(243,196,34)" fg:x="1223" fg:w="1"/><text x="98.2468%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9968%" y="453" width="0.0801%" height="15" fill="rgb(213,66,49)" fg:x="1223" fg:w="1"/><text x="98.2468%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.9968%" y="437" width="0.0801%" height="15" fill="rgb(233,11,50)" fg:x="1223" fg:w="1"/><text x="98.2468%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9968%" y="421" width="0.0801%" height="15" fill="rgb(235,190,6)" fg:x="1223" fg:w="1"/><text x="98.2468%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.9968%" y="405" width="0.0801%" height="15" fill="rgb(212,64,44)" fg:x="1223" fg:w="1"/><text x="98.2468%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9968%" y="389" width="0.0801%" height="15" fill="rgb(206,95,44)" fg:x="1223" fg:w="1"/><text x="98.2468%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.9968%" y="373" width="0.0801%" height="15" fill="rgb(227,136,25)" fg:x="1223" fg:w="1"/><text x="98.2468%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9968%" y="357" width="0.0801%" height="15" fill="rgb(206,178,17)" fg:x="1223" fg:w="1"/><text x="98.2468%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="97.9968%" y="341" width="0.0801%" height="15" fill="rgb(208,168,35)" fg:x="1223" fg:w="1"/><text x="98.2468%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="97.9968%" y="325" width="0.0801%" height="15" fill="rgb(213,210,40)" fg:x="1223" fg:w="1"/><text x="98.2468%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.0769%" y="501" width="0.0801%" height="15" fill="rgb(236,60,6)" fg:x="1224" fg:w="1"/><text x="98.3269%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.0769%" y="485" width="0.0801%" height="15" fill="rgb(220,186,36)" fg:x="1224" fg:w="1"/><text x="98.3269%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.0769%" y="469" width="0.0801%" height="15" fill="rgb(225,120,49)" fg:x="1224" fg:w="1"/><text x="98.3269%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.0769%" y="453" width="0.0801%" height="15" fill="rgb(250,115,20)" fg:x="1224" fg:w="1"/><text x="98.3269%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.0769%" y="437" width="0.0801%" height="15" fill="rgb(207,214,23)" fg:x="1224" fg:w="1"/><text x="98.3269%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.0769%" y="421" width="0.0801%" height="15" fill="rgb(240,9,18)" fg:x="1224" fg:w="1"/><text x="98.3269%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.0769%" y="405" width="0.0801%" height="15" fill="rgb(232,170,48)" fg:x="1224" fg:w="1"/><text x="98.3269%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.0769%" y="389" width="0.0801%" height="15" fill="rgb(236,149,23)" fg:x="1224" fg:w="1"/><text x="98.3269%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.0769%" y="373" width="0.0801%" height="15" fill="rgb(210,125,42)" fg:x="1224" fg:w="1"/><text x="98.3269%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.0769%" y="357" width="0.0801%" height="15" fill="rgb(207,201,52)" fg:x="1224" fg:w="1"/><text x="98.3269%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.0769%" y="341" width="0.0801%" height="15" fill="rgb(250,187,37)" fg:x="1224" fg:w="1"/><text x="98.3269%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.0769%" y="325" width="0.0801%" height="15" fill="rgb(214,186,2)" fg:x="1224" fg:w="1"/><text x="98.3269%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.0769%" y="309" width="0.0801%" height="15" fill="rgb(207,189,15)" fg:x="1224" fg:w="1"/><text x="98.3269%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.0769%" y="293" width="0.0801%" height="15" fill="rgb(221,99,21)" fg:x="1224" fg:w="1"/><text x="98.3269%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.0769%" y="277" width="0.0801%" height="15" fill="rgb(212,67,18)" fg:x="1224" fg:w="1"/><text x="98.3269%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.0769%" y="261" width="0.0801%" height="15" fill="rgb(226,24,24)" fg:x="1224" fg:w="1"/><text x="98.3269%" y="271.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="97.9167%" y="581" width="0.3205%" height="15" fill="rgb(252,123,31)" fg:x="1222" fg:w="4"/><text x="98.1667%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="97.9167%" y="565" width="0.3205%" height="15" fill="rgb(251,227,47)" fg:x="1222" fg:w="4"/><text x="98.1667%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="98.0769%" y="549" width="0.1603%" height="15" fill="rgb(233,84,53)" fg:x="1224" fg:w="2"/><text x="98.3269%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="98.0769%" y="533" width="0.1603%" height="15" fill="rgb(228,57,19)" fg:x="1224" fg:w="2"/><text x="98.3269%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="98.0769%" y="517" width="0.1603%" height="15" fill="rgb(251,81,5)" fg:x="1224" fg:w="2"/><text x="98.3269%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.1571%" y="501" width="0.0801%" height="15" fill="rgb(236,211,27)" fg:x="1225" fg:w="1"/><text x="98.4071%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.1571%" y="485" width="0.0801%" height="15" fill="rgb(218,21,6)" fg:x="1225" fg:w="1"/><text x="98.4071%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.1571%" y="469" width="0.0801%" height="15" fill="rgb(239,104,19)" fg:x="1225" fg:w="1"/><text x="98.4071%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.1571%" y="453" width="0.0801%" height="15" fill="rgb(234,179,27)" fg:x="1225" fg:w="1"/><text x="98.4071%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.1571%" y="437" width="0.0801%" height="15" fill="rgb(221,154,39)" fg:x="1225" fg:w="1"/><text x="98.4071%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.1571%" y="421" width="0.0801%" height="15" fill="rgb(228,190,1)" fg:x="1225" fg:w="1"/><text x="98.4071%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.1571%" y="405" width="0.0801%" height="15" fill="rgb(244,122,33)" fg:x="1225" fg:w="1"/><text x="98.4071%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.1571%" y="389" width="0.0801%" height="15" fill="rgb(227,56,37)" fg:x="1225" fg:w="1"/><text x="98.4071%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.2372%" y="517" width="0.0801%" height="15" fill="rgb(207,158,16)" fg:x="1226" fg:w="1"/><text x="98.4872%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.2372%" y="501" width="0.0801%" height="15" fill="rgb(251,222,30)" fg:x="1226" fg:w="1"/><text x="98.4872%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.3974%" y="421" width="0.0801%" height="15" fill="rgb(240,22,49)" fg:x="1228" fg:w="1"/><text x="98.6474%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.3974%" y="437" width="0.1603%" height="15" fill="rgb(224,207,37)" fg:x="1228" fg:w="2"/><text x="98.6474%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.4776%" y="421" width="0.0801%" height="15" fill="rgb(249,188,40)" fg:x="1229" fg:w="1"/><text x="98.7276%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.4776%" y="405" width="0.0801%" height="15" fill="rgb(254,141,11)" fg:x="1229" fg:w="1"/><text x="98.7276%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.4776%" y="389" width="0.0801%" height="15" fill="rgb(231,177,6)" fg:x="1229" fg:w="1"/><text x="98.7276%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.4776%" y="373" width="0.0801%" height="15" fill="rgb(241,6,16)" fg:x="1229" fg:w="1"/><text x="98.7276%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4776%" y="357" width="0.0801%" height="15" fill="rgb(230,50,14)" fg:x="1229" fg:w="1"/><text x="98.7276%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4776%" y="341" width="0.0801%" height="15" fill="rgb(254,36,3)" fg:x="1229" fg:w="1"/><text x="98.7276%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.4776%" y="325" width="0.0801%" height="15" fill="rgb(226,149,37)" fg:x="1229" fg:w="1"/><text x="98.7276%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.5577%" y="405" width="0.0801%" height="15" fill="rgb(253,49,27)" fg:x="1230" fg:w="1"/><text x="98.8077%" y="415.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="98.2372%" y="565" width="0.4808%" height="15" fill="rgb(249,182,52)" fg:x="1226" fg:w="6"/><text x="98.4872%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="98.2372%" y="549" width="0.4808%" height="15" fill="rgb(223,42,15)" fg:x="1226" fg:w="6"/><text x="98.4872%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="98.2372%" y="533" width="0.4808%" height="15" fill="rgb(232,31,42)" fg:x="1226" fg:w="6"/><text x="98.4872%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="98.3173%" y="517" width="0.4006%" height="15" fill="rgb(233,56,46)" fg:x="1227" fg:w="5"/><text x="98.5673%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="98.3173%" y="501" width="0.4006%" height="15" fill="rgb(241,143,21)" fg:x="1227" fg:w="5"/><text x="98.5673%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="98.3173%" y="485" width="0.4006%" height="15" fill="rgb(251,222,15)" fg:x="1227" fg:w="5"/><text x="98.5673%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="98.3974%" y="469" width="0.3205%" height="15" fill="rgb(242,101,40)" fg:x="1228" fg:w="4"/><text x="98.6474%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="98.3974%" y="453" width="0.3205%" height="15" fill="rgb(247,60,44)" fg:x="1228" fg:w="4"/><text x="98.6474%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.5577%" y="437" width="0.1603%" height="15" fill="rgb(254,48,47)" fg:x="1230" fg:w="2"/><text x="98.8077%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.5577%" y="421" width="0.1603%" height="15" fill="rgb(253,30,33)" fg:x="1230" fg:w="2"/><text x="98.8077%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.6378%" y="405" width="0.0801%" height="15" fill="rgb(253,214,47)" fg:x="1231" fg:w="1"/><text x="98.8878%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.6378%" y="389" width="0.0801%" height="15" fill="rgb(241,108,29)" fg:x="1231" fg:w="1"/><text x="98.8878%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.7981%" y="389" width="0.0801%" height="15" fill="rgb(240,36,2)" fg:x="1233" fg:w="1"/><text x="99.0481%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.8782%" y="341" width="0.0801%" height="15" fill="rgb(243,198,24)" fg:x="1234" fg:w="1"/><text x="99.1282%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="98.7981%" y="453" width="0.2404%" height="15" fill="rgb(225,98,27)" fg:x="1233" fg:w="3"/><text x="99.0481%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.7981%" y="437" width="0.2404%" height="15" fill="rgb(208,86,30)" fg:x="1233" fg:w="3"/><text x="99.0481%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="98.7981%" y="421" width="0.2404%" height="15" fill="rgb(242,157,11)" fg:x="1233" fg:w="3"/><text x="99.0481%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.7981%" y="405" width="0.2404%" height="15" fill="rgb(244,84,16)" fg:x="1233" fg:w="3"/><text x="99.0481%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="98.8782%" y="389" width="0.1603%" height="15" fill="rgb(247,20,46)" fg:x="1234" fg:w="2"/><text x="99.1282%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.8782%" y="373" width="0.1603%" height="15" fill="rgb(240,157,20)" fg:x="1234" fg:w="2"/><text x="99.1282%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.8782%" y="357" width="0.1603%" height="15" fill="rgb(212,151,38)" fg:x="1234" fg:w="2"/><text x="99.1282%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.9583%" y="341" width="0.0801%" height="15" fill="rgb(233,197,14)" fg:x="1235" fg:w="1"/><text x="99.2083%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.9583%" y="325" width="0.0801%" height="15" fill="rgb(226,148,28)" fg:x="1235" fg:w="1"/><text x="99.2083%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="98.7981%" y="485" width="0.3205%" height="15" fill="rgb(244,141,30)" fg:x="1233" fg:w="4"/><text x="99.0481%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="98.7981%" y="469" width="0.3205%" height="15" fill="rgb(215,73,38)" fg:x="1233" fg:w="4"/><text x="99.0481%" y="479.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.0385%" y="453" width="0.0801%" height="15" fill="rgb(230,148,29)" fg:x="1236" fg:w="1"/><text x="99.2885%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.0385%" y="437" width="0.0801%" height="15" fill="rgb(250,41,52)" fg:x="1236" fg:w="1"/><text x="99.2885%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.0385%" y="421" width="0.0801%" height="15" fill="rgb(215,48,1)" fg:x="1236" fg:w="1"/><text x="99.2885%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0385%" y="405" width="0.0801%" height="15" fill="rgb(205,223,38)" fg:x="1236" fg:w="1"/><text x="99.2885%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.0385%" y="389" width="0.0801%" height="15" fill="rgb(213,51,8)" fg:x="1236" fg:w="1"/><text x="99.2885%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="99.1186%" y="485" width="0.1603%" height="15" fill="rgb(248,53,11)" fg:x="1237" fg:w="2"/><text x="99.3686%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="99.1186%" y="469" width="0.1603%" height="15" fill="rgb(218,140,4)" fg:x="1237" fg:w="2"/><text x="99.3686%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.1987%" y="453" width="0.0801%" height="15" fill="rgb(248,161,31)" fg:x="1238" fg:w="1"/><text x="99.4487%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.1987%" y="437" width="0.0801%" height="15" fill="rgb(239,88,32)" fg:x="1238" fg:w="1"/><text x="99.4487%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.1987%" y="421" width="0.0801%" height="15" fill="rgb(234,14,28)" fg:x="1238" fg:w="1"/><text x="99.4487%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.1987%" y="405" width="0.0801%" height="15" fill="rgb(235,173,11)" fg:x="1238" fg:w="1"/><text x="99.4487%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="99.2788%" y="405" width="0.1603%" height="15" fill="rgb(222,70,2)" fg:x="1239" fg:w="2"/><text x="99.5288%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.3590%" y="389" width="0.0801%" height="15" fill="rgb(228,196,41)" fg:x="1240" fg:w="1"/><text x="99.6090%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.3590%" y="373" width="0.0801%" height="15" fill="rgb(249,19,9)" fg:x="1240" fg:w="1"/><text x="99.6090%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (16 samples, 1.28%)</title><rect x="98.2372%" y="581" width="1.2821%" height="15" fill="rgb(221,16,43)" fg:x="1226" fg:w="16"/><text x="98.4872%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.80%)</title><rect x="98.7179%" y="565" width="0.8013%" height="15" fill="rgb(225,207,6)" fg:x="1232" fg:w="10"/><text x="98.9679%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="98.7179%" y="549" width="0.8013%" height="15" fill="rgb(249,32,32)" fg:x="1232" fg:w="10"/><text x="98.9679%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (9 samples, 0.72%)</title><rect x="98.7981%" y="533" width="0.7212%" height="15" fill="rgb(232,163,43)" fg:x="1233" fg:w="9"/><text x="99.0481%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="98.7981%" y="517" width="0.7212%" height="15" fill="rgb(236,158,54)" fg:x="1233" fg:w="9"/><text x="99.0481%" y="527.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.72%)</title><rect x="98.7981%" y="501" width="0.7212%" height="15" fill="rgb(205,126,44)" fg:x="1233" fg:w="9"/><text x="99.0481%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.2788%" y="485" width="0.2404%" height="15" fill="rgb(210,162,12)" fg:x="1239" fg:w="3"/><text x="99.5288%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.2788%" y="469" width="0.2404%" height="15" fill="rgb(218,156,48)" fg:x="1239" fg:w="3"/><text x="99.5288%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="99.2788%" y="453" width="0.2404%" height="15" fill="rgb(248,210,3)" fg:x="1239" fg:w="3"/><text x="99.5288%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.2788%" y="437" width="0.2404%" height="15" fill="rgb(212,43,27)" fg:x="1239" fg:w="3"/><text x="99.5288%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.2788%" y="421" width="0.2404%" height="15" fill="rgb(241,52,6)" fg:x="1239" fg:w="3"/><text x="99.5288%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.4391%" y="405" width="0.0801%" height="15" fill="rgb(222,178,35)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4391%" y="389" width="0.0801%" height="15" fill="rgb(205,121,46)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4391%" y="373" width="0.0801%" height="15" fill="rgb(249,67,1)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.4391%" y="357" width="0.0801%" height="15" fill="rgb(238,168,42)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4391%" y="341" width="0.0801%" height="15" fill="rgb(205,36,48)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4391%" y="325" width="0.0801%" height="15" fill="rgb(240,85,12)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="99.5192%" y="581" width="0.1603%" height="15" fill="rgb(245,27,39)" fg:x="1242" fg:w="2"/><text x="99.7692%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="99.5192%" y="565" width="0.1603%" height="15" fill="rgb(218,129,34)" fg:x="1242" fg:w="2"/><text x="99.7692%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.5192%" y="549" width="0.1603%" height="15" fill="rgb(221,157,12)" fg:x="1242" fg:w="2"/><text x="99.7692%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.5192%" y="533" width="0.1603%" height="15" fill="rgb(213,206,20)" fg:x="1242" fg:w="2"/><text x="99.7692%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.5192%" y="517" width="0.1603%" height="15" fill="rgb(227,115,30)" fg:x="1242" fg:w="2"/><text x="99.7692%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.5192%" y="501" width="0.1603%" height="15" fill="rgb(221,40,47)" fg:x="1242" fg:w="2"/><text x="99.7692%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.5192%" y="485" width="0.1603%" height="15" fill="rgb(239,96,49)" fg:x="1242" fg:w="2"/><text x="99.7692%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.6795%" y="581" width="0.0801%" height="15" fill="rgb(223,24,38)" fg:x="1244" fg:w="1"/><text x="99.9295%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (24 samples, 1.92%)</title><rect x="97.9167%" y="613" width="1.9231%" height="15" fill="rgb(242,35,45)" fg:x="1222" fg:w="24"/><text x="98.1667%" y="623.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (24 samples, 1.92%)</title><rect x="97.9167%" y="597" width="1.9231%" height="15" fill="rgb(236,20,9)" fg:x="1222" fg:w="24"/><text x="98.1667%" y="607.50">e..</text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="99.7596%" y="581" width="0.0801%" height="15" fill="rgb(239,124,8)" fg:x="1245" fg:w="1"/><text x="100.0096%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.7596%" y="565" width="0.0801%" height="15" fill="rgb(228,92,29)" fg:x="1245" fg:w="1"/><text x="100.0096%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.7596%" y="549" width="0.0801%" height="15" fill="rgb(251,53,39)" fg:x="1245" fg:w="1"/><text x="100.0096%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.7596%" y="533" width="0.0801%" height="15" fill="rgb(224,44,10)" fg:x="1245" fg:w="1"/><text x="100.0096%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.7596%" y="517" width="0.0801%" height="15" fill="rgb(254,10,15)" fg:x="1245" fg:w="1"/><text x="100.0096%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.7596%" y="501" width="0.0801%" height="15" fill="rgb(245,173,6)" fg:x="1245" fg:w="1"/><text x="100.0096%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.7596%" y="485" width="0.0801%" height="15" fill="rgb(228,74,0)" fg:x="1245" fg:w="1"/><text x="100.0096%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.7596%" y="469" width="0.0801%" height="15" fill="rgb(206,138,29)" fg:x="1245" fg:w="1"/><text x="100.0096%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.7596%" y="453" width="0.0801%" height="15" fill="rgb(253,27,43)" fg:x="1245" fg:w="1"/><text x="100.0096%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.7596%" y="437" width="0.0801%" height="15" fill="rgb(231,73,0)" fg:x="1245" fg:w="1"/><text x="100.0096%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.7596%" y="421" width="0.0801%" height="15" fill="rgb(218,9,23)" fg:x="1245" fg:w="1"/><text x="100.0096%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.7596%" y="405" width="0.0801%" height="15" fill="rgb(251,55,29)" fg:x="1245" fg:w="1"/><text x="100.0096%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.7596%" y="389" width="0.0801%" height="15" fill="rgb(223,180,22)" fg:x="1245" fg:w="1"/><text x="100.0096%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (25 samples, 2.00%)</title><rect x="97.9167%" y="629" width="2.0032%" height="15" fill="rgb(223,29,21)" fg:x="1222" fg:w="25"/><text x="98.1667%" y="639.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="99.8397%" y="613" width="0.0801%" height="15" fill="rgb(251,103,37)" fg:x="1246" fg:w="1"/><text x="100.0897%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.8397%" y="597" width="0.0801%" height="15" fill="rgb(214,11,21)" fg:x="1246" fg:w="1"/><text x="100.0897%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.8397%" y="581" width="0.0801%" height="15" fill="rgb(205,137,13)" fg:x="1246" fg:w="1"/><text x="100.0897%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.8397%" y="565" width="0.0801%" height="15" fill="rgb(225,58,47)" fg:x="1246" fg:w="1"/><text x="100.0897%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.8397%" y="549" width="0.0801%" height="15" fill="rgb(222,197,14)" fg:x="1246" fg:w="1"/><text x="100.0897%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.8397%" y="533" width="0.0801%" height="15" fill="rgb(215,210,33)" fg:x="1246" fg:w="1"/><text x="100.0897%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.8397%" y="517" width="0.0801%" height="15" fill="rgb(242,13,9)" fg:x="1246" fg:w="1"/><text x="100.0897%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.8397%" y="501" width="0.0801%" height="15" fill="rgb(218,31,39)" fg:x="1246" fg:w="1"/><text x="100.0897%" y="511.50"></text></g><g><title>all (1,248 samples, 100%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(211,214,23)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1023.50"></text></g><g><title>simple-2cee43e7 (1,248 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(237,92,14)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1007.50">simple-2cee43e7</text></g><g><title>_start (1,248 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(220,78,5)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="991.50">_start</text></g><g><title>__libc_start_main (1,248 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(237,23,21)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="975.50">__libc_start_main</text></g><g><title>main (1,248 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(251,207,51)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="959.50">main</text></g><g><title>std::rt::lang_start_internal (1,248 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(249,206,18)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="943.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,248 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(236,20,19)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="927.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,248 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(214,227,29)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="911.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,248 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(209,183,4)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="895.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,248 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(233,111,23)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="879.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,248 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(238,121,27)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,248 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(236,120,41)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,248 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(241,143,10)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="831.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,248 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(224,86,31)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="815.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,248 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(236,212,27)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="799.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,248 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(219,43,51)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="783.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,248 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(232,216,8)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="767.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,248 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(206,222,39)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="751.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,248 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(209,149,48)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="735.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (326 samples, 26.12%)</title><rect x="73.8782%" y="709" width="26.1218%" height="15" fill="rgb(229,155,21)" fg:x="922" fg:w="326"/><text x="74.1282%" y="719.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as cr..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (326 samples, 26.12%)</title><rect x="73.8782%" y="693" width="26.1218%" height="15" fill="rgb(246,152,26)" fg:x="922" fg:w="326"/><text x="74.1282%" y="703.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (326 samples, 26.12%)</title><rect x="73.8782%" y="677" width="26.1218%" height="15" fill="rgb(206,70,42)" fg:x="922" fg:w="326"/><text x="74.1282%" y="687.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (55 samples, 4.41%)</title><rect x="95.5929%" y="661" width="4.4071%" height="15" fill="rgb(236,9,11)" fg:x="1193" fg:w="55"/><text x="95.8429%" y="671.50">engin..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (55 samples, 4.41%)</title><rect x="95.5929%" y="645" width="4.4071%" height="15" fill="rgb(238,145,47)" fg:x="1193" fg:w="55"/><text x="95.8429%" y="655.50">engin..</text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (1 samples, 0.08%)</title><rect x="99.9199%" y="629" width="0.0801%" height="15" fill="rgb(252,189,7)" fg:x="1247" fg:w="1"/><text x="100.1699%" y="639.50"></text></g><g><title>engine::users::model::username_to_key (1 samples, 0.08%)</title><rect x="99.9199%" y="613" width="0.0801%" height="15" fill="rgb(254,168,51)" fg:x="1247" fg:w="1"/><text x="100.1699%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="99.9199%" y="597" width="0.0801%" height="15" fill="rgb(227,105,46)" fg:x="1247" fg:w="1"/><text x="100.1699%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.9199%" y="581" width="0.0801%" height="15" fill="rgb(227,74,30)" fg:x="1247" fg:w="1"/><text x="100.1699%" y="591.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::de::Deserialize for engine::users::model::Usernames&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.9199%" y="565" width="0.0801%" height="15" fill="rgb(206,212,44)" fg:x="1247" fg:w="1"/><text x="100.1699%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.9199%" y="549" width="0.0801%" height="15" fill="rgb(252,69,11)" fg:x="1247" fg:w="1"/><text x="100.1699%" y="559.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.9199%" y="533" width="0.0801%" height="15" fill="rgb(239,116,0)" fg:x="1247" fg:w="1"/><text x="100.1699%" y="543.50"></text></g></svg></svg>