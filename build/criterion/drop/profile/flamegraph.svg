<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1014" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="997.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="997.00"> </text><svg id="frames" x="10" width="1180" total_samples="1253"><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="0.2394%" y="597" width="0.1596%" height="15" fill="rgb(227,33,37)" fg:x="3" fg:w="2"/><text x="0.4894%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.2394%" y="581" width="0.1596%" height="15" fill="rgb(224,148,39)" fg:x="3" fg:w="2"/><text x="0.4894%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.6385%" y="501" width="0.0798%" height="15" fill="rgb(232,212,39)" fg:x="8" fg:w="1"/><text x="0.8885%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.7183%" y="501" width="0.0798%" height="15" fill="rgb(251,172,7)" fg:x="9" fg:w="1"/><text x="0.9683%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.7183%" y="485" width="0.0798%" height="15" fill="rgb(219,39,9)" fg:x="9" fg:w="1"/><text x="0.9683%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.8779%" y="485" width="0.1596%" height="15" fill="rgb(228,118,14)" fg:x="11" fg:w="2"/><text x="1.1279%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.8779%" y="469" width="0.1596%" height="15" fill="rgb(207,140,10)" fg:x="11" fg:w="2"/><text x="1.1279%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.9577%" y="453" width="0.0798%" height="15" fill="rgb(227,111,53)" fg:x="12" fg:w="1"/><text x="1.2077%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.0375%" y="485" width="0.1596%" height="15" fill="rgb(216,165,16)" fg:x="13" fg:w="2"/><text x="1.2875%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.3567%" y="453" width="0.0798%" height="15" fill="rgb(226,111,18)" fg:x="17" fg:w="1"/><text x="1.6067%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.5164%" y="437" width="0.0798%" height="15" fill="rgb(251,27,17)" fg:x="19" fg:w="1"/><text x="1.7664%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.5962%" y="437" width="0.1596%" height="15" fill="rgb(254,69,9)" fg:x="20" fg:w="2"/><text x="1.8462%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6760%" y="421" width="0.0798%" height="15" fill="rgb(234,140,37)" fg:x="21" fg:w="1"/><text x="1.9260%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.28%)</title><rect x="0.5587%" y="533" width="1.2769%" height="15" fill="rgb(220,93,8)" fg:x="7" fg:w="16"/><text x="0.8087%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.20%)</title><rect x="0.6385%" y="517" width="1.1971%" height="15" fill="rgb(236,113,3)" fg:x="8" fg:w="15"/><text x="0.8885%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="0.7981%" y="501" width="1.0375%" height="15" fill="rgb(234,108,23)" fg:x="10" fg:w="13"/><text x="1.0481%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="1.1971%" y="485" width="0.6385%" height="15" fill="rgb(205,114,34)" fg:x="15" fg:w="8"/><text x="1.4471%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="1.2769%" y="469" width="0.5587%" height="15" fill="rgb(236,200,45)" fg:x="16" fg:w="7"/><text x="1.5269%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="1.4366%" y="453" width="0.3990%" height="15" fill="rgb(227,194,29)" fg:x="18" fg:w="5"/><text x="1.6866%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="1.7558%" y="437" width="0.0798%" height="15" fill="rgb(250,76,42)" fg:x="22" fg:w="1"/><text x="2.0058%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.52%)</title><rect x="0.3990%" y="581" width="1.5164%" height="15" fill="rgb(208,128,8)" fg:x="5" fg:w="19"/><text x="0.6490%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (18 samples, 1.44%)</title><rect x="0.4789%" y="565" width="1.4366%" height="15" fill="rgb(229,209,35)" fg:x="6" fg:w="18"/><text x="0.7289%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.36%)</title><rect x="0.5587%" y="549" width="1.3567%" height="15" fill="rgb(215,39,53)" fg:x="7" fg:w="17"/><text x="0.8087%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.8356%" y="533" width="0.0798%" height="15" fill="rgb(219,123,41)" fg:x="23" fg:w="1"/><text x="2.0856%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (21 samples, 1.68%)</title><rect x="0.3990%" y="597" width="1.6760%" height="15" fill="rgb(212,158,18)" fg:x="5" fg:w="21"/><text x="0.6490%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.9154%" y="581" width="0.1596%" height="15" fill="rgb(234,196,53)" fg:x="24" fg:w="2"/><text x="2.1654%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 2.08%)</title><rect x="0.0798%" y="613" width="2.0750%" height="15" fill="rgb(210,139,12)" fg:x="1" fg:w="26"/><text x="0.3298%" y="623.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryStorage&gt; (1 samples, 0.08%)</title><rect x="2.0750%" y="597" width="0.0798%" height="15" fill="rgb(220,116,54)" fg:x="26" fg:w="1"/><text x="2.3250%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="2.1548%" y="565" width="0.0798%" height="15" fill="rgb(247,103,28)" fg:x="27" fg:w="1"/><text x="2.4048%" y="575.50"></text></g><g><title>__asprintf (2 samples, 0.16%)</title><rect x="2.4741%" y="485" width="0.1596%" height="15" fill="rgb(253,156,45)" fg:x="31" fg:w="2"/><text x="2.7241%" y="495.50"></text></g><g><title>dlerror (4 samples, 0.32%)</title><rect x="2.3943%" y="501" width="0.3192%" height="15" fill="rgb(237,157,52)" fg:x="30" fg:w="4"/><text x="2.6443%" y="511.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.08%)</title><rect x="2.6337%" y="485" width="0.0798%" height="15" fill="rgb(253,112,16)" fg:x="33" fg:w="1"/><text x="2.8837%" y="495.50"></text></g><g><title>dlopen (19 samples, 1.52%)</title><rect x="2.7135%" y="501" width="1.5164%" height="15" fill="rgb(234,70,18)" fg:x="34" fg:w="19"/><text x="2.9635%" y="511.50"></text></g><g><title>_dl_catch_error (18 samples, 1.44%)</title><rect x="2.7933%" y="485" width="1.4366%" height="15" fill="rgb(247,138,19)" fg:x="35" fg:w="18"/><text x="3.0433%" y="495.50"></text></g><g><title>_dl_catch_exception (18 samples, 1.44%)</title><rect x="2.7933%" y="469" width="1.4366%" height="15" fill="rgb(207,171,1)" fg:x="35" fg:w="18"/><text x="3.0433%" y="479.50"></text></g><g><title>_dl_catch_exception (15 samples, 1.20%)</title><rect x="3.0327%" y="453" width="1.1971%" height="15" fill="rgb(239,213,3)" fg:x="38" fg:w="15"/><text x="3.2827%" y="463.50"></text></g><g><title>_dl_catch_exception (14 samples, 1.12%)</title><rect x="3.1125%" y="437" width="1.1173%" height="15" fill="rgb(226,112,4)" fg:x="39" fg:w="14"/><text x="3.3625%" y="447.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (26 samples, 2.08%)</title><rect x="2.2346%" y="533" width="2.0750%" height="15" fill="rgb(252,170,12)" fg:x="28" fg:w="26"/><text x="2.4846%" y="543.50">&lt;..</text></g><g><title>libloading::safe::Library::new (25 samples, 2.00%)</title><rect x="2.3144%" y="517" width="1.9952%" height="15" fill="rgb(241,106,13)" fg:x="29" fg:w="25"/><text x="2.5644%" y="527.50">l..</text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="4.2298%" y="501" width="0.0798%" height="15" fill="rgb(225,73,23)" fg:x="53" fg:w="1"/><text x="4.4798%" y="511.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="4.2298%" y="485" width="0.0798%" height="15" fill="rgb(251,227,29)" fg:x="53" fg:w="1"/><text x="4.4798%" y="495.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="4.2298%" y="469" width="0.0798%" height="15" fill="rgb(237,144,13)" fg:x="53" fg:w="1"/><text x="4.4798%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="4.2298%" y="453" width="0.0798%" height="15" fill="rgb(232,106,46)" fg:x="53" fg:w="1"/><text x="4.4798%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="4.2298%" y="437" width="0.0798%" height="15" fill="rgb(245,154,53)" fg:x="53" fg:w="1"/><text x="4.4798%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="4.2298%" y="421" width="0.0798%" height="15" fill="rgb(212,119,47)" fg:x="53" fg:w="1"/><text x="4.4798%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="4.2298%" y="405" width="0.0798%" height="15" fill="rgb(253,135,25)" fg:x="53" fg:w="1"/><text x="4.4798%" y="415.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (28 samples, 2.23%)</title><rect x="2.2346%" y="549" width="2.2346%" height="15" fill="rgb(253,208,39)" fg:x="28" fg:w="28"/><text x="2.4846%" y="559.50">k..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="4.3097%" y="533" width="0.1596%" height="15" fill="rgb(226,64,12)" fg:x="54" fg:w="2"/><text x="4.5597%" y="543.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="4.3097%" y="517" width="0.1596%" height="15" fill="rgb(214,162,37)" fg:x="54" fg:w="2"/><text x="4.5597%" y="527.50"></text></g><g><title>engine::session::Session::initialize (29 samples, 2.31%)</title><rect x="2.2346%" y="565" width="2.3144%" height="15" fill="rgb(250,104,5)" fg:x="28" fg:w="29"/><text x="2.4846%" y="575.50">e..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="4.4693%" y="549" width="0.0798%" height="15" fill="rgb(220,202,50)" fg:x="56" fg:w="1"/><text x="4.7193%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.4693%" y="533" width="0.0798%" height="15" fill="rgb(248,67,38)" fg:x="56" fg:w="1"/><text x="4.7193%" y="543.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (32 samples, 2.55%)</title><rect x="2.1548%" y="613" width="2.5539%" height="15" fill="rgb(242,94,35)" fg:x="27" fg:w="32"/><text x="2.4048%" y="623.50">&lt;e..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (32 samples, 2.55%)</title><rect x="2.1548%" y="597" width="2.5539%" height="15" fill="rgb(209,78,37)" fg:x="27" fg:w="32"/><text x="2.4048%" y="607.50">en..</text></g><g><title>engine::session::Session::new (32 samples, 2.55%)</title><rect x="2.1548%" y="581" width="2.5539%" height="15" fill="rgb(230,126,47)" fg:x="27" fg:w="32"/><text x="2.4048%" y="591.50">en..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (2 samples, 0.16%)</title><rect x="4.5491%" y="565" width="0.1596%" height="15" fill="rgb(222,110,35)" fg:x="57" fg:w="2"/><text x="4.7991%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="4.5491%" y="549" width="0.1596%" height="15" fill="rgb(233,154,20)" fg:x="57" fg:w="2"/><text x="4.7991%" y="559.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="4.6289%" y="533" width="0.0798%" height="15" fill="rgb(223,53,50)" fg:x="58" fg:w="1"/><text x="4.8789%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.6289%" y="517" width="0.0798%" height="15" fill="rgb(251,27,26)" fg:x="58" fg:w="1"/><text x="4.8789%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="4.7087%" y="597" width="0.0798%" height="15" fill="rgb(223,189,16)" fg:x="59" fg:w="1"/><text x="4.9587%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="4.7885%" y="597" width="0.3192%" height="15" fill="rgb(207,5,54)" fg:x="60" fg:w="4"/><text x="5.0385%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="4.8683%" y="581" width="0.2394%" height="15" fill="rgb(254,124,50)" fg:x="61" fg:w="3"/><text x="5.1183%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="4.8683%" y="565" width="0.2394%" height="15" fill="rgb(253,193,24)" fg:x="61" fg:w="3"/><text x="5.1183%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="4.8683%" y="549" width="0.2394%" height="15" fill="rgb(235,170,24)" fg:x="61" fg:w="3"/><text x="5.1183%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="4.8683%" y="533" width="0.2394%" height="15" fill="rgb(222,212,52)" fg:x="61" fg:w="3"/><text x="5.1183%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="4.8683%" y="517" width="0.2394%" height="15" fill="rgb(223,17,45)" fg:x="61" fg:w="3"/><text x="5.1183%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="4.8683%" y="501" width="0.2394%" height="15" fill="rgb(227,103,26)" fg:x="61" fg:w="3"/><text x="5.1183%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="4.8683%" y="485" width="0.2394%" height="15" fill="rgb(251,151,25)" fg:x="61" fg:w="3"/><text x="5.1183%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="4.8683%" y="469" width="0.2394%" height="15" fill="rgb(248,144,29)" fg:x="61" fg:w="3"/><text x="5.1183%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="4.8683%" y="453" width="0.2394%" height="15" fill="rgb(245,97,16)" fg:x="61" fg:w="3"/><text x="5.1183%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="4.8683%" y="437" width="0.2394%" height="15" fill="rgb(220,200,29)" fg:x="61" fg:w="3"/><text x="5.1183%" y="447.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="4.8683%" y="421" width="0.2394%" height="15" fill="rgb(206,38,29)" fg:x="61" fg:w="3"/><text x="5.1183%" y="431.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="4.8683%" y="405" width="0.2394%" height="15" fill="rgb(245,19,52)" fg:x="61" fg:w="3"/><text x="5.1183%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="5.1077%" y="597" width="0.0798%" height="15" fill="rgb(205,67,43)" fg:x="64" fg:w="1"/><text x="5.3577%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="5.1077%" y="581" width="0.0798%" height="15" fill="rgb(217,128,23)" fg:x="64" fg:w="1"/><text x="5.3577%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="5.1077%" y="565" width="0.0798%" height="15" fill="rgb(210,109,28)" fg:x="64" fg:w="1"/><text x="5.3577%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.1077%" y="549" width="0.0798%" height="15" fill="rgb(233,181,7)" fg:x="64" fg:w="1"/><text x="5.3577%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="5.1875%" y="581" width="0.2394%" height="15" fill="rgb(244,11,22)" fg:x="65" fg:w="3"/><text x="5.4375%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="5.3472%" y="565" width="0.0798%" height="15" fill="rgb(205,124,54)" fg:x="67" fg:w="1"/><text x="5.5972%" y="575.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="5.4270%" y="581" width="0.0798%" height="15" fill="rgb(218,21,27)" fg:x="68" fg:w="1"/><text x="5.6770%" y="591.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="5.4270%" y="565" width="0.0798%" height="15" fill="rgb(224,153,33)" fg:x="68" fg:w="1"/><text x="5.6770%" y="575.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="5.4270%" y="549" width="0.0798%" height="15" fill="rgb(240,219,28)" fg:x="68" fg:w="1"/><text x="5.6770%" y="559.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="5.4270%" y="533" width="0.0798%" height="15" fill="rgb(214,80,29)" fg:x="68" fg:w="1"/><text x="5.6770%" y="543.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="5.4270%" y="517" width="0.0798%" height="15" fill="rgb(247,148,44)" fg:x="68" fg:w="1"/><text x="5.6770%" y="527.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="5.4270%" y="501" width="0.0798%" height="15" fill="rgb(243,110,30)" fg:x="68" fg:w="1"/><text x="5.6770%" y="511.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="5.4270%" y="485" width="0.0798%" height="15" fill="rgb(243,173,41)" fg:x="68" fg:w="1"/><text x="5.6770%" y="495.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.08%)</title><rect x="5.4270%" y="469" width="0.0798%" height="15" fill="rgb(225,160,47)" fg:x="68" fg:w="1"/><text x="5.6770%" y="479.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.08%)</title><rect x="5.4270%" y="453" width="0.0798%" height="15" fill="rgb(215,44,21)" fg:x="68" fg:w="1"/><text x="5.6770%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="5.5068%" y="517" width="0.1596%" height="15" fill="rgb(248,90,3)" fg:x="69" fg:w="2"/><text x="5.7568%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.5866%" y="501" width="0.0798%" height="15" fill="rgb(220,196,49)" fg:x="70" fg:w="1"/><text x="5.8366%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.5866%" y="485" width="0.0798%" height="15" fill="rgb(217,138,14)" fg:x="70" fg:w="1"/><text x="5.8366%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="5.5866%" y="469" width="0.0798%" height="15" fill="rgb(219,111,20)" fg:x="70" fg:w="1"/><text x="5.8366%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="5.5866%" y="453" width="0.0798%" height="15" fill="rgb(218,114,4)" fg:x="70" fg:w="1"/><text x="5.8366%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="5.5866%" y="437" width="0.0798%" height="15" fill="rgb(238,133,3)" fg:x="70" fg:w="1"/><text x="5.8366%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.5866%" y="421" width="0.0798%" height="15" fill="rgb(224,95,0)" fg:x="70" fg:w="1"/><text x="5.8366%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.5866%" y="405" width="0.0798%" height="15" fill="rgb(220,169,35)" fg:x="70" fg:w="1"/><text x="5.8366%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="5.5866%" y="389" width="0.0798%" height="15" fill="rgb(242,116,47)" fg:x="70" fg:w="1"/><text x="5.8366%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="5.5866%" y="373" width="0.0798%" height="15" fill="rgb(251,42,20)" fg:x="70" fg:w="1"/><text x="5.8366%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="5.5866%" y="357" width="0.0798%" height="15" fill="rgb(234,7,34)" fg:x="70" fg:w="1"/><text x="5.8366%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="5.5866%" y="341" width="0.0798%" height="15" fill="rgb(243,208,13)" fg:x="70" fg:w="1"/><text x="5.8366%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.5866%" y="325" width="0.0798%" height="15" fill="rgb(227,33,28)" fg:x="70" fg:w="1"/><text x="5.8366%" y="335.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="5.5068%" y="549" width="0.2394%" height="15" fill="rgb(250,47,37)" fg:x="69" fg:w="3"/><text x="5.7568%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="5.5068%" y="533" width="0.2394%" height="15" fill="rgb(235,111,52)" fg:x="69" fg:w="3"/><text x="5.7568%" y="543.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="5.6664%" y="517" width="0.0798%" height="15" fill="rgb(223,64,28)" fg:x="71" fg:w="1"/><text x="5.9164%" y="527.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="5.6664%" y="501" width="0.0798%" height="15" fill="rgb(236,67,22)" fg:x="71" fg:w="1"/><text x="5.9164%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.6664%" y="485" width="0.0798%" height="15" fill="rgb(243,79,24)" fg:x="71" fg:w="1"/><text x="5.9164%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="5.9058%" y="485" width="0.3192%" height="15" fill="rgb(241,225,22)" fg:x="74" fg:w="4"/><text x="6.1558%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.0654%" y="469" width="0.1596%" height="15" fill="rgb(228,214,26)" fg:x="76" fg:w="2"/><text x="6.3154%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="6.0654%" y="453" width="0.1596%" height="15" fill="rgb(219,84,52)" fg:x="76" fg:w="2"/><text x="6.3154%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="6.0654%" y="437" width="0.1596%" height="15" fill="rgb(220,12,22)" fg:x="76" fg:w="2"/><text x="6.3154%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="6.0654%" y="421" width="0.1596%" height="15" fill="rgb(219,9,49)" fg:x="76" fg:w="2"/><text x="6.3154%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="6.0654%" y="405" width="0.1596%" height="15" fill="rgb(237,40,43)" fg:x="76" fg:w="2"/><text x="6.3154%" y="415.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="6.0654%" y="389" width="0.1596%" height="15" fill="rgb(212,189,32)" fg:x="76" fg:w="2"/><text x="6.3154%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.2251%" y="469" width="0.0798%" height="15" fill="rgb(247,48,9)" fg:x="78" fg:w="1"/><text x="6.4751%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.3049%" y="437" width="0.0798%" height="15" fill="rgb(247,112,3)" fg:x="79" fg:w="1"/><text x="6.5549%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.3049%" y="421" width="0.0798%" height="15" fill="rgb(243,110,18)" fg:x="79" fg:w="1"/><text x="6.5549%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="6.3847%" y="437" width="0.0798%" height="15" fill="rgb(233,223,44)" fg:x="80" fg:w="1"/><text x="6.6347%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.3847%" y="421" width="0.0798%" height="15" fill="rgb(245,160,20)" fg:x="80" fg:w="1"/><text x="6.6347%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="6.3049%" y="469" width="0.2394%" height="15" fill="rgb(225,37,1)" fg:x="79" fg:w="3"/><text x="6.5549%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="6.3049%" y="453" width="0.2394%" height="15" fill="rgb(253,227,39)" fg:x="79" fg:w="3"/><text x="6.5549%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.4645%" y="437" width="0.0798%" height="15" fill="rgb(240,179,26)" fg:x="81" fg:w="1"/><text x="6.7145%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.4645%" y="421" width="0.0798%" height="15" fill="rgb(237,212,23)" fg:x="81" fg:w="1"/><text x="6.7145%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.4645%" y="405" width="0.0798%" height="15" fill="rgb(221,38,11)" fg:x="81" fg:w="1"/><text x="6.7145%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.5443%" y="469" width="0.1596%" height="15" fill="rgb(215,85,6)" fg:x="82" fg:w="2"/><text x="6.7943%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.6241%" y="453" width="0.0798%" height="15" fill="rgb(239,64,14)" fg:x="83" fg:w="1"/><text x="6.8741%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.6241%" y="437" width="0.0798%" height="15" fill="rgb(215,150,32)" fg:x="83" fg:w="1"/><text x="6.8741%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="6.6241%" y="421" width="0.0798%" height="15" fill="rgb(238,15,13)" fg:x="83" fg:w="1"/><text x="6.8741%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.7837%" y="437" width="0.1596%" height="15" fill="rgb(251,87,8)" fg:x="85" fg:w="2"/><text x="7.0337%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.8635%" y="421" width="0.0798%" height="15" fill="rgb(206,86,1)" fg:x="86" fg:w="1"/><text x="7.1135%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.9433%" y="421" width="0.0798%" height="15" fill="rgb(208,151,45)" fg:x="87" fg:w="1"/><text x="7.1933%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="7.0231%" y="421" width="0.0798%" height="15" fill="rgb(231,181,24)" fg:x="88" fg:w="1"/><text x="7.2731%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="7.1828%" y="405" width="0.4789%" height="15" fill="rgb(240,106,29)" fg:x="90" fg:w="6"/><text x="7.4328%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="7.4222%" y="389" width="0.2394%" height="15" fill="rgb(227,166,11)" fg:x="93" fg:w="3"/><text x="7.6722%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="7.4222%" y="373" width="0.2394%" height="15" fill="rgb(254,14,34)" fg:x="93" fg:w="3"/><text x="7.6722%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="7.4222%" y="357" width="0.2394%" height="15" fill="rgb(223,222,6)" fg:x="93" fg:w="3"/><text x="7.6722%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="7.5818%" y="341" width="0.0798%" height="15" fill="rgb(245,69,24)" fg:x="95" fg:w="1"/><text x="7.8318%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.5818%" y="325" width="0.0798%" height="15" fill="rgb(213,193,7)" fg:x="95" fg:w="1"/><text x="7.8318%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="7.5818%" y="309" width="0.0798%" height="15" fill="rgb(237,92,51)" fg:x="95" fg:w="1"/><text x="7.8318%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="7.1030%" y="421" width="0.6385%" height="15" fill="rgb(225,194,6)" fg:x="89" fg:w="8"/><text x="7.3530%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.6616%" y="405" width="0.0798%" height="15" fill="rgb(205,159,49)" fg:x="96" fg:w="1"/><text x="7.9116%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.6616%" y="389" width="0.0798%" height="15" fill="rgb(219,69,2)" fg:x="96" fg:w="1"/><text x="7.9116%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.6616%" y="373" width="0.0798%" height="15" fill="rgb(215,107,24)" fg:x="96" fg:w="1"/><text x="7.9116%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="6.9433%" y="437" width="0.9577%" height="15" fill="rgb(249,208,29)" fg:x="87" fg:w="12"/><text x="7.1933%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.7414%" y="421" width="0.1596%" height="15" fill="rgb(213,147,10)" fg:x="97" fg:w="2"/><text x="7.9914%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="6.7837%" y="453" width="1.1971%" height="15" fill="rgb(254,140,42)" fg:x="85" fg:w="15"/><text x="7.0337%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.9010%" y="437" width="0.0798%" height="15" fill="rgb(249,9,15)" fg:x="99" fg:w="1"/><text x="8.1510%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.36%)</title><rect x="6.7039%" y="469" width="1.3567%" height="15" fill="rgb(210,19,33)" fg:x="84" fg:w="17"/><text x="6.9539%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.9808%" y="453" width="0.0798%" height="15" fill="rgb(241,121,22)" fg:x="100" fg:w="1"/><text x="8.2308%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.9808%" y="437" width="0.0798%" height="15" fill="rgb(244,69,52)" fg:x="100" fg:w="1"/><text x="8.2308%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.9808%" y="421" width="0.0798%" height="15" fill="rgb(244,191,54)" fg:x="100" fg:w="1"/><text x="8.2308%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (25 samples, 2.00%)</title><rect x="6.2251%" y="485" width="1.9952%" height="15" fill="rgb(250,3,53)" fg:x="78" fg:w="25"/><text x="6.4751%" y="495.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.0607%" y="469" width="0.1596%" height="15" fill="rgb(205,77,3)" fg:x="101" fg:w="2"/><text x="8.3107%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.1405%" y="453" width="0.0798%" height="15" fill="rgb(207,155,3)" fg:x="102" fg:w="1"/><text x="8.3905%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (33 samples, 2.63%)</title><rect x="5.8260%" y="501" width="2.6337%" height="15" fill="rgb(224,79,2)" fg:x="73" fg:w="33"/><text x="6.0760%" y="511.50">se..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="8.2203%" y="485" width="0.2394%" height="15" fill="rgb(243,172,5)" fg:x="103" fg:w="3"/><text x="8.4703%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="8.2203%" y="469" width="0.2394%" height="15" fill="rgb(217,23,43)" fg:x="103" fg:w="3"/><text x="8.4703%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="8.3001%" y="453" width="0.1596%" height="15" fill="rgb(223,109,20)" fg:x="104" fg:w="2"/><text x="8.5501%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="8.3799%" y="437" width="0.0798%" height="15" fill="rgb(232,159,21)" fg:x="105" fg:w="1"/><text x="8.6299%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.3799%" y="421" width="0.0798%" height="15" fill="rgb(219,58,2)" fg:x="105" fg:w="1"/><text x="8.6299%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="8.3799%" y="405" width="0.0798%" height="15" fill="rgb(241,56,8)" fg:x="105" fg:w="1"/><text x="8.6299%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (35 samples, 2.79%)</title><rect x="5.7462%" y="517" width="2.7933%" height="15" fill="rgb(249,10,27)" fg:x="72" fg:w="35"/><text x="5.9962%" y="527.50">&lt;s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.4597%" y="501" width="0.0798%" height="15" fill="rgb(248,177,5)" fg:x="106" fg:w="1"/><text x="8.7097%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.4597%" y="485" width="0.0798%" height="15" fill="rgb(239,12,30)" fg:x="106" fg:w="1"/><text x="8.7097%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.4597%" y="469" width="0.0798%" height="15" fill="rgb(229,164,25)" fg:x="106" fg:w="1"/><text x="8.7097%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.6193%" y="485" width="0.0798%" height="15" fill="rgb(231,217,50)" fg:x="108" fg:w="1"/><text x="8.8693%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="8.7789%" y="453" width="0.0798%" height="15" fill="rgb(247,99,32)" fg:x="110" fg:w="1"/><text x="9.0289%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.9385%" y="437" width="0.0798%" height="15" fill="rgb(240,74,50)" fg:x="112" fg:w="1"/><text x="9.1885%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.0184%" y="437" width="0.0798%" height="15" fill="rgb(218,54,8)" fg:x="113" fg:w="1"/><text x="9.2684%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="9.0982%" y="437" width="0.0798%" height="15" fill="rgb(227,132,20)" fg:x="114" fg:w="1"/><text x="9.3482%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="9.0982%" y="421" width="0.0798%" height="15" fill="rgb(232,134,12)" fg:x="114" fg:w="1"/><text x="9.3482%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="9.0982%" y="405" width="0.0798%" height="15" fill="rgb(250,129,18)" fg:x="114" fg:w="1"/><text x="9.3482%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.1780%" y="421" width="0.0798%" height="15" fill="rgb(232,129,47)" fg:x="115" fg:w="1"/><text x="9.4280%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="8.5395%" y="517" width="0.7981%" height="15" fill="rgb(230,31,40)" fg:x="107" fg:w="10"/><text x="8.7895%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10 samples, 0.80%)</title><rect x="8.5395%" y="501" width="0.7981%" height="15" fill="rgb(232,126,10)" fg:x="107" fg:w="10"/><text x="8.7895%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="8.6991%" y="485" width="0.6385%" height="15" fill="rgb(205,46,31)" fg:x="109" fg:w="8"/><text x="8.9491%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="8.7789%" y="469" width="0.5587%" height="15" fill="rgb(232,37,37)" fg:x="110" fg:w="7"/><text x="9.0289%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="8.8587%" y="453" width="0.4789%" height="15" fill="rgb(240,91,16)" fg:x="111" fg:w="6"/><text x="9.1087%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="9.1780%" y="437" width="0.1596%" height="15" fill="rgb(224,160,9)" fg:x="115" fg:w="2"/><text x="9.4280%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="9.2578%" y="421" width="0.0798%" height="15" fill="rgb(215,116,14)" fg:x="116" fg:w="1"/><text x="9.5078%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="9.2578%" y="405" width="0.0798%" height="15" fill="rgb(235,46,36)" fg:x="116" fg:w="1"/><text x="9.5078%" y="415.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="9.3376%" y="501" width="0.0798%" height="15" fill="rgb(238,39,28)" fg:x="117" fg:w="1"/><text x="9.5876%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::Recorder&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="9.3376%" y="485" width="0.0798%" height="15" fill="rgb(242,125,29)" fg:x="117" fg:w="1"/><text x="9.5876%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="9.5770%" y="469" width="0.1596%" height="15" fill="rgb(238,211,30)" fg:x="120" fg:w="2"/><text x="9.8270%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.8164%" y="437" width="0.0798%" height="15" fill="rgb(227,201,28)" fg:x="123" fg:w="1"/><text x="10.0664%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="9.7366%" y="469" width="0.2394%" height="15" fill="rgb(238,77,29)" fg:x="122" fg:w="3"/><text x="9.9866%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="9.8164%" y="453" width="0.1596%" height="15" fill="rgb(213,221,40)" fg:x="123" fg:w="2"/><text x="10.0664%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="9.8962%" y="437" width="0.0798%" height="15" fill="rgb(226,220,44)" fg:x="124" fg:w="1"/><text x="10.1462%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="9.9761%" y="469" width="0.0798%" height="15" fill="rgb(228,90,23)" fg:x="125" fg:w="1"/><text x="10.2261%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.9761%" y="453" width="0.0798%" height="15" fill="rgb(235,72,29)" fg:x="125" fg:w="1"/><text x="10.2261%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.9761%" y="437" width="0.0798%" height="15" fill="rgb(248,117,39)" fg:x="125" fg:w="1"/><text x="10.2261%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.9761%" y="421" width="0.0798%" height="15" fill="rgb(225,43,28)" fg:x="125" fg:w="1"/><text x="10.2261%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="9.9761%" y="405" width="0.0798%" height="15" fill="rgb(240,93,4)" fg:x="125" fg:w="1"/><text x="10.2261%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="9.9761%" y="389" width="0.0798%" height="15" fill="rgb(234,178,27)" fg:x="125" fg:w="1"/><text x="10.2261%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="10.0559%" y="469" width="0.0798%" height="15" fill="rgb(254,88,22)" fg:x="126" fg:w="1"/><text x="10.3059%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.0559%" y="453" width="0.0798%" height="15" fill="rgb(240,206,50)" fg:x="126" fg:w="1"/><text x="10.3059%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.0559%" y="437" width="0.0798%" height="15" fill="rgb(249,103,8)" fg:x="126" fg:w="1"/><text x="10.3059%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="10.1357%" y="469" width="0.1596%" height="15" fill="rgb(241,178,36)" fg:x="127" fg:w="2"/><text x="10.3857%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="10.1357%" y="453" width="0.1596%" height="15" fill="rgb(246,110,15)" fg:x="127" fg:w="2"/><text x="10.3857%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="10.1357%" y="437" width="0.1596%" height="15" fill="rgb(207,14,43)" fg:x="127" fg:w="2"/><text x="10.3857%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.2155%" y="421" width="0.0798%" height="15" fill="rgb(253,219,19)" fg:x="128" fg:w="1"/><text x="10.4655%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="10.2155%" y="405" width="0.0798%" height="15" fill="rgb(216,126,5)" fg:x="128" fg:w="1"/><text x="10.4655%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (2 samples, 0.16%)</title><rect x="10.6145%" y="437" width="0.1596%" height="15" fill="rgb(218,78,42)" fg:x="133" fg:w="2"/><text x="10.8645%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="10.7741%" y="421" width="0.2394%" height="15" fill="rgb(215,154,40)" fg:x="135" fg:w="3"/><text x="11.0241%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="10.8540%" y="405" width="0.1596%" height="15" fill="rgb(235,129,32)" fg:x="136" fg:w="2"/><text x="11.1040%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="10.8540%" y="389" width="0.1596%" height="15" fill="rgb(218,51,8)" fg:x="136" fg:w="2"/><text x="11.1040%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.0934%" y="373" width="0.0798%" height="15" fill="rgb(245,48,4)" fg:x="139" fg:w="1"/><text x="11.3434%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.0934%" y="357" width="0.0798%" height="15" fill="rgb(250,175,12)" fg:x="139" fg:w="1"/><text x="11.3434%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="11.0136%" y="421" width="0.2394%" height="15" fill="rgb(237,95,40)" fg:x="138" fg:w="3"/><text x="11.2636%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="11.0136%" y="405" width="0.2394%" height="15" fill="rgb(244,120,0)" fg:x="138" fg:w="3"/><text x="11.2636%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="11.0934%" y="389" width="0.1596%" height="15" fill="rgb(241,19,42)" fg:x="139" fg:w="2"/><text x="11.3434%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="11.1732%" y="373" width="0.0798%" height="15" fill="rgb(217,174,48)" fg:x="140" fg:w="1"/><text x="11.4232%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="11.3328%" y="405" width="0.0798%" height="15" fill="rgb(239,36,38)" fg:x="142" fg:w="1"/><text x="11.5828%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="11.4126%" y="405" width="0.0798%" height="15" fill="rgb(220,63,49)" fg:x="143" fg:w="1"/><text x="11.6626%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="11.7318%" y="341" width="0.0798%" height="15" fill="rgb(240,101,13)" fg:x="147" fg:w="1"/><text x="11.9818%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.8915%" y="293" width="0.0798%" height="15" fill="rgb(209,184,51)" fg:x="149" fg:w="1"/><text x="12.1415%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.8915%" y="277" width="0.0798%" height="15" fill="rgb(206,136,39)" fg:x="149" fg:w="1"/><text x="12.1415%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.8915%" y="261" width="0.0798%" height="15" fill="rgb(254,47,45)" fg:x="149" fg:w="1"/><text x="12.1415%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="11.8117%" y="341" width="0.3192%" height="15" fill="rgb(252,103,20)" fg:x="148" fg:w="4"/><text x="12.0617%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="11.8915%" y="325" width="0.2394%" height="15" fill="rgb(230,69,12)" fg:x="149" fg:w="3"/><text x="12.1415%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="11.8915%" y="309" width="0.2394%" height="15" fill="rgb(219,2,28)" fg:x="149" fg:w="3"/><text x="12.1415%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="11.9713%" y="293" width="0.1596%" height="15" fill="rgb(210,9,12)" fg:x="150" fg:w="2"/><text x="12.2213%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="12.0511%" y="277" width="0.0798%" height="15" fill="rgb(235,99,33)" fg:x="151" fg:w="1"/><text x="12.3011%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="11.6520%" y="373" width="0.5587%" height="15" fill="rgb(230,11,38)" fg:x="146" fg:w="7"/><text x="11.9020%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="11.6520%" y="357" width="0.5587%" height="15" fill="rgb(217,129,0)" fg:x="146" fg:w="7"/><text x="11.9020%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.1309%" y="341" width="0.0798%" height="15" fill="rgb(222,198,4)" fg:x="152" fg:w="1"/><text x="12.3809%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (20 samples, 1.60%)</title><rect x="10.7741%" y="437" width="1.5962%" height="15" fill="rgb(246,170,27)" fg:x="135" fg:w="20"/><text x="11.0241%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (14 samples, 1.12%)</title><rect x="11.2530%" y="421" width="1.1173%" height="15" fill="rgb(229,17,28)" fg:x="141" fg:w="14"/><text x="11.5030%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.88%)</title><rect x="11.4924%" y="405" width="0.8779%" height="15" fill="rgb(233,198,48)" fg:x="144" fg:w="11"/><text x="11.7424%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="11.5722%" y="389" width="0.7981%" height="15" fill="rgb(238,103,23)" fg:x="145" fg:w="10"/><text x="11.8222%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="12.2107%" y="373" width="0.1596%" height="15" fill="rgb(206,91,41)" fg:x="153" fg:w="2"/><text x="12.4607%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (23 samples, 1.84%)</title><rect x="10.6145%" y="453" width="1.8356%" height="15" fill="rgb(227,34,25)" fg:x="133" fg:w="23"/><text x="10.8645%" y="463.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="12.3703%" y="437" width="0.0798%" height="15" fill="rgb(210,110,44)" fg:x="155" fg:w="1"/><text x="12.6203%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.4501%" y="453" width="0.0798%" height="15" fill="rgb(216,189,8)" fg:x="156" fg:w="1"/><text x="12.7001%" y="463.50"></text></g><g><title>engine::session::Session::flush (93 samples, 7.42%)</title><rect x="5.1875%" y="597" width="7.4222%" height="15" fill="rgb(234,9,46)" fg:x="65" fg:w="93"/><text x="5.4375%" y="607.50">engine::se..</text></g><g><title>engine::session::state::State::close (89 samples, 7.10%)</title><rect x="5.5068%" y="581" width="7.1030%" height="15" fill="rgb(251,200,5)" fg:x="69" fg:w="89"/><text x="5.7568%" y="591.50">engine::se..</text></g><g><title>engine::session::state::State::flush_entities (89 samples, 7.10%)</title><rect x="5.5068%" y="565" width="7.1030%" height="15" fill="rgb(238,165,37)" fg:x="69" fg:w="89"/><text x="5.7568%" y="575.50">engine::se..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (86 samples, 6.86%)</title><rect x="5.7462%" y="549" width="6.8635%" height="15" fill="rgb(232,77,38)" fg:x="72" fg:w="86"/><text x="5.9962%" y="559.50">engine::s..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (86 samples, 6.86%)</title><rect x="5.7462%" y="533" width="6.8635%" height="15" fill="rgb(253,179,33)" fg:x="72" fg:w="86"/><text x="5.9962%" y="543.50">engine::s..</text></g><g><title>kernel::model::any_entity_changes (41 samples, 3.27%)</title><rect x="9.3376%" y="517" width="3.2721%" height="15" fill="rgb(240,13,35)" fg:x="117" fg:w="41"/><text x="9.5876%" y="527.50">ker..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (40 samples, 3.19%)</title><rect x="9.4174%" y="501" width="3.1923%" height="15" fill="rgb(242,150,49)" fg:x="118" fg:w="40"/><text x="9.6674%" y="511.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (39 samples, 3.11%)</title><rect x="9.4972%" y="485" width="3.1125%" height="15" fill="rgb(237,176,28)" fg:x="119" fg:w="39"/><text x="9.7472%" y="495.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (29 samples, 2.31%)</title><rect x="10.2953%" y="469" width="2.3144%" height="15" fill="rgb(214,176,33)" fg:x="129" fg:w="29"/><text x="10.5453%" y="479.50">s..</text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="12.5299%" y="453" width="0.0798%" height="15" fill="rgb(214,25,12)" fg:x="157" fg:w="1"/><text x="12.7799%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="12.5299%" y="437" width="0.0798%" height="15" fill="rgb(238,190,20)" fg:x="157" fg:w="1"/><text x="12.7799%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="12.6097%" y="565" width="0.0798%" height="15" fill="rgb(208,11,19)" fg:x="158" fg:w="1"/><text x="12.8597%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="12.6097%" y="549" width="0.0798%" height="15" fill="rgb(239,90,4)" fg:x="158" fg:w="1"/><text x="12.8597%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="12.6097%" y="533" width="0.0798%" height="15" fill="rgb(248,110,3)" fg:x="158" fg:w="1"/><text x="12.8597%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="12.6097%" y="517" width="0.0798%" height="15" fill="rgb(210,41,30)" fg:x="158" fg:w="1"/><text x="12.8597%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="12.6097%" y="501" width="0.0798%" height="15" fill="rgb(239,36,8)" fg:x="158" fg:w="1"/><text x="12.8597%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="12.6097%" y="485" width="0.0798%" height="15" fill="rgb(237,201,47)" fg:x="158" fg:w="1"/><text x="12.8597%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="12.6097%" y="469" width="0.0798%" height="15" fill="rgb(224,140,29)" fg:x="158" fg:w="1"/><text x="12.8597%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="12.6097%" y="453" width="0.0798%" height="15" fill="rgb(231,209,17)" fg:x="158" fg:w="1"/><text x="12.8597%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="12.6097%" y="437" width="0.0798%" height="15" fill="rgb(249,196,1)" fg:x="158" fg:w="1"/><text x="12.8597%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="12.6097%" y="421" width="0.0798%" height="15" fill="rgb(223,207,51)" fg:x="158" fg:w="1"/><text x="12.8597%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="12.6097%" y="405" width="0.0798%" height="15" fill="rgb(210,14,40)" fg:x="158" fg:w="1"/><text x="12.8597%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="12.6097%" y="389" width="0.0798%" height="15" fill="rgb(250,20,52)" fg:x="158" fg:w="1"/><text x="12.8597%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="12.6097%" y="373" width="0.0798%" height="15" fill="rgb(241,46,11)" fg:x="158" fg:w="1"/><text x="12.8597%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="12.6097%" y="357" width="0.0798%" height="15" fill="rgb(219,105,5)" fg:x="158" fg:w="1"/><text x="12.8597%" y="367.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="12.6097%" y="341" width="0.0798%" height="15" fill="rgb(252,77,35)" fg:x="158" fg:w="1"/><text x="12.8597%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="12.6097%" y="325" width="0.0798%" height="15" fill="rgb(243,119,2)" fg:x="158" fg:w="1"/><text x="12.8597%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="12.6097%" y="309" width="0.0798%" height="15" fill="rgb(206,82,28)" fg:x="158" fg:w="1"/><text x="12.8597%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="12.6097%" y="293" width="0.0798%" height="15" fill="rgb(227,120,12)" fg:x="158" fg:w="1"/><text x="12.8597%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.6097%" y="277" width="0.0798%" height="15" fill="rgb(229,134,41)" fg:x="158" fg:w="1"/><text x="12.8597%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.6097%" y="261" width="0.0798%" height="15" fill="rgb(239,96,32)" fg:x="158" fg:w="1"/><text x="12.8597%" y="271.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="12.6097%" y="245" width="0.0798%" height="15" fill="rgb(225,46,27)" fg:x="158" fg:w="1"/><text x="12.8597%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="12.6097%" y="229" width="0.0798%" height="15" fill="rgb(215,168,2)" fg:x="158" fg:w="1"/><text x="12.8597%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="12.6097%" y="213" width="0.0798%" height="15" fill="rgb(207,170,52)" fg:x="158" fg:w="1"/><text x="12.8597%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="12.6097%" y="197" width="0.0798%" height="15" fill="rgb(237,198,36)" fg:x="158" fg:w="1"/><text x="12.8597%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="12.6097%" y="181" width="0.0798%" height="15" fill="rgb(213,27,14)" fg:x="158" fg:w="1"/><text x="12.8597%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="12.6097%" y="165" width="0.0798%" height="15" fill="rgb(218,77,5)" fg:x="158" fg:w="1"/><text x="12.8597%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="12.6097%" y="149" width="0.0798%" height="15" fill="rgb(230,219,39)" fg:x="158" fg:w="1"/><text x="12.8597%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="12.6097%" y="133" width="0.0798%" height="15" fill="rgb(245,177,7)" fg:x="158" fg:w="1"/><text x="12.8597%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="12.6097%" y="117" width="0.0798%" height="15" fill="rgb(246,44,46)" fg:x="158" fg:w="1"/><text x="12.8597%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="12.6097%" y="101" width="0.0798%" height="15" fill="rgb(207,173,15)" fg:x="158" fg:w="1"/><text x="12.8597%" y="111.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="12.6097%" y="85" width="0.0798%" height="15" fill="rgb(245,170,50)" fg:x="158" fg:w="1"/><text x="12.8597%" y="95.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="12.6097%" y="69" width="0.0798%" height="15" fill="rgb(233,156,21)" fg:x="158" fg:w="1"/><text x="12.8597%" y="79.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="12.6097%" y="53" width="0.0798%" height="15" fill="rgb(253,146,27)" fg:x="158" fg:w="1"/><text x="12.8597%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.6895%" y="453" width="0.0798%" height="15" fill="rgb(247,66,29)" fg:x="159" fg:w="1"/><text x="12.9395%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.6895%" y="437" width="0.0798%" height="15" fill="rgb(218,207,26)" fg:x="159" fg:w="1"/><text x="12.9395%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.6895%" y="421" width="0.0798%" height="15" fill="rgb(234,93,26)" fg:x="159" fg:w="1"/><text x="12.9395%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.6895%" y="405" width="0.0798%" height="15" fill="rgb(214,75,48)" fg:x="159" fg:w="1"/><text x="12.9395%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.6895%" y="389" width="0.0798%" height="15" fill="rgb(229,119,22)" fg:x="159" fg:w="1"/><text x="12.9395%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.6895%" y="373" width="0.0798%" height="15" fill="rgb(226,153,19)" fg:x="159" fg:w="1"/><text x="12.9395%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.6895%" y="357" width="0.0798%" height="15" fill="rgb(220,204,36)" fg:x="159" fg:w="1"/><text x="12.9395%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.6895%" y="341" width="0.0798%" height="15" fill="rgb(253,181,43)" fg:x="159" fg:w="1"/><text x="12.9395%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.6895%" y="325" width="0.0798%" height="15" fill="rgb(211,41,51)" fg:x="159" fg:w="1"/><text x="12.9395%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.6895%" y="309" width="0.0798%" height="15" fill="rgb(207,215,0)" fg:x="159" fg:w="1"/><text x="12.9395%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.6895%" y="293" width="0.0798%" height="15" fill="rgb(212,153,10)" fg:x="159" fg:w="1"/><text x="12.9395%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.6895%" y="277" width="0.0798%" height="15" fill="rgb(251,171,36)" fg:x="159" fg:w="1"/><text x="12.9395%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="12.6895%" y="565" width="0.1596%" height="15" fill="rgb(225,219,41)" fg:x="159" fg:w="2"/><text x="12.9395%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="12.6895%" y="549" width="0.1596%" height="15" fill="rgb(208,200,1)" fg:x="159" fg:w="2"/><text x="12.9395%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="12.6895%" y="533" width="0.1596%" height="15" fill="rgb(206,75,47)" fg:x="159" fg:w="2"/><text x="12.9395%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.6895%" y="517" width="0.1596%" height="15" fill="rgb(248,3,16)" fg:x="159" fg:w="2"/><text x="12.9395%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.6895%" y="501" width="0.1596%" height="15" fill="rgb(242,157,36)" fg:x="159" fg:w="2"/><text x="12.9395%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.6895%" y="485" width="0.1596%" height="15" fill="rgb(215,175,11)" fg:x="159" fg:w="2"/><text x="12.9395%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.6895%" y="469" width="0.1596%" height="15" fill="rgb(252,222,22)" fg:x="159" fg:w="2"/><text x="12.9395%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.7694%" y="453" width="0.0798%" height="15" fill="rgb(250,121,35)" fg:x="160" fg:w="1"/><text x="13.0194%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.8492%" y="485" width="0.0798%" height="15" fill="rgb(233,120,49)" fg:x="161" fg:w="1"/><text x="13.0992%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="12.8492%" y="517" width="0.1596%" height="15" fill="rgb(205,201,14)" fg:x="161" fg:w="2"/><text x="13.0992%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="12.8492%" y="501" width="0.1596%" height="15" fill="rgb(219,58,45)" fg:x="161" fg:w="2"/><text x="13.0992%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.9290%" y="485" width="0.0798%" height="15" fill="rgb(251,65,12)" fg:x="162" fg:w="1"/><text x="13.1790%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.9290%" y="469" width="0.0798%" height="15" fill="rgb(224,47,31)" fg:x="162" fg:w="1"/><text x="13.1790%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="12.9290%" y="453" width="0.0798%" height="15" fill="rgb(233,74,26)" fg:x="162" fg:w="1"/><text x="13.1790%" y="463.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="12.8492%" y="565" width="0.2394%" height="15" fill="rgb(231,211,31)" fg:x="161" fg:w="3"/><text x="13.0992%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="12.8492%" y="549" width="0.2394%" height="15" fill="rgb(239,167,5)" fg:x="161" fg:w="3"/><text x="13.0992%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="12.8492%" y="533" width="0.2394%" height="15" fill="rgb(241,85,0)" fg:x="161" fg:w="3"/><text x="13.0992%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.0088%" y="517" width="0.0798%" height="15" fill="rgb(229,130,21)" fg:x="163" fg:w="1"/><text x="13.2588%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.0088%" y="501" width="0.0798%" height="15" fill="rgb(254,84,49)" fg:x="163" fg:w="1"/><text x="13.2588%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.0088%" y="485" width="0.0798%" height="15" fill="rgb(235,85,21)" fg:x="163" fg:w="1"/><text x="13.2588%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.0088%" y="469" width="0.0798%" height="15" fill="rgb(246,128,52)" fg:x="163" fg:w="1"/><text x="13.2588%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.0088%" y="453" width="0.0798%" height="15" fill="rgb(243,114,49)" fg:x="163" fg:w="1"/><text x="13.2588%" y="463.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="13.0886%" y="517" width="0.0798%" height="15" fill="rgb(240,224,22)" fg:x="164" fg:w="1"/><text x="13.3386%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.0886%" y="501" width="0.0798%" height="15" fill="rgb(247,201,52)" fg:x="164" fg:w="1"/><text x="13.3386%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.0886%" y="485" width="0.0798%" height="15" fill="rgb(231,70,45)" fg:x="164" fg:w="1"/><text x="13.3386%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.0886%" y="469" width="0.0798%" height="15" fill="rgb(217,215,20)" fg:x="164" fg:w="1"/><text x="13.3386%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.0886%" y="453" width="0.0798%" height="15" fill="rgb(226,170,30)" fg:x="164" fg:w="1"/><text x="13.3386%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.0886%" y="437" width="0.0798%" height="15" fill="rgb(220,190,43)" fg:x="164" fg:w="1"/><text x="13.3386%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.0886%" y="421" width="0.0798%" height="15" fill="rgb(218,20,18)" fg:x="164" fg:w="1"/><text x="13.3386%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.0886%" y="405" width="0.0798%" height="15" fill="rgb(245,37,26)" fg:x="164" fg:w="1"/><text x="13.3386%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.1684%" y="485" width="0.1596%" height="15" fill="rgb(241,127,29)" fg:x="165" fg:w="2"/><text x="13.4184%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.1684%" y="469" width="0.1596%" height="15" fill="rgb(241,33,26)" fg:x="165" fg:w="2"/><text x="13.4184%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.1684%" y="453" width="0.1596%" height="15" fill="rgb(220,106,21)" fg:x="165" fg:w="2"/><text x="13.4184%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.1684%" y="437" width="0.1596%" height="15" fill="rgb(225,125,35)" fg:x="165" fg:w="2"/><text x="13.4184%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="13.1684%" y="421" width="0.1596%" height="15" fill="rgb(248,80,22)" fg:x="165" fg:w="2"/><text x="13.4184%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="13.1684%" y="405" width="0.1596%" height="15" fill="rgb(231,117,39)" fg:x="165" fg:w="2"/><text x="13.4184%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="13.1684%" y="389" width="0.1596%" height="15" fill="rgb(239,183,16)" fg:x="165" fg:w="2"/><text x="13.4184%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="13.1684%" y="373" width="0.1596%" height="15" fill="rgb(221,61,19)" fg:x="165" fg:w="2"/><text x="13.4184%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="13.1684%" y="357" width="0.1596%" height="15" fill="rgb(239,196,44)" fg:x="165" fg:w="2"/><text x="13.4184%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="13.1684%" y="341" width="0.1596%" height="15" fill="rgb(206,113,19)" fg:x="165" fg:w="2"/><text x="13.4184%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="13.1684%" y="325" width="0.1596%" height="15" fill="rgb(245,114,12)" fg:x="165" fg:w="2"/><text x="13.4184%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="13.1684%" y="309" width="0.1596%" height="15" fill="rgb(247,89,39)" fg:x="165" fg:w="2"/><text x="13.4184%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="13.1684%" y="293" width="0.1596%" height="15" fill="rgb(213,85,14)" fg:x="165" fg:w="2"/><text x="13.4184%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="13.1684%" y="277" width="0.1596%" height="15" fill="rgb(249,206,33)" fg:x="165" fg:w="2"/><text x="13.4184%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="13.1684%" y="261" width="0.1596%" height="15" fill="rgb(235,167,47)" fg:x="165" fg:w="2"/><text x="13.4184%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="13.1684%" y="245" width="0.1596%" height="15" fill="rgb(217,177,16)" fg:x="165" fg:w="2"/><text x="13.4184%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.3280%" y="485" width="0.0798%" height="15" fill="rgb(250,228,29)" fg:x="167" fg:w="1"/><text x="13.5780%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="13.3280%" y="469" width="0.0798%" height="15" fill="rgb(216,195,42)" fg:x="167" fg:w="1"/><text x="13.5780%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.3280%" y="453" width="0.0798%" height="15" fill="rgb(232,192,32)" fg:x="167" fg:w="1"/><text x="13.5780%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.3280%" y="437" width="0.0798%" height="15" fill="rgb(211,8,47)" fg:x="167" fg:w="1"/><text x="13.5780%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.3280%" y="421" width="0.0798%" height="15" fill="rgb(251,201,9)" fg:x="167" fg:w="1"/><text x="13.5780%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.3280%" y="405" width="0.0798%" height="15" fill="rgb(206,185,47)" fg:x="167" fg:w="1"/><text x="13.5780%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.3280%" y="389" width="0.0798%" height="15" fill="rgb(245,54,32)" fg:x="167" fg:w="1"/><text x="13.5780%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="13.3280%" y="373" width="0.0798%" height="15" fill="rgb(208,1,8)" fg:x="167" fg:w="1"/><text x="13.5780%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="13.0886%" y="549" width="0.3990%" height="15" fill="rgb(228,57,24)" fg:x="164" fg:w="5"/><text x="13.3386%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="13.0886%" y="533" width="0.3990%" height="15" fill="rgb(251,24,8)" fg:x="164" fg:w="5"/><text x="13.3386%" y="543.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="13.1684%" y="517" width="0.3192%" height="15" fill="rgb(236,196,50)" fg:x="165" fg:w="4"/><text x="13.4184%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="13.1684%" y="501" width="0.3192%" height="15" fill="rgb(246,222,29)" fg:x="165" fg:w="4"/><text x="13.4184%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="13.4078%" y="485" width="0.0798%" height="15" fill="rgb(211,34,40)" fg:x="168" fg:w="1"/><text x="13.6578%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.4078%" y="469" width="0.0798%" height="15" fill="rgb(210,66,51)" fg:x="168" fg:w="1"/><text x="13.6578%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.4078%" y="453" width="0.0798%" height="15" fill="rgb(250,56,43)" fg:x="168" fg:w="1"/><text x="13.6578%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.4078%" y="437" width="0.0798%" height="15" fill="rgb(240,111,50)" fg:x="168" fg:w="1"/><text x="13.6578%" y="447.50"></text></g><g><title>engine::session::internal::Entities::add_entity (16 samples, 1.28%)</title><rect x="13.0886%" y="565" width="1.2769%" height="15" fill="rgb(209,117,13)" fg:x="164" fg:w="16"/><text x="13.3386%" y="575.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (11 samples, 0.88%)</title><rect x="13.4876%" y="549" width="0.8779%" height="15" fill="rgb(232,164,45)" fg:x="169" fg:w="11"/><text x="13.7376%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.88%)</title><rect x="13.4876%" y="533" width="0.8779%" height="15" fill="rgb(205,69,32)" fg:x="169" fg:w="11"/><text x="13.7376%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (11 samples, 0.88%)</title><rect x="13.4876%" y="517" width="0.8779%" height="15" fill="rgb(240,147,45)" fg:x="169" fg:w="11"/><text x="13.7376%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.88%)</title><rect x="13.4876%" y="501" width="0.8779%" height="15" fill="rgb(221,94,48)" fg:x="169" fg:w="11"/><text x="13.7376%" y="511.50"></text></g><g><title>__libc_malloc (11 samples, 0.88%)</title><rect x="13.4876%" y="485" width="0.8779%" height="15" fill="rgb(249,209,17)" fg:x="169" fg:w="11"/><text x="13.7376%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (23 samples, 1.84%)</title><rect x="12.6097%" y="581" width="1.8356%" height="15" fill="rgb(228,57,28)" fg:x="158" fg:w="23"/><text x="12.8597%" y="591.50">&lt;..</text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="14.3655%" y="565" width="0.0798%" height="15" fill="rgb(250,133,26)" fg:x="180" fg:w="1"/><text x="14.6155%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.3655%" y="549" width="0.0798%" height="15" fill="rgb(254,15,16)" fg:x="180" fg:w="1"/><text x="14.6155%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.3655%" y="533" width="0.0798%" height="15" fill="rgb(209,147,42)" fg:x="180" fg:w="1"/><text x="14.6155%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.3655%" y="517" width="0.0798%" height="15" fill="rgb(208,5,29)" fg:x="180" fg:w="1"/><text x="14.6155%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.3655%" y="501" width="0.0798%" height="15" fill="rgb(250,73,31)" fg:x="180" fg:w="1"/><text x="14.6155%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.3655%" y="485" width="0.0798%" height="15" fill="rgb(238,45,10)" fg:x="180" fg:w="1"/><text x="14.6155%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.3655%" y="469" width="0.0798%" height="15" fill="rgb(214,104,5)" fg:x="180" fg:w="1"/><text x="14.6155%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.3655%" y="453" width="0.0798%" height="15" fill="rgb(242,217,19)" fg:x="180" fg:w="1"/><text x="14.6155%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.3655%" y="437" width="0.0798%" height="15" fill="rgb(246,113,27)" fg:x="180" fg:w="1"/><text x="14.6155%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.3655%" y="421" width="0.0798%" height="15" fill="rgb(221,34,27)" fg:x="180" fg:w="1"/><text x="14.6155%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.3655%" y="405" width="0.0798%" height="15" fill="rgb(246,109,6)" fg:x="180" fg:w="1"/><text x="14.6155%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.3655%" y="389" width="0.0798%" height="15" fill="rgb(217,12,25)" fg:x="180" fg:w="1"/><text x="14.6155%" y="399.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="14.3655%" y="373" width="0.0798%" height="15" fill="rgb(250,195,5)" fg:x="180" fg:w="1"/><text x="14.6155%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="14.4453%" y="581" width="0.0798%" height="15" fill="rgb(244,140,45)" fg:x="181" fg:w="1"/><text x="14.6953%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="14.4453%" y="565" width="0.0798%" height="15" fill="rgb(230,64,14)" fg:x="181" fg:w="1"/><text x="14.6953%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.4453%" y="549" width="0.0798%" height="15" fill="rgb(206,27,27)" fg:x="181" fg:w="1"/><text x="14.6953%" y="559.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="14.5251%" y="517" width="0.0798%" height="15" fill="rgb(230,14,50)" fg:x="182" fg:w="1"/><text x="14.7751%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="14.5251%" y="533" width="0.1596%" height="15" fill="rgb(237,172,14)" fg:x="182" fg:w="2"/><text x="14.7751%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="14.6049%" y="517" width="0.0798%" height="15" fill="rgb(209,25,21)" fg:x="183" fg:w="1"/><text x="14.8549%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.6848%" y="485" width="0.0798%" height="15" fill="rgb(248,148,22)" fg:x="184" fg:w="1"/><text x="14.9348%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.6848%" y="469" width="0.0798%" height="15" fill="rgb(234,100,22)" fg:x="184" fg:w="1"/><text x="14.9348%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.6848%" y="453" width="0.0798%" height="15" fill="rgb(210,20,30)" fg:x="184" fg:w="1"/><text x="14.9348%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.6848%" y="437" width="0.0798%" height="15" fill="rgb(232,58,0)" fg:x="184" fg:w="1"/><text x="14.9348%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.6848%" y="421" width="0.0798%" height="15" fill="rgb(221,68,13)" fg:x="184" fg:w="1"/><text x="14.9348%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.6848%" y="405" width="0.0798%" height="15" fill="rgb(231,194,11)" fg:x="184" fg:w="1"/><text x="14.9348%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.7646%" y="485" width="0.0798%" height="15" fill="rgb(235,51,41)" fg:x="185" fg:w="1"/><text x="15.0146%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.7646%" y="469" width="0.0798%" height="15" fill="rgb(240,50,32)" fg:x="185" fg:w="1"/><text x="15.0146%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.7646%" y="453" width="0.0798%" height="15" fill="rgb(240,185,36)" fg:x="185" fg:w="1"/><text x="15.0146%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.7646%" y="437" width="0.0798%" height="15" fill="rgb(211,168,15)" fg:x="185" fg:w="1"/><text x="15.0146%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.7646%" y="421" width="0.0798%" height="15" fill="rgb(221,70,0)" fg:x="185" fg:w="1"/><text x="15.0146%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="14.5251%" y="565" width="0.4789%" height="15" fill="rgb(205,21,33)" fg:x="182" fg:w="6"/><text x="14.7751%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="14.5251%" y="549" width="0.4789%" height="15" fill="rgb(225,106,10)" fg:x="182" fg:w="6"/><text x="14.7751%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="14.6848%" y="533" width="0.3192%" height="15" fill="rgb(236,200,50)" fg:x="184" fg:w="4"/><text x="14.9348%" y="543.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="14.6848%" y="517" width="0.3192%" height="15" fill="rgb(249,93,23)" fg:x="184" fg:w="4"/><text x="14.9348%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="14.6848%" y="501" width="0.3192%" height="15" fill="rgb(244,115,35)" fg:x="184" fg:w="4"/><text x="14.9348%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.8444%" y="485" width="0.1596%" height="15" fill="rgb(231,129,47)" fg:x="186" fg:w="2"/><text x="15.0944%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.8444%" y="469" width="0.1596%" height="15" fill="rgb(225,160,50)" fg:x="186" fg:w="2"/><text x="15.0944%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.8444%" y="453" width="0.1596%" height="15" fill="rgb(218,135,23)" fg:x="186" fg:w="2"/><text x="15.0944%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.8444%" y="437" width="0.1596%" height="15" fill="rgb(227,119,14)" fg:x="186" fg:w="2"/><text x="15.0944%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="14.8444%" y="421" width="0.1596%" height="15" fill="rgb(242,138,13)" fg:x="186" fg:w="2"/><text x="15.0944%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.8444%" y="405" width="0.1596%" height="15" fill="rgb(215,11,16)" fg:x="186" fg:w="2"/><text x="15.0944%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.8444%" y="389" width="0.1596%" height="15" fill="rgb(234,170,50)" fg:x="186" fg:w="2"/><text x="15.0944%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.8444%" y="373" width="0.1596%" height="15" fill="rgb(233,34,20)" fg:x="186" fg:w="2"/><text x="15.0944%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.9242%" y="357" width="0.0798%" height="15" fill="rgb(237,100,45)" fg:x="187" fg:w="1"/><text x="15.1742%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.0040%" y="517" width="0.0798%" height="15" fill="rgb(231,184,36)" fg:x="188" fg:w="1"/><text x="15.2540%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="15.0040%" y="565" width="0.2394%" height="15" fill="rgb(252,93,2)" fg:x="188" fg:w="3"/><text x="15.2540%" y="575.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (3 samples, 0.24%)</title><rect x="15.0040%" y="549" width="0.2394%" height="15" fill="rgb(248,176,47)" fg:x="188" fg:w="3"/><text x="15.2540%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="15.0040%" y="533" width="0.2394%" height="15" fill="rgb(249,125,23)" fg:x="188" fg:w="3"/><text x="15.2540%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="15.0838%" y="517" width="0.1596%" height="15" fill="rgb(239,67,42)" fg:x="189" fg:w="2"/><text x="15.3338%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="15.1636%" y="501" width="0.0798%" height="15" fill="rgb(244,162,4)" fg:x="190" fg:w="1"/><text x="15.4136%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.1636%" y="485" width="0.0798%" height="15" fill="rgb(214,150,38)" fg:x="190" fg:w="1"/><text x="15.4136%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.1636%" y="469" width="0.0798%" height="15" fill="rgb(228,211,28)" fg:x="190" fg:w="1"/><text x="15.4136%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.1636%" y="453" width="0.0798%" height="15" fill="rgb(212,98,48)" fg:x="190" fg:w="1"/><text x="15.4136%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.1636%" y="437" width="0.0798%" height="15" fill="rgb(213,45,13)" fg:x="190" fg:w="1"/><text x="15.4136%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.3232%" y="469" width="0.0798%" height="15" fill="rgb(218,35,29)" fg:x="192" fg:w="1"/><text x="15.5732%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.3232%" y="453" width="0.0798%" height="15" fill="rgb(244,13,3)" fg:x="192" fg:w="1"/><text x="15.5732%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.3232%" y="437" width="0.0798%" height="15" fill="rgb(235,170,19)" fg:x="192" fg:w="1"/><text x="15.5732%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.3232%" y="421" width="0.0798%" height="15" fill="rgb(233,193,43)" fg:x="192" fg:w="1"/><text x="15.5732%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="15.2434%" y="517" width="0.2394%" height="15" fill="rgb(228,223,20)" fg:x="191" fg:w="3"/><text x="15.4934%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="15.3232%" y="501" width="0.1596%" height="15" fill="rgb(208,85,54)" fg:x="192" fg:w="2"/><text x="15.5732%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="15.3232%" y="485" width="0.1596%" height="15" fill="rgb(254,14,45)" fg:x="192" fg:w="2"/><text x="15.5732%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.4030%" y="469" width="0.0798%" height="15" fill="rgb(247,99,29)" fg:x="193" fg:w="1"/><text x="15.6530%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.4030%" y="453" width="0.0798%" height="15" fill="rgb(225,180,54)" fg:x="193" fg:w="1"/><text x="15.6530%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.4030%" y="437" width="0.0798%" height="15" fill="rgb(239,88,43)" fg:x="193" fg:w="1"/><text x="15.6530%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.4030%" y="421" width="0.0798%" height="15" fill="rgb(209,47,11)" fg:x="193" fg:w="1"/><text x="15.6530%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.4030%" y="405" width="0.0798%" height="15" fill="rgb(219,179,23)" fg:x="193" fg:w="1"/><text x="15.6530%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.4030%" y="389" width="0.0798%" height="15" fill="rgb(213,183,19)" fg:x="193" fg:w="1"/><text x="15.6530%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.4828%" y="453" width="0.1596%" height="15" fill="rgb(210,11,9)" fg:x="194" fg:w="2"/><text x="15.7328%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.5626%" y="437" width="0.0798%" height="15" fill="rgb(239,194,16)" fg:x="195" fg:w="1"/><text x="15.8126%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.5626%" y="421" width="0.0798%" height="15" fill="rgb(246,23,50)" fg:x="195" fg:w="1"/><text x="15.8126%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.5626%" y="405" width="0.0798%" height="15" fill="rgb(245,10,41)" fg:x="195" fg:w="1"/><text x="15.8126%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.5626%" y="389" width="0.0798%" height="15" fill="rgb(228,43,24)" fg:x="195" fg:w="1"/><text x="15.8126%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.5626%" y="373" width="0.0798%" height="15" fill="rgb(220,151,0)" fg:x="195" fg:w="1"/><text x="15.8126%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.5626%" y="357" width="0.0798%" height="15" fill="rgb(232,219,10)" fg:x="195" fg:w="1"/><text x="15.8126%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.5626%" y="341" width="0.0798%" height="15" fill="rgb(227,217,48)" fg:x="195" fg:w="1"/><text x="15.8126%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.5626%" y="325" width="0.0798%" height="15" fill="rgb(210,66,35)" fg:x="195" fg:w="1"/><text x="15.8126%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.5626%" y="309" width="0.0798%" height="15" fill="rgb(254,6,7)" fg:x="195" fg:w="1"/><text x="15.8126%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.5626%" y="293" width="0.0798%" height="15" fill="rgb(235,222,42)" fg:x="195" fg:w="1"/><text x="15.8126%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.5626%" y="277" width="0.0798%" height="15" fill="rgb(245,126,5)" fg:x="195" fg:w="1"/><text x="15.8126%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.5626%" y="261" width="0.0798%" height="15" fill="rgb(215,73,17)" fg:x="195" fg:w="1"/><text x="15.8126%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="15.4828%" y="469" width="0.2394%" height="15" fill="rgb(219,198,52)" fg:x="194" fg:w="3"/><text x="15.7328%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.6425%" y="453" width="0.0798%" height="15" fill="rgb(217,159,18)" fg:x="196" fg:w="1"/><text x="15.8925%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.7223%" y="469" width="0.0798%" height="15" fill="rgb(212,177,18)" fg:x="197" fg:w="1"/><text x="15.9723%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.8021%" y="469" width="0.0798%" height="15" fill="rgb(241,10,11)" fg:x="198" fg:w="1"/><text x="16.0521%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.8021%" y="453" width="0.0798%" height="15" fill="rgb(232,114,35)" fg:x="198" fg:w="1"/><text x="16.0521%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.8021%" y="437" width="0.0798%" height="15" fill="rgb(238,222,8)" fg:x="198" fg:w="1"/><text x="16.0521%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.72%)</title><rect x="15.2434%" y="549" width="0.7183%" height="15" fill="rgb(251,153,44)" fg:x="191" fg:w="9"/><text x="15.4934%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (9 samples, 0.72%)</title><rect x="15.2434%" y="533" width="0.7183%" height="15" fill="rgb(210,140,51)" fg:x="191" fg:w="9"/><text x="15.4934%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="15.4828%" y="517" width="0.4789%" height="15" fill="rgb(222,63,0)" fg:x="194" fg:w="6"/><text x="15.7328%" y="527.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="15.4828%" y="501" width="0.4789%" height="15" fill="rgb(240,18,40)" fg:x="194" fg:w="6"/><text x="15.7328%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="15.4828%" y="485" width="0.4789%" height="15" fill="rgb(237,88,16)" fg:x="194" fg:w="6"/><text x="15.7328%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.8819%" y="469" width="0.0798%" height="15" fill="rgb(251,117,13)" fg:x="199" fg:w="1"/><text x="16.1319%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.8819%" y="453" width="0.0798%" height="15" fill="rgb(251,228,8)" fg:x="199" fg:w="1"/><text x="16.1319%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.8819%" y="437" width="0.0798%" height="15" fill="rgb(205,107,49)" fg:x="199" fg:w="1"/><text x="16.1319%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.8819%" y="421" width="0.0798%" height="15" fill="rgb(238,72,41)" fg:x="199" fg:w="1"/><text x="16.1319%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.8819%" y="405" width="0.0798%" height="15" fill="rgb(248,183,52)" fg:x="199" fg:w="1"/><text x="16.1319%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.8819%" y="389" width="0.0798%" height="15" fill="rgb(215,58,20)" fg:x="199" fg:w="1"/><text x="16.1319%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.8819%" y="373" width="0.0798%" height="15" fill="rgb(209,49,13)" fg:x="199" fg:w="1"/><text x="16.1319%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.8819%" y="357" width="0.0798%" height="15" fill="rgb(208,113,17)" fg:x="199" fg:w="1"/><text x="16.1319%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="15.9617%" y="517" width="0.0798%" height="15" fill="rgb(208,14,22)" fg:x="200" fg:w="1"/><text x="16.2117%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="16.0415%" y="517" width="0.0798%" height="15" fill="rgb(222,95,2)" fg:x="201" fg:w="1"/><text x="16.2915%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="16.0415%" y="501" width="0.0798%" height="15" fill="rgb(253,180,37)" fg:x="201" fg:w="1"/><text x="16.2915%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="16.0415%" y="485" width="0.0798%" height="15" fill="rgb(250,81,33)" fg:x="201" fg:w="1"/><text x="16.2915%" y="495.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="16.0415%" y="469" width="0.0798%" height="15" fill="rgb(251,151,41)" fg:x="201" fg:w="1"/><text x="16.2915%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="16.0415%" y="453" width="0.0798%" height="15" fill="rgb(210,135,17)" fg:x="201" fg:w="1"/><text x="16.2915%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.0415%" y="437" width="0.0798%" height="15" fill="rgb(239,21,29)" fg:x="201" fg:w="1"/><text x="16.2915%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.0415%" y="421" width="0.0798%" height="15" fill="rgb(231,215,16)" fg:x="201" fg:w="1"/><text x="16.2915%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.0415%" y="405" width="0.0798%" height="15" fill="rgb(239,151,54)" fg:x="201" fg:w="1"/><text x="16.2915%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.0415%" y="389" width="0.0798%" height="15" fill="rgb(222,122,38)" fg:x="201" fg:w="1"/><text x="16.2915%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.0415%" y="373" width="0.0798%" height="15" fill="rgb(243,128,1)" fg:x="201" fg:w="1"/><text x="16.2915%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.0415%" y="357" width="0.0798%" height="15" fill="rgb(225,74,21)" fg:x="201" fg:w="1"/><text x="16.2915%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.0415%" y="341" width="0.0798%" height="15" fill="rgb(216,210,10)" fg:x="201" fg:w="1"/><text x="16.2915%" y="351.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (12 samples, 0.96%)</title><rect x="15.2434%" y="565" width="0.9577%" height="15" fill="rgb(228,76,19)" fg:x="191" fg:w="12"/><text x="15.4934%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="15.9617%" y="549" width="0.2394%" height="15" fill="rgb(236,80,34)" fg:x="200" fg:w="3"/><text x="16.2117%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="15.9617%" y="533" width="0.2394%" height="15" fill="rgb(225,173,23)" fg:x="200" fg:w="3"/><text x="16.2117%" y="543.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="16.1213%" y="517" width="0.0798%" height="15" fill="rgb(253,38,1)" fg:x="202" fg:w="1"/><text x="16.3713%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.2011%" y="533" width="0.0798%" height="15" fill="rgb(206,155,35)" fg:x="203" fg:w="1"/><text x="16.4511%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="16.2011%" y="549" width="0.1596%" height="15" fill="rgb(254,27,53)" fg:x="203" fg:w="2"/><text x="16.4511%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.2809%" y="533" width="0.0798%" height="15" fill="rgb(225,52,41)" fg:x="204" fg:w="1"/><text x="16.5309%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.2809%" y="517" width="0.0798%" height="15" fill="rgb(244,53,18)" fg:x="204" fg:w="1"/><text x="16.5309%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="16.2809%" y="501" width="0.0798%" height="15" fill="rgb(254,206,48)" fg:x="204" fg:w="1"/><text x="16.5309%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.4405%" y="469" width="0.0798%" height="15" fill="rgb(236,182,23)" fg:x="206" fg:w="1"/><text x="16.6905%" y="479.50"></text></g><g><title>plugins_core::build::Build::holding (51 samples, 4.07%)</title><rect x="12.6097%" y="597" width="4.0702%" height="15" fill="rgb(236,191,37)" fg:x="158" fg:w="51"/><text x="12.8597%" y="607.50">plug..</text></g><g><title>plugins_core::tools::set_container (27 samples, 2.15%)</title><rect x="14.5251%" y="581" width="2.1548%" height="15" fill="rgb(245,53,8)" fg:x="182" fg:w="27"/><text x="14.7751%" y="591.50">p..</text></g><g><title>plugins_core::location::Location::set (6 samples, 0.48%)</title><rect x="16.2011%" y="565" width="0.4789%" height="15" fill="rgb(245,147,9)" fg:x="203" fg:w="6"/><text x="16.4511%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="16.3607%" y="549" width="0.3192%" height="15" fill="rgb(218,24,48)" fg:x="205" fg:w="4"/><text x="16.6107%" y="559.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (4 samples, 0.32%)</title><rect x="16.3607%" y="533" width="0.3192%" height="15" fill="rgb(254,23,9)" fg:x="205" fg:w="4"/><text x="16.6107%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="16.3607%" y="517" width="0.3192%" height="15" fill="rgb(244,105,9)" fg:x="205" fg:w="4"/><text x="16.6107%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (4 samples, 0.32%)</title><rect x="16.3607%" y="501" width="0.3192%" height="15" fill="rgb(212,142,22)" fg:x="205" fg:w="4"/><text x="16.6107%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="16.3607%" y="485" width="0.3192%" height="15" fill="rgb(221,114,49)" fg:x="205" fg:w="4"/><text x="16.6107%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="16.5204%" y="469" width="0.1596%" height="15" fill="rgb(223,210,25)" fg:x="207" fg:w="2"/><text x="16.7704%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="16.5204%" y="453" width="0.1596%" height="15" fill="rgb(235,162,44)" fg:x="207" fg:w="2"/><text x="16.7704%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="16.5204%" y="437" width="0.1596%" height="15" fill="rgb(237,65,45)" fg:x="207" fg:w="2"/><text x="16.7704%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="16.7598%" y="549" width="0.0798%" height="15" fill="rgb(208,79,9)" fg:x="210" fg:w="1"/><text x="17.0098%" y="559.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="16.7598%" y="533" width="0.0798%" height="15" fill="rgb(215,228,8)" fg:x="210" fg:w="1"/><text x="17.0098%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="16.7598%" y="565" width="0.1596%" height="15" fill="rgb(205,185,17)" fg:x="210" fg:w="2"/><text x="17.0098%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="16.8396%" y="549" width="0.0798%" height="15" fill="rgb(213,62,36)" fg:x="211" fg:w="1"/><text x="17.0896%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="16.8396%" y="533" width="0.0798%" height="15" fill="rgb(209,34,9)" fg:x="211" fg:w="1"/><text x="17.0896%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="16.8396%" y="517" width="0.0798%" height="15" fill="rgb(246,151,27)" fg:x="211" fg:w="1"/><text x="17.0896%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="16.8396%" y="501" width="0.0798%" height="15" fill="rgb(218,206,3)" fg:x="211" fg:w="1"/><text x="17.0896%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="16.8396%" y="485" width="0.0798%" height="15" fill="rgb(242,202,1)" fg:x="211" fg:w="1"/><text x="17.0896%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="16.8396%" y="469" width="0.0798%" height="15" fill="rgb(227,185,16)" fg:x="211" fg:w="1"/><text x="17.0896%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="16.8396%" y="453" width="0.0798%" height="15" fill="rgb(241,1,14)" fg:x="211" fg:w="1"/><text x="17.0896%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="16.8396%" y="437" width="0.0798%" height="15" fill="rgb(212,113,25)" fg:x="211" fg:w="1"/><text x="17.0896%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="16.8396%" y="421" width="0.0798%" height="15" fill="rgb(247,37,43)" fg:x="211" fg:w="1"/><text x="17.0896%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="16.8396%" y="405" width="0.0798%" height="15" fill="rgb(226,54,8)" fg:x="211" fg:w="1"/><text x="17.0896%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.9194%" y="517" width="0.0798%" height="15" fill="rgb(251,205,25)" fg:x="212" fg:w="1"/><text x="17.1694%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.9194%" y="501" width="0.0798%" height="15" fill="rgb(246,87,35)" fg:x="212" fg:w="1"/><text x="17.1694%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.9194%" y="485" width="0.0798%" height="15" fill="rgb(251,145,46)" fg:x="212" fg:w="1"/><text x="17.1694%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.9992%" y="485" width="0.0798%" height="15" fill="rgb(210,210,33)" fg:x="213" fg:w="1"/><text x="17.2492%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.0790%" y="453" width="0.0798%" height="15" fill="rgb(221,151,11)" fg:x="214" fg:w="1"/><text x="17.3290%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.1588%" y="437" width="0.0798%" height="15" fill="rgb(208,160,28)" fg:x="215" fg:w="1"/><text x="17.4088%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="16.9992%" y="517" width="0.3192%" height="15" fill="rgb(243,69,29)" fg:x="213" fg:w="4"/><text x="17.2492%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="16.9992%" y="501" width="0.3192%" height="15" fill="rgb(224,144,4)" fg:x="213" fg:w="4"/><text x="17.2492%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="17.0790%" y="485" width="0.2394%" height="15" fill="rgb(211,140,38)" fg:x="214" fg:w="3"/><text x="17.3290%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="17.0790%" y="469" width="0.2394%" height="15" fill="rgb(252,189,15)" fg:x="214" fg:w="3"/><text x="17.3290%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="17.1588%" y="453" width="0.1596%" height="15" fill="rgb(251,175,23)" fg:x="215" fg:w="2"/><text x="17.4088%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.2386%" y="437" width="0.0798%" height="15" fill="rgb(212,184,11)" fg:x="216" fg:w="1"/><text x="17.4886%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.2386%" y="421" width="0.0798%" height="15" fill="rgb(217,205,6)" fg:x="216" fg:w="1"/><text x="17.4886%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="16.9194%" y="565" width="0.5587%" height="15" fill="rgb(235,45,45)" fg:x="212" fg:w="7"/><text x="17.1694%" y="575.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="16.9194%" y="549" width="0.5587%" height="15" fill="rgb(211,157,53)" fg:x="212" fg:w="7"/><text x="17.1694%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="16.9194%" y="533" width="0.5587%" height="15" fill="rgb(212,13,8)" fg:x="212" fg:w="7"/><text x="17.1694%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.3184%" y="517" width="0.1596%" height="15" fill="rgb(218,80,36)" fg:x="217" fg:w="2"/><text x="17.5684%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.3184%" y="501" width="0.1596%" height="15" fill="rgb(211,123,43)" fg:x="217" fg:w="2"/><text x="17.5684%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.3184%" y="485" width="0.1596%" height="15" fill="rgb(206,165,2)" fg:x="217" fg:w="2"/><text x="17.5684%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.3184%" y="469" width="0.1596%" height="15" fill="rgb(248,63,35)" fg:x="217" fg:w="2"/><text x="17.5684%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="17.3184%" y="453" width="0.1596%" height="15" fill="rgb(219,133,41)" fg:x="217" fg:w="2"/><text x="17.5684%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.3184%" y="437" width="0.1596%" height="15" fill="rgb(206,175,46)" fg:x="217" fg:w="2"/><text x="17.5684%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.3184%" y="421" width="0.1596%" height="15" fill="rgb(224,41,35)" fg:x="217" fg:w="2"/><text x="17.5684%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.3982%" y="405" width="0.0798%" height="15" fill="rgb(226,113,24)" fg:x="218" fg:w="1"/><text x="17.6482%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.3982%" y="389" width="0.0798%" height="15" fill="rgb(219,51,41)" fg:x="218" fg:w="1"/><text x="17.6482%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.3982%" y="373" width="0.0798%" height="15" fill="rgb(220,145,47)" fg:x="218" fg:w="1"/><text x="17.6482%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="17.4781%" y="549" width="0.1596%" height="15" fill="rgb(239,121,47)" fg:x="219" fg:w="2"/><text x="17.7281%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="17.4781%" y="533" width="0.1596%" height="15" fill="rgb(207,60,40)" fg:x="219" fg:w="2"/><text x="17.7281%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.5579%" y="517" width="0.0798%" height="15" fill="rgb(224,229,11)" fg:x="220" fg:w="1"/><text x="17.8079%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.5579%" y="501" width="0.0798%" height="15" fill="rgb(252,28,32)" fg:x="220" fg:w="1"/><text x="17.8079%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.5579%" y="485" width="0.0798%" height="15" fill="rgb(207,52,49)" fg:x="220" fg:w="1"/><text x="17.8079%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.5579%" y="469" width="0.0798%" height="15" fill="rgb(243,51,50)" fg:x="220" fg:w="1"/><text x="17.8079%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="17.5579%" y="453" width="0.0798%" height="15" fill="rgb(212,92,21)" fg:x="220" fg:w="1"/><text x="17.8079%" y="463.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="17.4781%" y="565" width="0.2394%" height="15" fill="rgb(230,183,50)" fg:x="219" fg:w="3"/><text x="17.7281%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="17.6377%" y="549" width="0.0798%" height="15" fill="rgb(225,48,9)" fg:x="221" fg:w="1"/><text x="17.8877%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="17.7973%" y="389" width="0.0798%" height="15" fill="rgb(254,44,4)" fg:x="223" fg:w="1"/><text x="18.0473%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.8771%" y="357" width="0.0798%" height="15" fill="rgb(252,128,37)" fg:x="224" fg:w="1"/><text x="18.1271%" y="367.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="17.7175%" y="517" width="0.3192%" height="15" fill="rgb(227,178,8)" fg:x="222" fg:w="4"/><text x="17.9675%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="17.7175%" y="501" width="0.3192%" height="15" fill="rgb(205,206,32)" fg:x="222" fg:w="4"/><text x="17.9675%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="17.7175%" y="485" width="0.3192%" height="15" fill="rgb(220,218,22)" fg:x="222" fg:w="4"/><text x="17.9675%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.7973%" y="469" width="0.2394%" height="15" fill="rgb(236,41,28)" fg:x="223" fg:w="3"/><text x="18.0473%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="17.7973%" y="453" width="0.2394%" height="15" fill="rgb(219,37,7)" fg:x="223" fg:w="3"/><text x="18.0473%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.7973%" y="437" width="0.2394%" height="15" fill="rgb(206,160,15)" fg:x="223" fg:w="3"/><text x="18.0473%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="17.7973%" y="421" width="0.2394%" height="15" fill="rgb(208,82,21)" fg:x="223" fg:w="3"/><text x="18.0473%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.7973%" y="405" width="0.2394%" height="15" fill="rgb(226,130,25)" fg:x="223" fg:w="3"/><text x="18.0473%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.8771%" y="389" width="0.1596%" height="15" fill="rgb(212,72,24)" fg:x="224" fg:w="2"/><text x="18.1271%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.8771%" y="373" width="0.1596%" height="15" fill="rgb(206,28,16)" fg:x="224" fg:w="2"/><text x="18.1271%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.9569%" y="357" width="0.0798%" height="15" fill="rgb(249,41,5)" fg:x="225" fg:w="1"/><text x="18.2069%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.9569%" y="341" width="0.0798%" height="15" fill="rgb(233,96,48)" fg:x="225" fg:w="1"/><text x="18.2069%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="17.9569%" y="325" width="0.0798%" height="15" fill="rgb(240,198,11)" fg:x="225" fg:w="1"/><text x="18.2069%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (2 samples, 0.16%)</title><rect x="18.0367%" y="501" width="0.1596%" height="15" fill="rgb(209,175,35)" fg:x="226" fg:w="2"/><text x="18.2867%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="18.0367%" y="485" width="0.1596%" height="15" fill="rgb(214,40,51)" fg:x="226" fg:w="2"/><text x="18.2867%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.2761%" y="485" width="0.0798%" height="15" fill="rgb(252,56,4)" fg:x="229" fg:w="1"/><text x="18.5261%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.2761%" y="469" width="0.0798%" height="15" fill="rgb(219,131,5)" fg:x="229" fg:w="1"/><text x="18.5261%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (9 samples, 0.72%)</title><rect x="17.7175%" y="549" width="0.7183%" height="15" fill="rgb(223,67,53)" fg:x="222" fg:w="9"/><text x="17.9675%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (9 samples, 0.72%)</title><rect x="17.7175%" y="533" width="0.7183%" height="15" fill="rgb(227,154,8)" fg:x="222" fg:w="9"/><text x="17.9675%" y="543.50"></text></g><g><title>kernel::model::props::save_props (5 samples, 0.40%)</title><rect x="18.0367%" y="517" width="0.3990%" height="15" fill="rgb(216,174,51)" fg:x="226" fg:w="5"/><text x="18.2867%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="18.1963%" y="501" width="0.2394%" height="15" fill="rgb(239,60,34)" fg:x="228" fg:w="3"/><text x="18.4463%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="18.3559%" y="485" width="0.0798%" height="15" fill="rgb(236,165,48)" fg:x="230" fg:w="1"/><text x="18.6059%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.3559%" y="469" width="0.0798%" height="15" fill="rgb(210,37,26)" fg:x="230" fg:w="1"/><text x="18.6059%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="18.3559%" y="453" width="0.0798%" height="15" fill="rgb(211,3,17)" fg:x="230" fg:w="1"/><text x="18.6059%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.3559%" y="437" width="0.0798%" height="15" fill="rgb(234,88,49)" fg:x="230" fg:w="1"/><text x="18.6059%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="18.3559%" y="421" width="0.0798%" height="15" fill="rgb(233,40,17)" fg:x="230" fg:w="1"/><text x="18.6059%" y="431.50"></text></g><g><title>plugins_core::build::Build::into_entry (23 samples, 1.84%)</title><rect x="16.6800%" y="597" width="1.8356%" height="15" fill="rgb(235,127,31)" fg:x="209" fg:w="23"/><text x="16.9300%" y="607.50">p..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (23 samples, 1.84%)</title><rect x="16.6800%" y="581" width="1.8356%" height="15" fill="rgb(248,167,17)" fg:x="209" fg:w="23"/><text x="16.9300%" y="591.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_entity (10 samples, 0.80%)</title><rect x="17.7175%" y="565" width="0.7981%" height="15" fill="rgb(218,179,8)" fg:x="222" fg:w="10"/><text x="17.9675%" y="575.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="18.4358%" y="549" width="0.0798%" height="15" fill="rgb(216,92,14)" fg:x="231" fg:w="1"/><text x="18.6858%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="18.5156%" y="565" width="0.0798%" height="15" fill="rgb(221,198,46)" fg:x="232" fg:w="1"/><text x="18.7656%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.5156%" y="549" width="0.0798%" height="15" fill="rgb(244,7,25)" fg:x="232" fg:w="1"/><text x="18.7656%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.5156%" y="533" width="0.0798%" height="15" fill="rgb(233,75,6)" fg:x="232" fg:w="1"/><text x="18.7656%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="18.5156%" y="517" width="0.0798%" height="15" fill="rgb(240,189,41)" fg:x="232" fg:w="1"/><text x="18.7656%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.5954%" y="517" width="0.0798%" height="15" fill="rgb(237,157,21)" fg:x="233" fg:w="1"/><text x="18.8454%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.5954%" y="501" width="0.0798%" height="15" fill="rgb(210,136,49)" fg:x="233" fg:w="1"/><text x="18.8454%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="18.5954%" y="533" width="0.2394%" height="15" fill="rgb(210,68,29)" fg:x="233" fg:w="3"/><text x="18.8454%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="18.6752%" y="517" width="0.1596%" height="15" fill="rgb(247,207,20)" fg:x="234" fg:w="2"/><text x="18.9252%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.8348%" y="533" width="0.0798%" height="15" fill="rgb(224,73,48)" fg:x="236" fg:w="1"/><text x="19.0848%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="18.8348%" y="517" width="0.0798%" height="15" fill="rgb(215,136,47)" fg:x="236" fg:w="1"/><text x="19.0848%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.8348%" y="501" width="0.0798%" height="15" fill="rgb(232,222,16)" fg:x="236" fg:w="1"/><text x="19.0848%" y="511.50"></text></g><g><title>kernel::model::props::save_props (5 samples, 0.40%)</title><rect x="18.5954%" y="565" width="0.3990%" height="15" fill="rgb(249,202,47)" fg:x="233" fg:w="5"/><text x="18.8454%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="18.5954%" y="549" width="0.3990%" height="15" fill="rgb(236,56,8)" fg:x="233" fg:w="5"/><text x="18.8454%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="18.9146%" y="533" width="0.0798%" height="15" fill="rgb(222,6,3)" fg:x="237" fg:w="1"/><text x="19.1646%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.9146%" y="517" width="0.0798%" height="15" fill="rgb(254,222,28)" fg:x="237" fg:w="1"/><text x="19.1646%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.9146%" y="501" width="0.0798%" height="15" fill="rgb(219,57,23)" fg:x="237" fg:w="1"/><text x="19.1646%" y="511.50"></text></g><g><title>plugins_core::build::Build::named (7 samples, 0.56%)</title><rect x="18.5156%" y="597" width="0.5587%" height="15" fill="rgb(251,106,48)" fg:x="232" fg:w="7"/><text x="18.7656%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (7 samples, 0.56%)</title><rect x="18.5156%" y="581" width="0.5587%" height="15" fill="rgb(242,2,23)" fg:x="232" fg:w="7"/><text x="18.7656%" y="591.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="18.9944%" y="565" width="0.0798%" height="15" fill="rgb(212,109,31)" fg:x="238" fg:w="1"/><text x="19.2444%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.9944%" y="549" width="0.0798%" height="15" fill="rgb(241,9,22)" fg:x="238" fg:w="1"/><text x="19.2444%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="19.2338%" y="565" width="0.0798%" height="15" fill="rgb(209,64,27)" fg:x="241" fg:w="1"/><text x="19.4838%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="19.2338%" y="549" width="0.0798%" height="15" fill="rgb(248,13,44)" fg:x="241" fg:w="1"/><text x="19.4838%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="19.2338%" y="533" width="0.0798%" height="15" fill="rgb(213,86,6)" fg:x="241" fg:w="1"/><text x="19.4838%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="19.2338%" y="517" width="0.0798%" height="15" fill="rgb(247,11,18)" fg:x="241" fg:w="1"/><text x="19.4838%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="19.2338%" y="501" width="0.0798%" height="15" fill="rgb(252,31,11)" fg:x="241" fg:w="1"/><text x="19.4838%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="19.2338%" y="485" width="0.0798%" height="15" fill="rgb(215,63,51)" fg:x="241" fg:w="1"/><text x="19.4838%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="19.2338%" y="469" width="0.0798%" height="15" fill="rgb(222,180,4)" fg:x="241" fg:w="1"/><text x="19.4838%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="19.2338%" y="453" width="0.0798%" height="15" fill="rgb(233,4,23)" fg:x="241" fg:w="1"/><text x="19.4838%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="19.2338%" y="437" width="0.0798%" height="15" fill="rgb(230,116,22)" fg:x="241" fg:w="1"/><text x="19.4838%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="19.2338%" y="421" width="0.0798%" height="15" fill="rgb(222,20,14)" fg:x="241" fg:w="1"/><text x="19.4838%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="19.2338%" y="405" width="0.0798%" height="15" fill="rgb(210,176,43)" fg:x="241" fg:w="1"/><text x="19.4838%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="19.2338%" y="389" width="0.0798%" height="15" fill="rgb(219,67,32)" fg:x="241" fg:w="1"/><text x="19.4838%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="19.2338%" y="373" width="0.0798%" height="15" fill="rgb(228,91,39)" fg:x="241" fg:w="1"/><text x="19.4838%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.2338%" y="357" width="0.0798%" height="15" fill="rgb(254,63,14)" fg:x="241" fg:w="1"/><text x="19.4838%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.2338%" y="341" width="0.0798%" height="15" fill="rgb(216,171,39)" fg:x="241" fg:w="1"/><text x="19.4838%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="19.2338%" y="325" width="0.0798%" height="15" fill="rgb(248,68,25)" fg:x="241" fg:w="1"/><text x="19.4838%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="19.2338%" y="309" width="0.0798%" height="15" fill="rgb(239,63,16)" fg:x="241" fg:w="1"/><text x="19.4838%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="19.2338%" y="293" width="0.0798%" height="15" fill="rgb(225,111,43)" fg:x="241" fg:w="1"/><text x="19.4838%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="19.2338%" y="277" width="0.0798%" height="15" fill="rgb(246,165,17)" fg:x="241" fg:w="1"/><text x="19.4838%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.3136%" y="453" width="0.0798%" height="15" fill="rgb(208,124,1)" fg:x="242" fg:w="1"/><text x="19.5636%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.3136%" y="437" width="0.0798%" height="15" fill="rgb(234,147,33)" fg:x="242" fg:w="1"/><text x="19.5636%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.3136%" y="517" width="0.1596%" height="15" fill="rgb(240,86,30)" fg:x="242" fg:w="2"/><text x="19.5636%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.3136%" y="501" width="0.1596%" height="15" fill="rgb(237,34,51)" fg:x="242" fg:w="2"/><text x="19.5636%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.3136%" y="485" width="0.1596%" height="15" fill="rgb(232,131,41)" fg:x="242" fg:w="2"/><text x="19.5636%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.3136%" y="469" width="0.1596%" height="15" fill="rgb(227,129,53)" fg:x="242" fg:w="2"/><text x="19.5636%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.3935%" y="453" width="0.0798%" height="15" fill="rgb(230,90,35)" fg:x="243" fg:w="1"/><text x="19.6435%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.4733%" y="517" width="0.0798%" height="15" fill="rgb(248,88,27)" fg:x="244" fg:w="1"/><text x="19.7233%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="19.4733%" y="501" width="0.0798%" height="15" fill="rgb(223,18,17)" fg:x="244" fg:w="1"/><text x="19.7233%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.4733%" y="485" width="0.0798%" height="15" fill="rgb(241,11,10)" fg:x="244" fg:w="1"/><text x="19.7233%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.4733%" y="469" width="0.0798%" height="15" fill="rgb(232,111,52)" fg:x="244" fg:w="1"/><text x="19.7233%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="19.2338%" y="581" width="0.3990%" height="15" fill="rgb(228,67,8)" fg:x="241" fg:w="5"/><text x="19.4838%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="19.3136%" y="565" width="0.3192%" height="15" fill="rgb(251,168,31)" fg:x="242" fg:w="4"/><text x="19.5636%" y="575.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="19.3136%" y="549" width="0.3192%" height="15" fill="rgb(249,164,11)" fg:x="242" fg:w="4"/><text x="19.5636%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="19.3136%" y="533" width="0.3192%" height="15" fill="rgb(239,81,9)" fg:x="242" fg:w="4"/><text x="19.5636%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.5531%" y="517" width="0.0798%" height="15" fill="rgb(222,145,38)" fg:x="245" fg:w="1"/><text x="19.8031%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.5531%" y="501" width="0.0798%" height="15" fill="rgb(238,80,54)" fg:x="245" fg:w="1"/><text x="19.8031%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.5531%" y="485" width="0.0798%" height="15" fill="rgb(237,116,16)" fg:x="245" fg:w="1"/><text x="19.8031%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.5531%" y="469" width="0.0798%" height="15" fill="rgb(218,135,19)" fg:x="245" fg:w="1"/><text x="19.8031%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.5531%" y="453" width="0.0798%" height="15" fill="rgb(216,207,44)" fg:x="245" fg:w="1"/><text x="19.8031%" y="463.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.6329%" y="581" width="0.0798%" height="15" fill="rgb(226,152,40)" fg:x="246" fg:w="1"/><text x="19.8829%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.6329%" y="565" width="0.0798%" height="15" fill="rgb(219,98,35)" fg:x="246" fg:w="1"/><text x="19.8829%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.6329%" y="549" width="0.0798%" height="15" fill="rgb(222,136,46)" fg:x="246" fg:w="1"/><text x="19.8829%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.6329%" y="533" width="0.0798%" height="15" fill="rgb(222,71,8)" fg:x="246" fg:w="1"/><text x="19.8829%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.6329%" y="517" width="0.0798%" height="15" fill="rgb(209,89,53)" fg:x="246" fg:w="1"/><text x="19.8829%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.6329%" y="501" width="0.0798%" height="15" fill="rgb(210,97,51)" fg:x="246" fg:w="1"/><text x="19.8829%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="19.6329%" y="485" width="0.0798%" height="15" fill="rgb(248,65,21)" fg:x="246" fg:w="1"/><text x="19.8829%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="19.6329%" y="469" width="0.0798%" height="15" fill="rgb(222,5,31)" fg:x="246" fg:w="1"/><text x="19.8829%" y="479.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="19.7127%" y="581" width="0.1596%" height="15" fill="rgb(241,16,30)" fg:x="247" fg:w="2"/><text x="19.9627%" y="591.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="19.7127%" y="565" width="0.1596%" height="15" fill="rgb(215,86,30)" fg:x="247" fg:w="2"/><text x="19.9627%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="19.7925%" y="549" width="0.0798%" height="15" fill="rgb(235,26,44)" fg:x="248" fg:w="1"/><text x="20.0425%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.7925%" y="533" width="0.0798%" height="15" fill="rgb(228,147,14)" fg:x="248" fg:w="1"/><text x="20.0425%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="19.8723%" y="581" width="0.1596%" height="15" fill="rgb(253,38,50)" fg:x="249" fg:w="2"/><text x="20.1223%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="20.0319%" y="517" width="0.0798%" height="15" fill="rgb(251,151,16)" fg:x="251" fg:w="1"/><text x="20.2819%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="20.0319%" y="501" width="0.0798%" height="15" fill="rgb(224,64,19)" fg:x="251" fg:w="1"/><text x="20.2819%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="20.0319%" y="485" width="0.0798%" height="15" fill="rgb(235,214,47)" fg:x="251" fg:w="1"/><text x="20.2819%" y="495.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="20.0319%" y="469" width="0.0798%" height="15" fill="rgb(218,15,19)" fg:x="251" fg:w="1"/><text x="20.2819%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.1117%" y="453" width="0.0798%" height="15" fill="rgb(247,209,3)" fg:x="252" fg:w="1"/><text x="20.3617%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="20.1117%" y="517" width="0.1596%" height="15" fill="rgb(217,29,2)" fg:x="252" fg:w="2"/><text x="20.3617%" y="527.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="20.1117%" y="501" width="0.1596%" height="15" fill="rgb(234,9,9)" fg:x="252" fg:w="2"/><text x="20.3617%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="20.1117%" y="485" width="0.1596%" height="15" fill="rgb(207,43,14)" fg:x="252" fg:w="2"/><text x="20.3617%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="20.1117%" y="469" width="0.1596%" height="15" fill="rgb(216,219,36)" fg:x="252" fg:w="2"/><text x="20.3617%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="20.1915%" y="453" width="0.0798%" height="15" fill="rgb(238,12,26)" fg:x="253" fg:w="1"/><text x="20.4415%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.1915%" y="437" width="0.0798%" height="15" fill="rgb(226,67,30)" fg:x="253" fg:w="1"/><text x="20.4415%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="20.1915%" y="421" width="0.0798%" height="15" fill="rgb(229,154,7)" fg:x="253" fg:w="1"/><text x="20.4415%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="20.1915%" y="405" width="0.0798%" height="15" fill="rgb(249,90,18)" fg:x="253" fg:w="1"/><text x="20.4415%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="20.2713%" y="357" width="0.0798%" height="15" fill="rgb(223,53,15)" fg:x="254" fg:w="1"/><text x="20.5213%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.2713%" y="421" width="0.1596%" height="15" fill="rgb(253,86,38)" fg:x="254" fg:w="2"/><text x="20.5213%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.2713%" y="405" width="0.1596%" height="15" fill="rgb(222,198,9)" fg:x="254" fg:w="2"/><text x="20.5213%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="20.2713%" y="389" width="0.1596%" height="15" fill="rgb(240,146,25)" fg:x="254" fg:w="2"/><text x="20.5213%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.2713%" y="373" width="0.1596%" height="15" fill="rgb(225,38,10)" fg:x="254" fg:w="2"/><text x="20.5213%" y="383.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="20.3512%" y="357" width="0.0798%" height="15" fill="rgb(246,93,4)" fg:x="255" fg:w="1"/><text x="20.6012%" y="367.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (6 samples, 0.48%)</title><rect x="20.0319%" y="533" width="0.4789%" height="15" fill="rgb(222,55,18)" fg:x="251" fg:w="6"/><text x="20.2819%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="20.2713%" y="517" width="0.2394%" height="15" fill="rgb(233,137,48)" fg:x="254" fg:w="3"/><text x="20.5213%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="20.2713%" y="501" width="0.2394%" height="15" fill="rgb(214,8,54)" fg:x="254" fg:w="3"/><text x="20.5213%" y="511.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="20.2713%" y="485" width="0.2394%" height="15" fill="rgb(206,75,4)" fg:x="254" fg:w="3"/><text x="20.5213%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="20.2713%" y="469" width="0.2394%" height="15" fill="rgb(238,171,14)" fg:x="254" fg:w="3"/><text x="20.5213%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="20.2713%" y="453" width="0.2394%" height="15" fill="rgb(233,70,41)" fg:x="254" fg:w="3"/><text x="20.5213%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="20.2713%" y="437" width="0.2394%" height="15" fill="rgb(214,68,36)" fg:x="254" fg:w="3"/><text x="20.5213%" y="447.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="20.4310%" y="421" width="0.0798%" height="15" fill="rgb(223,29,5)" fg:x="256" fg:w="1"/><text x="20.6810%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.6704%" y="389" width="0.0798%" height="15" fill="rgb(251,22,40)" fg:x="259" fg:w="1"/><text x="20.9204%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.6704%" y="373" width="0.0798%" height="15" fill="rgb(210,67,41)" fg:x="259" fg:w="1"/><text x="20.9204%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.7502%" y="389" width="0.0798%" height="15" fill="rgb(225,177,31)" fg:x="260" fg:w="1"/><text x="21.0002%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="20.5108%" y="453" width="0.3990%" height="15" fill="rgb(221,229,11)" fg:x="257" fg:w="5"/><text x="20.7608%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="20.5108%" y="437" width="0.3990%" height="15" fill="rgb(247,172,52)" fg:x="257" fg:w="5"/><text x="20.7608%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="20.5906%" y="421" width="0.3192%" height="15" fill="rgb(212,73,19)" fg:x="258" fg:w="4"/><text x="20.8406%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="20.6704%" y="405" width="0.2394%" height="15" fill="rgb(244,7,46)" fg:x="259" fg:w="3"/><text x="20.9204%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.8300%" y="389" width="0.0798%" height="15" fill="rgb(230,113,20)" fg:x="261" fg:w="1"/><text x="21.0800%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.9098%" y="453" width="0.0798%" height="15" fill="rgb(209,97,30)" fg:x="262" fg:w="1"/><text x="21.1598%" y="463.50"></text></g><g><title>plugins_core::build::Build::into_entry (7 samples, 0.56%)</title><rect x="20.5108%" y="533" width="0.5587%" height="15" fill="rgb(243,89,12)" fg:x="257" fg:w="7"/><text x="20.7608%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="20.5108%" y="517" width="0.5587%" height="15" fill="rgb(228,32,19)" fg:x="257" fg:w="7"/><text x="20.7608%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="20.5108%" y="501" width="0.5587%" height="15" fill="rgb(248,25,17)" fg:x="257" fg:w="7"/><text x="20.7608%" y="511.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="20.5108%" y="485" width="0.5587%" height="15" fill="rgb(232,161,29)" fg:x="257" fg:w="7"/><text x="20.7608%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="20.5108%" y="469" width="0.5587%" height="15" fill="rgb(251,192,11)" fg:x="257" fg:w="7"/><text x="20.7608%" y="479.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="20.9896%" y="453" width="0.0798%" height="15" fill="rgb(240,47,32)" fg:x="263" fg:w="1"/><text x="21.2396%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="21.1492%" y="485" width="0.0798%" height="15" fill="rgb(250,16,45)" fg:x="265" fg:w="1"/><text x="21.3992%" y="495.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="21.1492%" y="469" width="0.0798%" height="15" fill="rgb(227,217,42)" fg:x="265" fg:w="1"/><text x="21.3992%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="21.1492%" y="453" width="0.0798%" height="15" fill="rgb(206,82,54)" fg:x="265" fg:w="1"/><text x="21.3992%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.2291%" y="293" width="0.0798%" height="15" fill="rgb(243,145,25)" fg:x="266" fg:w="1"/><text x="21.4791%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.2291%" y="277" width="0.0798%" height="15" fill="rgb(207,166,24)" fg:x="266" fg:w="1"/><text x="21.4791%" y="287.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="21.2291%" y="261" width="0.0798%" height="15" fill="rgb(215,191,44)" fg:x="266" fg:w="1"/><text x="21.4791%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="21.2291%" y="245" width="0.0798%" height="15" fill="rgb(234,218,51)" fg:x="266" fg:w="1"/><text x="21.4791%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="21.2291%" y="229" width="0.0798%" height="15" fill="rgb(245,133,21)" fg:x="266" fg:w="1"/><text x="21.4791%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="21.2291%" y="213" width="0.0798%" height="15" fill="rgb(230,136,45)" fg:x="266" fg:w="1"/><text x="21.4791%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="21.2291%" y="197" width="0.0798%" height="15" fill="rgb(247,63,43)" fg:x="266" fg:w="1"/><text x="21.4791%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="21.2291%" y="181" width="0.0798%" height="15" fill="rgb(254,223,31)" fg:x="266" fg:w="1"/><text x="21.4791%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="21.2291%" y="165" width="0.0798%" height="15" fill="rgb(236,185,0)" fg:x="266" fg:w="1"/><text x="21.4791%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="21.2291%" y="149" width="0.0798%" height="15" fill="rgb(231,139,46)" fg:x="266" fg:w="1"/><text x="21.4791%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="21.2291%" y="133" width="0.0798%" height="15" fill="rgb(236,147,31)" fg:x="266" fg:w="1"/><text x="21.4791%" y="143.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="21.1492%" y="501" width="0.2394%" height="15" fill="rgb(225,222,22)" fg:x="265" fg:w="3"/><text x="21.3992%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="21.2291%" y="485" width="0.1596%" height="15" fill="rgb(225,193,14)" fg:x="266" fg:w="2"/><text x="21.4791%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="21.2291%" y="469" width="0.1596%" height="15" fill="rgb(253,193,46)" fg:x="266" fg:w="2"/><text x="21.4791%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="21.2291%" y="453" width="0.1596%" height="15" fill="rgb(218,187,39)" fg:x="266" fg:w="2"/><text x="21.4791%" y="463.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="21.2291%" y="437" width="0.1596%" height="15" fill="rgb(227,162,48)" fg:x="266" fg:w="2"/><text x="21.4791%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="21.2291%" y="421" width="0.1596%" height="15" fill="rgb(222,25,5)" fg:x="266" fg:w="2"/><text x="21.4791%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="21.2291%" y="405" width="0.1596%" height="15" fill="rgb(211,205,16)" fg:x="266" fg:w="2"/><text x="21.4791%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="21.2291%" y="389" width="0.1596%" height="15" fill="rgb(244,191,2)" fg:x="266" fg:w="2"/><text x="21.4791%" y="399.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="21.2291%" y="373" width="0.1596%" height="15" fill="rgb(248,159,12)" fg:x="266" fg:w="2"/><text x="21.4791%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="21.2291%" y="357" width="0.1596%" height="15" fill="rgb(235,204,17)" fg:x="266" fg:w="2"/><text x="21.4791%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="21.2291%" y="341" width="0.1596%" height="15" fill="rgb(240,21,27)" fg:x="266" fg:w="2"/><text x="21.4791%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="21.2291%" y="325" width="0.1596%" height="15" fill="rgb(224,170,31)" fg:x="266" fg:w="2"/><text x="21.4791%" y="335.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="21.2291%" y="309" width="0.1596%" height="15" fill="rgb(223,145,32)" fg:x="266" fg:w="2"/><text x="21.4791%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="21.3089%" y="293" width="0.0798%" height="15" fill="rgb(243,100,5)" fg:x="267" fg:w="1"/><text x="21.5589%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.3089%" y="277" width="0.0798%" height="15" fill="rgb(242,131,51)" fg:x="267" fg:w="1"/><text x="21.5589%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.3089%" y="261" width="0.0798%" height="15" fill="rgb(223,156,46)" fg:x="267" fg:w="1"/><text x="21.5589%" y="271.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="21.3089%" y="245" width="0.0798%" height="15" fill="rgb(215,10,40)" fg:x="267" fg:w="1"/><text x="21.5589%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="21.3089%" y="229" width="0.0798%" height="15" fill="rgb(233,155,0)" fg:x="267" fg:w="1"/><text x="21.5589%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="21.3089%" y="213" width="0.0798%" height="15" fill="rgb(247,78,6)" fg:x="267" fg:w="1"/><text x="21.5589%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="21.3089%" y="197" width="0.0798%" height="15" fill="rgb(237,217,21)" fg:x="267" fg:w="1"/><text x="21.5589%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="21.3089%" y="181" width="0.0798%" height="15" fill="rgb(212,1,21)" fg:x="267" fg:w="1"/><text x="21.5589%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="21.3089%" y="165" width="0.0798%" height="15" fill="rgb(213,7,14)" fg:x="267" fg:w="1"/><text x="21.5589%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="21.3089%" y="149" width="0.0798%" height="15" fill="rgb(225,84,14)" fg:x="267" fg:w="1"/><text x="21.5589%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="21.3089%" y="133" width="0.0798%" height="15" fill="rgb(239,216,39)" fg:x="267" fg:w="1"/><text x="21.5589%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="21.3089%" y="117" width="0.0798%" height="15" fill="rgb(253,29,23)" fg:x="267" fg:w="1"/><text x="21.5589%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="21.3089%" y="101" width="0.0798%" height="15" fill="rgb(220,167,50)" fg:x="267" fg:w="1"/><text x="21.5589%" y="111.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="21.3089%" y="85" width="0.0798%" height="15" fill="rgb(232,141,1)" fg:x="267" fg:w="1"/><text x="21.5589%" y="95.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="21.3089%" y="69" width="0.0798%" height="15" fill="rgb(222,210,1)" fg:x="267" fg:w="1"/><text x="21.5589%" y="79.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="21.3089%" y="53" width="0.0798%" height="15" fill="rgb(219,84,10)" fg:x="267" fg:w="1"/><text x="21.5589%" y="63.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.3887%" y="437" width="0.0798%" height="15" fill="rgb(245,188,6)" fg:x="268" fg:w="1"/><text x="21.6387%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.3887%" y="421" width="0.0798%" height="15" fill="rgb(252,139,39)" fg:x="268" fg:w="1"/><text x="21.6387%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.3887%" y="405" width="0.0798%" height="15" fill="rgb(218,42,26)" fg:x="268" fg:w="1"/><text x="21.6387%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.3887%" y="389" width="0.0798%" height="15" fill="rgb(237,226,51)" fg:x="268" fg:w="1"/><text x="21.6387%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="21.3887%" y="501" width="0.1596%" height="15" fill="rgb(246,15,17)" fg:x="268" fg:w="2"/><text x="21.6387%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="21.3887%" y="485" width="0.1596%" height="15" fill="rgb(228,170,42)" fg:x="268" fg:w="2"/><text x="21.6387%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="21.3887%" y="469" width="0.1596%" height="15" fill="rgb(248,118,53)" fg:x="268" fg:w="2"/><text x="21.6387%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.3887%" y="453" width="0.1596%" height="15" fill="rgb(207,30,10)" fg:x="268" fg:w="2"/><text x="21.6387%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.4685%" y="437" width="0.0798%" height="15" fill="rgb(217,104,38)" fg:x="269" fg:w="1"/><text x="21.7185%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="21.6281%" y="485" width="0.1596%" height="15" fill="rgb(211,165,26)" fg:x="271" fg:w="2"/><text x="21.8781%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="21.6281%" y="469" width="0.1596%" height="15" fill="rgb(247,38,9)" fg:x="271" fg:w="2"/><text x="21.8781%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.7079%" y="453" width="0.0798%" height="15" fill="rgb(218,187,8)" fg:x="272" fg:w="1"/><text x="21.9579%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.7079%" y="437" width="0.0798%" height="15" fill="rgb(247,94,28)" fg:x="272" fg:w="1"/><text x="21.9579%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.7877%" y="469" width="0.0798%" height="15" fill="rgb(218,173,30)" fg:x="273" fg:w="1"/><text x="22.0377%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.7877%" y="453" width="0.0798%" height="15" fill="rgb(245,45,36)" fg:x="273" fg:w="1"/><text x="22.0377%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.7877%" y="437" width="0.0798%" height="15" fill="rgb(221,172,44)" fg:x="273" fg:w="1"/><text x="22.0377%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.7877%" y="421" width="0.0798%" height="15" fill="rgb(222,45,12)" fg:x="273" fg:w="1"/><text x="22.0377%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.7877%" y="405" width="0.0798%" height="15" fill="rgb(250,10,22)" fg:x="273" fg:w="1"/><text x="22.0377%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.7877%" y="389" width="0.0798%" height="15" fill="rgb(239,27,0)" fg:x="273" fg:w="1"/><text x="22.0377%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.7877%" y="373" width="0.0798%" height="15" fill="rgb(223,118,22)" fg:x="273" fg:w="1"/><text x="22.0377%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.7877%" y="357" width="0.0798%" height="15" fill="rgb(251,81,25)" fg:x="273" fg:w="1"/><text x="22.0377%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.7877%" y="341" width="0.0798%" height="15" fill="rgb(237,225,53)" fg:x="273" fg:w="1"/><text x="22.0377%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.7877%" y="325" width="0.0798%" height="15" fill="rgb(237,186,51)" fg:x="273" fg:w="1"/><text x="22.0377%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.7877%" y="309" width="0.0798%" height="15" fill="rgb(247,209,11)" fg:x="273" fg:w="1"/><text x="22.0377%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.7877%" y="293" width="0.0798%" height="15" fill="rgb(223,109,27)" fg:x="273" fg:w="1"/><text x="22.0377%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.7877%" y="277" width="0.0798%" height="15" fill="rgb(246,181,13)" fg:x="273" fg:w="1"/><text x="22.0377%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.8675%" y="405" width="0.0798%" height="15" fill="rgb(234,57,44)" fg:x="274" fg:w="1"/><text x="22.1175%" y="415.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (6 samples, 0.48%)</title><rect x="21.5483%" y="501" width="0.4789%" height="15" fill="rgb(211,227,50)" fg:x="270" fg:w="6"/><text x="21.7983%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="21.7877%" y="485" width="0.2394%" height="15" fill="rgb(254,57,34)" fg:x="273" fg:w="3"/><text x="22.0377%" y="495.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (2 samples, 0.16%)</title><rect x="21.8675%" y="469" width="0.1596%" height="15" fill="rgb(227,212,26)" fg:x="274" fg:w="2"/><text x="22.1175%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="21.8675%" y="453" width="0.1596%" height="15" fill="rgb(244,169,44)" fg:x="274" fg:w="2"/><text x="22.1175%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="21.8675%" y="437" width="0.1596%" height="15" fill="rgb(236,135,50)" fg:x="274" fg:w="2"/><text x="22.1175%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="21.8675%" y="421" width="0.1596%" height="15" fill="rgb(241,89,30)" fg:x="274" fg:w="2"/><text x="22.1175%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="21.9473%" y="405" width="0.0798%" height="15" fill="rgb(206,113,34)" fg:x="275" fg:w="1"/><text x="22.1973%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="22.0271%" y="485" width="0.0798%" height="15" fill="rgb(218,104,52)" fg:x="276" fg:w="1"/><text x="22.2771%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="22.0271%" y="469" width="0.0798%" height="15" fill="rgb(223,82,32)" fg:x="276" fg:w="1"/><text x="22.2771%" y="479.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="22.0271%" y="453" width="0.0798%" height="15" fill="rgb(249,219,30)" fg:x="276" fg:w="1"/><text x="22.2771%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="22.0271%" y="437" width="0.0798%" height="15" fill="rgb(233,141,21)" fg:x="276" fg:w="1"/><text x="22.2771%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.0271%" y="421" width="0.0798%" height="15" fill="rgb(252,87,44)" fg:x="276" fg:w="1"/><text x="22.2771%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="22.0271%" y="405" width="0.0798%" height="15" fill="rgb(229,48,33)" fg:x="276" fg:w="1"/><text x="22.2771%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.0271%" y="389" width="0.0798%" height="15" fill="rgb(229,23,22)" fg:x="276" fg:w="1"/><text x="22.2771%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.0271%" y="373" width="0.0798%" height="15" fill="rgb(244,116,16)" fg:x="276" fg:w="1"/><text x="22.2771%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.0271%" y="357" width="0.0798%" height="15" fill="rgb(247,45,10)" fg:x="276" fg:w="1"/><text x="22.2771%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.0271%" y="341" width="0.0798%" height="15" fill="rgb(228,60,29)" fg:x="276" fg:w="1"/><text x="22.2771%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.0271%" y="325" width="0.0798%" height="15" fill="rgb(205,129,15)" fg:x="276" fg:w="1"/><text x="22.2771%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.20%)</title><rect x="21.0694%" y="517" width="1.1971%" height="15" fill="rgb(206,229,4)" fg:x="264" fg:w="15"/><text x="21.3194%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="22.0271%" y="501" width="0.2394%" height="15" fill="rgb(249,191,30)" fg:x="276" fg:w="3"/><text x="22.2771%" y="511.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="22.1069%" y="485" width="0.1596%" height="15" fill="rgb(250,84,54)" fg:x="277" fg:w="2"/><text x="22.3569%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.1868%" y="469" width="0.0798%" height="15" fill="rgb(207,25,53)" fg:x="278" fg:w="1"/><text x="22.4368%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.4262%" y="421" width="0.0798%" height="15" fill="rgb(235,40,8)" fg:x="281" fg:w="1"/><text x="22.6762%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.4262%" y="405" width="0.0798%" height="15" fill="rgb(226,169,33)" fg:x="281" fg:w="1"/><text x="22.6762%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.4262%" y="389" width="0.0798%" height="15" fill="rgb(238,110,8)" fg:x="281" fg:w="1"/><text x="22.6762%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.4262%" y="373" width="0.0798%" height="15" fill="rgb(251,206,12)" fg:x="281" fg:w="1"/><text x="22.6762%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.4262%" y="357" width="0.0798%" height="15" fill="rgb(248,171,18)" fg:x="281" fg:w="1"/><text x="22.6762%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.4262%" y="341" width="0.0798%" height="15" fill="rgb(213,65,46)" fg:x="281" fg:w="1"/><text x="22.6762%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.4262%" y="325" width="0.0798%" height="15" fill="rgb(211,154,15)" fg:x="281" fg:w="1"/><text x="22.6762%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.4262%" y="309" width="0.0798%" height="15" fill="rgb(217,75,43)" fg:x="281" fg:w="1"/><text x="22.6762%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.4262%" y="293" width="0.0798%" height="15" fill="rgb(230,32,33)" fg:x="281" fg:w="1"/><text x="22.6762%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.4262%" y="277" width="0.0798%" height="15" fill="rgb(221,100,16)" fg:x="281" fg:w="1"/><text x="22.6762%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="22.4262%" y="261" width="0.0798%" height="15" fill="rgb(212,129,47)" fg:x="281" fg:w="1"/><text x="22.6762%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="22.4262%" y="245" width="0.0798%" height="15" fill="rgb(239,217,47)" fg:x="281" fg:w="1"/><text x="22.6762%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="22.4262%" y="469" width="0.1596%" height="15" fill="rgb(230,84,24)" fg:x="281" fg:w="2"/><text x="22.6762%" y="479.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="22.4262%" y="453" width="0.1596%" height="15" fill="rgb(214,153,51)" fg:x="281" fg:w="2"/><text x="22.6762%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="22.4262%" y="437" width="0.1596%" height="15" fill="rgb(231,6,35)" fg:x="281" fg:w="2"/><text x="22.6762%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.5060%" y="421" width="0.0798%" height="15" fill="rgb(229,122,30)" fg:x="282" fg:w="1"/><text x="22.7560%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="22.5060%" y="405" width="0.0798%" height="15" fill="rgb(234,71,10)" fg:x="282" fg:w="1"/><text x="22.7560%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.5060%" y="389" width="0.0798%" height="15" fill="rgb(215,173,26)" fg:x="282" fg:w="1"/><text x="22.7560%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.5060%" y="373" width="0.0798%" height="15" fill="rgb(248,118,52)" fg:x="282" fg:w="1"/><text x="22.7560%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.5858%" y="421" width="0.0798%" height="15" fill="rgb(237,55,46)" fg:x="283" fg:w="1"/><text x="22.8358%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.5858%" y="405" width="0.0798%" height="15" fill="rgb(243,214,43)" fg:x="283" fg:w="1"/><text x="22.8358%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.5858%" y="389" width="0.0798%" height="15" fill="rgb(252,123,30)" fg:x="283" fg:w="1"/><text x="22.8358%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.5858%" y="373" width="0.0798%" height="15" fill="rgb(215,73,39)" fg:x="283" fg:w="1"/><text x="22.8358%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.5858%" y="357" width="0.0798%" height="15" fill="rgb(251,194,29)" fg:x="283" fg:w="1"/><text x="22.8358%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.5858%" y="341" width="0.0798%" height="15" fill="rgb(224,58,52)" fg:x="283" fg:w="1"/><text x="22.8358%" y="351.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="22.4262%" y="501" width="0.3990%" height="15" fill="rgb(248,106,46)" fg:x="281" fg:w="5"/><text x="22.6762%" y="511.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="22.4262%" y="485" width="0.3990%" height="15" fill="rgb(223,80,29)" fg:x="281" fg:w="5"/><text x="22.6762%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="22.5858%" y="469" width="0.2394%" height="15" fill="rgb(243,137,9)" fg:x="283" fg:w="3"/><text x="22.8358%" y="479.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="22.5858%" y="453" width="0.2394%" height="15" fill="rgb(235,121,28)" fg:x="283" fg:w="3"/><text x="22.8358%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="22.5858%" y="437" width="0.2394%" height="15" fill="rgb(219,121,41)" fg:x="283" fg:w="3"/><text x="22.8358%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="22.6656%" y="421" width="0.1596%" height="15" fill="rgb(251,60,6)" fg:x="284" fg:w="2"/><text x="22.9156%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.6656%" y="405" width="0.1596%" height="15" fill="rgb(208,12,30)" fg:x="284" fg:w="2"/><text x="22.9156%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="22.6656%" y="389" width="0.1596%" height="15" fill="rgb(207,176,36)" fg:x="284" fg:w="2"/><text x="22.9156%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.6656%" y="373" width="0.1596%" height="15" fill="rgb(211,188,29)" fg:x="284" fg:w="2"/><text x="22.9156%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="22.6656%" y="357" width="0.1596%" height="15" fill="rgb(220,184,37)" fg:x="284" fg:w="2"/><text x="22.9156%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.6656%" y="341" width="0.1596%" height="15" fill="rgb(239,87,37)" fg:x="284" fg:w="2"/><text x="22.9156%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="22.7454%" y="325" width="0.0798%" height="15" fill="rgb(232,113,44)" fg:x="285" fg:w="1"/><text x="22.9954%" y="335.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="22.8252%" y="501" width="0.0798%" height="15" fill="rgb(246,25,39)" fg:x="286" fg:w="1"/><text x="23.0752%" y="511.50"></text></g><g><title>plugins_core::build::Build::leads_to (24 samples, 1.92%)</title><rect x="21.0694%" y="533" width="1.9154%" height="15" fill="rgb(247,30,13)" fg:x="264" fg:w="24"/><text x="21.3194%" y="543.50">p..</text></g><g><title>plugins_core::tools::leads_to (9 samples, 0.72%)</title><rect x="22.2666%" y="517" width="0.7183%" height="15" fill="rgb(230,176,35)" fg:x="279" fg:w="9"/><text x="22.5166%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="22.9050%" y="501" width="0.0798%" height="15" fill="rgb(222,23,18)" fg:x="287" fg:w="1"/><text x="23.1550%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.9050%" y="485" width="0.0798%" height="15" fill="rgb(234,86,8)" fg:x="287" fg:w="1"/><text x="23.1550%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="22.9050%" y="469" width="0.0798%" height="15" fill="rgb(206,218,47)" fg:x="287" fg:w="1"/><text x="23.1550%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="22.9050%" y="453" width="0.0798%" height="15" fill="rgb(229,35,31)" fg:x="287" fg:w="1"/><text x="23.1550%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.9848%" y="469" width="0.0798%" height="15" fill="rgb(242,81,7)" fg:x="288" fg:w="1"/><text x="23.2348%" y="479.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="22.9848%" y="501" width="0.1596%" height="15" fill="rgb(231,11,35)" fg:x="288" fg:w="2"/><text x="23.2348%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="22.9848%" y="485" width="0.1596%" height="15" fill="rgb(219,218,17)" fg:x="288" fg:w="2"/><text x="23.2348%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="23.0646%" y="469" width="0.0798%" height="15" fill="rgb(221,83,32)" fg:x="289" fg:w="1"/><text x="23.3146%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.0646%" y="453" width="0.0798%" height="15" fill="rgb(233,49,54)" fg:x="289" fg:w="1"/><text x="23.3146%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="23.0646%" y="437" width="0.0798%" height="15" fill="rgb(206,18,51)" fg:x="289" fg:w="1"/><text x="23.3146%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.0646%" y="421" width="0.0798%" height="15" fill="rgb(249,193,15)" fg:x="289" fg:w="1"/><text x="23.3146%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="23.0646%" y="405" width="0.0798%" height="15" fill="rgb(245,186,19)" fg:x="289" fg:w="1"/><text x="23.3146%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="23.0646%" y="389" width="0.0798%" height="15" fill="rgb(230,4,24)" fg:x="289" fg:w="1"/><text x="23.3146%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.0646%" y="373" width="0.0798%" height="15" fill="rgb(234,75,27)" fg:x="289" fg:w="1"/><text x="23.3146%" y="383.50"></text></g><g><title>core::iter::adapters::try_process (41 samples, 3.27%)</title><rect x="20.0319%" y="581" width="3.2721%" height="15" fill="rgb(244,187,35)" fg:x="251" fg:w="41"/><text x="20.2819%" y="591.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (41 samples, 3.27%)</title><rect x="20.0319%" y="565" width="3.2721%" height="15" fill="rgb(241,97,43)" fg:x="251" fg:w="41"/><text x="20.2819%" y="575.50">&lt;al..</text></g><g><title>plugins_core::build::QuickThing::make (41 samples, 3.27%)</title><rect x="20.0319%" y="549" width="3.2721%" height="15" fill="rgb(236,94,2)" fg:x="251" fg:w="41"/><text x="20.2819%" y="559.50">plu..</text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="22.9848%" y="533" width="0.3192%" height="15" fill="rgb(231,175,7)" fg:x="288" fg:w="4"/><text x="23.2348%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="22.9848%" y="517" width="0.3192%" height="15" fill="rgb(236,89,47)" fg:x="288" fg:w="4"/><text x="23.2348%" y="527.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (2 samples, 0.16%)</title><rect x="23.1445%" y="501" width="0.1596%" height="15" fill="rgb(213,191,37)" fg:x="290" fg:w="2"/><text x="23.3945%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="23.1445%" y="485" width="0.1596%" height="15" fill="rgb(252,0,34)" fg:x="290" fg:w="2"/><text x="23.3945%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="23.3041%" y="581" width="0.0798%" height="15" fill="rgb(208,145,44)" fg:x="292" fg:w="1"/><text x="23.5541%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="23.3041%" y="565" width="0.0798%" height="15" fill="rgb(227,95,50)" fg:x="292" fg:w="1"/><text x="23.5541%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="23.3041%" y="549" width="0.0798%" height="15" fill="rgb(222,136,24)" fg:x="292" fg:w="1"/><text x="23.5541%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.3041%" y="533" width="0.0798%" height="15" fill="rgb(218,105,10)" fg:x="292" fg:w="1"/><text x="23.5541%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.3839%" y="549" width="0.0798%" height="15" fill="rgb(216,65,28)" fg:x="293" fg:w="1"/><text x="23.6339%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.3839%" y="533" width="0.0798%" height="15" fill="rgb(229,6,28)" fg:x="293" fg:w="1"/><text x="23.6339%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.3839%" y="517" width="0.0798%" height="15" fill="rgb(222,160,42)" fg:x="293" fg:w="1"/><text x="23.6339%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.3839%" y="501" width="0.0798%" height="15" fill="rgb(235,83,49)" fg:x="293" fg:w="1"/><text x="23.6339%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.3839%" y="485" width="0.0798%" height="15" fill="rgb(236,86,36)" fg:x="293" fg:w="1"/><text x="23.6339%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.3839%" y="469" width="0.0798%" height="15" fill="rgb(236,19,41)" fg:x="293" fg:w="1"/><text x="23.6339%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.3839%" y="453" width="0.0798%" height="15" fill="rgb(217,71,31)" fg:x="293" fg:w="1"/><text x="23.6339%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.3839%" y="437" width="0.0798%" height="15" fill="rgb(236,209,25)" fg:x="293" fg:w="1"/><text x="23.6339%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.3839%" y="421" width="0.0798%" height="15" fill="rgb(247,104,21)" fg:x="293" fg:w="1"/><text x="23.6339%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.3839%" y="405" width="0.0798%" height="15" fill="rgb(243,80,38)" fg:x="293" fg:w="1"/><text x="23.6339%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.3839%" y="389" width="0.0798%" height="15" fill="rgb(232,109,38)" fg:x="293" fg:w="1"/><text x="23.6339%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.4637%" y="549" width="0.0798%" height="15" fill="rgb(212,177,53)" fg:x="294" fg:w="1"/><text x="23.7137%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.5435%" y="549" width="0.0798%" height="15" fill="rgb(227,30,34)" fg:x="295" fg:w="1"/><text x="23.7935%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.5435%" y="533" width="0.0798%" height="15" fill="rgb(205,175,25)" fg:x="295" fg:w="1"/><text x="23.7935%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.32%)</title><rect x="23.3839%" y="565" width="0.3192%" height="15" fill="rgb(249,39,54)" fg:x="293" fg:w="4"/><text x="23.6339%" y="575.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="23.6233%" y="549" width="0.0798%" height="15" fill="rgb(215,54,37)" fg:x="296" fg:w="1"/><text x="23.8733%" y="559.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="23.7031%" y="549" width="0.0798%" height="15" fill="rgb(205,60,46)" fg:x="297" fg:w="1"/><text x="23.9531%" y="559.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="23.7031%" y="533" width="0.0798%" height="15" fill="rgb(238,89,29)" fg:x="297" fg:w="1"/><text x="23.9531%" y="543.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="23.7031%" y="517" width="0.0798%" height="15" fill="rgb(212,48,10)" fg:x="297" fg:w="1"/><text x="23.9531%" y="527.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="23.7031%" y="501" width="0.0798%" height="15" fill="rgb(237,186,28)" fg:x="297" fg:w="1"/><text x="23.9531%" y="511.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="23.7031%" y="485" width="0.0798%" height="15" fill="rgb(237,204,4)" fg:x="297" fg:w="1"/><text x="23.9531%" y="495.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="23.7031%" y="469" width="0.0798%" height="15" fill="rgb(237,15,47)" fg:x="297" fg:w="1"/><text x="23.9531%" y="479.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="23.7031%" y="453" width="0.0798%" height="15" fill="rgb(244,110,25)" fg:x="297" fg:w="1"/><text x="23.9531%" y="463.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="23.7031%" y="437" width="0.0798%" height="15" fill="rgb(241,12,16)" fg:x="297" fg:w="1"/><text x="23.9531%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="23.7829%" y="517" width="0.0798%" height="15" fill="rgb(235,25,9)" fg:x="298" fg:w="1"/><text x="24.0329%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="23.8627%" y="517" width="0.0798%" height="15" fill="rgb(245,159,19)" fg:x="299" fg:w="1"/><text x="24.1127%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="23.8627%" y="501" width="0.0798%" height="15" fill="rgb(236,63,32)" fg:x="299" fg:w="1"/><text x="24.1127%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="23.8627%" y="485" width="0.0798%" height="15" fill="rgb(235,32,52)" fg:x="299" fg:w="1"/><text x="24.1127%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="23.9425%" y="501" width="0.0798%" height="15" fill="rgb(209,176,21)" fg:x="300" fg:w="1"/><text x="24.1925%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="23.9425%" y="485" width="0.0798%" height="15" fill="rgb(205,90,42)" fg:x="300" fg:w="1"/><text x="24.1925%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="23.9425%" y="469" width="0.0798%" height="15" fill="rgb(213,132,16)" fg:x="300" fg:w="1"/><text x="24.1925%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="24.1820%" y="485" width="0.0798%" height="15" fill="rgb(232,11,22)" fg:x="303" fg:w="1"/><text x="24.4320%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="24.1820%" y="469" width="0.0798%" height="15" fill="rgb(248,167,41)" fg:x="303" fg:w="1"/><text x="24.4320%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="24.3416%" y="453" width="0.3990%" height="15" fill="rgb(209,127,6)" fg:x="305" fg:w="5"/><text x="24.5916%" y="463.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="24.3416%" y="437" width="0.3990%" height="15" fill="rgb(246,210,34)" fg:x="305" fg:w="5"/><text x="24.5916%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="24.5012%" y="421" width="0.2394%" height="15" fill="rgb(238,165,13)" fg:x="307" fg:w="3"/><text x="24.7512%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="24.5012%" y="405" width="0.2394%" height="15" fill="rgb(233,98,15)" fg:x="307" fg:w="3"/><text x="24.7512%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.56%)</title><rect x="24.2618%" y="469" width="0.5587%" height="15" fill="rgb(215,215,51)" fg:x="304" fg:w="7"/><text x="24.5118%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="24.7406%" y="453" width="0.0798%" height="15" fill="rgb(217,161,25)" fg:x="310" fg:w="1"/><text x="24.9906%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (10 samples, 0.80%)</title><rect x="24.9002%" y="453" width="0.7981%" height="15" fill="rgb(217,167,48)" fg:x="312" fg:w="10"/><text x="25.1502%" y="463.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="25.1397%" y="437" width="0.5587%" height="15" fill="rgb(205,163,34)" fg:x="315" fg:w="7"/><text x="25.3897%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.48%)</title><rect x="25.2195%" y="421" width="0.4789%" height="15" fill="rgb(241,197,31)" fg:x="316" fg:w="6"/><text x="25.4695%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="25.3791%" y="405" width="0.3192%" height="15" fill="rgb(225,123,11)" fg:x="318" fg:w="4"/><text x="25.6291%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="25.6185%" y="389" width="0.0798%" height="15" fill="rgb(217,4,20)" fg:x="321" fg:w="1"/><text x="25.8685%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.6185%" y="373" width="0.0798%" height="15" fill="rgb(215,55,9)" fg:x="321" fg:w="1"/><text x="25.8685%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="25.6185%" y="357" width="0.0798%" height="15" fill="rgb(218,165,5)" fg:x="321" fg:w="1"/><text x="25.8685%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="25.7781%" y="405" width="0.1596%" height="15" fill="rgb(222,175,15)" fg:x="323" fg:w="2"/><text x="26.0281%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="25.7781%" y="389" width="0.1596%" height="15" fill="rgb(223,85,34)" fg:x="323" fg:w="2"/><text x="26.0281%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.8579%" y="373" width="0.0798%" height="15" fill="rgb(234,228,29)" fg:x="324" fg:w="1"/><text x="26.1079%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.8579%" y="357" width="0.0798%" height="15" fill="rgb(239,7,28)" fg:x="324" fg:w="1"/><text x="26.1079%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="25.9377%" y="405" width="0.1596%" height="15" fill="rgb(252,222,53)" fg:x="325" fg:w="2"/><text x="26.1877%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="25.9377%" y="389" width="0.1596%" height="15" fill="rgb(232,146,44)" fg:x="325" fg:w="2"/><text x="26.1877%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="25.9377%" y="373" width="0.1596%" height="15" fill="rgb(243,223,53)" fg:x="325" fg:w="2"/><text x="26.1877%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.0176%" y="357" width="0.0798%" height="15" fill="rgb(219,128,25)" fg:x="326" fg:w="1"/><text x="26.2676%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.0176%" y="341" width="0.0798%" height="15" fill="rgb(223,56,32)" fg:x="326" fg:w="1"/><text x="26.2676%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="25.7781%" y="421" width="0.3990%" height="15" fill="rgb(237,41,3)" fg:x="323" fg:w="5"/><text x="26.0281%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.0974%" y="405" width="0.0798%" height="15" fill="rgb(235,138,9)" fg:x="327" fg:w="1"/><text x="26.3474%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.0974%" y="389" width="0.0798%" height="15" fill="rgb(214,131,10)" fg:x="327" fg:w="1"/><text x="26.3474%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.0974%" y="373" width="0.0798%" height="15" fill="rgb(229,89,7)" fg:x="327" fg:w="1"/><text x="26.3474%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.48%)</title><rect x="25.7781%" y="437" width="0.4789%" height="15" fill="rgb(240,24,42)" fg:x="323" fg:w="6"/><text x="26.0281%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.1772%" y="421" width="0.0798%" height="15" fill="rgb(243,188,54)" fg:x="328" fg:w="1"/><text x="26.4272%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.1772%" y="405" width="0.0798%" height="15" fill="rgb(246,92,22)" fg:x="328" fg:w="1"/><text x="26.4272%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="26.2570%" y="437" width="0.3192%" height="15" fill="rgb(211,176,51)" fg:x="329" fg:w="4"/><text x="26.5070%" y="447.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="26.3368%" y="421" width="0.2394%" height="15" fill="rgb(246,207,34)" fg:x="330" fg:w="3"/><text x="26.5868%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="26.3368%" y="405" width="0.2394%" height="15" fill="rgb(239,95,2)" fg:x="330" fg:w="3"/><text x="26.5868%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="26.4166%" y="389" width="0.1596%" height="15" fill="rgb(211,124,25)" fg:x="331" fg:w="2"/><text x="26.6666%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.4964%" y="373" width="0.0798%" height="15" fill="rgb(231,221,19)" fg:x="332" fg:w="1"/><text x="26.7464%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.4964%" y="357" width="0.0798%" height="15" fill="rgb(239,183,19)" fg:x="332" fg:w="1"/><text x="26.7464%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="26.4964%" y="341" width="0.0798%" height="15" fill="rgb(221,130,29)" fg:x="332" fg:w="1"/><text x="26.7464%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="26.6560%" y="421" width="0.2394%" height="15" fill="rgb(206,130,36)" fg:x="334" fg:w="3"/><text x="26.9060%" y="431.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="26.6560%" y="405" width="0.2394%" height="15" fill="rgb(215,70,19)" fg:x="334" fg:w="3"/><text x="26.9060%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="26.6560%" y="389" width="0.2394%" height="15" fill="rgb(244,16,43)" fg:x="334" fg:w="3"/><text x="26.9060%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.8156%" y="373" width="0.0798%" height="15" fill="rgb(222,115,32)" fg:x="336" fg:w="1"/><text x="27.0656%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="26.8955%" y="405" width="0.0798%" height="15" fill="rgb(247,48,25)" fg:x="337" fg:w="1"/><text x="27.1455%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.8955%" y="389" width="0.0798%" height="15" fill="rgb(226,180,51)" fg:x="337" fg:w="1"/><text x="27.1455%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.8955%" y="373" width="0.0798%" height="15" fill="rgb(217,142,42)" fg:x="337" fg:w="1"/><text x="27.1455%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.8955%" y="357" width="0.0798%" height="15" fill="rgb(220,178,3)" fg:x="337" fg:w="1"/><text x="27.1455%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="26.9753%" y="389" width="0.1596%" height="15" fill="rgb(217,221,4)" fg:x="338" fg:w="2"/><text x="27.2253%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="27.1349%" y="389" width="0.3192%" height="15" fill="rgb(237,63,43)" fg:x="340" fg:w="4"/><text x="27.3849%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="27.1349%" y="373" width="0.3192%" height="15" fill="rgb(220,57,8)" fg:x="340" fg:w="4"/><text x="27.3849%" y="383.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="27.1349%" y="357" width="0.3192%" height="15" fill="rgb(254,186,27)" fg:x="340" fg:w="4"/><text x="27.3849%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="27.2147%" y="341" width="0.2394%" height="15" fill="rgb(251,57,28)" fg:x="341" fg:w="3"/><text x="27.4647%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="27.2147%" y="325" width="0.2394%" height="15" fill="rgb(215,228,0)" fg:x="341" fg:w="3"/><text x="27.4647%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="27.2147%" y="309" width="0.2394%" height="15" fill="rgb(237,218,39)" fg:x="341" fg:w="3"/><text x="27.4647%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="27.2147%" y="293" width="0.2394%" height="15" fill="rgb(207,2,54)" fg:x="341" fg:w="3"/><text x="27.4647%" y="303.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="27.2147%" y="277" width="0.2394%" height="15" fill="rgb(232,76,50)" fg:x="341" fg:w="3"/><text x="27.4647%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="26.9753%" y="405" width="0.7183%" height="15" fill="rgb(211,85,31)" fg:x="338" fg:w="9"/><text x="27.2253%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="27.4541%" y="389" width="0.2394%" height="15" fill="rgb(223,210,27)" fg:x="344" fg:w="3"/><text x="27.7041%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.6137%" y="373" width="0.0798%" height="15" fill="rgb(254,36,8)" fg:x="346" fg:w="1"/><text x="27.8637%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.6137%" y="357" width="0.0798%" height="15" fill="rgb(213,4,25)" fg:x="346" fg:w="1"/><text x="27.8637%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="27.6137%" y="341" width="0.0798%" height="15" fill="rgb(224,2,39)" fg:x="346" fg:w="1"/><text x="27.8637%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="27.6137%" y="325" width="0.0798%" height="15" fill="rgb(208,8,39)" fg:x="346" fg:w="1"/><text x="27.8637%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="27.6137%" y="309" width="0.0798%" height="15" fill="rgb(216,226,3)" fg:x="346" fg:w="1"/><text x="27.8637%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="26.8955%" y="421" width="0.8779%" height="15" fill="rgb(249,139,31)" fg:x="337" fg:w="11"/><text x="27.1455%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.6935%" y="405" width="0.0798%" height="15" fill="rgb(242,170,35)" fg:x="347" fg:w="1"/><text x="27.9435%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.28%)</title><rect x="26.5762%" y="437" width="1.2769%" height="15" fill="rgb(238,14,9)" fg:x="333" fg:w="16"/><text x="26.8262%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.7733%" y="421" width="0.0798%" height="15" fill="rgb(251,81,46)" fg:x="348" fg:w="1"/><text x="28.0233%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.7733%" y="405" width="0.0798%" height="15" fill="rgb(230,23,4)" fg:x="348" fg:w="1"/><text x="28.0233%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (29 samples, 2.31%)</title><rect x="25.6983%" y="453" width="2.3144%" height="15" fill="rgb(211,85,25)" fg:x="322" fg:w="29"/><text x="25.9483%" y="463.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="27.8532%" y="437" width="0.1596%" height="15" fill="rgb(252,23,31)" fg:x="349" fg:w="2"/><text x="28.1032%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="27.8532%" y="421" width="0.1596%" height="15" fill="rgb(234,163,38)" fg:x="349" fg:w="2"/><text x="28.1032%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.9330%" y="405" width="0.0798%" height="15" fill="rgb(210,190,50)" fg:x="350" fg:w="1"/><text x="28.1830%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="28.1724%" y="421" width="0.1596%" height="15" fill="rgb(228,158,3)" fg:x="353" fg:w="2"/><text x="28.4224%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="28.1724%" y="405" width="0.1596%" height="15" fill="rgb(216,130,0)" fg:x="353" fg:w="2"/><text x="28.4224%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="28.1724%" y="389" width="0.1596%" height="15" fill="rgb(224,184,10)" fg:x="353" fg:w="2"/><text x="28.4224%" y="399.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="28.1724%" y="373" width="0.1596%" height="15" fill="rgb(214,202,18)" fg:x="353" fg:w="2"/><text x="28.4224%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (45 samples, 3.59%)</title><rect x="24.8204%" y="469" width="3.5914%" height="15" fill="rgb(213,229,54)" fg:x="311" fg:w="45"/><text x="25.0704%" y="479.50">serd..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="28.0128%" y="453" width="0.3990%" height="15" fill="rgb(246,120,0)" fg:x="351" fg:w="5"/><text x="28.2628%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="28.1724%" y="437" width="0.2394%" height="15" fill="rgb(237,6,15)" fg:x="353" fg:w="3"/><text x="28.4224%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="28.3320%" y="421" width="0.0798%" height="15" fill="rgb(252,156,15)" fg:x="355" fg:w="1"/><text x="28.5820%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (53 samples, 4.23%)</title><rect x="24.2618%" y="485" width="4.2298%" height="15" fill="rgb(249,78,18)" fg:x="304" fg:w="53"/><text x="24.5118%" y="495.50">&lt;serd..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.4118%" y="469" width="0.0798%" height="15" fill="rgb(230,223,44)" fg:x="356" fg:w="1"/><text x="28.6618%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.4118%" y="453" width="0.0798%" height="15" fill="rgb(230,222,32)" fg:x="356" fg:w="1"/><text x="28.6618%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.4118%" y="437" width="0.0798%" height="15" fill="rgb(247,54,6)" fg:x="356" fg:w="1"/><text x="28.6618%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="28.5714%" y="437" width="0.1596%" height="15" fill="rgb(247,115,45)" fg:x="358" fg:w="2"/><text x="28.8214%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.6512%" y="421" width="0.0798%" height="15" fill="rgb(213,203,37)" fg:x="359" fg:w="1"/><text x="28.9012%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="28.7310%" y="421" width="0.1596%" height="15" fill="rgb(248,188,18)" fg:x="360" fg:w="2"/><text x="28.9810%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="28.8907%" y="405" width="0.0798%" height="15" fill="rgb(206,80,8)" fg:x="362" fg:w="1"/><text x="29.1407%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="28.8907%" y="389" width="0.0798%" height="15" fill="rgb(245,217,31)" fg:x="362" fg:w="1"/><text x="29.1407%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.8907%" y="373" width="0.0798%" height="15" fill="rgb(220,193,15)" fg:x="362" fg:w="1"/><text x="29.1407%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="28.4916%" y="485" width="0.6385%" height="15" fill="rgb(226,7,19)" fg:x="357" fg:w="8"/><text x="28.7416%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="28.4916%" y="469" width="0.6385%" height="15" fill="rgb(222,145,31)" fg:x="357" fg:w="8"/><text x="28.7416%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="28.4916%" y="453" width="0.6385%" height="15" fill="rgb(241,193,36)" fg:x="357" fg:w="8"/><text x="28.7416%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="28.7310%" y="437" width="0.3990%" height="15" fill="rgb(225,123,33)" fg:x="360" fg:w="5"/><text x="28.9810%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="28.8907%" y="421" width="0.2394%" height="15" fill="rgb(246,136,38)" fg:x="362" fg:w="3"/><text x="29.1407%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="28.9705%" y="405" width="0.1596%" height="15" fill="rgb(243,56,24)" fg:x="363" fg:w="2"/><text x="29.2205%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="28.9705%" y="389" width="0.1596%" height="15" fill="rgb(215,147,2)" fg:x="363" fg:w="2"/><text x="29.2205%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="28.9705%" y="373" width="0.1596%" height="15" fill="rgb(209,155,27)" fg:x="363" fg:w="2"/><text x="29.2205%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.0503%" y="357" width="0.0798%" height="15" fill="rgb(222,177,11)" fg:x="364" fg:w="1"/><text x="29.3003%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="29.3695%" y="437" width="0.1596%" height="15" fill="rgb(212,227,15)" fg:x="368" fg:w="2"/><text x="29.6195%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="29.5291%" y="437" width="0.0798%" height="15" fill="rgb(214,138,20)" fg:x="370" fg:w="1"/><text x="29.7791%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="29.6089%" y="437" width="0.1596%" height="15" fill="rgb(221,170,31)" fg:x="371" fg:w="2"/><text x="29.8589%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="29.7686%" y="437" width="0.1596%" height="15" fill="rgb(253,207,5)" fg:x="373" fg:w="2"/><text x="30.0186%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="29.7686%" y="421" width="0.1596%" height="15" fill="rgb(212,64,37)" fg:x="373" fg:w="2"/><text x="30.0186%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.8484%" y="405" width="0.0798%" height="15" fill="rgb(208,113,51)" fg:x="374" fg:w="1"/><text x="30.0984%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.8484%" y="389" width="0.0798%" height="15" fill="rgb(237,15,5)" fg:x="374" fg:w="1"/><text x="30.0984%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="29.8484%" y="373" width="0.0798%" height="15" fill="rgb(238,33,18)" fg:x="374" fg:w="1"/><text x="30.0984%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="30.0878%" y="389" width="0.1596%" height="15" fill="rgb(253,206,50)" fg:x="377" fg:w="2"/><text x="30.3378%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="30.0878%" y="373" width="0.1596%" height="15" fill="rgb(242,158,43)" fg:x="377" fg:w="2"/><text x="30.3378%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.1676%" y="357" width="0.0798%" height="15" fill="rgb(213,125,27)" fg:x="378" fg:w="1"/><text x="30.4176%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="30.4868%" y="357" width="0.0798%" height="15" fill="rgb(233,161,31)" fg:x="382" fg:w="1"/><text x="30.7368%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="30.2474%" y="389" width="0.3990%" height="15" fill="rgb(218,135,6)" fg:x="379" fg:w="5"/><text x="30.4974%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="30.4070%" y="373" width="0.2394%" height="15" fill="rgb(222,73,53)" fg:x="381" fg:w="3"/><text x="30.6570%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="30.5666%" y="357" width="0.0798%" height="15" fill="rgb(229,66,53)" fg:x="383" fg:w="1"/><text x="30.8166%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.5666%" y="341" width="0.0798%" height="15" fill="rgb(208,128,19)" fg:x="383" fg:w="1"/><text x="30.8166%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="30.7263%" y="373" width="0.0798%" height="15" fill="rgb(235,70,27)" fg:x="385" fg:w="1"/><text x="30.9763%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="30.8061%" y="357" width="0.1596%" height="15" fill="rgb(241,130,30)" fg:x="386" fg:w="2"/><text x="31.0561%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="31.0455%" y="341" width="0.0798%" height="15" fill="rgb(222,57,48)" fg:x="389" fg:w="1"/><text x="31.2955%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="31.3647%" y="293" width="0.1596%" height="15" fill="rgb(225,204,29)" fg:x="393" fg:w="2"/><text x="31.6147%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="31.3647%" y="277" width="0.1596%" height="15" fill="rgb(240,196,35)" fg:x="393" fg:w="2"/><text x="31.6147%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.4445%" y="261" width="0.0798%" height="15" fill="rgb(215,150,16)" fg:x="394" fg:w="1"/><text x="31.6945%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="31.2051%" y="309" width="0.6385%" height="15" fill="rgb(209,170,13)" fg:x="391" fg:w="8"/><text x="31.4551%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="31.5243%" y="293" width="0.3192%" height="15" fill="rgb(235,75,31)" fg:x="395" fg:w="4"/><text x="31.7743%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="31.6840%" y="277" width="0.1596%" height="15" fill="rgb(252,1,47)" fg:x="397" fg:w="2"/><text x="31.9340%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="31.6840%" y="261" width="0.1596%" height="15" fill="rgb(241,2,36)" fg:x="397" fg:w="2"/><text x="31.9340%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="31.6840%" y="245" width="0.1596%" height="15" fill="rgb(236,191,4)" fg:x="397" fg:w="2"/><text x="31.9340%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.7638%" y="229" width="0.0798%" height="15" fill="rgb(212,65,35)" fg:x="398" fg:w="1"/><text x="32.0138%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="31.1253%" y="341" width="0.7981%" height="15" fill="rgb(209,49,33)" fg:x="390" fg:w="10"/><text x="31.3753%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="31.1253%" y="325" width="0.7981%" height="15" fill="rgb(208,36,46)" fg:x="390" fg:w="10"/><text x="31.3753%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.8436%" y="309" width="0.0798%" height="15" fill="rgb(210,125,2)" fg:x="399" fg:w="1"/><text x="32.0936%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (16 samples, 1.28%)</title><rect x="30.8061%" y="373" width="1.2769%" height="15" fill="rgb(225,62,6)" fg:x="386" fg:w="16"/><text x="31.0561%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (14 samples, 1.12%)</title><rect x="30.9657%" y="357" width="1.1173%" height="15" fill="rgb(210,54,27)" fg:x="388" fg:w="14"/><text x="31.2157%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="31.9234%" y="341" width="0.1596%" height="15" fill="rgb(249,189,52)" fg:x="400" fg:w="2"/><text x="32.1734%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (27 samples, 2.15%)</title><rect x="30.0080%" y="405" width="2.1548%" height="15" fill="rgb(225,134,40)" fg:x="376" fg:w="27"/><text x="30.2580%" y="415.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (19 samples, 1.52%)</title><rect x="30.6464%" y="389" width="1.5164%" height="15" fill="rgb(206,13,37)" fg:x="384" fg:w="19"/><text x="30.8964%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.0830%" y="373" width="0.0798%" height="15" fill="rgb(232,114,28)" fg:x="402" fg:w="1"/><text x="32.3330%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (30 samples, 2.39%)</title><rect x="29.9282%" y="421" width="2.3943%" height="15" fill="rgb(253,215,8)" fg:x="375" fg:w="30"/><text x="30.1782%" y="431.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="32.1628%" y="405" width="0.1596%" height="15" fill="rgb(254,64,19)" fg:x="403" fg:w="2"/><text x="32.4128%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="32.1628%" y="389" width="0.1596%" height="15" fill="rgb(242,18,46)" fg:x="403" fg:w="2"/><text x="32.4128%" y="399.50"></text></g><g><title>engine::session::Session::flush (115 samples, 9.18%)</title><rect x="23.3839%" y="581" width="9.1780%" height="15" fill="rgb(239,192,30)" fg:x="293" fg:w="115"/><text x="23.6339%" y="591.50">engine::sessi..</text></g><g><title>engine::session::Session::save_changes (111 samples, 8.86%)</title><rect x="23.7031%" y="565" width="8.8587%" height="15" fill="rgb(232,73,14)" fg:x="297" fg:w="111"/><text x="23.9531%" y="575.50">engine::sessi..</text></g><g><title>engine::session::state::State::close (110 samples, 8.78%)</title><rect x="23.7829%" y="549" width="8.7789%" height="15" fill="rgb(225,51,9)" fg:x="298" fg:w="110"/><text x="24.0329%" y="559.50">engine::sess..</text></g><g><title>engine::session::state::State::flush_entities (110 samples, 8.78%)</title><rect x="23.7829%" y="533" width="8.7789%" height="15" fill="rgb(242,217,54)" fg:x="298" fg:w="110"/><text x="24.0329%" y="543.50">engine::sess..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (108 samples, 8.62%)</title><rect x="23.9425%" y="517" width="8.6193%" height="15" fill="rgb(216,93,3)" fg:x="300" fg:w="108"/><text x="24.1925%" y="527.50">engine::sess..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (107 samples, 8.54%)</title><rect x="24.0223%" y="501" width="8.5395%" height="15" fill="rgb(230,119,33)" fg:x="301" fg:w="107"/><text x="24.2723%" y="511.50">engine::sess..</text></g><g><title>kernel::model::any_entity_changes (43 samples, 3.43%)</title><rect x="29.1301%" y="485" width="3.4318%" height="15" fill="rgb(238,170,27)" fg:x="365" fg:w="43"/><text x="29.3801%" y="495.50">ker..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (42 samples, 3.35%)</title><rect x="29.2099%" y="469" width="3.3520%" height="15" fill="rgb(229,8,2)" fg:x="366" fg:w="42"/><text x="29.4599%" y="479.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (41 samples, 3.27%)</title><rect x="29.2897%" y="453" width="3.2721%" height="15" fill="rgb(205,214,42)" fg:x="367" fg:w="41"/><text x="29.5397%" y="463.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (33 samples, 2.63%)</title><rect x="29.9282%" y="437" width="2.6337%" height="15" fill="rgb(245,113,1)" fg:x="375" fg:w="33"/><text x="30.1782%" y="447.50">se..</text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="32.3224%" y="421" width="0.2394%" height="15" fill="rgb(252,50,2)" fg:x="405" fg:w="3"/><text x="32.5724%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="32.5619%" y="565" width="0.0798%" height="15" fill="rgb(225,122,24)" fg:x="408" fg:w="1"/><text x="32.8119%" y="575.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="32.5619%" y="549" width="0.0798%" height="15" fill="rgb(234,129,31)" fg:x="408" fg:w="1"/><text x="32.8119%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="32.5619%" y="533" width="0.0798%" height="15" fill="rgb(219,177,4)" fg:x="408" fg:w="1"/><text x="32.8119%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.5619%" y="517" width="0.0798%" height="15" fill="rgb(225,142,27)" fg:x="408" fg:w="1"/><text x="32.8119%" y="527.50"></text></g><g><title>kernel::model::entity::EntityBuilder::new (1 samples, 0.08%)</title><rect x="32.6417%" y="565" width="0.0798%" height="15" fill="rgb(205,107,51)" fg:x="409" fg:w="1"/><text x="32.8917%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.7215%" y="549" width="0.0798%" height="15" fill="rgb(236,223,15)" fg:x="410" fg:w="1"/><text x="32.9715%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.7215%" y="533" width="0.0798%" height="15" fill="rgb(235,133,11)" fg:x="410" fg:w="1"/><text x="32.9715%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.7215%" y="517" width="0.0798%" height="15" fill="rgb(247,172,13)" fg:x="410" fg:w="1"/><text x="32.9715%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.7215%" y="501" width="0.0798%" height="15" fill="rgb(233,191,41)" fg:x="410" fg:w="1"/><text x="32.9715%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.7215%" y="485" width="0.0798%" height="15" fill="rgb(250,65,16)" fg:x="410" fg:w="1"/><text x="32.9715%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.7215%" y="469" width="0.0798%" height="15" fill="rgb(206,10,27)" fg:x="410" fg:w="1"/><text x="32.9715%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.7215%" y="453" width="0.0798%" height="15" fill="rgb(212,96,22)" fg:x="410" fg:w="1"/><text x="32.9715%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.7215%" y="437" width="0.0798%" height="15" fill="rgb(206,50,0)" fg:x="410" fg:w="1"/><text x="32.9715%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.7215%" y="421" width="0.0798%" height="15" fill="rgb(249,105,52)" fg:x="410" fg:w="1"/><text x="32.9715%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.7215%" y="405" width="0.0798%" height="15" fill="rgb(216,93,51)" fg:x="410" fg:w="1"/><text x="32.9715%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.7215%" y="389" width="0.0798%" height="15" fill="rgb(217,172,13)" fg:x="410" fg:w="1"/><text x="32.9715%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.7215%" y="373" width="0.0798%" height="15" fill="rgb(235,199,38)" fg:x="410" fg:w="1"/><text x="32.9715%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="32.8013%" y="549" width="0.0798%" height="15" fill="rgb(221,97,33)" fg:x="411" fg:w="1"/><text x="33.0513%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="32.8013%" y="533" width="0.0798%" height="15" fill="rgb(205,156,50)" fg:x="411" fg:w="1"/><text x="33.0513%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="32.8013%" y="517" width="0.0798%" height="15" fill="rgb(215,142,19)" fg:x="411" fg:w="1"/><text x="33.0513%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="32.8811%" y="549" width="0.1596%" height="15" fill="rgb(232,170,7)" fg:x="412" fg:w="2"/><text x="33.1311%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="32.8811%" y="533" width="0.1596%" height="15" fill="rgb(223,50,17)" fg:x="412" fg:w="2"/><text x="33.1311%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="32.8811%" y="517" width="0.1596%" height="15" fill="rgb(230,103,46)" fg:x="412" fg:w="2"/><text x="33.1311%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="32.9609%" y="501" width="0.0798%" height="15" fill="rgb(254,30,34)" fg:x="413" fg:w="1"/><text x="33.2109%" y="511.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (7 samples, 0.56%)</title><rect x="32.5619%" y="581" width="0.5587%" height="15" fill="rgb(235,198,1)" fg:x="408" fg:w="7"/><text x="32.8119%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="32.7215%" y="565" width="0.3990%" height="15" fill="rgb(217,105,47)" fg:x="410" fg:w="5"/><text x="32.9715%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.0407%" y="549" width="0.0798%" height="15" fill="rgb(231,18,12)" fg:x="414" fg:w="1"/><text x="33.2907%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.1205%" y="501" width="0.0798%" height="15" fill="rgb(218,196,1)" fg:x="415" fg:w="1"/><text x="33.3705%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.1205%" y="485" width="0.0798%" height="15" fill="rgb(210,32,3)" fg:x="415" fg:w="1"/><text x="33.3705%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.2003%" y="501" width="0.0798%" height="15" fill="rgb(227,178,30)" fg:x="416" fg:w="1"/><text x="33.4503%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="33.2003%" y="485" width="0.0798%" height="15" fill="rgb(231,140,27)" fg:x="416" fg:w="1"/><text x="33.4503%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.2003%" y="469" width="0.0798%" height="15" fill="rgb(206,66,35)" fg:x="416" fg:w="1"/><text x="33.4503%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="33.1205%" y="549" width="0.2394%" height="15" fill="rgb(212,34,2)" fg:x="415" fg:w="3"/><text x="33.3705%" y="559.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="33.1205%" y="533" width="0.2394%" height="15" fill="rgb(207,201,33)" fg:x="415" fg:w="3"/><text x="33.3705%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="33.1205%" y="517" width="0.2394%" height="15" fill="rgb(221,135,32)" fg:x="415" fg:w="3"/><text x="33.3705%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.2801%" y="501" width="0.0798%" height="15" fill="rgb(206,77,31)" fg:x="417" fg:w="1"/><text x="33.5301%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.2801%" y="485" width="0.0798%" height="15" fill="rgb(252,198,50)" fg:x="417" fg:w="1"/><text x="33.5301%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.2801%" y="469" width="0.0798%" height="15" fill="rgb(206,79,27)" fg:x="417" fg:w="1"/><text x="33.5301%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.2801%" y="453" width="0.0798%" height="15" fill="rgb(228,108,9)" fg:x="417" fg:w="1"/><text x="33.5301%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="33.2801%" y="437" width="0.0798%" height="15" fill="rgb(213,9,39)" fg:x="417" fg:w="1"/><text x="33.5301%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.2801%" y="421" width="0.0798%" height="15" fill="rgb(252,51,13)" fg:x="417" fg:w="1"/><text x="33.5301%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.2801%" y="405" width="0.0798%" height="15" fill="rgb(218,202,39)" fg:x="417" fg:w="1"/><text x="33.5301%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.2801%" y="389" width="0.0798%" height="15" fill="rgb(214,122,21)" fg:x="417" fg:w="1"/><text x="33.5301%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.2801%" y="373" width="0.0798%" height="15" fill="rgb(217,205,48)" fg:x="417" fg:w="1"/><text x="33.5301%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.2801%" y="357" width="0.0798%" height="15" fill="rgb(230,216,13)" fg:x="417" fg:w="1"/><text x="33.5301%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.2801%" y="341" width="0.0798%" height="15" fill="rgb(249,118,4)" fg:x="417" fg:w="1"/><text x="33.5301%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.2801%" y="325" width="0.0798%" height="15" fill="rgb(212,207,40)" fg:x="417" fg:w="1"/><text x="33.5301%" y="335.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="33.3599%" y="549" width="0.0798%" height="15" fill="rgb(217,156,26)" fg:x="418" fg:w="1"/><text x="33.6099%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="33.3599%" y="533" width="0.0798%" height="15" fill="rgb(226,86,34)" fg:x="418" fg:w="1"/><text x="33.6099%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="33.3599%" y="517" width="0.0798%" height="15" fill="rgb(217,111,30)" fg:x="418" fg:w="1"/><text x="33.6099%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.3599%" y="501" width="0.0798%" height="15" fill="rgb(228,64,18)" fg:x="418" fg:w="1"/><text x="33.6099%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.3599%" y="485" width="0.0798%" height="15" fill="rgb(254,217,48)" fg:x="418" fg:w="1"/><text x="33.6099%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.3599%" y="469" width="0.0798%" height="15" fill="rgb(226,156,48)" fg:x="418" fg:w="1"/><text x="33.6099%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.4397%" y="469" width="0.0798%" height="15" fill="rgb(236,168,20)" fg:x="419" fg:w="1"/><text x="33.6897%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.4397%" y="453" width="0.0798%" height="15" fill="rgb(239,210,33)" fg:x="419" fg:w="1"/><text x="33.6897%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.4397%" y="437" width="0.0798%" height="15" fill="rgb(242,85,17)" fg:x="419" fg:w="1"/><text x="33.6897%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.4397%" y="421" width="0.0798%" height="15" fill="rgb(221,196,15)" fg:x="419" fg:w="1"/><text x="33.6897%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.4397%" y="405" width="0.0798%" height="15" fill="rgb(249,76,21)" fg:x="419" fg:w="1"/><text x="33.6897%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.4397%" y="389" width="0.0798%" height="15" fill="rgb(243,67,29)" fg:x="419" fg:w="1"/><text x="33.6897%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="33.1205%" y="565" width="0.4789%" height="15" fill="rgb(240,159,2)" fg:x="415" fg:w="6"/><text x="33.3705%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="33.4397%" y="549" width="0.1596%" height="15" fill="rgb(244,64,3)" fg:x="419" fg:w="2"/><text x="33.6897%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="33.4397%" y="533" width="0.1596%" height="15" fill="rgb(220,86,40)" fg:x="419" fg:w="2"/><text x="33.6897%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="33.4397%" y="517" width="0.1596%" height="15" fill="rgb(222,194,51)" fg:x="419" fg:w="2"/><text x="33.6897%" y="527.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="33.4397%" y="501" width="0.1596%" height="15" fill="rgb(207,154,19)" fg:x="419" fg:w="2"/><text x="33.6897%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="33.4397%" y="485" width="0.1596%" height="15" fill="rgb(206,178,36)" fg:x="419" fg:w="2"/><text x="33.6897%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.5196%" y="469" width="0.0798%" height="15" fill="rgb(218,8,24)" fg:x="420" fg:w="1"/><text x="33.7696%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="33.5196%" y="453" width="0.0798%" height="15" fill="rgb(226,83,41)" fg:x="420" fg:w="1"/><text x="33.7696%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.5196%" y="437" width="0.0798%" height="15" fill="rgb(224,23,22)" fg:x="420" fg:w="1"/><text x="33.7696%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.5196%" y="421" width="0.0798%" height="15" fill="rgb(218,198,45)" fg:x="420" fg:w="1"/><text x="33.7696%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.5196%" y="405" width="0.0798%" height="15" fill="rgb(249,147,41)" fg:x="420" fg:w="1"/><text x="33.7696%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.5196%" y="389" width="0.0798%" height="15" fill="rgb(244,224,13)" fg:x="420" fg:w="1"/><text x="33.7696%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.5196%" y="373" width="0.0798%" height="15" fill="rgb(225,97,27)" fg:x="420" fg:w="1"/><text x="33.7696%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.5196%" y="357" width="0.0798%" height="15" fill="rgb(254,64,0)" fg:x="420" fg:w="1"/><text x="33.7696%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.7590%" y="469" width="0.1596%" height="15" fill="rgb(208,130,43)" fg:x="423" fg:w="2"/><text x="34.0090%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.7590%" y="453" width="0.1596%" height="15" fill="rgb(247,91,25)" fg:x="423" fg:w="2"/><text x="34.0090%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.7590%" y="437" width="0.1596%" height="15" fill="rgb(215,218,42)" fg:x="423" fg:w="2"/><text x="34.0090%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.7590%" y="421" width="0.1596%" height="15" fill="rgb(233,9,24)" fg:x="423" fg:w="2"/><text x="34.0090%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.7590%" y="405" width="0.1596%" height="15" fill="rgb(252,105,38)" fg:x="423" fg:w="2"/><text x="34.0090%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.8388%" y="389" width="0.0798%" height="15" fill="rgb(225,40,49)" fg:x="424" fg:w="1"/><text x="34.0888%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.8388%" y="373" width="0.0798%" height="15" fill="rgb(232,196,19)" fg:x="424" fg:w="1"/><text x="34.0888%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.8388%" y="357" width="0.0798%" height="15" fill="rgb(207,35,15)" fg:x="424" fg:w="1"/><text x="34.0888%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.8388%" y="341" width="0.0798%" height="15" fill="rgb(238,68,36)" fg:x="424" fg:w="1"/><text x="34.0888%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.8388%" y="325" width="0.0798%" height="15" fill="rgb(205,158,20)" fg:x="424" fg:w="1"/><text x="34.0888%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.8388%" y="309" width="0.0798%" height="15" fill="rgb(232,32,22)" fg:x="424" fg:w="1"/><text x="34.0888%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.8388%" y="293" width="0.0798%" height="15" fill="rgb(210,169,6)" fg:x="424" fg:w="1"/><text x="34.0888%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.8388%" y="277" width="0.0798%" height="15" fill="rgb(229,28,12)" fg:x="424" fg:w="1"/><text x="34.0888%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.8388%" y="261" width="0.0798%" height="15" fill="rgb(229,78,10)" fg:x="424" fg:w="1"/><text x="34.0888%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.8388%" y="245" width="0.0798%" height="15" fill="rgb(223,139,54)" fg:x="424" fg:w="1"/><text x="34.0888%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.8388%" y="229" width="0.0798%" height="15" fill="rgb(207,110,4)" fg:x="424" fg:w="1"/><text x="34.0888%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.8388%" y="213" width="0.0798%" height="15" fill="rgb(248,30,41)" fg:x="424" fg:w="1"/><text x="34.0888%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.9186%" y="469" width="0.0798%" height="15" fill="rgb(235,54,25)" fg:x="425" fg:w="1"/><text x="34.1686%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="33.9186%" y="453" width="0.0798%" height="15" fill="rgb(213,107,41)" fg:x="425" fg:w="1"/><text x="34.1686%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.9186%" y="437" width="0.0798%" height="15" fill="rgb(237,102,9)" fg:x="425" fg:w="1"/><text x="34.1686%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.9186%" y="421" width="0.0798%" height="15" fill="rgb(252,137,49)" fg:x="425" fg:w="1"/><text x="34.1686%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="33.7590%" y="517" width="0.3192%" height="15" fill="rgb(233,202,33)" fg:x="423" fg:w="4"/><text x="34.0090%" y="527.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="33.7590%" y="501" width="0.3192%" height="15" fill="rgb(223,14,51)" fg:x="423" fg:w="4"/><text x="34.0090%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="33.7590%" y="485" width="0.3192%" height="15" fill="rgb(248,70,23)" fg:x="423" fg:w="4"/><text x="34.0090%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.9984%" y="469" width="0.0798%" height="15" fill="rgb(209,207,47)" fg:x="426" fg:w="1"/><text x="34.2484%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.9984%" y="453" width="0.0798%" height="15" fill="rgb(245,124,2)" fg:x="426" fg:w="1"/><text x="34.2484%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.9984%" y="437" width="0.0798%" height="15" fill="rgb(249,208,11)" fg:x="426" fg:w="1"/><text x="34.2484%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.9984%" y="421" width="0.0798%" height="15" fill="rgb(247,112,7)" fg:x="426" fg:w="1"/><text x="34.2484%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="33.9984%" y="405" width="0.0798%" height="15" fill="rgb(209,192,31)" fg:x="426" fg:w="1"/><text x="34.2484%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.9984%" y="389" width="0.0798%" height="15" fill="rgb(236,55,19)" fg:x="426" fg:w="1"/><text x="34.2484%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.9984%" y="373" width="0.0798%" height="15" fill="rgb(252,89,41)" fg:x="426" fg:w="1"/><text x="34.2484%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.9984%" y="357" width="0.0798%" height="15" fill="rgb(220,172,14)" fg:x="426" fg:w="1"/><text x="34.2484%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.1580%" y="469" width="0.1596%" height="15" fill="rgb(252,65,2)" fg:x="428" fg:w="2"/><text x="34.4080%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.1580%" y="453" width="0.1596%" height="15" fill="rgb(250,20,8)" fg:x="428" fg:w="2"/><text x="34.4080%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.1580%" y="437" width="0.1596%" height="15" fill="rgb(234,149,13)" fg:x="428" fg:w="2"/><text x="34.4080%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.2378%" y="421" width="0.0798%" height="15" fill="rgb(223,219,12)" fg:x="429" fg:w="1"/><text x="34.4878%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.2378%" y="405" width="0.0798%" height="15" fill="rgb(234,13,49)" fg:x="429" fg:w="1"/><text x="34.4878%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.2378%" y="389" width="0.0798%" height="15" fill="rgb(214,41,25)" fg:x="429" fg:w="1"/><text x="34.4878%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.2378%" y="373" width="0.0798%" height="15" fill="rgb(232,198,52)" fg:x="429" fg:w="1"/><text x="34.4878%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.2378%" y="357" width="0.0798%" height="15" fill="rgb(236,111,46)" fg:x="429" fg:w="1"/><text x="34.4878%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.2378%" y="341" width="0.0798%" height="15" fill="rgb(253,30,20)" fg:x="429" fg:w="1"/><text x="34.4878%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.2378%" y="325" width="0.0798%" height="15" fill="rgb(247,141,17)" fg:x="429" fg:w="1"/><text x="34.4878%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.2378%" y="309" width="0.0798%" height="15" fill="rgb(214,195,21)" fg:x="429" fg:w="1"/><text x="34.4878%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.2378%" y="293" width="0.0798%" height="15" fill="rgb(214,98,12)" fg:x="429" fg:w="1"/><text x="34.4878%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.2378%" y="277" width="0.0798%" height="15" fill="rgb(239,4,26)" fg:x="429" fg:w="1"/><text x="34.4878%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.2378%" y="261" width="0.0798%" height="15" fill="rgb(234,210,35)" fg:x="429" fg:w="1"/><text x="34.4878%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.2378%" y="245" width="0.0798%" height="15" fill="rgb(252,178,27)" fg:x="429" fg:w="1"/><text x="34.4878%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.2378%" y="229" width="0.0798%" height="15" fill="rgb(217,50,1)" fg:x="429" fg:w="1"/><text x="34.4878%" y="239.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="34.2378%" y="213" width="0.0798%" height="15" fill="rgb(233,137,5)" fg:x="429" fg:w="1"/><text x="34.4878%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.3974%" y="389" width="0.0798%" height="15" fill="rgb(217,227,25)" fg:x="431" fg:w="1"/><text x="34.6474%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="34.3176%" y="469" width="0.2394%" height="15" fill="rgb(242,89,38)" fg:x="430" fg:w="3"/><text x="34.5676%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="34.3176%" y="453" width="0.2394%" height="15" fill="rgb(212,190,30)" fg:x="430" fg:w="3"/><text x="34.5676%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="34.3176%" y="437" width="0.2394%" height="15" fill="rgb(222,120,8)" fg:x="430" fg:w="3"/><text x="34.5676%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="34.3176%" y="421" width="0.2394%" height="15" fill="rgb(227,181,9)" fg:x="430" fg:w="3"/><text x="34.5676%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="34.3176%" y="405" width="0.2394%" height="15" fill="rgb(222,125,29)" fg:x="430" fg:w="3"/><text x="34.5676%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.4773%" y="389" width="0.0798%" height="15" fill="rgb(215,153,31)" fg:x="432" fg:w="1"/><text x="34.7273%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.4773%" y="373" width="0.0798%" height="15" fill="rgb(228,77,30)" fg:x="432" fg:w="1"/><text x="34.7273%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.5571%" y="437" width="0.0798%" height="15" fill="rgb(226,110,9)" fg:x="433" fg:w="1"/><text x="34.8071%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (13 samples, 1.04%)</title><rect x="33.6792%" y="549" width="1.0375%" height="15" fill="rgb(219,111,7)" fg:x="422" fg:w="13"/><text x="33.9292%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (13 samples, 1.04%)</title><rect x="33.6792%" y="533" width="1.0375%" height="15" fill="rgb(229,167,25)" fg:x="422" fg:w="13"/><text x="33.9292%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (8 samples, 0.64%)</title><rect x="34.0782%" y="517" width="0.6385%" height="15" fill="rgb(209,77,43)" fg:x="427" fg:w="8"/><text x="34.3282%" y="527.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.64%)</title><rect x="34.0782%" y="501" width="0.6385%" height="15" fill="rgb(233,70,39)" fg:x="427" fg:w="8"/><text x="34.3282%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="34.0782%" y="485" width="0.6385%" height="15" fill="rgb(207,171,44)" fg:x="427" fg:w="8"/><text x="34.3282%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.5571%" y="469" width="0.1596%" height="15" fill="rgb(244,91,6)" fg:x="433" fg:w="2"/><text x="34.8071%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.5571%" y="453" width="0.1596%" height="15" fill="rgb(234,136,12)" fg:x="433" fg:w="2"/><text x="34.8071%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.6369%" y="437" width="0.0798%" height="15" fill="rgb(216,210,38)" fg:x="434" fg:w="1"/><text x="34.8869%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.6369%" y="421" width="0.0798%" height="15" fill="rgb(241,227,7)" fg:x="434" fg:w="1"/><text x="34.8869%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="34.6369%" y="405" width="0.0798%" height="15" fill="rgb(241,222,11)" fg:x="434" fg:w="1"/><text x="34.8869%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.6369%" y="389" width="0.0798%" height="15" fill="rgb(246,86,18)" fg:x="434" fg:w="1"/><text x="34.8869%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.6369%" y="373" width="0.0798%" height="15" fill="rgb(224,151,49)" fg:x="434" fg:w="1"/><text x="34.8869%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.6369%" y="357" width="0.0798%" height="15" fill="rgb(235,4,41)" fg:x="434" fg:w="1"/><text x="34.8869%" y="367.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="34.6369%" y="341" width="0.0798%" height="15" fill="rgb(218,30,52)" fg:x="434" fg:w="1"/><text x="34.8869%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="34.7167%" y="501" width="0.0798%" height="15" fill="rgb(205,124,51)" fg:x="435" fg:w="1"/><text x="34.9667%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="34.7167%" y="485" width="0.0798%" height="15" fill="rgb(237,126,51)" fg:x="435" fg:w="1"/><text x="34.9667%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="34.7167%" y="549" width="0.3192%" height="15" fill="rgb(225,32,46)" fg:x="435" fg:w="4"/><text x="34.9667%" y="559.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (4 samples, 0.32%)</title><rect x="34.7167%" y="533" width="0.3192%" height="15" fill="rgb(251,60,49)" fg:x="435" fg:w="4"/><text x="34.9667%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="34.7167%" y="517" width="0.3192%" height="15" fill="rgb(234,18,23)" fg:x="435" fg:w="4"/><text x="34.9667%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="34.7965%" y="501" width="0.2394%" height="15" fill="rgb(234,25,23)" fg:x="436" fg:w="3"/><text x="35.0465%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="34.7965%" y="485" width="0.2394%" height="15" fill="rgb(210,43,52)" fg:x="436" fg:w="3"/><text x="35.0465%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="34.7965%" y="469" width="0.2394%" height="15" fill="rgb(237,198,21)" fg:x="436" fg:w="3"/><text x="35.0465%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="34.8763%" y="453" width="0.1596%" height="15" fill="rgb(211,20,34)" fg:x="437" fg:w="2"/><text x="35.1263%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.0359%" y="485" width="0.0798%" height="15" fill="rgb(221,155,50)" fg:x="439" fg:w="1"/><text x="35.2859%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="35.0359%" y="501" width="0.2394%" height="15" fill="rgb(213,214,53)" fg:x="439" fg:w="3"/><text x="35.2859%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="35.1157%" y="485" width="0.1596%" height="15" fill="rgb(215,229,48)" fg:x="440" fg:w="2"/><text x="35.3657%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="35.1157%" y="469" width="0.1596%" height="15" fill="rgb(243,88,5)" fg:x="440" fg:w="2"/><text x="35.3657%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.1157%" y="453" width="0.1596%" height="15" fill="rgb(216,199,8)" fg:x="440" fg:w="2"/><text x="35.3657%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.1157%" y="437" width="0.1596%" height="15" fill="rgb(241,22,4)" fg:x="440" fg:w="2"/><text x="35.3657%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.1157%" y="421" width="0.1596%" height="15" fill="rgb(209,190,22)" fg:x="440" fg:w="2"/><text x="35.3657%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.1157%" y="405" width="0.1596%" height="15" fill="rgb(251,138,45)" fg:x="440" fg:w="2"/><text x="35.3657%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="35.1157%" y="389" width="0.1596%" height="15" fill="rgb(219,111,22)" fg:x="440" fg:w="2"/><text x="35.3657%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.1157%" y="373" width="0.1596%" height="15" fill="rgb(253,29,49)" fg:x="440" fg:w="2"/><text x="35.3657%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.1955%" y="357" width="0.0798%" height="15" fill="rgb(238,129,49)" fg:x="441" fg:w="1"/><text x="35.4455%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.2753%" y="389" width="0.0798%" height="15" fill="rgb(240,26,41)" fg:x="442" fg:w="1"/><text x="35.5253%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.2753%" y="373" width="0.0798%" height="15" fill="rgb(221,47,33)" fg:x="442" fg:w="1"/><text x="35.5253%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.2753%" y="421" width="0.1596%" height="15" fill="rgb(216,200,17)" fg:x="442" fg:w="2"/><text x="35.5253%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.2753%" y="405" width="0.1596%" height="15" fill="rgb(230,151,26)" fg:x="442" fg:w="2"/><text x="35.5253%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.3551%" y="389" width="0.0798%" height="15" fill="rgb(242,182,16)" fg:x="443" fg:w="1"/><text x="35.6051%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.3551%" y="373" width="0.0798%" height="15" fill="rgb(236,35,53)" fg:x="443" fg:w="1"/><text x="35.6051%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.3551%" y="357" width="0.0798%" height="15" fill="rgb(214,180,28)" fg:x="443" fg:w="1"/><text x="35.6051%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.3551%" y="341" width="0.0798%" height="15" fill="rgb(208,173,36)" fg:x="443" fg:w="1"/><text x="35.6051%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.3551%" y="325" width="0.0798%" height="15" fill="rgb(218,39,15)" fg:x="443" fg:w="1"/><text x="35.6051%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="35.3551%" y="309" width="0.0798%" height="15" fill="rgb(213,145,15)" fg:x="443" fg:w="1"/><text x="35.6051%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="35.3551%" y="293" width="0.0798%" height="15" fill="rgb(242,110,37)" fg:x="443" fg:w="1"/><text x="35.6051%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="35.2753%" y="437" width="0.2394%" height="15" fill="rgb(247,146,22)" fg:x="442" fg:w="3"/><text x="35.5253%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.4350%" y="421" width="0.0798%" height="15" fill="rgb(215,191,7)" fg:x="444" fg:w="1"/><text x="35.6850%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="35.2753%" y="453" width="0.3990%" height="15" fill="rgb(240,158,1)" fg:x="442" fg:w="5"/><text x="35.5253%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="35.5148%" y="437" width="0.1596%" height="15" fill="rgb(241,78,32)" fg:x="445" fg:w="2"/><text x="35.7648%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="35.5148%" y="421" width="0.1596%" height="15" fill="rgb(248,83,10)" fg:x="445" fg:w="2"/><text x="35.7648%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="35.5148%" y="405" width="0.1596%" height="15" fill="rgb(241,52,0)" fg:x="445" fg:w="2"/><text x="35.7648%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="35.5148%" y="389" width="0.1596%" height="15" fill="rgb(238,37,13)" fg:x="445" fg:w="2"/><text x="35.7648%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="35.5148%" y="373" width="0.1596%" height="15" fill="rgb(242,194,17)" fg:x="445" fg:w="2"/><text x="35.7648%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="35.5148%" y="357" width="0.1596%" height="15" fill="rgb(236,96,3)" fg:x="445" fg:w="2"/><text x="35.7648%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="35.5148%" y="341" width="0.1596%" height="15" fill="rgb(235,148,34)" fg:x="445" fg:w="2"/><text x="35.7648%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="35.5148%" y="325" width="0.1596%" height="15" fill="rgb(254,12,11)" fg:x="445" fg:w="2"/><text x="35.7648%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="35.5148%" y="309" width="0.1596%" height="15" fill="rgb(207,31,54)" fg:x="445" fg:w="2"/><text x="35.7648%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="35.5148%" y="293" width="0.1596%" height="15" fill="rgb(252,14,28)" fg:x="445" fg:w="2"/><text x="35.7648%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="35.5148%" y="277" width="0.1596%" height="15" fill="rgb(252,108,36)" fg:x="445" fg:w="2"/><text x="35.7648%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="35.5148%" y="261" width="0.1596%" height="15" fill="rgb(214,149,7)" fg:x="445" fg:w="2"/><text x="35.7648%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.7542%" y="405" width="0.0798%" height="15" fill="rgb(243,94,12)" fg:x="448" fg:w="1"/><text x="36.0042%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="35.6744%" y="453" width="0.2394%" height="15" fill="rgb(208,36,10)" fg:x="447" fg:w="3"/><text x="35.9244%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="35.7542%" y="437" width="0.1596%" height="15" fill="rgb(233,185,52)" fg:x="448" fg:w="2"/><text x="36.0042%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="35.7542%" y="421" width="0.1596%" height="15" fill="rgb(234,50,45)" fg:x="448" fg:w="2"/><text x="36.0042%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.8340%" y="405" width="0.0798%" height="15" fill="rgb(228,92,54)" fg:x="449" fg:w="1"/><text x="36.0840%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.8340%" y="389" width="0.0798%" height="15" fill="rgb(224,85,25)" fg:x="449" fg:w="1"/><text x="36.0840%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (13 samples, 1.04%)</title><rect x="35.0359%" y="533" width="1.0375%" height="15" fill="rgb(246,1,45)" fg:x="439" fg:w="13"/><text x="35.2859%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (13 samples, 1.04%)</title><rect x="35.0359%" y="517" width="1.0375%" height="15" fill="rgb(240,66,23)" fg:x="439" fg:w="13"/><text x="35.2859%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (10 samples, 0.80%)</title><rect x="35.2753%" y="501" width="0.7981%" height="15" fill="rgb(222,96,27)" fg:x="442" fg:w="10"/><text x="35.5253%" y="511.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.80%)</title><rect x="35.2753%" y="485" width="0.7981%" height="15" fill="rgb(212,136,10)" fg:x="442" fg:w="10"/><text x="35.5253%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.80%)</title><rect x="35.2753%" y="469" width="0.7981%" height="15" fill="rgb(226,192,50)" fg:x="442" fg:w="10"/><text x="35.5253%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.9138%" y="453" width="0.1596%" height="15" fill="rgb(241,182,31)" fg:x="450" fg:w="2"/><text x="36.1638%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.9138%" y="437" width="0.1596%" height="15" fill="rgb(219,205,47)" fg:x="450" fg:w="2"/><text x="36.1638%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.9138%" y="421" width="0.1596%" height="15" fill="rgb(207,96,14)" fg:x="450" fg:w="2"/><text x="36.1638%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.9138%" y="405" width="0.1596%" height="15" fill="rgb(216,119,9)" fg:x="450" fg:w="2"/><text x="36.1638%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="35.9138%" y="389" width="0.1596%" height="15" fill="rgb(235,62,36)" fg:x="450" fg:w="2"/><text x="36.1638%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.9138%" y="373" width="0.1596%" height="15" fill="rgb(214,41,27)" fg:x="450" fg:w="2"/><text x="36.1638%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.9138%" y="357" width="0.1596%" height="15" fill="rgb(214,174,37)" fg:x="450" fg:w="2"/><text x="36.1638%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.9138%" y="341" width="0.1596%" height="15" fill="rgb(212,11,25)" fg:x="450" fg:w="2"/><text x="36.1638%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="35.9138%" y="325" width="0.1596%" height="15" fill="rgb(217,71,35)" fg:x="450" fg:w="2"/><text x="36.1638%" y="335.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (14 samples, 1.12%)</title><rect x="35.0359%" y="549" width="1.1173%" height="15" fill="rgb(234,152,9)" fg:x="439" fg:w="14"/><text x="35.2859%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="36.0734%" y="533" width="0.0798%" height="15" fill="rgb(228,32,51)" fg:x="452" fg:w="1"/><text x="36.3234%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="36.0734%" y="517" width="0.0798%" height="15" fill="rgb(209,14,47)" fg:x="452" fg:w="1"/><text x="36.3234%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="36.0734%" y="501" width="0.0798%" height="15" fill="rgb(218,201,17)" fg:x="452" fg:w="1"/><text x="36.3234%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="36.0734%" y="485" width="0.0798%" height="15" fill="rgb(218,98,15)" fg:x="452" fg:w="1"/><text x="36.3234%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="36.0734%" y="469" width="0.0798%" height="15" fill="rgb(233,202,29)" fg:x="452" fg:w="1"/><text x="36.3234%" y="479.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="36.0734%" y="453" width="0.0798%" height="15" fill="rgb(207,196,44)" fg:x="452" fg:w="1"/><text x="36.3234%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="36.0734%" y="437" width="0.0798%" height="15" fill="rgb(218,63,34)" fg:x="452" fg:w="1"/><text x="36.3234%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.0734%" y="421" width="0.0798%" height="15" fill="rgb(209,10,5)" fg:x="452" fg:w="1"/><text x="36.3234%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.0734%" y="405" width="0.0798%" height="15" fill="rgb(224,36,28)" fg:x="452" fg:w="1"/><text x="36.3234%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.0734%" y="389" width="0.0798%" height="15" fill="rgb(249,178,7)" fg:x="452" fg:w="1"/><text x="36.3234%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.0734%" y="373" width="0.0798%" height="15" fill="rgb(253,163,10)" fg:x="452" fg:w="1"/><text x="36.3234%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.0734%" y="357" width="0.0798%" height="15" fill="rgb(245,67,46)" fg:x="452" fg:w="1"/><text x="36.3234%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.0734%" y="341" width="0.0798%" height="15" fill="rgb(225,14,18)" fg:x="452" fg:w="1"/><text x="36.3234%" y="351.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="36.0734%" y="325" width="0.0798%" height="15" fill="rgb(217,41,54)" fg:x="452" fg:w="1"/><text x="36.3234%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="36.0734%" y="309" width="0.0798%" height="15" fill="rgb(222,111,11)" fg:x="452" fg:w="1"/><text x="36.3234%" y="319.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="36.1532%" y="533" width="0.0798%" height="15" fill="rgb(211,85,31)" fg:x="453" fg:w="1"/><text x="36.4032%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="36.1532%" y="517" width="0.0798%" height="15" fill="rgb(223,29,26)" fg:x="453" fg:w="1"/><text x="36.4032%" y="527.50"></text></g><g><title>plugins_core::build::Build::holding (41 samples, 3.27%)</title><rect x="33.1205%" y="581" width="3.2721%" height="15" fill="rgb(236,124,50)" fg:x="415" fg:w="41"/><text x="33.3705%" y="591.50">plu..</text></g><g><title>plugins_core::tools::set_container (35 samples, 2.79%)</title><rect x="33.5994%" y="565" width="2.7933%" height="15" fill="rgb(219,148,15)" fg:x="421" fg:w="35"/><text x="33.8494%" y="575.50">pl..</text></g><g><title>plugins_core::location::Location::set (3 samples, 0.24%)</title><rect x="36.1532%" y="549" width="0.2394%" height="15" fill="rgb(248,159,33)" fg:x="453" fg:w="3"/><text x="36.4032%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="36.2330%" y="533" width="0.1596%" height="15" fill="rgb(252,65,8)" fg:x="454" fg:w="2"/><text x="36.4830%" y="543.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="36.3128%" y="517" width="0.0798%" height="15" fill="rgb(236,45,7)" fg:x="455" fg:w="1"/><text x="36.5628%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.3128%" y="501" width="0.0798%" height="15" fill="rgb(244,3,48)" fg:x="455" fg:w="1"/><text x="36.5628%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="36.3128%" y="485" width="0.0798%" height="15" fill="rgb(224,123,53)" fg:x="455" fg:w="1"/><text x="36.5628%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.3128%" y="469" width="0.0798%" height="15" fill="rgb(223,173,15)" fg:x="455" fg:w="1"/><text x="36.5628%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.4725%" y="437" width="0.0798%" height="15" fill="rgb(254,181,5)" fg:x="457" fg:w="1"/><text x="36.7225%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.4725%" y="421" width="0.0798%" height="15" fill="rgb(243,124,33)" fg:x="457" fg:w="1"/><text x="36.7225%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.4725%" y="405" width="0.0798%" height="15" fill="rgb(253,220,11)" fg:x="457" fg:w="1"/><text x="36.7225%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.4725%" y="389" width="0.0798%" height="15" fill="rgb(217,14,4)" fg:x="457" fg:w="1"/><text x="36.7225%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.4725%" y="373" width="0.0798%" height="15" fill="rgb(209,196,12)" fg:x="457" fg:w="1"/><text x="36.7225%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.4725%" y="357" width="0.0798%" height="15" fill="rgb(237,108,29)" fg:x="457" fg:w="1"/><text x="36.7225%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="36.4725%" y="341" width="0.0798%" height="15" fill="rgb(216,173,20)" fg:x="457" fg:w="1"/><text x="36.7225%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="36.4725%" y="325" width="0.0798%" height="15" fill="rgb(245,27,6)" fg:x="457" fg:w="1"/><text x="36.7225%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="36.3927%" y="469" width="0.2394%" height="15" fill="rgb(210,181,20)" fg:x="456" fg:w="3"/><text x="36.6427%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.4725%" y="453" width="0.1596%" height="15" fill="rgb(235,213,1)" fg:x="457" fg:w="2"/><text x="36.7225%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.5523%" y="437" width="0.0798%" height="15" fill="rgb(239,68,43)" fg:x="458" fg:w="1"/><text x="36.8023%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.5523%" y="421" width="0.0798%" height="15" fill="rgb(254,137,43)" fg:x="458" fg:w="1"/><text x="36.8023%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.5523%" y="405" width="0.0798%" height="15" fill="rgb(252,170,38)" fg:x="458" fg:w="1"/><text x="36.8023%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.5523%" y="389" width="0.0798%" height="15" fill="rgb(234,21,42)" fg:x="458" fg:w="1"/><text x="36.8023%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.5523%" y="373" width="0.0798%" height="15" fill="rgb(216,145,40)" fg:x="458" fg:w="1"/><text x="36.8023%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="36.5523%" y="357" width="0.0798%" height="15" fill="rgb(251,73,9)" fg:x="458" fg:w="1"/><text x="36.8023%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="36.5523%" y="341" width="0.0798%" height="15" fill="rgb(242,54,6)" fg:x="458" fg:w="1"/><text x="36.8023%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="36.3927%" y="501" width="0.3192%" height="15" fill="rgb(239,70,7)" fg:x="456" fg:w="4"/><text x="36.6427%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="36.3927%" y="485" width="0.3192%" height="15" fill="rgb(216,159,35)" fg:x="456" fg:w="4"/><text x="36.6427%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.6321%" y="469" width="0.0798%" height="15" fill="rgb(224,50,39)" fg:x="459" fg:w="1"/><text x="36.8821%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.6321%" y="453" width="0.0798%" height="15" fill="rgb(235,9,35)" fg:x="459" fg:w="1"/><text x="36.8821%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.6321%" y="437" width="0.0798%" height="15" fill="rgb(239,34,21)" fg:x="459" fg:w="1"/><text x="36.8821%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.6321%" y="421" width="0.0798%" height="15" fill="rgb(218,162,43)" fg:x="459" fg:w="1"/><text x="36.8821%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.6321%" y="405" width="0.0798%" height="15" fill="rgb(219,89,33)" fg:x="459" fg:w="1"/><text x="36.8821%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.6321%" y="389" width="0.0798%" height="15" fill="rgb(226,125,37)" fg:x="459" fg:w="1"/><text x="36.8821%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.6321%" y="373" width="0.0798%" height="15" fill="rgb(233,149,30)" fg:x="459" fg:w="1"/><text x="36.8821%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.6321%" y="357" width="0.0798%" height="15" fill="rgb(236,8,18)" fg:x="459" fg:w="1"/><text x="36.8821%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.6321%" y="341" width="0.0798%" height="15" fill="rgb(205,176,9)" fg:x="459" fg:w="1"/><text x="36.8821%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.6321%" y="325" width="0.0798%" height="15" fill="rgb(252,103,44)" fg:x="459" fg:w="1"/><text x="36.8821%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.6321%" y="309" width="0.0798%" height="15" fill="rgb(207,68,53)" fg:x="459" fg:w="1"/><text x="36.8821%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.6321%" y="293" width="0.0798%" height="15" fill="rgb(218,193,48)" fg:x="459" fg:w="1"/><text x="36.8821%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="36.7917%" y="405" width="0.0798%" height="15" fill="rgb(234,121,52)" fg:x="461" fg:w="1"/><text x="37.0417%" y="415.50"></text></g><g><title>plugins_core::build::Build::into_entry (7 samples, 0.56%)</title><rect x="36.3927%" y="581" width="0.5587%" height="15" fill="rgb(227,218,49)" fg:x="456" fg:w="7"/><text x="36.6427%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="36.3927%" y="565" width="0.5587%" height="15" fill="rgb(221,8,7)" fg:x="456" fg:w="7"/><text x="36.6427%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="36.3927%" y="549" width="0.5587%" height="15" fill="rgb(217,151,36)" fg:x="456" fg:w="7"/><text x="36.6427%" y="559.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="36.3927%" y="533" width="0.5587%" height="15" fill="rgb(213,71,5)" fg:x="456" fg:w="7"/><text x="36.6427%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="36.3927%" y="517" width="0.5587%" height="15" fill="rgb(225,145,43)" fg:x="456" fg:w="7"/><text x="36.6427%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="36.7119%" y="501" width="0.2394%" height="15" fill="rgb(235,118,19)" fg:x="460" fg:w="3"/><text x="36.9619%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="36.7119%" y="485" width="0.2394%" height="15" fill="rgb(214,102,36)" fg:x="460" fg:w="3"/><text x="36.9619%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="36.7119%" y="469" width="0.2394%" height="15" fill="rgb(220,56,43)" fg:x="460" fg:w="3"/><text x="36.9619%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.7917%" y="453" width="0.1596%" height="15" fill="rgb(246,136,46)" fg:x="461" fg:w="2"/><text x="37.0417%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="36.7917%" y="437" width="0.1596%" height="15" fill="rgb(249,99,12)" fg:x="461" fg:w="2"/><text x="37.0417%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.7917%" y="421" width="0.1596%" height="15" fill="rgb(224,31,42)" fg:x="461" fg:w="2"/><text x="37.0417%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.8715%" y="405" width="0.0798%" height="15" fill="rgb(208,96,21)" fg:x="462" fg:w="1"/><text x="37.1215%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.8715%" y="389" width="0.0798%" height="15" fill="rgb(237,229,7)" fg:x="462" fg:w="1"/><text x="37.1215%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.8715%" y="373" width="0.0798%" height="15" fill="rgb(210,12,6)" fg:x="462" fg:w="1"/><text x="37.1215%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.8715%" y="357" width="0.0798%" height="15" fill="rgb(240,9,34)" fg:x="462" fg:w="1"/><text x="37.1215%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.1109%" y="517" width="0.0798%" height="15" fill="rgb(211,68,37)" fg:x="465" fg:w="1"/><text x="37.3609%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.1109%" y="501" width="0.0798%" height="15" fill="rgb(249,138,50)" fg:x="465" fg:w="1"/><text x="37.3609%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.1907%" y="517" width="0.0798%" height="15" fill="rgb(243,185,40)" fg:x="466" fg:w="1"/><text x="37.4407%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.1907%" y="501" width="0.0798%" height="15" fill="rgb(242,92,35)" fg:x="466" fg:w="1"/><text x="37.4407%" y="511.50"></text></g><g><title>plugins_core::build::Build::named (7 samples, 0.56%)</title><rect x="36.9513%" y="581" width="0.5587%" height="15" fill="rgb(244,98,5)" fg:x="463" fg:w="7"/><text x="37.2013%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (7 samples, 0.56%)</title><rect x="36.9513%" y="565" width="0.5587%" height="15" fill="rgb(228,186,29)" fg:x="463" fg:w="7"/><text x="37.2013%" y="575.50"></text></g><g><title>kernel::model::props::save_props (6 samples, 0.48%)</title><rect x="37.0311%" y="549" width="0.4789%" height="15" fill="rgb(253,7,44)" fg:x="464" fg:w="6"/><text x="37.2811%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (6 samples, 0.48%)</title><rect x="37.0311%" y="533" width="0.4789%" height="15" fill="rgb(216,11,45)" fg:x="464" fg:w="6"/><text x="37.2811%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="37.2706%" y="517" width="0.2394%" height="15" fill="rgb(205,67,3)" fg:x="467" fg:w="3"/><text x="37.5206%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="37.2706%" y="501" width="0.2394%" height="15" fill="rgb(250,18,3)" fg:x="467" fg:w="3"/><text x="37.5206%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="37.2706%" y="485" width="0.2394%" height="15" fill="rgb(241,222,43)" fg:x="467" fg:w="3"/><text x="37.5206%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="37.2706%" y="469" width="0.2394%" height="15" fill="rgb(233,115,3)" fg:x="467" fg:w="3"/><text x="37.5206%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="37.2706%" y="453" width="0.2394%" height="15" fill="rgb(215,165,25)" fg:x="467" fg:w="3"/><text x="37.5206%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (3 samples, 0.24%)</title><rect x="37.2706%" y="437" width="0.2394%" height="15" fill="rgb(234,179,6)" fg:x="467" fg:w="3"/><text x="37.5206%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="37.3504%" y="421" width="0.1596%" height="15" fill="rgb(215,82,23)" fg:x="468" fg:w="2"/><text x="37.6004%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="37.3504%" y="405" width="0.1596%" height="15" fill="rgb(211,47,18)" fg:x="468" fg:w="2"/><text x="37.6004%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="37.3504%" y="389" width="0.1596%" height="15" fill="rgb(248,17,9)" fg:x="468" fg:w="2"/><text x="37.6004%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.6696%" y="533" width="0.0798%" height="15" fill="rgb(210,212,12)" fg:x="472" fg:w="1"/><text x="37.9196%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="37.6696%" y="549" width="0.1596%" height="15" fill="rgb(230,135,45)" fg:x="472" fg:w="2"/><text x="37.9196%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="37.7494%" y="533" width="0.0798%" height="15" fill="rgb(214,121,41)" fg:x="473" fg:w="1"/><text x="37.9994%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="37.7494%" y="517" width="0.0798%" height="15" fill="rgb(239,165,45)" fg:x="473" fg:w="1"/><text x="37.9994%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="37.7494%" y="501" width="0.0798%" height="15" fill="rgb(214,85,51)" fg:x="473" fg:w="1"/><text x="37.9994%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.7494%" y="485" width="0.0798%" height="15" fill="rgb(223,90,27)" fg:x="473" fg:w="1"/><text x="37.9994%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="37.7494%" y="469" width="0.0798%" height="15" fill="rgb(244,84,11)" fg:x="473" fg:w="1"/><text x="37.9994%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="37.7494%" y="453" width="0.0798%" height="15" fill="rgb(253,41,47)" fg:x="473" fg:w="1"/><text x="37.9994%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="37.7494%" y="437" width="0.0798%" height="15" fill="rgb(232,39,5)" fg:x="473" fg:w="1"/><text x="37.9994%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.7494%" y="421" width="0.0798%" height="15" fill="rgb(211,93,4)" fg:x="473" fg:w="1"/><text x="37.9994%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="37.7494%" y="405" width="0.0798%" height="15" fill="rgb(219,50,49)" fg:x="473" fg:w="1"/><text x="37.9994%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="37.7494%" y="389" width="0.0798%" height="15" fill="rgb(232,80,19)" fg:x="473" fg:w="1"/><text x="37.9994%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="37.7494%" y="373" width="0.0798%" height="15" fill="rgb(215,227,39)" fg:x="473" fg:w="1"/><text x="37.9994%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.7494%" y="357" width="0.0798%" height="15" fill="rgb(211,99,12)" fg:x="473" fg:w="1"/><text x="37.9994%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="37.7494%" y="341" width="0.0798%" height="15" fill="rgb(214,158,5)" fg:x="473" fg:w="1"/><text x="37.9994%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="37.7494%" y="325" width="0.0798%" height="15" fill="rgb(242,19,53)" fg:x="473" fg:w="1"/><text x="37.9994%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="37.7494%" y="309" width="0.0798%" height="15" fill="rgb(208,18,20)" fg:x="473" fg:w="1"/><text x="37.9994%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.7494%" y="293" width="0.0798%" height="15" fill="rgb(250,44,11)" fg:x="473" fg:w="1"/><text x="37.9994%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="37.7494%" y="277" width="0.0798%" height="15" fill="rgb(238,159,13)" fg:x="473" fg:w="1"/><text x="37.9994%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.7494%" y="261" width="0.0798%" height="15" fill="rgb(231,74,18)" fg:x="473" fg:w="1"/><text x="37.9994%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.7494%" y="245" width="0.0798%" height="15" fill="rgb(229,219,45)" fg:x="473" fg:w="1"/><text x="37.9994%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="37.7494%" y="229" width="0.0798%" height="15" fill="rgb(210,221,1)" fg:x="473" fg:w="1"/><text x="37.9994%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="37.7494%" y="213" width="0.0798%" height="15" fill="rgb(209,60,51)" fg:x="473" fg:w="1"/><text x="37.9994%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="37.7494%" y="197" width="0.0798%" height="15" fill="rgb(252,97,34)" fg:x="473" fg:w="1"/><text x="37.9994%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="37.7494%" y="181" width="0.0798%" height="15" fill="rgb(243,211,37)" fg:x="473" fg:w="1"/><text x="37.9994%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="37.7494%" y="165" width="0.0798%" height="15" fill="rgb(210,229,37)" fg:x="473" fg:w="1"/><text x="37.9994%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="37.7494%" y="149" width="0.0798%" height="15" fill="rgb(220,208,43)" fg:x="473" fg:w="1"/><text x="37.9994%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="37.7494%" y="133" width="0.0798%" height="15" fill="rgb(218,118,50)" fg:x="473" fg:w="1"/><text x="37.9994%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="37.7494%" y="117" width="0.0798%" height="15" fill="rgb(254,169,52)" fg:x="473" fg:w="1"/><text x="37.9994%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="37.7494%" y="101" width="0.0798%" height="15" fill="rgb(221,214,37)" fg:x="473" fg:w="1"/><text x="37.9994%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="37.7494%" y="85" width="0.0798%" height="15" fill="rgb(254,186,32)" fg:x="473" fg:w="1"/><text x="37.9994%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="37.7494%" y="69" width="0.0798%" height="15" fill="rgb(215,144,43)" fg:x="473" fg:w="1"/><text x="37.9994%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="37.7494%" y="53" width="0.0798%" height="15" fill="rgb(252,21,46)" fg:x="473" fg:w="1"/><text x="37.9994%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="37.7494%" y="37" width="0.0798%" height="15" fill="rgb(207,166,46)" fg:x="473" fg:w="1"/><text x="37.9994%" y="47.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.8292%" y="501" width="0.0798%" height="15" fill="rgb(253,37,49)" fg:x="474" fg:w="1"/><text x="38.0792%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="37.8292%" y="549" width="0.1596%" height="15" fill="rgb(222,97,20)" fg:x="474" fg:w="2"/><text x="38.0792%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="37.8292%" y="533" width="0.1596%" height="15" fill="rgb(244,181,26)" fg:x="474" fg:w="2"/><text x="38.0792%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="37.8292%" y="517" width="0.1596%" height="15" fill="rgb(241,22,29)" fg:x="474" fg:w="2"/><text x="38.0792%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.9090%" y="501" width="0.0798%" height="15" fill="rgb(206,200,43)" fg:x="475" fg:w="1"/><text x="38.1590%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="37.9090%" y="485" width="0.0798%" height="15" fill="rgb(226,224,43)" fg:x="475" fg:w="1"/><text x="38.1590%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.9090%" y="469" width="0.0798%" height="15" fill="rgb(253,129,28)" fg:x="475" fg:w="1"/><text x="38.1590%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.9090%" y="453" width="0.0798%" height="15" fill="rgb(252,99,33)" fg:x="475" fg:w="1"/><text x="38.1590%" y="463.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.9888%" y="501" width="0.0798%" height="15" fill="rgb(208,123,45)" fg:x="476" fg:w="1"/><text x="38.2388%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.9888%" y="485" width="0.0798%" height="15" fill="rgb(251,106,12)" fg:x="476" fg:w="1"/><text x="38.2388%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.9888%" y="469" width="0.0798%" height="15" fill="rgb(240,209,35)" fg:x="476" fg:w="1"/><text x="38.2388%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.9888%" y="453" width="0.0798%" height="15" fill="rgb(214,52,50)" fg:x="476" fg:w="1"/><text x="38.2388%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="38.0686%" y="469" width="0.0798%" height="15" fill="rgb(234,119,4)" fg:x="477" fg:w="1"/><text x="38.3186%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="37.9888%" y="533" width="0.2394%" height="15" fill="rgb(228,181,36)" fg:x="476" fg:w="3"/><text x="38.2388%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="37.9888%" y="517" width="0.2394%" height="15" fill="rgb(213,171,42)" fg:x="476" fg:w="3"/><text x="38.2388%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="38.0686%" y="501" width="0.1596%" height="15" fill="rgb(239,14,41)" fg:x="477" fg:w="2"/><text x="38.3186%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.0686%" y="485" width="0.1596%" height="15" fill="rgb(239,111,46)" fg:x="477" fg:w="2"/><text x="38.3186%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.1484%" y="469" width="0.0798%" height="15" fill="rgb(214,72,7)" fg:x="478" fg:w="1"/><text x="38.3984%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.1484%" y="453" width="0.0798%" height="15" fill="rgb(221,114,1)" fg:x="478" fg:w="1"/><text x="38.3984%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="38.1484%" y="437" width="0.0798%" height="15" fill="rgb(213,143,14)" fg:x="478" fg:w="1"/><text x="38.3984%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="38.1484%" y="421" width="0.0798%" height="15" fill="rgb(220,221,53)" fg:x="478" fg:w="1"/><text x="38.3984%" y="431.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="37.9888%" y="549" width="0.3192%" height="15" fill="rgb(236,189,27)" fg:x="476" fg:w="4"/><text x="38.2388%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="38.2283%" y="533" width="0.0798%" height="15" fill="rgb(252,139,49)" fg:x="479" fg:w="1"/><text x="38.4783%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="38.2283%" y="517" width="0.0798%" height="15" fill="rgb(231,158,33)" fg:x="479" fg:w="1"/><text x="38.4783%" y="527.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="38.3081%" y="501" width="0.0798%" height="15" fill="rgb(207,201,15)" fg:x="480" fg:w="1"/><text x="38.5581%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="38.3879%" y="501" width="0.0798%" height="15" fill="rgb(218,43,48)" fg:x="481" fg:w="1"/><text x="38.6379%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="38.3879%" y="485" width="0.0798%" height="15" fill="rgb(244,63,52)" fg:x="481" fg:w="1"/><text x="38.6379%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.3879%" y="469" width="0.0798%" height="15" fill="rgb(236,60,17)" fg:x="481" fg:w="1"/><text x="38.6379%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.3879%" y="453" width="0.0798%" height="15" fill="rgb(205,206,29)" fg:x="481" fg:w="1"/><text x="38.6379%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.88%)</title><rect x="37.6696%" y="565" width="0.8779%" height="15" fill="rgb(205,209,35)" fg:x="472" fg:w="11"/><text x="37.9196%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="38.3081%" y="549" width="0.2394%" height="15" fill="rgb(227,112,14)" fg:x="480" fg:w="3"/><text x="38.5581%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="38.3081%" y="533" width="0.2394%" height="15" fill="rgb(248,151,9)" fg:x="480" fg:w="3"/><text x="38.5581%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="38.3081%" y="517" width="0.2394%" height="15" fill="rgb(247,45,40)" fg:x="480" fg:w="3"/><text x="38.5581%" y="527.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="38.4677%" y="501" width="0.0798%" height="15" fill="rgb(232,185,16)" fg:x="482" fg:w="1"/><text x="38.7177%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="38.4677%" y="485" width="0.0798%" height="15" fill="rgb(215,45,44)" fg:x="482" fg:w="1"/><text x="38.7177%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.4677%" y="469" width="0.0798%" height="15" fill="rgb(206,69,32)" fg:x="482" fg:w="1"/><text x="38.7177%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.4677%" y="453" width="0.0798%" height="15" fill="rgb(233,98,50)" fg:x="482" fg:w="1"/><text x="38.7177%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.4677%" y="437" width="0.0798%" height="15" fill="rgb(232,217,52)" fg:x="482" fg:w="1"/><text x="38.7177%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.4677%" y="421" width="0.0798%" height="15" fill="rgb(250,42,51)" fg:x="482" fg:w="1"/><text x="38.7177%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.4677%" y="405" width="0.0798%" height="15" fill="rgb(241,200,26)" fg:x="482" fg:w="1"/><text x="38.7177%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.4677%" y="389" width="0.0798%" height="15" fill="rgb(207,10,32)" fg:x="482" fg:w="1"/><text x="38.7177%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Occupying&gt;&gt; (1 samples, 0.08%)</title><rect x="38.6273%" y="549" width="0.0798%" height="15" fill="rgb(214,63,15)" fg:x="484" fg:w="1"/><text x="38.8773%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.7071%" y="453" width="0.0798%" height="15" fill="rgb(234,176,14)" fg:x="485" fg:w="1"/><text x="38.9571%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.7071%" y="437" width="0.0798%" height="15" fill="rgb(226,104,52)" fg:x="485" fg:w="1"/><text x="38.9571%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.7071%" y="469" width="0.1596%" height="15" fill="rgb(211,222,1)" fg:x="485" fg:w="2"/><text x="38.9571%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.7869%" y="453" width="0.0798%" height="15" fill="rgb(237,7,3)" fg:x="486" fg:w="1"/><text x="39.0369%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.8667%" y="469" width="0.0798%" height="15" fill="rgb(218,143,7)" fg:x="487" fg:w="1"/><text x="39.1167%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="38.8667%" y="453" width="0.0798%" height="15" fill="rgb(208,25,22)" fg:x="487" fg:w="1"/><text x="39.1167%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.8667%" y="437" width="0.0798%" height="15" fill="rgb(228,127,16)" fg:x="487" fg:w="1"/><text x="39.1167%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.8667%" y="421" width="0.0798%" height="15" fill="rgb(237,86,27)" fg:x="487" fg:w="1"/><text x="39.1167%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.9465%" y="437" width="0.0798%" height="15" fill="rgb(207,125,19)" fg:x="488" fg:w="1"/><text x="39.1965%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.9465%" y="421" width="0.0798%" height="15" fill="rgb(243,195,0)" fg:x="488" fg:w="1"/><text x="39.1965%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="38.7071%" y="517" width="0.3990%" height="15" fill="rgb(230,95,18)" fg:x="485" fg:w="5"/><text x="38.9571%" y="527.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="38.7071%" y="501" width="0.3990%" height="15" fill="rgb(232,157,21)" fg:x="485" fg:w="5"/><text x="38.9571%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="38.7071%" y="485" width="0.3990%" height="15" fill="rgb(212,120,50)" fg:x="485" fg:w="5"/><text x="38.9571%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="38.9465%" y="469" width="0.1596%" height="15" fill="rgb(222,204,44)" fg:x="488" fg:w="2"/><text x="39.1965%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.9465%" y="453" width="0.1596%" height="15" fill="rgb(236,6,33)" fg:x="488" fg:w="2"/><text x="39.1965%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.0263%" y="437" width="0.0798%" height="15" fill="rgb(247,11,38)" fg:x="489" fg:w="1"/><text x="39.2763%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.0263%" y="421" width="0.0798%" height="15" fill="rgb(215,111,0)" fg:x="489" fg:w="1"/><text x="39.2763%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="39.0263%" y="405" width="0.0798%" height="15" fill="rgb(211,65,46)" fg:x="489" fg:w="1"/><text x="39.2763%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.0263%" y="389" width="0.0798%" height="15" fill="rgb(216,5,12)" fg:x="489" fg:w="1"/><text x="39.2763%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.0263%" y="373" width="0.0798%" height="15" fill="rgb(226,7,2)" fg:x="489" fg:w="1"/><text x="39.2763%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.0263%" y="357" width="0.0798%" height="15" fill="rgb(242,116,12)" fg:x="489" fg:w="1"/><text x="39.2763%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.0263%" y="341" width="0.0798%" height="15" fill="rgb(249,209,7)" fg:x="489" fg:w="1"/><text x="39.2763%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.0263%" y="325" width="0.0798%" height="15" fill="rgb(232,73,17)" fg:x="489" fg:w="1"/><text x="39.2763%" y="335.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="39.0263%" y="309" width="0.0798%" height="15" fill="rgb(214,13,32)" fg:x="489" fg:w="1"/><text x="39.2763%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.1061%" y="453" width="0.0798%" height="15" fill="rgb(221,125,10)" fg:x="490" fg:w="1"/><text x="39.3561%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.1061%" y="437" width="0.0798%" height="15" fill="rgb(246,7,44)" fg:x="490" fg:w="1"/><text x="39.3561%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.1061%" y="421" width="0.0798%" height="15" fill="rgb(239,18,35)" fg:x="490" fg:w="1"/><text x="39.3561%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.1061%" y="405" width="0.0798%" height="15" fill="rgb(250,222,16)" fg:x="490" fg:w="1"/><text x="39.3561%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.1061%" y="389" width="0.0798%" height="15" fill="rgb(219,100,8)" fg:x="490" fg:w="1"/><text x="39.3561%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.1061%" y="373" width="0.0798%" height="15" fill="rgb(240,62,13)" fg:x="490" fg:w="1"/><text x="39.3561%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.1061%" y="357" width="0.0798%" height="15" fill="rgb(253,194,2)" fg:x="490" fg:w="1"/><text x="39.3561%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.1061%" y="341" width="0.0798%" height="15" fill="rgb(235,58,31)" fg:x="490" fg:w="1"/><text x="39.3561%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.1061%" y="325" width="0.0798%" height="15" fill="rgb(231,37,11)" fg:x="490" fg:w="1"/><text x="39.3561%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.1061%" y="309" width="0.0798%" height="15" fill="rgb(235,133,0)" fg:x="490" fg:w="1"/><text x="39.3561%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.1061%" y="293" width="0.0798%" height="15" fill="rgb(212,185,40)" fg:x="490" fg:w="1"/><text x="39.3561%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.1061%" y="277" width="0.0798%" height="15" fill="rgb(216,68,42)" fg:x="490" fg:w="1"/><text x="39.3561%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.1061%" y="261" width="0.0798%" height="15" fill="rgb(239,81,4)" fg:x="490" fg:w="1"/><text x="39.3561%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.1061%" y="245" width="0.0798%" height="15" fill="rgb(206,86,6)" fg:x="490" fg:w="1"/><text x="39.3561%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.1061%" y="229" width="0.0798%" height="15" fill="rgb(249,95,27)" fg:x="490" fg:w="1"/><text x="39.3561%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.1061%" y="469" width="0.1596%" height="15" fill="rgb(205,155,45)" fg:x="490" fg:w="2"/><text x="39.3561%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.1860%" y="453" width="0.0798%" height="15" fill="rgb(213,55,42)" fg:x="491" fg:w="1"/><text x="39.4360%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.1860%" y="437" width="0.0798%" height="15" fill="rgb(249,197,4)" fg:x="491" fg:w="1"/><text x="39.4360%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.1860%" y="421" width="0.0798%" height="15" fill="rgb(212,128,32)" fg:x="491" fg:w="1"/><text x="39.4360%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.1860%" y="405" width="0.0798%" height="15" fill="rgb(252,47,30)" fg:x="491" fg:w="1"/><text x="39.4360%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.1860%" y="389" width="0.0798%" height="15" fill="rgb(209,79,18)" fg:x="491" fg:w="1"/><text x="39.4360%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.1860%" y="373" width="0.0798%" height="15" fill="rgb(225,81,38)" fg:x="491" fg:w="1"/><text x="39.4360%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.1860%" y="357" width="0.0798%" height="15" fill="rgb(205,95,16)" fg:x="491" fg:w="1"/><text x="39.4360%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.1860%" y="341" width="0.0798%" height="15" fill="rgb(214,30,4)" fg:x="491" fg:w="1"/><text x="39.4360%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.1860%" y="325" width="0.0798%" height="15" fill="rgb(232,137,22)" fg:x="491" fg:w="1"/><text x="39.4360%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.1860%" y="309" width="0.0798%" height="15" fill="rgb(232,156,19)" fg:x="491" fg:w="1"/><text x="39.4360%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.1860%" y="293" width="0.0798%" height="15" fill="rgb(248,157,26)" fg:x="491" fg:w="1"/><text x="39.4360%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.1860%" y="277" width="0.0798%" height="15" fill="rgb(242,24,3)" fg:x="491" fg:w="1"/><text x="39.4360%" y="287.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.72%)</title><rect x="38.7071%" y="549" width="0.7183%" height="15" fill="rgb(218,195,48)" fg:x="485" fg:w="9"/><text x="38.9571%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (9 samples, 0.72%)</title><rect x="38.7071%" y="533" width="0.7183%" height="15" fill="rgb(214,193,36)" fg:x="485" fg:w="9"/><text x="38.9571%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="39.1061%" y="517" width="0.3192%" height="15" fill="rgb(242,110,40)" fg:x="490" fg:w="4"/><text x="39.3561%" y="527.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="39.1061%" y="501" width="0.3192%" height="15" fill="rgb(233,150,26)" fg:x="490" fg:w="4"/><text x="39.3561%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="39.1061%" y="485" width="0.3192%" height="15" fill="rgb(239,200,30)" fg:x="490" fg:w="4"/><text x="39.3561%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.2658%" y="469" width="0.1596%" height="15" fill="rgb(226,28,11)" fg:x="492" fg:w="2"/><text x="39.5158%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.2658%" y="453" width="0.1596%" height="15" fill="rgb(220,26,48)" fg:x="492" fg:w="2"/><text x="39.5158%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.2658%" y="437" width="0.1596%" height="15" fill="rgb(232,10,11)" fg:x="492" fg:w="2"/><text x="39.5158%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.2658%" y="421" width="0.1596%" height="15" fill="rgb(252,143,50)" fg:x="492" fg:w="2"/><text x="39.5158%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="39.2658%" y="405" width="0.1596%" height="15" fill="rgb(206,58,22)" fg:x="492" fg:w="2"/><text x="39.5158%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.2658%" y="389" width="0.1596%" height="15" fill="rgb(250,9,45)" fg:x="492" fg:w="2"/><text x="39.5158%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.2658%" y="373" width="0.1596%" height="15" fill="rgb(225,148,14)" fg:x="492" fg:w="2"/><text x="39.5158%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.2658%" y="357" width="0.1596%" height="15" fill="rgb(205,178,40)" fg:x="492" fg:w="2"/><text x="39.5158%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.3456%" y="341" width="0.0798%" height="15" fill="rgb(215,201,4)" fg:x="493" fg:w="1"/><text x="39.5956%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.3456%" y="325" width="0.0798%" height="15" fill="rgb(219,223,24)" fg:x="493" fg:w="1"/><text x="39.5956%" y="335.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="39.4254%" y="549" width="0.0798%" height="15" fill="rgb(217,19,31)" fg:x="494" fg:w="1"/><text x="39.6754%" y="559.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="39.4254%" y="533" width="0.0798%" height="15" fill="rgb(235,33,3)" fg:x="494" fg:w="1"/><text x="39.6754%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="39.5052%" y="485" width="0.0798%" height="15" fill="rgb(221,39,18)" fg:x="495" fg:w="1"/><text x="39.7552%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="39.5052%" y="501" width="0.1596%" height="15" fill="rgb(242,162,33)" fg:x="495" fg:w="2"/><text x="39.7552%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="39.5850%" y="485" width="0.0798%" height="15" fill="rgb(233,215,28)" fg:x="496" fg:w="1"/><text x="39.8350%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="39.5850%" y="469" width="0.0798%" height="15" fill="rgb(212,117,9)" fg:x="496" fg:w="1"/><text x="39.8350%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.5850%" y="453" width="0.0798%" height="15" fill="rgb(237,70,47)" fg:x="496" fg:w="1"/><text x="39.8350%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.5850%" y="437" width="0.0798%" height="15" fill="rgb(206,177,13)" fg:x="496" fg:w="1"/><text x="39.8350%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.6648%" y="485" width="0.0798%" height="15" fill="rgb(209,174,33)" fg:x="497" fg:w="1"/><text x="39.9148%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.7446%" y="405" width="0.0798%" height="15" fill="rgb(226,6,11)" fg:x="498" fg:w="1"/><text x="39.9946%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.7446%" y="389" width="0.0798%" height="15" fill="rgb(240,214,6)" fg:x="498" fg:w="1"/><text x="39.9946%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.7446%" y="373" width="0.0798%" height="15" fill="rgb(254,214,40)" fg:x="498" fg:w="1"/><text x="39.9946%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.7446%" y="357" width="0.0798%" height="15" fill="rgb(230,187,15)" fg:x="498" fg:w="1"/><text x="39.9946%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.7446%" y="341" width="0.0798%" height="15" fill="rgb(250,11,27)" fg:x="498" fg:w="1"/><text x="39.9946%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.7446%" y="325" width="0.0798%" height="15" fill="rgb(243,107,19)" fg:x="498" fg:w="1"/><text x="39.9946%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.7446%" y="309" width="0.0798%" height="15" fill="rgb(253,66,26)" fg:x="498" fg:w="1"/><text x="39.9946%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.7446%" y="293" width="0.0798%" height="15" fill="rgb(228,43,8)" fg:x="498" fg:w="1"/><text x="39.9946%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.7446%" y="277" width="0.0798%" height="15" fill="rgb(232,197,36)" fg:x="498" fg:w="1"/><text x="39.9946%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.7446%" y="261" width="0.0798%" height="15" fill="rgb(221,182,31)" fg:x="498" fg:w="1"/><text x="39.9946%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.7446%" y="245" width="0.0798%" height="15" fill="rgb(244,25,36)" fg:x="498" fg:w="1"/><text x="39.9946%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.7446%" y="229" width="0.0798%" height="15" fill="rgb(247,101,19)" fg:x="498" fg:w="1"/><text x="39.9946%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.7446%" y="213" width="0.0798%" height="15" fill="rgb(223,117,19)" fg:x="498" fg:w="1"/><text x="39.9946%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.7446%" y="421" width="0.1596%" height="15" fill="rgb(249,63,38)" fg:x="498" fg:w="2"/><text x="39.9946%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.8244%" y="405" width="0.0798%" height="15" fill="rgb(220,143,23)" fg:x="499" fg:w="1"/><text x="40.0744%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="39.7446%" y="453" width="0.2394%" height="15" fill="rgb(252,183,22)" fg:x="498" fg:w="3"/><text x="39.9946%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="39.7446%" y="437" width="0.2394%" height="15" fill="rgb(243,176,15)" fg:x="498" fg:w="3"/><text x="39.9946%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.9042%" y="421" width="0.0798%" height="15" fill="rgb(244,204,46)" fg:x="500" fg:w="1"/><text x="40.1542%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.9840%" y="405" width="0.0798%" height="15" fill="rgb(227,28,54)" fg:x="501" fg:w="1"/><text x="40.2340%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.0638%" y="389" width="0.0798%" height="15" fill="rgb(231,10,15)" fg:x="502" fg:w="1"/><text x="40.3138%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="39.9840%" y="453" width="0.2394%" height="15" fill="rgb(210,200,17)" fg:x="501" fg:w="3"/><text x="40.2340%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="39.9840%" y="437" width="0.2394%" height="15" fill="rgb(251,106,46)" fg:x="501" fg:w="3"/><text x="40.2340%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="39.9840%" y="421" width="0.2394%" height="15" fill="rgb(218,211,15)" fg:x="501" fg:w="3"/><text x="40.2340%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="40.0638%" y="405" width="0.1596%" height="15" fill="rgb(239,62,10)" fg:x="502" fg:w="2"/><text x="40.3138%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.1437%" y="389" width="0.0798%" height="15" fill="rgb(225,53,53)" fg:x="503" fg:w="1"/><text x="40.3937%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.1437%" y="373" width="0.0798%" height="15" fill="rgb(207,16,24)" fg:x="503" fg:w="1"/><text x="40.3937%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.1437%" y="357" width="0.0798%" height="15" fill="rgb(217,52,28)" fg:x="503" fg:w="1"/><text x="40.3937%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.1437%" y="341" width="0.0798%" height="15" fill="rgb(246,1,5)" fg:x="503" fg:w="1"/><text x="40.3937%" y="351.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (267 samples, 21.31%)</title><rect x="19.0742%" y="597" width="21.3089%" height="15" fill="rgb(221,29,26)" fg:x="239" fg:w="267"/><text x="19.3242%" y="607.50">plugins_core::build::BuildSurround..</text></g><g><title>plugins_core::build::Build::occupying (36 samples, 2.87%)</title><rect x="37.5100%" y="581" width="2.8731%" height="15" fill="rgb(250,133,32)" fg:x="470" fg:w="36"/><text x="37.7600%" y="591.50">pl..</text></g><g><title>plugins_core::tools::set_occupying (23 samples, 1.84%)</title><rect x="38.5475%" y="565" width="1.8356%" height="15" fill="rgb(236,63,16)" fg:x="483" fg:w="23"/><text x="38.7975%" y="575.50">p..</text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (11 samples, 0.88%)</title><rect x="39.5052%" y="549" width="0.8779%" height="15" fill="rgb(231,159,14)" fg:x="495" fg:w="11"/><text x="39.7552%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (11 samples, 0.88%)</title><rect x="39.5052%" y="533" width="0.8779%" height="15" fill="rgb(207,102,36)" fg:x="495" fg:w="11"/><text x="39.7552%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (11 samples, 0.88%)</title><rect x="39.5052%" y="517" width="0.8779%" height="15" fill="rgb(230,224,31)" fg:x="495" fg:w="11"/><text x="39.7552%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (9 samples, 0.72%)</title><rect x="39.6648%" y="501" width="0.7183%" height="15" fill="rgb(215,182,16)" fg:x="497" fg:w="9"/><text x="39.9148%" y="511.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.64%)</title><rect x="39.7446%" y="485" width="0.6385%" height="15" fill="rgb(226,113,2)" fg:x="498" fg:w="8"/><text x="39.9946%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="39.7446%" y="469" width="0.6385%" height="15" fill="rgb(241,18,35)" fg:x="498" fg:w="8"/><text x="39.9946%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="40.2235%" y="453" width="0.1596%" height="15" fill="rgb(240,165,44)" fg:x="504" fg:w="2"/><text x="40.4735%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.2235%" y="437" width="0.1596%" height="15" fill="rgb(229,130,47)" fg:x="504" fg:w="2"/><text x="40.4735%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="40.2235%" y="421" width="0.1596%" height="15" fill="rgb(223,93,7)" fg:x="504" fg:w="2"/><text x="40.4735%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.3033%" y="405" width="0.0798%" height="15" fill="rgb(205,180,36)" fg:x="505" fg:w="1"/><text x="40.5533%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="40.3033%" y="389" width="0.0798%" height="15" fill="rgb(221,103,28)" fg:x="505" fg:w="1"/><text x="40.5533%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="40.4629%" y="565" width="0.0798%" height="15" fill="rgb(212,4,3)" fg:x="507" fg:w="1"/><text x="40.7129%" y="575.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="40.4629%" y="549" width="0.0798%" height="15" fill="rgb(209,221,53)" fg:x="507" fg:w="1"/><text x="40.7129%" y="559.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="40.4629%" y="533" width="0.0798%" height="15" fill="rgb(233,229,52)" fg:x="507" fg:w="1"/><text x="40.7129%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.4629%" y="517" width="0.0798%" height="15" fill="rgb(254,127,37)" fg:x="507" fg:w="1"/><text x="40.7129%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.7023%" y="533" width="0.0798%" height="15" fill="rgb(207,161,26)" fg:x="510" fg:w="1"/><text x="40.9523%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.7023%" y="517" width="0.0798%" height="15" fill="rgb(223,75,5)" fg:x="510" fg:w="1"/><text x="40.9523%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (4 samples, 0.32%)</title><rect x="40.5427%" y="565" width="0.3192%" height="15" fill="rgb(235,115,52)" fg:x="508" fg:w="4"/><text x="40.7927%" y="575.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3 samples, 0.24%)</title><rect x="40.6225%" y="549" width="0.2394%" height="15" fill="rgb(240,91,46)" fg:x="509" fg:w="3"/><text x="40.8725%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="40.7821%" y="533" width="0.0798%" height="15" fill="rgb(251,144,21)" fg:x="511" fg:w="1"/><text x="41.0321%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.7821%" y="517" width="0.0798%" height="15" fill="rgb(247,220,47)" fg:x="511" fg:w="1"/><text x="41.0321%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.8619%" y="533" width="0.0798%" height="15" fill="rgb(253,122,1)" fg:x="512" fg:w="1"/><text x="41.1119%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="40.8619%" y="549" width="0.2394%" height="15" fill="rgb(221,0,24)" fg:x="512" fg:w="3"/><text x="41.1119%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="40.9417%" y="533" width="0.1596%" height="15" fill="rgb(220,204,54)" fg:x="513" fg:w="2"/><text x="41.1917%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="40.9417%" y="517" width="0.1596%" height="15" fill="rgb(205,96,25)" fg:x="513" fg:w="2"/><text x="41.1917%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.0215%" y="501" width="0.0798%" height="15" fill="rgb(247,77,20)" fg:x="514" fg:w="1"/><text x="41.2715%" y="511.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (11 samples, 0.88%)</title><rect x="40.3831%" y="597" width="0.8779%" height="15" fill="rgb(245,151,8)" fg:x="506" fg:w="11"/><text x="40.6331%" y="607.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (11 samples, 0.88%)</title><rect x="40.3831%" y="581" width="0.8779%" height="15" fill="rgb(242,158,39)" fg:x="506" fg:w="11"/><text x="40.6331%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="40.8619%" y="565" width="0.3990%" height="15" fill="rgb(222,214,50)" fg:x="512" fg:w="5"/><text x="41.1119%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="41.1014%" y="549" width="0.1596%" height="15" fill="rgb(229,60,39)" fg:x="515" fg:w="2"/><text x="41.3514%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="41.1014%" y="533" width="0.1596%" height="15" fill="rgb(240,148,18)" fg:x="515" fg:w="2"/><text x="41.3514%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="41.1014%" y="517" width="0.1596%" height="15" fill="rgb(215,96,11)" fg:x="515" fg:w="2"/><text x="41.3514%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.1812%" y="501" width="0.0798%" height="15" fill="rgb(238,162,53)" fg:x="516" fg:w="1"/><text x="41.4312%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.1812%" y="485" width="0.0798%" height="15" fill="rgb(214,83,18)" fg:x="516" fg:w="1"/><text x="41.4312%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.1812%" y="469" width="0.0798%" height="15" fill="rgb(248,117,24)" fg:x="516" fg:w="1"/><text x="41.4312%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.1812%" y="453" width="0.0798%" height="15" fill="rgb(238,190,6)" fg:x="516" fg:w="1"/><text x="41.4312%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.1812%" y="437" width="0.0798%" height="15" fill="rgb(213,51,6)" fg:x="516" fg:w="1"/><text x="41.4312%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.1812%" y="421" width="0.0798%" height="15" fill="rgb(212,136,1)" fg:x="516" fg:w="1"/><text x="41.4312%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="41.1812%" y="405" width="0.0798%" height="15" fill="rgb(221,192,14)" fg:x="516" fg:w="1"/><text x="41.4312%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="41.1812%" y="389" width="0.0798%" height="15" fill="rgb(244,38,54)" fg:x="516" fg:w="1"/><text x="41.4312%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="41.3408%" y="549" width="0.0798%" height="15" fill="rgb(240,45,28)" fg:x="518" fg:w="1"/><text x="41.5908%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="41.3408%" y="533" width="0.0798%" height="15" fill="rgb(240,123,12)" fg:x="518" fg:w="1"/><text x="41.5908%" y="543.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="41.4206%" y="549" width="0.0798%" height="15" fill="rgb(216,14,30)" fg:x="519" fg:w="1"/><text x="41.6706%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="41.4206%" y="533" width="0.0798%" height="15" fill="rgb(212,50,24)" fg:x="519" fg:w="1"/><text x="41.6706%" y="543.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="41.4206%" y="517" width="0.0798%" height="15" fill="rgb(253,229,47)" fg:x="519" fg:w="1"/><text x="41.6706%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="41.4206%" y="501" width="0.0798%" height="15" fill="rgb(214,26,17)" fg:x="519" fg:w="1"/><text x="41.6706%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.5004%" y="373" width="0.0798%" height="15" fill="rgb(252,60,11)" fg:x="520" fg:w="1"/><text x="41.7504%" y="383.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="41.5004%" y="501" width="0.2394%" height="15" fill="rgb(209,59,37)" fg:x="520" fg:w="3"/><text x="41.7504%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="41.5004%" y="485" width="0.2394%" height="15" fill="rgb(228,126,53)" fg:x="520" fg:w="3"/><text x="41.7504%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="41.5004%" y="469" width="0.2394%" height="15" fill="rgb(233,99,2)" fg:x="520" fg:w="3"/><text x="41.7504%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="41.5004%" y="453" width="0.2394%" height="15" fill="rgb(217,106,34)" fg:x="520" fg:w="3"/><text x="41.7504%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="41.5004%" y="437" width="0.2394%" height="15" fill="rgb(222,46,19)" fg:x="520" fg:w="3"/><text x="41.7504%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="41.5004%" y="421" width="0.2394%" height="15" fill="rgb(251,87,31)" fg:x="520" fg:w="3"/><text x="41.7504%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="41.5004%" y="405" width="0.2394%" height="15" fill="rgb(213,70,51)" fg:x="520" fg:w="3"/><text x="41.7504%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="41.5004%" y="389" width="0.2394%" height="15" fill="rgb(229,144,18)" fg:x="520" fg:w="3"/><text x="41.7504%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.5802%" y="373" width="0.1596%" height="15" fill="rgb(254,60,26)" fg:x="521" fg:w="2"/><text x="41.8302%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.6600%" y="357" width="0.0798%" height="15" fill="rgb(243,127,51)" fg:x="522" fg:w="1"/><text x="41.9100%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="41.3408%" y="565" width="0.4789%" height="15" fill="rgb(221,51,25)" fg:x="518" fg:w="6"/><text x="41.5908%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="41.5004%" y="549" width="0.3192%" height="15" fill="rgb(205,42,7)" fg:x="520" fg:w="4"/><text x="41.7504%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="41.5004%" y="533" width="0.3192%" height="15" fill="rgb(236,177,48)" fg:x="520" fg:w="4"/><text x="41.7504%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="41.5004%" y="517" width="0.3192%" height="15" fill="rgb(226,79,31)" fg:x="520" fg:w="4"/><text x="41.7504%" y="527.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="41.7398%" y="501" width="0.0798%" height="15" fill="rgb(216,170,12)" fg:x="523" fg:w="1"/><text x="41.9898%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="41.7398%" y="485" width="0.0798%" height="15" fill="rgb(208,62,51)" fg:x="523" fg:w="1"/><text x="41.9898%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="41.7398%" y="469" width="0.0798%" height="15" fill="rgb(254,129,9)" fg:x="523" fg:w="1"/><text x="41.9898%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="41.7398%" y="453" width="0.0798%" height="15" fill="rgb(243,209,31)" fg:x="523" fg:w="1"/><text x="41.9898%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="41.7398%" y="437" width="0.0798%" height="15" fill="rgb(213,159,23)" fg:x="523" fg:w="1"/><text x="41.9898%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="41.8196%" y="549" width="0.0798%" height="15" fill="rgb(249,77,39)" fg:x="524" fg:w="1"/><text x="42.0696%" y="559.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="41.8196%" y="533" width="0.0798%" height="15" fill="rgb(230,13,33)" fg:x="524" fg:w="1"/><text x="42.0696%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="41.8196%" y="517" width="0.0798%" height="15" fill="rgb(215,215,7)" fg:x="524" fg:w="1"/><text x="42.0696%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="41.8196%" y="501" width="0.0798%" height="15" fill="rgb(222,92,25)" fg:x="524" fg:w="1"/><text x="42.0696%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.8196%" y="485" width="0.0798%" height="15" fill="rgb(215,173,22)" fg:x="524" fg:w="1"/><text x="42.0696%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.8196%" y="469" width="0.0798%" height="15" fill="rgb(247,205,52)" fg:x="524" fg:w="1"/><text x="42.0696%" y="479.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="41.8196%" y="453" width="0.0798%" height="15" fill="rgb(240,210,37)" fg:x="524" fg:w="1"/><text x="42.0696%" y="463.50"></text></g><g><title>&lt;u64 as core::fmt::num::DisplayInt&gt;::to_u64 (1 samples, 0.08%)</title><rect x="41.8196%" y="437" width="0.0798%" height="15" fill="rgb(224,13,10)" fg:x="524" fg:w="1"/><text x="42.0696%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="41.8994%" y="533" width="0.0798%" height="15" fill="rgb(209,48,33)" fg:x="525" fg:w="1"/><text x="42.1494%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="41.8994%" y="517" width="0.0798%" height="15" fill="rgb(228,219,23)" fg:x="525" fg:w="1"/><text x="42.1494%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="41.8994%" y="501" width="0.0798%" height="15" fill="rgb(239,46,49)" fg:x="525" fg:w="1"/><text x="42.1494%" y="511.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (4 samples, 0.32%)</title><rect x="41.8196%" y="565" width="0.3192%" height="15" fill="rgb(206,172,51)" fg:x="524" fg:w="4"/><text x="42.0696%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="41.8994%" y="549" width="0.2394%" height="15" fill="rgb(213,212,35)" fg:x="525" fg:w="3"/><text x="42.1494%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="41.9792%" y="533" width="0.1596%" height="15" fill="rgb(252,40,27)" fg:x="526" fg:w="2"/><text x="42.2292%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="41.9792%" y="517" width="0.1596%" height="15" fill="rgb(212,33,41)" fg:x="526" fg:w="2"/><text x="42.2292%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="41.9792%" y="501" width="0.1596%" height="15" fill="rgb(232,160,27)" fg:x="526" fg:w="2"/><text x="42.2292%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.0591%" y="485" width="0.0798%" height="15" fill="rgb(244,160,20)" fg:x="527" fg:w="1"/><text x="42.3091%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.0591%" y="469" width="0.0798%" height="15" fill="rgb(205,66,20)" fg:x="527" fg:w="1"/><text x="42.3091%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.0591%" y="453" width="0.0798%" height="15" fill="rgb(236,158,6)" fg:x="527" fg:w="1"/><text x="42.3091%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.0591%" y="437" width="0.0798%" height="15" fill="rgb(232,25,36)" fg:x="527" fg:w="1"/><text x="42.3091%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.0591%" y="421" width="0.0798%" height="15" fill="rgb(220,153,35)" fg:x="527" fg:w="1"/><text x="42.3091%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.0591%" y="405" width="0.0798%" height="15" fill="rgb(216,5,8)" fg:x="527" fg:w="1"/><text x="42.3091%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.0591%" y="389" width="0.0798%" height="15" fill="rgb(240,97,3)" fg:x="527" fg:w="1"/><text x="42.3091%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.0591%" y="373" width="0.0798%" height="15" fill="rgb(220,99,26)" fg:x="527" fg:w="1"/><text x="42.3091%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.0591%" y="357" width="0.0798%" height="15" fill="rgb(237,96,2)" fg:x="527" fg:w="1"/><text x="42.3091%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.0591%" y="341" width="0.0798%" height="15" fill="rgb(217,197,47)" fg:x="527" fg:w="1"/><text x="42.3091%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.0591%" y="325" width="0.0798%" height="15" fill="rgb(252,133,54)" fg:x="527" fg:w="1"/><text x="42.3091%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.0591%" y="309" width="0.0798%" height="15" fill="rgb(233,37,30)" fg:x="527" fg:w="1"/><text x="42.3091%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.0591%" y="293" width="0.0798%" height="15" fill="rgb(239,182,12)" fg:x="527" fg:w="1"/><text x="42.3091%" y="303.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (13 samples, 1.04%)</title><rect x="41.2610%" y="597" width="1.0375%" height="15" fill="rgb(245,83,39)" fg:x="517" fg:w="13"/><text x="41.5110%" y="607.50"></text></g><g><title>plugins_core::build::QuickThing::make (13 samples, 1.04%)</title><rect x="41.2610%" y="581" width="1.0375%" height="15" fill="rgb(222,109,36)" fg:x="517" fg:w="13"/><text x="41.5110%" y="591.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="42.1389%" y="565" width="0.1596%" height="15" fill="rgb(237,95,44)" fg:x="528" fg:w="2"/><text x="42.3889%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="42.1389%" y="549" width="0.1596%" height="15" fill="rgb(216,36,54)" fg:x="528" fg:w="2"/><text x="42.3889%" y="559.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="42.1389%" y="533" width="0.1596%" height="15" fill="rgb(236,164,3)" fg:x="528" fg:w="2"/><text x="42.3889%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="42.1389%" y="517" width="0.1596%" height="15" fill="rgb(223,15,21)" fg:x="528" fg:w="2"/><text x="42.3889%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.2187%" y="501" width="0.0798%" height="15" fill="rgb(239,191,12)" fg:x="529" fg:w="1"/><text x="42.4687%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="42.2187%" y="485" width="0.0798%" height="15" fill="rgb(231,191,37)" fg:x="529" fg:w="1"/><text x="42.4687%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.2187%" y="469" width="0.0798%" height="15" fill="rgb(209,155,36)" fg:x="529" fg:w="1"/><text x="42.4687%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.2187%" y="453" width="0.0798%" height="15" fill="rgb(216,222,49)" fg:x="529" fg:w="1"/><text x="42.4687%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="42.3783%" y="565" width="0.0798%" height="15" fill="rgb(218,181,2)" fg:x="531" fg:w="1"/><text x="42.6283%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="42.3783%" y="549" width="0.0798%" height="15" fill="rgb(239,125,9)" fg:x="531" fg:w="1"/><text x="42.6283%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.3783%" y="533" width="0.0798%" height="15" fill="rgb(233,103,7)" fg:x="531" fg:w="1"/><text x="42.6283%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.4581%" y="501" width="0.0798%" height="15" fill="rgb(209,223,5)" fg:x="532" fg:w="1"/><text x="42.7081%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.4581%" y="485" width="0.0798%" height="15" fill="rgb(234,71,27)" fg:x="532" fg:w="1"/><text x="42.7081%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.4581%" y="469" width="0.0798%" height="15" fill="rgb(251,202,16)" fg:x="532" fg:w="1"/><text x="42.7081%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.4581%" y="517" width="0.1596%" height="15" fill="rgb(231,180,0)" fg:x="532" fg:w="2"/><text x="42.7081%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.5379%" y="501" width="0.0798%" height="15" fill="rgb(223,58,28)" fg:x="533" fg:w="1"/><text x="42.7879%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.6177%" y="517" width="0.0798%" height="15" fill="rgb(250,34,24)" fg:x="534" fg:w="1"/><text x="42.8677%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="42.6177%" y="501" width="0.0798%" height="15" fill="rgb(235,24,16)" fg:x="534" fg:w="1"/><text x="42.8677%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.6177%" y="485" width="0.0798%" height="15" fill="rgb(219,28,33)" fg:x="534" fg:w="1"/><text x="42.8677%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.6177%" y="469" width="0.0798%" height="15" fill="rgb(228,150,43)" fg:x="534" fg:w="1"/><text x="42.8677%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.6177%" y="453" width="0.0798%" height="15" fill="rgb(221,228,36)" fg:x="534" fg:w="1"/><text x="42.8677%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="42.4581%" y="565" width="0.3192%" height="15" fill="rgb(232,116,17)" fg:x="532" fg:w="4"/><text x="42.7081%" y="575.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="42.4581%" y="549" width="0.3192%" height="15" fill="rgb(220,110,51)" fg:x="532" fg:w="4"/><text x="42.7081%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="42.4581%" y="533" width="0.3192%" height="15" fill="rgb(207,26,25)" fg:x="532" fg:w="4"/><text x="42.7081%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.6975%" y="517" width="0.0798%" height="15" fill="rgb(223,58,19)" fg:x="535" fg:w="1"/><text x="42.9475%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.6975%" y="501" width="0.0798%" height="15" fill="rgb(234,125,39)" fg:x="535" fg:w="1"/><text x="42.9475%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.6975%" y="485" width="0.0798%" height="15" fill="rgb(241,48,36)" fg:x="535" fg:w="1"/><text x="42.9475%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.6975%" y="469" width="0.0798%" height="15" fill="rgb(217,148,51)" fg:x="535" fg:w="1"/><text x="42.9475%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="42.6975%" y="453" width="0.0798%" height="15" fill="rgb(247,17,25)" fg:x="535" fg:w="1"/><text x="42.9475%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.6975%" y="437" width="0.0798%" height="15" fill="rgb(219,89,38)" fg:x="535" fg:w="1"/><text x="42.9475%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.6975%" y="421" width="0.0798%" height="15" fill="rgb(220,145,2)" fg:x="535" fg:w="1"/><text x="42.9475%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.6975%" y="405" width="0.0798%" height="15" fill="rgb(244,66,47)" fg:x="535" fg:w="1"/><text x="42.9475%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.6975%" y="389" width="0.0798%" height="15" fill="rgb(226,182,5)" fg:x="535" fg:w="1"/><text x="42.9475%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.6975%" y="373" width="0.0798%" height="15" fill="rgb(211,98,20)" fg:x="535" fg:w="1"/><text x="42.9475%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.6975%" y="357" width="0.0798%" height="15" fill="rgb(217,103,52)" fg:x="535" fg:w="1"/><text x="42.9475%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.7773%" y="501" width="0.0798%" height="15" fill="rgb(208,125,52)" fg:x="536" fg:w="1"/><text x="43.0273%" y="511.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="42.7773%" y="549" width="0.1596%" height="15" fill="rgb(244,70,13)" fg:x="536" fg:w="2"/><text x="43.0273%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="42.7773%" y="533" width="0.1596%" height="15" fill="rgb(253,124,3)" fg:x="536" fg:w="2"/><text x="43.0273%" y="543.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="42.7773%" y="517" width="0.1596%" height="15" fill="rgb(222,145,32)" fg:x="536" fg:w="2"/><text x="43.0273%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="42.8571%" y="501" width="0.0798%" height="15" fill="rgb(232,183,47)" fg:x="537" fg:w="1"/><text x="43.1071%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.8571%" y="485" width="0.0798%" height="15" fill="rgb(246,226,4)" fg:x="537" fg:w="1"/><text x="43.1071%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="42.8571%" y="469" width="0.0798%" height="15" fill="rgb(228,185,46)" fg:x="537" fg:w="1"/><text x="43.1071%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.8571%" y="453" width="0.0798%" height="15" fill="rgb(213,196,4)" fg:x="537" fg:w="1"/><text x="43.1071%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.8571%" y="437" width="0.0798%" height="15" fill="rgb(212,2,45)" fg:x="537" fg:w="1"/><text x="43.1071%" y="447.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="42.7773%" y="565" width="0.2394%" height="15" fill="rgb(217,145,50)" fg:x="536" fg:w="3"/><text x="43.0273%" y="575.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="42.9370%" y="549" width="0.0798%" height="15" fill="rgb(242,10,46)" fg:x="538" fg:w="1"/><text x="43.1870%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.9370%" y="533" width="0.0798%" height="15" fill="rgb(252,91,48)" fg:x="538" fg:w="1"/><text x="43.1870%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.9370%" y="517" width="0.0798%" height="15" fill="rgb(216,72,13)" fg:x="538" fg:w="1"/><text x="43.1870%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="42.9370%" y="501" width="0.0798%" height="15" fill="rgb(219,6,37)" fg:x="538" fg:w="1"/><text x="43.1870%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.9370%" y="485" width="0.0798%" height="15" fill="rgb(236,185,40)" fg:x="538" fg:w="1"/><text x="43.1870%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="42.3783%" y="581" width="0.7183%" height="15" fill="rgb(208,81,48)" fg:x="531" fg:w="9"/><text x="42.6283%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="43.0168%" y="565" width="0.0798%" height="15" fill="rgb(211,42,33)" fg:x="539" fg:w="1"/><text x="43.2668%" y="575.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="43.0966%" y="549" width="0.0798%" height="15" fill="rgb(211,90,39)" fg:x="540" fg:w="1"/><text x="43.3466%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.1764%" y="517" width="0.0798%" height="15" fill="rgb(218,136,12)" fg:x="541" fg:w="1"/><text x="43.4264%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="43.1764%" y="501" width="0.0798%" height="15" fill="rgb(234,12,32)" fg:x="541" fg:w="1"/><text x="43.4264%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.1764%" y="485" width="0.0798%" height="15" fill="rgb(221,164,18)" fg:x="541" fg:w="1"/><text x="43.4264%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.1764%" y="469" width="0.0798%" height="15" fill="rgb(239,135,14)" fg:x="541" fg:w="1"/><text x="43.4264%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.1764%" y="453" width="0.0798%" height="15" fill="rgb(226,198,47)" fg:x="541" fg:w="1"/><text x="43.4264%" y="463.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="43.0966%" y="581" width="0.2394%" height="15" fill="rgb(244,121,47)" fg:x="540" fg:w="3"/><text x="43.3466%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="43.0966%" y="565" width="0.2394%" height="15" fill="rgb(226,21,48)" fg:x="540" fg:w="3"/><text x="43.3466%" y="575.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="43.1764%" y="549" width="0.1596%" height="15" fill="rgb(215,178,47)" fg:x="541" fg:w="2"/><text x="43.4264%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="43.1764%" y="533" width="0.1596%" height="15" fill="rgb(206,212,19)" fg:x="541" fg:w="2"/><text x="43.4264%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="43.2562%" y="517" width="0.0798%" height="15" fill="rgb(230,104,34)" fg:x="542" fg:w="1"/><text x="43.5062%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.2562%" y="501" width="0.0798%" height="15" fill="rgb(210,96,51)" fg:x="542" fg:w="1"/><text x="43.5062%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="43.2562%" y="485" width="0.0798%" height="15" fill="rgb(229,111,47)" fg:x="542" fg:w="1"/><text x="43.5062%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.2562%" y="469" width="0.0798%" height="15" fill="rgb(218,174,45)" fg:x="542" fg:w="1"/><text x="43.5062%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="43.2562%" y="453" width="0.0798%" height="15" fill="rgb(215,21,32)" fg:x="542" fg:w="1"/><text x="43.5062%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="43.2562%" y="437" width="0.0798%" height="15" fill="rgb(235,72,21)" fg:x="542" fg:w="1"/><text x="43.5062%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.2562%" y="421" width="0.0798%" height="15" fill="rgb(250,113,30)" fg:x="542" fg:w="1"/><text x="43.5062%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="43.3360%" y="565" width="0.0798%" height="15" fill="rgb(244,136,34)" fg:x="543" fg:w="1"/><text x="43.5860%" y="575.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="43.3360%" y="549" width="0.0798%" height="15" fill="rgb(213,226,47)" fg:x="543" fg:w="1"/><text x="43.5860%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="43.3360%" y="533" width="0.0798%" height="15" fill="rgb(224,136,40)" fg:x="543" fg:w="1"/><text x="43.5860%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.3360%" y="517" width="0.0798%" height="15" fill="rgb(253,124,12)" fg:x="543" fg:w="1"/><text x="43.5860%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.3360%" y="501" width="0.0798%" height="15" fill="rgb(210,67,8)" fg:x="543" fg:w="1"/><text x="43.5860%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.4158%" y="485" width="0.0798%" height="15" fill="rgb(210,204,0)" fg:x="544" fg:w="1"/><text x="43.6658%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.4158%" y="469" width="0.0798%" height="15" fill="rgb(217,179,22)" fg:x="544" fg:w="1"/><text x="43.6658%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.4158%" y="453" width="0.0798%" height="15" fill="rgb(237,192,33)" fg:x="544" fg:w="1"/><text x="43.6658%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.4158%" y="437" width="0.0798%" height="15" fill="rgb(211,104,28)" fg:x="544" fg:w="1"/><text x="43.6658%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.4158%" y="421" width="0.0798%" height="15" fill="rgb(214,75,30)" fg:x="544" fg:w="1"/><text x="43.6658%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.4158%" y="405" width="0.0798%" height="15" fill="rgb(220,227,12)" fg:x="544" fg:w="1"/><text x="43.6658%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.4158%" y="389" width="0.0798%" height="15" fill="rgb(233,134,28)" fg:x="544" fg:w="1"/><text x="43.6658%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.4158%" y="373" width="0.0798%" height="15" fill="rgb(215,146,24)" fg:x="544" fg:w="1"/><text x="43.6658%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.4158%" y="357" width="0.0798%" height="15" fill="rgb(248,227,20)" fg:x="544" fg:w="1"/><text x="43.6658%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.4158%" y="341" width="0.0798%" height="15" fill="rgb(250,44,42)" fg:x="544" fg:w="1"/><text x="43.6658%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.4158%" y="325" width="0.0798%" height="15" fill="rgb(219,5,35)" fg:x="544" fg:w="1"/><text x="43.6658%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.4158%" y="309" width="0.0798%" height="15" fill="rgb(241,132,32)" fg:x="544" fg:w="1"/><text x="43.6658%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.4158%" y="293" width="0.0798%" height="15" fill="rgb(234,212,51)" fg:x="544" fg:w="1"/><text x="43.6658%" y="303.50"></text></g><g><title>kernel::model::EntityPtr::new (2 samples, 0.16%)</title><rect x="43.4158%" y="565" width="0.1596%" height="15" fill="rgb(242,173,29)" fg:x="544" fg:w="2"/><text x="43.6658%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="43.4158%" y="549" width="0.1596%" height="15" fill="rgb(212,159,2)" fg:x="544" fg:w="2"/><text x="43.6658%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="43.4158%" y="533" width="0.1596%" height="15" fill="rgb(238,165,31)" fg:x="544" fg:w="2"/><text x="43.6658%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="43.4158%" y="517" width="0.1596%" height="15" fill="rgb(241,57,36)" fg:x="544" fg:w="2"/><text x="43.6658%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="43.4158%" y="501" width="0.1596%" height="15" fill="rgb(249,7,4)" fg:x="544" fg:w="2"/><text x="43.6658%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.4956%" y="485" width="0.0798%" height="15" fill="rgb(250,137,44)" fg:x="545" fg:w="1"/><text x="43.7456%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.4956%" y="469" width="0.0798%" height="15" fill="rgb(244,185,1)" fg:x="545" fg:w="1"/><text x="43.7456%" y="479.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (488 samples, 38.95%)</title><rect x="4.7087%" y="613" width="38.9465%" height="15" fill="rgb(216,5,53)" fg:x="59" fg:w="488"/><text x="4.9587%" y="623.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (17 samples, 1.36%)</title><rect x="42.2985%" y="597" width="1.3567%" height="15" fill="rgb(234,89,21)" fg:x="530" fg:w="17"/><text x="42.5485%" y="607.50"></text></g><g><title>plugins_core::build::Build::new_world (4 samples, 0.32%)</title><rect x="43.3360%" y="581" width="0.3192%" height="15" fill="rgb(250,81,43)" fg:x="543" fg:w="4"/><text x="43.5860%" y="591.50"></text></g><g><title>kernel::model::entity::build_entity (1 samples, 0.08%)</title><rect x="43.5754%" y="565" width="0.0798%" height="15" fill="rgb(243,132,11)" fg:x="546" fg:w="1"/><text x="43.8254%" y="575.50"></text></g><g><title>kernel::model::entity::EntityBuilder::new (1 samples, 0.08%)</title><rect x="43.5754%" y="549" width="0.0798%" height="15" fill="rgb(253,159,28)" fg:x="546" fg:w="1"/><text x="43.8254%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.6552%" y="597" width="0.0798%" height="15" fill="rgb(237,167,34)" fg:x="547" fg:w="1"/><text x="43.9052%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (2 samples, 0.16%)</title><rect x="43.6552%" y="613" width="0.1596%" height="15" fill="rgb(237,16,50)" fg:x="547" fg:w="2"/><text x="43.9052%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="43.7350%" y="597" width="0.0798%" height="15" fill="rgb(247,125,2)" fg:x="548" fg:w="1"/><text x="43.9850%" y="607.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="43.7350%" y="581" width="0.0798%" height="15" fill="rgb(254,35,3)" fg:x="548" fg:w="1"/><text x="43.9850%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="43.7350%" y="565" width="0.0798%" height="15" fill="rgb(237,209,21)" fg:x="548" fg:w="1"/><text x="43.9850%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.7350%" y="549" width="0.0798%" height="15" fill="rgb(224,122,20)" fg:x="548" fg:w="1"/><text x="43.9850%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="43.8947%" y="597" width="0.1596%" height="15" fill="rgb(224,11,46)" fg:x="550" fg:w="2"/><text x="44.1447%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.9745%" y="581" width="0.0798%" height="15" fill="rgb(248,21,33)" fg:x="551" fg:w="1"/><text x="44.2245%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="43.9745%" y="565" width="0.0798%" height="15" fill="rgb(222,144,7)" fg:x="551" fg:w="1"/><text x="44.2245%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="44.0543%" y="597" width="0.2394%" height="15" fill="rgb(205,141,37)" fg:x="552" fg:w="3"/><text x="44.3043%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="44.0543%" y="581" width="0.2394%" height="15" fill="rgb(237,130,8)" fg:x="552" fg:w="3"/><text x="44.3043%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="44.1341%" y="565" width="0.1596%" height="15" fill="rgb(209,179,39)" fg:x="553" fg:w="2"/><text x="44.3841%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="44.1341%" y="549" width="0.1596%" height="15" fill="rgb(207,52,17)" fg:x="553" fg:w="2"/><text x="44.3841%" y="559.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="44.1341%" y="533" width="0.1596%" height="15" fill="rgb(253,158,17)" fg:x="553" fg:w="2"/><text x="44.3841%" y="543.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (2 samples, 0.16%)</title><rect x="44.1341%" y="517" width="0.1596%" height="15" fill="rgb(208,19,53)" fg:x="553" fg:w="2"/><text x="44.3841%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="44.2139%" y="501" width="0.0798%" height="15" fill="rgb(233,152,13)" fg:x="554" fg:w="1"/><text x="44.4639%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="44.2139%" y="485" width="0.0798%" height="15" fill="rgb(231,84,1)" fg:x="554" fg:w="1"/><text x="44.4639%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="44.2139%" y="469" width="0.0798%" height="15" fill="rgb(229,142,48)" fg:x="554" fg:w="1"/><text x="44.4639%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.2139%" y="453" width="0.0798%" height="15" fill="rgb(248,70,29)" fg:x="554" fg:w="1"/><text x="44.4639%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="44.2937%" y="565" width="0.0798%" height="15" fill="rgb(250,85,7)" fg:x="555" fg:w="1"/><text x="44.5437%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::state::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="44.2937%" y="549" width="0.0798%" height="15" fill="rgb(235,140,43)" fg:x="555" fg:w="1"/><text x="44.5437%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="44.3735%" y="565" width="0.0798%" height="15" fill="rgb(216,0,5)" fg:x="556" fg:w="1"/><text x="44.6235%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="44.3735%" y="549" width="0.0798%" height="15" fill="rgb(223,167,29)" fg:x="556" fg:w="1"/><text x="44.6235%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="44.3735%" y="533" width="0.0798%" height="15" fill="rgb(229,150,33)" fg:x="556" fg:w="1"/><text x="44.6235%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.3735%" y="517" width="0.0798%" height="15" fill="rgb(227,26,52)" fg:x="556" fg:w="1"/><text x="44.6235%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.3735%" y="501" width="0.0798%" height="15" fill="rgb(250,60,52)" fg:x="556" fg:w="1"/><text x="44.6235%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.3735%" y="485" width="0.0798%" height="15" fill="rgb(228,81,46)" fg:x="556" fg:w="1"/><text x="44.6235%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.3735%" y="469" width="0.0798%" height="15" fill="rgb(225,218,31)" fg:x="556" fg:w="1"/><text x="44.6235%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.3735%" y="453" width="0.0798%" height="15" fill="rgb(230,35,16)" fg:x="556" fg:w="1"/><text x="44.6235%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.3735%" y="437" width="0.0798%" height="15" fill="rgb(247,100,0)" fg:x="556" fg:w="1"/><text x="44.6235%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.3735%" y="421" width="0.0798%" height="15" fill="rgb(223,135,11)" fg:x="556" fg:w="1"/><text x="44.6235%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.3735%" y="405" width="0.0798%" height="15" fill="rgb(207,136,0)" fg:x="556" fg:w="1"/><text x="44.6235%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.3735%" y="389" width="0.0798%" height="15" fill="rgb(246,131,25)" fg:x="556" fg:w="1"/><text x="44.6235%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.3735%" y="373" width="0.0798%" height="15" fill="rgb(209,47,12)" fg:x="556" fg:w="1"/><text x="44.6235%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.3735%" y="357" width="0.0798%" height="15" fill="rgb(221,25,16)" fg:x="556" fg:w="1"/><text x="44.6235%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.3735%" y="341" width="0.0798%" height="15" fill="rgb(223,164,33)" fg:x="556" fg:w="1"/><text x="44.6235%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="44.4533%" y="549" width="0.0798%" height="15" fill="rgb(220,26,23)" fg:x="557" fg:w="1"/><text x="44.7033%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="44.4533%" y="533" width="0.0798%" height="15" fill="rgb(231,224,1)" fg:x="557" fg:w="1"/><text x="44.7033%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="44.4533%" y="517" width="0.0798%" height="15" fill="rgb(229,221,24)" fg:x="557" fg:w="1"/><text x="44.7033%" y="527.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="44.6129%" y="533" width="0.0798%" height="15" fill="rgb(213,34,10)" fg:x="559" fg:w="1"/><text x="44.8629%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="44.6129%" y="517" width="0.0798%" height="15" fill="rgb(215,33,11)" fg:x="559" fg:w="1"/><text x="44.8629%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="44.6129%" y="501" width="0.0798%" height="15" fill="rgb(216,20,41)" fg:x="559" fg:w="1"/><text x="44.8629%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="44.6129%" y="485" width="0.0798%" height="15" fill="rgb(228,43,31)" fg:x="559" fg:w="1"/><text x="44.8629%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.6129%" y="469" width="0.0798%" height="15" fill="rgb(227,83,26)" fg:x="559" fg:w="1"/><text x="44.8629%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="44.7725%" y="517" width="0.0798%" height="15" fill="rgb(217,168,19)" fg:x="561" fg:w="1"/><text x="45.0225%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="44.8524%" y="501" width="0.2394%" height="15" fill="rgb(231,34,33)" fg:x="562" fg:w="3"/><text x="45.1024%" y="511.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="44.8524%" y="485" width="0.2394%" height="15" fill="rgb(230,120,51)" fg:x="562" fg:w="3"/><text x="45.1024%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="44.8524%" y="469" width="0.2394%" height="15" fill="rgb(215,138,27)" fg:x="562" fg:w="3"/><text x="45.1024%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="44.9322%" y="453" width="0.1596%" height="15" fill="rgb(246,80,47)" fg:x="563" fg:w="2"/><text x="45.1822%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="44.8524%" y="517" width="0.3192%" height="15" fill="rgb(215,57,53)" fg:x="562" fg:w="4"/><text x="45.1024%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="45.0918%" y="501" width="0.0798%" height="15" fill="rgb(229,137,5)" fg:x="565" fg:w="1"/><text x="45.3418%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="45.0918%" y="485" width="0.0798%" height="15" fill="rgb(210,86,2)" fg:x="565" fg:w="1"/><text x="45.3418%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.0918%" y="469" width="0.0798%" height="15" fill="rgb(231,226,51)" fg:x="565" fg:w="1"/><text x="45.3418%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="45.1716%" y="501" width="0.0798%" height="15" fill="rgb(216,62,29)" fg:x="566" fg:w="1"/><text x="45.4216%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="45.2514%" y="501" width="0.3192%" height="15" fill="rgb(248,202,3)" fg:x="567" fg:w="4"/><text x="45.5014%" y="511.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="45.3312%" y="485" width="0.2394%" height="15" fill="rgb(225,181,7)" fg:x="568" fg:w="3"/><text x="45.5812%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="45.4110%" y="469" width="0.1596%" height="15" fill="rgb(247,170,54)" fg:x="569" fg:w="2"/><text x="45.6610%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="45.4110%" y="453" width="0.1596%" height="15" fill="rgb(236,204,33)" fg:x="569" fg:w="2"/><text x="45.6610%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="45.4908%" y="437" width="0.0798%" height="15" fill="rgb(216,45,30)" fg:x="570" fg:w="1"/><text x="45.7408%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="45.4908%" y="421" width="0.0798%" height="15" fill="rgb(213,203,16)" fg:x="570" fg:w="1"/><text x="45.7408%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="45.4908%" y="405" width="0.0798%" height="15" fill="rgb(215,46,16)" fg:x="570" fg:w="1"/><text x="45.7408%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="45.6504%" y="453" width="0.0798%" height="15" fill="rgb(217,162,46)" fg:x="572" fg:w="1"/><text x="45.9004%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="45.7302%" y="405" width="0.1596%" height="15" fill="rgb(224,189,20)" fg:x="573" fg:w="2"/><text x="45.9802%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="45.8101%" y="389" width="0.0798%" height="15" fill="rgb(232,35,51)" fg:x="574" fg:w="1"/><text x="46.0601%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="45.7302%" y="453" width="0.2394%" height="15" fill="rgb(243,221,46)" fg:x="573" fg:w="3"/><text x="45.9802%" y="463.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="45.7302%" y="437" width="0.2394%" height="15" fill="rgb(248,16,16)" fg:x="573" fg:w="3"/><text x="45.9802%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="45.7302%" y="421" width="0.2394%" height="15" fill="rgb(220,168,13)" fg:x="573" fg:w="3"/><text x="45.9802%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="45.8899%" y="405" width="0.0798%" height="15" fill="rgb(243,102,39)" fg:x="575" fg:w="1"/><text x="46.1399%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="45.9697%" y="453" width="0.0798%" height="15" fill="rgb(245,82,32)" fg:x="576" fg:w="1"/><text x="46.2197%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.48%)</title><rect x="45.6504%" y="485" width="0.4789%" height="15" fill="rgb(230,164,19)" fg:x="572" fg:w="6"/><text x="45.9004%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="45.6504%" y="469" width="0.4789%" height="15" fill="rgb(221,9,41)" fg:x="572" fg:w="6"/><text x="45.9004%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="46.0495%" y="453" width="0.0798%" height="15" fill="rgb(216,93,0)" fg:x="577" fg:w="1"/><text x="46.2995%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.0495%" y="437" width="0.0798%" height="15" fill="rgb(235,113,9)" fg:x="577" fg:w="1"/><text x="46.2995%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="46.0495%" y="421" width="0.0798%" height="15" fill="rgb(209,224,10)" fg:x="577" fg:w="1"/><text x="46.2995%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="46.1293%" y="485" width="0.3192%" height="15" fill="rgb(226,54,34)" fg:x="578" fg:w="4"/><text x="46.3793%" y="495.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="46.2091%" y="469" width="0.2394%" height="15" fill="rgb(222,60,8)" fg:x="579" fg:w="3"/><text x="46.4591%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="46.2889%" y="453" width="0.1596%" height="15" fill="rgb(248,228,41)" fg:x="580" fg:w="2"/><text x="46.5389%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="46.2889%" y="437" width="0.1596%" height="15" fill="rgb(226,31,32)" fg:x="580" fg:w="2"/><text x="46.5389%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="46.3687%" y="421" width="0.0798%" height="15" fill="rgb(242,132,49)" fg:x="581" fg:w="1"/><text x="46.6187%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="46.3687%" y="405" width="0.0798%" height="15" fill="rgb(224,194,19)" fg:x="581" fg:w="1"/><text x="46.6187%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="46.3687%" y="389" width="0.0798%" height="15" fill="rgb(232,200,51)" fg:x="581" fg:w="1"/><text x="46.6187%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="46.4485%" y="469" width="0.0798%" height="15" fill="rgb(235,60,46)" fg:x="582" fg:w="1"/><text x="46.6985%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="46.4485%" y="453" width="0.0798%" height="15" fill="rgb(240,109,52)" fg:x="582" fg:w="1"/><text x="46.6985%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.4485%" y="437" width="0.0798%" height="15" fill="rgb(215,78,37)" fg:x="582" fg:w="1"/><text x="46.6985%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="46.5283%" y="453" width="0.2394%" height="15" fill="rgb(225,141,7)" fg:x="583" fg:w="3"/><text x="46.7783%" y="463.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="46.5283%" y="437" width="0.2394%" height="15" fill="rgb(216,102,54)" fg:x="583" fg:w="3"/><text x="46.7783%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.6879%" y="421" width="0.0798%" height="15" fill="rgb(238,143,13)" fg:x="585" fg:w="1"/><text x="46.9379%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="46.8476%" y="421" width="0.3192%" height="15" fill="rgb(219,45,51)" fg:x="587" fg:w="4"/><text x="47.0976%" y="431.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="46.8476%" y="405" width="0.3192%" height="15" fill="rgb(242,105,46)" fg:x="587" fg:w="4"/><text x="47.0976%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="46.8476%" y="389" width="0.3192%" height="15" fill="rgb(206,154,49)" fg:x="587" fg:w="4"/><text x="47.0976%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="46.8476%" y="373" width="0.3192%" height="15" fill="rgb(239,215,4)" fg:x="587" fg:w="4"/><text x="47.0976%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="46.8476%" y="357" width="0.3192%" height="15" fill="rgb(238,82,17)" fg:x="587" fg:w="4"/><text x="47.0976%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="46.8476%" y="341" width="0.3192%" height="15" fill="rgb(242,49,30)" fg:x="587" fg:w="4"/><text x="47.0976%" y="351.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="46.8476%" y="325" width="0.3192%" height="15" fill="rgb(248,5,16)" fg:x="587" fg:w="4"/><text x="47.0976%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="46.8476%" y="437" width="0.4789%" height="15" fill="rgb(237,138,32)" fg:x="587" fg:w="6"/><text x="47.0976%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="47.1668%" y="421" width="0.1596%" height="15" fill="rgb(235,79,45)" fg:x="591" fg:w="2"/><text x="47.4168%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="47.1668%" y="405" width="0.1596%" height="15" fill="rgb(213,105,25)" fg:x="591" fg:w="2"/><text x="47.4168%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.2466%" y="389" width="0.0798%" height="15" fill="rgb(251,131,7)" fg:x="592" fg:w="1"/><text x="47.4966%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.84%)</title><rect x="45.5706%" y="501" width="1.8356%" height="15" fill="rgb(211,155,7)" fg:x="571" fg:w="23"/><text x="45.8206%" y="511.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="46.4485%" y="485" width="0.9577%" height="15" fill="rgb(243,70,15)" fg:x="582" fg:w="12"/><text x="46.6985%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="46.5283%" y="469" width="0.8779%" height="15" fill="rgb(215,171,2)" fg:x="583" fg:w="11"/><text x="46.7783%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="46.7678%" y="453" width="0.6385%" height="15" fill="rgb(244,121,35)" fg:x="586" fg:w="8"/><text x="47.0178%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="47.3264%" y="437" width="0.0798%" height="15" fill="rgb(249,147,17)" fg:x="593" fg:w="1"/><text x="47.5764%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="47.3264%" y="421" width="0.0798%" height="15" fill="rgb(241,193,52)" fg:x="593" fg:w="1"/><text x="47.5764%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.3264%" y="405" width="0.0798%" height="15" fill="rgb(217,159,39)" fg:x="593" fg:w="1"/><text x="47.5764%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (31 samples, 2.47%)</title><rect x="45.1716%" y="517" width="2.4741%" height="15" fill="rgb(248,110,0)" fg:x="566" fg:w="31"/><text x="45.4216%" y="527.50">se..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="47.4062%" y="501" width="0.2394%" height="15" fill="rgb(233,227,0)" fg:x="594" fg:w="3"/><text x="47.6562%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="47.4860%" y="485" width="0.1596%" height="15" fill="rgb(252,55,2)" fg:x="595" fg:w="2"/><text x="47.7360%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="47.4860%" y="469" width="0.1596%" height="15" fill="rgb(224,194,24)" fg:x="595" fg:w="2"/><text x="47.7360%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="47.5658%" y="453" width="0.0798%" height="15" fill="rgb(247,5,33)" fg:x="596" fg:w="1"/><text x="47.8158%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="47.5658%" y="437" width="0.0798%" height="15" fill="rgb(242,66,47)" fg:x="596" fg:w="1"/><text x="47.8158%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="47.5658%" y="421" width="0.0798%" height="15" fill="rgb(213,107,12)" fg:x="596" fg:w="1"/><text x="47.8158%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (38 samples, 3.03%)</title><rect x="44.6927%" y="533" width="3.0327%" height="15" fill="rgb(206,131,1)" fg:x="560" fg:w="38"/><text x="44.9427%" y="543.50">&lt;se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="47.6457%" y="517" width="0.0798%" height="15" fill="rgb(214,9,36)" fg:x="597" fg:w="1"/><text x="47.8957%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.7255%" y="501" width="0.0798%" height="15" fill="rgb(251,215,18)" fg:x="598" fg:w="1"/><text x="47.9755%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="47.8053%" y="501" width="0.0798%" height="15" fill="rgb(251,64,9)" fg:x="599" fg:w="1"/><text x="48.0553%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="47.8851%" y="485" width="0.1596%" height="15" fill="rgb(235,68,21)" fg:x="600" fg:w="2"/><text x="48.1351%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="48.0447%" y="469" width="0.1596%" height="15" fill="rgb(240,69,38)" fg:x="602" fg:w="2"/><text x="48.2947%" y="479.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="48.2043%" y="453" width="0.2394%" height="15" fill="rgb(231,18,27)" fg:x="604" fg:w="3"/><text x="48.4543%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="48.5235%" y="421" width="0.1596%" height="15" fill="rgb(215,154,25)" fg:x="608" fg:w="2"/><text x="48.7735%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="48.6832%" y="421" width="0.1596%" height="15" fill="rgb(224,33,46)" fg:x="610" fg:w="2"/><text x="48.9332%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.7630%" y="405" width="0.0798%" height="15" fill="rgb(248,191,53)" fg:x="611" fg:w="1"/><text x="49.0130%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.20%)</title><rect x="47.7255%" y="533" width="1.1971%" height="15" fill="rgb(231,3,37)" fg:x="598" fg:w="15"/><text x="47.9755%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.20%)</title><rect x="47.7255%" y="517" width="1.1971%" height="15" fill="rgb(209,152,2)" fg:x="598" fg:w="15"/><text x="47.9755%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="47.8851%" y="501" width="1.0375%" height="15" fill="rgb(212,208,43)" fg:x="600" fg:w="13"/><text x="48.1351%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="48.0447%" y="485" width="0.8779%" height="15" fill="rgb(208,60,49)" fg:x="602" fg:w="11"/><text x="48.2947%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="48.2043%" y="469" width="0.7183%" height="15" fill="rgb(245,135,6)" fg:x="604" fg:w="9"/><text x="48.4543%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="48.4437%" y="453" width="0.4789%" height="15" fill="rgb(243,86,23)" fg:x="607" fg:w="6"/><text x="48.6937%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="48.4437%" y="437" width="0.4789%" height="15" fill="rgb(223,7,20)" fg:x="607" fg:w="6"/><text x="48.6937%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="48.8428%" y="421" width="0.0798%" height="15" fill="rgb(212,182,17)" fg:x="612" fg:w="1"/><text x="49.0928%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.8428%" y="405" width="0.0798%" height="15" fill="rgb(237,94,50)" fg:x="612" fg:w="1"/><text x="49.0928%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.8428%" y="389" width="0.0798%" height="15" fill="rgb(232,185,44)" fg:x="612" fg:w="1"/><text x="49.0928%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.9226%" y="453" width="0.0798%" height="15" fill="rgb(205,50,36)" fg:x="613" fg:w="1"/><text x="49.1726%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="49.0024%" y="453" width="0.0798%" height="15" fill="rgb(252,32,32)" fg:x="614" fg:w="1"/><text x="49.2524%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.0024%" y="437" width="0.0798%" height="15" fill="rgb(241,123,33)" fg:x="614" fg:w="1"/><text x="49.2524%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.1620%" y="437" width="0.0798%" height="15" fill="rgb(212,140,16)" fg:x="616" fg:w="1"/><text x="49.4120%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.4014%" y="389" width="0.0798%" height="15" fill="rgb(247,132,5)" fg:x="619" fg:w="1"/><text x="49.6514%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="49.4812%" y="389" width="0.0798%" height="15" fill="rgb(209,137,38)" fg:x="620" fg:w="1"/><text x="49.7312%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4 samples, 0.32%)</title><rect x="49.3216%" y="421" width="0.3192%" height="15" fill="rgb(248,32,42)" fg:x="618" fg:w="4"/><text x="49.5716%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="49.3216%" y="405" width="0.3192%" height="15" fill="rgb(216,188,40)" fg:x="618" fg:w="4"/><text x="49.5716%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="49.5611%" y="389" width="0.0798%" height="15" fill="rgb(209,127,53)" fg:x="621" fg:w="1"/><text x="49.8111%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="48.9226%" y="501" width="0.9577%" height="15" fill="rgb(254,162,9)" fg:x="613" fg:w="12"/><text x="49.1726%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.96%)</title><rect x="48.9226%" y="485" width="0.9577%" height="15" fill="rgb(219,183,10)" fg:x="613" fg:w="12"/><text x="49.1726%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="48.9226%" y="469" width="0.9577%" height="15" fill="rgb(217,192,21)" fg:x="613" fg:w="12"/><text x="49.1726%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="49.0822%" y="453" width="0.7981%" height="15" fill="rgb(251,89,27)" fg:x="615" fg:w="10"/><text x="49.3322%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="49.2418%" y="437" width="0.6385%" height="15" fill="rgb(253,55,28)" fg:x="617" fg:w="8"/><text x="49.4918%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="49.6409%" y="421" width="0.2394%" height="15" fill="rgb(216,159,8)" fg:x="622" fg:w="3"/><text x="49.8909%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="49.6409%" y="405" width="0.2394%" height="15" fill="rgb(231,228,44)" fg:x="622" fg:w="3"/><text x="49.8909%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="49.7207%" y="389" width="0.1596%" height="15" fill="rgb(247,34,48)" fg:x="623" fg:w="2"/><text x="49.9707%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="49.8005%" y="373" width="0.0798%" height="15" fill="rgb(247,222,18)" fg:x="624" fg:w="1"/><text x="50.0505%" y="383.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.24%)</title><rect x="50.0399%" y="437" width="0.2394%" height="15" fill="rgb(227,49,4)" fg:x="627" fg:w="3"/><text x="50.2899%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="50.1197%" y="421" width="0.1596%" height="15" fill="rgb(219,189,53)" fg:x="628" fg:w="2"/><text x="50.3697%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="50.1995%" y="405" width="0.0798%" height="15" fill="rgb(241,160,53)" fg:x="629" fg:w="1"/><text x="50.4495%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.56%)</title><rect x="49.8803%" y="485" width="0.5587%" height="15" fill="rgb(227,115,4)" fg:x="625" fg:w="7"/><text x="50.1303%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.48%)</title><rect x="49.9601%" y="469" width="0.4789%" height="15" fill="rgb(215,28,28)" fg:x="626" fg:w="6"/><text x="50.2101%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="50.0399%" y="453" width="0.3990%" height="15" fill="rgb(237,143,40)" fg:x="627" fg:w="5"/><text x="50.2899%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="50.2793%" y="437" width="0.1596%" height="15" fill="rgb(205,107,24)" fg:x="630" fg:w="2"/><text x="50.5293%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="50.2793%" y="421" width="0.1596%" height="15" fill="rgb(209,112,35)" fg:x="630" fg:w="2"/><text x="50.5293%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="50.2793%" y="405" width="0.1596%" height="15" fill="rgb(206,135,5)" fg:x="630" fg:w="2"/><text x="50.5293%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="50.3591%" y="389" width="0.0798%" height="15" fill="rgb(227,217,38)" fg:x="631" fg:w="1"/><text x="50.6091%" y="399.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (20 samples, 1.60%)</title><rect x="48.9226%" y="517" width="1.5962%" height="15" fill="rgb(205,0,41)" fg:x="613" fg:w="20"/><text x="49.1726%" y="527.50"></text></g><g><title>treediff::diff::diff (8 samples, 0.64%)</title><rect x="49.8803%" y="501" width="0.6385%" height="15" fill="rgb(220,20,40)" fg:x="625" fg:w="8"/><text x="50.1303%" y="511.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="50.4389%" y="485" width="0.0798%" height="15" fill="rgb(216,145,3)" fg:x="632" fg:w="1"/><text x="50.6889%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.4389%" y="469" width="0.0798%" height="15" fill="rgb(207,130,51)" fg:x="632" fg:w="1"/><text x="50.6889%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="50.5986%" y="485" width="0.1596%" height="15" fill="rgb(252,93,13)" fg:x="634" fg:w="2"/><text x="50.8486%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="50.7582%" y="485" width="0.3192%" height="15" fill="rgb(210,105,15)" fg:x="636" fg:w="4"/><text x="51.0082%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.9976%" y="469" width="0.0798%" height="15" fill="rgb(212,126,31)" fg:x="639" fg:w="1"/><text x="51.2476%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.9976%" y="453" width="0.0798%" height="15" fill="rgb(241,167,46)" fg:x="639" fg:w="1"/><text x="51.2476%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="51.0774%" y="485" width="0.0798%" height="15" fill="rgb(217,143,19)" fg:x="640" fg:w="1"/><text x="51.3274%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="51.1572%" y="485" width="0.1596%" height="15" fill="rgb(235,117,33)" fg:x="641" fg:w="2"/><text x="51.4072%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="51.2370%" y="469" width="0.0798%" height="15" fill="rgb(247,95,6)" fg:x="642" fg:w="1"/><text x="51.4870%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="51.3168%" y="485" width="0.2394%" height="15" fill="rgb(243,206,43)" fg:x="643" fg:w="3"/><text x="51.5668%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="51.3168%" y="469" width="0.2394%" height="15" fill="rgb(229,65,54)" fg:x="643" fg:w="3"/><text x="51.5668%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="51.3966%" y="453" width="0.1596%" height="15" fill="rgb(247,137,34)" fg:x="644" fg:w="2"/><text x="51.6466%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.4765%" y="437" width="0.0798%" height="15" fill="rgb(245,174,44)" fg:x="645" fg:w="1"/><text x="51.7265%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="51.7957%" y="453" width="0.0798%" height="15" fill="rgb(223,64,15)" fg:x="649" fg:w="1"/><text x="52.0457%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="51.8755%" y="437" width="0.2394%" height="15" fill="rgb(243,153,36)" fg:x="650" fg:w="3"/><text x="52.1255%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="51.8755%" y="421" width="0.2394%" height="15" fill="rgb(252,23,4)" fg:x="650" fg:w="3"/><text x="52.1255%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.0351%" y="405" width="0.0798%" height="15" fill="rgb(209,132,13)" fg:x="652" fg:w="1"/><text x="52.2851%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="52.1947%" y="405" width="0.3192%" height="15" fill="rgb(209,196,21)" fg:x="654" fg:w="4"/><text x="52.4447%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="52.1947%" y="389" width="0.3192%" height="15" fill="rgb(252,197,1)" fg:x="654" fg:w="4"/><text x="52.4447%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="52.3543%" y="373" width="0.1596%" height="15" fill="rgb(229,42,46)" fg:x="656" fg:w="2"/><text x="52.6043%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="52.3543%" y="357" width="0.1596%" height="15" fill="rgb(219,85,8)" fg:x="656" fg:w="2"/><text x="52.6043%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.48%)</title><rect x="52.1149%" y="437" width="0.4789%" height="15" fill="rgb(223,185,14)" fg:x="653" fg:w="6"/><text x="52.3649%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="52.1149%" y="421" width="0.4789%" height="15" fill="rgb(217,196,18)" fg:x="653" fg:w="6"/><text x="52.3649%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.5140%" y="405" width="0.0798%" height="15" fill="rgb(220,122,37)" fg:x="658" fg:w="1"/><text x="52.7640%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="52.7534%" y="421" width="0.1596%" height="15" fill="rgb(236,135,33)" fg:x="661" fg:w="2"/><text x="53.0034%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="52.9130%" y="421" width="0.0798%" height="15" fill="rgb(222,86,54)" fg:x="663" fg:w="1"/><text x="53.1630%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.0726%" y="373" width="0.0798%" height="15" fill="rgb(227,42,22)" fg:x="665" fg:w="1"/><text x="53.3226%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="53.4717%" y="357" width="0.0798%" height="15" fill="rgb(243,101,27)" fg:x="670" fg:w="1"/><text x="53.7217%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="53.6313%" y="341" width="0.2394%" height="15" fill="rgb(229,100,8)" fg:x="672" fg:w="3"/><text x="53.8813%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="53.6313%" y="325" width="0.2394%" height="15" fill="rgb(252,68,10)" fg:x="672" fg:w="3"/><text x="53.8813%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="53.7909%" y="309" width="0.0798%" height="15" fill="rgb(219,19,31)" fg:x="674" fg:w="1"/><text x="54.0409%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="54.0303%" y="325" width="0.0798%" height="15" fill="rgb(246,150,44)" fg:x="677" fg:w="1"/><text x="54.2803%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="54.1101%" y="325" width="0.0798%" height="15" fill="rgb(211,14,39)" fg:x="678" fg:w="1"/><text x="54.3601%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="53.5515%" y="357" width="0.7183%" height="15" fill="rgb(221,98,29)" fg:x="671" fg:w="9"/><text x="53.8015%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="53.8707%" y="341" width="0.3990%" height="15" fill="rgb(221,70,26)" fg:x="675" fg:w="5"/><text x="54.1207%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="54.1899%" y="325" width="0.0798%" height="15" fill="rgb(236,146,30)" fg:x="679" fg:w="1"/><text x="54.4399%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.1899%" y="309" width="0.0798%" height="15" fill="rgb(226,94,34)" fg:x="679" fg:w="1"/><text x="54.4399%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.1899%" y="293" width="0.0798%" height="15" fill="rgb(248,132,21)" fg:x="679" fg:w="1"/><text x="54.4399%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.1899%" y="277" width="0.0798%" height="15" fill="rgb(245,43,50)" fg:x="679" fg:w="1"/><text x="54.4399%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (17 samples, 1.36%)</title><rect x="52.9928%" y="421" width="1.3567%" height="15" fill="rgb(245,132,31)" fg:x="664" fg:w="17"/><text x="53.2428%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (17 samples, 1.36%)</title><rect x="52.9928%" y="405" width="1.3567%" height="15" fill="rgb(230,171,4)" fg:x="664" fg:w="17"/><text x="53.2428%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (16 samples, 1.28%)</title><rect x="53.0726%" y="389" width="1.2769%" height="15" fill="rgb(235,6,45)" fg:x="665" fg:w="16"/><text x="53.3226%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 1.20%)</title><rect x="53.1524%" y="373" width="1.1971%" height="15" fill="rgb(220,80,28)" fg:x="666" fg:w="15"/><text x="53.4024%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.2698%" y="357" width="0.0798%" height="15" fill="rgb(242,171,9)" fg:x="680" fg:w="1"/><text x="54.5198%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (33 samples, 2.63%)</title><rect x="51.8755%" y="453" width="2.6337%" height="15" fill="rgb(214,135,29)" fg:x="650" fg:w="33"/><text x="52.1255%" y="463.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (24 samples, 1.92%)</title><rect x="52.5938%" y="437" width="1.9154%" height="15" fill="rgb(221,229,16)" fg:x="659" fg:w="24"/><text x="52.8438%" y="447.50">s..</text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="54.3496%" y="421" width="0.1596%" height="15" fill="rgb(253,59,46)" fg:x="681" fg:w="2"/><text x="54.5996%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (35 samples, 2.79%)</title><rect x="51.7957%" y="469" width="2.7933%" height="15" fill="rgb(250,147,20)" fg:x="649" fg:w="35"/><text x="52.0457%" y="479.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="54.5092%" y="453" width="0.0798%" height="15" fill="rgb(236,64,48)" fg:x="683" fg:w="1"/><text x="54.7592%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.5092%" y="437" width="0.0798%" height="15" fill="rgb(240,37,42)" fg:x="683" fg:w="1"/><text x="54.7592%" y="447.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (52 samples, 4.15%)</title><rect x="50.5188%" y="517" width="4.1500%" height="15" fill="rgb(220,41,50)" fg:x="633" fg:w="52"/><text x="50.7688%" y="527.50">kerne..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (52 samples, 4.15%)</title><rect x="50.5188%" y="501" width="4.1500%" height="15" fill="rgb(216,51,14)" fg:x="633" fg:w="52"/><text x="50.7688%" y="511.50">&lt;serd..</text></g><g><title>serde::ser::Serializer::collect_map (39 samples, 3.11%)</title><rect x="51.5563%" y="485" width="3.1125%" height="15" fill="rgb(215,83,10)" fg:x="646" fg:w="39"/><text x="51.8063%" y="495.50">ser..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.5890%" y="469" width="0.0798%" height="15" fill="rgb(206,144,17)" fg:x="684" fg:w="1"/><text x="54.8390%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.5890%" y="453" width="0.0798%" height="15" fill="rgb(219,196,37)" fg:x="684" fg:w="1"/><text x="54.8390%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.5890%" y="437" width="0.0798%" height="15" fill="rgb(226,135,26)" fg:x="684" fg:w="1"/><text x="54.8390%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="54.6688%" y="405" width="0.1596%" height="15" fill="rgb(237,195,40)" fg:x="685" fg:w="2"/><text x="54.9188%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="54.9082%" y="341" width="0.1596%" height="15" fill="rgb(228,182,42)" fg:x="688" fg:w="2"/><text x="55.1582%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="54.9880%" y="325" width="0.0798%" height="15" fill="rgb(224,135,50)" fg:x="689" fg:w="1"/><text x="55.2380%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="54.8284%" y="373" width="0.3192%" height="15" fill="rgb(236,215,34)" fg:x="687" fg:w="4"/><text x="55.0784%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="54.8284%" y="357" width="0.3192%" height="15" fill="rgb(244,213,27)" fg:x="687" fg:w="4"/><text x="55.0784%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="55.0678%" y="341" width="0.0798%" height="15" fill="rgb(233,37,53)" fg:x="690" fg:w="1"/><text x="55.3178%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="55.0678%" y="325" width="0.0798%" height="15" fill="rgb(222,132,14)" fg:x="690" fg:w="1"/><text x="55.3178%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="55.3871%" y="261" width="0.0798%" height="15" fill="rgb(219,202,29)" fg:x="694" fg:w="1"/><text x="55.6371%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="55.4669%" y="261" width="0.0798%" height="15" fill="rgb(226,157,39)" fg:x="695" fg:w="1"/><text x="55.7169%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.4669%" y="245" width="0.0798%" height="15" fill="rgb(235,213,2)" fg:x="695" fg:w="1"/><text x="55.7169%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="55.3871%" y="293" width="0.2394%" height="15" fill="rgb(250,121,2)" fg:x="694" fg:w="3"/><text x="55.6371%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="55.3871%" y="277" width="0.2394%" height="15" fill="rgb(206,192,33)" fg:x="694" fg:w="3"/><text x="55.6371%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.5467%" y="261" width="0.0798%" height="15" fill="rgb(240,161,6)" fg:x="696" fg:w="1"/><text x="55.7967%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="55.2275%" y="357" width="0.4789%" height="15" fill="rgb(246,53,30)" fg:x="692" fg:w="6"/><text x="55.4775%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="55.2275%" y="341" width="0.4789%" height="15" fill="rgb(219,123,43)" fg:x="692" fg:w="6"/><text x="55.4775%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="55.2275%" y="325" width="0.4789%" height="15" fill="rgb(236,53,49)" fg:x="692" fg:w="6"/><text x="55.4775%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="55.2275%" y="309" width="0.4789%" height="15" fill="rgb(241,156,1)" fg:x="692" fg:w="6"/><text x="55.4775%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="55.6265%" y="293" width="0.0798%" height="15" fill="rgb(209,73,26)" fg:x="697" fg:w="1"/><text x="55.8765%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.6265%" y="277" width="0.0798%" height="15" fill="rgb(206,114,3)" fg:x="697" fg:w="1"/><text x="55.8765%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="55.7861%" y="341" width="0.1596%" height="15" fill="rgb(230,214,9)" fg:x="699" fg:w="2"/><text x="56.0361%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="55.7063%" y="357" width="0.3192%" height="15" fill="rgb(240,184,46)" fg:x="698" fg:w="4"/><text x="55.9563%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.9457%" y="341" width="0.0798%" height="15" fill="rgb(242,169,54)" fg:x="701" fg:w="1"/><text x="56.1957%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 1.36%)</title><rect x="54.8284%" y="389" width="1.3567%" height="15" fill="rgb(207,168,50)" fg:x="687" fg:w="17"/><text x="55.0784%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.04%)</title><rect x="55.1476%" y="373" width="1.0375%" height="15" fill="rgb(240,114,2)" fg:x="691" fg:w="13"/><text x="55.3976%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="56.0255%" y="357" width="0.1596%" height="15" fill="rgb(211,17,40)" fg:x="702" fg:w="2"/><text x="56.2755%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (21 samples, 1.68%)</title><rect x="54.6688%" y="421" width="1.6760%" height="15" fill="rgb(235,97,36)" fg:x="685" fg:w="21"/><text x="54.9188%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19 samples, 1.52%)</title><rect x="54.8284%" y="405" width="1.5164%" height="15" fill="rgb(208,164,11)" fg:x="687" fg:w="19"/><text x="55.0784%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="56.1852%" y="389" width="0.1596%" height="15" fill="rgb(242,11,17)" fg:x="704" fg:w="2"/><text x="56.4352%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="56.2650%" y="373" width="0.0798%" height="15" fill="rgb(215,86,33)" fg:x="705" fg:w="1"/><text x="56.5150%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="56.3448%" y="421" width="0.1596%" height="15" fill="rgb(245,185,28)" fg:x="706" fg:w="2"/><text x="56.5948%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="56.4246%" y="405" width="0.0798%" height="15" fill="rgb(231,89,42)" fg:x="707" fg:w="1"/><text x="56.6746%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (25 samples, 2.00%)</title><rect x="54.6688%" y="453" width="1.9952%" height="15" fill="rgb(210,18,47)" fg:x="685" fg:w="25"/><text x="54.9188%" y="463.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (25 samples, 2.00%)</title><rect x="54.6688%" y="437" width="1.9952%" height="15" fill="rgb(214,84,8)" fg:x="685" fg:w="25"/><text x="54.9188%" y="447.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="56.5044%" y="421" width="0.1596%" height="15" fill="rgb(214,222,23)" fg:x="708" fg:w="2"/><text x="56.7544%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.5842%" y="405" width="0.0798%" height="15" fill="rgb(213,104,21)" fg:x="709" fg:w="1"/><text x="56.8342%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.5842%" y="389" width="0.0798%" height="15" fill="rgb(238,138,6)" fg:x="709" fg:w="1"/><text x="56.8342%" y="399.50"></text></g><g><title>engine::session::state::State::close (158 samples, 12.61%)</title><rect x="44.2937%" y="597" width="12.6097%" height="15" fill="rgb(205,167,50)" fg:x="555" fg:w="158"/><text x="44.5437%" y="607.50">engine::session::st..</text></g><g><title>engine::session::state::State::flush_entities (158 samples, 12.61%)</title><rect x="44.2937%" y="581" width="12.6097%" height="15" fill="rgb(230,105,27)" fg:x="555" fg:w="158"/><text x="44.5437%" y="591.50">engine::session::st..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (156 samples, 12.45%)</title><rect x="44.4533%" y="565" width="12.4501%" height="15" fill="rgb(222,97,48)" fg:x="557" fg:w="156"/><text x="44.7033%" y="575.50">engine::session::in..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (155 samples, 12.37%)</title><rect x="44.5331%" y="549" width="12.3703%" height="15" fill="rgb(222,197,14)" fg:x="558" fg:w="155"/><text x="44.7831%" y="559.50">engine::session::s..</text></g><g><title>kernel::model::any_entity_changes (100 samples, 7.98%)</title><rect x="48.9226%" y="533" width="7.9808%" height="15" fill="rgb(210,105,47)" fg:x="613" fg:w="100"/><text x="49.1726%" y="543.50">kernel::mod..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (28 samples, 2.23%)</title><rect x="54.6688%" y="517" width="2.2346%" height="15" fill="rgb(238,158,19)" fg:x="685" fg:w="28"/><text x="54.9188%" y="527.50">s..</text></g><g><title>serde_json::de::from_trait (28 samples, 2.23%)</title><rect x="54.6688%" y="501" width="2.2346%" height="15" fill="rgb(226,176,23)" fg:x="685" fg:w="28"/><text x="54.9188%" y="511.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (28 samples, 2.23%)</title><rect x="54.6688%" y="485" width="2.2346%" height="15" fill="rgb(208,79,31)" fg:x="685" fg:w="28"/><text x="54.9188%" y="495.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (28 samples, 2.23%)</title><rect x="54.6688%" y="469" width="2.2346%" height="15" fill="rgb(221,154,21)" fg:x="685" fg:w="28"/><text x="54.9188%" y="479.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="56.6640%" y="453" width="0.2394%" height="15" fill="rgb(213,61,41)" fg:x="710" fg:w="3"/><text x="56.9140%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.8236%" y="437" width="0.0798%" height="15" fill="rgb(215,28,33)" fg:x="712" fg:w="1"/><text x="57.0736%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.8236%" y="421" width="0.0798%" height="15" fill="rgb(231,139,26)" fg:x="712" fg:w="1"/><text x="57.0736%" y="431.50"></text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="56.9034%" y="597" width="0.0798%" height="15" fill="rgb(232,159,16)" fg:x="713" fg:w="1"/><text x="57.1534%" y="607.50"></text></g><g><title>engine::session::Session::close (166 samples, 13.25%)</title><rect x="43.8148%" y="613" width="13.2482%" height="15" fill="rgb(233,80,10)" fg:x="549" fg:w="166"/><text x="44.0648%" y="623.50">engine::session::Ses..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="56.9832%" y="597" width="0.0798%" height="15" fill="rgb(208,147,29)" fg:x="714" fg:w="1"/><text x="57.2332%" y="607.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="56.9832%" y="581" width="0.0798%" height="15" fill="rgb(213,10,12)" fg:x="714" fg:w="1"/><text x="57.2332%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="56.9832%" y="565" width="0.0798%" height="15" fill="rgb(231,218,13)" fg:x="714" fg:w="1"/><text x="57.2332%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="56.9832%" y="549" width="0.0798%" height="15" fill="rgb(244,199,44)" fg:x="714" fg:w="1"/><text x="57.2332%" y="559.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="56.9832%" y="533" width="0.0798%" height="15" fill="rgb(240,144,53)" fg:x="714" fg:w="1"/><text x="57.2332%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.3823%" y="293" width="0.0798%" height="15" fill="rgb(223,57,28)" fg:x="719" fg:w="1"/><text x="57.6323%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.3823%" y="277" width="0.0798%" height="15" fill="rgb(213,134,38)" fg:x="719" fg:w="1"/><text x="57.6323%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.3823%" y="261" width="0.0798%" height="15" fill="rgb(251,182,42)" fg:x="719" fg:w="1"/><text x="57.6323%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.3823%" y="245" width="0.0798%" height="15" fill="rgb(229,93,13)" fg:x="719" fg:w="1"/><text x="57.6323%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.3823%" y="229" width="0.0798%" height="15" fill="rgb(234,171,3)" fg:x="719" fg:w="1"/><text x="57.6323%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="57.3823%" y="213" width="0.0798%" height="15" fill="rgb(241,105,32)" fg:x="719" fg:w="1"/><text x="57.6323%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="57.3823%" y="197" width="0.0798%" height="15" fill="rgb(221,66,3)" fg:x="719" fg:w="1"/><text x="57.6323%" y="207.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (4 samples, 0.32%)</title><rect x="57.3025%" y="485" width="0.3192%" height="15" fill="rgb(248,155,29)" fg:x="718" fg:w="4"/><text x="57.5525%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (4 samples, 0.32%)</title><rect x="57.3025%" y="469" width="0.3192%" height="15" fill="rgb(231,31,5)" fg:x="718" fg:w="4"/><text x="57.5525%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="57.3025%" y="453" width="0.3192%" height="15" fill="rgb(213,188,31)" fg:x="718" fg:w="4"/><text x="57.5525%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="57.3823%" y="437" width="0.2394%" height="15" fill="rgb(212,104,33)" fg:x="719" fg:w="3"/><text x="57.6323%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="57.3823%" y="421" width="0.2394%" height="15" fill="rgb(254,77,51)" fg:x="719" fg:w="3"/><text x="57.6323%" y="431.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="57.3823%" y="405" width="0.2394%" height="15" fill="rgb(234,39,26)" fg:x="719" fg:w="3"/><text x="57.6323%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="57.3823%" y="389" width="0.2394%" height="15" fill="rgb(208,88,36)" fg:x="719" fg:w="3"/><text x="57.6323%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="57.3823%" y="373" width="0.2394%" height="15" fill="rgb(243,222,10)" fg:x="719" fg:w="3"/><text x="57.6323%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="57.3823%" y="357" width="0.2394%" height="15" fill="rgb(218,133,52)" fg:x="719" fg:w="3"/><text x="57.6323%" y="367.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="57.3823%" y="341" width="0.2394%" height="15" fill="rgb(222,25,26)" fg:x="719" fg:w="3"/><text x="57.6323%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="57.3823%" y="325" width="0.2394%" height="15" fill="rgb(243,174,24)" fg:x="719" fg:w="3"/><text x="57.6323%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="57.3823%" y="309" width="0.2394%" height="15" fill="rgb(233,188,52)" fg:x="719" fg:w="3"/><text x="57.6323%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="57.4621%" y="293" width="0.1596%" height="15" fill="rgb(208,89,14)" fg:x="720" fg:w="2"/><text x="57.7121%" y="303.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="57.4621%" y="277" width="0.1596%" height="15" fill="rgb(205,204,21)" fg:x="720" fg:w="2"/><text x="57.7121%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="57.4621%" y="261" width="0.1596%" height="15" fill="rgb(246,39,28)" fg:x="720" fg:w="2"/><text x="57.7121%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="57.5419%" y="245" width="0.0798%" height="15" fill="rgb(235,71,19)" fg:x="721" fg:w="1"/><text x="57.7919%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="57.5419%" y="229" width="0.0798%" height="15" fill="rgb(211,62,39)" fg:x="721" fg:w="1"/><text x="57.7919%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="57.5419%" y="213" width="0.0798%" height="15" fill="rgb(246,118,20)" fg:x="721" fg:w="1"/><text x="57.7919%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="57.5419%" y="197" width="0.0798%" height="15" fill="rgb(230,82,12)" fg:x="721" fg:w="1"/><text x="57.7919%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="57.5419%" y="181" width="0.0798%" height="15" fill="rgb(205,212,34)" fg:x="721" fg:w="1"/><text x="57.7919%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="57.5419%" y="165" width="0.0798%" height="15" fill="rgb(239,90,1)" fg:x="721" fg:w="1"/><text x="57.7919%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="57.6217%" y="485" width="0.0798%" height="15" fill="rgb(225,198,50)" fg:x="722" fg:w="1"/><text x="57.8717%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="57.9409%" y="421" width="0.0798%" height="15" fill="rgb(227,208,48)" fg:x="726" fg:w="1"/><text x="58.1909%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.9409%" y="405" width="0.0798%" height="15" fill="rgb(238,134,41)" fg:x="726" fg:w="1"/><text x="58.1909%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.9409%" y="389" width="0.0798%" height="15" fill="rgb(241,58,39)" fg:x="726" fg:w="1"/><text x="58.1909%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.9409%" y="373" width="0.0798%" height="15" fill="rgb(214,126,4)" fg:x="726" fg:w="1"/><text x="58.1909%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.9409%" y="357" width="0.0798%" height="15" fill="rgb(235,149,4)" fg:x="726" fg:w="1"/><text x="58.1909%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.9409%" y="341" width="0.0798%" height="15" fill="rgb(236,59,29)" fg:x="726" fg:w="1"/><text x="58.1909%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="57.9409%" y="325" width="0.0798%" height="15" fill="rgb(246,11,33)" fg:x="726" fg:w="1"/><text x="58.1909%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="57.9409%" y="309" width="0.0798%" height="15" fill="rgb(232,180,35)" fg:x="726" fg:w="1"/><text x="58.1909%" y="319.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="58.1006%" y="357" width="0.0798%" height="15" fill="rgb(220,35,37)" fg:x="728" fg:w="1"/><text x="58.3506%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="58.1006%" y="341" width="0.0798%" height="15" fill="rgb(238,107,48)" fg:x="728" fg:w="1"/><text x="58.3506%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="58.1804%" y="197" width="0.0798%" height="15" fill="rgb(205,65,21)" fg:x="729" fg:w="1"/><text x="58.4304%" y="207.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="58.1006%" y="373" width="0.2394%" height="15" fill="rgb(246,138,48)" fg:x="728" fg:w="3"/><text x="58.3506%" y="383.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="58.1804%" y="357" width="0.1596%" height="15" fill="rgb(209,220,47)" fg:x="729" fg:w="2"/><text x="58.4304%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="58.1804%" y="341" width="0.1596%" height="15" fill="rgb(222,162,49)" fg:x="729" fg:w="2"/><text x="58.4304%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="58.1804%" y="325" width="0.1596%" height="15" fill="rgb(243,123,11)" fg:x="729" fg:w="2"/><text x="58.4304%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.1804%" y="309" width="0.1596%" height="15" fill="rgb(221,229,41)" fg:x="729" fg:w="2"/><text x="58.4304%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="58.1804%" y="293" width="0.1596%" height="15" fill="rgb(216,68,4)" fg:x="729" fg:w="2"/><text x="58.4304%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.1804%" y="277" width="0.1596%" height="15" fill="rgb(207,88,35)" fg:x="729" fg:w="2"/><text x="58.4304%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="58.1804%" y="261" width="0.1596%" height="15" fill="rgb(252,2,5)" fg:x="729" fg:w="2"/><text x="58.4304%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.1804%" y="245" width="0.1596%" height="15" fill="rgb(209,173,7)" fg:x="729" fg:w="2"/><text x="58.4304%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="58.1804%" y="229" width="0.1596%" height="15" fill="rgb(210,198,52)" fg:x="729" fg:w="2"/><text x="58.4304%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.1804%" y="213" width="0.1596%" height="15" fill="rgb(228,152,32)" fg:x="729" fg:w="2"/><text x="58.4304%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.2602%" y="197" width="0.0798%" height="15" fill="rgb(249,98,29)" fg:x="730" fg:w="1"/><text x="58.5102%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.2602%" y="181" width="0.0798%" height="15" fill="rgb(205,148,48)" fg:x="730" fg:w="1"/><text x="58.5102%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.3400%" y="261" width="0.0798%" height="15" fill="rgb(236,69,34)" fg:x="731" fg:w="1"/><text x="58.5900%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.3400%" y="245" width="0.0798%" height="15" fill="rgb(220,151,41)" fg:x="731" fg:w="1"/><text x="58.5900%" y="255.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (5 samples, 0.40%)</title><rect x="58.1006%" y="405" width="0.3990%" height="15" fill="rgb(254,106,24)" fg:x="728" fg:w="5"/><text x="58.3506%" y="415.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="58.1006%" y="389" width="0.3990%" height="15" fill="rgb(210,37,48)" fg:x="728" fg:w="5"/><text x="58.3506%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="58.3400%" y="373" width="0.1596%" height="15" fill="rgb(254,131,5)" fg:x="731" fg:w="2"/><text x="58.5900%" y="383.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="58.3400%" y="357" width="0.1596%" height="15" fill="rgb(216,55,41)" fg:x="731" fg:w="2"/><text x="58.5900%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="58.3400%" y="341" width="0.1596%" height="15" fill="rgb(250,35,31)" fg:x="731" fg:w="2"/><text x="58.5900%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.3400%" y="325" width="0.1596%" height="15" fill="rgb(207,124,33)" fg:x="731" fg:w="2"/><text x="58.5900%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.3400%" y="309" width="0.1596%" height="15" fill="rgb(249,175,17)" fg:x="731" fg:w="2"/><text x="58.5900%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.3400%" y="293" width="0.1596%" height="15" fill="rgb(224,175,39)" fg:x="731" fg:w="2"/><text x="58.5900%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.3400%" y="277" width="0.1596%" height="15" fill="rgb(208,67,49)" fg:x="731" fg:w="2"/><text x="58.5900%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.4198%" y="261" width="0.0798%" height="15" fill="rgb(222,188,41)" fg:x="732" fg:w="1"/><text x="58.6698%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.6592%" y="309" width="0.0798%" height="15" fill="rgb(243,213,30)" fg:x="735" fg:w="1"/><text x="58.9092%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.6592%" y="293" width="0.0798%" height="15" fill="rgb(253,100,45)" fg:x="735" fg:w="1"/><text x="58.9092%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.7390%" y="309" width="0.0798%" height="15" fill="rgb(226,24,44)" fg:x="736" fg:w="1"/><text x="58.9890%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.8188%" y="245" width="0.0798%" height="15" fill="rgb(215,41,24)" fg:x="737" fg:w="1"/><text x="59.0688%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.8188%" y="229" width="0.0798%" height="15" fill="rgb(254,53,33)" fg:x="737" fg:w="1"/><text x="59.0688%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.8188%" y="213" width="0.0798%" height="15" fill="rgb(242,103,10)" fg:x="737" fg:w="1"/><text x="59.0688%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="58.8188%" y="261" width="0.1596%" height="15" fill="rgb(246,29,21)" fg:x="737" fg:w="2"/><text x="59.0688%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="58.8986%" y="245" width="0.0798%" height="15" fill="rgb(251,154,1)" fg:x="738" fg:w="1"/><text x="59.1486%" y="255.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="58.4996%" y="389" width="0.6385%" height="15" fill="rgb(254,212,26)" fg:x="733" fg:w="8"/><text x="58.7496%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="58.4996%" y="373" width="0.6385%" height="15" fill="rgb(251,187,46)" fg:x="733" fg:w="8"/><text x="58.7496%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="58.4996%" y="357" width="0.6385%" height="15" fill="rgb(224,208,14)" fg:x="733" fg:w="8"/><text x="58.7496%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="58.5794%" y="341" width="0.5587%" height="15" fill="rgb(222,176,26)" fg:x="734" fg:w="7"/><text x="58.8294%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="58.5794%" y="325" width="0.5587%" height="15" fill="rgb(241,219,52)" fg:x="734" fg:w="7"/><text x="58.8294%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="58.8188%" y="309" width="0.3192%" height="15" fill="rgb(252,198,21)" fg:x="737" fg:w="4"/><text x="59.0688%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="58.8188%" y="293" width="0.3192%" height="15" fill="rgb(244,196,23)" fg:x="737" fg:w="4"/><text x="59.0688%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="58.8188%" y="277" width="0.3192%" height="15" fill="rgb(239,121,44)" fg:x="737" fg:w="4"/><text x="59.0688%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="58.9785%" y="261" width="0.1596%" height="15" fill="rgb(249,203,23)" fg:x="739" fg:w="2"/><text x="59.2285%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="58.9785%" y="245" width="0.1596%" height="15" fill="rgb(238,219,10)" fg:x="739" fg:w="2"/><text x="59.2285%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.9785%" y="229" width="0.1596%" height="15" fill="rgb(241,35,46)" fg:x="739" fg:w="2"/><text x="59.2285%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.9785%" y="213" width="0.1596%" height="15" fill="rgb(218,28,6)" fg:x="739" fg:w="2"/><text x="59.2285%" y="223.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="59.0583%" y="197" width="0.0798%" height="15" fill="rgb(233,151,50)" fg:x="740" fg:w="1"/><text x="59.3083%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="59.2977%" y="213" width="0.0798%" height="15" fill="rgb(208,57,8)" fg:x="743" fg:w="1"/><text x="59.5477%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.2977%" y="197" width="0.0798%" height="15" fill="rgb(253,99,10)" fg:x="743" fg:w="1"/><text x="59.5477%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="59.2179%" y="309" width="0.2394%" height="15" fill="rgb(237,196,49)" fg:x="742" fg:w="3"/><text x="59.4679%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="59.2179%" y="293" width="0.2394%" height="15" fill="rgb(209,51,3)" fg:x="742" fg:w="3"/><text x="59.4679%" y="303.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="59.2179%" y="277" width="0.2394%" height="15" fill="rgb(238,129,10)" fg:x="742" fg:w="3"/><text x="59.4679%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="59.2179%" y="261" width="0.2394%" height="15" fill="rgb(246,201,16)" fg:x="742" fg:w="3"/><text x="59.4679%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="59.2977%" y="245" width="0.1596%" height="15" fill="rgb(250,160,20)" fg:x="743" fg:w="2"/><text x="59.5477%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="59.2977%" y="229" width="0.1596%" height="15" fill="rgb(251,107,25)" fg:x="743" fg:w="2"/><text x="59.5477%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.3775%" y="213" width="0.0798%" height="15" fill="rgb(212,103,39)" fg:x="744" fg:w="1"/><text x="59.6275%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.3775%" y="197" width="0.0798%" height="15" fill="rgb(207,9,29)" fg:x="744" fg:w="1"/><text x="59.6275%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.4573%" y="309" width="0.0798%" height="15" fill="rgb(227,84,3)" fg:x="745" fg:w="1"/><text x="59.7073%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.5371%" y="277" width="0.0798%" height="15" fill="rgb(242,194,7)" fg:x="746" fg:w="1"/><text x="59.7871%" y="287.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="59.6169%" y="261" width="0.0798%" height="15" fill="rgb(230,40,4)" fg:x="747" fg:w="1"/><text x="59.8669%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="59.6169%" y="245" width="0.0798%" height="15" fill="rgb(243,229,33)" fg:x="747" fg:w="1"/><text x="59.8669%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.6169%" y="229" width="0.0798%" height="15" fill="rgb(240,65,24)" fg:x="747" fg:w="1"/><text x="59.8669%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.6169%" y="213" width="0.0798%" height="15" fill="rgb(212,28,20)" fg:x="747" fg:w="1"/><text x="59.8669%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.6169%" y="197" width="0.0798%" height="15" fill="rgb(209,72,3)" fg:x="747" fg:w="1"/><text x="59.8669%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="59.2179%" y="357" width="0.5587%" height="15" fill="rgb(238,170,36)" fg:x="742" fg:w="7"/><text x="59.4679%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="59.2179%" y="341" width="0.5587%" height="15" fill="rgb(236,19,38)" fg:x="742" fg:w="7"/><text x="59.4679%" y="351.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="59.2179%" y="325" width="0.5587%" height="15" fill="rgb(230,67,43)" fg:x="742" fg:w="7"/><text x="59.4679%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="59.5371%" y="309" width="0.2394%" height="15" fill="rgb(227,14,36)" fg:x="746" fg:w="3"/><text x="59.7871%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="59.5371%" y="293" width="0.2394%" height="15" fill="rgb(247,171,49)" fg:x="746" fg:w="3"/><text x="59.7871%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="59.6169%" y="277" width="0.1596%" height="15" fill="rgb(235,164,51)" fg:x="747" fg:w="2"/><text x="59.8669%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.6967%" y="261" width="0.0798%" height="15" fill="rgb(246,107,20)" fg:x="748" fg:w="1"/><text x="59.9467%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.6967%" y="245" width="0.0798%" height="15" fill="rgb(226,88,18)" fg:x="748" fg:w="1"/><text x="59.9467%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.6967%" y="229" width="0.0798%" height="15" fill="rgb(235,136,9)" fg:x="748" fg:w="1"/><text x="59.9467%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.6967%" y="213" width="0.0798%" height="15" fill="rgb(209,3,34)" fg:x="748" fg:w="1"/><text x="59.9467%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (18 samples, 1.44%)</title><rect x="58.4996%" y="405" width="1.4366%" height="15" fill="rgb(213,38,19)" fg:x="733" fg:w="18"/><text x="58.7496%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.80%)</title><rect x="59.1381%" y="389" width="0.7981%" height="15" fill="rgb(254,24,24)" fg:x="741" fg:w="10"/><text x="59.3881%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="59.1381%" y="373" width="0.7981%" height="15" fill="rgb(219,122,42)" fg:x="741" fg:w="10"/><text x="59.3881%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="59.7765%" y="357" width="0.1596%" height="15" fill="rgb(205,128,31)" fg:x="749" fg:w="2"/><text x="60.0265%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.7765%" y="341" width="0.1596%" height="15" fill="rgb(212,142,0)" fg:x="749" fg:w="2"/><text x="60.0265%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.8563%" y="325" width="0.0798%" height="15" fill="rgb(211,25,35)" fg:x="750" fg:w="1"/><text x="60.1063%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.9362%" y="261" width="0.0798%" height="15" fill="rgb(220,150,53)" fg:x="751" fg:w="1"/><text x="60.1862%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (27 samples, 2.15%)</title><rect x="57.9409%" y="437" width="2.1548%" height="15" fill="rgb(220,30,24)" fg:x="726" fg:w="27"/><text x="58.1909%" y="447.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (26 samples, 2.08%)</title><rect x="58.0208%" y="421" width="2.0750%" height="15" fill="rgb(218,86,23)" fg:x="727" fg:w="26"/><text x="58.2708%" y="431.50">e..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="59.9362%" y="405" width="0.1596%" height="15" fill="rgb(206,62,27)" fg:x="751" fg:w="2"/><text x="60.1862%" y="415.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="59.9362%" y="389" width="0.1596%" height="15" fill="rgb(249,174,0)" fg:x="751" fg:w="2"/><text x="60.1862%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="59.9362%" y="373" width="0.1596%" height="15" fill="rgb(246,67,27)" fg:x="751" fg:w="2"/><text x="60.1862%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="59.9362%" y="357" width="0.1596%" height="15" fill="rgb(250,195,30)" fg:x="751" fg:w="2"/><text x="60.1862%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.9362%" y="341" width="0.1596%" height="15" fill="rgb(251,171,50)" fg:x="751" fg:w="2"/><text x="60.1862%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="59.9362%" y="325" width="0.1596%" height="15" fill="rgb(236,196,10)" fg:x="751" fg:w="2"/><text x="60.1862%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.9362%" y="309" width="0.1596%" height="15" fill="rgb(249,228,52)" fg:x="751" fg:w="2"/><text x="60.1862%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="59.9362%" y="293" width="0.1596%" height="15" fill="rgb(219,60,51)" fg:x="751" fg:w="2"/><text x="60.1862%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.9362%" y="277" width="0.1596%" height="15" fill="rgb(240,198,24)" fg:x="751" fg:w="2"/><text x="60.1862%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.0160%" y="261" width="0.0798%" height="15" fill="rgb(240,192,40)" fg:x="752" fg:w="1"/><text x="60.2660%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.0160%" y="245" width="0.0798%" height="15" fill="rgb(219,118,5)" fg:x="752" fg:w="1"/><text x="60.2660%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.0160%" y="229" width="0.0798%" height="15" fill="rgb(205,202,34)" fg:x="752" fg:w="1"/><text x="60.2660%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (28 samples, 2.23%)</title><rect x="57.9409%" y="453" width="2.2346%" height="15" fill="rgb(234,153,26)" fg:x="726" fg:w="28"/><text x="58.1909%" y="463.50">&lt;..</text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="60.0958%" y="437" width="0.0798%" height="15" fill="rgb(229,26,29)" fg:x="753" fg:w="1"/><text x="60.3458%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.0958%" y="421" width="0.0798%" height="15" fill="rgb(237,115,21)" fg:x="753" fg:w="1"/><text x="60.3458%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.0958%" y="405" width="0.0798%" height="15" fill="rgb(252,144,15)" fg:x="753" fg:w="1"/><text x="60.3458%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.0958%" y="389" width="0.0798%" height="15" fill="rgb(232,26,13)" fg:x="753" fg:w="1"/><text x="60.3458%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.0958%" y="373" width="0.0798%" height="15" fill="rgb(206,44,19)" fg:x="753" fg:w="1"/><text x="60.3458%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.0958%" y="357" width="0.0798%" height="15" fill="rgb(249,159,2)" fg:x="753" fg:w="1"/><text x="60.3458%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.0958%" y="341" width="0.0798%" height="15" fill="rgb(231,5,32)" fg:x="753" fg:w="1"/><text x="60.3458%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.0958%" y="325" width="0.0798%" height="15" fill="rgb(249,210,18)" fg:x="753" fg:w="1"/><text x="60.3458%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.0958%" y="309" width="0.0798%" height="15" fill="rgb(215,223,36)" fg:x="753" fg:w="1"/><text x="60.3458%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.0958%" y="293" width="0.0798%" height="15" fill="rgb(245,185,20)" fg:x="753" fg:w="1"/><text x="60.3458%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.0958%" y="277" width="0.0798%" height="15" fill="rgb(206,224,11)" fg:x="753" fg:w="1"/><text x="60.3458%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.0958%" y="261" width="0.0798%" height="15" fill="rgb(248,73,42)" fg:x="753" fg:w="1"/><text x="60.3458%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.0958%" y="245" width="0.0798%" height="15" fill="rgb(219,149,31)" fg:x="753" fg:w="1"/><text x="60.3458%" y="255.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.1756%" y="453" width="0.0798%" height="15" fill="rgb(243,104,17)" fg:x="754" fg:w="1"/><text x="60.4256%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.1756%" y="437" width="0.0798%" height="15" fill="rgb(244,117,33)" fg:x="754" fg:w="1"/><text x="60.4256%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.1756%" y="421" width="0.0798%" height="15" fill="rgb(251,25,47)" fg:x="754" fg:w="1"/><text x="60.4256%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.1756%" y="405" width="0.0798%" height="15" fill="rgb(249,70,13)" fg:x="754" fg:w="1"/><text x="60.4256%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="60.2554%" y="453" width="0.0798%" height="15" fill="rgb(217,133,18)" fg:x="755" fg:w="1"/><text x="60.5054%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.4948%" y="389" width="0.0798%" height="15" fill="rgb(248,97,28)" fg:x="758" fg:w="1"/><text x="60.7448%" y="399.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (42 samples, 3.35%)</title><rect x="57.3025%" y="517" width="3.3520%" height="15" fill="rgb(237,193,4)" fg:x="718" fg:w="42"/><text x="57.5525%" y="527.50">&lt;en..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (42 samples, 3.35%)</title><rect x="57.3025%" y="501" width="3.3520%" height="15" fill="rgb(247,198,45)" fg:x="718" fg:w="42"/><text x="57.5525%" y="511.50">&lt;pl..</text></g><g><title>kernel::model::entry::Entry::scope (37 samples, 2.95%)</title><rect x="57.7015%" y="485" width="2.9529%" height="15" fill="rgb(245,2,20)" fg:x="723" fg:w="37"/><text x="57.9515%" y="495.50">ker..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (37 samples, 2.95%)</title><rect x="57.7015%" y="469" width="2.9529%" height="15" fill="rgb(210,71,36)" fg:x="723" fg:w="37"/><text x="57.9515%" y="479.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="60.3352%" y="453" width="0.3192%" height="15" fill="rgb(238,114,30)" fg:x="756" fg:w="4"/><text x="60.5852%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="60.3352%" y="437" width="0.3192%" height="15" fill="rgb(241,200,2)" fg:x="756" fg:w="4"/><text x="60.5852%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="60.3352%" y="421" width="0.3192%" height="15" fill="rgb(232,106,18)" fg:x="756" fg:w="4"/><text x="60.5852%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="60.3352%" y="405" width="0.3192%" height="15" fill="rgb(211,141,18)" fg:x="756" fg:w="4"/><text x="60.5852%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.5746%" y="389" width="0.0798%" height="15" fill="rgb(224,9,9)" fg:x="759" fg:w="1"/><text x="60.8246%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.6544%" y="517" width="0.0798%" height="15" fill="rgb(249,137,46)" fg:x="760" fg:w="1"/><text x="60.9044%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.7342%" y="485" width="0.0798%" height="15" fill="rgb(236,44,45)" fg:x="761" fg:w="1"/><text x="60.9842%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (4 samples, 0.32%)</title><rect x="60.8939%" y="389" width="0.3192%" height="15" fill="rgb(205,68,40)" fg:x="763" fg:w="4"/><text x="61.1439%" y="399.50"></text></g><g><title>kernel::surround::Surroundings::unpack (4 samples, 0.32%)</title><rect x="60.8939%" y="373" width="0.3192%" height="15" fill="rgb(214,198,49)" fg:x="763" fg:w="4"/><text x="61.1439%" y="383.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="60.8939%" y="357" width="0.3192%" height="15" fill="rgb(226,140,45)" fg:x="763" fg:w="4"/><text x="61.1439%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="60.9737%" y="341" width="0.2394%" height="15" fill="rgb(209,109,20)" fg:x="764" fg:w="3"/><text x="61.2237%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="60.9737%" y="325" width="0.2394%" height="15" fill="rgb(217,33,46)" fg:x="764" fg:w="3"/><text x="61.2237%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="60.9737%" y="309" width="0.2394%" height="15" fill="rgb(232,150,33)" fg:x="764" fg:w="3"/><text x="61.2237%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="60.9737%" y="293" width="0.2394%" height="15" fill="rgb(233,76,25)" fg:x="764" fg:w="3"/><text x="61.2237%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="60.9737%" y="277" width="0.2394%" height="15" fill="rgb(254,219,23)" fg:x="764" fg:w="3"/><text x="61.2237%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="60.9737%" y="261" width="0.2394%" height="15" fill="rgb(233,108,4)" fg:x="764" fg:w="3"/><text x="61.2237%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="60.9737%" y="245" width="0.2394%" height="15" fill="rgb(229,98,6)" fg:x="764" fg:w="3"/><text x="61.2237%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="60.9737%" y="229" width="0.2394%" height="15" fill="rgb(217,40,27)" fg:x="764" fg:w="3"/><text x="61.2237%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="60.9737%" y="213" width="0.2394%" height="15" fill="rgb(221,35,43)" fg:x="764" fg:w="3"/><text x="61.2237%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="60.9737%" y="197" width="0.2394%" height="15" fill="rgb(212,107,11)" fg:x="764" fg:w="3"/><text x="61.2237%" y="207.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="60.9737%" y="181" width="0.2394%" height="15" fill="rgb(245,42,44)" fg:x="764" fg:w="3"/><text x="61.2237%" y="191.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="61.0535%" y="165" width="0.1596%" height="15" fill="rgb(209,31,12)" fg:x="765" fg:w="2"/><text x="61.3035%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.2131%" y="389" width="0.0798%" height="15" fill="rgb(210,228,54)" fg:x="767" fg:w="1"/><text x="61.4631%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="61.2929%" y="389" width="0.0798%" height="15" fill="rgb(241,19,33)" fg:x="768" fg:w="1"/><text x="61.5429%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.2929%" y="373" width="0.0798%" height="15" fill="rgb(229,51,27)" fg:x="768" fg:w="1"/><text x="61.5429%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (53 samples, 4.23%)</title><rect x="57.2227%" y="581" width="4.2298%" height="15" fill="rgb(214,167,49)" fg:x="717" fg:w="53"/><text x="57.4727%" y="591.50">&lt;engi..</text></g><g><title>kernel::plugins::mw::apply_middleware (53 samples, 4.23%)</title><rect x="57.2227%" y="565" width="4.2298%" height="15" fill="rgb(248,140,47)" fg:x="717" fg:w="53"/><text x="57.4727%" y="575.50">kerne..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (52 samples, 4.15%)</title><rect x="57.3025%" y="549" width="4.1500%" height="15" fill="rgb(228,6,51)" fg:x="718" fg:w="52"/><text x="57.5525%" y="559.50">kerne..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (52 samples, 4.15%)</title><rect x="57.3025%" y="533" width="4.1500%" height="15" fill="rgb(242,44,53)" fg:x="718" fg:w="52"/><text x="57.5525%" y="543.50">&lt;engi..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (9 samples, 0.72%)</title><rect x="60.7342%" y="517" width="0.7183%" height="15" fill="rgb(249,90,50)" fg:x="761" fg:w="9"/><text x="60.9842%" y="527.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (9 samples, 0.72%)</title><rect x="60.7342%" y="501" width="0.7183%" height="15" fill="rgb(222,84,19)" fg:x="761" fg:w="9"/><text x="60.9842%" y="511.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (8 samples, 0.64%)</title><rect x="60.8140%" y="485" width="0.6385%" height="15" fill="rgb(214,140,12)" fg:x="762" fg:w="8"/><text x="61.0640%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (7 samples, 0.56%)</title><rect x="60.8939%" y="469" width="0.5587%" height="15" fill="rgb(210,20,43)" fg:x="763" fg:w="7"/><text x="61.1439%" y="479.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (7 samples, 0.56%)</title><rect x="60.8939%" y="453" width="0.5587%" height="15" fill="rgb(243,1,40)" fg:x="763" fg:w="7"/><text x="61.1439%" y="463.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (7 samples, 0.56%)</title><rect x="60.8939%" y="437" width="0.5587%" height="15" fill="rgb(224,102,26)" fg:x="763" fg:w="7"/><text x="61.1439%" y="447.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7 samples, 0.56%)</title><rect x="60.8939%" y="421" width="0.5587%" height="15" fill="rgb(221,179,1)" fg:x="763" fg:w="7"/><text x="61.1439%" y="431.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (7 samples, 0.56%)</title><rect x="60.8939%" y="405" width="0.5587%" height="15" fill="rgb(216,209,47)" fg:x="763" fg:w="7"/><text x="61.1439%" y="415.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="61.3727%" y="389" width="0.0798%" height="15" fill="rgb(251,135,9)" fg:x="769" fg:w="1"/><text x="61.6227%" y="399.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="61.4525%" y="549" width="0.0798%" height="15" fill="rgb(242,9,36)" fg:x="770" fg:w="1"/><text x="61.7025%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (2 samples, 0.16%)</title><rect x="61.9314%" y="485" width="0.1596%" height="15" fill="rgb(249,60,37)" fg:x="776" fg:w="2"/><text x="62.1814%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.0112%" y="469" width="0.0798%" height="15" fill="rgb(230,66,45)" fg:x="777" fg:w="1"/><text x="62.2612%" y="479.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="62.0910%" y="485" width="0.1596%" height="15" fill="rgb(216,1,47)" fg:x="778" fg:w="2"/><text x="62.3410%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="62.0910%" y="469" width="0.1596%" height="15" fill="rgb(235,8,23)" fg:x="778" fg:w="2"/><text x="62.3410%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.2506%" y="453" width="0.1596%" height="15" fill="rgb(225,136,11)" fg:x="780" fg:w="2"/><text x="62.5006%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.2506%" y="437" width="0.1596%" height="15" fill="rgb(228,63,44)" fg:x="780" fg:w="2"/><text x="62.5006%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.2506%" y="421" width="0.1596%" height="15" fill="rgb(240,43,52)" fg:x="780" fg:w="2"/><text x="62.5006%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.3304%" y="405" width="0.0798%" height="15" fill="rgb(217,167,36)" fg:x="781" fg:w="1"/><text x="62.5804%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.3304%" y="389" width="0.0798%" height="15" fill="rgb(250,19,6)" fg:x="781" fg:w="1"/><text x="62.5804%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.3304%" y="373" width="0.0798%" height="15" fill="rgb(236,60,51)" fg:x="781" fg:w="1"/><text x="62.5804%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.3304%" y="357" width="0.0798%" height="15" fill="rgb(222,217,20)" fg:x="781" fg:w="1"/><text x="62.5804%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.3304%" y="341" width="0.0798%" height="15" fill="rgb(242,65,52)" fg:x="781" fg:w="1"/><text x="62.5804%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.3304%" y="325" width="0.0798%" height="15" fill="rgb(217,5,41)" fg:x="781" fg:w="1"/><text x="62.5804%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.3304%" y="309" width="0.0798%" height="15" fill="rgb(223,208,53)" fg:x="781" fg:w="1"/><text x="62.5804%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.3304%" y="293" width="0.0798%" height="15" fill="rgb(221,104,30)" fg:x="781" fg:w="1"/><text x="62.5804%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.3304%" y="277" width="0.0798%" height="15" fill="rgb(230,210,42)" fg:x="781" fg:w="1"/><text x="62.5804%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.3304%" y="261" width="0.0798%" height="15" fill="rgb(206,205,27)" fg:x="781" fg:w="1"/><text x="62.5804%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.3304%" y="245" width="0.0798%" height="15" fill="rgb(233,114,38)" fg:x="781" fg:w="1"/><text x="62.5804%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.3304%" y="229" width="0.0798%" height="15" fill="rgb(216,174,36)" fg:x="781" fg:w="1"/><text x="62.5804%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.3304%" y="213" width="0.0798%" height="15" fill="rgb(211,30,9)" fg:x="781" fg:w="1"/><text x="62.5804%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="61.9314%" y="501" width="0.5587%" height="15" fill="rgb(216,8,21)" fg:x="776" fg:w="7"/><text x="62.1814%" y="511.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="62.2506%" y="485" width="0.2394%" height="15" fill="rgb(237,209,39)" fg:x="780" fg:w="3"/><text x="62.5006%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="62.2506%" y="469" width="0.2394%" height="15" fill="rgb(235,111,47)" fg:x="780" fg:w="3"/><text x="62.5006%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.4102%" y="453" width="0.0798%" height="15" fill="rgb(216,139,9)" fg:x="782" fg:w="1"/><text x="62.6602%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.4102%" y="437" width="0.0798%" height="15" fill="rgb(248,185,4)" fg:x="782" fg:w="1"/><text x="62.6602%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.4102%" y="421" width="0.0798%" height="15" fill="rgb(239,185,25)" fg:x="782" fg:w="1"/><text x="62.6602%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.4102%" y="405" width="0.0798%" height="15" fill="rgb(233,207,8)" fg:x="782" fg:w="1"/><text x="62.6602%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="62.4102%" y="389" width="0.0798%" height="15" fill="rgb(249,220,24)" fg:x="782" fg:w="1"/><text x="62.6602%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.4102%" y="373" width="0.0798%" height="15" fill="rgb(221,50,14)" fg:x="782" fg:w="1"/><text x="62.6602%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.4102%" y="357" width="0.0798%" height="15" fill="rgb(227,79,42)" fg:x="782" fg:w="1"/><text x="62.6602%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.4102%" y="341" width="0.0798%" height="15" fill="rgb(228,218,49)" fg:x="782" fg:w="1"/><text x="62.6602%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.4102%" y="325" width="0.0798%" height="15" fill="rgb(249,18,15)" fg:x="782" fg:w="1"/><text x="62.6602%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.4102%" y="309" width="0.0798%" height="15" fill="rgb(212,84,27)" fg:x="782" fg:w="1"/><text x="62.6602%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.4102%" y="293" width="0.0798%" height="15" fill="rgb(207,83,24)" fg:x="782" fg:w="1"/><text x="62.6602%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.4102%" y="277" width="0.0798%" height="15" fill="rgb(219,61,7)" fg:x="782" fg:w="1"/><text x="62.6602%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="62.4900%" y="357" width="0.1596%" height="15" fill="rgb(211,43,29)" fg:x="783" fg:w="2"/><text x="62.7400%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (12 samples, 0.96%)</title><rect x="61.7717%" y="533" width="0.9577%" height="15" fill="rgb(243,15,23)" fg:x="774" fg:w="12"/><text x="62.0217%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (12 samples, 0.96%)</title><rect x="61.7717%" y="517" width="0.9577%" height="15" fill="rgb(217,52,28)" fg:x="774" fg:w="12"/><text x="62.0217%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="62.4900%" y="501" width="0.2394%" height="15" fill="rgb(210,35,6)" fg:x="783" fg:w="3"/><text x="62.7400%" y="511.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="62.4900%" y="485" width="0.2394%" height="15" fill="rgb(237,187,28)" fg:x="783" fg:w="3"/><text x="62.7400%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="62.4900%" y="469" width="0.2394%" height="15" fill="rgb(231,136,24)" fg:x="783" fg:w="3"/><text x="62.7400%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="62.4900%" y="453" width="0.2394%" height="15" fill="rgb(205,176,52)" fg:x="783" fg:w="3"/><text x="62.7400%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.4900%" y="437" width="0.2394%" height="15" fill="rgb(218,65,12)" fg:x="783" fg:w="3"/><text x="62.7400%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="62.4900%" y="421" width="0.2394%" height="15" fill="rgb(234,101,21)" fg:x="783" fg:w="3"/><text x="62.7400%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.4900%" y="405" width="0.2394%" height="15" fill="rgb(206,13,20)" fg:x="783" fg:w="3"/><text x="62.7400%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="62.4900%" y="389" width="0.2394%" height="15" fill="rgb(236,89,44)" fg:x="783" fg:w="3"/><text x="62.7400%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.4900%" y="373" width="0.2394%" height="15" fill="rgb(225,52,17)" fg:x="783" fg:w="3"/><text x="62.7400%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.6496%" y="357" width="0.0798%" height="15" fill="rgb(214,27,25)" fg:x="785" fg:w="1"/><text x="62.8996%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.6496%" y="341" width="0.0798%" height="15" fill="rgb(240,141,35)" fg:x="785" fg:w="1"/><text x="62.8996%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="62.6496%" y="325" width="0.0798%" height="15" fill="rgb(216,126,3)" fg:x="785" fg:w="1"/><text x="62.8996%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.6496%" y="309" width="0.0798%" height="15" fill="rgb(249,196,23)" fg:x="785" fg:w="1"/><text x="62.8996%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="62.8093%" y="469" width="0.3192%" height="15" fill="rgb(215,185,43)" fg:x="787" fg:w="4"/><text x="63.0593%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (3 samples, 0.24%)</title><rect x="62.8891%" y="453" width="0.2394%" height="15" fill="rgb(208,194,36)" fg:x="788" fg:w="3"/><text x="63.1391%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.1285%" y="469" width="0.0798%" height="15" fill="rgb(245,182,12)" fg:x="791" fg:w="1"/><text x="63.3785%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="63.2881%" y="453" width="0.0798%" height="15" fill="rgb(244,222,52)" fg:x="793" fg:w="1"/><text x="63.5381%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.4477%" y="437" width="0.0798%" height="15" fill="rgb(236,222,51)" fg:x="795" fg:w="1"/><text x="63.6977%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.4477%" y="421" width="0.0798%" height="15" fill="rgb(254,71,22)" fg:x="795" fg:w="1"/><text x="63.6977%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.5275%" y="437" width="0.0798%" height="15" fill="rgb(250,104,15)" fg:x="796" fg:w="1"/><text x="63.7775%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.6872%" y="405" width="0.0798%" height="15" fill="rgb(229,223,46)" fg:x="798" fg:w="1"/><text x="63.9372%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.6872%" y="389" width="0.0798%" height="15" fill="rgb(209,129,18)" fg:x="798" fg:w="1"/><text x="63.9372%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.1660%" y="341" width="0.0798%" height="15" fill="rgb(224,160,1)" fg:x="804" fg:w="1"/><text x="64.4160%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.2458%" y="309" width="0.0798%" height="15" fill="rgb(237,112,21)" fg:x="805" fg:w="1"/><text x="64.4958%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.2458%" y="293" width="0.0798%" height="15" fill="rgb(215,198,53)" fg:x="805" fg:w="1"/><text x="64.4958%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.3256%" y="309" width="0.0798%" height="15" fill="rgb(218,227,35)" fg:x="806" fg:w="1"/><text x="64.5756%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.3256%" y="293" width="0.0798%" height="15" fill="rgb(232,121,22)" fg:x="806" fg:w="1"/><text x="64.5756%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.3256%" y="277" width="0.0798%" height="15" fill="rgb(235,52,54)" fg:x="806" fg:w="1"/><text x="64.5756%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="63.8468%" y="389" width="0.6385%" height="15" fill="rgb(219,21,44)" fg:x="800" fg:w="8"/><text x="64.0968%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="64.0862%" y="373" width="0.3990%" height="15" fill="rgb(221,51,43)" fg:x="803" fg:w="5"/><text x="64.3362%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="64.1660%" y="357" width="0.3192%" height="15" fill="rgb(225,77,42)" fg:x="804" fg:w="4"/><text x="64.4160%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="64.2458%" y="341" width="0.2394%" height="15" fill="rgb(214,117,53)" fg:x="805" fg:w="3"/><text x="64.4958%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="64.2458%" y="325" width="0.2394%" height="15" fill="rgb(218,227,27)" fg:x="805" fg:w="3"/><text x="64.4958%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="64.4054%" y="309" width="0.0798%" height="15" fill="rgb(223,214,36)" fg:x="807" fg:w="1"/><text x="64.6554%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="64.4852%" y="389" width="0.0798%" height="15" fill="rgb(235,21,7)" fg:x="808" fg:w="1"/><text x="64.7352%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.5650%" y="357" width="0.0798%" height="15" fill="rgb(244,216,4)" fg:x="809" fg:w="1"/><text x="64.8150%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.5650%" y="341" width="0.0798%" height="15" fill="rgb(249,197,24)" fg:x="809" fg:w="1"/><text x="64.8150%" y="351.50"></text></g><g><title>serde_json::de::from_trait (25 samples, 2.00%)</title><rect x="62.7294%" y="517" width="1.9952%" height="15" fill="rgb(222,169,49)" fg:x="786" fg:w="25"/><text x="62.9794%" y="527.50">s..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (24 samples, 1.92%)</title><rect x="62.8093%" y="501" width="1.9154%" height="15" fill="rgb(207,137,33)" fg:x="787" fg:w="24"/><text x="63.0593%" y="511.50">s..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (24 samples, 1.92%)</title><rect x="62.8093%" y="485" width="1.9154%" height="15" fill="rgb(219,180,40)" fg:x="787" fg:w="24"/><text x="63.0593%" y="495.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (19 samples, 1.52%)</title><rect x="63.2083%" y="469" width="1.5164%" height="15" fill="rgb(250,163,42)" fg:x="792" fg:w="19"/><text x="63.4583%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 1.36%)</title><rect x="63.3679%" y="453" width="1.3567%" height="15" fill="rgb(239,163,0)" fg:x="794" fg:w="17"/><text x="63.6179%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14 samples, 1.12%)</title><rect x="63.6073%" y="437" width="1.1173%" height="15" fill="rgb(252,38,28)" fg:x="797" fg:w="14"/><text x="63.8573%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.04%)</title><rect x="63.6872%" y="421" width="1.0375%" height="15" fill="rgb(254,203,26)" fg:x="798" fg:w="13"/><text x="63.9372%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12 samples, 0.96%)</title><rect x="63.7670%" y="405" width="0.9577%" height="15" fill="rgb(209,129,32)" fg:x="799" fg:w="12"/><text x="64.0170%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="64.5650%" y="389" width="0.1596%" height="15" fill="rgb(207,177,52)" fg:x="809" fg:w="2"/><text x="64.8150%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.5650%" y="373" width="0.1596%" height="15" fill="rgb(230,209,36)" fg:x="809" fg:w="2"/><text x="64.8150%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="64.6449%" y="357" width="0.0798%" height="15" fill="rgb(238,131,0)" fg:x="810" fg:w="1"/><text x="64.8949%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="64.6449%" y="341" width="0.0798%" height="15" fill="rgb(218,61,31)" fg:x="810" fg:w="1"/><text x="64.8949%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="64.8843%" y="485" width="0.0798%" height="15" fill="rgb(232,6,53)" fg:x="813" fg:w="1"/><text x="65.1343%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.9641%" y="485" width="0.0798%" height="15" fill="rgb(254,100,32)" fg:x="814" fg:w="1"/><text x="65.2141%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.0439%" y="453" width="0.0798%" height="15" fill="rgb(229,194,49)" fg:x="815" fg:w="1"/><text x="65.2939%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="65.1237%" y="341" width="0.1596%" height="15" fill="rgb(206,208,39)" fg:x="816" fg:w="2"/><text x="65.3737%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.1237%" y="325" width="0.1596%" height="15" fill="rgb(246,226,14)" fg:x="816" fg:w="2"/><text x="65.3737%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="65.1237%" y="373" width="0.3192%" height="15" fill="rgb(226,48,32)" fg:x="816" fg:w="4"/><text x="65.3737%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="65.1237%" y="357" width="0.3192%" height="15" fill="rgb(252,43,54)" fg:x="816" fg:w="4"/><text x="65.3737%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="65.2833%" y="341" width="0.1596%" height="15" fill="rgb(207,124,0)" fg:x="818" fg:w="2"/><text x="65.5333%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="65.2833%" y="325" width="0.1596%" height="15" fill="rgb(248,188,30)" fg:x="818" fg:w="2"/><text x="65.5333%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.2833%" y="309" width="0.1596%" height="15" fill="rgb(232,14,43)" fg:x="818" fg:w="2"/><text x="65.5333%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="65.1237%" y="405" width="0.3990%" height="15" fill="rgb(218,52,29)" fg:x="816" fg:w="5"/><text x="65.3737%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="65.1237%" y="389" width="0.3990%" height="15" fill="rgb(218,176,50)" fg:x="816" fg:w="5"/><text x="65.3737%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="65.4429%" y="373" width="0.0798%" height="15" fill="rgb(213,112,0)" fg:x="820" fg:w="1"/><text x="65.6929%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="65.5227%" y="389" width="0.1596%" height="15" fill="rgb(244,216,8)" fg:x="821" fg:w="2"/><text x="65.7727%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="65.5227%" y="373" width="0.1596%" height="15" fill="rgb(224,148,53)" fg:x="821" fg:w="2"/><text x="65.7727%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.6026%" y="357" width="0.0798%" height="15" fill="rgb(241,133,40)" fg:x="822" fg:w="1"/><text x="65.8526%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="65.6026%" y="341" width="0.0798%" height="15" fill="rgb(232,17,44)" fg:x="822" fg:w="1"/><text x="65.8526%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="65.1237%" y="437" width="0.6385%" height="15" fill="rgb(213,32,25)" fg:x="816" fg:w="8"/><text x="65.3737%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="65.1237%" y="421" width="0.6385%" height="15" fill="rgb(249,115,27)" fg:x="816" fg:w="8"/><text x="65.3737%" y="431.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="65.5227%" y="405" width="0.2394%" height="15" fill="rgb(241,50,1)" fg:x="821" fg:w="3"/><text x="65.7727%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="65.6824%" y="389" width="0.0798%" height="15" fill="rgb(244,175,40)" fg:x="823" fg:w="1"/><text x="65.9324%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.6824%" y="373" width="0.0798%" height="15" fill="rgb(230,94,34)" fg:x="823" fg:w="1"/><text x="65.9324%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.7622%" y="389" width="0.0798%" height="15" fill="rgb(223,185,29)" fg:x="824" fg:w="1"/><text x="66.0122%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="65.9218%" y="357" width="0.1596%" height="15" fill="rgb(225,193,15)" fg:x="826" fg:w="2"/><text x="66.1718%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (5 samples, 0.40%)</title><rect x="65.7622%" y="437" width="0.3990%" height="15" fill="rgb(252,121,38)" fg:x="824" fg:w="5"/><text x="66.0122%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="65.7622%" y="421" width="0.3990%" height="15" fill="rgb(232,44,12)" fg:x="824" fg:w="5"/><text x="66.0122%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (5 samples, 0.40%)</title><rect x="65.7622%" y="405" width="0.3990%" height="15" fill="rgb(226,45,54)" fg:x="824" fg:w="5"/><text x="66.0122%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (4 samples, 0.32%)</title><rect x="65.8420%" y="389" width="0.3192%" height="15" fill="rgb(209,67,17)" fg:x="825" fg:w="4"/><text x="66.0920%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="65.9218%" y="373" width="0.2394%" height="15" fill="rgb(219,108,52)" fg:x="826" fg:w="3"/><text x="66.1718%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="66.0814%" y="357" width="0.0798%" height="15" fill="rgb(216,118,19)" fg:x="828" fg:w="1"/><text x="66.3314%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.0814%" y="341" width="0.0798%" height="15" fill="rgb(228,120,40)" fg:x="828" fg:w="1"/><text x="66.3314%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.2410%" y="405" width="0.0798%" height="15" fill="rgb(221,218,34)" fg:x="830" fg:w="1"/><text x="66.4910%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.2410%" y="389" width="0.0798%" height="15" fill="rgb(235,89,14)" fg:x="830" fg:w="1"/><text x="66.4910%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="66.3208%" y="389" width="0.1596%" height="15" fill="rgb(248,89,7)" fg:x="831" fg:w="2"/><text x="66.5708%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="66.3208%" y="373" width="0.1596%" height="15" fill="rgb(212,114,34)" fg:x="831" fg:w="2"/><text x="66.5708%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.4006%" y="357" width="0.0798%" height="15" fill="rgb(246,88,32)" fg:x="832" fg:w="1"/><text x="66.6506%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.7997%" y="357" width="0.0798%" height="15" fill="rgb(237,135,0)" fg:x="837" fg:w="1"/><text x="67.0497%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.7997%" y="341" width="0.0798%" height="15" fill="rgb(220,201,54)" fg:x="837" fg:w="1"/><text x="67.0497%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.7997%" y="325" width="0.0798%" height="15" fill="rgb(210,142,36)" fg:x="837" fg:w="1"/><text x="67.0497%" y="335.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="66.8795%" y="341" width="0.0798%" height="15" fill="rgb(247,189,26)" fg:x="838" fg:w="1"/><text x="67.1295%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="66.8795%" y="325" width="0.0798%" height="15" fill="rgb(223,89,24)" fg:x="838" fg:w="1"/><text x="67.1295%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (10 samples, 0.80%)</title><rect x="66.3208%" y="405" width="0.7981%" height="15" fill="rgb(205,90,19)" fg:x="831" fg:w="10"/><text x="66.5708%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="66.4804%" y="389" width="0.6385%" height="15" fill="rgb(234,57,40)" fg:x="833" fg:w="8"/><text x="66.7304%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="66.4804%" y="373" width="0.6385%" height="15" fill="rgb(213,109,10)" fg:x="833" fg:w="8"/><text x="66.7304%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="66.8795%" y="357" width="0.2394%" height="15" fill="rgb(214,189,23)" fg:x="838" fg:w="3"/><text x="67.1295%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.9593%" y="341" width="0.1596%" height="15" fill="rgb(234,200,10)" fg:x="839" fg:w="2"/><text x="67.2093%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="66.9593%" y="325" width="0.1596%" height="15" fill="rgb(221,148,16)" fg:x="839" fg:w="2"/><text x="67.2093%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="66.9593%" y="309" width="0.1596%" height="15" fill="rgb(230,115,10)" fg:x="839" fg:w="2"/><text x="67.2093%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.9593%" y="293" width="0.1596%" height="15" fill="rgb(220,106,42)" fg:x="839" fg:w="2"/><text x="67.2093%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="66.9593%" y="277" width="0.1596%" height="15" fill="rgb(225,105,39)" fg:x="839" fg:w="2"/><text x="67.2093%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="67.0391%" y="261" width="0.0798%" height="15" fill="rgb(211,161,38)" fg:x="840" fg:w="1"/><text x="67.2891%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.0391%" y="245" width="0.0798%" height="15" fill="rgb(213,23,19)" fg:x="840" fg:w="1"/><text x="67.2891%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.0391%" y="229" width="0.0798%" height="15" fill="rgb(240,2,33)" fg:x="840" fg:w="1"/><text x="67.2891%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.0391%" y="213" width="0.0798%" height="15" fill="rgb(221,29,45)" fg:x="840" fg:w="1"/><text x="67.2891%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.0391%" y="197" width="0.0798%" height="15" fill="rgb(242,10,19)" fg:x="840" fg:w="1"/><text x="67.2891%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.0391%" y="181" width="0.0798%" height="15" fill="rgb(250,84,37)" fg:x="840" fg:w="1"/><text x="67.2891%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (27 samples, 2.15%)</title><rect x="65.0439%" y="485" width="2.1548%" height="15" fill="rgb(214,136,7)" fg:x="815" fg:w="27"/><text x="65.2939%" y="495.50">s..</text></g><g><title>serde_json::value::de::visit_object (27 samples, 2.15%)</title><rect x="65.0439%" y="469" width="2.1548%" height="15" fill="rgb(231,189,12)" fg:x="815" fg:w="27"/><text x="65.2939%" y="479.50">s..</text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (26 samples, 2.08%)</title><rect x="65.1237%" y="453" width="2.0750%" height="15" fill="rgb(244,40,16)" fg:x="816" fg:w="26"/><text x="65.3737%" y="463.50">k..</text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.04%)</title><rect x="66.1612%" y="437" width="1.0375%" height="15" fill="rgb(217,29,15)" fg:x="829" fg:w="13"/><text x="66.4112%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="66.2410%" y="421" width="0.9577%" height="15" fill="rgb(235,172,33)" fg:x="830" fg:w="12"/><text x="66.4910%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.1189%" y="405" width="0.0798%" height="15" fill="rgb(206,148,28)" fg:x="841" fg:w="1"/><text x="67.3689%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.4381%" y="453" width="0.0798%" height="15" fill="rgb(251,167,37)" fg:x="845" fg:w="1"/><text x="67.6881%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (61 samples, 4.87%)</title><rect x="62.7294%" y="533" width="4.8683%" height="15" fill="rgb(229,94,52)" fg:x="786" fg:w="61"/><text x="62.9794%" y="543.50">&lt;kerne..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (36 samples, 2.87%)</title><rect x="64.7247%" y="517" width="2.8731%" height="15" fill="rgb(216,132,9)" fg:x="811" fg:w="36"/><text x="64.9747%" y="527.50">se..</text></g><g><title>serde_json::value::de::visit_object (36 samples, 2.87%)</title><rect x="64.7247%" y="501" width="2.8731%" height="15" fill="rgb(208,110,29)" fg:x="811" fg:w="36"/><text x="64.9747%" y="511.50">se..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="67.1987%" y="485" width="0.3990%" height="15" fill="rgb(241,23,8)" fg:x="842" fg:w="5"/><text x="67.4487%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="67.1987%" y="469" width="0.3990%" height="15" fill="rgb(208,26,35)" fg:x="842" fg:w="5"/><text x="67.4487%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="67.5180%" y="453" width="0.0798%" height="15" fill="rgb(242,165,34)" fg:x="846" fg:w="1"/><text x="67.7680%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.6776%" y="421" width="0.1596%" height="15" fill="rgb(222,222,33)" fg:x="848" fg:w="2"/><text x="67.9276%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="67.5978%" y="437" width="0.3192%" height="15" fill="rgb(227,16,52)" fg:x="847" fg:w="4"/><text x="67.8478%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.8372%" y="421" width="0.0798%" height="15" fill="rgb(213,93,12)" fg:x="850" fg:w="1"/><text x="68.0872%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.8372%" y="405" width="0.0798%" height="15" fill="rgb(238,41,5)" fg:x="850" fg:w="1"/><text x="68.0872%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.8372%" y="389" width="0.0798%" height="15" fill="rgb(211,60,15)" fg:x="850" fg:w="1"/><text x="68.0872%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.8372%" y="373" width="0.0798%" height="15" fill="rgb(209,11,34)" fg:x="850" fg:w="1"/><text x="68.0872%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.8372%" y="357" width="0.0798%" height="15" fill="rgb(254,155,53)" fg:x="850" fg:w="1"/><text x="68.0872%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.8372%" y="341" width="0.0798%" height="15" fill="rgb(236,174,8)" fg:x="850" fg:w="1"/><text x="68.0872%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.8372%" y="325" width="0.0798%" height="15" fill="rgb(229,31,27)" fg:x="850" fg:w="1"/><text x="68.0872%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.8372%" y="309" width="0.0798%" height="15" fill="rgb(242,226,26)" fg:x="850" fg:w="1"/><text x="68.0872%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.8372%" y="293" width="0.0798%" height="15" fill="rgb(234,32,40)" fg:x="850" fg:w="1"/><text x="68.0872%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.8372%" y="277" width="0.0798%" height="15" fill="rgb(249,226,47)" fg:x="850" fg:w="1"/><text x="68.0872%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.8372%" y="261" width="0.0798%" height="15" fill="rgb(212,6,26)" fg:x="850" fg:w="1"/><text x="68.0872%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.8372%" y="245" width="0.0798%" height="15" fill="rgb(249,202,29)" fg:x="850" fg:w="1"/><text x="68.0872%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="67.5978%" y="485" width="0.4789%" height="15" fill="rgb(226,106,4)" fg:x="847" fg:w="6"/><text x="67.8478%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="67.5978%" y="469" width="0.4789%" height="15" fill="rgb(251,2,27)" fg:x="847" fg:w="6"/><text x="67.8478%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="67.5978%" y="453" width="0.4789%" height="15" fill="rgb(236,208,0)" fg:x="847" fg:w="6"/><text x="67.8478%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="67.9170%" y="437" width="0.1596%" height="15" fill="rgb(211,66,17)" fg:x="851" fg:w="2"/><text x="68.1670%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="67.5978%" y="533" width="0.5587%" height="15" fill="rgb(216,129,9)" fg:x="847" fg:w="7"/><text x="67.8478%" y="543.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="67.5978%" y="517" width="0.5587%" height="15" fill="rgb(215,130,23)" fg:x="847" fg:w="7"/><text x="67.8478%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="67.5978%" y="501" width="0.5587%" height="15" fill="rgb(253,157,11)" fg:x="847" fg:w="7"/><text x="67.8478%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.0766%" y="485" width="0.0798%" height="15" fill="rgb(224,25,14)" fg:x="853" fg:w="1"/><text x="68.3266%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.0766%" y="469" width="0.0798%" height="15" fill="rgb(238,16,7)" fg:x="853" fg:w="1"/><text x="68.3266%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.0766%" y="453" width="0.0798%" height="15" fill="rgb(228,74,11)" fg:x="853" fg:w="1"/><text x="68.3266%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.0766%" y="437" width="0.0798%" height="15" fill="rgb(239,221,27)" fg:x="853" fg:w="1"/><text x="68.3266%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="68.0766%" y="421" width="0.0798%" height="15" fill="rgb(229,166,18)" fg:x="853" fg:w="1"/><text x="68.3266%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.0766%" y="405" width="0.0798%" height="15" fill="rgb(254,94,46)" fg:x="853" fg:w="1"/><text x="68.3266%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.0766%" y="389" width="0.0798%" height="15" fill="rgb(241,79,19)" fg:x="853" fg:w="1"/><text x="68.3266%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (86 samples, 6.86%)</title><rect x="61.4525%" y="565" width="6.8635%" height="15" fill="rgb(228,99,51)" fg:x="770" fg:w="86"/><text x="61.7025%" y="575.50">&lt;engine::..</text></g><g><title>engine::session::internal::Entities::add_persisted (85 samples, 6.78%)</title><rect x="61.5323%" y="549" width="6.7837%" height="15" fill="rgb(211,15,6)" fg:x="771" fg:w="85"/><text x="61.7823%" y="559.50">engine::s..</text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="68.1564%" y="533" width="0.1596%" height="15" fill="rgb(245,107,54)" fg:x="854" fg:w="2"/><text x="68.4064%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="68.1564%" y="517" width="0.1596%" height="15" fill="rgb(243,3,2)" fg:x="854" fg:w="2"/><text x="68.4064%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="68.2362%" y="501" width="0.0798%" height="15" fill="rgb(206,122,10)" fg:x="855" fg:w="1"/><text x="68.4862%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="68.2362%" y="485" width="0.0798%" height="15" fill="rgb(224,88,4)" fg:x="855" fg:w="1"/><text x="68.4862%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.3958%" y="405" width="0.0798%" height="15" fill="rgb(230,1,41)" fg:x="857" fg:w="1"/><text x="68.6458%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="68.5555%" y="373" width="0.1596%" height="15" fill="rgb(230,1,31)" fg:x="859" fg:w="2"/><text x="68.8055%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="68.6353%" y="357" width="0.0798%" height="15" fill="rgb(232,67,19)" fg:x="860" fg:w="1"/><text x="68.8853%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="68.6353%" y="341" width="0.0798%" height="15" fill="rgb(222,206,20)" fg:x="860" fg:w="1"/><text x="68.8853%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="68.6353%" y="325" width="0.0798%" height="15" fill="rgb(217,225,19)" fg:x="860" fg:w="1"/><text x="68.8853%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="68.6353%" y="309" width="0.0798%" height="15" fill="rgb(234,13,33)" fg:x="860" fg:w="1"/><text x="68.8853%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="68.6353%" y="293" width="0.0798%" height="15" fill="rgb(254,5,1)" fg:x="860" fg:w="1"/><text x="68.8853%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="68.6353%" y="277" width="0.0798%" height="15" fill="rgb(211,121,41)" fg:x="860" fg:w="1"/><text x="68.8853%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="68.6353%" y="261" width="0.0798%" height="15" fill="rgb(213,199,35)" fg:x="860" fg:w="1"/><text x="68.8853%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="68.6353%" y="245" width="0.0798%" height="15" fill="rgb(240,118,22)" fg:x="860" fg:w="1"/><text x="68.8853%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="68.6353%" y="229" width="0.0798%" height="15" fill="rgb(238,184,25)" fg:x="860" fg:w="1"/><text x="68.8853%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="68.6353%" y="213" width="0.0798%" height="15" fill="rgb(210,165,6)" fg:x="860" fg:w="1"/><text x="68.8853%" y="223.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.08%)</title><rect x="68.6353%" y="197" width="0.0798%" height="15" fill="rgb(235,149,5)" fg:x="860" fg:w="1"/><text x="68.8853%" y="207.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (93 samples, 7.42%)</title><rect x="61.4525%" y="581" width="7.4222%" height="15" fill="rgb(221,63,5)" fg:x="770" fg:w="93"/><text x="61.7025%" y="591.50">&lt;engine::s..</text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.56%)</title><rect x="68.3160%" y="565" width="0.5587%" height="15" fill="rgb(250,44,41)" fg:x="856" fg:w="7"/><text x="68.5660%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (6 samples, 0.48%)</title><rect x="68.3958%" y="549" width="0.4789%" height="15" fill="rgb(235,112,47)" fg:x="857" fg:w="6"/><text x="68.6458%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.48%)</title><rect x="68.3958%" y="533" width="0.4789%" height="15" fill="rgb(252,176,34)" fg:x="857" fg:w="6"/><text x="68.6458%" y="543.50"></text></g><g><title>core::fmt::write (6 samples, 0.48%)</title><rect x="68.3958%" y="517" width="0.4789%" height="15" fill="rgb(234,50,19)" fg:x="857" fg:w="6"/><text x="68.6458%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (6 samples, 0.48%)</title><rect x="68.3958%" y="501" width="0.4789%" height="15" fill="rgb(241,195,31)" fg:x="857" fg:w="6"/><text x="68.6458%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (6 samples, 0.48%)</title><rect x="68.3958%" y="485" width="0.4789%" height="15" fill="rgb(212,93,11)" fg:x="857" fg:w="6"/><text x="68.6458%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (6 samples, 0.48%)</title><rect x="68.3958%" y="469" width="0.4789%" height="15" fill="rgb(254,98,51)" fg:x="857" fg:w="6"/><text x="68.6458%" y="479.50"></text></g><g><title>core::fmt::write (6 samples, 0.48%)</title><rect x="68.3958%" y="453" width="0.4789%" height="15" fill="rgb(246,18,45)" fg:x="857" fg:w="6"/><text x="68.6458%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (6 samples, 0.48%)</title><rect x="68.3958%" y="437" width="0.4789%" height="15" fill="rgb(215,148,23)" fg:x="857" fg:w="6"/><text x="68.6458%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (6 samples, 0.48%)</title><rect x="68.3958%" y="421" width="0.4789%" height="15" fill="rgb(227,22,7)" fg:x="857" fg:w="6"/><text x="68.6458%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (5 samples, 0.40%)</title><rect x="68.4757%" y="405" width="0.3990%" height="15" fill="rgb(207,210,37)" fg:x="858" fg:w="5"/><text x="68.7257%" y="415.50"></text></g><g><title>core::fmt::write (5 samples, 0.40%)</title><rect x="68.4757%" y="389" width="0.3990%" height="15" fill="rgb(247,147,42)" fg:x="858" fg:w="5"/><text x="68.7257%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="68.7151%" y="373" width="0.1596%" height="15" fill="rgb(226,213,14)" fg:x="861" fg:w="2"/><text x="68.9651%" y="383.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="68.7151%" y="357" width="0.1596%" height="15" fill="rgb(223,18,10)" fg:x="861" fg:w="2"/><text x="68.9651%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="68.7151%" y="341" width="0.1596%" height="15" fill="rgb(253,34,22)" fg:x="861" fg:w="2"/><text x="68.9651%" y="351.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="68.7151%" y="325" width="0.1596%" height="15" fill="rgb(222,90,31)" fg:x="861" fg:w="2"/><text x="68.9651%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="68.7949%" y="309" width="0.0798%" height="15" fill="rgb(220,182,30)" fg:x="862" fg:w="1"/><text x="69.0449%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="68.7949%" y="293" width="0.0798%" height="15" fill="rgb(229,170,12)" fg:x="862" fg:w="1"/><text x="69.0449%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="68.7949%" y="277" width="0.0798%" height="15" fill="rgb(210,101,21)" fg:x="862" fg:w="1"/><text x="69.0449%" y="287.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="68.7949%" y="261" width="0.0798%" height="15" fill="rgb(237,177,31)" fg:x="862" fg:w="1"/><text x="69.0449%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="68.7949%" y="245" width="0.0798%" height="15" fill="rgb(215,91,34)" fg:x="862" fg:w="1"/><text x="69.0449%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="68.7949%" y="229" width="0.0798%" height="15" fill="rgb(229,206,16)" fg:x="862" fg:w="1"/><text x="69.0449%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="68.7949%" y="213" width="0.0798%" height="15" fill="rgb(235,207,10)" fg:x="862" fg:w="1"/><text x="69.0449%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="68.7949%" y="197" width="0.0798%" height="15" fill="rgb(247,18,10)" fg:x="862" fg:w="1"/><text x="69.0449%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="68.7949%" y="181" width="0.0798%" height="15" fill="rgb(232,4,6)" fg:x="862" fg:w="1"/><text x="69.0449%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="68.7949%" y="165" width="0.0798%" height="15" fill="rgb(247,93,45)" fg:x="862" fg:w="1"/><text x="69.0449%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="68.7949%" y="149" width="0.0798%" height="15" fill="rgb(240,181,18)" fg:x="862" fg:w="1"/><text x="69.0449%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="68.7949%" y="133" width="0.0798%" height="15" fill="rgb(208,224,0)" fg:x="862" fg:w="1"/><text x="69.0449%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="68.7949%" y="117" width="0.0798%" height="15" fill="rgb(224,207,54)" fg:x="862" fg:w="1"/><text x="69.0449%" y="127.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="68.7949%" y="101" width="0.0798%" height="15" fill="rgb(217,152,29)" fg:x="862" fg:w="1"/><text x="69.0449%" y="111.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="68.7949%" y="85" width="0.0798%" height="15" fill="rgb(243,78,27)" fg:x="862" fg:w="1"/><text x="69.0449%" y="95.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="68.7949%" y="69" width="0.0798%" height="15" fill="rgb(228,111,9)" fg:x="862" fg:w="1"/><text x="69.0449%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.8747%" y="549" width="0.0798%" height="15" fill="rgb(230,213,21)" fg:x="863" fg:w="1"/><text x="69.1247%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.8747%" y="533" width="0.0798%" height="15" fill="rgb(248,50,36)" fg:x="863" fg:w="1"/><text x="69.1247%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.8747%" y="517" width="0.0798%" height="15" fill="rgb(226,19,31)" fg:x="863" fg:w="1"/><text x="69.1247%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.8747%" y="501" width="0.0798%" height="15" fill="rgb(205,132,21)" fg:x="863" fg:w="1"/><text x="69.1247%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.8747%" y="485" width="0.0798%" height="15" fill="rgb(207,42,19)" fg:x="863" fg:w="1"/><text x="69.1247%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.8747%" y="469" width="0.0798%" height="15" fill="rgb(229,69,35)" fg:x="863" fg:w="1"/><text x="69.1247%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.8747%" y="453" width="0.0798%" height="15" fill="rgb(226,96,11)" fg:x="863" fg:w="1"/><text x="69.1247%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.8747%" y="437" width="0.0798%" height="15" fill="rgb(236,133,54)" fg:x="863" fg:w="1"/><text x="69.1247%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.8747%" y="421" width="0.0798%" height="15" fill="rgb(247,166,21)" fg:x="863" fg:w="1"/><text x="69.1247%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.8747%" y="405" width="0.0798%" height="15" fill="rgb(220,132,12)" fg:x="863" fg:w="1"/><text x="69.1247%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.8747%" y="389" width="0.0798%" height="15" fill="rgb(233,27,30)" fg:x="863" fg:w="1"/><text x="69.1247%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.8747%" y="373" width="0.0798%" height="15" fill="rgb(246,161,27)" fg:x="863" fg:w="1"/><text x="69.1247%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="68.9545%" y="549" width="0.0798%" height="15" fill="rgb(240,56,3)" fg:x="864" fg:w="1"/><text x="69.2045%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="69.1141%" y="517" width="0.0798%" height="15" fill="rgb(242,190,9)" fg:x="866" fg:w="1"/><text x="69.3641%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.1939%" y="517" width="0.0798%" height="15" fill="rgb(234,3,52)" fg:x="867" fg:w="1"/><text x="69.4439%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (7 samples, 0.56%)</title><rect x="68.8747%" y="581" width="0.5587%" height="15" fill="rgb(220,221,19)" fg:x="863" fg:w="7"/><text x="69.1247%" y="591.50"></text></g><g><title>engine::users::model::username_to_key (7 samples, 0.56%)</title><rect x="68.8747%" y="565" width="0.5587%" height="15" fill="rgb(247,178,30)" fg:x="863" fg:w="7"/><text x="69.1247%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="69.0343%" y="549" width="0.3990%" height="15" fill="rgb(234,212,27)" fg:x="865" fg:w="5"/><text x="69.2843%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="69.0343%" y="533" width="0.3990%" height="15" fill="rgb(226,199,38)" fg:x="865" fg:w="5"/><text x="69.2843%" y="543.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::de::Deserialize for engine::users::model::Usernames&gt;::deserialize (2 samples, 0.16%)</title><rect x="69.2737%" y="517" width="0.1596%" height="15" fill="rgb(248,114,22)" fg:x="868" fg:w="2"/><text x="69.5237%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.2737%" y="501" width="0.1596%" height="15" fill="rgb(221,180,4)" fg:x="868" fg:w="2"/><text x="69.5237%" y="511.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.3536%" y="485" width="0.0798%" height="15" fill="rgb(220,229,24)" fg:x="869" fg:w="1"/><text x="69.6036%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.3536%" y="469" width="0.0798%" height="15" fill="rgb(226,184,27)" fg:x="869" fg:w="1"/><text x="69.6036%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.3536%" y="453" width="0.0798%" height="15" fill="rgb(232,99,15)" fg:x="869" fg:w="1"/><text x="69.6036%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (871 samples, 69.51%)</title><rect x="0.0000%" y="661" width="69.5132%" height="15" fill="rgb(250,167,16)" fg:x="0" fg:w="871"/><text x="0.2500%" y="671.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (871 samples, 69.51%)</title><rect x="0.0000%" y="645" width="69.5132%" height="15" fill="rgb(243,113,6)" fg:x="0" fg:w="871"/><text x="0.2500%" y="655.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (871 samples, 69.51%)</title><rect x="0.0000%" y="629" width="69.5132%" height="15" fill="rgb(244,147,52)" fg:x="0" fg:w="871"/><text x="0.2500%" y="639.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (156 samples, 12.45%)</title><rect x="57.0630%" y="613" width="12.4501%" height="15" fill="rgb(235,59,50)" fg:x="715" fg:w="156"/><text x="57.3130%" y="623.50">engine::session::Se..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (156 samples, 12.45%)</title><rect x="57.0630%" y="597" width="12.4501%" height="15" fill="rgb(250,188,6)" fg:x="715" fg:w="156"/><text x="57.3130%" y="607.50">engine::session::Se..</text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="69.4334%" y="581" width="0.0798%" height="15" fill="rgb(236,173,11)" fg:x="870" fg:w="1"/><text x="69.6834%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="69.4334%" y="565" width="0.0798%" height="15" fill="rgb(233,64,3)" fg:x="870" fg:w="1"/><text x="69.6834%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.9122%" y="485" width="0.0798%" height="15" fill="rgb(207,92,7)" fg:x="876" fg:w="1"/><text x="70.1622%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.9122%" y="469" width="0.0798%" height="15" fill="rgb(221,30,19)" fg:x="876" fg:w="1"/><text x="70.1622%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.9920%" y="485" width="0.0798%" height="15" fill="rgb(245,22,49)" fg:x="877" fg:w="1"/><text x="70.2420%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.9920%" y="469" width="0.0798%" height="15" fill="rgb(218,39,20)" fg:x="877" fg:w="1"/><text x="70.2420%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.0718%" y="469" width="0.0798%" height="15" fill="rgb(222,144,21)" fg:x="878" fg:w="1"/><text x="70.3218%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.0718%" y="453" width="0.0798%" height="15" fill="rgb(222,78,51)" fg:x="878" fg:w="1"/><text x="70.3218%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.2314%" y="437" width="0.0798%" height="15" fill="rgb(248,213,53)" fg:x="880" fg:w="1"/><text x="70.4814%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.88%)</title><rect x="69.5930%" y="533" width="0.8779%" height="15" fill="rgb(245,28,34)" fg:x="872" fg:w="11"/><text x="69.8430%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="69.7526%" y="517" width="0.7183%" height="15" fill="rgb(229,186,26)" fg:x="874" fg:w="9"/><text x="70.0026%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="69.7526%" y="501" width="0.7183%" height="15" fill="rgb(224,0,41)" fg:x="874" fg:w="9"/><text x="70.0026%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="70.0718%" y="485" width="0.3990%" height="15" fill="rgb(223,136,51)" fg:x="878" fg:w="5"/><text x="70.3218%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="70.1516%" y="469" width="0.3192%" height="15" fill="rgb(234,50,9)" fg:x="879" fg:w="4"/><text x="70.4016%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="70.1516%" y="453" width="0.3192%" height="15" fill="rgb(242,164,20)" fg:x="879" fg:w="4"/><text x="70.4016%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="70.3113%" y="437" width="0.1596%" height="15" fill="rgb(230,169,22)" fg:x="881" fg:w="2"/><text x="70.5613%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.3911%" y="421" width="0.0798%" height="15" fill="rgb(228,82,26)" fg:x="882" fg:w="1"/><text x="70.6411%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.04%)</title><rect x="69.5132%" y="549" width="1.0375%" height="15" fill="rgb(244,220,31)" fg:x="871" fg:w="13"/><text x="69.7632%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.4709%" y="533" width="0.0798%" height="15" fill="rgb(214,35,25)" fg:x="883" fg:w="1"/><text x="70.7209%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.12%)</title><rect x="69.5132%" y="613" width="1.1173%" height="15" fill="rgb(245,162,54)" fg:x="871" fg:w="14"/><text x="69.7632%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (14 samples, 1.12%)</title><rect x="69.5132%" y="597" width="1.1173%" height="15" fill="rgb(210,43,24)" fg:x="871" fg:w="14"/><text x="69.7632%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.12%)</title><rect x="69.5132%" y="581" width="1.1173%" height="15" fill="rgb(226,145,51)" fg:x="871" fg:w="14"/><text x="69.7632%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (14 samples, 1.12%)</title><rect x="69.5132%" y="565" width="1.1173%" height="15" fill="rgb(237,52,53)" fg:x="871" fg:w="14"/><text x="69.7632%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.5507%" y="549" width="0.0798%" height="15" fill="rgb(216,226,7)" fg:x="884" fg:w="1"/><text x="70.8007%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorageFactory as engine::storage::StorageFactory&gt;::create_storage (1 samples, 0.08%)</title><rect x="70.6305%" y="581" width="0.0798%" height="15" fill="rgb(206,223,18)" fg:x="885" fg:w="1"/><text x="70.8805%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.6305%" y="565" width="0.0798%" height="15" fill="rgb(221,1,10)" fg:x="885" fg:w="1"/><text x="70.8805%" y="575.50"></text></g><g><title>&lt;kernel::session::SetSession as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.7103%" y="549" width="0.0798%" height="15" fill="rgb(221,151,42)" fg:x="886" fg:w="1"/><text x="70.9603%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="70.7901%" y="517" width="0.0798%" height="15" fill="rgb(205,183,46)" fg:x="887" fg:w="1"/><text x="71.0401%" y="527.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="70.7901%" y="501" width="0.0798%" height="15" fill="rgb(239,229,1)" fg:x="887" fg:w="1"/><text x="71.0401%" y="511.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_empty (1 samples, 0.08%)</title><rect x="70.7901%" y="485" width="0.0798%" height="15" fill="rgb(236,192,23)" fg:x="887" fg:w="1"/><text x="71.0401%" y="495.50"></text></g><g><title>dlerror (4 samples, 0.32%)</title><rect x="70.9497%" y="501" width="0.3192%" height="15" fill="rgb(215,146,3)" fg:x="889" fg:w="4"/><text x="71.1997%" y="511.50"></text></g><g><title>__asprintf (4 samples, 0.32%)</title><rect x="70.9497%" y="485" width="0.3192%" height="15" fill="rgb(235,52,27)" fg:x="889" fg:w="4"/><text x="71.1997%" y="495.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.08%)</title><rect x="71.1891%" y="469" width="0.0798%" height="15" fill="rgb(236,45,20)" fg:x="892" fg:w="1"/><text x="71.4391%" y="479.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (12 samples, 0.96%)</title><rect x="70.7901%" y="549" width="0.9577%" height="15" fill="rgb(235,86,41)" fg:x="887" fg:w="12"/><text x="71.0401%" y="559.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (12 samples, 0.96%)</title><rect x="70.7901%" y="533" width="0.9577%" height="15" fill="rgb(235,27,27)" fg:x="887" fg:w="12"/><text x="71.0401%" y="543.50"></text></g><g><title>libloading::safe::Library::new (11 samples, 0.88%)</title><rect x="70.8699%" y="517" width="0.8779%" height="15" fill="rgb(232,4,34)" fg:x="888" fg:w="11"/><text x="71.1199%" y="527.50"></text></g><g><title>dlopen (6 samples, 0.48%)</title><rect x="71.2690%" y="501" width="0.4789%" height="15" fill="rgb(215,22,10)" fg:x="893" fg:w="6"/><text x="71.5190%" y="511.50"></text></g><g><title>_dl_catch_error (5 samples, 0.40%)</title><rect x="71.3488%" y="485" width="0.3990%" height="15" fill="rgb(230,228,27)" fg:x="894" fg:w="5"/><text x="71.5988%" y="495.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.40%)</title><rect x="71.3488%" y="469" width="0.3990%" height="15" fill="rgb(216,26,51)" fg:x="894" fg:w="5"/><text x="71.5988%" y="479.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.40%)</title><rect x="71.3488%" y="453" width="0.3990%" height="15" fill="rgb(225,180,50)" fg:x="894" fg:w="5"/><text x="71.5988%" y="463.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.40%)</title><rect x="71.3488%" y="437" width="0.3990%" height="15" fill="rgb(236,211,2)" fg:x="894" fg:w="5"/><text x="71.5988%" y="447.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (16 samples, 1.28%)</title><rect x="70.6305%" y="613" width="1.2769%" height="15" fill="rgb(250,51,20)" fg:x="885" fg:w="16"/><text x="70.8805%" y="623.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (16 samples, 1.28%)</title><rect x="70.6305%" y="597" width="1.2769%" height="15" fill="rgb(232,70,37)" fg:x="885" fg:w="16"/><text x="70.8805%" y="607.50"></text></g><g><title>engine::session::Session::new (15 samples, 1.20%)</title><rect x="70.7103%" y="581" width="1.1971%" height="15" fill="rgb(226,183,39)" fg:x="886" fg:w="15"/><text x="70.9603%" y="591.50"></text></g><g><title>engine::session::Session::initialize (15 samples, 1.20%)</title><rect x="70.7103%" y="565" width="1.1971%" height="15" fill="rgb(232,228,21)" fg:x="886" fg:w="15"/><text x="70.9603%" y="575.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (2 samples, 0.16%)</title><rect x="71.7478%" y="549" width="0.1596%" height="15" fill="rgb(251,118,32)" fg:x="899" fg:w="2"/><text x="71.9978%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="71.7478%" y="533" width="0.1596%" height="15" fill="rgb(235,172,38)" fg:x="899" fg:w="2"/><text x="71.9978%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="71.7478%" y="517" width="0.1596%" height="15" fill="rgb(235,63,18)" fg:x="899" fg:w="2"/><text x="71.9978%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="71.7478%" y="501" width="0.1596%" height="15" fill="rgb(225,4,7)" fg:x="899" fg:w="2"/><text x="71.9978%" y="511.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="71.7478%" y="485" width="0.1596%" height="15" fill="rgb(231,61,1)" fg:x="899" fg:w="2"/><text x="71.9978%" y="495.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.9074%" y="597" width="0.0798%" height="15" fill="rgb(241,155,22)" fg:x="901" fg:w="1"/><text x="72.1574%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.9074%" y="581" width="0.0798%" height="15" fill="rgb(209,100,26)" fg:x="901" fg:w="1"/><text x="72.1574%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.9074%" y="565" width="0.0798%" height="15" fill="rgb(248,181,15)" fg:x="901" fg:w="1"/><text x="72.1574%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.9074%" y="549" width="0.0798%" height="15" fill="rgb(214,94,31)" fg:x="901" fg:w="1"/><text x="72.1574%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.9074%" y="533" width="0.0798%" height="15" fill="rgb(207,16,42)" fg:x="901" fg:w="1"/><text x="72.1574%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.9074%" y="517" width="0.0798%" height="15" fill="rgb(208,127,13)" fg:x="901" fg:w="1"/><text x="72.1574%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.9074%" y="501" width="0.0798%" height="15" fill="rgb(220,211,18)" fg:x="901" fg:w="1"/><text x="72.1574%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.9074%" y="485" width="0.0798%" height="15" fill="rgb(221,55,38)" fg:x="901" fg:w="1"/><text x="72.1574%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.9074%" y="469" width="0.0798%" height="15" fill="rgb(252,219,45)" fg:x="901" fg:w="1"/><text x="72.1574%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.9074%" y="453" width="0.0798%" height="15" fill="rgb(248,53,35)" fg:x="901" fg:w="1"/><text x="72.1574%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.9074%" y="437" width="0.0798%" height="15" fill="rgb(210,87,2)" fg:x="901" fg:w="1"/><text x="72.1574%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.9074%" y="421" width="0.0798%" height="15" fill="rgb(239,133,9)" fg:x="901" fg:w="1"/><text x="72.1574%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="71.9074%" y="405" width="0.0798%" height="15" fill="rgb(214,114,5)" fg:x="901" fg:w="1"/><text x="72.1574%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="71.9872%" y="549" width="0.0798%" height="15" fill="rgb(206,124,24)" fg:x="902" fg:w="1"/><text x="72.2372%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="71.9872%" y="533" width="0.0798%" height="15" fill="rgb(212,57,33)" fg:x="902" fg:w="1"/><text x="72.2372%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="71.9872%" y="517" width="0.0798%" height="15" fill="rgb(246,21,20)" fg:x="902" fg:w="1"/><text x="72.2372%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="71.9872%" y="501" width="0.0798%" height="15" fill="rgb(253,210,39)" fg:x="902" fg:w="1"/><text x="72.2372%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="72.0670%" y="485" width="0.0798%" height="15" fill="rgb(209,187,24)" fg:x="903" fg:w="1"/><text x="72.3170%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.0670%" y="469" width="0.0798%" height="15" fill="rgb(246,136,17)" fg:x="903" fg:w="1"/><text x="72.3170%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.0670%" y="453" width="0.0798%" height="15" fill="rgb(211,0,30)" fg:x="903" fg:w="1"/><text x="72.3170%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.0670%" y="437" width="0.0798%" height="15" fill="rgb(216,199,7)" fg:x="903" fg:w="1"/><text x="72.3170%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="72.0670%" y="501" width="0.2394%" height="15" fill="rgb(207,210,19)" fg:x="903" fg:w="3"/><text x="72.3170%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="72.1468%" y="485" width="0.1596%" height="15" fill="rgb(237,187,39)" fg:x="904" fg:w="2"/><text x="72.3968%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.2267%" y="469" width="0.0798%" height="15" fill="rgb(243,194,42)" fg:x="905" fg:w="1"/><text x="72.4767%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.2267%" y="453" width="0.0798%" height="15" fill="rgb(225,194,19)" fg:x="905" fg:w="1"/><text x="72.4767%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="72.3065%" y="485" width="0.1596%" height="15" fill="rgb(224,192,14)" fg:x="906" fg:w="2"/><text x="72.5565%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="72.3065%" y="469" width="0.1596%" height="15" fill="rgb(252,21,18)" fg:x="906" fg:w="2"/><text x="72.5565%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="72.3065%" y="453" width="0.1596%" height="15" fill="rgb(229,69,19)" fg:x="906" fg:w="2"/><text x="72.5565%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="72.4661%" y="437" width="0.0798%" height="15" fill="rgb(251,31,53)" fg:x="908" fg:w="1"/><text x="72.7161%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.4661%" y="421" width="0.0798%" height="15" fill="rgb(218,39,50)" fg:x="908" fg:w="1"/><text x="72.7161%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.4661%" y="405" width="0.0798%" height="15" fill="rgb(231,50,17)" fg:x="908" fg:w="1"/><text x="72.7161%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.4661%" y="389" width="0.0798%" height="15" fill="rgb(223,217,31)" fg:x="908" fg:w="1"/><text x="72.7161%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="72.4661%" y="373" width="0.0798%" height="15" fill="rgb(225,91,12)" fg:x="908" fg:w="1"/><text x="72.7161%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="72.4661%" y="357" width="0.0798%" height="15" fill="rgb(242,58,43)" fg:x="908" fg:w="1"/><text x="72.7161%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="72.4661%" y="341" width="0.0798%" height="15" fill="rgb(242,32,21)" fg:x="908" fg:w="1"/><text x="72.7161%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="72.5459%" y="437" width="0.0798%" height="15" fill="rgb(211,127,1)" fg:x="909" fg:w="1"/><text x="72.7959%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="72.5459%" y="421" width="0.0798%" height="15" fill="rgb(231,93,13)" fg:x="909" fg:w="1"/><text x="72.7959%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.5459%" y="405" width="0.0798%" height="15" fill="rgb(218,83,4)" fg:x="909" fg:w="1"/><text x="72.7959%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.5459%" y="389" width="0.0798%" height="15" fill="rgb(230,218,10)" fg:x="909" fg:w="1"/><text x="72.7959%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.5459%" y="373" width="0.0798%" height="15" fill="rgb(235,127,18)" fg:x="909" fg:w="1"/><text x="72.7959%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="72.4661%" y="469" width="0.3192%" height="15" fill="rgb(213,137,46)" fg:x="908" fg:w="4"/><text x="72.7161%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="72.4661%" y="453" width="0.3192%" height="15" fill="rgb(235,179,24)" fg:x="908" fg:w="4"/><text x="72.7161%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="72.6257%" y="437" width="0.1596%" height="15" fill="rgb(247,58,49)" fg:x="910" fg:w="2"/><text x="72.8757%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.7055%" y="421" width="0.0798%" height="15" fill="rgb(242,222,5)" fg:x="911" fg:w="1"/><text x="72.9555%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="72.8651%" y="421" width="0.1596%" height="15" fill="rgb(230,16,48)" fg:x="913" fg:w="2"/><text x="73.1151%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="72.9449%" y="405" width="0.0798%" height="15" fill="rgb(241,192,16)" fg:x="914" fg:w="1"/><text x="73.1949%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="72.9449%" y="389" width="0.0798%" height="15" fill="rgb(209,25,37)" fg:x="914" fg:w="1"/><text x="73.1949%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="72.9449%" y="373" width="0.0798%" height="15" fill="rgb(229,215,13)" fg:x="914" fg:w="1"/><text x="73.1949%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="72.7853%" y="469" width="0.3192%" height="15" fill="rgb(213,199,8)" fg:x="912" fg:w="4"/><text x="73.0353%" y="479.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="72.7853%" y="453" width="0.3192%" height="15" fill="rgb(226,151,19)" fg:x="912" fg:w="4"/><text x="73.0353%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="72.8651%" y="437" width="0.2394%" height="15" fill="rgb(254,183,12)" fg:x="913" fg:w="3"/><text x="73.1151%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="73.0247%" y="421" width="0.0798%" height="15" fill="rgb(245,8,3)" fg:x="915" fg:w="1"/><text x="73.2747%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="73.1045%" y="453" width="0.1596%" height="15" fill="rgb(229,159,35)" fg:x="916" fg:w="2"/><text x="73.3545%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="73.1045%" y="437" width="0.1596%" height="15" fill="rgb(209,145,1)" fg:x="916" fg:w="2"/><text x="73.3545%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="73.1045%" y="421" width="0.1596%" height="15" fill="rgb(228,183,16)" fg:x="916" fg:w="2"/><text x="73.3545%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.1844%" y="405" width="0.0798%" height="15" fill="rgb(222,68,0)" fg:x="917" fg:w="1"/><text x="73.4344%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.3440%" y="437" width="0.0798%" height="15" fill="rgb(209,130,50)" fg:x="919" fg:w="1"/><text x="73.5940%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.3440%" y="421" width="0.0798%" height="15" fill="rgb(228,176,44)" fg:x="919" fg:w="1"/><text x="73.5940%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="73.4238%" y="421" width="0.0798%" height="15" fill="rgb(221,164,2)" fg:x="920" fg:w="1"/><text x="73.6738%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="73.5036%" y="421" width="0.0798%" height="15" fill="rgb(249,199,49)" fg:x="921" fg:w="1"/><text x="73.7536%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.5036%" y="405" width="0.0798%" height="15" fill="rgb(228,205,53)" fg:x="921" fg:w="1"/><text x="73.7536%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.5036%" y="389" width="0.0798%" height="15" fill="rgb(235,77,20)" fg:x="921" fg:w="1"/><text x="73.7536%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.5036%" y="373" width="0.0798%" height="15" fill="rgb(227,147,34)" fg:x="921" fg:w="1"/><text x="73.7536%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="73.4238%" y="437" width="0.3192%" height="15" fill="rgb(226,203,52)" fg:x="920" fg:w="4"/><text x="73.6738%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="73.5834%" y="421" width="0.1596%" height="15" fill="rgb(226,186,23)" fg:x="922" fg:w="2"/><text x="73.8334%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.6632%" y="405" width="0.0798%" height="15" fill="rgb(236,13,30)" fg:x="923" fg:w="1"/><text x="73.9132%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.6632%" y="389" width="0.0798%" height="15" fill="rgb(228,121,22)" fg:x="923" fg:w="1"/><text x="73.9132%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="73.1045%" y="469" width="0.7183%" height="15" fill="rgb(248,222,26)" fg:x="916" fg:w="9"/><text x="73.3545%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="73.2642%" y="453" width="0.5587%" height="15" fill="rgb(251,72,25)" fg:x="918" fg:w="7"/><text x="73.5142%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.7430%" y="437" width="0.0798%" height="15" fill="rgb(223,114,24)" fg:x="924" fg:w="1"/><text x="73.9930%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.44%)</title><rect x="72.4661%" y="485" width="1.4366%" height="15" fill="rgb(232,190,43)" fg:x="908" fg:w="18"/><text x="72.7161%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.8228%" y="469" width="0.0798%" height="15" fill="rgb(208,90,0)" fg:x="925" fg:w="1"/><text x="74.0728%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.8228%" y="453" width="0.0798%" height="15" fill="rgb(234,149,31)" fg:x="925" fg:w="1"/><text x="74.0728%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (24 samples, 1.92%)</title><rect x="72.0670%" y="517" width="1.9154%" height="15" fill="rgb(235,188,36)" fg:x="903" fg:w="24"/><text x="72.3170%" y="527.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.68%)</title><rect x="72.3065%" y="501" width="1.6760%" height="15" fill="rgb(219,59,51)" fg:x="906" fg:w="21"/><text x="72.5565%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.9026%" y="485" width="0.0798%" height="15" fill="rgb(236,101,40)" fg:x="926" fg:w="1"/><text x="74.1526%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.9026%" y="469" width="0.0798%" height="15" fill="rgb(235,33,7)" fg:x="926" fg:w="1"/><text x="74.1526%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.9026%" y="453" width="0.0798%" height="15" fill="rgb(213,169,26)" fg:x="926" fg:w="1"/><text x="74.1526%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="73.9026%" y="437" width="0.0798%" height="15" fill="rgb(218,99,34)" fg:x="926" fg:w="1"/><text x="74.1526%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.9824%" y="469" width="0.0798%" height="15" fill="rgb(210,57,24)" fg:x="927" fg:w="1"/><text x="74.2324%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.0623%" y="453" width="0.0798%" height="15" fill="rgb(231,181,54)" fg:x="928" fg:w="1"/><text x="74.3123%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.1421%" y="405" width="0.0798%" height="15" fill="rgb(251,188,48)" fg:x="929" fg:w="1"/><text x="74.3921%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.2219%" y="405" width="0.0798%" height="15" fill="rgb(243,12,45)" fg:x="930" fg:w="1"/><text x="74.4719%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.2219%" y="389" width="0.0798%" height="15" fill="rgb(250,197,9)" fg:x="930" fg:w="1"/><text x="74.4719%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="73.9824%" y="517" width="0.3990%" height="15" fill="rgb(235,149,35)" fg:x="927" fg:w="5"/><text x="74.2324%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="73.9824%" y="501" width="0.3990%" height="15" fill="rgb(219,27,19)" fg:x="927" fg:w="5"/><text x="74.2324%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="73.9824%" y="485" width="0.3990%" height="15" fill="rgb(244,78,31)" fg:x="927" fg:w="5"/><text x="74.2324%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="74.0623%" y="469" width="0.3192%" height="15" fill="rgb(241,13,4)" fg:x="928" fg:w="4"/><text x="74.3123%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="74.1421%" y="453" width="0.2394%" height="15" fill="rgb(212,194,26)" fg:x="929" fg:w="3"/><text x="74.3921%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="74.1421%" y="437" width="0.2394%" height="15" fill="rgb(236,80,11)" fg:x="929" fg:w="3"/><text x="74.3921%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="74.1421%" y="421" width="0.2394%" height="15" fill="rgb(206,1,24)" fg:x="929" fg:w="3"/><text x="74.3921%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.3017%" y="405" width="0.0798%" height="15" fill="rgb(238,215,50)" fg:x="931" fg:w="1"/><text x="74.5517%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.3017%" y="389" width="0.0798%" height="15" fill="rgb(254,126,32)" fg:x="931" fg:w="1"/><text x="74.5517%" y="399.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="74.3815%" y="501" width="0.0798%" height="15" fill="rgb(206,111,53)" fg:x="932" fg:w="1"/><text x="74.6315%" y="511.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="74.3815%" y="485" width="0.0798%" height="15" fill="rgb(218,72,44)" fg:x="932" fg:w="1"/><text x="74.6315%" y="495.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="74.3815%" y="469" width="0.0798%" height="15" fill="rgb(238,25,3)" fg:x="932" fg:w="1"/><text x="74.6315%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="74.4613%" y="501" width="0.0798%" height="15" fill="rgb(250,191,7)" fg:x="933" fg:w="1"/><text x="74.7113%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="74.7007%" y="469" width="0.2394%" height="15" fill="rgb(238,56,30)" fg:x="936" fg:w="3"/><text x="74.9507%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="74.7805%" y="453" width="0.1596%" height="15" fill="rgb(210,27,45)" fg:x="937" fg:w="2"/><text x="75.0305%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="74.8603%" y="437" width="0.0798%" height="15" fill="rgb(207,10,50)" fg:x="938" fg:w="1"/><text x="75.1103%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="74.9401%" y="469" width="0.0798%" height="15" fill="rgb(249,30,23)" fg:x="939" fg:w="1"/><text x="75.1901%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="74.9401%" y="453" width="0.0798%" height="15" fill="rgb(250,80,12)" fg:x="939" fg:w="1"/><text x="75.1901%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="74.9401%" y="437" width="0.0798%" height="15" fill="rgb(210,221,37)" fg:x="939" fg:w="1"/><text x="75.1901%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="75.0200%" y="421" width="0.1596%" height="15" fill="rgb(205,96,24)" fg:x="940" fg:w="2"/><text x="75.2700%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="75.0200%" y="405" width="0.1596%" height="15" fill="rgb(247,104,22)" fg:x="940" fg:w="2"/><text x="75.2700%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="75.0998%" y="389" width="0.0798%" height="15" fill="rgb(222,61,53)" fg:x="941" fg:w="1"/><text x="75.3498%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="75.0998%" y="373" width="0.0798%" height="15" fill="rgb(241,11,53)" fg:x="941" fg:w="1"/><text x="75.3498%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="75.1796%" y="389" width="0.1596%" height="15" fill="rgb(230,111,47)" fg:x="942" fg:w="2"/><text x="75.4296%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.2594%" y="373" width="0.0798%" height="15" fill="rgb(218,187,29)" fg:x="943" fg:w="1"/><text x="75.5094%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="75.3392%" y="373" width="0.1596%" height="15" fill="rgb(210,121,46)" fg:x="944" fg:w="2"/><text x="75.5892%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="75.3392%" y="357" width="0.1596%" height="15" fill="rgb(250,43,19)" fg:x="944" fg:w="2"/><text x="75.5892%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="75.3392%" y="341" width="0.1596%" height="15" fill="rgb(238,61,12)" fg:x="944" fg:w="2"/><text x="75.5892%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="75.3392%" y="325" width="0.1596%" height="15" fill="rgb(251,198,9)" fg:x="944" fg:w="2"/><text x="75.5892%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="75.3392%" y="309" width="0.1596%" height="15" fill="rgb(214,192,38)" fg:x="944" fg:w="2"/><text x="75.5892%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.4190%" y="293" width="0.0798%" height="15" fill="rgb(214,73,19)" fg:x="945" fg:w="1"/><text x="75.6690%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.4190%" y="277" width="0.0798%" height="15" fill="rgb(249,222,49)" fg:x="945" fg:w="1"/><text x="75.6690%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.4190%" y="261" width="0.0798%" height="15" fill="rgb(231,181,54)" fg:x="945" fg:w="1"/><text x="75.6690%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="75.1796%" y="405" width="0.4789%" height="15" fill="rgb(240,1,13)" fg:x="942" fg:w="6"/><text x="75.4296%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="75.3392%" y="389" width="0.3192%" height="15" fill="rgb(225,21,16)" fg:x="944" fg:w="4"/><text x="75.5892%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="75.4988%" y="373" width="0.1596%" height="15" fill="rgb(246,176,50)" fg:x="946" fg:w="2"/><text x="75.7488%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (9 samples, 0.72%)</title><rect x="75.0200%" y="453" width="0.7183%" height="15" fill="rgb(208,96,50)" fg:x="940" fg:w="9"/><text x="75.2700%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="75.0200%" y="437" width="0.7183%" height="15" fill="rgb(240,219,19)" fg:x="940" fg:w="9"/><text x="75.2700%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="75.1796%" y="421" width="0.5587%" height="15" fill="rgb(234,73,5)" fg:x="942" fg:w="7"/><text x="75.4296%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.6584%" y="405" width="0.0798%" height="15" fill="rgb(225,52,53)" fg:x="948" fg:w="1"/><text x="75.9084%" y="415.50"></text></g><g><title>engine::session::Session::flush (48 samples, 3.83%)</title><rect x="71.9872%" y="597" width="3.8308%" height="15" fill="rgb(250,12,14)" fg:x="902" fg:w="48"/><text x="72.2372%" y="607.50">engi..</text></g><g><title>engine::session::state::State::close (48 samples, 3.83%)</title><rect x="71.9872%" y="581" width="3.8308%" height="15" fill="rgb(242,185,54)" fg:x="902" fg:w="48"/><text x="72.2372%" y="591.50">engi..</text></g><g><title>engine::session::state::State::flush_entities (48 samples, 3.83%)</title><rect x="71.9872%" y="565" width="3.8308%" height="15" fill="rgb(211,206,31)" fg:x="902" fg:w="48"/><text x="72.2372%" y="575.50">engi..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (47 samples, 3.75%)</title><rect x="72.0670%" y="549" width="3.7510%" height="15" fill="rgb(252,10,33)" fg:x="903" fg:w="47"/><text x="72.3170%" y="559.50">engi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (47 samples, 3.75%)</title><rect x="72.0670%" y="533" width="3.7510%" height="15" fill="rgb(216,26,7)" fg:x="903" fg:w="47"/><text x="72.3170%" y="543.50">engi..</text></g><g><title>kernel::model::any_entity_changes (18 samples, 1.44%)</title><rect x="74.3815%" y="517" width="1.4366%" height="15" fill="rgb(228,112,40)" fg:x="932" fg:w="18"/><text x="74.6315%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (16 samples, 1.28%)</title><rect x="74.5411%" y="501" width="1.2769%" height="15" fill="rgb(212,21,16)" fg:x="934" fg:w="16"/><text x="74.7911%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (16 samples, 1.28%)</title><rect x="74.5411%" y="485" width="1.2769%" height="15" fill="rgb(249,3,29)" fg:x="934" fg:w="16"/><text x="74.7911%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.80%)</title><rect x="75.0200%" y="469" width="0.7981%" height="15" fill="rgb(221,42,51)" fg:x="940" fg:w="10"/><text x="75.2700%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.7382%" y="453" width="0.0798%" height="15" fill="rgb(225,90,21)" fg:x="949" fg:w="1"/><text x="75.9882%" y="463.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="75.8180%" y="565" width="0.0798%" height="15" fill="rgb(242,131,5)" fg:x="950" fg:w="1"/><text x="76.0680%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="75.8180%" y="549" width="0.0798%" height="15" fill="rgb(220,187,28)" fg:x="950" fg:w="1"/><text x="76.0680%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="75.8180%" y="533" width="0.0798%" height="15" fill="rgb(210,75,48)" fg:x="950" fg:w="1"/><text x="76.0680%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="75.8180%" y="517" width="0.0798%" height="15" fill="rgb(211,91,40)" fg:x="950" fg:w="1"/><text x="76.0680%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.8180%" y="501" width="0.0798%" height="15" fill="rgb(205,43,18)" fg:x="950" fg:w="1"/><text x="76.0680%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.8180%" y="485" width="0.0798%" height="15" fill="rgb(207,123,11)" fg:x="950" fg:w="1"/><text x="76.0680%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="75.8180%" y="581" width="0.3990%" height="15" fill="rgb(235,89,39)" fg:x="950" fg:w="5"/><text x="76.0680%" y="591.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="75.8978%" y="565" width="0.3192%" height="15" fill="rgb(245,217,27)" fg:x="951" fg:w="4"/><text x="76.1478%" y="575.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (4 samples, 0.32%)</title><rect x="75.8978%" y="549" width="0.3192%" height="15" fill="rgb(216,55,17)" fg:x="951" fg:w="4"/><text x="76.1478%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="75.8978%" y="533" width="0.3192%" height="15" fill="rgb(252,116,44)" fg:x="951" fg:w="4"/><text x="76.1478%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.32%)</title><rect x="75.8978%" y="517" width="0.3192%" height="15" fill="rgb(229,153,4)" fg:x="951" fg:w="4"/><text x="76.1478%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="75.8978%" y="501" width="0.3192%" height="15" fill="rgb(222,24,35)" fg:x="951" fg:w="4"/><text x="76.1478%" y="511.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="75.8978%" y="485" width="0.3192%" height="15" fill="rgb(214,26,20)" fg:x="951" fg:w="4"/><text x="76.1478%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="76.2171%" y="565" width="0.0798%" height="15" fill="rgb(215,14,45)" fg:x="955" fg:w="1"/><text x="76.4671%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.2969%" y="485" width="0.0798%" height="15" fill="rgb(217,212,50)" fg:x="956" fg:w="1"/><text x="76.5469%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.2969%" y="469" width="0.0798%" height="15" fill="rgb(230,172,52)" fg:x="956" fg:w="1"/><text x="76.5469%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.2969%" y="453" width="0.0798%" height="15" fill="rgb(210,48,36)" fg:x="956" fg:w="1"/><text x="76.5469%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.2969%" y="437" width="0.0798%" height="15" fill="rgb(216,213,32)" fg:x="956" fg:w="1"/><text x="76.5469%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.3767%" y="389" width="0.0798%" height="15" fill="rgb(237,202,41)" fg:x="957" fg:w="1"/><text x="76.6267%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.3767%" y="373" width="0.0798%" height="15" fill="rgb(209,14,29)" fg:x="957" fg:w="1"/><text x="76.6267%" y="383.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="76.2969%" y="565" width="0.2394%" height="15" fill="rgb(219,29,3)" fg:x="956" fg:w="3"/><text x="76.5469%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="76.2969%" y="549" width="0.2394%" height="15" fill="rgb(229,13,49)" fg:x="956" fg:w="3"/><text x="76.5469%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="76.2969%" y="533" width="0.2394%" height="15" fill="rgb(210,206,2)" fg:x="956" fg:w="3"/><text x="76.5469%" y="543.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="76.2969%" y="517" width="0.2394%" height="15" fill="rgb(216,154,46)" fg:x="956" fg:w="3"/><text x="76.5469%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="76.2969%" y="501" width="0.2394%" height="15" fill="rgb(211,170,52)" fg:x="956" fg:w="3"/><text x="76.5469%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.3767%" y="485" width="0.1596%" height="15" fill="rgb(233,109,47)" fg:x="957" fg:w="2"/><text x="76.6267%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.3767%" y="469" width="0.1596%" height="15" fill="rgb(208,212,30)" fg:x="957" fg:w="2"/><text x="76.6267%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.3767%" y="453" width="0.1596%" height="15" fill="rgb(215,190,19)" fg:x="957" fg:w="2"/><text x="76.6267%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.3767%" y="437" width="0.1596%" height="15" fill="rgb(207,164,53)" fg:x="957" fg:w="2"/><text x="76.6267%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="76.3767%" y="421" width="0.1596%" height="15" fill="rgb(213,87,49)" fg:x="957" fg:w="2"/><text x="76.6267%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.3767%" y="405" width="0.1596%" height="15" fill="rgb(241,216,24)" fg:x="957" fg:w="2"/><text x="76.6267%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.4565%" y="389" width="0.0798%" height="15" fill="rgb(241,123,45)" fg:x="958" fg:w="1"/><text x="76.7065%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.4565%" y="373" width="0.0798%" height="15" fill="rgb(220,36,15)" fg:x="958" fg:w="1"/><text x="76.7065%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="76.5363%" y="565" width="0.0798%" height="15" fill="rgb(215,202,9)" fg:x="959" fg:w="1"/><text x="76.7863%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="76.6161%" y="565" width="0.1596%" height="15" fill="rgb(252,71,26)" fg:x="960" fg:w="2"/><text x="76.8661%" y="575.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="76.6959%" y="549" width="0.0798%" height="15" fill="rgb(243,195,19)" fg:x="961" fg:w="1"/><text x="76.9459%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.6959%" y="533" width="0.0798%" height="15" fill="rgb(207,167,27)" fg:x="961" fg:w="1"/><text x="76.9459%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="76.6959%" y="517" width="0.0798%" height="15" fill="rgb(250,146,54)" fg:x="961" fg:w="1"/><text x="76.9459%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="76.6959%" y="501" width="0.0798%" height="15" fill="rgb(245,79,9)" fg:x="961" fg:w="1"/><text x="76.9459%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.6959%" y="485" width="0.0798%" height="15" fill="rgb(234,197,22)" fg:x="961" fg:w="1"/><text x="76.9459%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.6959%" y="469" width="0.0798%" height="15" fill="rgb(221,52,48)" fg:x="961" fg:w="1"/><text x="76.9459%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.7757%" y="453" width="0.0798%" height="15" fill="rgb(235,80,0)" fg:x="962" fg:w="1"/><text x="77.0257%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.7757%" y="437" width="0.0798%" height="15" fill="rgb(221,117,53)" fg:x="962" fg:w="1"/><text x="77.0257%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.7757%" y="421" width="0.0798%" height="15" fill="rgb(239,48,47)" fg:x="962" fg:w="1"/><text x="77.0257%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.7757%" y="405" width="0.0798%" height="15" fill="rgb(227,191,52)" fg:x="962" fg:w="1"/><text x="77.0257%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.7757%" y="389" width="0.0798%" height="15" fill="rgb(241,118,1)" fg:x="962" fg:w="1"/><text x="77.0257%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.7757%" y="373" width="0.0798%" height="15" fill="rgb(240,85,3)" fg:x="962" fg:w="1"/><text x="77.0257%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.7757%" y="357" width="0.0798%" height="15" fill="rgb(237,68,37)" fg:x="962" fg:w="1"/><text x="77.0257%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.7757%" y="341" width="0.0798%" height="15" fill="rgb(212,9,20)" fg:x="962" fg:w="1"/><text x="77.0257%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.7757%" y="325" width="0.0798%" height="15" fill="rgb(218,84,17)" fg:x="962" fg:w="1"/><text x="77.0257%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.7757%" y="309" width="0.0798%" height="15" fill="rgb(235,147,20)" fg:x="962" fg:w="1"/><text x="77.0257%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.7757%" y="293" width="0.0798%" height="15" fill="rgb(208,224,1)" fg:x="962" fg:w="1"/><text x="77.0257%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.7757%" y="277" width="0.0798%" height="15" fill="rgb(232,97,50)" fg:x="962" fg:w="1"/><text x="77.0257%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.7757%" y="261" width="0.0798%" height="15" fill="rgb(238,15,45)" fg:x="962" fg:w="1"/><text x="77.0257%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.7757%" y="245" width="0.0798%" height="15" fill="rgb(231,46,18)" fg:x="962" fg:w="1"/><text x="77.0257%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.7757%" y="229" width="0.0798%" height="15" fill="rgb(254,169,10)" fg:x="962" fg:w="1"/><text x="77.0257%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="76.7757%" y="517" width="0.1596%" height="15" fill="rgb(243,169,30)" fg:x="962" fg:w="2"/><text x="77.0257%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="76.7757%" y="501" width="0.1596%" height="15" fill="rgb(236,90,49)" fg:x="962" fg:w="2"/><text x="77.0257%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="76.7757%" y="485" width="0.1596%" height="15" fill="rgb(218,80,15)" fg:x="962" fg:w="2"/><text x="77.0257%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.7757%" y="469" width="0.1596%" height="15" fill="rgb(222,115,37)" fg:x="962" fg:w="2"/><text x="77.0257%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.8555%" y="453" width="0.0798%" height="15" fill="rgb(227,0,6)" fg:x="963" fg:w="1"/><text x="77.1055%" y="463.50"></text></g><g><title>plugins_core::build::Build::holding (15 samples, 1.20%)</title><rect x="75.8180%" y="597" width="1.1971%" height="15" fill="rgb(217,189,13)" fg:x="950" fg:w="15"/><text x="76.0680%" y="607.50"></text></g><g><title>plugins_core::tools::set_container (10 samples, 0.80%)</title><rect x="76.2171%" y="581" width="0.7981%" height="15" fill="rgb(220,74,19)" fg:x="955" fg:w="10"/><text x="76.4671%" y="591.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="76.7757%" y="565" width="0.2394%" height="15" fill="rgb(224,81,18)" fg:x="962" fg:w="3"/><text x="77.0257%" y="575.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="76.7757%" y="549" width="0.2394%" height="15" fill="rgb(245,178,48)" fg:x="962" fg:w="3"/><text x="77.0257%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="76.7757%" y="533" width="0.2394%" height="15" fill="rgb(207,78,24)" fg:x="962" fg:w="3"/><text x="77.0257%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="76.9354%" y="517" width="0.0798%" height="15" fill="rgb(223,222,30)" fg:x="964" fg:w="1"/><text x="77.1854%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="76.9354%" y="501" width="0.0798%" height="15" fill="rgb(234,101,12)" fg:x="964" fg:w="1"/><text x="77.1854%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.9354%" y="485" width="0.0798%" height="15" fill="rgb(209,80,46)" fg:x="964" fg:w="1"/><text x="77.1854%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="77.0152%" y="549" width="0.0798%" height="15" fill="rgb(228,79,14)" fg:x="965" fg:w="1"/><text x="77.2652%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="77.0152%" y="565" width="0.2394%" height="15" fill="rgb(220,219,34)" fg:x="965" fg:w="3"/><text x="77.2652%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="77.0950%" y="549" width="0.1596%" height="15" fill="rgb(207,80,21)" fg:x="966" fg:w="2"/><text x="77.3450%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="77.1748%" y="533" width="0.0798%" height="15" fill="rgb(210,154,44)" fg:x="967" fg:w="1"/><text x="77.4248%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="77.1748%" y="517" width="0.0798%" height="15" fill="rgb(246,44,39)" fg:x="967" fg:w="1"/><text x="77.4248%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.1748%" y="501" width="0.0798%" height="15" fill="rgb(252,175,13)" fg:x="967" fg:w="1"/><text x="77.4248%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.1748%" y="485" width="0.0798%" height="15" fill="rgb(211,50,39)" fg:x="967" fg:w="1"/><text x="77.4248%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="77.1748%" y="469" width="0.0798%" height="15" fill="rgb(231,204,27)" fg:x="967" fg:w="1"/><text x="77.4248%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="77.1748%" y="453" width="0.0798%" height="15" fill="rgb(253,26,34)" fg:x="967" fg:w="1"/><text x="77.4248%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.1748%" y="437" width="0.0798%" height="15" fill="rgb(207,139,38)" fg:x="967" fg:w="1"/><text x="77.4248%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.1748%" y="421" width="0.0798%" height="15" fill="rgb(248,54,27)" fg:x="967" fg:w="1"/><text x="77.4248%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="77.1748%" y="405" width="0.0798%" height="15" fill="rgb(234,25,33)" fg:x="967" fg:w="1"/><text x="77.4248%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="77.1748%" y="389" width="0.0798%" height="15" fill="rgb(249,107,47)" fg:x="967" fg:w="1"/><text x="77.4248%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.1748%" y="373" width="0.0798%" height="15" fill="rgb(230,190,31)" fg:x="967" fg:w="1"/><text x="77.4248%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.1748%" y="357" width="0.0798%" height="15" fill="rgb(238,173,45)" fg:x="967" fg:w="1"/><text x="77.4248%" y="367.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="77.1748%" y="341" width="0.0798%" height="15" fill="rgb(222,16,50)" fg:x="967" fg:w="1"/><text x="77.4248%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="77.1748%" y="325" width="0.0798%" height="15" fill="rgb(251,204,47)" fg:x="967" fg:w="1"/><text x="77.4248%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.1748%" y="309" width="0.0798%" height="15" fill="rgb(225,12,3)" fg:x="967" fg:w="1"/><text x="77.4248%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.1748%" y="293" width="0.0798%" height="15" fill="rgb(214,208,22)" fg:x="967" fg:w="1"/><text x="77.4248%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.1748%" y="277" width="0.0798%" height="15" fill="rgb(240,57,32)" fg:x="967" fg:w="1"/><text x="77.4248%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.1748%" y="261" width="0.0798%" height="15" fill="rgb(243,113,48)" fg:x="967" fg:w="1"/><text x="77.4248%" y="271.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="77.1748%" y="245" width="0.0798%" height="15" fill="rgb(225,135,30)" fg:x="967" fg:w="1"/><text x="77.4248%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="77.1748%" y="229" width="0.0798%" height="15" fill="rgb(222,3,53)" fg:x="967" fg:w="1"/><text x="77.4248%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="77.1748%" y="213" width="0.0798%" height="15" fill="rgb(243,142,2)" fg:x="967" fg:w="1"/><text x="77.4248%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="77.1748%" y="197" width="0.0798%" height="15" fill="rgb(233,67,14)" fg:x="967" fg:w="1"/><text x="77.4248%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="77.1748%" y="181" width="0.0798%" height="15" fill="rgb(245,125,36)" fg:x="967" fg:w="1"/><text x="77.4248%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="77.1748%" y="165" width="0.0798%" height="15" fill="rgb(225,199,6)" fg:x="967" fg:w="1"/><text x="77.4248%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.1748%" y="149" width="0.0798%" height="15" fill="rgb(244,71,6)" fg:x="967" fg:w="1"/><text x="77.4248%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="77.1748%" y="133" width="0.0798%" height="15" fill="rgb(225,62,9)" fg:x="967" fg:w="1"/><text x="77.4248%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.1748%" y="117" width="0.0798%" height="15" fill="rgb(246,139,53)" fg:x="967" fg:w="1"/><text x="77.4248%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="77.1748%" y="101" width="0.0798%" height="15" fill="rgb(243,161,46)" fg:x="967" fg:w="1"/><text x="77.4248%" y="111.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="77.1748%" y="85" width="0.0798%" height="15" fill="rgb(236,153,7)" fg:x="967" fg:w="1"/><text x="77.4248%" y="95.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="77.1748%" y="69" width="0.0798%" height="15" fill="rgb(248,42,35)" fg:x="967" fg:w="1"/><text x="77.4248%" y="79.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.1748%" y="53" width="0.0798%" height="15" fill="rgb(250,17,31)" fg:x="967" fg:w="1"/><text x="77.4248%" y="63.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.2546%" y="453" width="0.0798%" height="15" fill="rgb(248,138,14)" fg:x="968" fg:w="1"/><text x="77.5046%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.2546%" y="437" width="0.0798%" height="15" fill="rgb(228,161,3)" fg:x="968" fg:w="1"/><text x="77.5046%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="77.2546%" y="517" width="0.1596%" height="15" fill="rgb(248,116,17)" fg:x="968" fg:w="2"/><text x="77.5046%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="77.2546%" y="501" width="0.1596%" height="15" fill="rgb(207,78,24)" fg:x="968" fg:w="2"/><text x="77.5046%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="77.2546%" y="485" width="0.1596%" height="15" fill="rgb(234,99,48)" fg:x="968" fg:w="2"/><text x="77.5046%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="77.2546%" y="469" width="0.1596%" height="15" fill="rgb(242,22,26)" fg:x="968" fg:w="2"/><text x="77.5046%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.3344%" y="453" width="0.0798%" height="15" fill="rgb(227,78,32)" fg:x="969" fg:w="1"/><text x="77.5844%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.3344%" y="437" width="0.0798%" height="15" fill="rgb(226,189,43)" fg:x="969" fg:w="1"/><text x="77.5844%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.3344%" y="421" width="0.0798%" height="15" fill="rgb(227,218,35)" fg:x="969" fg:w="1"/><text x="77.5844%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.3344%" y="405" width="0.0798%" height="15" fill="rgb(206,111,40)" fg:x="969" fg:w="1"/><text x="77.5844%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.3344%" y="389" width="0.0798%" height="15" fill="rgb(208,217,22)" fg:x="969" fg:w="1"/><text x="77.5844%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.3344%" y="373" width="0.0798%" height="15" fill="rgb(248,20,20)" fg:x="969" fg:w="1"/><text x="77.5844%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.3344%" y="357" width="0.0798%" height="15" fill="rgb(239,155,16)" fg:x="969" fg:w="1"/><text x="77.5844%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.3344%" y="341" width="0.0798%" height="15" fill="rgb(238,171,46)" fg:x="969" fg:w="1"/><text x="77.5844%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.3344%" y="325" width="0.0798%" height="15" fill="rgb(248,11,36)" fg:x="969" fg:w="1"/><text x="77.5844%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.3344%" y="309" width="0.0798%" height="15" fill="rgb(220,148,37)" fg:x="969" fg:w="1"/><text x="77.5844%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.3344%" y="293" width="0.0798%" height="15" fill="rgb(218,144,42)" fg:x="969" fg:w="1"/><text x="77.5844%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.3344%" y="277" width="0.0798%" height="15" fill="rgb(245,20,20)" fg:x="969" fg:w="1"/><text x="77.5844%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="77.2546%" y="565" width="0.2394%" height="15" fill="rgb(240,111,48)" fg:x="968" fg:w="3"/><text x="77.5046%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="77.2546%" y="549" width="0.2394%" height="15" fill="rgb(237,225,32)" fg:x="968" fg:w="3"/><text x="77.5046%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="77.2546%" y="533" width="0.2394%" height="15" fill="rgb(228,161,46)" fg:x="968" fg:w="3"/><text x="77.5046%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.4142%" y="517" width="0.0798%" height="15" fill="rgb(235,196,21)" fg:x="970" fg:w="1"/><text x="77.6642%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.4142%" y="501" width="0.0798%" height="15" fill="rgb(250,133,21)" fg:x="970" fg:w="1"/><text x="77.6642%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.4142%" y="485" width="0.0798%" height="15" fill="rgb(236,94,32)" fg:x="970" fg:w="1"/><text x="77.6642%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.4142%" y="469" width="0.0798%" height="15" fill="rgb(219,176,25)" fg:x="970" fg:w="1"/><text x="77.6642%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.4142%" y="453" width="0.0798%" height="15" fill="rgb(211,17,43)" fg:x="970" fg:w="1"/><text x="77.6642%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.4142%" y="437" width="0.0798%" height="15" fill="rgb(220,75,23)" fg:x="970" fg:w="1"/><text x="77.6642%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.4142%" y="421" width="0.0798%" height="15" fill="rgb(215,122,32)" fg:x="970" fg:w="1"/><text x="77.6642%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.4142%" y="405" width="0.0798%" height="15" fill="rgb(218,57,38)" fg:x="970" fg:w="1"/><text x="77.6642%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.4142%" y="389" width="0.0798%" height="15" fill="rgb(233,208,46)" fg:x="970" fg:w="1"/><text x="77.6642%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.4940%" y="533" width="0.0798%" height="15" fill="rgb(221,35,50)" fg:x="971" fg:w="1"/><text x="77.7440%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.4940%" y="517" width="0.0798%" height="15" fill="rgb(229,213,29)" fg:x="971" fg:w="1"/><text x="77.7440%" y="527.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="77.4940%" y="565" width="0.1596%" height="15" fill="rgb(229,110,40)" fg:x="971" fg:w="2"/><text x="77.7440%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="77.4940%" y="549" width="0.1596%" height="15" fill="rgb(247,206,19)" fg:x="971" fg:w="2"/><text x="77.7440%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.5738%" y="533" width="0.0798%" height="15" fill="rgb(216,229,45)" fg:x="972" fg:w="1"/><text x="77.8238%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="77.5738%" y="517" width="0.0798%" height="15" fill="rgb(205,184,31)" fg:x="972" fg:w="1"/><text x="77.8238%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="77.5738%" y="501" width="0.0798%" height="15" fill="rgb(213,91,10)" fg:x="972" fg:w="1"/><text x="77.8238%" y="511.50"></text></g><g><title>plugins_core::build::Build::into_entry (9 samples, 0.72%)</title><rect x="77.0152%" y="597" width="0.7183%" height="15" fill="rgb(250,49,8)" fg:x="965" fg:w="9"/><text x="77.2652%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="77.0152%" y="581" width="0.7183%" height="15" fill="rgb(207,26,8)" fg:x="965" fg:w="9"/><text x="77.2652%" y="591.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="77.6536%" y="565" width="0.0798%" height="15" fill="rgb(224,2,13)" fg:x="973" fg:w="1"/><text x="77.9036%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="77.6536%" y="549" width="0.0798%" height="15" fill="rgb(219,108,27)" fg:x="973" fg:w="1"/><text x="77.9036%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="77.6536%" y="533" width="0.0798%" height="15" fill="rgb(240,89,32)" fg:x="973" fg:w="1"/><text x="77.9036%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="77.6536%" y="517" width="0.0798%" height="15" fill="rgb(248,205,3)" fg:x="973" fg:w="1"/><text x="77.9036%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.6536%" y="501" width="0.0798%" height="15" fill="rgb(236,197,47)" fg:x="973" fg:w="1"/><text x="77.9036%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.6536%" y="485" width="0.0798%" height="15" fill="rgb(244,185,52)" fg:x="973" fg:w="1"/><text x="77.9036%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.6536%" y="469" width="0.0798%" height="15" fill="rgb(210,206,23)" fg:x="973" fg:w="1"/><text x="77.9036%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.6536%" y="453" width="0.0798%" height="15" fill="rgb(251,177,30)" fg:x="973" fg:w="1"/><text x="77.9036%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.6536%" y="437" width="0.0798%" height="15" fill="rgb(243,27,45)" fg:x="973" fg:w="1"/><text x="77.9036%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.6536%" y="421" width="0.0798%" height="15" fill="rgb(248,141,51)" fg:x="973" fg:w="1"/><text x="77.9036%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.6536%" y="405" width="0.0798%" height="15" fill="rgb(235,102,15)" fg:x="973" fg:w="1"/><text x="77.9036%" y="415.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="77.7334%" y="565" width="0.0798%" height="15" fill="rgb(214,164,53)" fg:x="974" fg:w="1"/><text x="77.9834%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.7334%" y="549" width="0.0798%" height="15" fill="rgb(228,18,51)" fg:x="974" fg:w="1"/><text x="77.9834%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.7334%" y="533" width="0.0798%" height="15" fill="rgb(205,211,11)" fg:x="974" fg:w="1"/><text x="77.9834%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.7334%" y="517" width="0.0798%" height="15" fill="rgb(208,63,6)" fg:x="974" fg:w="1"/><text x="77.9834%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.7334%" y="501" width="0.0798%" height="15" fill="rgb(245,76,14)" fg:x="974" fg:w="1"/><text x="77.9834%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.7334%" y="485" width="0.0798%" height="15" fill="rgb(234,176,34)" fg:x="974" fg:w="1"/><text x="77.9834%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.7334%" y="469" width="0.0798%" height="15" fill="rgb(243,156,42)" fg:x="974" fg:w="1"/><text x="77.9834%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.7334%" y="453" width="0.0798%" height="15" fill="rgb(237,182,10)" fg:x="974" fg:w="1"/><text x="77.9834%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="77.8132%" y="485" width="0.0798%" height="15" fill="rgb(244,117,0)" fg:x="975" fg:w="1"/><text x="78.0632%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="77.8931%" y="437" width="0.0798%" height="15" fill="rgb(239,91,50)" fg:x="976" fg:w="1"/><text x="78.1431%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.8931%" y="421" width="0.0798%" height="15" fill="rgb(206,38,9)" fg:x="976" fg:w="1"/><text x="78.1431%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.8931%" y="405" width="0.0798%" height="15" fill="rgb(205,25,10)" fg:x="976" fg:w="1"/><text x="78.1431%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="77.8931%" y="389" width="0.0798%" height="15" fill="rgb(206,224,7)" fg:x="976" fg:w="1"/><text x="78.1431%" y="399.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="77.7334%" y="597" width="0.3192%" height="15" fill="rgb(227,157,10)" fg:x="974" fg:w="4"/><text x="77.9834%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="77.7334%" y="581" width="0.3192%" height="15" fill="rgb(214,157,37)" fg:x="974" fg:w="4"/><text x="77.9834%" y="591.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="77.8132%" y="565" width="0.2394%" height="15" fill="rgb(209,180,35)" fg:x="975" fg:w="3"/><text x="78.0632%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="77.8132%" y="549" width="0.2394%" height="15" fill="rgb(216,174,49)" fg:x="975" fg:w="3"/><text x="78.0632%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="77.8132%" y="533" width="0.2394%" height="15" fill="rgb(205,96,20)" fg:x="975" fg:w="3"/><text x="78.0632%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="77.8132%" y="517" width="0.2394%" height="15" fill="rgb(214,220,39)" fg:x="975" fg:w="3"/><text x="78.0632%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="77.8132%" y="501" width="0.2394%" height="15" fill="rgb(245,126,30)" fg:x="975" fg:w="3"/><text x="78.0632%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="77.8931%" y="485" width="0.1596%" height="15" fill="rgb(215,88,33)" fg:x="976" fg:w="2"/><text x="78.1431%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="77.8931%" y="469" width="0.1596%" height="15" fill="rgb(210,1,49)" fg:x="976" fg:w="2"/><text x="78.1431%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="77.8931%" y="453" width="0.1596%" height="15" fill="rgb(207,133,3)" fg:x="976" fg:w="2"/><text x="78.1431%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.9729%" y="437" width="0.0798%" height="15" fill="rgb(231,47,43)" fg:x="977" fg:w="1"/><text x="78.2229%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="78.0527%" y="581" width="0.0798%" height="15" fill="rgb(245,64,1)" fg:x="978" fg:w="1"/><text x="78.3027%" y="591.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="78.0527%" y="565" width="0.0798%" height="15" fill="rgb(253,145,20)" fg:x="978" fg:w="1"/><text x="78.3027%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="78.2123%" y="565" width="0.0798%" height="15" fill="rgb(211,39,18)" fg:x="980" fg:w="1"/><text x="78.4623%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="78.2123%" y="549" width="0.0798%" height="15" fill="rgb(223,225,18)" fg:x="980" fg:w="1"/><text x="78.4623%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="78.2123%" y="533" width="0.0798%" height="15" fill="rgb(210,202,44)" fg:x="980" fg:w="1"/><text x="78.4623%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="78.2123%" y="517" width="0.0798%" height="15" fill="rgb(231,138,36)" fg:x="980" fg:w="1"/><text x="78.4623%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.2123%" y="501" width="0.0798%" height="15" fill="rgb(237,115,25)" fg:x="980" fg:w="1"/><text x="78.4623%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.2123%" y="485" width="0.0798%" height="15" fill="rgb(215,53,48)" fg:x="980" fg:w="1"/><text x="78.4623%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="78.2123%" y="469" width="0.0798%" height="15" fill="rgb(243,193,24)" fg:x="980" fg:w="1"/><text x="78.4623%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.2123%" y="453" width="0.0798%" height="15" fill="rgb(210,106,28)" fg:x="980" fg:w="1"/><text x="78.4623%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.2123%" y="437" width="0.0798%" height="15" fill="rgb(249,192,0)" fg:x="980" fg:w="1"/><text x="78.4623%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.2123%" y="421" width="0.0798%" height="15" fill="rgb(224,96,21)" fg:x="980" fg:w="1"/><text x="78.4623%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="78.2123%" y="405" width="0.0798%" height="15" fill="rgb(243,160,19)" fg:x="980" fg:w="1"/><text x="78.4623%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.2123%" y="389" width="0.0798%" height="15" fill="rgb(219,205,50)" fg:x="980" fg:w="1"/><text x="78.4623%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.2123%" y="373" width="0.0798%" height="15" fill="rgb(218,175,44)" fg:x="980" fg:w="1"/><text x="78.4623%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="78.1325%" y="581" width="0.2394%" height="15" fill="rgb(251,84,47)" fg:x="979" fg:w="3"/><text x="78.3825%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.2921%" y="565" width="0.0798%" height="15" fill="rgb(241,14,16)" fg:x="981" fg:w="1"/><text x="78.5421%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="78.2921%" y="549" width="0.0798%" height="15" fill="rgb(207,142,28)" fg:x="981" fg:w="1"/><text x="78.5421%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.2921%" y="533" width="0.0798%" height="15" fill="rgb(208,116,22)" fg:x="981" fg:w="1"/><text x="78.5421%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.2921%" y="517" width="0.0798%" height="15" fill="rgb(210,0,43)" fg:x="981" fg:w="1"/><text x="78.5421%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.2921%" y="501" width="0.0798%" height="15" fill="rgb(246,33,21)" fg:x="981" fg:w="1"/><text x="78.5421%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.2921%" y="485" width="0.0798%" height="15" fill="rgb(208,158,54)" fg:x="981" fg:w="1"/><text x="78.5421%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.2921%" y="469" width="0.0798%" height="15" fill="rgb(218,99,29)" fg:x="981" fg:w="1"/><text x="78.5421%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.2921%" y="453" width="0.0798%" height="15" fill="rgb(226,29,7)" fg:x="981" fg:w="1"/><text x="78.5421%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.3719%" y="581" width="0.0798%" height="15" fill="rgb(206,178,46)" fg:x="982" fg:w="1"/><text x="78.6219%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="78.4517%" y="533" width="0.0798%" height="15" fill="rgb(205,169,32)" fg:x="983" fg:w="1"/><text x="78.7017%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="78.4517%" y="517" width="0.0798%" height="15" fill="rgb(217,4,13)" fg:x="983" fg:w="1"/><text x="78.7017%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.4517%" y="501" width="0.0798%" height="15" fill="rgb(210,140,37)" fg:x="983" fg:w="1"/><text x="78.7017%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="78.4517%" y="485" width="0.0798%" height="15" fill="rgb(229,80,10)" fg:x="983" fg:w="1"/><text x="78.7017%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.4517%" y="469" width="0.0798%" height="15" fill="rgb(212,175,34)" fg:x="983" fg:w="1"/><text x="78.7017%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.4517%" y="453" width="0.0798%" height="15" fill="rgb(216,207,24)" fg:x="983" fg:w="1"/><text x="78.7017%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.4517%" y="437" width="0.0798%" height="15" fill="rgb(234,163,3)" fg:x="983" fg:w="1"/><text x="78.7017%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.4517%" y="421" width="0.0798%" height="15" fill="rgb(248,101,16)" fg:x="983" fg:w="1"/><text x="78.7017%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.4517%" y="405" width="0.0798%" height="15" fill="rgb(209,152,54)" fg:x="983" fg:w="1"/><text x="78.7017%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.4517%" y="389" width="0.0798%" height="15" fill="rgb(229,124,51)" fg:x="983" fg:w="1"/><text x="78.7017%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.4517%" y="373" width="0.0798%" height="15" fill="rgb(219,83,18)" fg:x="983" fg:w="1"/><text x="78.7017%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.4517%" y="357" width="0.0798%" height="15" fill="rgb(206,29,38)" fg:x="983" fg:w="1"/><text x="78.7017%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.4517%" y="341" width="0.0798%" height="15" fill="rgb(245,123,23)" fg:x="983" fg:w="1"/><text x="78.7017%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.4517%" y="325" width="0.0798%" height="15" fill="rgb(238,50,33)" fg:x="983" fg:w="1"/><text x="78.7017%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="78.5315%" y="501" width="0.1596%" height="15" fill="rgb(234,165,23)" fg:x="984" fg:w="2"/><text x="78.7815%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="78.6113%" y="485" width="0.0798%" height="15" fill="rgb(211,82,31)" fg:x="985" fg:w="1"/><text x="78.8613%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="78.6113%" y="469" width="0.0798%" height="15" fill="rgb(224,166,46)" fg:x="985" fg:w="1"/><text x="78.8613%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="78.6113%" y="453" width="0.0798%" height="15" fill="rgb(211,13,8)" fg:x="985" fg:w="1"/><text x="78.8613%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.6113%" y="437" width="0.0798%" height="15" fill="rgb(212,7,42)" fg:x="985" fg:w="1"/><text x="78.8613%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.6113%" y="421" width="0.0798%" height="15" fill="rgb(249,102,19)" fg:x="985" fg:w="1"/><text x="78.8613%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="78.6113%" y="405" width="0.0798%" height="15" fill="rgb(225,41,13)" fg:x="985" fg:w="1"/><text x="78.8613%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.6113%" y="389" width="0.0798%" height="15" fill="rgb(220,65,27)" fg:x="985" fg:w="1"/><text x="78.8613%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.6113%" y="373" width="0.0798%" height="15" fill="rgb(206,4,41)" fg:x="985" fg:w="1"/><text x="78.8613%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.6113%" y="357" width="0.0798%" height="15" fill="rgb(219,60,39)" fg:x="985" fg:w="1"/><text x="78.8613%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="78.6113%" y="341" width="0.0798%" height="15" fill="rgb(226,4,38)" fg:x="985" fg:w="1"/><text x="78.8613%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.6113%" y="325" width="0.0798%" height="15" fill="rgb(250,52,3)" fg:x="985" fg:w="1"/><text x="78.8613%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.6113%" y="309" width="0.0798%" height="15" fill="rgb(234,93,0)" fg:x="985" fg:w="1"/><text x="78.8613%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.6113%" y="293" width="0.0798%" height="15" fill="rgb(251,47,47)" fg:x="985" fg:w="1"/><text x="78.8613%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.6113%" y="277" width="0.0798%" height="15" fill="rgb(205,166,47)" fg:x="985" fg:w="1"/><text x="78.8613%" y="287.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="78.6113%" y="261" width="0.0798%" height="15" fill="rgb(231,148,8)" fg:x="985" fg:w="1"/><text x="78.8613%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="78.6113%" y="245" width="0.0798%" height="15" fill="rgb(244,185,19)" fg:x="985" fg:w="1"/><text x="78.8613%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="78.6113%" y="229" width="0.0798%" height="15" fill="rgb(224,201,45)" fg:x="985" fg:w="1"/><text x="78.8613%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="78.6113%" y="213" width="0.0798%" height="15" fill="rgb(240,77,39)" fg:x="985" fg:w="1"/><text x="78.8613%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="78.6113%" y="197" width="0.0798%" height="15" fill="rgb(248,211,29)" fg:x="985" fg:w="1"/><text x="78.8613%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="78.6113%" y="181" width="0.0798%" height="15" fill="rgb(232,214,46)" fg:x="985" fg:w="1"/><text x="78.8613%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.6113%" y="165" width="0.0798%" height="15" fill="rgb(213,99,54)" fg:x="985" fg:w="1"/><text x="78.8613%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="78.6113%" y="149" width="0.0798%" height="15" fill="rgb(240,19,46)" fg:x="985" fg:w="1"/><text x="78.8613%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.6113%" y="133" width="0.0798%" height="15" fill="rgb(243,89,10)" fg:x="985" fg:w="1"/><text x="78.8613%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.6113%" y="117" width="0.0798%" height="15" fill="rgb(249,28,32)" fg:x="985" fg:w="1"/><text x="78.8613%" y="127.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.6911%" y="421" width="0.0798%" height="15" fill="rgb(253,30,9)" fg:x="986" fg:w="1"/><text x="78.9411%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.6911%" y="405" width="0.0798%" height="15" fill="rgb(217,2,26)" fg:x="986" fg:w="1"/><text x="78.9411%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.6911%" y="389" width="0.0798%" height="15" fill="rgb(220,28,10)" fg:x="986" fg:w="1"/><text x="78.9411%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.6911%" y="373" width="0.0798%" height="15" fill="rgb(228,167,49)" fg:x="986" fg:w="1"/><text x="78.9411%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.6911%" y="357" width="0.0798%" height="15" fill="rgb(238,212,3)" fg:x="986" fg:w="1"/><text x="78.9411%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.6911%" y="341" width="0.0798%" height="15" fill="rgb(229,134,44)" fg:x="986" fg:w="1"/><text x="78.9411%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.6911%" y="325" width="0.0798%" height="15" fill="rgb(208,71,4)" fg:x="986" fg:w="1"/><text x="78.9411%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.6911%" y="309" width="0.0798%" height="15" fill="rgb(221,205,45)" fg:x="986" fg:w="1"/><text x="78.9411%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.6911%" y="293" width="0.0798%" height="15" fill="rgb(215,132,38)" fg:x="986" fg:w="1"/><text x="78.9411%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.6911%" y="277" width="0.0798%" height="15" fill="rgb(227,158,6)" fg:x="986" fg:w="1"/><text x="78.9411%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.6911%" y="261" width="0.0798%" height="15" fill="rgb(250,10,38)" fg:x="986" fg:w="1"/><text x="78.9411%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.6911%" y="245" width="0.0798%" height="15" fill="rgb(225,171,40)" fg:x="986" fg:w="1"/><text x="78.9411%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.6911%" y="229" width="0.0798%" height="15" fill="rgb(238,17,43)" fg:x="986" fg:w="1"/><text x="78.9411%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.6911%" y="213" width="0.0798%" height="15" fill="rgb(208,145,4)" fg:x="986" fg:w="1"/><text x="78.9411%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.6911%" y="197" width="0.0798%" height="15" fill="rgb(232,82,7)" fg:x="986" fg:w="1"/><text x="78.9411%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.6911%" y="181" width="0.0798%" height="15" fill="rgb(205,166,38)" fg:x="986" fg:w="1"/><text x="78.9411%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.6911%" y="165" width="0.0798%" height="15" fill="rgb(240,228,4)" fg:x="986" fg:w="1"/><text x="78.9411%" y="175.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="78.5315%" y="517" width="0.3192%" height="15" fill="rgb(233,121,40)" fg:x="984" fg:w="4"/><text x="78.7815%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="78.6911%" y="501" width="0.1596%" height="15" fill="rgb(243,84,30)" fg:x="986" fg:w="2"/><text x="78.9411%" y="511.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="78.6911%" y="485" width="0.1596%" height="15" fill="rgb(235,81,48)" fg:x="986" fg:w="2"/><text x="78.9411%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="78.6911%" y="469" width="0.1596%" height="15" fill="rgb(218,137,0)" fg:x="986" fg:w="2"/><text x="78.9411%" y="479.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="78.6911%" y="453" width="0.1596%" height="15" fill="rgb(223,151,48)" fg:x="986" fg:w="2"/><text x="78.9411%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="78.6911%" y="437" width="0.1596%" height="15" fill="rgb(247,30,19)" fg:x="986" fg:w="2"/><text x="78.9411%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.7709%" y="421" width="0.0798%" height="15" fill="rgb(205,129,29)" fg:x="987" fg:w="1"/><text x="79.0209%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="78.7709%" y="405" width="0.0798%" height="15" fill="rgb(222,29,2)" fg:x="987" fg:w="1"/><text x="79.0209%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.8508%" y="469" width="0.0798%" height="15" fill="rgb(232,145,33)" fg:x="988" fg:w="1"/><text x="79.1008%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="78.8508%" y="453" width="0.0798%" height="15" fill="rgb(217,30,31)" fg:x="988" fg:w="1"/><text x="79.1008%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.8508%" y="437" width="0.0798%" height="15" fill="rgb(243,22,52)" fg:x="988" fg:w="1"/><text x="79.1008%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.8508%" y="421" width="0.0798%" height="15" fill="rgb(254,228,14)" fg:x="988" fg:w="1"/><text x="79.1008%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.8508%" y="405" width="0.0798%" height="15" fill="rgb(231,45,50)" fg:x="988" fg:w="1"/><text x="79.1008%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.0104%" y="325" width="0.0798%" height="15" fill="rgb(248,125,3)" fg:x="990" fg:w="1"/><text x="79.2604%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.0104%" y="309" width="0.0798%" height="15" fill="rgb(213,76,9)" fg:x="990" fg:w="1"/><text x="79.2604%" y="319.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="78.8508%" y="501" width="0.3192%" height="15" fill="rgb(238,108,21)" fg:x="988" fg:w="4"/><text x="79.1008%" y="511.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="78.8508%" y="485" width="0.3192%" height="15" fill="rgb(229,214,19)" fg:x="988" fg:w="4"/><text x="79.1008%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="78.9306%" y="469" width="0.2394%" height="15" fill="rgb(252,201,5)" fg:x="989" fg:w="3"/><text x="79.1806%" y="479.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="78.9306%" y="453" width="0.2394%" height="15" fill="rgb(233,165,49)" fg:x="989" fg:w="3"/><text x="79.1806%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="78.9306%" y="437" width="0.2394%" height="15" fill="rgb(208,165,19)" fg:x="989" fg:w="3"/><text x="79.1806%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="79.0104%" y="421" width="0.1596%" height="15" fill="rgb(216,220,31)" fg:x="990" fg:w="2"/><text x="79.2604%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="79.0104%" y="405" width="0.1596%" height="15" fill="rgb(214,8,31)" fg:x="990" fg:w="2"/><text x="79.2604%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="79.0104%" y="389" width="0.1596%" height="15" fill="rgb(220,32,32)" fg:x="990" fg:w="2"/><text x="79.2604%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="79.0104%" y="373" width="0.1596%" height="15" fill="rgb(237,172,34)" fg:x="990" fg:w="2"/><text x="79.2604%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="79.0104%" y="357" width="0.1596%" height="15" fill="rgb(240,209,5)" fg:x="990" fg:w="2"/><text x="79.2604%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="79.0104%" y="341" width="0.1596%" height="15" fill="rgb(221,219,1)" fg:x="990" fg:w="2"/><text x="79.2604%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.0902%" y="325" width="0.0798%" height="15" fill="rgb(237,90,36)" fg:x="991" fg:w="1"/><text x="79.3402%" y="335.50"></text></g><g><title>core::iter::adapters::try_process (10 samples, 0.80%)</title><rect x="78.4517%" y="581" width="0.7981%" height="15" fill="rgb(245,14,51)" fg:x="983" fg:w="10"/><text x="78.7017%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.80%)</title><rect x="78.4517%" y="565" width="0.7981%" height="15" fill="rgb(211,71,49)" fg:x="983" fg:w="10"/><text x="78.7017%" y="575.50"></text></g><g><title>plugins_core::build::QuickThing::make (10 samples, 0.80%)</title><rect x="78.4517%" y="549" width="0.7981%" height="15" fill="rgb(230,223,9)" fg:x="983" fg:w="10"/><text x="78.7017%" y="559.50"></text></g><g><title>plugins_core::build::Build::leads_to (9 samples, 0.72%)</title><rect x="78.5315%" y="533" width="0.7183%" height="15" fill="rgb(212,33,31)" fg:x="984" fg:w="9"/><text x="78.7815%" y="543.50"></text></g><g><title>plugins_core::tools::leads_to (5 samples, 0.40%)</title><rect x="78.8508%" y="517" width="0.3990%" height="15" fill="rgb(218,141,5)" fg:x="988" fg:w="5"/><text x="79.1008%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="79.1700%" y="501" width="0.0798%" height="15" fill="rgb(239,194,8)" fg:x="992" fg:w="1"/><text x="79.4200%" y="511.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="79.1700%" y="485" width="0.0798%" height="15" fill="rgb(225,119,29)" fg:x="992" fg:w="1"/><text x="79.4200%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="79.1700%" y="469" width="0.0798%" height="15" fill="rgb(233,32,3)" fg:x="992" fg:w="1"/><text x="79.4200%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="79.2498%" y="565" width="0.2394%" height="15" fill="rgb(248,126,40)" fg:x="993" fg:w="3"/><text x="79.4998%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="79.2498%" y="549" width="0.2394%" height="15" fill="rgb(213,102,53)" fg:x="993" fg:w="3"/><text x="79.4998%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="79.2498%" y="533" width="0.2394%" height="15" fill="rgb(212,69,15)" fg:x="993" fg:w="3"/><text x="79.4998%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="79.2498%" y="517" width="0.2394%" height="15" fill="rgb(253,39,34)" fg:x="993" fg:w="3"/><text x="79.4998%" y="527.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="79.5690%" y="549" width="0.0798%" height="15" fill="rgb(205,189,54)" fg:x="997" fg:w="1"/><text x="79.8190%" y="559.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="79.5690%" y="533" width="0.0798%" height="15" fill="rgb(234,229,45)" fg:x="997" fg:w="1"/><text x="79.8190%" y="543.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="79.5690%" y="517" width="0.0798%" height="15" fill="rgb(243,79,48)" fg:x="997" fg:w="1"/><text x="79.8190%" y="527.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="79.5690%" y="501" width="0.0798%" height="15" fill="rgb(206,71,50)" fg:x="997" fg:w="1"/><text x="79.8190%" y="511.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="79.5690%" y="485" width="0.0798%" height="15" fill="rgb(209,32,17)" fg:x="997" fg:w="1"/><text x="79.8190%" y="495.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="79.5690%" y="469" width="0.0798%" height="15" fill="rgb(219,229,6)" fg:x="997" fg:w="1"/><text x="79.8190%" y="479.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="79.5690%" y="453" width="0.0798%" height="15" fill="rgb(226,25,27)" fg:x="997" fg:w="1"/><text x="79.8190%" y="463.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="79.5690%" y="437" width="0.0798%" height="15" fill="rgb(218,185,23)" fg:x="997" fg:w="1"/><text x="79.8190%" y="447.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="79.6488%" y="485" width="0.0798%" height="15" fill="rgb(242,123,5)" fg:x="998" fg:w="1"/><text x="79.8988%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.6488%" y="469" width="0.0798%" height="15" fill="rgb(215,53,19)" fg:x="998" fg:w="1"/><text x="79.8988%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.6488%" y="453" width="0.0798%" height="15" fill="rgb(233,20,30)" fg:x="998" fg:w="1"/><text x="79.8988%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="79.6488%" y="437" width="0.0798%" height="15" fill="rgb(209,67,20)" fg:x="998" fg:w="1"/><text x="79.8988%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="79.6488%" y="421" width="0.0798%" height="15" fill="rgb(227,181,50)" fg:x="998" fg:w="1"/><text x="79.8988%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="79.6488%" y="405" width="0.0798%" height="15" fill="rgb(252,75,38)" fg:x="998" fg:w="1"/><text x="79.8988%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.6488%" y="389" width="0.0798%" height="15" fill="rgb(235,9,33)" fg:x="998" fg:w="1"/><text x="79.8988%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.6488%" y="373" width="0.0798%" height="15" fill="rgb(208,87,30)" fg:x="998" fg:w="1"/><text x="79.8988%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="79.6488%" y="357" width="0.0798%" height="15" fill="rgb(215,199,39)" fg:x="998" fg:w="1"/><text x="79.8988%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="79.6488%" y="341" width="0.0798%" height="15" fill="rgb(246,208,12)" fg:x="998" fg:w="1"/><text x="79.8988%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="79.6488%" y="325" width="0.0798%" height="15" fill="rgb(206,195,10)" fg:x="998" fg:w="1"/><text x="79.8988%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="79.6488%" y="309" width="0.0798%" height="15" fill="rgb(244,1,30)" fg:x="998" fg:w="1"/><text x="79.8988%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.6488%" y="293" width="0.0798%" height="15" fill="rgb(230,83,5)" fg:x="998" fg:w="1"/><text x="79.8988%" y="303.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="79.6488%" y="517" width="0.1596%" height="15" fill="rgb(239,62,17)" fg:x="998" fg:w="2"/><text x="79.8988%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="79.6488%" y="501" width="0.1596%" height="15" fill="rgb(252,193,41)" fg:x="998" fg:w="2"/><text x="79.8988%" y="511.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="79.7287%" y="485" width="0.0798%" height="15" fill="rgb(216,142,19)" fg:x="999" fg:w="1"/><text x="79.9787%" y="495.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="79.7287%" y="469" width="0.0798%" height="15" fill="rgb(240,81,38)" fg:x="999" fg:w="1"/><text x="79.9787%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.7287%" y="453" width="0.0798%" height="15" fill="rgb(240,109,40)" fg:x="999" fg:w="1"/><text x="79.9787%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="79.8883%" y="469" width="0.0798%" height="15" fill="rgb(230,123,10)" fg:x="1001" fg:w="1"/><text x="80.1383%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.8883%" y="453" width="0.0798%" height="15" fill="rgb(253,42,32)" fg:x="1001" fg:w="1"/><text x="80.1383%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="79.9681%" y="453" width="0.1596%" height="15" fill="rgb(218,154,8)" fg:x="1002" fg:w="2"/><text x="80.2181%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="79.9681%" y="437" width="0.1596%" height="15" fill="rgb(216,197,10)" fg:x="1002" fg:w="2"/><text x="80.2181%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="79.9681%" y="421" width="0.1596%" height="15" fill="rgb(223,107,12)" fg:x="1002" fg:w="2"/><text x="80.2181%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.0479%" y="405" width="0.0798%" height="15" fill="rgb(241,174,42)" fg:x="1003" fg:w="1"/><text x="80.2979%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="80.1277%" y="437" width="0.1596%" height="15" fill="rgb(231,78,20)" fg:x="1004" fg:w="2"/><text x="80.3777%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="80.1277%" y="421" width="0.1596%" height="15" fill="rgb(230,208,49)" fg:x="1004" fg:w="2"/><text x="80.3777%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="80.1277%" y="405" width="0.1596%" height="15" fill="rgb(238,11,34)" fg:x="1004" fg:w="2"/><text x="80.3777%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="80.1277%" y="389" width="0.1596%" height="15" fill="rgb(210,130,26)" fg:x="1004" fg:w="2"/><text x="80.3777%" y="399.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="80.3671%" y="341" width="0.0798%" height="15" fill="rgb(242,131,11)" fg:x="1007" fg:w="1"/><text x="80.6171%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.08%)</title><rect x="80.3671%" y="325" width="0.0798%" height="15" fill="rgb(237,38,28)" fg:x="1007" fg:w="1"/><text x="80.6171%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="80.2873%" y="437" width="0.2394%" height="15" fill="rgb(244,180,43)" fg:x="1006" fg:w="3"/><text x="80.5373%" y="447.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="80.2873%" y="421" width="0.2394%" height="15" fill="rgb(214,171,19)" fg:x="1006" fg:w="3"/><text x="80.5373%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="80.3671%" y="405" width="0.1596%" height="15" fill="rgb(252,101,45)" fg:x="1007" fg:w="2"/><text x="80.6171%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="80.3671%" y="389" width="0.1596%" height="15" fill="rgb(211,96,33)" fg:x="1007" fg:w="2"/><text x="80.6171%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="80.3671%" y="373" width="0.1596%" height="15" fill="rgb(207,80,25)" fg:x="1007" fg:w="2"/><text x="80.6171%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="80.3671%" y="357" width="0.1596%" height="15" fill="rgb(225,15,35)" fg:x="1007" fg:w="2"/><text x="80.6171%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.4469%" y="341" width="0.0798%" height="15" fill="rgb(214,93,43)" fg:x="1008" fg:w="1"/><text x="80.6969%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.5267%" y="405" width="0.0798%" height="15" fill="rgb(248,42,37)" fg:x="1009" fg:w="1"/><text x="80.7767%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="80.6065%" y="373" width="0.1596%" height="15" fill="rgb(217,135,32)" fg:x="1010" fg:w="2"/><text x="80.8565%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="80.6065%" y="357" width="0.1596%" height="15" fill="rgb(216,74,28)" fg:x="1010" fg:w="2"/><text x="80.8565%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="80.6065%" y="341" width="0.1596%" height="15" fill="rgb(247,108,16)" fg:x="1010" fg:w="2"/><text x="80.8565%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.6864%" y="325" width="0.0798%" height="15" fill="rgb(205,219,30)" fg:x="1011" fg:w="1"/><text x="80.9364%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.6864%" y="309" width="0.0798%" height="15" fill="rgb(241,122,9)" fg:x="1011" fg:w="1"/><text x="80.9364%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.6864%" y="293" width="0.0798%" height="15" fill="rgb(216,148,50)" fg:x="1011" fg:w="1"/><text x="80.9364%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.6864%" y="277" width="0.0798%" height="15" fill="rgb(226,154,2)" fg:x="1011" fg:w="1"/><text x="80.9364%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.7662%" y="373" width="0.0798%" height="15" fill="rgb(220,128,1)" fg:x="1012" fg:w="1"/><text x="81.0162%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="80.6065%" y="405" width="0.3192%" height="15" fill="rgb(245,185,29)" fg:x="1010" fg:w="4"/><text x="80.8565%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="80.6065%" y="389" width="0.3192%" height="15" fill="rgb(243,161,2)" fg:x="1010" fg:w="4"/><text x="80.8565%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.8460%" y="373" width="0.0798%" height="15" fill="rgb(249,215,17)" fg:x="1013" fg:w="1"/><text x="81.0960%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.8460%" y="357" width="0.0798%" height="15" fill="rgb(237,67,11)" fg:x="1013" fg:w="1"/><text x="81.0960%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="80.5267%" y="421" width="0.4789%" height="15" fill="rgb(239,17,24)" fg:x="1009" fg:w="6"/><text x="80.7767%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.9258%" y="405" width="0.0798%" height="15" fill="rgb(215,97,29)" fg:x="1014" fg:w="1"/><text x="81.1758%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.9258%" y="389" width="0.0798%" height="15" fill="rgb(253,228,42)" fg:x="1014" fg:w="1"/><text x="81.1758%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.9258%" y="373" width="0.0798%" height="15" fill="rgb(240,85,2)" fg:x="1014" fg:w="1"/><text x="81.1758%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="80.5267%" y="437" width="0.5587%" height="15" fill="rgb(214,155,4)" fg:x="1009" fg:w="7"/><text x="80.7767%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.0056%" y="421" width="0.0798%" height="15" fill="rgb(247,120,22)" fg:x="1015" fg:w="1"/><text x="81.2556%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.0056%" y="405" width="0.0798%" height="15" fill="rgb(211,208,6)" fg:x="1015" fg:w="1"/><text x="81.2556%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="80.1277%" y="453" width="1.0375%" height="15" fill="rgb(235,99,41)" fg:x="1004" fg:w="13"/><text x="80.3777%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.0854%" y="437" width="0.0798%" height="15" fill="rgb(223,28,8)" fg:x="1016" fg:w="1"/><text x="81.3354%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (21 samples, 1.68%)</title><rect x="79.8883%" y="485" width="1.6760%" height="15" fill="rgb(212,71,20)" fg:x="1001" fg:w="21"/><text x="80.1383%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.60%)</title><rect x="79.9681%" y="469" width="1.5962%" height="15" fill="rgb(206,85,3)" fg:x="1002" fg:w="20"/><text x="80.2181%" y="479.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="81.1652%" y="453" width="0.3990%" height="15" fill="rgb(244,180,11)" fg:x="1017" fg:w="5"/><text x="81.4152%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="81.3248%" y="437" width="0.2394%" height="15" fill="rgb(223,16,21)" fg:x="1019" fg:w="3"/><text x="81.5748%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="81.4046%" y="421" width="0.1596%" height="15" fill="rgb(238,85,42)" fg:x="1020" fg:w="2"/><text x="81.6546%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.4844%" y="405" width="0.0798%" height="15" fill="rgb(205,85,8)" fg:x="1021" fg:w="1"/><text x="81.7344%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.5642%" y="453" width="0.0798%" height="15" fill="rgb(217,190,15)" fg:x="1022" fg:w="1"/><text x="81.8142%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.5642%" y="437" width="0.0798%" height="15" fill="rgb(243,192,23)" fg:x="1022" fg:w="1"/><text x="81.8142%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.5642%" y="485" width="0.1596%" height="15" fill="rgb(223,220,37)" fg:x="1022" fg:w="2"/><text x="81.8142%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="81.5642%" y="469" width="0.1596%" height="15" fill="rgb(208,41,17)" fg:x="1022" fg:w="2"/><text x="81.8142%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.6441%" y="453" width="0.0798%" height="15" fill="rgb(224,188,7)" fg:x="1023" fg:w="1"/><text x="81.8941%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="81.7239%" y="469" width="0.0798%" height="15" fill="rgb(236,16,50)" fg:x="1024" fg:w="1"/><text x="81.9739%" y="479.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="81.7239%" y="453" width="0.0798%" height="15" fill="rgb(238,6,24)" fg:x="1024" fg:w="1"/><text x="81.9739%" y="463.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="81.7239%" y="437" width="0.0798%" height="15" fill="rgb(253,67,45)" fg:x="1024" fg:w="1"/><text x="81.9739%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="81.7239%" y="421" width="0.0798%" height="15" fill="rgb(210,89,32)" fg:x="1024" fg:w="1"/><text x="81.9739%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="81.8037%" y="437" width="0.1596%" height="15" fill="rgb(208,89,9)" fg:x="1025" fg:w="2"/><text x="82.0537%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.9633%" y="437" width="0.0798%" height="15" fill="rgb(222,180,44)" fg:x="1027" fg:w="1"/><text x="82.2133%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="82.0431%" y="437" width="0.0798%" height="15" fill="rgb(250,181,46)" fg:x="1028" fg:w="1"/><text x="82.2931%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="82.0431%" y="421" width="0.0798%" height="15" fill="rgb(210,190,26)" fg:x="1028" fg:w="1"/><text x="82.2931%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="82.1229%" y="437" width="0.0798%" height="15" fill="rgb(253,49,13)" fg:x="1029" fg:w="1"/><text x="82.3729%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.1229%" y="421" width="0.0798%" height="15" fill="rgb(240,184,42)" fg:x="1029" fg:w="1"/><text x="82.3729%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.1229%" y="405" width="0.0798%" height="15" fill="rgb(246,59,37)" fg:x="1029" fg:w="1"/><text x="82.3729%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="82.2027%" y="421" width="0.0798%" height="15" fill="rgb(207,134,54)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="82.2027%" y="437" width="0.3192%" height="15" fill="rgb(250,122,24)" fg:x="1030" fg:w="4"/><text x="82.4527%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="82.2825%" y="421" width="0.2394%" height="15" fill="rgb(239,206,3)" fg:x="1031" fg:w="3"/><text x="82.5325%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="82.2825%" y="405" width="0.2394%" height="15" fill="rgb(253,220,32)" fg:x="1031" fg:w="3"/><text x="82.5325%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="82.3623%" y="389" width="0.1596%" height="15" fill="rgb(209,217,48)" fg:x="1032" fg:w="2"/><text x="82.6123%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.4421%" y="373" width="0.0798%" height="15" fill="rgb(242,91,39)" fg:x="1033" fg:w="1"/><text x="82.6921%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.6018%" y="389" width="0.0798%" height="15" fill="rgb(228,4,13)" fg:x="1035" fg:w="1"/><text x="82.8518%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.6018%" y="373" width="0.0798%" height="15" fill="rgb(223,133,4)" fg:x="1035" fg:w="1"/><text x="82.8518%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.6018%" y="357" width="0.0798%" height="15" fill="rgb(215,105,30)" fg:x="1035" fg:w="1"/><text x="82.8518%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.6816%" y="357" width="0.0798%" height="15" fill="rgb(230,9,4)" fg:x="1036" fg:w="1"/><text x="82.9316%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.6816%" y="341" width="0.0798%" height="15" fill="rgb(248,15,2)" fg:x="1036" fg:w="1"/><text x="82.9316%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="83.0008%" y="309" width="0.0798%" height="15" fill="rgb(208,210,22)" fg:x="1040" fg:w="1"/><text x="83.2508%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="82.6816%" y="373" width="0.5587%" height="15" fill="rgb(208,112,41)" fg:x="1036" fg:w="7"/><text x="82.9316%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="82.7614%" y="357" width="0.4789%" height="15" fill="rgb(232,83,14)" fg:x="1037" fg:w="6"/><text x="83.0114%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="82.8412%" y="341" width="0.3990%" height="15" fill="rgb(229,65,11)" fg:x="1038" fg:w="5"/><text x="83.0912%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="82.9210%" y="325" width="0.3192%" height="15" fill="rgb(228,126,24)" fg:x="1039" fg:w="4"/><text x="83.1710%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="83.0806%" y="309" width="0.1596%" height="15" fill="rgb(218,66,33)" fg:x="1041" fg:w="2"/><text x="83.3306%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="83.0806%" y="293" width="0.1596%" height="15" fill="rgb(251,49,52)" fg:x="1041" fg:w="2"/><text x="83.3306%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="83.0806%" y="277" width="0.1596%" height="15" fill="rgb(219,46,37)" fg:x="1041" fg:w="2"/><text x="83.3306%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="82.6018%" y="405" width="0.7183%" height="15" fill="rgb(213,53,49)" fg:x="1035" fg:w="9"/><text x="82.8518%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="82.6816%" y="389" width="0.6385%" height="15" fill="rgb(214,134,1)" fg:x="1036" fg:w="8"/><text x="82.9316%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.2402%" y="373" width="0.0798%" height="15" fill="rgb(208,139,43)" fg:x="1043" fg:w="1"/><text x="83.4902%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.80%)</title><rect x="82.6018%" y="421" width="0.7981%" height="15" fill="rgb(231,105,35)" fg:x="1035" fg:w="10"/><text x="82.8518%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="83.3200%" y="405" width="0.0798%" height="15" fill="rgb(247,189,9)" fg:x="1044" fg:w="1"/><text x="83.5700%" y="415.50"></text></g><g><title>engine::session::Session::flush (53 samples, 4.23%)</title><rect x="79.2498%" y="581" width="4.2298%" height="15" fill="rgb(252,48,51)" fg:x="993" fg:w="53"/><text x="79.4998%" y="591.50">engin..</text></g><g><title>engine::session::Session::save_changes (50 samples, 3.99%)</title><rect x="79.4892%" y="565" width="3.9904%" height="15" fill="rgb(209,121,1)" fg:x="996" fg:w="50"/><text x="79.7392%" y="575.50">engi..</text></g><g><title>engine::session::state::State::close (48 samples, 3.83%)</title><rect x="79.6488%" y="549" width="3.8308%" height="15" fill="rgb(231,40,26)" fg:x="998" fg:w="48"/><text x="79.8988%" y="559.50">engi..</text></g><g><title>engine::session::state::State::flush_entities (48 samples, 3.83%)</title><rect x="79.6488%" y="533" width="3.8308%" height="15" fill="rgb(251,8,13)" fg:x="998" fg:w="48"/><text x="79.8988%" y="543.50">engi..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (46 samples, 3.67%)</title><rect x="79.8085%" y="517" width="3.6712%" height="15" fill="rgb(231,110,2)" fg:x="1000" fg:w="46"/><text x="80.0585%" y="527.50">engi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (46 samples, 3.67%)</title><rect x="79.8085%" y="501" width="3.6712%" height="15" fill="rgb(216,153,22)" fg:x="1000" fg:w="46"/><text x="80.0585%" y="511.50">engi..</text></g><g><title>kernel::model::any_entity_changes (22 samples, 1.76%)</title><rect x="81.7239%" y="485" width="1.7558%" height="15" fill="rgb(249,116,49)" fg:x="1024" fg:w="22"/><text x="81.9739%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (21 samples, 1.68%)</title><rect x="81.8037%" y="469" width="1.6760%" height="15" fill="rgb(230,89,2)" fg:x="1025" fg:w="21"/><text x="82.0537%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (21 samples, 1.68%)</title><rect x="81.8037%" y="453" width="1.6760%" height="15" fill="rgb(231,125,23)" fg:x="1025" fg:w="21"/><text x="82.0537%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.96%)</title><rect x="82.5219%" y="437" width="0.9577%" height="15" fill="rgb(212,217,18)" fg:x="1034" fg:w="12"/><text x="82.7719%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.3998%" y="421" width="0.0798%" height="15" fill="rgb(210,21,33)" fg:x="1045" fg:w="1"/><text x="83.6498%" y="431.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="83.4796%" y="581" width="0.1596%" height="15" fill="rgb(241,97,9)" fg:x="1046" fg:w="2"/><text x="83.7296%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="83.5595%" y="565" width="0.0798%" height="15" fill="rgb(221,35,31)" fg:x="1047" fg:w="1"/><text x="83.8095%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="83.5595%" y="549" width="0.0798%" height="15" fill="rgb(251,23,23)" fg:x="1047" fg:w="1"/><text x="83.8095%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.5595%" y="533" width="0.0798%" height="15" fill="rgb(227,165,2)" fg:x="1047" fg:w="1"/><text x="83.8095%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.5595%" y="517" width="0.0798%" height="15" fill="rgb(242,24,2)" fg:x="1047" fg:w="1"/><text x="83.8095%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.5595%" y="501" width="0.0798%" height="15" fill="rgb(242,138,51)" fg:x="1047" fg:w="1"/><text x="83.8095%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.5595%" y="485" width="0.0798%" height="15" fill="rgb(220,219,5)" fg:x="1047" fg:w="1"/><text x="83.8095%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.5595%" y="469" width="0.0798%" height="15" fill="rgb(247,53,29)" fg:x="1047" fg:w="1"/><text x="83.8095%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.5595%" y="453" width="0.0798%" height="15" fill="rgb(233,43,39)" fg:x="1047" fg:w="1"/><text x="83.8095%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.5595%" y="437" width="0.0798%" height="15" fill="rgb(230,128,54)" fg:x="1047" fg:w="1"/><text x="83.8095%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.5595%" y="421" width="0.0798%" height="15" fill="rgb(218,20,12)" fg:x="1047" fg:w="1"/><text x="83.8095%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="83.5595%" y="405" width="0.0798%" height="15" fill="rgb(206,51,14)" fg:x="1047" fg:w="1"/><text x="83.8095%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.5595%" y="389" width="0.0798%" height="15" fill="rgb(223,16,35)" fg:x="1047" fg:w="1"/><text x="83.8095%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="83.7191%" y="549" width="0.2394%" height="15" fill="rgb(226,165,37)" fg:x="1049" fg:w="3"/><text x="83.9691%" y="559.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="83.7191%" y="533" width="0.2394%" height="15" fill="rgb(240,26,21)" fg:x="1049" fg:w="3"/><text x="83.9691%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="83.7191%" y="517" width="0.2394%" height="15" fill="rgb(240,72,46)" fg:x="1049" fg:w="3"/><text x="83.9691%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.7989%" y="501" width="0.1596%" height="15" fill="rgb(211,33,41)" fg:x="1050" fg:w="2"/><text x="84.0489%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.7989%" y="485" width="0.1596%" height="15" fill="rgb(224,157,46)" fg:x="1050" fg:w="2"/><text x="84.0489%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.7989%" y="469" width="0.1596%" height="15" fill="rgb(223,59,19)" fg:x="1050" fg:w="2"/><text x="84.0489%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="83.7989%" y="453" width="0.1596%" height="15" fill="rgb(239,187,1)" fg:x="1050" fg:w="2"/><text x="84.0489%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="83.7989%" y="437" width="0.1596%" height="15" fill="rgb(226,95,9)" fg:x="1050" fg:w="2"/><text x="84.0489%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="83.7989%" y="421" width="0.1596%" height="15" fill="rgb(234,61,54)" fg:x="1050" fg:w="2"/><text x="84.0489%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="83.7989%" y="405" width="0.1596%" height="15" fill="rgb(205,209,47)" fg:x="1050" fg:w="2"/><text x="84.0489%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="83.7989%" y="389" width="0.1596%" height="15" fill="rgb(228,7,43)" fg:x="1050" fg:w="2"/><text x="84.0489%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="83.7989%" y="373" width="0.1596%" height="15" fill="rgb(240,217,52)" fg:x="1050" fg:w="2"/><text x="84.0489%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="83.7989%" y="357" width="0.1596%" height="15" fill="rgb(211,178,21)" fg:x="1050" fg:w="2"/><text x="84.0489%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="83.7989%" y="341" width="0.1596%" height="15" fill="rgb(205,25,34)" fg:x="1050" fg:w="2"/><text x="84.0489%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="83.7989%" y="325" width="0.1596%" height="15" fill="rgb(209,57,11)" fg:x="1050" fg:w="2"/><text x="84.0489%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="83.7989%" y="309" width="0.1596%" height="15" fill="rgb(221,99,2)" fg:x="1050" fg:w="2"/><text x="84.0489%" y="319.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="83.7989%" y="293" width="0.1596%" height="15" fill="rgb(232,79,22)" fg:x="1050" fg:w="2"/><text x="84.0489%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="83.7989%" y="277" width="0.1596%" height="15" fill="rgb(221,145,32)" fg:x="1050" fg:w="2"/><text x="84.0489%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="83.9585%" y="549" width="0.1596%" height="15" fill="rgb(236,133,36)" fg:x="1052" fg:w="2"/><text x="84.2085%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="84.0383%" y="533" width="0.0798%" height="15" fill="rgb(208,224,44)" fg:x="1053" fg:w="1"/><text x="84.2883%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="84.1181%" y="533" width="0.0798%" height="15" fill="rgb(235,143,15)" fg:x="1054" fg:w="1"/><text x="84.3681%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.1181%" y="517" width="0.0798%" height="15" fill="rgb(249,83,27)" fg:x="1054" fg:w="1"/><text x="84.3681%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.1181%" y="501" width="0.0798%" height="15" fill="rgb(238,226,19)" fg:x="1054" fg:w="1"/><text x="84.3681%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.2777%" y="517" width="0.0798%" height="15" fill="rgb(226,206,27)" fg:x="1056" fg:w="1"/><text x="84.5277%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.2777%" y="501" width="0.0798%" height="15" fill="rgb(251,182,9)" fg:x="1056" fg:w="1"/><text x="84.5277%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.2777%" y="485" width="0.0798%" height="15" fill="rgb(212,140,41)" fg:x="1056" fg:w="1"/><text x="84.5277%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.2777%" y="469" width="0.0798%" height="15" fill="rgb(220,106,18)" fg:x="1056" fg:w="1"/><text x="84.5277%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.2777%" y="453" width="0.0798%" height="15" fill="rgb(252,46,41)" fg:x="1056" fg:w="1"/><text x="84.5277%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.2777%" y="437" width="0.0798%" height="15" fill="rgb(209,222,15)" fg:x="1056" fg:w="1"/><text x="84.5277%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.2777%" y="421" width="0.0798%" height="15" fill="rgb(233,83,50)" fg:x="1056" fg:w="1"/><text x="84.5277%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.2777%" y="405" width="0.0798%" height="15" fill="rgb(205,212,0)" fg:x="1056" fg:w="1"/><text x="84.5277%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.2777%" y="389" width="0.0798%" height="15" fill="rgb(235,117,51)" fg:x="1056" fg:w="1"/><text x="84.5277%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.2777%" y="373" width="0.0798%" height="15" fill="rgb(233,133,48)" fg:x="1056" fg:w="1"/><text x="84.5277%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.2777%" y="357" width="0.0798%" height="15" fill="rgb(219,3,2)" fg:x="1056" fg:w="1"/><text x="84.5277%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.2777%" y="341" width="0.0798%" height="15" fill="rgb(225,80,52)" fg:x="1056" fg:w="1"/><text x="84.5277%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.2777%" y="325" width="0.0798%" height="15" fill="rgb(235,195,42)" fg:x="1056" fg:w="1"/><text x="84.5277%" y="335.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (5 samples, 0.40%)</title><rect x="84.1181%" y="549" width="0.3990%" height="15" fill="rgb(240,207,46)" fg:x="1054" fg:w="5"/><text x="84.3681%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="84.1979%" y="533" width="0.3192%" height="15" fill="rgb(236,112,50)" fg:x="1055" fg:w="4"/><text x="84.4479%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="84.3575%" y="517" width="0.1596%" height="15" fill="rgb(249,151,27)" fg:x="1057" fg:w="2"/><text x="84.6075%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="84.3575%" y="501" width="0.1596%" height="15" fill="rgb(253,223,52)" fg:x="1057" fg:w="2"/><text x="84.6075%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.4374%" y="485" width="0.0798%" height="15" fill="rgb(215,55,33)" fg:x="1058" fg:w="1"/><text x="84.6874%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.5172%" y="421" width="0.0798%" height="15" fill="rgb(207,24,17)" fg:x="1059" fg:w="1"/><text x="84.7672%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.5172%" y="405" width="0.0798%" height="15" fill="rgb(218,169,32)" fg:x="1059" fg:w="1"/><text x="84.7672%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.5172%" y="437" width="0.1596%" height="15" fill="rgb(209,210,6)" fg:x="1059" fg:w="2"/><text x="84.7672%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.5970%" y="421" width="0.0798%" height="15" fill="rgb(225,208,8)" fg:x="1060" fg:w="1"/><text x="84.8470%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="84.5172%" y="469" width="0.2394%" height="15" fill="rgb(238,14,32)" fg:x="1059" fg:w="3"/><text x="84.7672%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="84.5172%" y="453" width="0.2394%" height="15" fill="rgb(211,137,3)" fg:x="1059" fg:w="3"/><text x="84.7672%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.6768%" y="437" width="0.0798%" height="15" fill="rgb(207,171,19)" fg:x="1061" fg:w="1"/><text x="84.9268%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.12%)</title><rect x="83.7191%" y="565" width="1.1173%" height="15" fill="rgb(250,80,8)" fg:x="1049" fg:w="14"/><text x="83.9691%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="84.5172%" y="549" width="0.3192%" height="15" fill="rgb(209,103,53)" fg:x="1059" fg:w="4"/><text x="84.7672%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="84.5172%" y="533" width="0.3192%" height="15" fill="rgb(233,198,10)" fg:x="1059" fg:w="4"/><text x="84.7672%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="84.5172%" y="517" width="0.3192%" height="15" fill="rgb(236,125,25)" fg:x="1059" fg:w="4"/><text x="84.7672%" y="527.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="84.5172%" y="501" width="0.3192%" height="15" fill="rgb(254,182,48)" fg:x="1059" fg:w="4"/><text x="84.7672%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="84.5172%" y="485" width="0.3192%" height="15" fill="rgb(216,108,44)" fg:x="1059" fg:w="4"/><text x="84.7672%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.7566%" y="469" width="0.0798%" height="15" fill="rgb(222,72,39)" fg:x="1062" fg:w="1"/><text x="85.0066%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.7566%" y="453" width="0.0798%" height="15" fill="rgb(252,70,39)" fg:x="1062" fg:w="1"/><text x="85.0066%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.7566%" y="437" width="0.0798%" height="15" fill="rgb(243,99,34)" fg:x="1062" fg:w="1"/><text x="85.0066%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.7566%" y="421" width="0.0798%" height="15" fill="rgb(252,109,12)" fg:x="1062" fg:w="1"/><text x="85.0066%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.7566%" y="405" width="0.0798%" height="15" fill="rgb(211,186,10)" fg:x="1062" fg:w="1"/><text x="85.0066%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.7566%" y="389" width="0.0798%" height="15" fill="rgb(246,90,8)" fg:x="1062" fg:w="1"/><text x="85.0066%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.8364%" y="469" width="0.0798%" height="15" fill="rgb(226,91,24)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.8364%" y="453" width="0.0798%" height="15" fill="rgb(216,28,44)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="84.8364%" y="517" width="0.2394%" height="15" fill="rgb(229,36,0)" fg:x="1063" fg:w="3"/><text x="85.0864%" y="527.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="84.8364%" y="501" width="0.2394%" height="15" fill="rgb(245,97,18)" fg:x="1063" fg:w="3"/><text x="85.0864%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="84.8364%" y="485" width="0.2394%" height="15" fill="rgb(241,97,54)" fg:x="1063" fg:w="3"/><text x="85.0864%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="84.9162%" y="469" width="0.1596%" height="15" fill="rgb(234,125,17)" fg:x="1064" fg:w="2"/><text x="85.1662%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="84.9162%" y="453" width="0.1596%" height="15" fill="rgb(228,172,39)" fg:x="1064" fg:w="2"/><text x="85.1662%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="84.9162%" y="437" width="0.1596%" height="15" fill="rgb(227,169,1)" fg:x="1064" fg:w="2"/><text x="85.1662%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="84.9162%" y="421" width="0.1596%" height="15" fill="rgb(206,13,35)" fg:x="1064" fg:w="2"/><text x="85.1662%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="84.9162%" y="405" width="0.1596%" height="15" fill="rgb(211,117,30)" fg:x="1064" fg:w="2"/><text x="85.1662%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.9960%" y="389" width="0.0798%" height="15" fill="rgb(230,198,4)" fg:x="1065" fg:w="1"/><text x="85.2460%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.0758%" y="469" width="0.0798%" height="15" fill="rgb(213,87,54)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.0758%" y="453" width="0.0798%" height="15" fill="rgb(248,43,22)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.0758%" y="437" width="0.0798%" height="15" fill="rgb(213,175,48)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.0758%" y="421" width="0.0798%" height="15" fill="rgb(252,55,9)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.0758%" y="405" width="0.0798%" height="15" fill="rgb(231,72,33)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.0758%" y="389" width="0.0798%" height="15" fill="rgb(213,2,54)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.0758%" y="373" width="0.0798%" height="15" fill="rgb(208,88,25)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.0758%" y="357" width="0.0798%" height="15" fill="rgb(215,117,13)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.0758%" y="341" width="0.0798%" height="15" fill="rgb(243,147,21)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.0758%" y="325" width="0.0798%" height="15" fill="rgb(208,215,36)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.0758%" y="309" width="0.0798%" height="15" fill="rgb(238,187,24)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.0758%" y="293" width="0.0798%" height="15" fill="rgb(214,173,11)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.0758%" y="277" width="0.0798%" height="15" fill="rgb(222,71,20)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.0758%" y="261" width="0.0798%" height="15" fill="rgb(242,125,4)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="271.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="85.0758%" y="245" width="0.0798%" height="15" fill="rgb(217,101,52)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.1556%" y="469" width="0.0798%" height="15" fill="rgb(223,2,50)" fg:x="1067" fg:w="1"/><text x="85.4056%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="84.8364%" y="549" width="0.4789%" height="15" fill="rgb(225,197,9)" fg:x="1063" fg:w="6"/><text x="85.0864%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="84.8364%" y="533" width="0.4789%" height="15" fill="rgb(234,76,27)" fg:x="1063" fg:w="6"/><text x="85.0864%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="85.0758%" y="517" width="0.2394%" height="15" fill="rgb(213,161,26)" fg:x="1066" fg:w="3"/><text x="85.3258%" y="527.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="85.0758%" y="501" width="0.2394%" height="15" fill="rgb(210,228,2)" fg:x="1066" fg:w="3"/><text x="85.3258%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="85.0758%" y="485" width="0.2394%" height="15" fill="rgb(235,4,16)" fg:x="1066" fg:w="3"/><text x="85.3258%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.2354%" y="469" width="0.0798%" height="15" fill="rgb(235,83,42)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.2354%" y="453" width="0.0798%" height="15" fill="rgb(207,116,39)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.2354%" y="437" width="0.0798%" height="15" fill="rgb(253,206,9)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="85.3152%" y="549" width="0.0798%" height="15" fill="rgb(234,32,47)" fg:x="1069" fg:w="1"/><text x="85.5652%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.3152%" y="533" width="0.0798%" height="15" fill="rgb(247,40,39)" fg:x="1069" fg:w="1"/><text x="85.5652%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.3152%" y="517" width="0.0798%" height="15" fill="rgb(236,199,13)" fg:x="1069" fg:w="1"/><text x="85.5652%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="85.3152%" y="501" width="0.0798%" height="15" fill="rgb(240,127,44)" fg:x="1069" fg:w="1"/><text x="85.5652%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.3951%" y="549" width="0.0798%" height="15" fill="rgb(248,220,47)" fg:x="1070" fg:w="1"/><text x="85.6451%" y="559.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="85.3951%" y="533" width="0.0798%" height="15" fill="rgb(240,78,9)" fg:x="1070" fg:w="1"/><text x="85.6451%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.3951%" y="517" width="0.0798%" height="15" fill="rgb(245,119,5)" fg:x="1070" fg:w="1"/><text x="85.6451%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="85.3951%" y="501" width="0.0798%" height="15" fill="rgb(238,175,31)" fg:x="1070" fg:w="1"/><text x="85.6451%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="85.3951%" y="485" width="0.0798%" height="15" fill="rgb(232,140,42)" fg:x="1070" fg:w="1"/><text x="85.6451%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.3951%" y="469" width="0.0798%" height="15" fill="rgb(218,179,7)" fg:x="1070" fg:w="1"/><text x="85.6451%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.3951%" y="453" width="0.0798%" height="15" fill="rgb(232,79,27)" fg:x="1070" fg:w="1"/><text x="85.6451%" y="463.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="85.4749%" y="485" width="0.0798%" height="15" fill="rgb(247,11,19)" fg:x="1071" fg:w="1"/><text x="85.7249%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.5547%" y="437" width="0.0798%" height="15" fill="rgb(216,171,54)" fg:x="1072" fg:w="1"/><text x="85.8047%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.5547%" y="421" width="0.0798%" height="15" fill="rgb(233,158,36)" fg:x="1072" fg:w="1"/><text x="85.8047%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.5547%" y="405" width="0.0798%" height="15" fill="rgb(215,48,47)" fg:x="1072" fg:w="1"/><text x="85.8047%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.5547%" y="389" width="0.0798%" height="15" fill="rgb(230,223,15)" fg:x="1072" fg:w="1"/><text x="85.8047%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="85.5547%" y="453" width="0.1596%" height="15" fill="rgb(234,49,19)" fg:x="1072" fg:w="2"/><text x="85.8047%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.6345%" y="437" width="0.0798%" height="15" fill="rgb(232,89,25)" fg:x="1073" fg:w="1"/><text x="85.8845%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.7143%" y="373" width="0.0798%" height="15" fill="rgb(237,206,28)" fg:x="1074" fg:w="1"/><text x="85.9643%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.7143%" y="357" width="0.0798%" height="15" fill="rgb(249,68,37)" fg:x="1074" fg:w="1"/><text x="85.9643%" y="367.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.40%)</title><rect x="85.4749%" y="549" width="0.3990%" height="15" fill="rgb(226,99,43)" fg:x="1071" fg:w="5"/><text x="85.7249%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="85.4749%" y="533" width="0.3990%" height="15" fill="rgb(216,46,28)" fg:x="1071" fg:w="5"/><text x="85.7249%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="85.4749%" y="517" width="0.3990%" height="15" fill="rgb(216,33,9)" fg:x="1071" fg:w="5"/><text x="85.7249%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="85.4749%" y="501" width="0.3990%" height="15" fill="rgb(216,129,4)" fg:x="1071" fg:w="5"/><text x="85.7249%" y="511.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="85.5547%" y="485" width="0.3192%" height="15" fill="rgb(216,106,3)" fg:x="1072" fg:w="4"/><text x="85.8047%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="85.5547%" y="469" width="0.3192%" height="15" fill="rgb(217,79,45)" fg:x="1072" fg:w="4"/><text x="85.8047%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="85.7143%" y="453" width="0.1596%" height="15" fill="rgb(239,98,13)" fg:x="1074" fg:w="2"/><text x="85.9643%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="85.7143%" y="437" width="0.1596%" height="15" fill="rgb(221,115,4)" fg:x="1074" fg:w="2"/><text x="85.9643%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="85.7143%" y="421" width="0.1596%" height="15" fill="rgb(215,85,0)" fg:x="1074" fg:w="2"/><text x="85.9643%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="85.7143%" y="405" width="0.1596%" height="15" fill="rgb(230,62,15)" fg:x="1074" fg:w="2"/><text x="85.9643%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="85.7143%" y="389" width="0.1596%" height="15" fill="rgb(247,162,2)" fg:x="1074" fg:w="2"/><text x="85.9643%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.7941%" y="373" width="0.0798%" height="15" fill="rgb(212,112,32)" fg:x="1075" fg:w="1"/><text x="86.0441%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.7941%" y="357" width="0.0798%" height="15" fill="rgb(216,137,9)" fg:x="1075" fg:w="1"/><text x="86.0441%" y="367.50"></text></g><g><title>plugins_core::build::Build::holding (30 samples, 2.39%)</title><rect x="83.6393%" y="581" width="2.3943%" height="15" fill="rgb(250,149,33)" fg:x="1048" fg:w="30"/><text x="83.8893%" y="591.50">pl..</text></g><g><title>plugins_core::tools::set_container (15 samples, 1.20%)</title><rect x="84.8364%" y="565" width="1.1971%" height="15" fill="rgb(246,124,31)" fg:x="1063" fg:w="15"/><text x="85.0864%" y="575.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="85.8739%" y="549" width="0.1596%" height="15" fill="rgb(216,210,22)" fg:x="1076" fg:w="2"/><text x="86.1239%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="85.8739%" y="533" width="0.1596%" height="15" fill="rgb(228,128,36)" fg:x="1076" fg:w="2"/><text x="86.1239%" y="543.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="85.8739%" y="517" width="0.1596%" height="15" fill="rgb(231,41,0)" fg:x="1076" fg:w="2"/><text x="86.1239%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="85.8739%" y="501" width="0.1596%" height="15" fill="rgb(232,61,26)" fg:x="1076" fg:w="2"/><text x="86.1239%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="85.8739%" y="485" width="0.1596%" height="15" fill="rgb(217,60,9)" fg:x="1076" fg:w="2"/><text x="86.1239%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.9537%" y="469" width="0.0798%" height="15" fill="rgb(233,41,35)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.9537%" y="453" width="0.0798%" height="15" fill="rgb(253,139,43)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="463.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="86.0335%" y="581" width="0.0798%" height="15" fill="rgb(245,100,51)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="86.0335%" y="565" width="0.0798%" height="15" fill="rgb(250,208,18)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="86.0335%" y="549" width="0.0798%" height="15" fill="rgb(245,33,2)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.0335%" y="533" width="0.0798%" height="15" fill="rgb(244,171,31)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.0335%" y="517" width="0.0798%" height="15" fill="rgb(229,1,43)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.0335%" y="501" width="0.0798%" height="15" fill="rgb(223,153,28)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0335%" y="485" width="0.0798%" height="15" fill="rgb(241,4,46)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.0335%" y="469" width="0.0798%" height="15" fill="rgb(230,81,11)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0335%" y="453" width="0.0798%" height="15" fill="rgb(253,204,39)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.0335%" y="437" width="0.0798%" height="15" fill="rgb(250,96,8)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0335%" y="421" width="0.0798%" height="15" fill="rgb(219,89,54)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.0335%" y="405" width="0.0798%" height="15" fill="rgb(235,136,39)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0335%" y="389" width="0.0798%" height="15" fill="rgb(230,155,37)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="399.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="86.1133%" y="581" width="0.1596%" height="15" fill="rgb(235,199,50)" fg:x="1079" fg:w="2"/><text x="86.3633%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="86.1133%" y="565" width="0.1596%" height="15" fill="rgb(227,81,32)" fg:x="1079" fg:w="2"/><text x="86.3633%" y="575.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="86.1133%" y="549" width="0.1596%" height="15" fill="rgb(225,6,28)" fg:x="1079" fg:w="2"/><text x="86.3633%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.1931%" y="533" width="0.0798%" height="15" fill="rgb(207,211,17)" fg:x="1080" fg:w="1"/><text x="86.4431%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="86.3528%" y="501" width="0.0798%" height="15" fill="rgb(228,31,49)" fg:x="1082" fg:w="1"/><text x="86.6028%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="86.3528%" y="549" width="0.1596%" height="15" fill="rgb(230,185,3)" fg:x="1082" fg:w="2"/><text x="86.6028%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="86.3528%" y="533" width="0.1596%" height="15" fill="rgb(206,167,15)" fg:x="1082" fg:w="2"/><text x="86.6028%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="86.3528%" y="517" width="0.1596%" height="15" fill="rgb(234,2,36)" fg:x="1082" fg:w="2"/><text x="86.6028%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.4326%" y="501" width="0.0798%" height="15" fill="rgb(239,160,29)" fg:x="1083" fg:w="1"/><text x="86.6826%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.4326%" y="485" width="0.0798%" height="15" fill="rgb(236,117,2)" fg:x="1083" fg:w="1"/><text x="86.6826%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.4326%" y="469" width="0.0798%" height="15" fill="rgb(215,117,37)" fg:x="1083" fg:w="1"/><text x="86.6826%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.4326%" y="453" width="0.0798%" height="15" fill="rgb(244,48,36)" fg:x="1083" fg:w="1"/><text x="86.6826%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.4326%" y="437" width="0.0798%" height="15" fill="rgb(223,101,37)" fg:x="1083" fg:w="1"/><text x="86.6826%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.4326%" y="421" width="0.0798%" height="15" fill="rgb(205,200,1)" fg:x="1083" fg:w="1"/><text x="86.6826%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.4326%" y="405" width="0.0798%" height="15" fill="rgb(209,193,20)" fg:x="1083" fg:w="1"/><text x="86.6826%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.4326%" y="389" width="0.0798%" height="15" fill="rgb(214,63,13)" fg:x="1083" fg:w="1"/><text x="86.6826%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.4326%" y="373" width="0.0798%" height="15" fill="rgb(253,113,46)" fg:x="1083" fg:w="1"/><text x="86.6826%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.4326%" y="357" width="0.0798%" height="15" fill="rgb(237,103,34)" fg:x="1083" fg:w="1"/><text x="86.6826%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.4326%" y="341" width="0.0798%" height="15" fill="rgb(223,38,25)" fg:x="1083" fg:w="1"/><text x="86.6826%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="86.5124%" y="533" width="0.0798%" height="15" fill="rgb(251,32,32)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.5124%" y="517" width="0.0798%" height="15" fill="rgb(228,65,22)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="86.5124%" y="501" width="0.0798%" height="15" fill="rgb(205,11,46)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.5124%" y="485" width="0.0798%" height="15" fill="rgb(220,35,2)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.5124%" y="469" width="0.0798%" height="15" fill="rgb(217,151,17)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="479.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="86.5124%" y="549" width="0.1596%" height="15" fill="rgb(243,227,35)" fg:x="1084" fg:w="2"/><text x="86.7624%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="86.5922%" y="533" width="0.0798%" height="15" fill="rgb(214,0,34)" fg:x="1085" fg:w="1"/><text x="86.8422%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.5922%" y="517" width="0.0798%" height="15" fill="rgb(209,42,37)" fg:x="1085" fg:w="1"/><text x="86.8422%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.5922%" y="501" width="0.0798%" height="15" fill="rgb(251,176,30)" fg:x="1085" fg:w="1"/><text x="86.8422%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.5922%" y="485" width="0.0798%" height="15" fill="rgb(223,64,40)" fg:x="1085" fg:w="1"/><text x="86.8422%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.5922%" y="469" width="0.0798%" height="15" fill="rgb(227,180,23)" fg:x="1085" fg:w="1"/><text x="86.8422%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.5922%" y="453" width="0.0798%" height="15" fill="rgb(220,137,31)" fg:x="1085" fg:w="1"/><text x="86.8422%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.5922%" y="437" width="0.0798%" height="15" fill="rgb(245,124,25)" fg:x="1085" fg:w="1"/><text x="86.8422%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.5922%" y="421" width="0.0798%" height="15" fill="rgb(217,157,5)" fg:x="1085" fg:w="1"/><text x="86.8422%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.5922%" y="405" width="0.0798%" height="15" fill="rgb(225,59,2)" fg:x="1085" fg:w="1"/><text x="86.8422%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.5922%" y="389" width="0.0798%" height="15" fill="rgb(220,182,9)" fg:x="1085" fg:w="1"/><text x="86.8422%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="86.5922%" y="373" width="0.0798%" height="15" fill="rgb(249,54,24)" fg:x="1085" fg:w="1"/><text x="86.8422%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="86.5922%" y="357" width="0.0798%" height="15" fill="rgb(216,89,17)" fg:x="1085" fg:w="1"/><text x="86.8422%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.6720%" y="469" width="0.0798%" height="15" fill="rgb(245,20,45)" fg:x="1086" fg:w="1"/><text x="86.9220%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.6720%" y="453" width="0.0798%" height="15" fill="rgb(230,83,14)" fg:x="1086" fg:w="1"/><text x="86.9220%" y="463.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="86.6720%" y="501" width="0.1596%" height="15" fill="rgb(246,109,11)" fg:x="1086" fg:w="2"/><text x="86.9220%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="86.6720%" y="485" width="0.1596%" height="15" fill="rgb(235,85,23)" fg:x="1086" fg:w="2"/><text x="86.9220%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.7518%" y="469" width="0.0798%" height="15" fill="rgb(215,101,36)" fg:x="1087" fg:w="1"/><text x="87.0018%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.7518%" y="453" width="0.0798%" height="15" fill="rgb(228,140,31)" fg:x="1087" fg:w="1"/><text x="87.0018%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.7518%" y="437" width="0.0798%" height="15" fill="rgb(234,162,37)" fg:x="1087" fg:w="1"/><text x="87.0018%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.8316%" y="469" width="0.0798%" height="15" fill="rgb(221,0,24)" fg:x="1088" fg:w="1"/><text x="87.0816%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.8316%" y="453" width="0.0798%" height="15" fill="rgb(230,161,41)" fg:x="1088" fg:w="1"/><text x="87.0816%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.8316%" y="437" width="0.0798%" height="15" fill="rgb(224,46,24)" fg:x="1088" fg:w="1"/><text x="87.0816%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.8316%" y="421" width="0.0798%" height="15" fill="rgb(205,59,32)" fg:x="1088" fg:w="1"/><text x="87.0816%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.8316%" y="405" width="0.0798%" height="15" fill="rgb(239,31,20)" fg:x="1088" fg:w="1"/><text x="87.0816%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="86.3528%" y="565" width="0.6385%" height="15" fill="rgb(233,149,44)" fg:x="1082" fg:w="8"/><text x="86.6028%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="86.6720%" y="549" width="0.3192%" height="15" fill="rgb(243,47,26)" fg:x="1086" fg:w="4"/><text x="86.9220%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="86.6720%" y="533" width="0.3192%" height="15" fill="rgb(233,107,5)" fg:x="1086" fg:w="4"/><text x="86.9220%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="86.6720%" y="517" width="0.3192%" height="15" fill="rgb(248,140,33)" fg:x="1086" fg:w="4"/><text x="86.9220%" y="527.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="86.8316%" y="501" width="0.1596%" height="15" fill="rgb(228,178,19)" fg:x="1088" fg:w="2"/><text x="87.0816%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="86.8316%" y="485" width="0.1596%" height="15" fill="rgb(224,39,49)" fg:x="1088" fg:w="2"/><text x="87.0816%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="86.9114%" y="469" width="0.0798%" height="15" fill="rgb(246,56,47)" fg:x="1089" fg:w="1"/><text x="87.1614%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.9114%" y="453" width="0.0798%" height="15" fill="rgb(220,73,27)" fg:x="1089" fg:w="1"/><text x="87.1614%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="86.9114%" y="437" width="0.0798%" height="15" fill="rgb(239,112,21)" fg:x="1089" fg:w="1"/><text x="87.1614%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.9114%" y="421" width="0.0798%" height="15" fill="rgb(253,14,51)" fg:x="1089" fg:w="1"/><text x="87.1614%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="86.9114%" y="405" width="0.0798%" height="15" fill="rgb(215,58,12)" fg:x="1089" fg:w="1"/><text x="87.1614%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="86.9114%" y="389" width="0.0798%" height="15" fill="rgb(207,181,19)" fg:x="1089" fg:w="1"/><text x="87.1614%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="86.9114%" y="373" width="0.0798%" height="15" fill="rgb(211,214,34)" fg:x="1089" fg:w="1"/><text x="87.1614%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="86.9114%" y="357" width="0.0798%" height="15" fill="rgb(243,124,39)" fg:x="1089" fg:w="1"/><text x="87.1614%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="86.9912%" y="549" width="0.0798%" height="15" fill="rgb(248,135,21)" fg:x="1090" fg:w="1"/><text x="87.2412%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="86.9912%" y="533" width="0.0798%" height="15" fill="rgb(245,218,3)" fg:x="1090" fg:w="1"/><text x="87.2412%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.9912%" y="517" width="0.0798%" height="15" fill="rgb(225,144,22)" fg:x="1090" fg:w="1"/><text x="87.2412%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.0710%" y="517" width="0.0798%" height="15" fill="rgb(250,90,15)" fg:x="1091" fg:w="1"/><text x="87.3210%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.0710%" y="501" width="0.0798%" height="15" fill="rgb(224,64,29)" fg:x="1091" fg:w="1"/><text x="87.3210%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.0710%" y="485" width="0.0798%" height="15" fill="rgb(217,50,47)" fg:x="1091" fg:w="1"/><text x="87.3210%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.0710%" y="469" width="0.0798%" height="15" fill="rgb(231,159,47)" fg:x="1091" fg:w="1"/><text x="87.3210%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.0710%" y="453" width="0.0798%" height="15" fill="rgb(213,89,29)" fg:x="1091" fg:w="1"/><text x="87.3210%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.0710%" y="437" width="0.0798%" height="15" fill="rgb(243,90,23)" fg:x="1091" fg:w="1"/><text x="87.3210%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="87.0710%" y="549" width="0.1596%" height="15" fill="rgb(213,21,6)" fg:x="1091" fg:w="2"/><text x="87.3210%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="87.0710%" y="533" width="0.1596%" height="15" fill="rgb(237,139,17)" fg:x="1091" fg:w="2"/><text x="87.3210%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="87.1508%" y="517" width="0.0798%" height="15" fill="rgb(250,147,17)" fg:x="1092" fg:w="1"/><text x="87.4008%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.1508%" y="501" width="0.0798%" height="15" fill="rgb(212,208,42)" fg:x="1092" fg:w="1"/><text x="87.4008%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.1508%" y="485" width="0.0798%" height="15" fill="rgb(215,229,40)" fg:x="1092" fg:w="1"/><text x="87.4008%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.1508%" y="469" width="0.0798%" height="15" fill="rgb(206,204,1)" fg:x="1092" fg:w="1"/><text x="87.4008%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.1508%" y="453" width="0.0798%" height="15" fill="rgb(230,62,32)" fg:x="1092" fg:w="1"/><text x="87.4008%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.1508%" y="437" width="0.0798%" height="15" fill="rgb(223,22,42)" fg:x="1092" fg:w="1"/><text x="87.4008%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.2306%" y="485" width="0.0798%" height="15" fill="rgb(244,6,23)" fg:x="1093" fg:w="1"/><text x="87.4806%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="87.3105%" y="453" width="0.1596%" height="15" fill="rgb(240,221,42)" fg:x="1094" fg:w="2"/><text x="87.5605%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="87.3105%" y="437" width="0.1596%" height="15" fill="rgb(222,74,7)" fg:x="1094" fg:w="2"/><text x="87.5605%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="87.3105%" y="421" width="0.1596%" height="15" fill="rgb(227,191,38)" fg:x="1094" fg:w="2"/><text x="87.5605%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="87.3105%" y="405" width="0.1596%" height="15" fill="rgb(227,89,34)" fg:x="1094" fg:w="2"/><text x="87.5605%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="87.3105%" y="389" width="0.1596%" height="15" fill="rgb(215,153,25)" fg:x="1094" fg:w="2"/><text x="87.5605%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="87.3105%" y="373" width="0.1596%" height="15" fill="rgb(215,153,46)" fg:x="1094" fg:w="2"/><text x="87.5605%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="87.3105%" y="357" width="0.1596%" height="15" fill="rgb(242,38,52)" fg:x="1094" fg:w="2"/><text x="87.5605%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="87.3105%" y="341" width="0.1596%" height="15" fill="rgb(218,112,4)" fg:x="1094" fg:w="2"/><text x="87.5605%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="87.3105%" y="325" width="0.1596%" height="15" fill="rgb(231,210,31)" fg:x="1094" fg:w="2"/><text x="87.5605%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.3903%" y="309" width="0.0798%" height="15" fill="rgb(245,223,36)" fg:x="1095" fg:w="1"/><text x="87.6403%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.3903%" y="293" width="0.0798%" height="15" fill="rgb(246,41,2)" fg:x="1095" fg:w="1"/><text x="87.6403%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.3903%" y="277" width="0.0798%" height="15" fill="rgb(227,51,31)" fg:x="1095" fg:w="1"/><text x="87.6403%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.3903%" y="261" width="0.0798%" height="15" fill="rgb(222,95,26)" fg:x="1095" fg:w="1"/><text x="87.6403%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.3903%" y="245" width="0.0798%" height="15" fill="rgb(224,190,1)" fg:x="1095" fg:w="1"/><text x="87.6403%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.3903%" y="229" width="0.0798%" height="15" fill="rgb(209,90,42)" fg:x="1095" fg:w="1"/><text x="87.6403%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.3903%" y="213" width="0.0798%" height="15" fill="rgb(232,225,50)" fg:x="1095" fg:w="1"/><text x="87.6403%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.4701%" y="389" width="0.0798%" height="15" fill="rgb(239,89,47)" fg:x="1096" fg:w="1"/><text x="87.7201%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.4701%" y="373" width="0.0798%" height="15" fill="rgb(230,212,50)" fg:x="1096" fg:w="1"/><text x="87.7201%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="87.2306%" y="501" width="0.3990%" height="15" fill="rgb(252,1,27)" fg:x="1093" fg:w="5"/><text x="87.4806%" y="511.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="87.3105%" y="485" width="0.3192%" height="15" fill="rgb(237,179,41)" fg:x="1094" fg:w="4"/><text x="87.5605%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="87.3105%" y="469" width="0.3192%" height="15" fill="rgb(214,151,37)" fg:x="1094" fg:w="4"/><text x="87.5605%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="87.4701%" y="453" width="0.1596%" height="15" fill="rgb(211,74,11)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="87.4701%" y="437" width="0.1596%" height="15" fill="rgb(242,21,21)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="87.4701%" y="421" width="0.1596%" height="15" fill="rgb(226,106,43)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="87.4701%" y="405" width="0.1596%" height="15" fill="rgb(229,162,39)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.5499%" y="389" width="0.0798%" height="15" fill="rgb(228,159,25)" fg:x="1097" fg:w="1"/><text x="87.7999%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.5499%" y="373" width="0.0798%" height="15" fill="rgb(237,32,23)" fg:x="1097" fg:w="1"/><text x="87.7999%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.7095%" y="453" width="0.0798%" height="15" fill="rgb(212,35,32)" fg:x="1099" fg:w="1"/><text x="87.9595%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.7095%" y="437" width="0.0798%" height="15" fill="rgb(215,199,1)" fg:x="1099" fg:w="1"/><text x="87.9595%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.7095%" y="421" width="0.0798%" height="15" fill="rgb(215,67,13)" fg:x="1099" fg:w="1"/><text x="87.9595%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.7095%" y="405" width="0.0798%" height="15" fill="rgb(216,20,47)" fg:x="1099" fg:w="1"/><text x="87.9595%" y="415.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (123 samples, 9.82%)</title><rect x="78.0527%" y="597" width="9.8164%" height="15" fill="rgb(249,183,48)" fg:x="978" fg:w="123"/><text x="78.3027%" y="607.50">plugins_core::..</text></g><g><title>plugins_core::build::Build::occupying (20 samples, 1.60%)</title><rect x="86.2729%" y="581" width="1.5962%" height="15" fill="rgb(208,86,37)" fg:x="1081" fg:w="20"/><text x="86.5229%" y="591.50"></text></g><g><title>plugins_core::tools::set_occupying (11 samples, 0.88%)</title><rect x="86.9912%" y="565" width="0.8779%" height="15" fill="rgb(251,192,7)" fg:x="1090" fg:w="11"/><text x="87.2412%" y="575.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (8 samples, 0.64%)</title><rect x="87.2306%" y="549" width="0.6385%" height="15" fill="rgb(234,196,3)" fg:x="1093" fg:w="8"/><text x="87.4806%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="87.2306%" y="533" width="0.6385%" height="15" fill="rgb(229,150,39)" fg:x="1093" fg:w="8"/><text x="87.4806%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="87.2306%" y="517" width="0.6385%" height="15" fill="rgb(226,19,29)" fg:x="1093" fg:w="8"/><text x="87.4806%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="87.6297%" y="501" width="0.2394%" height="15" fill="rgb(226,222,2)" fg:x="1098" fg:w="3"/><text x="87.8797%" y="511.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="87.6297%" y="485" width="0.2394%" height="15" fill="rgb(235,85,29)" fg:x="1098" fg:w="3"/><text x="87.8797%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="87.6297%" y="469" width="0.2394%" height="15" fill="rgb(237,194,43)" fg:x="1098" fg:w="3"/><text x="87.8797%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.7893%" y="453" width="0.0798%" height="15" fill="rgb(211,4,42)" fg:x="1100" fg:w="1"/><text x="88.0393%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.7893%" y="437" width="0.0798%" height="15" fill="rgb(221,80,37)" fg:x="1100" fg:w="1"/><text x="88.0393%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.7893%" y="421" width="0.0798%" height="15" fill="rgb(222,47,31)" fg:x="1100" fg:w="1"/><text x="88.0393%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.7893%" y="405" width="0.0798%" height="15" fill="rgb(249,82,52)" fg:x="1100" fg:w="1"/><text x="88.0393%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.7893%" y="389" width="0.0798%" height="15" fill="rgb(218,203,2)" fg:x="1100" fg:w="1"/><text x="88.0393%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.7893%" y="373" width="0.0798%" height="15" fill="rgb(210,175,14)" fg:x="1100" fg:w="1"/><text x="88.0393%" y="383.50"></text></g><g><title>plugins_core::build::BuildSurroundings::hands (1 samples, 0.08%)</title><rect x="87.8691%" y="597" width="0.0798%" height="15" fill="rgb(216,210,12)" fg:x="1101" fg:w="1"/><text x="88.1191%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.8691%" y="581" width="0.0798%" height="15" fill="rgb(229,120,18)" fg:x="1101" fg:w="1"/><text x="88.1191%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.8691%" y="565" width="0.0798%" height="15" fill="rgb(231,174,12)" fg:x="1101" fg:w="1"/><text x="88.1191%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.8691%" y="549" width="0.0798%" height="15" fill="rgb(214,101,53)" fg:x="1101" fg:w="1"/><text x="88.1191%" y="559.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="87.9489%" y="549" width="0.0798%" height="15" fill="rgb(246,89,43)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="87.9489%" y="533" width="0.0798%" height="15" fill="rgb(222,9,51)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.0287%" y="469" width="0.0798%" height="15" fill="rgb(252,221,9)" fg:x="1103" fg:w="1"/><text x="88.2787%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.0287%" y="453" width="0.0798%" height="15" fill="rgb(248,28,15)" fg:x="1103" fg:w="1"/><text x="88.2787%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.0287%" y="437" width="0.0798%" height="15" fill="rgb(213,54,52)" fg:x="1103" fg:w="1"/><text x="88.2787%" y="447.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="88.1085%" y="469" width="0.0798%" height="15" fill="rgb(240,3,45)" fg:x="1104" fg:w="1"/><text x="88.3585%" y="479.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="88.0287%" y="501" width="0.2394%" height="15" fill="rgb(239,138,24)" fg:x="1103" fg:w="3"/><text x="88.2787%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="88.0287%" y="485" width="0.2394%" height="15" fill="rgb(233,45,54)" fg:x="1103" fg:w="3"/><text x="88.2787%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.1883%" y="469" width="0.0798%" height="15" fill="rgb(220,131,2)" fg:x="1105" fg:w="1"/><text x="88.4383%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.1883%" y="453" width="0.0798%" height="15" fill="rgb(240,154,36)" fg:x="1105" fg:w="1"/><text x="88.4383%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.1883%" y="437" width="0.0798%" height="15" fill="rgb(251,221,1)" fg:x="1105" fg:w="1"/><text x="88.4383%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.1883%" y="421" width="0.0798%" height="15" fill="rgb(225,217,1)" fg:x="1105" fg:w="1"/><text x="88.4383%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.2682%" y="469" width="0.0798%" height="15" fill="rgb(241,105,49)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.2682%" y="453" width="0.0798%" height="15" fill="rgb(215,44,32)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.2682%" y="437" width="0.0798%" height="15" fill="rgb(213,222,14)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.2682%" y="421" width="0.0798%" height="15" fill="rgb(207,99,52)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.2682%" y="405" width="0.0798%" height="15" fill="rgb(214,208,52)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.2682%" y="389" width="0.0798%" height="15" fill="rgb(244,169,0)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.2682%" y="373" width="0.0798%" height="15" fill="rgb(216,193,37)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.2682%" y="357" width="0.0798%" height="15" fill="rgb(212,158,10)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.2682%" y="341" width="0.0798%" height="15" fill="rgb(213,110,20)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.2682%" y="325" width="0.0798%" height="15" fill="rgb(226,5,42)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.2682%" y="309" width="0.0798%" height="15" fill="rgb(211,93,8)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.2682%" y="293" width="0.0798%" height="15" fill="rgb(240,208,12)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.2682%" y="277" width="0.0798%" height="15" fill="rgb(233,127,50)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.2682%" y="261" width="0.0798%" height="15" fill="rgb(227,199,53)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.2682%" y="245" width="0.0798%" height="15" fill="rgb(235,199,10)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.2682%" y="229" width="0.0798%" height="15" fill="rgb(228,148,35)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="239.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (6 samples, 0.48%)</title><rect x="87.9489%" y="597" width="0.4789%" height="15" fill="rgb(217,87,19)" fg:x="1102" fg:w="6"/><text x="88.1989%" y="607.50"></text></g><g><title>plugins_core::build::QuickThing::make (6 samples, 0.48%)</title><rect x="87.9489%" y="581" width="0.4789%" height="15" fill="rgb(239,9,32)" fg:x="1102" fg:w="6"/><text x="88.1989%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="87.9489%" y="565" width="0.4789%" height="15" fill="rgb(229,101,29)" fg:x="1102" fg:w="6"/><text x="88.1989%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="88.0287%" y="549" width="0.3990%" height="15" fill="rgb(208,143,26)" fg:x="1103" fg:w="5"/><text x="88.2787%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="88.0287%" y="533" width="0.3990%" height="15" fill="rgb(214,10,2)" fg:x="1103" fg:w="5"/><text x="88.2787%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="88.0287%" y="517" width="0.3990%" height="15" fill="rgb(254,203,30)" fg:x="1103" fg:w="5"/><text x="88.2787%" y="527.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="88.2682%" y="501" width="0.1596%" height="15" fill="rgb(242,45,3)" fg:x="1106" fg:w="2"/><text x="88.5182%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="88.2682%" y="485" width="0.1596%" height="15" fill="rgb(209,146,51)" fg:x="1106" fg:w="2"/><text x="88.5182%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.3480%" y="469" width="0.0798%" height="15" fill="rgb(222,80,5)" fg:x="1107" fg:w="1"/><text x="88.5980%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.4278%" y="517" width="0.0798%" height="15" fill="rgb(252,80,35)" fg:x="1108" fg:w="1"/><text x="88.6778%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.4278%" y="501" width="0.0798%" height="15" fill="rgb(246,125,28)" fg:x="1108" fg:w="1"/><text x="88.6778%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.4278%" y="485" width="0.0798%" height="15" fill="rgb(224,143,51)" fg:x="1108" fg:w="1"/><text x="88.6778%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.4278%" y="469" width="0.0798%" height="15" fill="rgb(205,24,17)" fg:x="1108" fg:w="1"/><text x="88.6778%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.4278%" y="453" width="0.0798%" height="15" fill="rgb(253,128,30)" fg:x="1108" fg:w="1"/><text x="88.6778%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.4278%" y="437" width="0.0798%" height="15" fill="rgb(214,153,25)" fg:x="1108" fg:w="1"/><text x="88.6778%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.4278%" y="421" width="0.0798%" height="15" fill="rgb(214,4,28)" fg:x="1108" fg:w="1"/><text x="88.6778%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.4278%" y="405" width="0.0798%" height="15" fill="rgb(235,179,52)" fg:x="1108" fg:w="1"/><text x="88.6778%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.4278%" y="389" width="0.0798%" height="15" fill="rgb(233,27,42)" fg:x="1108" fg:w="1"/><text x="88.6778%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.4278%" y="373" width="0.0798%" height="15" fill="rgb(238,35,25)" fg:x="1108" fg:w="1"/><text x="88.6778%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.4278%" y="357" width="0.0798%" height="15" fill="rgb(227,44,31)" fg:x="1108" fg:w="1"/><text x="88.6778%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.4278%" y="341" width="0.0798%" height="15" fill="rgb(232,201,13)" fg:x="1108" fg:w="1"/><text x="88.6778%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.4278%" y="325" width="0.0798%" height="15" fill="rgb(224,172,52)" fg:x="1108" fg:w="1"/><text x="88.6778%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="88.4278%" y="565" width="0.1596%" height="15" fill="rgb(214,27,26)" fg:x="1108" fg:w="2"/><text x="88.6778%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="88.4278%" y="549" width="0.1596%" height="15" fill="rgb(210,185,52)" fg:x="1108" fg:w="2"/><text x="88.6778%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="88.4278%" y="533" width="0.1596%" height="15" fill="rgb(249,59,32)" fg:x="1108" fg:w="2"/><text x="88.6778%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.5076%" y="517" width="0.0798%" height="15" fill="rgb(242,209,18)" fg:x="1109" fg:w="1"/><text x="88.7576%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.5076%" y="501" width="0.0798%" height="15" fill="rgb(229,0,18)" fg:x="1109" fg:w="1"/><text x="88.7576%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.5076%" y="485" width="0.0798%" height="15" fill="rgb(217,138,29)" fg:x="1109" fg:w="1"/><text x="88.7576%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.5076%" y="469" width="0.0798%" height="15" fill="rgb(215,72,42)" fg:x="1109" fg:w="1"/><text x="88.7576%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.5076%" y="453" width="0.0798%" height="15" fill="rgb(254,115,11)" fg:x="1109" fg:w="1"/><text x="88.7576%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.5076%" y="437" width="0.0798%" height="15" fill="rgb(205,133,39)" fg:x="1109" fg:w="1"/><text x="88.7576%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.5076%" y="421" width="0.0798%" height="15" fill="rgb(211,36,27)" fg:x="1109" fg:w="1"/><text x="88.7576%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.5076%" y="405" width="0.0798%" height="15" fill="rgb(221,48,10)" fg:x="1109" fg:w="1"/><text x="88.7576%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.5076%" y="389" width="0.0798%" height="15" fill="rgb(230,172,50)" fg:x="1109" fg:w="1"/><text x="88.7576%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="88.4278%" y="581" width="0.2394%" height="15" fill="rgb(249,72,18)" fg:x="1108" fg:w="3"/><text x="88.6778%" y="591.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="88.5874%" y="565" width="0.0798%" height="15" fill="rgb(237,58,48)" fg:x="1110" fg:w="1"/><text x="88.8374%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="88.5874%" y="549" width="0.0798%" height="15" fill="rgb(242,123,3)" fg:x="1110" fg:w="1"/><text x="88.8374%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="88.5874%" y="533" width="0.0798%" height="15" fill="rgb(232,111,32)" fg:x="1110" fg:w="1"/><text x="88.8374%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="88.5874%" y="517" width="0.0798%" height="15" fill="rgb(229,108,3)" fg:x="1110" fg:w="1"/><text x="88.8374%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.5874%" y="501" width="0.0798%" height="15" fill="rgb(222,158,10)" fg:x="1110" fg:w="1"/><text x="88.8374%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.5874%" y="485" width="0.0798%" height="15" fill="rgb(205,34,49)" fg:x="1110" fg:w="1"/><text x="88.8374%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.5874%" y="469" width="0.0798%" height="15" fill="rgb(232,21,14)" fg:x="1110" fg:w="1"/><text x="88.8374%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.5874%" y="453" width="0.0798%" height="15" fill="rgb(229,127,44)" fg:x="1110" fg:w="1"/><text x="88.8374%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.5874%" y="437" width="0.0798%" height="15" fill="rgb(232,171,4)" fg:x="1110" fg:w="1"/><text x="88.8374%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="88.6672%" y="533" width="0.1596%" height="15" fill="rgb(250,92,16)" fg:x="1111" fg:w="2"/><text x="88.9172%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="88.6672%" y="517" width="0.1596%" height="15" fill="rgb(230,103,38)" fg:x="1111" fg:w="2"/><text x="88.9172%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="88.6672%" y="501" width="0.1596%" height="15" fill="rgb(253,167,9)" fg:x="1111" fg:w="2"/><text x="88.9172%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="88.6672%" y="485" width="0.1596%" height="15" fill="rgb(222,118,11)" fg:x="1111" fg:w="2"/><text x="88.9172%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.6672%" y="469" width="0.1596%" height="15" fill="rgb(240,202,0)" fg:x="1111" fg:w="2"/><text x="88.9172%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.7470%" y="453" width="0.0798%" height="15" fill="rgb(236,124,4)" fg:x="1112" fg:w="1"/><text x="88.9970%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.7470%" y="437" width="0.0798%" height="15" fill="rgb(244,128,18)" fg:x="1112" fg:w="1"/><text x="88.9970%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.7470%" y="421" width="0.0798%" height="15" fill="rgb(231,206,5)" fg:x="1112" fg:w="1"/><text x="88.9970%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.8268%" y="517" width="0.0798%" height="15" fill="rgb(237,111,8)" fg:x="1113" fg:w="1"/><text x="89.0768%" y="527.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (214 samples, 17.08%)</title><rect x="71.9074%" y="613" width="17.0790%" height="15" fill="rgb(225,127,3)" fg:x="901" fg:w="214"/><text x="72.1574%" y="623.50">&lt;tests::HoldingKeyInVessel..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (7 samples, 0.56%)</title><rect x="88.4278%" y="597" width="0.5587%" height="15" fill="rgb(222,85,48)" fg:x="1108" fg:w="7"/><text x="88.6778%" y="607.50"></text></g><g><title>plugins_core::build::Build::new_world (4 samples, 0.32%)</title><rect x="88.6672%" y="581" width="0.3192%" height="15" fill="rgb(221,108,37)" fg:x="1111" fg:w="4"/><text x="88.9172%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::new (4 samples, 0.32%)</title><rect x="88.6672%" y="565" width="0.3192%" height="15" fill="rgb(226,169,36)" fg:x="1111" fg:w="4"/><text x="88.9172%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="88.6672%" y="549" width="0.3192%" height="15" fill="rgb(237,76,12)" fg:x="1111" fg:w="4"/><text x="88.9172%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="88.8268%" y="533" width="0.1596%" height="15" fill="rgb(210,227,32)" fg:x="1113" fg:w="2"/><text x="89.0768%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="88.9066%" y="517" width="0.0798%" height="15" fill="rgb(214,117,20)" fg:x="1114" fg:w="1"/><text x="89.1566%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.9066%" y="501" width="0.0798%" height="15" fill="rgb(234,119,41)" fg:x="1114" fg:w="1"/><text x="89.1566%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="88.9864%" y="613" width="0.0798%" height="15" fill="rgb(230,130,47)" fg:x="1115" fg:w="1"/><text x="89.2364%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.9864%" y="597" width="0.0798%" height="15" fill="rgb(215,21,41)" fg:x="1115" fg:w="1"/><text x="89.2364%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="89.0662%" y="597" width="0.0798%" height="15" fill="rgb(226,26,53)" fg:x="1116" fg:w="1"/><text x="89.3162%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.0662%" y="581" width="0.0798%" height="15" fill="rgb(221,92,23)" fg:x="1116" fg:w="1"/><text x="89.3162%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="89.1460%" y="597" width="0.0798%" height="15" fill="rgb(213,156,21)" fg:x="1117" fg:w="1"/><text x="89.3960%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="89.1460%" y="581" width="0.0798%" height="15" fill="rgb(254,166,29)" fg:x="1117" fg:w="1"/><text x="89.3960%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="89.1460%" y="565" width="0.0798%" height="15" fill="rgb(213,71,1)" fg:x="1117" fg:w="1"/><text x="89.3960%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="89.1460%" y="549" width="0.0798%" height="15" fill="rgb(245,8,13)" fg:x="1117" fg:w="1"/><text x="89.3960%" y="559.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="89.1460%" y="533" width="0.0798%" height="15" fill="rgb(213,32,32)" fg:x="1117" fg:w="1"/><text x="89.3960%" y="543.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="89.1460%" y="517" width="0.0798%" height="15" fill="rgb(251,86,50)" fg:x="1117" fg:w="1"/><text x="89.3960%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="89.1460%" y="501" width="0.0798%" height="15" fill="rgb(252,92,41)" fg:x="1117" fg:w="1"/><text x="89.3960%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="89.1460%" y="485" width="0.0798%" height="15" fill="rgb(234,70,35)" fg:x="1117" fg:w="1"/><text x="89.3960%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="89.2259%" y="565" width="0.0798%" height="15" fill="rgb(210,157,19)" fg:x="1118" fg:w="1"/><text x="89.4759%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="89.3057%" y="565" width="0.0798%" height="15" fill="rgb(206,20,45)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="89.3057%" y="549" width="0.0798%" height="15" fill="rgb(207,34,7)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="89.3057%" y="533" width="0.0798%" height="15" fill="rgb(253,151,14)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.3057%" y="517" width="0.0798%" height="15" fill="rgb(252,1,18)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.3057%" y="501" width="0.0798%" height="15" fill="rgb(214,77,52)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.3057%" y="485" width="0.0798%" height="15" fill="rgb(254,106,35)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.3057%" y="469" width="0.0798%" height="15" fill="rgb(212,67,40)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.3057%" y="453" width="0.0798%" height="15" fill="rgb(228,76,23)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.3057%" y="437" width="0.0798%" height="15" fill="rgb(250,198,5)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.3057%" y="421" width="0.0798%" height="15" fill="rgb(209,20,25)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.3057%" y="405" width="0.0798%" height="15" fill="rgb(236,32,4)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.3057%" y="389" width="0.0798%" height="15" fill="rgb(215,31,6)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.3057%" y="373" width="0.0798%" height="15" fill="rgb(207,186,49)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.3057%" y="357" width="0.0798%" height="15" fill="rgb(211,212,49)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.3057%" y="341" width="0.0798%" height="15" fill="rgb(229,51,41)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.4653%" y="533" width="0.0798%" height="15" fill="rgb(205,225,36)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.4653%" y="517" width="0.0798%" height="15" fill="rgb(209,213,45)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.4653%" y="501" width="0.0798%" height="15" fill="rgb(219,35,49)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.4653%" y="485" width="0.0798%" height="15" fill="rgb(215,205,22)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.4653%" y="469" width="0.0798%" height="15" fill="rgb(248,204,34)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="89.4653%" y="453" width="0.0798%" height="15" fill="rgb(219,223,31)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="89.4653%" y="437" width="0.0798%" height="15" fill="rgb(236,14,8)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="89.5451%" y="501" width="0.1596%" height="15" fill="rgb(243,129,23)" fg:x="1122" fg:w="2"/><text x="89.7951%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.6249%" y="485" width="0.0798%" height="15" fill="rgb(205,204,5)" fg:x="1123" fg:w="1"/><text x="89.8749%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.6249%" y="469" width="0.0798%" height="15" fill="rgb(244,115,32)" fg:x="1123" fg:w="1"/><text x="89.8749%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.6249%" y="453" width="0.0798%" height="15" fill="rgb(229,123,14)" fg:x="1123" fg:w="1"/><text x="89.8749%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="89.5451%" y="517" width="0.2394%" height="15" fill="rgb(250,85,1)" fg:x="1122" fg:w="3"/><text x="89.7951%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.7047%" y="501" width="0.0798%" height="15" fill="rgb(209,141,54)" fg:x="1124" fg:w="1"/><text x="89.9547%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="89.8643%" y="501" width="0.2394%" height="15" fill="rgb(244,107,39)" fg:x="1126" fg:w="3"/><text x="90.1143%" y="511.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="89.8643%" y="485" width="0.2394%" height="15" fill="rgb(230,68,26)" fg:x="1126" fg:w="3"/><text x="90.1143%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="89.8643%" y="469" width="0.2394%" height="15" fill="rgb(220,178,33)" fg:x="1126" fg:w="3"/><text x="90.1143%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="89.8643%" y="453" width="0.2394%" height="15" fill="rgb(220,77,53)" fg:x="1126" fg:w="3"/><text x="90.1143%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="90.0239%" y="437" width="0.0798%" height="15" fill="rgb(224,108,19)" fg:x="1128" fg:w="1"/><text x="90.2739%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="90.0239%" y="421" width="0.0798%" height="15" fill="rgb(223,203,27)" fg:x="1128" fg:w="1"/><text x="90.2739%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="90.0239%" y="405" width="0.0798%" height="15" fill="rgb(211,32,46)" fg:x="1128" fg:w="1"/><text x="90.2739%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="90.1038%" y="453" width="0.0798%" height="15" fill="rgb(240,101,27)" fg:x="1129" fg:w="1"/><text x="90.3538%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.1038%" y="437" width="0.0798%" height="15" fill="rgb(217,210,11)" fg:x="1129" fg:w="1"/><text x="90.3538%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.1038%" y="421" width="0.0798%" height="15" fill="rgb(236,130,21)" fg:x="1129" fg:w="1"/><text x="90.3538%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.1038%" y="405" width="0.0798%" height="15" fill="rgb(250,136,8)" fg:x="1129" fg:w="1"/><text x="90.3538%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="90.1038%" y="485" width="0.1596%" height="15" fill="rgb(243,223,36)" fg:x="1129" fg:w="2"/><text x="90.3538%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="90.1038%" y="469" width="0.1596%" height="15" fill="rgb(246,184,8)" fg:x="1129" fg:w="2"/><text x="90.3538%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="90.1836%" y="453" width="0.0798%" height="15" fill="rgb(222,158,36)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="90.1836%" y="437" width="0.0798%" height="15" fill="rgb(210,220,19)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.1836%" y="421" width="0.0798%" height="15" fill="rgb(246,44,38)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.1836%" y="405" width="0.0798%" height="15" fill="rgb(246,186,14)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.1836%" y="389" width="0.0798%" height="15" fill="rgb(233,193,20)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="90.2634%" y="485" width="0.1596%" height="15" fill="rgb(215,60,5)" fg:x="1131" fg:w="2"/><text x="90.5134%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.3432%" y="469" width="0.0798%" height="15" fill="rgb(207,128,10)" fg:x="1132" fg:w="1"/><text x="90.5932%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="90.4230%" y="469" width="0.0798%" height="15" fill="rgb(238,84,54)" fg:x="1133" fg:w="1"/><text x="90.6730%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.4230%" y="453" width="0.0798%" height="15" fill="rgb(213,130,11)" fg:x="1133" fg:w="1"/><text x="90.6730%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.4230%" y="437" width="0.0798%" height="15" fill="rgb(235,62,9)" fg:x="1133" fg:w="1"/><text x="90.6730%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.4230%" y="421" width="0.0798%" height="15" fill="rgb(222,64,24)" fg:x="1133" fg:w="1"/><text x="90.6730%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="90.5028%" y="453" width="0.0798%" height="15" fill="rgb(238,193,42)" fg:x="1134" fg:w="1"/><text x="90.7528%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="90.5826%" y="453" width="0.0798%" height="15" fill="rgb(243,204,46)" fg:x="1135" fg:w="1"/><text x="90.8326%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.5826%" y="437" width="0.0798%" height="15" fill="rgb(243,196,11)" fg:x="1135" fg:w="1"/><text x="90.8326%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.5826%" y="421" width="0.0798%" height="15" fill="rgb(232,77,22)" fg:x="1135" fg:w="1"/><text x="90.8326%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.5826%" y="405" width="0.0798%" height="15" fill="rgb(215,80,25)" fg:x="1135" fg:w="1"/><text x="90.8326%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="90.7422%" y="421" width="0.0798%" height="15" fill="rgb(210,173,7)" fg:x="1137" fg:w="1"/><text x="90.9922%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="90.6624%" y="437" width="0.2394%" height="15" fill="rgb(207,101,10)" fg:x="1136" fg:w="3"/><text x="90.9124%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.8220%" y="421" width="0.0798%" height="15" fill="rgb(246,57,48)" fg:x="1138" fg:w="1"/><text x="91.0720%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.8220%" y="405" width="0.0798%" height="15" fill="rgb(236,184,40)" fg:x="1138" fg:w="1"/><text x="91.0720%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="90.6624%" y="453" width="0.3990%" height="15" fill="rgb(210,205,13)" fg:x="1136" fg:w="5"/><text x="90.9124%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="90.9018%" y="437" width="0.1596%" height="15" fill="rgb(231,129,42)" fg:x="1139" fg:w="2"/><text x="91.1518%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.9816%" y="421" width="0.0798%" height="15" fill="rgb(220,229,54)" fg:x="1140" fg:w="1"/><text x="91.2316%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="90.5028%" y="469" width="0.6385%" height="15" fill="rgb(230,192,26)" fg:x="1134" fg:w="8"/><text x="90.7528%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="91.0615%" y="453" width="0.0798%" height="15" fill="rgb(253,18,30)" fg:x="1141" fg:w="1"/><text x="91.3115%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="91.0615%" y="437" width="0.0798%" height="15" fill="rgb(216,62,53)" fg:x="1141" fg:w="1"/><text x="91.3115%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="91.0615%" y="421" width="0.0798%" height="15" fill="rgb(230,79,29)" fg:x="1141" fg:w="1"/><text x="91.3115%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.12%)</title><rect x="90.1038%" y="501" width="1.1173%" height="15" fill="rgb(242,26,26)" fg:x="1129" fg:w="14"/><text x="90.3538%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="90.4230%" y="485" width="0.7981%" height="15" fill="rgb(227,125,21)" fg:x="1133" fg:w="10"/><text x="90.6730%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="91.1413%" y="469" width="0.0798%" height="15" fill="rgb(229,93,26)" fg:x="1142" fg:w="1"/><text x="91.3913%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="91.1413%" y="453" width="0.0798%" height="15" fill="rgb(227,228,8)" fg:x="1142" fg:w="1"/><text x="91.3913%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="91.2211%" y="469" width="0.2394%" height="15" fill="rgb(233,56,0)" fg:x="1143" fg:w="3"/><text x="91.4711%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="91.3009%" y="453" width="0.1596%" height="15" fill="rgb(225,185,17)" fg:x="1144" fg:w="2"/><text x="91.5509%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.76%)</title><rect x="89.7845%" y="517" width="1.7558%" height="15" fill="rgb(238,202,30)" fg:x="1125" fg:w="22"/><text x="90.0345%" y="527.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="91.2211%" y="501" width="0.3192%" height="15" fill="rgb(236,60,13)" fg:x="1143" fg:w="4"/><text x="91.4711%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="91.2211%" y="485" width="0.3192%" height="15" fill="rgb(244,92,0)" fg:x="1143" fg:w="4"/><text x="91.4711%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="91.4605%" y="469" width="0.0798%" height="15" fill="rgb(225,57,15)" fg:x="1146" fg:w="1"/><text x="91.7105%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (26 samples, 2.08%)</title><rect x="89.5451%" y="533" width="2.0750%" height="15" fill="rgb(228,5,28)" fg:x="1122" fg:w="26"/><text x="89.7951%" y="543.50">&lt;..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="91.5403%" y="517" width="0.0798%" height="15" fill="rgb(252,34,51)" fg:x="1147" fg:w="1"/><text x="91.7903%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="91.5403%" y="501" width="0.0798%" height="15" fill="rgb(235,58,7)" fg:x="1147" fg:w="1"/><text x="91.7903%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="91.6201%" y="485" width="0.1596%" height="15" fill="rgb(250,132,20)" fg:x="1148" fg:w="2"/><text x="91.8701%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.7797%" y="485" width="0.0798%" height="15" fill="rgb(217,164,0)" fg:x="1150" fg:w="1"/><text x="92.0297%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.9393%" y="469" width="0.0798%" height="15" fill="rgb(208,220,35)" fg:x="1152" fg:w="1"/><text x="92.1893%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.1788%" y="453" width="0.0798%" height="15" fill="rgb(227,42,51)" fg:x="1155" fg:w="1"/><text x="92.4288%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.1788%" y="437" width="0.0798%" height="15" fill="rgb(225,146,38)" fg:x="1155" fg:w="1"/><text x="92.4288%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="91.6201%" y="533" width="0.8779%" height="15" fill="rgb(252,108,37)" fg:x="1148" fg:w="11"/><text x="91.8701%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.88%)</title><rect x="91.6201%" y="517" width="0.8779%" height="15" fill="rgb(244,101,24)" fg:x="1148" fg:w="11"/><text x="91.8701%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="91.6201%" y="501" width="0.8779%" height="15" fill="rgb(213,161,50)" fg:x="1148" fg:w="11"/><text x="91.8701%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="91.8595%" y="485" width="0.6385%" height="15" fill="rgb(248,159,19)" fg:x="1151" fg:w="8"/><text x="92.1095%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="92.0192%" y="469" width="0.4789%" height="15" fill="rgb(233,179,15)" fg:x="1153" fg:w="6"/><text x="92.2692%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="92.2586%" y="453" width="0.2394%" height="15" fill="rgb(248,178,3)" fg:x="1156" fg:w="3"/><text x="92.5086%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="92.3384%" y="437" width="0.1596%" height="15" fill="rgb(245,190,41)" fg:x="1157" fg:w="2"/><text x="92.5884%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="92.4182%" y="421" width="0.0798%" height="15" fill="rgb(218,151,19)" fg:x="1158" fg:w="1"/><text x="92.6682%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.4182%" y="405" width="0.0798%" height="15" fill="rgb(245,25,44)" fg:x="1158" fg:w="1"/><text x="92.6682%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.6576%" y="453" width="0.0798%" height="15" fill="rgb(235,172,47)" fg:x="1161" fg:w="1"/><text x="92.9076%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.8172%" y="437" width="0.0798%" height="15" fill="rgb(246,33,12)" fg:x="1163" fg:w="1"/><text x="93.0672%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="92.4980%" y="501" width="0.5587%" height="15" fill="rgb(214,124,7)" fg:x="1159" fg:w="7"/><text x="92.7480%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="92.5778%" y="485" width="0.4789%" height="15" fill="rgb(246,186,18)" fg:x="1160" fg:w="6"/><text x="92.8278%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="92.5778%" y="469" width="0.4789%" height="15" fill="rgb(231,94,1)" fg:x="1160" fg:w="6"/><text x="92.8278%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="92.7374%" y="453" width="0.3192%" height="15" fill="rgb(208,33,48)" fg:x="1162" fg:w="4"/><text x="92.9874%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="92.8970%" y="437" width="0.1596%" height="15" fill="rgb(208,195,44)" fg:x="1164" fg:w="2"/><text x="93.1470%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="92.8970%" y="421" width="0.1596%" height="15" fill="rgb(226,13,52)" fg:x="1164" fg:w="2"/><text x="93.1470%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="92.9769%" y="405" width="0.0798%" height="15" fill="rgb(217,219,45)" fg:x="1165" fg:w="1"/><text x="93.2269%" y="415.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (8 samples, 0.64%)</title><rect x="92.4980%" y="517" width="0.6385%" height="15" fill="rgb(223,45,25)" fg:x="1159" fg:w="8"/><text x="92.7480%" y="527.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="93.0567%" y="501" width="0.0798%" height="15" fill="rgb(241,163,0)" fg:x="1166" fg:w="1"/><text x="93.3067%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="93.0567%" y="485" width="0.0798%" height="15" fill="rgb(216,68,47)" fg:x="1166" fg:w="1"/><text x="93.3067%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="93.0567%" y="469" width="0.0798%" height="15" fill="rgb(236,119,45)" fg:x="1166" fg:w="1"/><text x="93.3067%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="93.2163%" y="485" width="0.1596%" height="15" fill="rgb(209,188,24)" fg:x="1168" fg:w="2"/><text x="93.4663%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="93.3759%" y="485" width="0.1596%" height="15" fill="rgb(221,118,7)" fg:x="1170" fg:w="2"/><text x="93.6259%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="93.3759%" y="469" width="0.1596%" height="15" fill="rgb(213,148,43)" fg:x="1170" fg:w="2"/><text x="93.6259%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="93.5355%" y="485" width="0.1596%" height="15" fill="rgb(231,21,43)" fg:x="1172" fg:w="2"/><text x="93.7855%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="93.5355%" y="469" width="0.1596%" height="15" fill="rgb(232,213,43)" fg:x="1172" fg:w="2"/><text x="93.7855%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.6153%" y="453" width="0.0798%" height="15" fill="rgb(239,145,50)" fg:x="1173" fg:w="1"/><text x="93.8653%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.6951%" y="453" width="0.0798%" height="15" fill="rgb(222,131,18)" fg:x="1174" fg:w="1"/><text x="93.9451%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="93.6951%" y="485" width="0.1596%" height="15" fill="rgb(243,181,13)" fg:x="1174" fg:w="2"/><text x="93.9451%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="93.6951%" y="469" width="0.1596%" height="15" fill="rgb(212,74,41)" fg:x="1174" fg:w="2"/><text x="93.9451%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.7749%" y="453" width="0.0798%" height="15" fill="rgb(237,143,34)" fg:x="1175" fg:w="1"/><text x="94.0249%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.7749%" y="437" width="0.0798%" height="15" fill="rgb(228,139,0)" fg:x="1175" fg:w="1"/><text x="94.0249%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="93.7749%" y="421" width="0.0798%" height="15" fill="rgb(227,214,11)" fg:x="1175" fg:w="1"/><text x="94.0249%" y="431.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="94.0942%" y="437" width="0.0798%" height="15" fill="rgb(228,118,39)" fg:x="1179" fg:w="1"/><text x="94.3442%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.1740%" y="437" width="0.0798%" height="15" fill="rgb(207,117,22)" fg:x="1180" fg:w="1"/><text x="94.4240%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.1740%" y="421" width="0.0798%" height="15" fill="rgb(225,91,8)" fg:x="1180" fg:w="1"/><text x="94.4240%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.1740%" y="405" width="0.0798%" height="15" fill="rgb(230,219,48)" fg:x="1180" fg:w="1"/><text x="94.4240%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="94.2538%" y="437" width="0.0798%" height="15" fill="rgb(244,0,23)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="94.2538%" y="421" width="0.0798%" height="15" fill="rgb(206,212,23)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="94.2538%" y="405" width="0.0798%" height="15" fill="rgb(254,62,10)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.2538%" y="389" width="0.0798%" height="15" fill="rgb(236,58,8)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="94.4134%" y="421" width="0.2394%" height="15" fill="rgb(232,212,17)" fg:x="1183" fg:w="3"/><text x="94.6634%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="94.4134%" y="405" width="0.2394%" height="15" fill="rgb(206,132,9)" fg:x="1183" fg:w="3"/><text x="94.6634%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="94.4134%" y="389" width="0.2394%" height="15" fill="rgb(234,97,28)" fg:x="1183" fg:w="3"/><text x="94.6634%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="94.4134%" y="373" width="0.2394%" height="15" fill="rgb(254,144,9)" fg:x="1183" fg:w="3"/><text x="94.6634%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="94.4134%" y="357" width="0.2394%" height="15" fill="rgb(244,204,43)" fg:x="1183" fg:w="3"/><text x="94.6634%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="94.4134%" y="341" width="0.2394%" height="15" fill="rgb(248,177,16)" fg:x="1183" fg:w="3"/><text x="94.6634%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="94.5730%" y="325" width="0.0798%" height="15" fill="rgb(219,110,15)" fg:x="1185" fg:w="1"/><text x="94.8230%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.5730%" y="309" width="0.0798%" height="15" fill="rgb(212,203,25)" fg:x="1185" fg:w="1"/><text x="94.8230%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.5730%" y="293" width="0.0798%" height="15" fill="rgb(205,50,1)" fg:x="1185" fg:w="1"/><text x="94.8230%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.5730%" y="277" width="0.0798%" height="15" fill="rgb(222,152,41)" fg:x="1185" fg:w="1"/><text x="94.8230%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="94.0942%" y="453" width="0.6385%" height="15" fill="rgb(236,83,3)" fg:x="1179" fg:w="8"/><text x="94.3442%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="94.3336%" y="437" width="0.3990%" height="15" fill="rgb(214,30,54)" fg:x="1182" fg:w="5"/><text x="94.5836%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.6528%" y="421" width="0.0798%" height="15" fill="rgb(250,117,31)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.80%)</title><rect x="94.0942%" y="469" width="0.7981%" height="15" fill="rgb(228,77,14)" fg:x="1179" fg:w="10"/><text x="94.3442%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="94.7326%" y="453" width="0.1596%" height="15" fill="rgb(241,3,28)" fg:x="1187" fg:w="2"/><text x="94.9826%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.8125%" y="437" width="0.0798%" height="15" fill="rgb(221,175,52)" fg:x="1188" fg:w="1"/><text x="95.0625%" y="447.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (24 samples, 1.92%)</title><rect x="93.1365%" y="517" width="1.9154%" height="15" fill="rgb(237,91,6)" fg:x="1167" fg:w="24"/><text x="93.3865%" y="527.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (24 samples, 1.92%)</title><rect x="93.1365%" y="501" width="1.9154%" height="15" fill="rgb(246,46,42)" fg:x="1167" fg:w="24"/><text x="93.3865%" y="511.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (15 samples, 1.20%)</title><rect x="93.8547%" y="485" width="1.1971%" height="15" fill="rgb(235,199,0)" fg:x="1176" fg:w="15"/><text x="94.1047%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="94.8923%" y="469" width="0.1596%" height="15" fill="rgb(224,44,40)" fg:x="1189" fg:w="2"/><text x="95.1423%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.9721%" y="453" width="0.0798%" height="15" fill="rgb(209,24,35)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.9721%" y="437" width="0.0798%" height="15" fill="rgb(244,46,22)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.0519%" y="373" width="0.0798%" height="15" fill="rgb(235,99,8)" fg:x="1191" fg:w="1"/><text x="95.3019%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.0519%" y="357" width="0.0798%" height="15" fill="rgb(218,127,36)" fg:x="1191" fg:w="1"/><text x="95.3019%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.0519%" y="341" width="0.0798%" height="15" fill="rgb(238,47,46)" fg:x="1191" fg:w="1"/><text x="95.3019%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="95.2115%" y="277" width="0.0798%" height="15" fill="rgb(233,65,17)" fg:x="1193" fg:w="1"/><text x="95.4615%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="95.0519%" y="421" width="0.3192%" height="15" fill="rgb(239,22,33)" fg:x="1191" fg:w="4"/><text x="95.3019%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="95.0519%" y="405" width="0.3192%" height="15" fill="rgb(243,66,43)" fg:x="1191" fg:w="4"/><text x="95.3019%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="95.0519%" y="389" width="0.3192%" height="15" fill="rgb(235,210,28)" fg:x="1191" fg:w="4"/><text x="95.3019%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="95.1317%" y="373" width="0.2394%" height="15" fill="rgb(205,191,50)" fg:x="1192" fg:w="3"/><text x="95.3817%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="95.1317%" y="357" width="0.2394%" height="15" fill="rgb(251,217,19)" fg:x="1192" fg:w="3"/><text x="95.3817%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.2115%" y="341" width="0.1596%" height="15" fill="rgb(205,174,37)" fg:x="1193" fg:w="2"/><text x="95.4615%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.2115%" y="325" width="0.1596%" height="15" fill="rgb(212,158,42)" fg:x="1193" fg:w="2"/><text x="95.4615%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.2115%" y="309" width="0.1596%" height="15" fill="rgb(212,208,51)" fg:x="1193" fg:w="2"/><text x="95.4615%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="95.2115%" y="293" width="0.1596%" height="15" fill="rgb(225,198,20)" fg:x="1193" fg:w="2"/><text x="95.4615%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.2913%" y="277" width="0.0798%" height="15" fill="rgb(247,41,44)" fg:x="1194" fg:w="1"/><text x="95.5413%" y="287.50"></text></g><g><title>engine::session::Session::close (80 samples, 6.38%)</title><rect x="89.0662%" y="613" width="6.3847%" height="15" fill="rgb(228,33,41)" fg:x="1116" fg:w="80"/><text x="89.3162%" y="623.50">engine::..</text></g><g><title>engine::session::state::State::close (78 samples, 6.23%)</title><rect x="89.2259%" y="597" width="6.2251%" height="15" fill="rgb(215,47,52)" fg:x="1118" fg:w="78"/><text x="89.4759%" y="607.50">engine::..</text></g><g><title>engine::session::state::State::flush_entities (78 samples, 6.23%)</title><rect x="89.2259%" y="581" width="6.2251%" height="15" fill="rgb(248,106,37)" fg:x="1118" fg:w="78"/><text x="89.4759%" y="591.50">engine::..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (76 samples, 6.07%)</title><rect x="89.3855%" y="565" width="6.0654%" height="15" fill="rgb(238,91,29)" fg:x="1120" fg:w="76"/><text x="89.6355%" y="575.50">engine::..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (76 samples, 6.07%)</title><rect x="89.3855%" y="549" width="6.0654%" height="15" fill="rgb(226,111,40)" fg:x="1120" fg:w="76"/><text x="89.6355%" y="559.50">engine::..</text></g><g><title>kernel::model::any_entity_changes (37 samples, 2.95%)</title><rect x="92.4980%" y="533" width="2.9529%" height="15" fill="rgb(229,159,36)" fg:x="1159" fg:w="37"/><text x="92.7480%" y="543.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (5 samples, 0.40%)</title><rect x="95.0519%" y="517" width="0.3990%" height="15" fill="rgb(221,109,4)" fg:x="1191" fg:w="5"/><text x="95.3019%" y="527.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="95.0519%" y="501" width="0.3990%" height="15" fill="rgb(236,56,25)" fg:x="1191" fg:w="5"/><text x="95.3019%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="95.0519%" y="485" width="0.3990%" height="15" fill="rgb(244,113,23)" fg:x="1191" fg:w="5"/><text x="95.3019%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="95.0519%" y="469" width="0.3990%" height="15" fill="rgb(249,132,2)" fg:x="1191" fg:w="5"/><text x="95.3019%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="95.0519%" y="453" width="0.3990%" height="15" fill="rgb(205,185,21)" fg:x="1191" fg:w="5"/><text x="95.3019%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="95.0519%" y="437" width="0.3990%" height="15" fill="rgb(245,130,2)" fg:x="1191" fg:w="5"/><text x="95.3019%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.3711%" y="421" width="0.0798%" height="15" fill="rgb(246,71,26)" fg:x="1195" fg:w="1"/><text x="95.6211%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="95.6105%" y="485" width="0.0798%" height="15" fill="rgb(234,194,6)" fg:x="1198" fg:w="1"/><text x="95.8605%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="95.6105%" y="469" width="0.0798%" height="15" fill="rgb(206,24,32)" fg:x="1198" fg:w="1"/><text x="95.8605%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="95.6105%" y="453" width="0.0798%" height="15" fill="rgb(233,7,54)" fg:x="1198" fg:w="1"/><text x="95.8605%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="95.6105%" y="437" width="0.0798%" height="15" fill="rgb(252,46,1)" fg:x="1198" fg:w="1"/><text x="95.8605%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="95.6105%" y="421" width="0.0798%" height="15" fill="rgb(216,113,53)" fg:x="1198" fg:w="1"/><text x="95.8605%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="95.6105%" y="405" width="0.0798%" height="15" fill="rgb(215,40,24)" fg:x="1198" fg:w="1"/><text x="95.8605%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="95.6105%" y="389" width="0.0798%" height="15" fill="rgb(233,222,8)" fg:x="1198" fg:w="1"/><text x="95.8605%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="95.6105%" y="373" width="0.0798%" height="15" fill="rgb(248,73,28)" fg:x="1198" fg:w="1"/><text x="95.8605%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="95.6105%" y="357" width="0.0798%" height="15" fill="rgb(247,126,28)" fg:x="1198" fg:w="1"/><text x="95.8605%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="95.6105%" y="341" width="0.0798%" height="15" fill="rgb(242,173,54)" fg:x="1198" fg:w="1"/><text x="95.8605%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="95.6105%" y="325" width="0.0798%" height="15" fill="rgb(244,186,22)" fg:x="1198" fg:w="1"/><text x="95.8605%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="95.6105%" y="309" width="0.0798%" height="15" fill="rgb(231,187,4)" fg:x="1198" fg:w="1"/><text x="95.8605%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="95.6105%" y="293" width="0.0798%" height="15" fill="rgb(252,66,47)" fg:x="1198" fg:w="1"/><text x="95.8605%" y="303.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="95.6105%" y="277" width="0.0798%" height="15" fill="rgb(240,228,28)" fg:x="1198" fg:w="1"/><text x="95.8605%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="95.6105%" y="261" width="0.0798%" height="15" fill="rgb(237,63,43)" fg:x="1198" fg:w="1"/><text x="95.8605%" y="271.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="95.6903%" y="405" width="0.0798%" height="15" fill="rgb(214,1,44)" fg:x="1199" fg:w="1"/><text x="95.9403%" y="415.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="95.6903%" y="389" width="0.0798%" height="15" fill="rgb(212,2,46)" fg:x="1199" fg:w="1"/><text x="95.9403%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="95.6903%" y="373" width="0.0798%" height="15" fill="rgb(213,142,5)" fg:x="1199" fg:w="1"/><text x="95.9403%" y="383.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="95.6903%" y="357" width="0.0798%" height="15" fill="rgb(229,135,1)" fg:x="1199" fg:w="1"/><text x="95.9403%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="95.6903%" y="341" width="0.0798%" height="15" fill="rgb(252,98,38)" fg:x="1199" fg:w="1"/><text x="95.9403%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.6903%" y="325" width="0.0798%" height="15" fill="rgb(206,89,40)" fg:x="1199" fg:w="1"/><text x="95.9403%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.6903%" y="309" width="0.0798%" height="15" fill="rgb(219,73,36)" fg:x="1199" fg:w="1"/><text x="95.9403%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.6903%" y="293" width="0.0798%" height="15" fill="rgb(207,168,32)" fg:x="1199" fg:w="1"/><text x="95.9403%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.6903%" y="277" width="0.0798%" height="15" fill="rgb(215,113,21)" fg:x="1199" fg:w="1"/><text x="95.9403%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="95.6903%" y="261" width="0.0798%" height="15" fill="rgb(217,144,43)" fg:x="1199" fg:w="1"/><text x="95.9403%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.6903%" y="245" width="0.0798%" height="15" fill="rgb(249,48,50)" fg:x="1199" fg:w="1"/><text x="95.9403%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.6903%" y="229" width="0.0798%" height="15" fill="rgb(242,1,26)" fg:x="1199" fg:w="1"/><text x="95.9403%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.6903%" y="213" width="0.0798%" height="15" fill="rgb(231,167,42)" fg:x="1199" fg:w="1"/><text x="95.9403%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.7702%" y="245" width="0.0798%" height="15" fill="rgb(242,177,45)" fg:x="1200" fg:w="1"/><text x="96.0202%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.7702%" y="229" width="0.0798%" height="15" fill="rgb(232,121,42)" fg:x="1200" fg:w="1"/><text x="96.0202%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.7702%" y="213" width="0.0798%" height="15" fill="rgb(205,8,42)" fg:x="1200" fg:w="1"/><text x="96.0202%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.7702%" y="261" width="0.1596%" height="15" fill="rgb(238,199,24)" fg:x="1200" fg:w="2"/><text x="96.0202%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="95.8500%" y="245" width="0.0798%" height="15" fill="rgb(228,112,2)" fg:x="1201" fg:w="1"/><text x="96.1000%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.8500%" y="229" width="0.0798%" height="15" fill="rgb(215,115,33)" fg:x="1201" fg:w="1"/><text x="96.1000%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="95.8500%" y="213" width="0.0798%" height="15" fill="rgb(230,209,34)" fg:x="1201" fg:w="1"/><text x="96.1000%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.8500%" y="197" width="0.0798%" height="15" fill="rgb(246,76,12)" fg:x="1201" fg:w="1"/><text x="96.1000%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.8500%" y="181" width="0.0798%" height="15" fill="rgb(240,110,9)" fg:x="1201" fg:w="1"/><text x="96.1000%" y="191.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="95.9298%" y="229" width="0.0798%" height="15" fill="rgb(224,94,46)" fg:x="1202" fg:w="1"/><text x="96.1798%" y="239.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="95.7702%" y="389" width="0.3192%" height="15" fill="rgb(247,150,22)" fg:x="1200" fg:w="4"/><text x="96.0202%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="95.7702%" y="373" width="0.3192%" height="15" fill="rgb(249,85,13)" fg:x="1200" fg:w="4"/><text x="96.0202%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="95.7702%" y="357" width="0.3192%" height="15" fill="rgb(208,77,41)" fg:x="1200" fg:w="4"/><text x="96.0202%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="95.7702%" y="341" width="0.3192%" height="15" fill="rgb(240,42,44)" fg:x="1200" fg:w="4"/><text x="96.0202%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="95.7702%" y="325" width="0.3192%" height="15" fill="rgb(222,10,51)" fg:x="1200" fg:w="4"/><text x="96.0202%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="95.7702%" y="309" width="0.3192%" height="15" fill="rgb(208,146,53)" fg:x="1200" fg:w="4"/><text x="96.0202%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="95.7702%" y="293" width="0.3192%" height="15" fill="rgb(236,162,23)" fg:x="1200" fg:w="4"/><text x="96.0202%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="95.7702%" y="277" width="0.3192%" height="15" fill="rgb(218,66,21)" fg:x="1200" fg:w="4"/><text x="96.0202%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="95.9298%" y="261" width="0.1596%" height="15" fill="rgb(233,6,47)" fg:x="1202" fg:w="2"/><text x="96.1798%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.9298%" y="245" width="0.1596%" height="15" fill="rgb(236,59,51)" fg:x="1202" fg:w="2"/><text x="96.1798%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.0096%" y="229" width="0.0798%" height="15" fill="rgb(242,12,46)" fg:x="1203" fg:w="1"/><text x="96.2596%" y="239.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="96.0096%" y="213" width="0.0798%" height="15" fill="rgb(243,142,19)" fg:x="1203" fg:w="1"/><text x="96.2596%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.0894%" y="309" width="0.0798%" height="15" fill="rgb(217,28,17)" fg:x="1204" fg:w="1"/><text x="96.3394%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.0894%" y="293" width="0.0798%" height="15" fill="rgb(228,2,27)" fg:x="1204" fg:w="1"/><text x="96.3394%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.0894%" y="277" width="0.0798%" height="15" fill="rgb(214,221,4)" fg:x="1204" fg:w="1"/><text x="96.3394%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.0894%" y="261" width="0.0798%" height="15" fill="rgb(224,69,26)" fg:x="1204" fg:w="1"/><text x="96.3394%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.0894%" y="245" width="0.0798%" height="15" fill="rgb(219,70,4)" fg:x="1204" fg:w="1"/><text x="96.3394%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.0894%" y="229" width="0.0798%" height="15" fill="rgb(218,157,39)" fg:x="1204" fg:w="1"/><text x="96.3394%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="96.0894%" y="213" width="0.0798%" height="15" fill="rgb(238,36,28)" fg:x="1204" fg:w="1"/><text x="96.3394%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.0894%" y="197" width="0.0798%" height="15" fill="rgb(232,29,0)" fg:x="1204" fg:w="1"/><text x="96.3394%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.0894%" y="181" width="0.0798%" height="15" fill="rgb(243,138,46)" fg:x="1204" fg:w="1"/><text x="96.3394%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="96.0894%" y="165" width="0.0798%" height="15" fill="rgb(232,186,41)" fg:x="1204" fg:w="1"/><text x="96.3394%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.0894%" y="149" width="0.0798%" height="15" fill="rgb(252,166,17)" fg:x="1204" fg:w="1"/><text x="96.3394%" y="159.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (7 samples, 0.56%)</title><rect x="95.6903%" y="453" width="0.5587%" height="15" fill="rgb(228,179,12)" fg:x="1199" fg:w="7"/><text x="95.9403%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (7 samples, 0.56%)</title><rect x="95.6903%" y="437" width="0.5587%" height="15" fill="rgb(254,205,53)" fg:x="1199" fg:w="7"/><text x="95.9403%" y="447.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (7 samples, 0.56%)</title><rect x="95.6903%" y="421" width="0.5587%" height="15" fill="rgb(224,163,47)" fg:x="1199" fg:w="7"/><text x="95.9403%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (6 samples, 0.48%)</title><rect x="95.7702%" y="405" width="0.4789%" height="15" fill="rgb(208,43,47)" fg:x="1200" fg:w="6"/><text x="96.0202%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.0894%" y="389" width="0.1596%" height="15" fill="rgb(224,198,38)" fg:x="1204" fg:w="2"/><text x="96.3394%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.0894%" y="373" width="0.1596%" height="15" fill="rgb(234,12,40)" fg:x="1204" fg:w="2"/><text x="96.3394%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="96.0894%" y="357" width="0.1596%" height="15" fill="rgb(237,212,39)" fg:x="1204" fg:w="2"/><text x="96.3394%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.0894%" y="341" width="0.1596%" height="15" fill="rgb(253,2,33)" fg:x="1204" fg:w="2"/><text x="96.3394%" y="351.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="96.0894%" y="325" width="0.1596%" height="15" fill="rgb(251,29,16)" fg:x="1204" fg:w="2"/><text x="96.3394%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1692%" y="309" width="0.0798%" height="15" fill="rgb(214,38,29)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.1692%" y="293" width="0.0798%" height="15" fill="rgb(226,226,29)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.1692%" y="277" width="0.0798%" height="15" fill="rgb(236,79,42)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="287.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (10 samples, 0.80%)</title><rect x="95.5307%" y="501" width="0.7981%" height="15" fill="rgb(222,12,36)" fg:x="1197" fg:w="10"/><text x="95.7807%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (8 samples, 0.64%)</title><rect x="95.6903%" y="485" width="0.6385%" height="15" fill="rgb(232,123,44)" fg:x="1199" fg:w="8"/><text x="95.9403%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="95.6903%" y="469" width="0.6385%" height="15" fill="rgb(234,93,50)" fg:x="1199" fg:w="8"/><text x="95.9403%" y="479.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.2490%" y="453" width="0.0798%" height="15" fill="rgb(210,86,49)" fg:x="1206" fg:w="1"/><text x="96.4990%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.2490%" y="437" width="0.0798%" height="15" fill="rgb(224,91,54)" fg:x="1206" fg:w="1"/><text x="96.4990%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.2490%" y="421" width="0.0798%" height="15" fill="rgb(239,169,9)" fg:x="1206" fg:w="1"/><text x="96.4990%" y="431.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (11 samples, 0.88%)</title><rect x="95.5307%" y="517" width="0.8779%" height="15" fill="rgb(238,29,17)" fg:x="1197" fg:w="11"/><text x="95.7807%" y="527.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (1 samples, 0.08%)</title><rect x="96.3288%" y="501" width="0.0798%" height="15" fill="rgb(227,160,22)" fg:x="1207" fg:w="1"/><text x="96.5788%" y="511.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="96.3288%" y="485" width="0.0798%" height="15" fill="rgb(231,129,52)" fg:x="1207" fg:w="1"/><text x="96.5788%" y="495.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="96.3288%" y="469" width="0.0798%" height="15" fill="rgb(241,184,9)" fg:x="1207" fg:w="1"/><text x="96.5788%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (13 samples, 1.04%)</title><rect x="95.5307%" y="581" width="1.0375%" height="15" fill="rgb(217,43,48)" fg:x="1197" fg:w="13"/><text x="95.7807%" y="591.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (13 samples, 1.04%)</title><rect x="95.5307%" y="565" width="1.0375%" height="15" fill="rgb(213,49,1)" fg:x="1197" fg:w="13"/><text x="95.7807%" y="575.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (13 samples, 1.04%)</title><rect x="95.5307%" y="549" width="1.0375%" height="15" fill="rgb(223,79,39)" fg:x="1197" fg:w="13"/><text x="95.7807%" y="559.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (13 samples, 1.04%)</title><rect x="95.5307%" y="533" width="1.0375%" height="15" fill="rgb(228,227,46)" fg:x="1197" fg:w="13"/><text x="95.7807%" y="543.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="96.4086%" y="517" width="0.1596%" height="15" fill="rgb(245,89,41)" fg:x="1208" fg:w="2"/><text x="96.6586%" y="527.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (2 samples, 0.16%)</title><rect x="96.4086%" y="501" width="0.1596%" height="15" fill="rgb(253,83,21)" fg:x="1208" fg:w="2"/><text x="96.6586%" y="511.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="96.4086%" y="485" width="0.1596%" height="15" fill="rgb(229,116,51)" fg:x="1208" fg:w="2"/><text x="96.6586%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="96.4086%" y="469" width="0.1596%" height="15" fill="rgb(246,67,26)" fg:x="1208" fg:w="2"/><text x="96.6586%" y="479.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="96.4884%" y="453" width="0.0798%" height="15" fill="rgb(250,117,20)" fg:x="1209" fg:w="1"/><text x="96.7384%" y="463.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="96.4884%" y="437" width="0.0798%" height="15" fill="rgb(207,88,17)" fg:x="1209" fg:w="1"/><text x="96.7384%" y="447.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="96.4884%" y="421" width="0.0798%" height="15" fill="rgb(212,98,36)" fg:x="1209" fg:w="1"/><text x="96.7384%" y="431.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="96.4884%" y="405" width="0.0798%" height="15" fill="rgb(221,72,6)" fg:x="1209" fg:w="1"/><text x="96.7384%" y="415.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (1 samples, 0.08%)</title><rect x="96.4884%" y="389" width="0.0798%" height="15" fill="rgb(235,129,19)" fg:x="1209" fg:w="1"/><text x="96.7384%" y="399.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="96.4884%" y="373" width="0.0798%" height="15" fill="rgb(237,200,6)" fg:x="1209" fg:w="1"/><text x="96.7384%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="96.6480%" y="501" width="0.0798%" height="15" fill="rgb(239,69,54)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="96.6480%" y="485" width="0.0798%" height="15" fill="rgb(214,68,45)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="96.6480%" y="469" width="0.0798%" height="15" fill="rgb(254,160,8)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.6480%" y="453" width="0.0798%" height="15" fill="rgb(215,226,31)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.6480%" y="437" width="0.0798%" height="15" fill="rgb(253,6,35)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.6480%" y="421" width="0.0798%" height="15" fill="rgb(219,96,42)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.6480%" y="405" width="0.0798%" height="15" fill="rgb(207,170,13)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.6480%" y="389" width="0.0798%" height="15" fill="rgb(239,101,5)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.6480%" y="373" width="0.0798%" height="15" fill="rgb(228,183,34)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.6480%" y="357" width="0.0798%" height="15" fill="rgb(205,28,31)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.6480%" y="341" width="0.0798%" height="15" fill="rgb(214,118,50)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.6480%" y="325" width="0.0798%" height="15" fill="rgb(213,108,51)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.6480%" y="309" width="0.0798%" height="15" fill="rgb(238,56,37)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="96.7279%" y="485" width="0.0798%" height="15" fill="rgb(214,136,28)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.8077%" y="453" width="0.0798%" height="15" fill="rgb(221,201,54)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.8077%" y="437" width="0.0798%" height="15" fill="rgb(228,216,39)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.8077%" y="421" width="0.0798%" height="15" fill="rgb(207,229,49)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.8077%" y="405" width="0.0798%" height="15" fill="rgb(224,23,43)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.8077%" y="389" width="0.0798%" height="15" fill="rgb(247,97,18)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.8077%" y="373" width="0.0798%" height="15" fill="rgb(232,53,32)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (5 samples, 0.40%)</title><rect x="96.5682%" y="533" width="0.3990%" height="15" fill="rgb(247,38,23)" fg:x="1210" fg:w="5"/><text x="96.8182%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="96.6480%" y="517" width="0.3192%" height="15" fill="rgb(228,101,52)" fg:x="1211" fg:w="4"/><text x="96.8980%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="96.7279%" y="501" width="0.2394%" height="15" fill="rgb(231,45,36)" fg:x="1212" fg:w="3"/><text x="96.9779%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="96.8077%" y="485" width="0.1596%" height="15" fill="rgb(221,183,50)" fg:x="1213" fg:w="2"/><text x="97.0577%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="96.8077%" y="469" width="0.1596%" height="15" fill="rgb(251,132,12)" fg:x="1213" fg:w="2"/><text x="97.0577%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.8875%" y="453" width="0.0798%" height="15" fill="rgb(252,50,16)" fg:x="1214" fg:w="1"/><text x="97.1375%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8875%" y="437" width="0.0798%" height="15" fill="rgb(224,60,15)" fg:x="1214" fg:w="1"/><text x="97.1375%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.8875%" y="421" width="0.0798%" height="15" fill="rgb(254,2,34)" fg:x="1214" fg:w="1"/><text x="97.1375%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8875%" y="405" width="0.0798%" height="15" fill="rgb(232,154,8)" fg:x="1214" fg:w="1"/><text x="97.1375%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.8875%" y="389" width="0.0798%" height="15" fill="rgb(235,190,52)" fg:x="1214" fg:w="1"/><text x="97.1375%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8875%" y="373" width="0.0798%" height="15" fill="rgb(213,218,38)" fg:x="1214" fg:w="1"/><text x="97.1375%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.8875%" y="357" width="0.0798%" height="15" fill="rgb(237,50,37)" fg:x="1214" fg:w="1"/><text x="97.1375%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8875%" y="341" width="0.0798%" height="15" fill="rgb(235,51,35)" fg:x="1214" fg:w="1"/><text x="97.1375%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.9673%" y="469" width="0.0798%" height="15" fill="rgb(244,40,52)" fg:x="1215" fg:w="1"/><text x="97.2173%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="96.9673%" y="453" width="0.0798%" height="15" fill="rgb(217,225,45)" fg:x="1215" fg:w="1"/><text x="97.2173%" y="463.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="97.0471%" y="405" width="0.0798%" height="15" fill="rgb(247,191,36)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.2067%" y="373" width="0.0798%" height="15" fill="rgb(251,144,31)" fg:x="1218" fg:w="1"/><text x="97.4567%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.2067%" y="357" width="0.0798%" height="15" fill="rgb(227,155,41)" fg:x="1218" fg:w="1"/><text x="97.4567%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.2067%" y="341" width="0.0798%" height="15" fill="rgb(236,121,36)" fg:x="1218" fg:w="1"/><text x="97.4567%" y="351.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="96.9673%" y="517" width="0.3990%" height="15" fill="rgb(221,128,28)" fg:x="1215" fg:w="5"/><text x="97.2173%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="96.9673%" y="501" width="0.3990%" height="15" fill="rgb(249,67,50)" fg:x="1215" fg:w="5"/><text x="97.2173%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="96.9673%" y="485" width="0.3990%" height="15" fill="rgb(241,126,38)" fg:x="1215" fg:w="5"/><text x="97.2173%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="97.0471%" y="469" width="0.3192%" height="15" fill="rgb(239,33,14)" fg:x="1216" fg:w="4"/><text x="97.2971%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="97.0471%" y="453" width="0.3192%" height="15" fill="rgb(207,221,54)" fg:x="1216" fg:w="4"/><text x="97.2971%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="97.0471%" y="437" width="0.3192%" height="15" fill="rgb(242,138,43)" fg:x="1216" fg:w="4"/><text x="97.2971%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="97.0471%" y="421" width="0.3192%" height="15" fill="rgb(231,118,19)" fg:x="1216" fg:w="4"/><text x="97.2971%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.1269%" y="405" width="0.2394%" height="15" fill="rgb(214,128,54)" fg:x="1217" fg:w="3"/><text x="97.3769%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="97.1269%" y="389" width="0.2394%" height="15" fill="rgb(236,136,6)" fg:x="1217" fg:w="3"/><text x="97.3769%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.2865%" y="373" width="0.0798%" height="15" fill="rgb(247,30,38)" fg:x="1219" fg:w="1"/><text x="97.5365%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.2865%" y="357" width="0.0798%" height="15" fill="rgb(249,189,40)" fg:x="1219" fg:w="1"/><text x="97.5365%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.2865%" y="341" width="0.0798%" height="15" fill="rgb(247,179,7)" fg:x="1219" fg:w="1"/><text x="97.5365%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.2865%" y="325" width="0.0798%" height="15" fill="rgb(239,46,52)" fg:x="1219" fg:w="1"/><text x="97.5365%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.4461%" y="453" width="0.0798%" height="15" fill="rgb(225,28,52)" fg:x="1221" fg:w="1"/><text x="97.6961%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.5259%" y="453" width="0.0798%" height="15" fill="rgb(217,208,44)" fg:x="1222" fg:w="1"/><text x="97.7759%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.6057%" y="437" width="0.1596%" height="15" fill="rgb(224,11,34)" fg:x="1223" fg:w="2"/><text x="97.8557%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.6057%" y="421" width="0.1596%" height="15" fill="rgb(205,134,17)" fg:x="1223" fg:w="2"/><text x="97.8557%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.6057%" y="405" width="0.1596%" height="15" fill="rgb(237,125,9)" fg:x="1223" fg:w="2"/><text x="97.8557%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.6856%" y="389" width="0.0798%" height="15" fill="rgb(208,139,47)" fg:x="1224" fg:w="1"/><text x="97.9356%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.6856%" y="373" width="0.0798%" height="15" fill="rgb(242,5,5)" fg:x="1224" fg:w="1"/><text x="97.9356%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.6856%" y="357" width="0.0798%" height="15" fill="rgb(218,78,2)" fg:x="1224" fg:w="1"/><text x="97.9356%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.6856%" y="341" width="0.0798%" height="15" fill="rgb(217,75,16)" fg:x="1224" fg:w="1"/><text x="97.9356%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.6856%" y="325" width="0.0798%" height="15" fill="rgb(212,56,17)" fg:x="1224" fg:w="1"/><text x="97.9356%" y="335.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="97.6856%" y="309" width="0.0798%" height="15" fill="rgb(228,61,29)" fg:x="1224" fg:w="1"/><text x="97.9356%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="97.7654%" y="437" width="0.1596%" height="15" fill="rgb(247,202,38)" fg:x="1225" fg:w="2"/><text x="98.0154%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="97.7654%" y="421" width="0.1596%" height="15" fill="rgb(211,216,43)" fg:x="1225" fg:w="2"/><text x="98.0154%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="97.7654%" y="405" width="0.1596%" height="15" fill="rgb(220,7,49)" fg:x="1225" fg:w="2"/><text x="98.0154%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="97.8452%" y="389" width="0.0798%" height="15" fill="rgb(219,158,7)" fg:x="1226" fg:w="1"/><text x="98.0952%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.0048%" y="325" width="0.0798%" height="15" fill="rgb(206,127,9)" fg:x="1228" fg:w="1"/><text x="98.2548%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.0048%" y="309" width="0.0798%" height="15" fill="rgb(206,103,43)" fg:x="1228" fg:w="1"/><text x="98.2548%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (10 samples, 0.80%)</title><rect x="97.4461%" y="485" width="0.7981%" height="15" fill="rgb(240,108,41)" fg:x="1221" fg:w="10"/><text x="97.6961%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="97.4461%" y="469" width="0.7981%" height="15" fill="rgb(252,212,6)" fg:x="1221" fg:w="10"/><text x="97.6961%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.64%)</title><rect x="97.6057%" y="453" width="0.6385%" height="15" fill="rgb(248,105,31)" fg:x="1223" fg:w="8"/><text x="97.8557%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="97.9250%" y="437" width="0.3192%" height="15" fill="rgb(241,123,4)" fg:x="1227" fg:w="4"/><text x="98.1750%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="97.9250%" y="421" width="0.3192%" height="15" fill="rgb(223,74,37)" fg:x="1227" fg:w="4"/><text x="98.1750%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.32%)</title><rect x="97.9250%" y="405" width="0.3192%" height="15" fill="rgb(251,219,28)" fg:x="1227" fg:w="4"/><text x="98.1750%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="97.9250%" y="389" width="0.3192%" height="15" fill="rgb(218,36,31)" fg:x="1227" fg:w="4"/><text x="98.1750%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="97.9250%" y="373" width="0.3192%" height="15" fill="rgb(229,40,15)" fg:x="1227" fg:w="4"/><text x="98.1750%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="98.0048%" y="357" width="0.2394%" height="15" fill="rgb(208,138,37)" fg:x="1228" fg:w="3"/><text x="98.2548%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.0048%" y="341" width="0.2394%" height="15" fill="rgb(208,40,52)" fg:x="1228" fg:w="3"/><text x="98.2548%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.0846%" y="325" width="0.1596%" height="15" fill="rgb(246,181,48)" fg:x="1229" fg:w="2"/><text x="98.3346%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="98.0846%" y="309" width="0.1596%" height="15" fill="rgb(253,178,36)" fg:x="1229" fg:w="2"/><text x="98.3346%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.0846%" y="293" width="0.1596%" height="15" fill="rgb(210,170,6)" fg:x="1229" fg:w="2"/><text x="98.3346%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.0846%" y="277" width="0.1596%" height="15" fill="rgb(243,62,22)" fg:x="1229" fg:w="2"/><text x="98.3346%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="98.0846%" y="261" width="0.1596%" height="15" fill="rgb(213,145,26)" fg:x="1229" fg:w="2"/><text x="98.3346%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="98.0846%" y="245" width="0.1596%" height="15" fill="rgb(237,177,23)" fg:x="1229" fg:w="2"/><text x="98.3346%" y="255.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="98.0846%" y="229" width="0.1596%" height="15" fill="rgb(252,5,24)" fg:x="1229" fg:w="2"/><text x="98.3346%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (17 samples, 1.36%)</title><rect x="96.9673%" y="533" width="1.3567%" height="15" fill="rgb(230,108,54)" fg:x="1215" fg:w="17"/><text x="97.2173%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (12 samples, 0.96%)</title><rect x="97.3663%" y="517" width="0.9577%" height="15" fill="rgb(252,192,41)" fg:x="1220" fg:w="12"/><text x="97.6163%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.96%)</title><rect x="97.3663%" y="501" width="0.9577%" height="15" fill="rgb(218,125,20)" fg:x="1220" fg:w="12"/><text x="97.6163%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.2442%" y="485" width="0.0798%" height="15" fill="rgb(230,223,15)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.2442%" y="469" width="0.0798%" height="15" fill="rgb(239,99,47)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.4038%" y="469" width="0.0798%" height="15" fill="rgb(222,214,23)" fg:x="1233" fg:w="1"/><text x="98.6538%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.4038%" y="453" width="0.0798%" height="15" fill="rgb(250,98,43)" fg:x="1233" fg:w="1"/><text x="98.6538%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.4038%" y="437" width="0.0798%" height="15" fill="rgb(226,140,11)" fg:x="1233" fg:w="1"/><text x="98.6538%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.4836%" y="469" width="0.0798%" height="15" fill="rgb(239,2,22)" fg:x="1234" fg:w="1"/><text x="98.7336%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.4836%" y="453" width="0.0798%" height="15" fill="rgb(209,106,26)" fg:x="1234" fg:w="1"/><text x="98.7336%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.4836%" y="437" width="0.0798%" height="15" fill="rgb(209,135,11)" fg:x="1234" fg:w="1"/><text x="98.7336%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.4836%" y="421" width="0.0798%" height="15" fill="rgb(241,58,6)" fg:x="1234" fg:w="1"/><text x="98.7336%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.4836%" y="405" width="0.0798%" height="15" fill="rgb(214,78,1)" fg:x="1234" fg:w="1"/><text x="98.7336%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.4836%" y="389" width="0.0798%" height="15" fill="rgb(229,135,33)" fg:x="1234" fg:w="1"/><text x="98.7336%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.4836%" y="373" width="0.0798%" height="15" fill="rgb(245,87,50)" fg:x="1234" fg:w="1"/><text x="98.7336%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.4836%" y="357" width="0.0798%" height="15" fill="rgb(222,222,8)" fg:x="1234" fg:w="1"/><text x="98.7336%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.4836%" y="341" width="0.0798%" height="15" fill="rgb(214,97,50)" fg:x="1234" fg:w="1"/><text x="98.7336%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.4836%" y="325" width="0.0798%" height="15" fill="rgb(244,161,51)" fg:x="1234" fg:w="1"/><text x="98.7336%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.4836%" y="309" width="0.0798%" height="15" fill="rgb(225,17,4)" fg:x="1234" fg:w="1"/><text x="98.7336%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.4836%" y="293" width="0.0798%" height="15" fill="rgb(238,10,13)" fg:x="1234" fg:w="1"/><text x="98.7336%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="98.4038%" y="485" width="0.2394%" height="15" fill="rgb(239,169,14)" fg:x="1233" fg:w="3"/><text x="98.6538%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.5634%" y="469" width="0.0798%" height="15" fill="rgb(213,105,25)" fg:x="1235" fg:w="1"/><text x="98.8134%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.6433%" y="485" width="0.0798%" height="15" fill="rgb(233,4,17)" fg:x="1236" fg:w="1"/><text x="98.8933%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.8029%" y="389" width="0.0798%" height="15" fill="rgb(212,5,35)" fg:x="1238" fg:w="1"/><text x="99.0529%" y="399.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (31 samples, 2.47%)</title><rect x="96.5682%" y="549" width="2.4741%" height="15" fill="rgb(216,3,14)" fg:x="1210" fg:w="31"/><text x="96.8182%" y="559.50">en..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (9 samples, 0.72%)</title><rect x="98.3240%" y="533" width="0.7183%" height="15" fill="rgb(240,105,33)" fg:x="1232" fg:w="9"/><text x="98.5740%" y="543.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.72%)</title><rect x="98.3240%" y="517" width="0.7183%" height="15" fill="rgb(216,73,0)" fg:x="1232" fg:w="9"/><text x="98.5740%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="98.3240%" y="501" width="0.7183%" height="15" fill="rgb(217,153,48)" fg:x="1232" fg:w="9"/><text x="98.5740%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="98.7231%" y="485" width="0.3192%" height="15" fill="rgb(218,180,8)" fg:x="1237" fg:w="4"/><text x="98.9731%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="98.7231%" y="469" width="0.3192%" height="15" fill="rgb(252,168,2)" fg:x="1237" fg:w="4"/><text x="98.9731%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="98.8029%" y="453" width="0.2394%" height="15" fill="rgb(224,116,33)" fg:x="1238" fg:w="3"/><text x="99.0529%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.8029%" y="437" width="0.2394%" height="15" fill="rgb(229,205,17)" fg:x="1238" fg:w="3"/><text x="99.0529%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="98.8029%" y="421" width="0.2394%" height="15" fill="rgb(234,1,41)" fg:x="1238" fg:w="3"/><text x="99.0529%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.8029%" y="405" width="0.2394%" height="15" fill="rgb(244,185,8)" fg:x="1238" fg:w="3"/><text x="99.0529%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.8827%" y="389" width="0.1596%" height="15" fill="rgb(248,51,21)" fg:x="1239" fg:w="2"/><text x="99.1327%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.8827%" y="373" width="0.1596%" height="15" fill="rgb(248,157,31)" fg:x="1239" fg:w="2"/><text x="99.1327%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.9625%" y="357" width="0.0798%" height="15" fill="rgb(210,34,47)" fg:x="1240" fg:w="1"/><text x="99.2125%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (32 samples, 2.55%)</title><rect x="96.5682%" y="565" width="2.5539%" height="15" fill="rgb(227,139,53)" fg:x="1210" fg:w="32"/><text x="96.8182%" y="575.50">&lt;e..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="99.0423%" y="549" width="0.0798%" height="15" fill="rgb(232,211,37)" fg:x="1241" fg:w="1"/><text x="99.2923%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.0423%" y="533" width="0.0798%" height="15" fill="rgb(236,133,10)" fg:x="1241" fg:w="1"/><text x="99.2923%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.0423%" y="517" width="0.0798%" height="15" fill="rgb(243,202,25)" fg:x="1241" fg:w="1"/><text x="99.2923%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.0423%" y="501" width="0.0798%" height="15" fill="rgb(224,59,9)" fg:x="1241" fg:w="1"/><text x="99.2923%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.0423%" y="485" width="0.0798%" height="15" fill="rgb(206,146,16)" fg:x="1241" fg:w="1"/><text x="99.2923%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.0423%" y="469" width="0.0798%" height="15" fill="rgb(220,47,2)" fg:x="1241" fg:w="1"/><text x="99.2923%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.0423%" y="453" width="0.0798%" height="15" fill="rgb(225,124,51)" fg:x="1241" fg:w="1"/><text x="99.2923%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.0423%" y="437" width="0.0798%" height="15" fill="rgb(241,220,50)" fg:x="1241" fg:w="1"/><text x="99.2923%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.0423%" y="421" width="0.0798%" height="15" fill="rgb(232,168,5)" fg:x="1241" fg:w="1"/><text x="99.2923%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.0423%" y="405" width="0.0798%" height="15" fill="rgb(243,90,22)" fg:x="1241" fg:w="1"/><text x="99.2923%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.0423%" y="389" width="0.0798%" height="15" fill="rgb(223,153,32)" fg:x="1241" fg:w="1"/><text x="99.2923%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.0423%" y="373" width="0.0798%" height="15" fill="rgb(243,124,20)" fg:x="1241" fg:w="1"/><text x="99.2923%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.0423%" y="357" width="0.0798%" height="15" fill="rgb(246,168,39)" fg:x="1241" fg:w="1"/><text x="99.2923%" y="367.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="99.0423%" y="341" width="0.0798%" height="15" fill="rgb(222,165,54)" fg:x="1241" fg:w="1"/><text x="99.2923%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.1221%" y="373" width="0.0798%" height="15" fill="rgb(251,142,27)" fg:x="1242" fg:w="1"/><text x="99.3721%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.1221%" y="357" width="0.0798%" height="15" fill="rgb(207,168,50)" fg:x="1242" fg:w="1"/><text x="99.3721%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.1221%" y="341" width="0.0798%" height="15" fill="rgb(250,139,25)" fg:x="1242" fg:w="1"/><text x="99.3721%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.1221%" y="325" width="0.0798%" height="15" fill="rgb(214,194,48)" fg:x="1242" fg:w="1"/><text x="99.3721%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.1221%" y="309" width="0.0798%" height="15" fill="rgb(227,138,47)" fg:x="1242" fg:w="1"/><text x="99.3721%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.1221%" y="293" width="0.0798%" height="15" fill="rgb(250,162,5)" fg:x="1242" fg:w="1"/><text x="99.3721%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.1221%" y="277" width="0.0798%" height="15" fill="rgb(229,74,25)" fg:x="1242" fg:w="1"/><text x="99.3721%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.1221%" y="261" width="0.0798%" height="15" fill="rgb(221,124,34)" fg:x="1242" fg:w="1"/><text x="99.3721%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="99.1221%" y="245" width="0.0798%" height="15" fill="rgb(225,94,25)" fg:x="1242" fg:w="1"/><text x="99.3721%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="99.1221%" y="229" width="0.0798%" height="15" fill="rgb(210,100,12)" fg:x="1242" fg:w="1"/><text x="99.3721%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.1221%" y="213" width="0.0798%" height="15" fill="rgb(206,62,48)" fg:x="1242" fg:w="1"/><text x="99.3721%" y="223.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="99.2019%" y="357" width="0.0798%" height="15" fill="rgb(222,181,9)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.2019%" y="341" width="0.0798%" height="15" fill="rgb(248,42,38)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.2019%" y="325" width="0.0798%" height="15" fill="rgb(213,40,6)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.2019%" y="309" width="0.0798%" height="15" fill="rgb(211,108,15)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.2019%" y="293" width="0.0798%" height="15" fill="rgb(249,62,9)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.2019%" y="277" width="0.0798%" height="15" fill="rgb(233,26,54)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="287.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.2019%" y="261" width="0.0798%" height="15" fill="rgb(210,175,26)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.2019%" y="245" width="0.0798%" height="15" fill="rgb(210,43,33)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.2019%" y="229" width="0.0798%" height="15" fill="rgb(224,46,17)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.2019%" y="213" width="0.0798%" height="15" fill="rgb(254,24,38)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.2019%" y="197" width="0.0798%" height="15" fill="rgb(248,32,0)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.2019%" y="181" width="0.0798%" height="15" fill="rgb(224,37,41)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="99.2019%" y="165" width="0.0798%" height="15" fill="rgb(252,70,22)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="99.2019%" y="149" width="0.0798%" height="15" fill="rgb(241,123,50)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.2019%" y="133" width="0.0798%" height="15" fill="rgb(246,138,33)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="99.2019%" y="117" width="0.0798%" height="15" fill="rgb(218,39,32)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="127.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="99.2019%" y="101" width="0.0798%" height="15" fill="rgb(241,229,10)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="111.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="99.2019%" y="85" width="0.0798%" height="15" fill="rgb(212,160,10)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="95.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="99.2019%" y="69" width="0.0798%" height="15" fill="rgb(227,48,51)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="79.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (35 samples, 2.79%)</title><rect x="96.5682%" y="581" width="2.7933%" height="15" fill="rgb(238,159,21)" fg:x="1210" fg:w="35"/><text x="96.8182%" y="591.50">&lt;e..</text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="99.1221%" y="565" width="0.2394%" height="15" fill="rgb(216,1,10)" fg:x="1242" fg:w="3"/><text x="99.3721%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="99.1221%" y="549" width="0.2394%" height="15" fill="rgb(209,228,25)" fg:x="1242" fg:w="3"/><text x="99.3721%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="99.1221%" y="533" width="0.2394%" height="15" fill="rgb(234,160,10)" fg:x="1242" fg:w="3"/><text x="99.3721%" y="543.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="99.1221%" y="517" width="0.2394%" height="15" fill="rgb(212,66,25)" fg:x="1242" fg:w="3"/><text x="99.3721%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="99.1221%" y="501" width="0.2394%" height="15" fill="rgb(254,121,18)" fg:x="1242" fg:w="3"/><text x="99.3721%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="99.1221%" y="485" width="0.2394%" height="15" fill="rgb(219,127,1)" fg:x="1242" fg:w="3"/><text x="99.3721%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="99.1221%" y="469" width="0.2394%" height="15" fill="rgb(219,224,42)" fg:x="1242" fg:w="3"/><text x="99.3721%" y="479.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="99.1221%" y="453" width="0.2394%" height="15" fill="rgb(253,130,22)" fg:x="1242" fg:w="3"/><text x="99.3721%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="99.1221%" y="437" width="0.2394%" height="15" fill="rgb(253,39,28)" fg:x="1242" fg:w="3"/><text x="99.3721%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="99.1221%" y="421" width="0.2394%" height="15" fill="rgb(231,126,37)" fg:x="1242" fg:w="3"/><text x="99.3721%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="99.1221%" y="405" width="0.2394%" height="15" fill="rgb(251,145,14)" fg:x="1242" fg:w="3"/><text x="99.3721%" y="415.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="99.1221%" y="389" width="0.2394%" height="15" fill="rgb(229,164,30)" fg:x="1242" fg:w="3"/><text x="99.3721%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="99.2019%" y="373" width="0.1596%" height="15" fill="rgb(233,227,54)" fg:x="1243" fg:w="2"/><text x="99.4519%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.2817%" y="357" width="0.0798%" height="15" fill="rgb(240,94,22)" fg:x="1244" fg:w="1"/><text x="99.5317%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.2817%" y="341" width="0.0798%" height="15" fill="rgb(217,56,16)" fg:x="1244" fg:w="1"/><text x="99.5317%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.2817%" y="325" width="0.0798%" height="15" fill="rgb(229,133,38)" fg:x="1244" fg:w="1"/><text x="99.5317%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.2817%" y="309" width="0.0798%" height="15" fill="rgb(225,139,35)" fg:x="1244" fg:w="1"/><text x="99.5317%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.2817%" y="293" width="0.0798%" height="15" fill="rgb(223,100,16)" fg:x="1244" fg:w="1"/><text x="99.5317%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.2817%" y="277" width="0.0798%" height="15" fill="rgb(207,43,50)" fg:x="1244" fg:w="1"/><text x="99.5317%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.2817%" y="261" width="0.0798%" height="15" fill="rgb(237,221,9)" fg:x="1244" fg:w="1"/><text x="99.5317%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.2817%" y="245" width="0.0798%" height="15" fill="rgb(236,134,24)" fg:x="1244" fg:w="1"/><text x="99.5317%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="99.2817%" y="229" width="0.0798%" height="15" fill="rgb(222,173,4)" fg:x="1244" fg:w="1"/><text x="99.5317%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="99.2817%" y="213" width="0.0798%" height="15" fill="rgb(234,144,52)" fg:x="1244" fg:w="1"/><text x="99.5317%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.2817%" y="197" width="0.0798%" height="15" fill="rgb(223,41,7)" fg:x="1244" fg:w="1"/><text x="99.5317%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="99.2817%" y="181" width="0.0798%" height="15" fill="rgb(226,143,9)" fg:x="1244" fg:w="1"/><text x="99.5317%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="99.2817%" y="165" width="0.0798%" height="15" fill="rgb(234,43,37)" fg:x="1244" fg:w="1"/><text x="99.5317%" y="175.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="99.2817%" y="149" width="0.0798%" height="15" fill="rgb(224,188,11)" fg:x="1244" fg:w="1"/><text x="99.5317%" y="159.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="99.2817%" y="133" width="0.0798%" height="15" fill="rgb(233,113,28)" fg:x="1244" fg:w="1"/><text x="99.5317%" y="143.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.4413%" y="549" width="0.0798%" height="15" fill="rgb(215,16,1)" fg:x="1246" fg:w="1"/><text x="99.6913%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.6010%" y="453" width="0.0798%" height="15" fill="rgb(238,74,38)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.6010%" y="437" width="0.0798%" height="15" fill="rgb(221,66,35)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="447.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (6 samples, 0.48%)</title><rect x="99.3615%" y="581" width="0.4789%" height="15" fill="rgb(251,225,2)" fg:x="1245" fg:w="6"/><text x="99.6115%" y="591.50"></text></g><g><title>engine::users::model::username_to_key (5 samples, 0.40%)</title><rect x="99.4413%" y="565" width="0.3990%" height="15" fill="rgb(240,169,18)" fg:x="1246" fg:w="5"/><text x="99.6913%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="99.5211%" y="549" width="0.3192%" height="15" fill="rgb(243,130,50)" fg:x="1247" fg:w="4"/><text x="99.7711%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="99.5211%" y="533" width="0.3192%" height="15" fill="rgb(228,75,13)" fg:x="1247" fg:w="4"/><text x="99.7711%" y="543.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::de::Deserialize for engine::users::model::Usernames&gt;::deserialize (4 samples, 0.32%)</title><rect x="99.5211%" y="517" width="0.3192%" height="15" fill="rgb(252,95,35)" fg:x="1247" fg:w="4"/><text x="99.7711%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="99.5211%" y="501" width="0.3192%" height="15" fill="rgb(222,180,54)" fg:x="1247" fg:w="4"/><text x="99.7711%" y="511.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.24%)</title><rect x="99.6010%" y="485" width="0.2394%" height="15" fill="rgb(250,110,34)" fg:x="1248" fg:w="3"/><text x="99.8510%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.6010%" y="469" width="0.2394%" height="15" fill="rgb(208,100,21)" fg:x="1248" fg:w="3"/><text x="99.8510%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="99.6808%" y="453" width="0.1596%" height="15" fill="rgb(209,123,47)" fg:x="1249" fg:w="2"/><text x="99.9308%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="99.6808%" y="437" width="0.1596%" height="15" fill="rgb(237,147,9)" fg:x="1249" fg:w="2"/><text x="99.9308%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="99.7606%" y="421" width="0.0798%" height="15" fill="rgb(228,206,23)" fg:x="1250" fg:w="1"/><text x="100.0106%" y="431.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.8404%" y="581" width="0.0798%" height="15" fill="rgb(217,174,46)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="99.8404%" y="565" width="0.0798%" height="15" fill="rgb(231,126,21)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="575.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.8404%" y="549" width="0.0798%" height="15" fill="rgb(245,26,1)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="559.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.8404%" y="533" width="0.0798%" height="15" fill="rgb(224,138,39)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="543.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="99.8404%" y="517" width="0.0798%" height="15" fill="rgb(208,97,3)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="99.8404%" y="501" width="0.0798%" height="15" fill="rgb(222,77,29)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="511.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (1 samples, 0.08%)</title><rect x="99.8404%" y="485" width="0.0798%" height="15" fill="rgb(243,188,36)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="495.50"></text></g><g><title>all (1,253 samples, 100%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(218,214,3)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="975.50"></text></g><g><title>simple-81fabdd1 (1,253 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(211,183,45)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="959.50">simple-81fabdd1</text></g><g><title>_start (1,253 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(230,218,25)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="943.50">_start</text></g><g><title>__libc_start_main (1,253 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(233,86,6)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="927.50">__libc_start_main</text></g><g><title>main (1,253 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(220,59,24)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="911.50">main</text></g><g><title>std::rt::lang_start_internal (1,253 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(227,60,1)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="895.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,253 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(216,212,54)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="879.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,253 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(227,81,54)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="863.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,253 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(206,204,43)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="847.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,253 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(219,29,26)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="831.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,253 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(252,40,36)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,253 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(224,205,39)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,253 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(222,13,21)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="783.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,253 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(243,139,6)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="767.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,253 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(237,101,11)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="751.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,253 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(254,49,28)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="735.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,253 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(223,41,21)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="719.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,253 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(225,103,29)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="703.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,253 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(244,82,43)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="687.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (382 samples, 30.49%)</title><rect x="69.5132%" y="661" width="30.4868%" height="15" fill="rgb(217,39,3)" fg:x="871" fg:w="382"/><text x="69.7632%" y="671.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (382 samples, 30.49%)</title><rect x="69.5132%" y="645" width="30.4868%" height="15" fill="rgb(239,128,25)" fg:x="871" fg:w="382"/><text x="69.7632%" y="655.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (382 samples, 30.49%)</title><rect x="69.5132%" y="629" width="30.4868%" height="15" fill="rgb(210,192,37)" fg:x="871" fg:w="382"/><text x="69.7632%" y="639.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (57 samples, 4.55%)</title><rect x="95.4509%" y="613" width="4.5491%" height="15" fill="rgb(219,98,18)" fg:x="1196" fg:w="57"/><text x="95.7009%" y="623.50">engin..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (56 samples, 4.47%)</title><rect x="95.5307%" y="597" width="4.4693%" height="15" fill="rgb(224,228,38)" fg:x="1197" fg:w="56"/><text x="95.7807%" y="607.50">engin..</text></g><g><title>&lt;kernel::session::SetSession as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.9202%" y="581" width="0.0798%" height="15" fill="rgb(241,129,43)" fg:x="1252" fg:w="1"/><text x="100.1702%" y="591.50"></text></g></svg></svg>