<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="981.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="981.00"> </text><svg id="frames" x="10" width="1180" total_samples="1247"><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="0.0000%" y="613" width="0.0802%" height="15" fill="rgb(207,209,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="623.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.3208%" y="581" width="0.2406%" height="15" fill="rgb(230,144,49)" fg:x="4" fg:w="3"/><text x="0.5708%" y="591.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.7217%" y="501" width="0.2406%" height="15" fill="rgb(229,31,6)" fg:x="9" fg:w="3"/><text x="0.9717%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.9623%" y="437" width="0.0802%" height="15" fill="rgb(251,129,24)" fg:x="12" fg:w="1"/><text x="1.2123%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;kernel::model::entity::ScopeValue&gt;&gt; (2 samples, 0.16%)</title><rect x="0.9623%" y="501" width="0.1604%" height="15" fill="rgb(235,105,15)" fg:x="12" fg:w="2"/><text x="1.2123%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="0.9623%" y="485" width="0.1604%" height="15" fill="rgb(216,52,43)" fg:x="12" fg:w="2"/><text x="1.2123%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="0.9623%" y="469" width="0.1604%" height="15" fill="rgb(238,144,41)" fg:x="12" fg:w="2"/><text x="1.2123%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="0.9623%" y="453" width="0.1604%" height="15" fill="rgb(243,63,9)" fg:x="12" fg:w="2"/><text x="1.2123%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="1.0425%" y="437" width="0.0802%" height="15" fill="rgb(246,208,1)" fg:x="13" fg:w="1"/><text x="1.2925%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="1.0425%" y="421" width="0.0802%" height="15" fill="rgb(233,182,18)" fg:x="13" fg:w="1"/><text x="1.2925%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.0425%" y="405" width="0.0802%" height="15" fill="rgb(242,224,8)" fg:x="13" fg:w="1"/><text x="1.2925%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="1.1227%" y="469" width="0.2406%" height="15" fill="rgb(243,54,37)" fg:x="14" fg:w="3"/><text x="1.3727%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.2831%" y="453" width="0.0802%" height="15" fill="rgb(233,192,12)" fg:x="16" fg:w="1"/><text x="1.5331%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="1.4435%" y="453" width="0.2406%" height="15" fill="rgb(251,192,53)" fg:x="18" fg:w="3"/><text x="1.6935%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="1.4435%" y="437" width="0.2406%" height="15" fill="rgb(246,141,26)" fg:x="18" fg:w="3"/><text x="1.6935%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="1.4435%" y="421" width="0.2406%" height="15" fill="rgb(239,195,19)" fg:x="18" fg:w="3"/><text x="1.6935%" y="431.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="1.4435%" y="405" width="0.2406%" height="15" fill="rgb(241,16,39)" fg:x="18" fg:w="3"/><text x="1.6935%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.6840%" y="453" width="0.1604%" height="15" fill="rgb(223,13,53)" fg:x="21" fg:w="2"/><text x="1.9340%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.6840%" y="437" width="0.1604%" height="15" fill="rgb(214,227,0)" fg:x="21" fg:w="2"/><text x="1.9340%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10 samples, 0.80%)</title><rect x="1.1227%" y="485" width="0.8019%" height="15" fill="rgb(228,103,26)" fg:x="14" fg:w="10"/><text x="1.3727%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="1.3633%" y="469" width="0.5613%" height="15" fill="rgb(254,177,53)" fg:x="17" fg:w="7"/><text x="1.6133%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="1.8444%" y="453" width="0.0802%" height="15" fill="rgb(208,201,34)" fg:x="23" fg:w="1"/><text x="2.0944%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="1.8444%" y="437" width="0.0802%" height="15" fill="rgb(212,39,5)" fg:x="23" fg:w="1"/><text x="2.0944%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.8444%" y="421" width="0.0802%" height="15" fill="rgb(246,117,3)" fg:x="23" fg:w="1"/><text x="2.0944%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 1.44%)</title><rect x="0.5613%" y="533" width="1.4435%" height="15" fill="rgb(244,118,39)" fg:x="7" fg:w="18"/><text x="0.8113%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.36%)</title><rect x="0.6415%" y="517" width="1.3633%" height="15" fill="rgb(241,64,10)" fg:x="8" fg:w="17"/><text x="0.8915%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="1.1227%" y="501" width="0.8821%" height="15" fill="rgb(229,39,44)" fg:x="14" fg:w="11"/><text x="1.3727%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b&lt;(alloc::vec::Vec&lt;f64&gt;,alloc::vec::Vec&lt;f64&gt;),rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::range::IterProducer&lt;usize&gt;,rayon::iter::map_with::MapInitConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;criterion::stats::univariate::bootstrap&lt;f64,f64,(f64,f64),criterion::analysis::compare::estimates::stats&gt;::{{closure}},criterion::stats::univariate::bootstrap&lt;f64,f64,(f64,f64),criterion::analysis::compare::estimates::stats&gt;::{{closure}}&gt;,criterion::stats::univariate::bootstrap&lt;f64,f64,(f64,f64),criterion::analysis::compare::estimates::stats&gt;::{{closure}},criterion::stats::univariate::bootstrap&lt;f64,f64,(f64,f64),criterion::analysis::compare::estimates::stats&gt;::{{closure}}&gt;&gt;::{{closure}}&gt;::{{closure}},(alloc::vec::Vec&lt;f64&gt;,alloc::vec::Vec&lt;f64&gt;)&gt;&gt; (1 samples, 0.08%)</title><rect x="1.9246%" y="485" width="0.0802%" height="15" fill="rgb(230,226,3)" fg:x="24" fg:w="1"/><text x="2.1746%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.0048%" y="533" width="0.0802%" height="15" fill="rgb(222,13,42)" fg:x="25" fg:w="1"/><text x="2.2548%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 1.92%)</title><rect x="0.2406%" y="597" width="1.9246%" height="15" fill="rgb(247,180,54)" fg:x="3" fg:w="24"/><text x="0.4906%" y="607.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (20 samples, 1.60%)</title><rect x="0.5613%" y="581" width="1.6038%" height="15" fill="rgb(205,96,16)" fg:x="7" fg:w="20"/><text x="0.8113%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 1.60%)</title><rect x="0.5613%" y="565" width="1.6038%" height="15" fill="rgb(205,100,21)" fg:x="7" fg:w="20"/><text x="0.8113%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (20 samples, 1.60%)</title><rect x="0.5613%" y="549" width="1.6038%" height="15" fill="rgb(248,51,4)" fg:x="7" fg:w="20"/><text x="0.8113%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="2.0850%" y="533" width="0.0802%" height="15" fill="rgb(217,197,30)" fg:x="26" fg:w="1"/><text x="2.3350%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.0850%" y="517" width="0.0802%" height="15" fill="rgb(240,179,40)" fg:x="26" fg:w="1"/><text x="2.3350%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (4 samples, 0.32%)</title><rect x="2.4058%" y="533" width="0.3208%" height="15" fill="rgb(212,185,35)" fg:x="30" fg:w="4"/><text x="2.6558%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="2.7265%" y="437" width="0.0802%" height="15" fill="rgb(251,222,31)" fg:x="34" fg:w="1"/><text x="2.9765%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="2.7265%" y="421" width="0.0802%" height="15" fill="rgb(208,140,36)" fg:x="34" fg:w="1"/><text x="2.9765%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="2.7265%" y="405" width="0.0802%" height="15" fill="rgb(220,148,1)" fg:x="34" fg:w="1"/><text x="2.9765%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="2.7265%" y="389" width="0.0802%" height="15" fill="rgb(254,4,28)" fg:x="34" fg:w="1"/><text x="2.9765%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.8067%" y="309" width="0.0802%" height="15" fill="rgb(222,185,44)" fg:x="35" fg:w="1"/><text x="3.0567%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="2.7265%" y="485" width="0.2406%" height="15" fill="rgb(215,74,39)" fg:x="34" fg:w="3"/><text x="2.9765%" y="495.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.24%)</title><rect x="2.7265%" y="469" width="0.2406%" height="15" fill="rgb(247,86,4)" fg:x="34" fg:w="3"/><text x="2.9765%" y="479.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.24%)</title><rect x="2.7265%" y="453" width="0.2406%" height="15" fill="rgb(231,105,32)" fg:x="34" fg:w="3"/><text x="2.9765%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="2.8067%" y="437" width="0.1604%" height="15" fill="rgb(222,65,35)" fg:x="35" fg:w="2"/><text x="3.0567%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="2.8067%" y="421" width="0.1604%" height="15" fill="rgb(218,145,35)" fg:x="35" fg:w="2"/><text x="3.0567%" y="431.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="2.8067%" y="405" width="0.1604%" height="15" fill="rgb(208,7,15)" fg:x="35" fg:w="2"/><text x="3.0567%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="2.8067%" y="389" width="0.1604%" height="15" fill="rgb(209,83,13)" fg:x="35" fg:w="2"/><text x="3.0567%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="2.8067%" y="373" width="0.1604%" height="15" fill="rgb(218,3,10)" fg:x="35" fg:w="2"/><text x="3.0567%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="2.8067%" y="357" width="0.1604%" height="15" fill="rgb(211,219,4)" fg:x="35" fg:w="2"/><text x="3.0567%" y="367.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="2.8067%" y="341" width="0.1604%" height="15" fill="rgb(228,194,12)" fg:x="35" fg:w="2"/><text x="3.0567%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="2.8067%" y="325" width="0.1604%" height="15" fill="rgb(210,175,7)" fg:x="35" fg:w="2"/><text x="3.0567%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="2.8869%" y="309" width="0.0802%" height="15" fill="rgb(243,132,6)" fg:x="36" fg:w="1"/><text x="3.1369%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="2.8869%" y="293" width="0.0802%" height="15" fill="rgb(207,72,18)" fg:x="36" fg:w="1"/><text x="3.1369%" y="303.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (5 samples, 0.40%)</title><rect x="2.7265%" y="517" width="0.4010%" height="15" fill="rgb(236,1,18)" fg:x="34" fg:w="5"/><text x="2.9765%" y="527.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.40%)</title><rect x="2.7265%" y="501" width="0.4010%" height="15" fill="rgb(227,0,18)" fg:x="34" fg:w="5"/><text x="2.9765%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="2.9671%" y="485" width="0.1604%" height="15" fill="rgb(247,37,5)" fg:x="37" fg:w="2"/><text x="3.2171%" y="495.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="2.9671%" y="469" width="0.1604%" height="15" fill="rgb(237,179,24)" fg:x="37" fg:w="2"/><text x="3.2171%" y="479.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="2.9671%" y="453" width="0.1604%" height="15" fill="rgb(226,53,20)" fg:x="37" fg:w="2"/><text x="3.2171%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="2.9671%" y="437" width="0.1604%" height="15" fill="rgb(247,75,7)" fg:x="37" fg:w="2"/><text x="3.2171%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="2.9671%" y="421" width="0.1604%" height="15" fill="rgb(233,96,12)" fg:x="37" fg:w="2"/><text x="3.2171%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="3.0473%" y="405" width="0.0802%" height="15" fill="rgb(224,125,0)" fg:x="38" fg:w="1"/><text x="3.2973%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="3.0473%" y="389" width="0.0802%" height="15" fill="rgb(224,92,25)" fg:x="38" fg:w="1"/><text x="3.2973%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::scopes::Property)&gt; (1 samples, 0.08%)</title><rect x="3.1275%" y="501" width="0.0802%" height="15" fill="rgb(224,42,24)" fg:x="39" fg:w="1"/><text x="3.3775%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="3.2077%" y="469" width="0.1604%" height="15" fill="rgb(234,132,49)" fg:x="40" fg:w="2"/><text x="3.4577%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="3.2879%" y="453" width="0.0802%" height="15" fill="rgb(248,100,35)" fg:x="41" fg:w="1"/><text x="3.5379%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="3.2879%" y="437" width="0.0802%" height="15" fill="rgb(239,94,40)" fg:x="41" fg:w="1"/><text x="3.5379%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="3.2879%" y="421" width="0.0802%" height="15" fill="rgb(235,139,28)" fg:x="41" fg:w="1"/><text x="3.5379%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="3.2879%" y="405" width="0.0802%" height="15" fill="rgb(217,144,7)" fg:x="41" fg:w="1"/><text x="3.5379%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.2879%" y="389" width="0.0802%" height="15" fill="rgb(227,55,4)" fg:x="41" fg:w="1"/><text x="3.5379%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.2879%" y="373" width="0.0802%" height="15" fill="rgb(252,82,54)" fg:x="41" fg:w="1"/><text x="3.5379%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="3.2879%" y="357" width="0.0802%" height="15" fill="rgb(245,172,4)" fg:x="41" fg:w="1"/><text x="3.5379%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="3.2879%" y="341" width="0.0802%" height="15" fill="rgb(207,26,27)" fg:x="41" fg:w="1"/><text x="3.5379%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="3.2879%" y="325" width="0.0802%" height="15" fill="rgb(252,98,18)" fg:x="41" fg:w="1"/><text x="3.5379%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="3.2879%" y="309" width="0.0802%" height="15" fill="rgb(244,8,26)" fg:x="41" fg:w="1"/><text x="3.5379%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="3.2879%" y="293" width="0.0802%" height="15" fill="rgb(237,173,45)" fg:x="41" fg:w="1"/><text x="3.5379%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="3.1275%" y="517" width="0.3208%" height="15" fill="rgb(208,213,49)" fg:x="39" fg:w="4"/><text x="3.3775%" y="527.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.24%)</title><rect x="3.2077%" y="501" width="0.2406%" height="15" fill="rgb(212,122,37)" fg:x="40" fg:w="3"/><text x="3.4577%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.24%)</title><rect x="3.2077%" y="485" width="0.2406%" height="15" fill="rgb(213,80,17)" fg:x="40" fg:w="3"/><text x="3.4577%" y="495.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="3.3681%" y="469" width="0.0802%" height="15" fill="rgb(206,210,43)" fg:x="42" fg:w="1"/><text x="3.6181%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="3.3681%" y="453" width="0.0802%" height="15" fill="rgb(229,214,3)" fg:x="42" fg:w="1"/><text x="3.6181%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.3681%" y="437" width="0.0802%" height="15" fill="rgb(235,213,29)" fg:x="42" fg:w="1"/><text x="3.6181%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.3681%" y="421" width="0.0802%" height="15" fill="rgb(248,135,26)" fg:x="42" fg:w="1"/><text x="3.6181%" y="431.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="3.4483%" y="517" width="0.0802%" height="15" fill="rgb(242,188,12)" fg:x="43" fg:w="1"/><text x="3.6983%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="3.4483%" y="501" width="0.0802%" height="15" fill="rgb(245,38,12)" fg:x="43" fg:w="1"/><text x="3.6983%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="3.4483%" y="485" width="0.0802%" height="15" fill="rgb(218,42,13)" fg:x="43" fg:w="1"/><text x="3.6983%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="3.7690%" y="325" width="0.0802%" height="15" fill="rgb(238,132,49)" fg:x="47" fg:w="1"/><text x="4.0190%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="3.7690%" y="309" width="0.0802%" height="15" fill="rgb(209,196,19)" fg:x="47" fg:w="1"/><text x="4.0190%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="3.7690%" y="293" width="0.0802%" height="15" fill="rgb(244,131,22)" fg:x="47" fg:w="1"/><text x="4.0190%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="3.7690%" y="277" width="0.0802%" height="15" fill="rgb(223,18,34)" fg:x="47" fg:w="1"/><text x="4.0190%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="3.7690%" y="261" width="0.0802%" height="15" fill="rgb(252,124,54)" fg:x="47" fg:w="1"/><text x="4.0190%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="3.7690%" y="245" width="0.0802%" height="15" fill="rgb(229,106,42)" fg:x="47" fg:w="1"/><text x="4.0190%" y="255.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="3.7690%" y="229" width="0.0802%" height="15" fill="rgb(221,129,1)" fg:x="47" fg:w="1"/><text x="4.0190%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="3.7690%" y="357" width="0.1604%" height="15" fill="rgb(229,74,15)" fg:x="47" fg:w="2"/><text x="4.0190%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="3.7690%" y="341" width="0.1604%" height="15" fill="rgb(210,206,50)" fg:x="47" fg:w="2"/><text x="4.0190%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="3.8492%" y="325" width="0.0802%" height="15" fill="rgb(251,114,31)" fg:x="48" fg:w="1"/><text x="4.0992%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.8492%" y="309" width="0.0802%" height="15" fill="rgb(215,225,28)" fg:x="48" fg:w="1"/><text x="4.0992%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="3.7690%" y="389" width="0.2406%" height="15" fill="rgb(237,109,14)" fg:x="47" fg:w="3"/><text x="4.0190%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="3.7690%" y="373" width="0.2406%" height="15" fill="rgb(230,13,37)" fg:x="47" fg:w="3"/><text x="4.0190%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="3.9294%" y="357" width="0.0802%" height="15" fill="rgb(231,40,28)" fg:x="49" fg:w="1"/><text x="4.1794%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="4.0096%" y="293" width="0.0802%" height="15" fill="rgb(231,202,18)" fg:x="50" fg:w="1"/><text x="4.2596%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="3.7690%" y="437" width="0.4010%" height="15" fill="rgb(225,33,18)" fg:x="47" fg:w="5"/><text x="4.0190%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="3.7690%" y="421" width="0.4010%" height="15" fill="rgb(223,64,47)" fg:x="47" fg:w="5"/><text x="4.0190%" y="431.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="3.7690%" y="405" width="0.4010%" height="15" fill="rgb(234,114,13)" fg:x="47" fg:w="5"/><text x="4.0190%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="4.0096%" y="389" width="0.1604%" height="15" fill="rgb(248,56,40)" fg:x="50" fg:w="2"/><text x="4.2596%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="4.0096%" y="373" width="0.1604%" height="15" fill="rgb(221,194,21)" fg:x="50" fg:w="2"/><text x="4.2596%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="4.0096%" y="357" width="0.1604%" height="15" fill="rgb(242,108,46)" fg:x="50" fg:w="2"/><text x="4.2596%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="4.0096%" y="341" width="0.1604%" height="15" fill="rgb(220,106,10)" fg:x="50" fg:w="2"/><text x="4.2596%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="4.0096%" y="325" width="0.1604%" height="15" fill="rgb(211,88,4)" fg:x="50" fg:w="2"/><text x="4.2596%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="4.0096%" y="309" width="0.1604%" height="15" fill="rgb(214,95,34)" fg:x="50" fg:w="2"/><text x="4.2596%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="4.0898%" y="293" width="0.0802%" height="15" fill="rgb(250,160,33)" fg:x="51" fg:w="1"/><text x="4.3398%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="4.0898%" y="277" width="0.0802%" height="15" fill="rgb(225,29,10)" fg:x="51" fg:w="1"/><text x="4.3398%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="4.0898%" y="261" width="0.0802%" height="15" fill="rgb(224,28,30)" fg:x="51" fg:w="1"/><text x="4.3398%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="4.0898%" y="245" width="0.0802%" height="15" fill="rgb(231,77,4)" fg:x="51" fg:w="1"/><text x="4.3398%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="4.0898%" y="229" width="0.0802%" height="15" fill="rgb(209,63,21)" fg:x="51" fg:w="1"/><text x="4.3398%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="4.0898%" y="213" width="0.0802%" height="15" fill="rgb(226,22,11)" fg:x="51" fg:w="1"/><text x="4.3398%" y="223.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (10 samples, 0.80%)</title><rect x="3.5285%" y="501" width="0.8019%" height="15" fill="rgb(216,82,30)" fg:x="44" fg:w="10"/><text x="3.7785%" y="511.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (10 samples, 0.80%)</title><rect x="3.5285%" y="485" width="0.8019%" height="15" fill="rgb(246,227,38)" fg:x="44" fg:w="10"/><text x="3.7785%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="3.6087%" y="469" width="0.7217%" height="15" fill="rgb(251,203,53)" fg:x="45" fg:w="9"/><text x="3.8587%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="3.6087%" y="453" width="0.7217%" height="15" fill="rgb(254,101,1)" fg:x="45" fg:w="9"/><text x="3.8587%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="4.1700%" y="437" width="0.1604%" height="15" fill="rgb(241,180,5)" fg:x="52" fg:w="2"/><text x="4.4200%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="4.1700%" y="421" width="0.1604%" height="15" fill="rgb(218,168,4)" fg:x="52" fg:w="2"/><text x="4.4200%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.2502%" y="405" width="0.0802%" height="15" fill="rgb(224,223,32)" fg:x="53" fg:w="1"/><text x="4.5002%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="4.3304%" y="453" width="0.0802%" height="15" fill="rgb(236,106,22)" fg:x="54" fg:w="1"/><text x="4.5804%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="4.3304%" y="437" width="0.0802%" height="15" fill="rgb(206,121,5)" fg:x="54" fg:w="1"/><text x="4.5804%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="4.5710%" y="421" width="0.0802%" height="15" fill="rgb(233,87,28)" fg:x="57" fg:w="1"/><text x="4.8210%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="4.5710%" y="405" width="0.0802%" height="15" fill="rgb(236,137,17)" fg:x="57" fg:w="1"/><text x="4.8210%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="4.6512%" y="421" width="0.0802%" height="15" fill="rgb(209,183,38)" fg:x="58" fg:w="1"/><text x="4.9012%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="4.8115%" y="357" width="0.1604%" height="15" fill="rgb(206,162,44)" fg:x="60" fg:w="2"/><text x="5.0615%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="4.8115%" y="341" width="0.1604%" height="15" fill="rgb(237,70,39)" fg:x="60" fg:w="2"/><text x="5.0615%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="4.9719%" y="293" width="0.0802%" height="15" fill="rgb(212,176,5)" fg:x="62" fg:w="1"/><text x="5.2219%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.9719%" y="277" width="0.0802%" height="15" fill="rgb(232,95,16)" fg:x="62" fg:w="1"/><text x="5.2219%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="5.0521%" y="293" width="0.0802%" height="15" fill="rgb(219,115,35)" fg:x="63" fg:w="1"/><text x="5.3021%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="5.0521%" y="277" width="0.0802%" height="15" fill="rgb(251,67,27)" fg:x="63" fg:w="1"/><text x="5.3021%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.0521%" y="261" width="0.0802%" height="15" fill="rgb(222,95,40)" fg:x="63" fg:w="1"/><text x="5.3021%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (35 samples, 2.81%)</title><rect x="2.4058%" y="565" width="2.8067%" height="15" fill="rgb(250,35,16)" fg:x="30" fg:w="35"/><text x="2.6558%" y="575.50">&lt;e..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (35 samples, 2.81%)</title><rect x="2.4058%" y="549" width="2.8067%" height="15" fill="rgb(224,86,44)" fg:x="30" fg:w="35"/><text x="2.6558%" y="559.50">&lt;e..</text></g><g><title>engine::internal::Entities::add_persisted (31 samples, 2.49%)</title><rect x="2.7265%" y="533" width="2.4860%" height="15" fill="rgb(237,53,53)" fg:x="34" fg:w="31"/><text x="2.9765%" y="543.50">en..</text></g><g><title>kernel::model::deserialize_entity (21 samples, 1.68%)</title><rect x="3.5285%" y="517" width="1.6840%" height="15" fill="rgb(208,171,33)" fg:x="44" fg:w="21"/><text x="3.7785%" y="527.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.88%)</title><rect x="4.3304%" y="501" width="0.8821%" height="15" fill="rgb(222,64,27)" fg:x="54" fg:w="11"/><text x="4.5804%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.88%)</title><rect x="4.3304%" y="485" width="0.8821%" height="15" fill="rgb(221,121,35)" fg:x="54" fg:w="11"/><text x="4.5804%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="4.3304%" y="469" width="0.8821%" height="15" fill="rgb(228,137,42)" fg:x="54" fg:w="11"/><text x="4.5804%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.80%)</title><rect x="4.4106%" y="453" width="0.8019%" height="15" fill="rgb(227,54,21)" fg:x="55" fg:w="10"/><text x="4.6606%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="4.4908%" y="437" width="0.7217%" height="15" fill="rgb(240,168,33)" fg:x="56" fg:w="9"/><text x="4.7408%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="4.7314%" y="421" width="0.4812%" height="15" fill="rgb(243,159,6)" fg:x="59" fg:w="6"/><text x="4.9814%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="4.8115%" y="405" width="0.4010%" height="15" fill="rgb(205,211,41)" fg:x="60" fg:w="5"/><text x="5.0615%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="4.8115%" y="389" width="0.4010%" height="15" fill="rgb(253,30,1)" fg:x="60" fg:w="5"/><text x="5.0615%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="4.8115%" y="373" width="0.4010%" height="15" fill="rgb(226,80,18)" fg:x="60" fg:w="5"/><text x="5.0615%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="4.9719%" y="357" width="0.2406%" height="15" fill="rgb(253,156,46)" fg:x="62" fg:w="3"/><text x="5.2219%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="4.9719%" y="341" width="0.2406%" height="15" fill="rgb(248,87,27)" fg:x="62" fg:w="3"/><text x="5.2219%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="4.9719%" y="325" width="0.2406%" height="15" fill="rgb(227,122,2)" fg:x="62" fg:w="3"/><text x="5.2219%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="4.9719%" y="309" width="0.2406%" height="15" fill="rgb(229,94,39)" fg:x="62" fg:w="3"/><text x="5.2219%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="5.1323%" y="293" width="0.0802%" height="15" fill="rgb(225,173,31)" fg:x="64" fg:w="1"/><text x="5.3823%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="5.1323%" y="277" width="0.0802%" height="15" fill="rgb(239,176,30)" fg:x="64" fg:w="1"/><text x="5.3823%" y="287.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="5.2125%" y="565" width="0.0802%" height="15" fill="rgb(212,104,21)" fg:x="65" fg:w="1"/><text x="5.4625%" y="575.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="5.2927%" y="565" width="0.0802%" height="15" fill="rgb(240,209,40)" fg:x="66" fg:w="1"/><text x="5.5427%" y="575.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="5.2927%" y="549" width="0.0802%" height="15" fill="rgb(234,195,5)" fg:x="66" fg:w="1"/><text x="5.5427%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="5.2927%" y="533" width="0.0802%" height="15" fill="rgb(238,213,1)" fg:x="66" fg:w="1"/><text x="5.5427%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.2927%" y="517" width="0.0802%" height="15" fill="rgb(235,182,54)" fg:x="66" fg:w="1"/><text x="5.5427%" y="527.50"></text></g><g><title>anyhow::error::object_drop (1 samples, 0.08%)</title><rect x="5.5333%" y="533" width="0.0802%" height="15" fill="rgb(229,50,46)" fg:x="69" fg:w="1"/><text x="5.7833%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;libloading::error::Error&gt; (1 samples, 0.08%)</title><rect x="5.5333%" y="517" width="0.0802%" height="15" fill="rgb(219,145,13)" fg:x="69" fg:w="1"/><text x="5.7833%" y="527.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="5.6135%" y="533" width="0.0802%" height="15" fill="rgb(220,226,10)" fg:x="70" fg:w="1"/><text x="5.8635%" y="543.50"></text></g><g><title>__asprintf (5 samples, 0.40%)</title><rect x="5.8540%" y="501" width="0.4010%" height="15" fill="rgb(248,47,30)" fg:x="73" fg:w="5"/><text x="6.1040%" y="511.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="6.1748%" y="485" width="0.0802%" height="15" fill="rgb(231,209,44)" fg:x="77" fg:w="1"/><text x="6.4248%" y="495.50"></text></g><g><title>dlerror (8 samples, 0.64%)</title><rect x="5.6937%" y="517" width="0.6415%" height="15" fill="rgb(209,80,30)" fg:x="71" fg:w="8"/><text x="5.9437%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.2550%" y="501" width="0.0802%" height="15" fill="rgb(232,9,14)" fg:x="78" fg:w="1"/><text x="6.5050%" y="511.50"></text></g><g><title>dlopen (18 samples, 1.44%)</title><rect x="6.3352%" y="517" width="1.4435%" height="15" fill="rgb(243,91,43)" fg:x="79" fg:w="18"/><text x="6.5852%" y="527.50"></text></g><g><title>_dl_catch_error (18 samples, 1.44%)</title><rect x="6.3352%" y="501" width="1.4435%" height="15" fill="rgb(231,90,52)" fg:x="79" fg:w="18"/><text x="6.5852%" y="511.50"></text></g><g><title>_dl_catch_exception (18 samples, 1.44%)</title><rect x="6.3352%" y="485" width="1.4435%" height="15" fill="rgb(253,192,44)" fg:x="79" fg:w="18"/><text x="6.5852%" y="495.50"></text></g><g><title>_dl_catch_exception (18 samples, 1.44%)</title><rect x="6.3352%" y="469" width="1.4435%" height="15" fill="rgb(241,66,31)" fg:x="79" fg:w="18"/><text x="6.5852%" y="479.50"></text></g><g><title>_dl_catch_exception (18 samples, 1.44%)</title><rect x="6.3352%" y="453" width="1.4435%" height="15" fill="rgb(235,81,37)" fg:x="79" fg:w="18"/><text x="6.5852%" y="463.50"></text></g><g><title>libloading::os::unix::Library::open (27 samples, 2.17%)</title><rect x="5.6937%" y="533" width="2.1652%" height="15" fill="rgb(223,221,9)" fg:x="71" fg:w="27"/><text x="5.9437%" y="543.50">l..</text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="7.7787%" y="517" width="0.0802%" height="15" fill="rgb(242,180,7)" fg:x="97" fg:w="1"/><text x="8.0287%" y="527.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (32 samples, 2.57%)</title><rect x="5.3729%" y="549" width="2.5662%" height="15" fill="rgb(243,78,19)" fg:x="67" fg:w="32"/><text x="5.6229%" y="559.50">&lt;p..</text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="7.8589%" y="533" width="0.0802%" height="15" fill="rgb(233,23,17)" fg:x="98" fg:w="1"/><text x="8.1089%" y="543.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="7.8589%" y="517" width="0.0802%" height="15" fill="rgb(252,122,45)" fg:x="98" fg:w="1"/><text x="8.1089%" y="527.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="7.8589%" y="501" width="0.0802%" height="15" fill="rgb(247,108,20)" fg:x="98" fg:w="1"/><text x="8.1089%" y="511.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (73 samples, 5.85%)</title><rect x="2.1652%" y="597" width="5.8540%" height="15" fill="rgb(235,84,21)" fg:x="27" fg:w="73"/><text x="2.4152%" y="607.50">&lt;engine..</text></g><g><title>engine::session::Session::new (72 samples, 5.77%)</title><rect x="2.2454%" y="581" width="5.7739%" height="15" fill="rgb(247,129,10)" fg:x="28" fg:w="72"/><text x="2.4954%" y="591.50">engine:..</text></g><g><title>kernel::plugins::SessionPlugins::initialize (33 samples, 2.65%)</title><rect x="5.3729%" y="565" width="2.6464%" height="15" fill="rgb(208,173,14)" fg:x="67" fg:w="33"/><text x="5.6229%" y="575.50">ke..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="7.9391%" y="549" width="0.0802%" height="15" fill="rgb(236,31,38)" fg:x="99" fg:w="1"/><text x="8.1891%" y="559.50"></text></g><g><title>clock_getres (1 samples, 0.08%)</title><rect x="7.9391%" y="533" width="0.0802%" height="15" fill="rgb(232,65,17)" fg:x="99" fg:w="1"/><text x="8.1891%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="8.0994%" y="581" width="0.0802%" height="15" fill="rgb(224,45,49)" fg:x="101" fg:w="1"/><text x="8.3494%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.0994%" y="565" width="0.0802%" height="15" fill="rgb(225,2,53)" fg:x="101" fg:w="1"/><text x="8.3494%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::surround::Surroundings&gt; (1 samples, 0.08%)</title><rect x="8.1796%" y="581" width="0.0802%" height="15" fill="rgb(248,210,53)" fg:x="102" fg:w="1"/><text x="8.4296%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="8.2598%" y="549" width="0.2406%" height="15" fill="rgb(211,1,30)" fg:x="103" fg:w="3"/><text x="8.5098%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="8.3400%" y="533" width="0.1604%" height="15" fill="rgb(224,96,15)" fg:x="104" fg:w="2"/><text x="8.5900%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="8.3400%" y="517" width="0.1604%" height="15" fill="rgb(252,45,11)" fg:x="104" fg:w="2"/><text x="8.5900%" y="527.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="8.3400%" y="501" width="0.1604%" height="15" fill="rgb(220,125,38)" fg:x="104" fg:w="2"/><text x="8.5900%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="8.5004%" y="549" width="0.1604%" height="15" fill="rgb(243,161,33)" fg:x="106" fg:w="2"/><text x="8.7504%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.5806%" y="533" width="0.0802%" height="15" fill="rgb(248,197,34)" fg:x="107" fg:w="1"/><text x="8.8306%" y="543.50"></text></g><g><title>engine::identifiers::model::get_gid (4 samples, 0.32%)</title><rect x="8.6608%" y="549" width="0.3208%" height="15" fill="rgb(228,165,23)" fg:x="108" fg:w="4"/><text x="8.9108%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="8.6608%" y="533" width="0.3208%" height="15" fill="rgb(236,94,38)" fg:x="108" fg:w="4"/><text x="8.9108%" y="543.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (4 samples, 0.32%)</title><rect x="8.6608%" y="517" width="0.3208%" height="15" fill="rgb(220,13,23)" fg:x="108" fg:w="4"/><text x="8.9108%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="8.7410%" y="501" width="0.2406%" height="15" fill="rgb(234,26,39)" fg:x="109" fg:w="3"/><text x="8.9910%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="8.7410%" y="485" width="0.2406%" height="15" fill="rgb(205,117,44)" fg:x="109" fg:w="3"/><text x="8.9910%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.9014%" y="469" width="0.0802%" height="15" fill="rgb(250,42,2)" fg:x="111" fg:w="1"/><text x="9.1514%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.9014%" y="453" width="0.0802%" height="15" fill="rgb(223,83,14)" fg:x="111" fg:w="1"/><text x="9.1514%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="8.9014%" y="437" width="0.0802%" height="15" fill="rgb(241,147,50)" fg:x="111" fg:w="1"/><text x="9.1514%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="8.9014%" y="421" width="0.0802%" height="15" fill="rgb(218,90,6)" fg:x="111" fg:w="1"/><text x="9.1514%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="8.9014%" y="405" width="0.0802%" height="15" fill="rgb(210,191,5)" fg:x="111" fg:w="1"/><text x="9.1514%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.9014%" y="389" width="0.0802%" height="15" fill="rgb(225,139,19)" fg:x="111" fg:w="1"/><text x="9.1514%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.9014%" y="373" width="0.0802%" height="15" fill="rgb(210,1,33)" fg:x="111" fg:w="1"/><text x="9.1514%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="8.9014%" y="357" width="0.0802%" height="15" fill="rgb(213,50,3)" fg:x="111" fg:w="1"/><text x="9.1514%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="8.9014%" y="341" width="0.0802%" height="15" fill="rgb(234,227,4)" fg:x="111" fg:w="1"/><text x="9.1514%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="8.9014%" y="325" width="0.0802%" height="15" fill="rgb(246,63,5)" fg:x="111" fg:w="1"/><text x="9.1514%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="8.9014%" y="309" width="0.0802%" height="15" fill="rgb(245,136,27)" fg:x="111" fg:w="1"/><text x="9.1514%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.9014%" y="293" width="0.0802%" height="15" fill="rgb(247,199,27)" fg:x="111" fg:w="1"/><text x="9.1514%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.9816%" y="517" width="0.0802%" height="15" fill="rgb(252,158,49)" fg:x="112" fg:w="1"/><text x="9.2316%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.9816%" y="501" width="0.0802%" height="15" fill="rgb(254,73,1)" fg:x="112" fg:w="1"/><text x="9.2316%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="8.9816%" y="485" width="0.0802%" height="15" fill="rgb(248,93,19)" fg:x="112" fg:w="1"/><text x="9.2316%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="8.9816%" y="469" width="0.0802%" height="15" fill="rgb(206,67,5)" fg:x="112" fg:w="1"/><text x="9.2316%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="8.9816%" y="453" width="0.0802%" height="15" fill="rgb(209,210,4)" fg:x="112" fg:w="1"/><text x="9.2316%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="8.9816%" y="437" width="0.0802%" height="15" fill="rgb(214,185,36)" fg:x="112" fg:w="1"/><text x="9.2316%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="8.9816%" y="421" width="0.0802%" height="15" fill="rgb(233,191,26)" fg:x="112" fg:w="1"/><text x="9.2316%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="9.0617%" y="517" width="0.1604%" height="15" fill="rgb(248,94,17)" fg:x="113" fg:w="2"/><text x="9.3117%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="9.0617%" y="501" width="0.1604%" height="15" fill="rgb(250,64,4)" fg:x="113" fg:w="2"/><text x="9.3117%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="9.0617%" y="485" width="0.1604%" height="15" fill="rgb(218,41,53)" fg:x="113" fg:w="2"/><text x="9.3117%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="9.0617%" y="469" width="0.1604%" height="15" fill="rgb(251,176,28)" fg:x="113" fg:w="2"/><text x="9.3117%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="9.0617%" y="453" width="0.1604%" height="15" fill="rgb(247,22,9)" fg:x="113" fg:w="2"/><text x="9.3117%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="9.0617%" y="437" width="0.1604%" height="15" fill="rgb(218,201,14)" fg:x="113" fg:w="2"/><text x="9.3117%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.1419%" y="421" width="0.0802%" height="15" fill="rgb(218,94,10)" fg:x="114" fg:w="1"/><text x="9.3919%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="9.3023%" y="485" width="0.3208%" height="15" fill="rgb(222,183,52)" fg:x="116" fg:w="4"/><text x="9.5523%" y="495.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="9.3023%" y="469" width="0.3208%" height="15" fill="rgb(242,140,25)" fg:x="116" fg:w="4"/><text x="9.5523%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="9.3825%" y="453" width="0.2406%" height="15" fill="rgb(235,197,38)" fg:x="117" fg:w="3"/><text x="9.6325%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="9.4627%" y="437" width="0.1604%" height="15" fill="rgb(237,136,15)" fg:x="118" fg:w="2"/><text x="9.7127%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="9.5429%" y="421" width="0.0802%" height="15" fill="rgb(223,44,49)" fg:x="119" fg:w="1"/><text x="9.7929%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.5429%" y="405" width="0.0802%" height="15" fill="rgb(227,71,15)" fg:x="119" fg:w="1"/><text x="9.7929%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="9.5429%" y="389" width="0.0802%" height="15" fill="rgb(225,153,20)" fg:x="119" fg:w="1"/><text x="9.7929%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.56%)</title><rect x="9.2221%" y="501" width="0.5613%" height="15" fill="rgb(210,190,26)" fg:x="115" fg:w="7"/><text x="9.4721%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.6231%" y="485" width="0.1604%" height="15" fill="rgb(223,147,5)" fg:x="120" fg:w="2"/><text x="9.8731%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.1043%" y="437" width="0.0802%" height="15" fill="rgb(207,14,23)" fg:x="126" fg:w="1"/><text x="10.3543%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="9.7835%" y="485" width="0.4812%" height="15" fill="rgb(211,195,53)" fg:x="122" fg:w="6"/><text x="10.0335%" y="495.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="10.0241%" y="469" width="0.2406%" height="15" fill="rgb(237,75,46)" fg:x="125" fg:w="3"/><text x="10.2741%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="10.0241%" y="453" width="0.2406%" height="15" fill="rgb(254,55,14)" fg:x="125" fg:w="3"/><text x="10.2741%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="10.1844%" y="437" width="0.0802%" height="15" fill="rgb(230,185,30)" fg:x="127" fg:w="1"/><text x="10.4344%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="10.4250%" y="437" width="0.0802%" height="15" fill="rgb(220,14,11)" fg:x="130" fg:w="1"/><text x="10.6750%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="10.4250%" y="421" width="0.0802%" height="15" fill="rgb(215,169,44)" fg:x="130" fg:w="1"/><text x="10.6750%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="10.4250%" y="469" width="0.3208%" height="15" fill="rgb(253,203,20)" fg:x="130" fg:w="4"/><text x="10.6750%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="10.4250%" y="453" width="0.3208%" height="15" fill="rgb(229,225,17)" fg:x="130" fg:w="4"/><text x="10.6750%" y="463.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="10.5052%" y="437" width="0.2406%" height="15" fill="rgb(236,76,26)" fg:x="131" fg:w="3"/><text x="10.7552%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="10.5854%" y="421" width="0.1604%" height="15" fill="rgb(234,15,30)" fg:x="132" fg:w="2"/><text x="10.8354%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.6656%" y="405" width="0.0802%" height="15" fill="rgb(211,113,48)" fg:x="133" fg:w="1"/><text x="10.9156%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="10.7458%" y="469" width="0.0802%" height="15" fill="rgb(221,31,36)" fg:x="134" fg:w="1"/><text x="10.9958%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="10.8260%" y="453" width="0.1604%" height="15" fill="rgb(215,118,52)" fg:x="135" fg:w="2"/><text x="11.0760%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.9062%" y="437" width="0.0802%" height="15" fill="rgb(241,151,27)" fg:x="136" fg:w="1"/><text x="11.1562%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="11.0666%" y="437" width="0.0802%" height="15" fill="rgb(253,51,3)" fg:x="138" fg:w="1"/><text x="11.3166%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="11.0666%" y="421" width="0.0802%" height="15" fill="rgb(216,201,24)" fg:x="138" fg:w="1"/><text x="11.3166%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="11.0666%" y="405" width="0.0802%" height="15" fill="rgb(231,107,4)" fg:x="138" fg:w="1"/><text x="11.3166%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="11.1468%" y="421" width="0.2406%" height="15" fill="rgb(243,97,54)" fg:x="139" fg:w="3"/><text x="11.3968%" y="431.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="11.1468%" y="405" width="0.2406%" height="15" fill="rgb(221,32,51)" fg:x="139" fg:w="3"/><text x="11.3968%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="11.1468%" y="389" width="0.2406%" height="15" fill="rgb(218,171,35)" fg:x="139" fg:w="3"/><text x="11.3968%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="11.1468%" y="373" width="0.2406%" height="15" fill="rgb(214,20,53)" fg:x="139" fg:w="3"/><text x="11.3968%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="11.3873%" y="405" width="0.0802%" height="15" fill="rgb(239,9,52)" fg:x="142" fg:w="1"/><text x="11.6373%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="11.4675%" y="405" width="0.0802%" height="15" fill="rgb(215,114,45)" fg:x="143" fg:w="1"/><text x="11.7175%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="11.4675%" y="389" width="0.0802%" height="15" fill="rgb(208,118,9)" fg:x="143" fg:w="1"/><text x="11.7175%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="11.5477%" y="405" width="0.1604%" height="15" fill="rgb(235,7,39)" fg:x="144" fg:w="2"/><text x="11.7977%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="11.6279%" y="389" width="0.0802%" height="15" fill="rgb(243,225,15)" fg:x="145" fg:w="1"/><text x="11.8779%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="11.6279%" y="373" width="0.0802%" height="15" fill="rgb(225,216,18)" fg:x="145" fg:w="1"/><text x="11.8779%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="11.3873%" y="421" width="0.4812%" height="15" fill="rgb(233,36,38)" fg:x="142" fg:w="6"/><text x="11.6373%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="11.7081%" y="405" width="0.1604%" height="15" fill="rgb(239,88,23)" fg:x="146" fg:w="2"/><text x="11.9581%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="11.7883%" y="389" width="0.0802%" height="15" fill="rgb(219,181,35)" fg:x="147" fg:w="1"/><text x="12.0383%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.7883%" y="373" width="0.0802%" height="15" fill="rgb(215,18,46)" fg:x="147" fg:w="1"/><text x="12.0383%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="11.7883%" y="357" width="0.0802%" height="15" fill="rgb(241,38,11)" fg:x="147" fg:w="1"/><text x="12.0383%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="11.7883%" y="341" width="0.0802%" height="15" fill="rgb(248,169,45)" fg:x="147" fg:w="1"/><text x="12.0383%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="11.7883%" y="325" width="0.0802%" height="15" fill="rgb(239,50,49)" fg:x="147" fg:w="1"/><text x="12.0383%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.12%)</title><rect x="10.8260%" y="469" width="1.1227%" height="15" fill="rgb(231,96,31)" fg:x="135" fg:w="14"/><text x="11.0760%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="10.9864%" y="453" width="0.9623%" height="15" fill="rgb(224,193,37)" fg:x="137" fg:w="12"/><text x="11.2364%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="11.1468%" y="437" width="0.8019%" height="15" fill="rgb(227,153,50)" fg:x="139" fg:w="10"/><text x="11.3968%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="11.8685%" y="421" width="0.0802%" height="15" fill="rgb(249,228,3)" fg:x="148" fg:w="1"/><text x="12.1185%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="11.8685%" y="405" width="0.0802%" height="15" fill="rgb(219,164,43)" fg:x="148" fg:w="1"/><text x="12.1185%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.9487%" y="437" width="0.0802%" height="15" fill="rgb(216,45,41)" fg:x="149" fg:w="1"/><text x="12.1987%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.84%)</title><rect x="10.2646%" y="485" width="1.8444%" height="15" fill="rgb(210,226,51)" fg:x="128" fg:w="23"/><text x="10.5146%" y="495.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="11.9487%" y="469" width="0.1604%" height="15" fill="rgb(209,117,49)" fg:x="149" fg:w="2"/><text x="12.1987%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="11.9487%" y="453" width="0.1604%" height="15" fill="rgb(206,196,24)" fg:x="149" fg:w="2"/><text x="12.1987%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="12.0289%" y="437" width="0.0802%" height="15" fill="rgb(253,218,3)" fg:x="150" fg:w="1"/><text x="12.2789%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (41 samples, 3.29%)</title><rect x="9.2221%" y="517" width="3.2879%" height="15" fill="rgb(252,166,2)" fg:x="115" fg:w="41"/><text x="9.4721%" y="527.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (34 samples, 2.73%)</title><rect x="9.7835%" y="501" width="2.7265%" height="15" fill="rgb(236,218,26)" fg:x="122" fg:w="34"/><text x="10.0335%" y="511.50">se..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="12.1091%" y="485" width="0.4010%" height="15" fill="rgb(254,84,19)" fg:x="151" fg:w="5"/><text x="12.3591%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="12.2694%" y="469" width="0.2406%" height="15" fill="rgb(219,137,29)" fg:x="153" fg:w="3"/><text x="12.5194%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="12.2694%" y="453" width="0.2406%" height="15" fill="rgb(227,47,52)" fg:x="153" fg:w="3"/><text x="12.5194%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="12.3496%" y="437" width="0.1604%" height="15" fill="rgb(229,167,24)" fg:x="154" fg:w="2"/><text x="12.5996%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="12.4298%" y="421" width="0.0802%" height="15" fill="rgb(233,164,1)" fg:x="155" fg:w="1"/><text x="12.6798%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="12.4298%" y="405" width="0.0802%" height="15" fill="rgb(218,88,48)" fg:x="155" fg:w="1"/><text x="12.6798%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.5100%" y="485" width="0.0802%" height="15" fill="rgb(226,214,24)" fg:x="156" fg:w="1"/><text x="12.7600%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.5902%" y="469" width="0.0802%" height="15" fill="rgb(233,29,12)" fg:x="157" fg:w="1"/><text x="12.8402%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="12.6704%" y="453" width="0.1604%" height="15" fill="rgb(219,120,34)" fg:x="158" fg:w="2"/><text x="12.9204%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.7506%" y="437" width="0.0802%" height="15" fill="rgb(226,78,44)" fg:x="159" fg:w="1"/><text x="13.0006%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="12.8308%" y="437" width="0.0802%" height="15" fill="rgb(240,15,48)" fg:x="160" fg:w="1"/><text x="13.0808%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.8308%" y="421" width="0.0802%" height="15" fill="rgb(253,176,7)" fg:x="160" fg:w="1"/><text x="13.0808%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.8308%" y="405" width="0.0802%" height="15" fill="rgb(206,166,28)" fg:x="160" fg:w="1"/><text x="13.0808%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.8308%" y="389" width="0.0802%" height="15" fill="rgb(241,53,51)" fg:x="160" fg:w="1"/><text x="13.0808%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.9110%" y="405" width="0.0802%" height="15" fill="rgb(249,112,30)" fg:x="161" fg:w="1"/><text x="13.1610%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.9110%" y="389" width="0.0802%" height="15" fill="rgb(217,85,30)" fg:x="161" fg:w="1"/><text x="13.1610%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="12.5100%" y="517" width="0.6415%" height="15" fill="rgb(233,49,7)" fg:x="156" fg:w="8"/><text x="12.7600%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="12.5100%" y="501" width="0.6415%" height="15" fill="rgb(234,109,9)" fg:x="156" fg:w="8"/><text x="12.7600%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="12.5902%" y="485" width="0.5613%" height="15" fill="rgb(253,95,22)" fg:x="157" fg:w="7"/><text x="12.8402%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="12.6704%" y="469" width="0.4812%" height="15" fill="rgb(233,176,25)" fg:x="158" fg:w="6"/><text x="12.9204%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="12.8308%" y="453" width="0.3208%" height="15" fill="rgb(236,33,39)" fg:x="160" fg:w="4"/><text x="13.0808%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="12.9110%" y="437" width="0.2406%" height="15" fill="rgb(223,226,42)" fg:x="161" fg:w="3"/><text x="13.1610%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="12.9110%" y="421" width="0.2406%" height="15" fill="rgb(216,99,33)" fg:x="161" fg:w="3"/><text x="13.1610%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="12.9912%" y="405" width="0.1604%" height="15" fill="rgb(235,84,23)" fg:x="162" fg:w="2"/><text x="13.2412%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.0714%" y="389" width="0.0802%" height="15" fill="rgb(232,2,27)" fg:x="163" fg:w="1"/><text x="13.3214%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::ChangeType&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="13.1516%" y="485" width="0.0802%" height="15" fill="rgb(241,23,22)" fg:x="164" fg:w="1"/><text x="13.4016%" y="495.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="13.1516%" y="501" width="0.1604%" height="15" fill="rgb(211,73,27)" fg:x="164" fg:w="2"/><text x="13.4016%" y="511.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="13.2318%" y="485" width="0.0802%" height="15" fill="rgb(235,109,49)" fg:x="165" fg:w="1"/><text x="13.4818%" y="495.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="13.2318%" y="469" width="0.0802%" height="15" fill="rgb(230,99,29)" fg:x="165" fg:w="1"/><text x="13.4818%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.3921%" y="469" width="0.0802%" height="15" fill="rgb(245,199,7)" fg:x="167" fg:w="1"/><text x="13.6421%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="13.4723%" y="469" width="0.3208%" height="15" fill="rgb(217,179,10)" fg:x="168" fg:w="4"/><text x="13.7223%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.7129%" y="453" width="0.0802%" height="15" fill="rgb(254,99,47)" fg:x="171" fg:w="1"/><text x="13.9629%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="13.7129%" y="437" width="0.0802%" height="15" fill="rgb(251,121,7)" fg:x="171" fg:w="1"/><text x="13.9629%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="13.7931%" y="469" width="0.0802%" height="15" fill="rgb(250,177,26)" fg:x="172" fg:w="1"/><text x="14.0431%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="13.8733%" y="469" width="0.0802%" height="15" fill="rgb(232,88,15)" fg:x="173" fg:w="1"/><text x="14.1233%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="13.8733%" y="453" width="0.0802%" height="15" fill="rgb(251,54,54)" fg:x="173" fg:w="1"/><text x="14.1233%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.0337%" y="453" width="0.0802%" height="15" fill="rgb(208,177,15)" fg:x="175" fg:w="1"/><text x="14.2837%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.1139%" y="421" width="0.0802%" height="15" fill="rgb(205,97,32)" fg:x="176" fg:w="1"/><text x="14.3639%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.1139%" y="405" width="0.0802%" height="15" fill="rgb(217,192,13)" fg:x="176" fg:w="1"/><text x="14.3639%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.1139%" y="389" width="0.0802%" height="15" fill="rgb(215,163,41)" fg:x="176" fg:w="1"/><text x="14.3639%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="14.2743%" y="389" width="0.1604%" height="15" fill="rgb(246,83,29)" fg:x="178" fg:w="2"/><text x="14.5243%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="14.2743%" y="373" width="0.1604%" height="15" fill="rgb(219,2,45)" fg:x="178" fg:w="2"/><text x="14.5243%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="14.2743%" y="357" width="0.1604%" height="15" fill="rgb(242,215,33)" fg:x="178" fg:w="2"/><text x="14.5243%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="14.1941%" y="421" width="0.3208%" height="15" fill="rgb(217,1,6)" fg:x="177" fg:w="4"/><text x="14.4441%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="14.2743%" y="405" width="0.2406%" height="15" fill="rgb(207,85,52)" fg:x="178" fg:w="3"/><text x="14.5243%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.4346%" y="389" width="0.0802%" height="15" fill="rgb(231,171,19)" fg:x="180" fg:w="1"/><text x="14.6846%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="14.6752%" y="405" width="0.0802%" height="15" fill="rgb(207,128,4)" fg:x="183" fg:w="1"/><text x="14.9252%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.7554%" y="389" width="0.0802%" height="15" fill="rgb(219,208,4)" fg:x="184" fg:w="1"/><text x="15.0054%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.7554%" y="373" width="0.0802%" height="15" fill="rgb(235,161,42)" fg:x="184" fg:w="1"/><text x="15.0054%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.7554%" y="357" width="0.0802%" height="15" fill="rgb(247,218,18)" fg:x="184" fg:w="1"/><text x="15.0054%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="14.8356%" y="389" width="0.0802%" height="15" fill="rgb(232,114,51)" fg:x="185" fg:w="1"/><text x="15.0856%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="14.9158%" y="373" width="0.4010%" height="15" fill="rgb(222,95,3)" fg:x="186" fg:w="5"/><text x="15.1658%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="14.9960%" y="357" width="0.3208%" height="15" fill="rgb(240,65,29)" fg:x="187" fg:w="4"/><text x="15.2460%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="14.9960%" y="341" width="0.3208%" height="15" fill="rgb(249,209,20)" fg:x="187" fg:w="4"/><text x="15.2460%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="15.0762%" y="325" width="0.2406%" height="15" fill="rgb(241,48,37)" fg:x="188" fg:w="3"/><text x="15.3262%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="15.2366%" y="309" width="0.0802%" height="15" fill="rgb(230,140,42)" fg:x="190" fg:w="1"/><text x="15.4866%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.2366%" y="293" width="0.0802%" height="15" fill="rgb(230,176,45)" fg:x="190" fg:w="1"/><text x="15.4866%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.2366%" y="277" width="0.0802%" height="15" fill="rgb(245,112,21)" fg:x="190" fg:w="1"/><text x="15.4866%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.2366%" y="261" width="0.0802%" height="15" fill="rgb(207,183,35)" fg:x="190" fg:w="1"/><text x="15.4866%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="14.7554%" y="405" width="0.6415%" height="15" fill="rgb(227,44,33)" fg:x="184" fg:w="8"/><text x="15.0054%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="14.9158%" y="389" width="0.4812%" height="15" fill="rgb(246,120,21)" fg:x="186" fg:w="6"/><text x="15.1658%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.3168%" y="373" width="0.0802%" height="15" fill="rgb(235,57,52)" fg:x="191" fg:w="1"/><text x="15.5668%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (18 samples, 1.44%)</title><rect x="14.1139%" y="437" width="1.4435%" height="15" fill="rgb(238,84,10)" fg:x="176" fg:w="18"/><text x="14.3639%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.04%)</title><rect x="14.5148%" y="421" width="1.0425%" height="15" fill="rgb(251,200,32)" fg:x="181" fg:w="13"/><text x="14.7648%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="15.3970%" y="405" width="0.1604%" height="15" fill="rgb(247,159,13)" fg:x="192" fg:w="2"/><text x="15.6470%" y="415.50"></text></g><g><title>engine::session::Session::flush (94 samples, 7.54%)</title><rect x="8.2598%" y="581" width="7.5381%" height="15" fill="rgb(238,64,4)" fg:x="103" fg:w="94"/><text x="8.5098%" y="591.50">engine::se..</text></g><g><title>engine::session::Session::save_entity_changes (94 samples, 7.54%)</title><rect x="8.2598%" y="565" width="7.5381%" height="15" fill="rgb(221,131,51)" fg:x="103" fg:w="94"/><text x="8.5098%" y="575.50">engine::se..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (85 samples, 6.82%)</title><rect x="8.9816%" y="549" width="6.8164%" height="15" fill="rgb(242,5,29)" fg:x="112" fg:w="85"/><text x="9.2316%" y="559.50">engine::i..</text></g><g><title>engine::session::SavesEntities::check_for_changes (85 samples, 6.82%)</title><rect x="8.9816%" y="533" width="6.8164%" height="15" fill="rgb(214,130,32)" fg:x="112" fg:w="85"/><text x="9.2316%" y="543.50">engine::s..</text></g><g><title>kernel::model::any_entity_changes (33 samples, 2.65%)</title><rect x="13.1516%" y="517" width="2.6464%" height="15" fill="rgb(244,210,16)" fg:x="164" fg:w="33"/><text x="13.4016%" y="527.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (31 samples, 2.49%)</title><rect x="13.3119%" y="501" width="2.4860%" height="15" fill="rgb(234,48,26)" fg:x="166" fg:w="31"/><text x="13.5619%" y="511.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (31 samples, 2.49%)</title><rect x="13.3119%" y="485" width="2.4860%" height="15" fill="rgb(231,82,38)" fg:x="166" fg:w="31"/><text x="13.5619%" y="495.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (23 samples, 1.84%)</title><rect x="13.9535%" y="469" width="1.8444%" height="15" fill="rgb(254,128,41)" fg:x="174" fg:w="23"/><text x="14.2035%" y="479.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.68%)</title><rect x="14.1139%" y="453" width="1.6840%" height="15" fill="rgb(212,73,49)" fg:x="176" fg:w="21"/><text x="14.3639%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="15.5573%" y="437" width="0.2406%" height="15" fill="rgb(205,62,54)" fg:x="194" fg:w="3"/><text x="15.8073%" y="447.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="15.5573%" y="421" width="0.2406%" height="15" fill="rgb(228,0,8)" fg:x="194" fg:w="3"/><text x="15.8073%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="15.8781%" y="549" width="0.0802%" height="15" fill="rgb(251,28,17)" fg:x="198" fg:w="1"/><text x="16.1281%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="15.8781%" y="533" width="0.0802%" height="15" fill="rgb(238,105,27)" fg:x="198" fg:w="1"/><text x="16.1281%" y="543.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="15.8781%" y="517" width="0.0802%" height="15" fill="rgb(237,216,33)" fg:x="198" fg:w="1"/><text x="16.1281%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.8781%" y="501" width="0.0802%" height="15" fill="rgb(229,228,25)" fg:x="198" fg:w="1"/><text x="16.1281%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="15.9583%" y="517" width="0.0802%" height="15" fill="rgb(233,75,23)" fg:x="199" fg:w="1"/><text x="16.2083%" y="527.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="15.9583%" y="501" width="0.0802%" height="15" fill="rgb(231,207,16)" fg:x="199" fg:w="1"/><text x="16.2083%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="15.9583%" y="485" width="0.0802%" height="15" fill="rgb(231,191,45)" fg:x="199" fg:w="1"/><text x="16.2083%" y="495.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="15.9583%" y="469" width="0.0802%" height="15" fill="rgb(224,133,17)" fg:x="199" fg:w="1"/><text x="16.2083%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.9583%" y="453" width="0.0802%" height="15" fill="rgb(209,178,27)" fg:x="199" fg:w="1"/><text x="16.2083%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.9583%" y="437" width="0.0802%" height="15" fill="rgb(218,37,11)" fg:x="199" fg:w="1"/><text x="16.2083%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.9583%" y="421" width="0.0802%" height="15" fill="rgb(251,226,25)" fg:x="199" fg:w="1"/><text x="16.2083%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.0385%" y="405" width="0.0802%" height="15" fill="rgb(209,222,27)" fg:x="200" fg:w="1"/><text x="16.2885%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="16.1187%" y="373" width="0.0802%" height="15" fill="rgb(238,22,21)" fg:x="201" fg:w="1"/><text x="16.3687%" y="383.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.24%)</title><rect x="16.0385%" y="501" width="0.2406%" height="15" fill="rgb(233,161,25)" fg:x="200" fg:w="3"/><text x="16.2885%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.24%)</title><rect x="16.0385%" y="485" width="0.2406%" height="15" fill="rgb(226,122,53)" fg:x="200" fg:w="3"/><text x="16.2885%" y="495.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="16.0385%" y="469" width="0.2406%" height="15" fill="rgb(220,123,17)" fg:x="200" fg:w="3"/><text x="16.2885%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="16.0385%" y="453" width="0.2406%" height="15" fill="rgb(230,224,35)" fg:x="200" fg:w="3"/><text x="16.2885%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="16.0385%" y="437" width="0.2406%" height="15" fill="rgb(246,83,8)" fg:x="200" fg:w="3"/><text x="16.2885%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="16.0385%" y="421" width="0.2406%" height="15" fill="rgb(230,214,17)" fg:x="200" fg:w="3"/><text x="16.2885%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="16.1187%" y="405" width="0.1604%" height="15" fill="rgb(222,97,18)" fg:x="201" fg:w="2"/><text x="16.3687%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="16.1187%" y="389" width="0.1604%" height="15" fill="rgb(206,79,1)" fg:x="201" fg:w="2"/><text x="16.3687%" y="399.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="16.1989%" y="373" width="0.0802%" height="15" fill="rgb(214,121,34)" fg:x="202" fg:w="1"/><text x="16.4489%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.1989%" y="357" width="0.0802%" height="15" fill="rgb(249,199,46)" fg:x="202" fg:w="1"/><text x="16.4489%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.1989%" y="341" width="0.0802%" height="15" fill="rgb(214,222,46)" fg:x="202" fg:w="1"/><text x="16.4489%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.1989%" y="325" width="0.0802%" height="15" fill="rgb(248,168,30)" fg:x="202" fg:w="1"/><text x="16.4489%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.2791%" y="469" width="0.0802%" height="15" fill="rgb(226,14,28)" fg:x="203" fg:w="1"/><text x="16.5291%" y="479.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="15.9583%" y="533" width="0.4812%" height="15" fill="rgb(253,123,1)" fg:x="199" fg:w="6"/><text x="16.2083%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="16.0385%" y="517" width="0.4010%" height="15" fill="rgb(225,24,42)" fg:x="200" fg:w="5"/><text x="16.2885%" y="527.50"></text></g><g><title>kernel::model::scopes::save_props (2 samples, 0.16%)</title><rect x="16.2791%" y="501" width="0.1604%" height="15" fill="rgb(216,161,37)" fg:x="203" fg:w="2"/><text x="16.5291%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (2 samples, 0.16%)</title><rect x="16.2791%" y="485" width="0.1604%" height="15" fill="rgb(251,164,26)" fg:x="203" fg:w="2"/><text x="16.5291%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.3593%" y="469" width="0.0802%" height="15" fill="rgb(219,177,3)" fg:x="204" fg:w="1"/><text x="16.6093%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="15.8781%" y="565" width="0.6415%" height="15" fill="rgb(222,65,0)" fg:x="198" fg:w="8"/><text x="16.1281%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="15.9583%" y="549" width="0.5613%" height="15" fill="rgb(223,69,54)" fg:x="199" fg:w="7"/><text x="16.2083%" y="559.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="16.4395%" y="533" width="0.0802%" height="15" fill="rgb(235,30,27)" fg:x="205" fg:w="1"/><text x="16.6895%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.4395%" y="517" width="0.0802%" height="15" fill="rgb(220,183,50)" fg:x="205" fg:w="1"/><text x="16.6895%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.4395%" y="501" width="0.0802%" height="15" fill="rgb(248,198,15)" fg:x="205" fg:w="1"/><text x="16.6895%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="16.5196%" y="565" width="0.0802%" height="15" fill="rgb(222,211,4)" fg:x="206" fg:w="1"/><text x="16.7696%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.5196%" y="549" width="0.0802%" height="15" fill="rgb(214,102,34)" fg:x="206" fg:w="1"/><text x="16.7696%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.7602%" y="453" width="0.0802%" height="15" fill="rgb(245,92,5)" fg:x="209" fg:w="1"/><text x="17.0102%" y="463.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (3 samples, 0.24%)</title><rect x="16.6800%" y="549" width="0.2406%" height="15" fill="rgb(252,72,51)" fg:x="208" fg:w="3"/><text x="16.9300%" y="559.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.24%)</title><rect x="16.6800%" y="533" width="0.2406%" height="15" fill="rgb(252,208,19)" fg:x="208" fg:w="3"/><text x="16.9300%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="16.6800%" y="517" width="0.2406%" height="15" fill="rgb(211,69,7)" fg:x="208" fg:w="3"/><text x="16.9300%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="16.7602%" y="501" width="0.1604%" height="15" fill="rgb(211,27,16)" fg:x="209" fg:w="2"/><text x="17.0102%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="16.7602%" y="485" width="0.1604%" height="15" fill="rgb(219,216,14)" fg:x="209" fg:w="2"/><text x="17.0102%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="16.7602%" y="469" width="0.1604%" height="15" fill="rgb(219,71,8)" fg:x="209" fg:w="2"/><text x="17.0102%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.8404%" y="453" width="0.0802%" height="15" fill="rgb(223,170,53)" fg:x="210" fg:w="1"/><text x="17.0904%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.9206%" y="469" width="0.0802%" height="15" fill="rgb(246,21,26)" fg:x="211" fg:w="1"/><text x="17.1706%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="16.9206%" y="453" width="0.0802%" height="15" fill="rgb(248,20,46)" fg:x="211" fg:w="1"/><text x="17.1706%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="16.9206%" y="517" width="0.1604%" height="15" fill="rgb(252,94,11)" fg:x="211" fg:w="2"/><text x="17.1706%" y="527.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="16.9206%" y="501" width="0.1604%" height="15" fill="rgb(236,163,8)" fg:x="211" fg:w="2"/><text x="17.1706%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="16.9206%" y="485" width="0.1604%" height="15" fill="rgb(217,221,45)" fg:x="211" fg:w="2"/><text x="17.1706%" y="495.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="17.0008%" y="469" width="0.0802%" height="15" fill="rgb(238,38,17)" fg:x="212" fg:w="1"/><text x="17.2508%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.0008%" y="453" width="0.0802%" height="15" fill="rgb(242,210,23)" fg:x="212" fg:w="1"/><text x="17.2508%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="17.0008%" y="437" width="0.0802%" height="15" fill="rgb(250,86,53)" fg:x="212" fg:w="1"/><text x="17.2508%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.0008%" y="421" width="0.0802%" height="15" fill="rgb(223,168,25)" fg:x="212" fg:w="1"/><text x="17.2508%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::scopes::Property)&gt; (1 samples, 0.08%)</title><rect x="17.0810%" y="501" width="0.0802%" height="15" fill="rgb(251,189,4)" fg:x="213" fg:w="1"/><text x="17.3310%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="17.0810%" y="485" width="0.0802%" height="15" fill="rgb(245,19,28)" fg:x="213" fg:w="1"/><text x="17.3310%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.1612%" y="389" width="0.0802%" height="15" fill="rgb(207,10,34)" fg:x="214" fg:w="1"/><text x="17.4112%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.1612%" y="453" width="0.1604%" height="15" fill="rgb(235,153,31)" fg:x="214" fg:w="2"/><text x="17.4112%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.1612%" y="437" width="0.1604%" height="15" fill="rgb(228,72,37)" fg:x="214" fg:w="2"/><text x="17.4112%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.1612%" y="421" width="0.1604%" height="15" fill="rgb(215,15,16)" fg:x="214" fg:w="2"/><text x="17.4112%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.1612%" y="405" width="0.1604%" height="15" fill="rgb(250,119,29)" fg:x="214" fg:w="2"/><text x="17.4112%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.2414%" y="389" width="0.0802%" height="15" fill="rgb(214,59,1)" fg:x="215" fg:w="1"/><text x="17.4914%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.2414%" y="373" width="0.0802%" height="15" fill="rgb(223,109,25)" fg:x="215" fg:w="1"/><text x="17.4914%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.2414%" y="357" width="0.0802%" height="15" fill="rgb(230,198,22)" fg:x="215" fg:w="1"/><text x="17.4914%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.2414%" y="341" width="0.0802%" height="15" fill="rgb(245,184,46)" fg:x="215" fg:w="1"/><text x="17.4914%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.2414%" y="325" width="0.0802%" height="15" fill="rgb(253,73,16)" fg:x="215" fg:w="1"/><text x="17.4914%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="17.2414%" y="309" width="0.0802%" height="15" fill="rgb(206,94,45)" fg:x="215" fg:w="1"/><text x="17.4914%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="17.2414%" y="293" width="0.0802%" height="15" fill="rgb(236,83,27)" fg:x="215" fg:w="1"/><text x="17.4914%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="17.1612%" y="469" width="0.2406%" height="15" fill="rgb(220,196,8)" fg:x="214" fg:w="3"/><text x="17.4112%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.3216%" y="453" width="0.0802%" height="15" fill="rgb(254,185,14)" fg:x="216" fg:w="1"/><text x="17.5716%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.3216%" y="437" width="0.0802%" height="15" fill="rgb(226,50,22)" fg:x="216" fg:w="1"/><text x="17.5716%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.3216%" y="421" width="0.0802%" height="15" fill="rgb(253,147,0)" fg:x="216" fg:w="1"/><text x="17.5716%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="17.4018%" y="469" width="0.0802%" height="15" fill="rgb(252,46,33)" fg:x="217" fg:w="1"/><text x="17.6518%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.4018%" y="453" width="0.0802%" height="15" fill="rgb(242,22,54)" fg:x="217" fg:w="1"/><text x="17.6518%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.4018%" y="437" width="0.0802%" height="15" fill="rgb(223,178,32)" fg:x="217" fg:w="1"/><text x="17.6518%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.4018%" y="421" width="0.0802%" height="15" fill="rgb(214,106,53)" fg:x="217" fg:w="1"/><text x="17.6518%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.4018%" y="405" width="0.0802%" height="15" fill="rgb(232,65,50)" fg:x="217" fg:w="1"/><text x="17.6518%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.4018%" y="389" width="0.0802%" height="15" fill="rgb(231,110,28)" fg:x="217" fg:w="1"/><text x="17.6518%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.4018%" y="373" width="0.0802%" height="15" fill="rgb(216,71,40)" fg:x="217" fg:w="1"/><text x="17.6518%" y="383.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="16.9206%" y="549" width="0.6415%" height="15" fill="rgb(229,89,53)" fg:x="211" fg:w="8"/><text x="17.1706%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (8 samples, 0.64%)</title><rect x="16.9206%" y="533" width="0.6415%" height="15" fill="rgb(210,124,14)" fg:x="211" fg:w="8"/><text x="17.1706%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="17.0810%" y="517" width="0.4812%" height="15" fill="rgb(236,213,6)" fg:x="213" fg:w="6"/><text x="17.3310%" y="527.50"></text></g><g><title>kernel::model::scopes::load_props (5 samples, 0.40%)</title><rect x="17.1612%" y="501" width="0.4010%" height="15" fill="rgb(228,41,5)" fg:x="214" fg:w="5"/><text x="17.4112%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (5 samples, 0.40%)</title><rect x="17.1612%" y="485" width="0.4010%" height="15" fill="rgb(221,167,25)" fg:x="214" fg:w="5"/><text x="17.4112%" y="495.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="17.4820%" y="469" width="0.0802%" height="15" fill="rgb(228,144,37)" fg:x="218" fg:w="1"/><text x="17.7320%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.4820%" y="453" width="0.0802%" height="15" fill="rgb(227,189,38)" fg:x="218" fg:w="1"/><text x="17.7320%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="17.4820%" y="437" width="0.0802%" height="15" fill="rgb(218,8,2)" fg:x="218" fg:w="1"/><text x="17.7320%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.4820%" y="421" width="0.0802%" height="15" fill="rgb(209,61,28)" fg:x="218" fg:w="1"/><text x="17.7320%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="17.4820%" y="405" width="0.0802%" height="15" fill="rgb(233,140,39)" fg:x="218" fg:w="1"/><text x="17.7320%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.4820%" y="389" width="0.0802%" height="15" fill="rgb(251,66,48)" fg:x="218" fg:w="1"/><text x="17.7320%" y="399.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="17.4820%" y="373" width="0.0802%" height="15" fill="rgb(210,44,45)" fg:x="218" fg:w="1"/><text x="17.7320%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.4820%" y="357" width="0.0802%" height="15" fill="rgb(214,136,46)" fg:x="218" fg:w="1"/><text x="17.7320%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.4820%" y="341" width="0.0802%" height="15" fill="rgb(207,130,50)" fg:x="218" fg:w="1"/><text x="17.7320%" y="351.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.5621%" y="533" width="0.0802%" height="15" fill="rgb(228,102,49)" fg:x="219" fg:w="1"/><text x="17.8121%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.5621%" y="517" width="0.0802%" height="15" fill="rgb(253,55,1)" fg:x="219" fg:w="1"/><text x="17.8121%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.5621%" y="501" width="0.0802%" height="15" fill="rgb(238,222,9)" fg:x="219" fg:w="1"/><text x="17.8121%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.5621%" y="485" width="0.0802%" height="15" fill="rgb(246,99,6)" fg:x="219" fg:w="1"/><text x="17.8121%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.5621%" y="469" width="0.0802%" height="15" fill="rgb(219,110,26)" fg:x="219" fg:w="1"/><text x="17.8121%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.5621%" y="453" width="0.0802%" height="15" fill="rgb(239,160,33)" fg:x="219" fg:w="1"/><text x="17.8121%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.5621%" y="437" width="0.0802%" height="15" fill="rgb(220,202,23)" fg:x="219" fg:w="1"/><text x="17.8121%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.5621%" y="421" width="0.0802%" height="15" fill="rgb(208,80,26)" fg:x="219" fg:w="1"/><text x="17.8121%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.5621%" y="405" width="0.0802%" height="15" fill="rgb(243,85,7)" fg:x="219" fg:w="1"/><text x="17.8121%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.5621%" y="389" width="0.0802%" height="15" fill="rgb(228,77,47)" fg:x="219" fg:w="1"/><text x="17.8121%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.5621%" y="373" width="0.0802%" height="15" fill="rgb(212,226,8)" fg:x="219" fg:w="1"/><text x="17.8121%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.5621%" y="357" width="0.0802%" height="15" fill="rgb(241,120,54)" fg:x="219" fg:w="1"/><text x="17.8121%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.5621%" y="341" width="0.0802%" height="15" fill="rgb(226,80,16)" fg:x="219" fg:w="1"/><text x="17.8121%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="17.5621%" y="549" width="0.1604%" height="15" fill="rgb(240,76,13)" fg:x="219" fg:w="2"/><text x="17.8121%" y="559.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="17.6423%" y="533" width="0.0802%" height="15" fill="rgb(252,74,8)" fg:x="220" fg:w="1"/><text x="17.8923%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.6423%" y="517" width="0.0802%" height="15" fill="rgb(244,155,2)" fg:x="220" fg:w="1"/><text x="17.8923%" y="527.50"></text></g><g><title>kernel::model::scopes::Props::property_named (1 samples, 0.08%)</title><rect x="17.8027%" y="485" width="0.0802%" height="15" fill="rgb(215,81,35)" fg:x="222" fg:w="1"/><text x="18.0527%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.8829%" y="453" width="0.0802%" height="15" fill="rgb(206,55,2)" fg:x="223" fg:w="1"/><text x="18.1329%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8829%" y="437" width="0.0802%" height="15" fill="rgb(231,2,34)" fg:x="223" fg:w="1"/><text x="18.1329%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8829%" y="421" width="0.0802%" height="15" fill="rgb(242,176,48)" fg:x="223" fg:w="1"/><text x="18.1329%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8829%" y="405" width="0.0802%" height="15" fill="rgb(249,31,36)" fg:x="223" fg:w="1"/><text x="18.1329%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8829%" y="389" width="0.0802%" height="15" fill="rgb(205,18,17)" fg:x="223" fg:w="1"/><text x="18.1329%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="17.9631%" y="453" width="0.0802%" height="15" fill="rgb(254,130,5)" fg:x="224" fg:w="1"/><text x="18.2131%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.9631%" y="437" width="0.0802%" height="15" fill="rgb(229,42,45)" fg:x="224" fg:w="1"/><text x="18.2131%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.9631%" y="421" width="0.0802%" height="15" fill="rgb(245,95,25)" fg:x="224" fg:w="1"/><text x="18.2131%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.9631%" y="405" width="0.0802%" height="15" fill="rgb(249,193,38)" fg:x="224" fg:w="1"/><text x="18.2131%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.9631%" y="389" width="0.0802%" height="15" fill="rgb(241,140,43)" fg:x="224" fg:w="1"/><text x="18.2131%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.9631%" y="373" width="0.0802%" height="15" fill="rgb(245,78,48)" fg:x="224" fg:w="1"/><text x="18.2131%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.9631%" y="357" width="0.0802%" height="15" fill="rgb(214,92,39)" fg:x="224" fg:w="1"/><text x="18.2131%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="17.8027%" y="501" width="0.4010%" height="15" fill="rgb(211,189,14)" fg:x="222" fg:w="5"/><text x="18.0527%" y="511.50"></text></g><g><title>kernel::model::scopes::load_props (4 samples, 0.32%)</title><rect x="17.8829%" y="485" width="0.3208%" height="15" fill="rgb(218,7,24)" fg:x="223" fg:w="4"/><text x="18.1329%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (4 samples, 0.32%)</title><rect x="17.8829%" y="469" width="0.3208%" height="15" fill="rgb(224,200,49)" fg:x="223" fg:w="4"/><text x="18.1329%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="18.0433%" y="453" width="0.1604%" height="15" fill="rgb(218,210,14)" fg:x="225" fg:w="2"/><text x="18.2933%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.0433%" y="437" width="0.1604%" height="15" fill="rgb(234,142,31)" fg:x="225" fg:w="2"/><text x="18.2933%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="18.0433%" y="421" width="0.1604%" height="15" fill="rgb(227,165,2)" fg:x="225" fg:w="2"/><text x="18.2933%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.0433%" y="405" width="0.1604%" height="15" fill="rgb(232,44,46)" fg:x="225" fg:w="2"/><text x="18.2933%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.1235%" y="389" width="0.0802%" height="15" fill="rgb(236,149,47)" fg:x="226" fg:w="1"/><text x="18.3735%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.1235%" y="373" width="0.0802%" height="15" fill="rgb(227,45,31)" fg:x="226" fg:w="1"/><text x="18.3735%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="18.1235%" y="357" width="0.0802%" height="15" fill="rgb(240,176,51)" fg:x="226" fg:w="1"/><text x="18.3735%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;kernel::model::base::AclRule&gt;&gt; (1 samples, 0.08%)</title><rect x="18.2037%" y="485" width="0.0802%" height="15" fill="rgb(249,146,41)" fg:x="227" fg:w="1"/><text x="18.4537%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.2839%" y="453" width="0.0802%" height="15" fill="rgb(213,208,4)" fg:x="228" fg:w="1"/><text x="18.5339%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.2839%" y="437" width="0.0802%" height="15" fill="rgb(245,84,36)" fg:x="228" fg:w="1"/><text x="18.5339%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.2839%" y="421" width="0.0802%" height="15" fill="rgb(254,84,18)" fg:x="228" fg:w="1"/><text x="18.5339%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.2839%" y="405" width="0.0802%" height="15" fill="rgb(225,38,54)" fg:x="228" fg:w="1"/><text x="18.5339%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.2839%" y="389" width="0.0802%" height="15" fill="rgb(246,50,30)" fg:x="228" fg:w="1"/><text x="18.5339%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.2839%" y="373" width="0.0802%" height="15" fill="rgb(246,148,9)" fg:x="228" fg:w="1"/><text x="18.5339%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.2839%" y="357" width="0.0802%" height="15" fill="rgb(223,75,4)" fg:x="228" fg:w="1"/><text x="18.5339%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.2839%" y="341" width="0.0802%" height="15" fill="rgb(239,148,41)" fg:x="228" fg:w="1"/><text x="18.5339%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.2839%" y="325" width="0.0802%" height="15" fill="rgb(205,195,3)" fg:x="228" fg:w="1"/><text x="18.5339%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.2839%" y="309" width="0.0802%" height="15" fill="rgb(254,161,1)" fg:x="228" fg:w="1"/><text x="18.5339%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.2839%" y="293" width="0.0802%" height="15" fill="rgb(211,229,8)" fg:x="228" fg:w="1"/><text x="18.5339%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.2839%" y="277" width="0.0802%" height="15" fill="rgb(220,97,9)" fg:x="228" fg:w="1"/><text x="18.5339%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.2839%" y="261" width="0.0802%" height="15" fill="rgb(240,218,8)" fg:x="228" fg:w="1"/><text x="18.5339%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.2839%" y="245" width="0.0802%" height="15" fill="rgb(250,44,0)" fg:x="228" fg:w="1"/><text x="18.5339%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="18.3641%" y="453" width="0.0802%" height="15" fill="rgb(236,41,53)" fg:x="229" fg:w="1"/><text x="18.6141%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.3641%" y="437" width="0.0802%" height="15" fill="rgb(218,227,13)" fg:x="229" fg:w="1"/><text x="18.6141%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="18.3641%" y="421" width="0.0802%" height="15" fill="rgb(217,94,32)" fg:x="229" fg:w="1"/><text x="18.6141%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.3641%" y="405" width="0.0802%" height="15" fill="rgb(213,217,12)" fg:x="229" fg:w="1"/><text x="18.6141%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.3641%" y="389" width="0.0802%" height="15" fill="rgb(229,13,46)" fg:x="229" fg:w="1"/><text x="18.6141%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.3641%" y="373" width="0.0802%" height="15" fill="rgb(243,139,5)" fg:x="229" fg:w="1"/><text x="18.6141%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.3641%" y="357" width="0.0802%" height="15" fill="rgb(249,38,45)" fg:x="229" fg:w="1"/><text x="18.6141%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.5245%" y="357" width="0.0802%" height="15" fill="rgb(216,70,11)" fg:x="231" fg:w="1"/><text x="18.7745%" y="367.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (11 samples, 0.88%)</title><rect x="17.8027%" y="533" width="0.8821%" height="15" fill="rgb(253,101,25)" fg:x="222" fg:w="11"/><text x="18.0527%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (11 samples, 0.88%)</title><rect x="17.8027%" y="517" width="0.8821%" height="15" fill="rgb(207,197,30)" fg:x="222" fg:w="11"/><text x="18.0527%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="18.2037%" y="501" width="0.4812%" height="15" fill="rgb(238,87,13)" fg:x="227" fg:w="6"/><text x="18.4537%" y="511.50"></text></g><g><title>kernel::model::scopes::load_props (5 samples, 0.40%)</title><rect x="18.2839%" y="485" width="0.4010%" height="15" fill="rgb(215,155,8)" fg:x="228" fg:w="5"/><text x="18.5339%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (5 samples, 0.40%)</title><rect x="18.2839%" y="469" width="0.4010%" height="15" fill="rgb(239,166,38)" fg:x="228" fg:w="5"/><text x="18.5339%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="18.4443%" y="453" width="0.2406%" height="15" fill="rgb(240,194,35)" fg:x="230" fg:w="3"/><text x="18.6943%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.5245%" y="437" width="0.1604%" height="15" fill="rgb(219,10,44)" fg:x="231" fg:w="2"/><text x="18.7745%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="18.5245%" y="421" width="0.1604%" height="15" fill="rgb(251,220,35)" fg:x="231" fg:w="2"/><text x="18.7745%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.5245%" y="405" width="0.1604%" height="15" fill="rgb(218,117,13)" fg:x="231" fg:w="2"/><text x="18.7745%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="18.5245%" y="389" width="0.1604%" height="15" fill="rgb(221,213,40)" fg:x="231" fg:w="2"/><text x="18.7745%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.5245%" y="373" width="0.1604%" height="15" fill="rgb(251,224,35)" fg:x="231" fg:w="2"/><text x="18.7745%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="18.6047%" y="357" width="0.0802%" height="15" fill="rgb(241,33,39)" fg:x="232" fg:w="1"/><text x="18.8547%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.6047%" y="341" width="0.0802%" height="15" fill="rgb(222,74,17)" fg:x="232" fg:w="1"/><text x="18.8547%" y="351.50"></text></g><g><title>plugins_core::build::Build::holding (37 samples, 2.97%)</title><rect x="15.7979%" y="581" width="2.9671%" height="15" fill="rgb(225,103,0)" fg:x="197" fg:w="37"/><text x="16.0479%" y="591.50">plu..</text></g><g><title>plugins_core::tools::set_container (27 samples, 2.17%)</title><rect x="16.5998%" y="565" width="2.1652%" height="15" fill="rgb(240,0,12)" fg:x="207" fg:w="27"/><text x="16.8498%" y="575.50">p..</text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (13 samples, 1.04%)</title><rect x="17.7225%" y="549" width="1.0425%" height="15" fill="rgb(233,213,37)" fg:x="221" fg:w="13"/><text x="17.9725%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="18.6848%" y="533" width="0.0802%" height="15" fill="rgb(225,84,52)" fg:x="233" fg:w="1"/><text x="18.9348%" y="543.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="18.6848%" y="517" width="0.0802%" height="15" fill="rgb(247,160,51)" fg:x="233" fg:w="1"/><text x="18.9348%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.6848%" y="501" width="0.0802%" height="15" fill="rgb(244,60,51)" fg:x="233" fg:w="1"/><text x="18.9348%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="18.7650%" y="533" width="0.0802%" height="15" fill="rgb(233,114,7)" fg:x="234" fg:w="1"/><text x="19.0150%" y="543.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="18.7650%" y="517" width="0.0802%" height="15" fill="rgb(246,136,16)" fg:x="234" fg:w="1"/><text x="19.0150%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.7650%" y="501" width="0.0802%" height="15" fill="rgb(243,114,45)" fg:x="234" fg:w="1"/><text x="19.0150%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.7650%" y="485" width="0.0802%" height="15" fill="rgb(247,183,43)" fg:x="234" fg:w="1"/><text x="19.0150%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.7650%" y="469" width="0.0802%" height="15" fill="rgb(251,210,42)" fg:x="234" fg:w="1"/><text x="19.0150%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.7650%" y="453" width="0.0802%" height="15" fill="rgb(221,88,35)" fg:x="234" fg:w="1"/><text x="19.0150%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.7650%" y="437" width="0.0802%" height="15" fill="rgb(242,21,20)" fg:x="234" fg:w="1"/><text x="19.0150%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.7650%" y="421" width="0.0802%" height="15" fill="rgb(233,226,36)" fg:x="234" fg:w="1"/><text x="19.0150%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="18.7650%" y="405" width="0.0802%" height="15" fill="rgb(243,189,34)" fg:x="234" fg:w="1"/><text x="19.0150%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="18.7650%" y="389" width="0.0802%" height="15" fill="rgb(207,145,50)" fg:x="234" fg:w="1"/><text x="19.0150%" y="399.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="18.8452%" y="533" width="0.0802%" height="15" fill="rgb(242,1,50)" fg:x="235" fg:w="1"/><text x="19.0952%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.8452%" y="517" width="0.0802%" height="15" fill="rgb(231,65,32)" fg:x="235" fg:w="1"/><text x="19.0952%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="18.7650%" y="549" width="0.2406%" height="15" fill="rgb(208,68,49)" fg:x="234" fg:w="3"/><text x="19.0150%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="18.9254%" y="533" width="0.0802%" height="15" fill="rgb(253,54,49)" fg:x="236" fg:w="1"/><text x="19.1754%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="18.9254%" y="517" width="0.0802%" height="15" fill="rgb(245,186,24)" fg:x="236" fg:w="1"/><text x="19.1754%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="18.9254%" y="501" width="0.0802%" height="15" fill="rgb(209,2,41)" fg:x="236" fg:w="1"/><text x="19.1754%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.9254%" y="485" width="0.0802%" height="15" fill="rgb(242,208,54)" fg:x="236" fg:w="1"/><text x="19.1754%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.9254%" y="469" width="0.0802%" height="15" fill="rgb(225,9,51)" fg:x="236" fg:w="1"/><text x="19.1754%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="18.9254%" y="453" width="0.0802%" height="15" fill="rgb(207,207,25)" fg:x="236" fg:w="1"/><text x="19.1754%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="18.9254%" y="437" width="0.0802%" height="15" fill="rgb(253,96,18)" fg:x="236" fg:w="1"/><text x="19.1754%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.9254%" y="421" width="0.0802%" height="15" fill="rgb(252,215,20)" fg:x="236" fg:w="1"/><text x="19.1754%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.9254%" y="405" width="0.0802%" height="15" fill="rgb(245,227,26)" fg:x="236" fg:w="1"/><text x="19.1754%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.9254%" y="389" width="0.0802%" height="15" fill="rgb(241,208,0)" fg:x="236" fg:w="1"/><text x="19.1754%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="18.9254%" y="373" width="0.0802%" height="15" fill="rgb(224,130,10)" fg:x="236" fg:w="1"/><text x="19.1754%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="18.9254%" y="357" width="0.0802%" height="15" fill="rgb(237,29,0)" fg:x="236" fg:w="1"/><text x="19.1754%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="18.9254%" y="341" width="0.0802%" height="15" fill="rgb(219,27,41)" fg:x="236" fg:w="1"/><text x="19.1754%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="18.9254%" y="325" width="0.0802%" height="15" fill="rgb(245,101,19)" fg:x="236" fg:w="1"/><text x="19.1754%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="18.9254%" y="309" width="0.0802%" height="15" fill="rgb(243,44,37)" fg:x="236" fg:w="1"/><text x="19.1754%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="18.9254%" y="293" width="0.0802%" height="15" fill="rgb(228,213,43)" fg:x="236" fg:w="1"/><text x="19.1754%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="18.9254%" y="277" width="0.0802%" height="15" fill="rgb(219,163,21)" fg:x="236" fg:w="1"/><text x="19.1754%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="18.9254%" y="261" width="0.0802%" height="15" fill="rgb(234,86,24)" fg:x="236" fg:w="1"/><text x="19.1754%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.9254%" y="245" width="0.0802%" height="15" fill="rgb(225,10,24)" fg:x="236" fg:w="1"/><text x="19.1754%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="18.9254%" y="229" width="0.0802%" height="15" fill="rgb(218,109,7)" fg:x="236" fg:w="1"/><text x="19.1754%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="18.9254%" y="213" width="0.0802%" height="15" fill="rgb(210,20,26)" fg:x="236" fg:w="1"/><text x="19.1754%" y="223.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="18.9254%" y="197" width="0.0802%" height="15" fill="rgb(216,18,1)" fg:x="236" fg:w="1"/><text x="19.1754%" y="207.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="18.9254%" y="181" width="0.0802%" height="15" fill="rgb(206,163,23)" fg:x="236" fg:w="1"/><text x="19.1754%" y="191.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.0056%" y="469" width="0.0802%" height="15" fill="rgb(229,150,31)" fg:x="237" fg:w="1"/><text x="19.2556%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.0056%" y="453" width="0.0802%" height="15" fill="rgb(231,10,5)" fg:x="237" fg:w="1"/><text x="19.2556%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.0056%" y="437" width="0.0802%" height="15" fill="rgb(250,40,50)" fg:x="237" fg:w="1"/><text x="19.2556%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.0056%" y="421" width="0.0802%" height="15" fill="rgb(217,119,7)" fg:x="237" fg:w="1"/><text x="19.2556%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.0056%" y="405" width="0.0802%" height="15" fill="rgb(245,214,40)" fg:x="237" fg:w="1"/><text x="19.2556%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.0056%" y="389" width="0.0802%" height="15" fill="rgb(216,187,1)" fg:x="237" fg:w="1"/><text x="19.2556%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="19.0858%" y="469" width="0.0802%" height="15" fill="rgb(237,146,21)" fg:x="238" fg:w="1"/><text x="19.3358%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.0858%" y="453" width="0.0802%" height="15" fill="rgb(210,174,47)" fg:x="238" fg:w="1"/><text x="19.3358%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="19.0858%" y="437" width="0.0802%" height="15" fill="rgb(218,111,39)" fg:x="238" fg:w="1"/><text x="19.3358%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.0858%" y="421" width="0.0802%" height="15" fill="rgb(224,95,19)" fg:x="238" fg:w="1"/><text x="19.3358%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.0858%" y="405" width="0.0802%" height="15" fill="rgb(234,15,38)" fg:x="238" fg:w="1"/><text x="19.3358%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.0858%" y="389" width="0.0802%" height="15" fill="rgb(246,56,12)" fg:x="238" fg:w="1"/><text x="19.3358%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.0858%" y="373" width="0.0802%" height="15" fill="rgb(247,16,17)" fg:x="238" fg:w="1"/><text x="19.3358%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.0858%" y="357" width="0.0802%" height="15" fill="rgb(215,151,11)" fg:x="238" fg:w="1"/><text x="19.3358%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.0858%" y="341" width="0.0802%" height="15" fill="rgb(225,16,24)" fg:x="238" fg:w="1"/><text x="19.3358%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="19.0056%" y="517" width="0.3208%" height="15" fill="rgb(217,117,5)" fg:x="237" fg:w="4"/><text x="19.2556%" y="527.50"></text></g><g><title>kernel::model::scopes::load_props (4 samples, 0.32%)</title><rect x="19.0056%" y="501" width="0.3208%" height="15" fill="rgb(246,187,53)" fg:x="237" fg:w="4"/><text x="19.2556%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (4 samples, 0.32%)</title><rect x="19.0056%" y="485" width="0.3208%" height="15" fill="rgb(241,71,40)" fg:x="237" fg:w="4"/><text x="19.2556%" y="495.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="19.1660%" y="469" width="0.1604%" height="15" fill="rgb(231,67,39)" fg:x="239" fg:w="2"/><text x="19.4160%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.1660%" y="453" width="0.1604%" height="15" fill="rgb(222,120,24)" fg:x="239" fg:w="2"/><text x="19.4160%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="19.1660%" y="437" width="0.1604%" height="15" fill="rgb(248,3,3)" fg:x="239" fg:w="2"/><text x="19.4160%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.1660%" y="421" width="0.1604%" height="15" fill="rgb(228,218,5)" fg:x="239" fg:w="2"/><text x="19.4160%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.2462%" y="405" width="0.0802%" height="15" fill="rgb(212,202,43)" fg:x="240" fg:w="1"/><text x="19.4962%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.2462%" y="389" width="0.0802%" height="15" fill="rgb(235,183,2)" fg:x="240" fg:w="1"/><text x="19.4962%" y="399.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.2462%" y="373" width="0.0802%" height="15" fill="rgb(230,165,10)" fg:x="240" fg:w="1"/><text x="19.4962%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.2462%" y="357" width="0.0802%" height="15" fill="rgb(219,54,40)" fg:x="240" fg:w="1"/><text x="19.4962%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.2462%" y="341" width="0.0802%" height="15" fill="rgb(244,73,9)" fg:x="240" fg:w="1"/><text x="19.4962%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.2462%" y="325" width="0.0802%" height="15" fill="rgb(212,32,45)" fg:x="240" fg:w="1"/><text x="19.4962%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.3264%" y="405" width="0.0802%" height="15" fill="rgb(205,58,31)" fg:x="241" fg:w="1"/><text x="19.5764%" y="415.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="19.3264%" y="501" width="0.1604%" height="15" fill="rgb(250,120,43)" fg:x="241" fg:w="2"/><text x="19.5764%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="19.3264%" y="485" width="0.1604%" height="15" fill="rgb(235,13,10)" fg:x="241" fg:w="2"/><text x="19.5764%" y="495.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="19.3264%" y="469" width="0.1604%" height="15" fill="rgb(232,219,31)" fg:x="241" fg:w="2"/><text x="19.5764%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.3264%" y="453" width="0.1604%" height="15" fill="rgb(218,157,51)" fg:x="241" fg:w="2"/><text x="19.5764%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="19.3264%" y="437" width="0.1604%" height="15" fill="rgb(211,91,52)" fg:x="241" fg:w="2"/><text x="19.5764%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.3264%" y="421" width="0.1604%" height="15" fill="rgb(240,173,1)" fg:x="241" fg:w="2"/><text x="19.5764%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.4066%" y="405" width="0.0802%" height="15" fill="rgb(248,20,47)" fg:x="242" fg:w="1"/><text x="19.6566%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.4066%" y="389" width="0.0802%" height="15" fill="rgb(217,221,40)" fg:x="242" fg:w="1"/><text x="19.6566%" y="399.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (7 samples, 0.56%)</title><rect x="19.0056%" y="533" width="0.5613%" height="15" fill="rgb(226,149,51)" fg:x="237" fg:w="7"/><text x="19.2556%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="19.3264%" y="517" width="0.2406%" height="15" fill="rgb(252,193,7)" fg:x="241" fg:w="3"/><text x="19.5764%" y="527.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="19.4868%" y="501" width="0.0802%" height="15" fill="rgb(205,123,0)" fg:x="243" fg:w="1"/><text x="19.7368%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (1 samples, 0.08%)</title><rect x="19.4868%" y="485" width="0.0802%" height="15" fill="rgb(233,173,25)" fg:x="243" fg:w="1"/><text x="19.7368%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="19.4868%" y="469" width="0.0802%" height="15" fill="rgb(216,63,32)" fg:x="243" fg:w="1"/><text x="19.7368%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.4868%" y="453" width="0.0802%" height="15" fill="rgb(209,56,45)" fg:x="243" fg:w="1"/><text x="19.7368%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="19.4868%" y="437" width="0.0802%" height="15" fill="rgb(226,111,49)" fg:x="243" fg:w="1"/><text x="19.7368%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.4868%" y="421" width="0.0802%" height="15" fill="rgb(244,181,21)" fg:x="243" fg:w="1"/><text x="19.7368%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.4868%" y="405" width="0.0802%" height="15" fill="rgb(222,126,15)" fg:x="243" fg:w="1"/><text x="19.7368%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.4868%" y="389" width="0.0802%" height="15" fill="rgb(222,95,17)" fg:x="243" fg:w="1"/><text x="19.7368%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.4868%" y="373" width="0.0802%" height="15" fill="rgb(254,46,5)" fg:x="243" fg:w="1"/><text x="19.7368%" y="383.50"></text></g><g><title>plugins_core::build::Build::into_entry (11 samples, 0.88%)</title><rect x="18.7650%" y="581" width="0.8821%" height="15" fill="rgb(236,216,35)" fg:x="234" fg:w="11"/><text x="19.0150%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.88%)</title><rect x="18.7650%" y="565" width="0.8821%" height="15" fill="rgb(217,187,26)" fg:x="234" fg:w="11"/><text x="19.0150%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (8 samples, 0.64%)</title><rect x="19.0056%" y="549" width="0.6415%" height="15" fill="rgb(207,192,25)" fg:x="237" fg:w="8"/><text x="19.2556%" y="559.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="19.5670%" y="533" width="0.0802%" height="15" fill="rgb(253,135,27)" fg:x="244" fg:w="1"/><text x="19.8170%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.5670%" y="517" width="0.0802%" height="15" fill="rgb(211,122,29)" fg:x="244" fg:w="1"/><text x="19.8170%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.5670%" y="501" width="0.0802%" height="15" fill="rgb(233,162,40)" fg:x="244" fg:w="1"/><text x="19.8170%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.6472%" y="437" width="0.0802%" height="15" fill="rgb(222,184,47)" fg:x="245" fg:w="1"/><text x="19.8972%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="19.7273%" y="421" width="0.0802%" height="15" fill="rgb(249,99,23)" fg:x="246" fg:w="1"/><text x="19.9773%" y="431.50"></text></g><g><title>&lt;kernel::model::scopes::Properties as kernel::scopes::Scope&gt;::serialize (3 samples, 0.24%)</title><rect x="19.6472%" y="517" width="0.2406%" height="15" fill="rgb(214,60,12)" fg:x="245" fg:w="3"/><text x="19.8972%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="19.6472%" y="501" width="0.2406%" height="15" fill="rgb(250,229,36)" fg:x="245" fg:w="3"/><text x="19.8972%" y="511.50"></text></g><g><title>serde_json::value::to_value (3 samples, 0.24%)</title><rect x="19.6472%" y="485" width="0.2406%" height="15" fill="rgb(232,195,10)" fg:x="245" fg:w="3"/><text x="19.8972%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="19.6472%" y="469" width="0.2406%" height="15" fill="rgb(205,213,31)" fg:x="245" fg:w="3"/><text x="19.8972%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="19.6472%" y="453" width="0.2406%" height="15" fill="rgb(237,43,8)" fg:x="245" fg:w="3"/><text x="19.8972%" y="463.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="19.7273%" y="437" width="0.1604%" height="15" fill="rgb(216,208,3)" fg:x="246" fg:w="2"/><text x="19.9773%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.8075%" y="421" width="0.0802%" height="15" fill="rgb(228,179,44)" fg:x="247" fg:w="1"/><text x="20.0575%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.8075%" y="405" width="0.0802%" height="15" fill="rgb(230,192,27)" fg:x="247" fg:w="1"/><text x="20.0575%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.8075%" y="389" width="0.0802%" height="15" fill="rgb(251,30,38)" fg:x="247" fg:w="1"/><text x="20.0575%" y="399.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="19.8075%" y="373" width="0.0802%" height="15" fill="rgb(246,55,52)" fg:x="247" fg:w="1"/><text x="20.0575%" y="383.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="19.8075%" y="357" width="0.0802%" height="15" fill="rgb(249,79,26)" fg:x="247" fg:w="1"/><text x="20.0575%" y="367.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="19.6472%" y="581" width="0.3208%" height="15" fill="rgb(220,202,16)" fg:x="245" fg:w="4"/><text x="19.8972%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="19.6472%" y="565" width="0.3208%" height="15" fill="rgb(250,170,23)" fg:x="245" fg:w="4"/><text x="19.8972%" y="575.50"></text></g><g><title>kernel::model::scopes::save_props (4 samples, 0.32%)</title><rect x="19.6472%" y="549" width="0.3208%" height="15" fill="rgb(230,7,37)" fg:x="245" fg:w="4"/><text x="19.8972%" y="559.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (4 samples, 0.32%)</title><rect x="19.6472%" y="533" width="0.3208%" height="15" fill="rgb(213,71,1)" fg:x="245" fg:w="4"/><text x="19.8972%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.8877%" y="517" width="0.0802%" height="15" fill="rgb(227,87,39)" fg:x="248" fg:w="1"/><text x="20.1377%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="19.9679%" y="549" width="0.1604%" height="15" fill="rgb(210,41,29)" fg:x="249" fg:w="2"/><text x="20.2179%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="19.9679%" y="533" width="0.1604%" height="15" fill="rgb(206,191,31)" fg:x="249" fg:w="2"/><text x="20.2179%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="19.9679%" y="517" width="0.1604%" height="15" fill="rgb(247,75,54)" fg:x="249" fg:w="2"/><text x="20.2179%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="19.9679%" y="501" width="0.1604%" height="15" fill="rgb(208,54,50)" fg:x="249" fg:w="2"/><text x="20.2179%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="19.9679%" y="485" width="0.1604%" height="15" fill="rgb(214,90,37)" fg:x="249" fg:w="2"/><text x="20.2179%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="19.9679%" y="469" width="0.1604%" height="15" fill="rgb(220,132,6)" fg:x="249" fg:w="2"/><text x="20.2179%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="19.9679%" y="453" width="0.1604%" height="15" fill="rgb(213,167,7)" fg:x="249" fg:w="2"/><text x="20.2179%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="20.0481%" y="437" width="0.0802%" height="15" fill="rgb(243,36,27)" fg:x="250" fg:w="1"/><text x="20.2981%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="20.0481%" y="421" width="0.0802%" height="15" fill="rgb(235,147,12)" fg:x="250" fg:w="1"/><text x="20.2981%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.0481%" y="405" width="0.0802%" height="15" fill="rgb(212,198,44)" fg:x="250" fg:w="1"/><text x="20.2981%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.1283%" y="421" width="0.0802%" height="15" fill="rgb(218,68,50)" fg:x="251" fg:w="1"/><text x="20.3783%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.1283%" y="405" width="0.0802%" height="15" fill="rgb(224,79,48)" fg:x="251" fg:w="1"/><text x="20.3783%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.1283%" y="389" width="0.0802%" height="15" fill="rgb(213,191,50)" fg:x="251" fg:w="1"/><text x="20.3783%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.1283%" y="373" width="0.0802%" height="15" fill="rgb(254,146,10)" fg:x="251" fg:w="1"/><text x="20.3783%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.1283%" y="357" width="0.0802%" height="15" fill="rgb(215,175,11)" fg:x="251" fg:w="1"/><text x="20.3783%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.1283%" y="341" width="0.0802%" height="15" fill="rgb(207,49,7)" fg:x="251" fg:w="1"/><text x="20.3783%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.1283%" y="325" width="0.0802%" height="15" fill="rgb(234,144,29)" fg:x="251" fg:w="1"/><text x="20.3783%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.1283%" y="309" width="0.0802%" height="15" fill="rgb(213,222,48)" fg:x="251" fg:w="1"/><text x="20.3783%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.1283%" y="293" width="0.0802%" height="15" fill="rgb(222,8,6)" fg:x="251" fg:w="1"/><text x="20.3783%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.1283%" y="277" width="0.0802%" height="15" fill="rgb(221,114,49)" fg:x="251" fg:w="1"/><text x="20.3783%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.1283%" y="261" width="0.0802%" height="15" fill="rgb(250,140,42)" fg:x="251" fg:w="1"/><text x="20.3783%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.1283%" y="245" width="0.0802%" height="15" fill="rgb(250,150,27)" fg:x="251" fg:w="1"/><text x="20.3783%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.1283%" y="229" width="0.0802%" height="15" fill="rgb(252,159,3)" fg:x="251" fg:w="1"/><text x="20.3783%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.1283%" y="213" width="0.0802%" height="15" fill="rgb(241,182,3)" fg:x="251" fg:w="1"/><text x="20.3783%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="20.1283%" y="469" width="0.2406%" height="15" fill="rgb(236,3,9)" fg:x="251" fg:w="3"/><text x="20.3783%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="20.1283%" y="453" width="0.2406%" height="15" fill="rgb(223,227,51)" fg:x="251" fg:w="3"/><text x="20.3783%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="20.1283%" y="437" width="0.2406%" height="15" fill="rgb(232,133,30)" fg:x="251" fg:w="3"/><text x="20.3783%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="20.2085%" y="421" width="0.1604%" height="15" fill="rgb(209,93,27)" fg:x="252" fg:w="2"/><text x="20.4585%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.4491%" y="373" width="0.0802%" height="15" fill="rgb(208,108,34)" fg:x="255" fg:w="1"/><text x="20.6991%" y="383.50"></text></g><g><title>engine::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="20.1283%" y="549" width="0.5613%" height="15" fill="rgb(215,189,13)" fg:x="251" fg:w="7"/><text x="20.3783%" y="559.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (7 samples, 0.56%)</title><rect x="20.1283%" y="533" width="0.5613%" height="15" fill="rgb(206,88,23)" fg:x="251" fg:w="7"/><text x="20.3783%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="20.1283%" y="517" width="0.5613%" height="15" fill="rgb(240,173,0)" fg:x="251" fg:w="7"/><text x="20.3783%" y="527.50"></text></g><g><title>kernel::model::scopes::load_props (7 samples, 0.56%)</title><rect x="20.1283%" y="501" width="0.5613%" height="15" fill="rgb(223,106,52)" fg:x="251" fg:w="7"/><text x="20.3783%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (7 samples, 0.56%)</title><rect x="20.1283%" y="485" width="0.5613%" height="15" fill="rgb(206,130,16)" fg:x="251" fg:w="7"/><text x="20.3783%" y="495.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (4 samples, 0.32%)</title><rect x="20.3689%" y="469" width="0.3208%" height="15" fill="rgb(220,54,25)" fg:x="254" fg:w="4"/><text x="20.6189%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="20.3689%" y="453" width="0.3208%" height="15" fill="rgb(210,4,38)" fg:x="254" fg:w="4"/><text x="20.6189%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (4 samples, 0.32%)</title><rect x="20.3689%" y="437" width="0.3208%" height="15" fill="rgb(238,94,39)" fg:x="254" fg:w="4"/><text x="20.6189%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="20.3689%" y="421" width="0.3208%" height="15" fill="rgb(234,124,34)" fg:x="254" fg:w="4"/><text x="20.6189%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="20.4491%" y="405" width="0.2406%" height="15" fill="rgb(221,91,40)" fg:x="255" fg:w="3"/><text x="20.6991%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="20.4491%" y="389" width="0.2406%" height="15" fill="rgb(246,53,28)" fg:x="255" fg:w="3"/><text x="20.6991%" y="399.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="20.5293%" y="373" width="0.1604%" height="15" fill="rgb(229,109,7)" fg:x="256" fg:w="2"/><text x="20.7793%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.5293%" y="357" width="0.1604%" height="15" fill="rgb(249,117,8)" fg:x="256" fg:w="2"/><text x="20.7793%" y="367.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="20.6897%" y="549" width="0.0802%" height="15" fill="rgb(210,181,1)" fg:x="258" fg:w="1"/><text x="20.9397%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.88%)</title><rect x="19.9679%" y="565" width="0.8821%" height="15" fill="rgb(211,66,1)" fg:x="249" fg:w="11"/><text x="20.2179%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="20.7698%" y="549" width="0.0802%" height="15" fill="rgb(221,90,14)" fg:x="259" fg:w="1"/><text x="21.0198%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="20.8500%" y="517" width="0.1604%" height="15" fill="rgb(219,222,44)" fg:x="260" fg:w="2"/><text x="21.1000%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="20.8500%" y="501" width="0.1604%" height="15" fill="rgb(246,34,33)" fg:x="260" fg:w="2"/><text x="21.1000%" y="511.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="20.8500%" y="485" width="0.1604%" height="15" fill="rgb(227,135,41)" fg:x="260" fg:w="2"/><text x="21.1000%" y="495.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="20.8500%" y="469" width="0.1604%" height="15" fill="rgb(226,15,14)" fg:x="260" fg:w="2"/><text x="21.1000%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="20.8500%" y="453" width="0.1604%" height="15" fill="rgb(236,148,47)" fg:x="260" fg:w="2"/><text x="21.1000%" y="463.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="20.8500%" y="437" width="0.1604%" height="15" fill="rgb(233,162,52)" fg:x="260" fg:w="2"/><text x="21.1000%" y="447.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="20.8500%" y="421" width="0.1604%" height="15" fill="rgb(244,35,28)" fg:x="260" fg:w="2"/><text x="21.1000%" y="431.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="20.8500%" y="405" width="0.1604%" height="15" fill="rgb(205,121,10)" fg:x="260" fg:w="2"/><text x="21.1000%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.8500%" y="389" width="0.1604%" height="15" fill="rgb(250,58,18)" fg:x="260" fg:w="2"/><text x="21.1000%" y="399.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="20.8500%" y="373" width="0.1604%" height="15" fill="rgb(216,37,13)" fg:x="260" fg:w="2"/><text x="21.1000%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.8500%" y="357" width="0.1604%" height="15" fill="rgb(221,215,42)" fg:x="260" fg:w="2"/><text x="21.1000%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="20.8500%" y="341" width="0.1604%" height="15" fill="rgb(217,214,19)" fg:x="260" fg:w="2"/><text x="21.1000%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.8500%" y="325" width="0.1604%" height="15" fill="rgb(233,139,13)" fg:x="260" fg:w="2"/><text x="21.1000%" y="335.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="20.8500%" y="309" width="0.1604%" height="15" fill="rgb(247,168,23)" fg:x="260" fg:w="2"/><text x="21.1000%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.8500%" y="293" width="0.1604%" height="15" fill="rgb(207,202,1)" fg:x="260" fg:w="2"/><text x="21.1000%" y="303.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="20.9302%" y="277" width="0.0802%" height="15" fill="rgb(220,155,48)" fg:x="261" fg:w="1"/><text x="21.1802%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.0104%" y="373" width="0.0802%" height="15" fill="rgb(250,43,26)" fg:x="262" fg:w="1"/><text x="21.2604%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.0104%" y="357" width="0.0802%" height="15" fill="rgb(212,190,23)" fg:x="262" fg:w="1"/><text x="21.2604%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.0104%" y="341" width="0.0802%" height="15" fill="rgb(216,39,24)" fg:x="262" fg:w="1"/><text x="21.2604%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="21.0104%" y="453" width="0.2406%" height="15" fill="rgb(252,113,16)" fg:x="262" fg:w="3"/><text x="21.2604%" y="463.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.24%)</title><rect x="21.0104%" y="437" width="0.2406%" height="15" fill="rgb(208,113,19)" fg:x="262" fg:w="3"/><text x="21.2604%" y="447.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.24%)</title><rect x="21.0104%" y="421" width="0.2406%" height="15" fill="rgb(234,107,25)" fg:x="262" fg:w="3"/><text x="21.2604%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="21.0104%" y="405" width="0.2406%" height="15" fill="rgb(234,217,51)" fg:x="262" fg:w="3"/><text x="21.2604%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="21.0104%" y="389" width="0.2406%" height="15" fill="rgb(251,29,42)" fg:x="262" fg:w="3"/><text x="21.2604%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="21.0906%" y="373" width="0.1604%" height="15" fill="rgb(221,62,51)" fg:x="263" fg:w="2"/><text x="21.3406%" y="383.50"></text></g><g><title>&lt;kernel::model::scopes::Properties as kernel::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="21.2510%" y="405" width="0.0802%" height="15" fill="rgb(240,192,43)" fg:x="265" fg:w="1"/><text x="21.5010%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.2510%" y="389" width="0.0802%" height="15" fill="rgb(224,157,47)" fg:x="265" fg:w="1"/><text x="21.5010%" y="399.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="21.2510%" y="373" width="0.0802%" height="15" fill="rgb(226,84,45)" fg:x="265" fg:w="1"/><text x="21.5010%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.2510%" y="357" width="0.0802%" height="15" fill="rgb(208,207,23)" fg:x="265" fg:w="1"/><text x="21.5010%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="21.2510%" y="341" width="0.0802%" height="15" fill="rgb(253,34,51)" fg:x="265" fg:w="1"/><text x="21.5010%" y="351.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="21.2510%" y="325" width="0.0802%" height="15" fill="rgb(227,26,34)" fg:x="265" fg:w="1"/><text x="21.5010%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.2510%" y="309" width="0.0802%" height="15" fill="rgb(245,75,19)" fg:x="265" fg:w="1"/><text x="21.5010%" y="319.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="21.2510%" y="293" width="0.0802%" height="15" fill="rgb(250,191,31)" fg:x="265" fg:w="1"/><text x="21.5010%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.3312%" y="357" width="0.0802%" height="15" fill="rgb(224,11,50)" fg:x="266" fg:w="1"/><text x="21.5812%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="21.0104%" y="501" width="0.4812%" height="15" fill="rgb(231,171,7)" fg:x="262" fg:w="6"/><text x="21.2604%" y="511.50"></text></g><g><title>engine::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="21.0104%" y="485" width="0.4812%" height="15" fill="rgb(252,214,10)" fg:x="262" fg:w="6"/><text x="21.2604%" y="495.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="21.0104%" y="469" width="0.4812%" height="15" fill="rgb(249,45,46)" fg:x="262" fg:w="6"/><text x="21.2604%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="21.2510%" y="453" width="0.2406%" height="15" fill="rgb(240,173,7)" fg:x="265" fg:w="3"/><text x="21.5010%" y="463.50"></text></g><g><title>kernel::model::scopes::save_props (3 samples, 0.24%)</title><rect x="21.2510%" y="437" width="0.2406%" height="15" fill="rgb(235,214,13)" fg:x="265" fg:w="3"/><text x="21.5010%" y="447.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (3 samples, 0.24%)</title><rect x="21.2510%" y="421" width="0.2406%" height="15" fill="rgb(245,156,8)" fg:x="265" fg:w="3"/><text x="21.5010%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (2 samples, 0.16%)</title><rect x="21.3312%" y="405" width="0.1604%" height="15" fill="rgb(235,46,12)" fg:x="266" fg:w="2"/><text x="21.5812%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="21.3312%" y="389" width="0.1604%" height="15" fill="rgb(221,81,14)" fg:x="266" fg:w="2"/><text x="21.5812%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="21.3312%" y="373" width="0.1604%" height="15" fill="rgb(238,207,9)" fg:x="266" fg:w="2"/><text x="21.5812%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.4114%" y="357" width="0.0802%" height="15" fill="rgb(224,129,35)" fg:x="267" fg:w="1"/><text x="21.6614%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.4114%" y="341" width="0.0802%" height="15" fill="rgb(243,218,34)" fg:x="267" fg:w="1"/><text x="21.6614%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.4114%" y="325" width="0.0802%" height="15" fill="rgb(220,166,13)" fg:x="267" fg:w="1"/><text x="21.6614%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Exit&gt;&gt; (1 samples, 0.08%)</title><rect x="21.4916%" y="485" width="0.0802%" height="15" fill="rgb(227,167,49)" fg:x="268" fg:w="1"/><text x="21.7416%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="21.4916%" y="469" width="0.0802%" height="15" fill="rgb(234,142,12)" fg:x="268" fg:w="1"/><text x="21.7416%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.4916%" y="453" width="0.0802%" height="15" fill="rgb(207,100,48)" fg:x="268" fg:w="1"/><text x="21.7416%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.5718%" y="469" width="0.0802%" height="15" fill="rgb(210,25,14)" fg:x="269" fg:w="1"/><text x="21.8218%" y="479.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (2 samples, 0.16%)</title><rect x="21.5718%" y="485" width="0.1604%" height="15" fill="rgb(246,116,27)" fg:x="269" fg:w="2"/><text x="21.8218%" y="495.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="21.6520%" y="469" width="0.0802%" height="15" fill="rgb(214,193,42)" fg:x="270" fg:w="1"/><text x="21.9020%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.6520%" y="453" width="0.0802%" height="15" fill="rgb(214,122,8)" fg:x="270" fg:w="1"/><text x="21.9020%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.6520%" y="437" width="0.0802%" height="15" fill="rgb(244,173,18)" fg:x="270" fg:w="1"/><text x="21.9020%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.8123%" y="453" width="0.0802%" height="15" fill="rgb(232,68,19)" fg:x="272" fg:w="1"/><text x="22.0623%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.8925%" y="437" width="0.0802%" height="15" fill="rgb(236,224,1)" fg:x="273" fg:w="1"/><text x="22.1425%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="21.8925%" y="453" width="0.1604%" height="15" fill="rgb(240,11,8)" fg:x="273" fg:w="2"/><text x="22.1425%" y="463.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="21.9727%" y="437" width="0.0802%" height="15" fill="rgb(244,159,20)" fg:x="274" fg:w="1"/><text x="22.2227%" y="447.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="21.9727%" y="421" width="0.0802%" height="15" fill="rgb(240,223,54)" fg:x="274" fg:w="1"/><text x="22.2227%" y="431.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="21.9727%" y="405" width="0.0802%" height="15" fill="rgb(237,146,5)" fg:x="274" fg:w="1"/><text x="22.2227%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.9727%" y="389" width="0.0802%" height="15" fill="rgb(218,221,32)" fg:x="274" fg:w="1"/><text x="22.2227%" y="399.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="21.9727%" y="373" width="0.0802%" height="15" fill="rgb(244,96,26)" fg:x="274" fg:w="1"/><text x="22.2227%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::scopes::Property)&gt; (1 samples, 0.08%)</title><rect x="22.0529%" y="437" width="0.0802%" height="15" fill="rgb(245,184,37)" fg:x="275" fg:w="1"/><text x="22.3029%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.0529%" y="421" width="0.0802%" height="15" fill="rgb(248,91,47)" fg:x="275" fg:w="1"/><text x="22.3029%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.1331%" y="405" width="0.0802%" height="15" fill="rgb(243,199,8)" fg:x="276" fg:w="1"/><text x="22.3831%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.1331%" y="389" width="0.0802%" height="15" fill="rgb(249,12,15)" fg:x="276" fg:w="1"/><text x="22.3831%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.1331%" y="373" width="0.0802%" height="15" fill="rgb(245,97,12)" fg:x="276" fg:w="1"/><text x="22.3831%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.1331%" y="357" width="0.0802%" height="15" fill="rgb(244,61,1)" fg:x="276" fg:w="1"/><text x="22.3831%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.1331%" y="341" width="0.0802%" height="15" fill="rgb(222,194,10)" fg:x="276" fg:w="1"/><text x="22.3831%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="22.2133%" y="405" width="0.0802%" height="15" fill="rgb(226,178,8)" fg:x="277" fg:w="1"/><text x="22.4633%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.2133%" y="389" width="0.0802%" height="15" fill="rgb(241,32,34)" fg:x="277" fg:w="1"/><text x="22.4633%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="22.2133%" y="373" width="0.0802%" height="15" fill="rgb(254,26,6)" fg:x="277" fg:w="1"/><text x="22.4633%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.2133%" y="357" width="0.0802%" height="15" fill="rgb(249,71,11)" fg:x="277" fg:w="1"/><text x="22.4633%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.2133%" y="341" width="0.0802%" height="15" fill="rgb(232,170,27)" fg:x="277" fg:w="1"/><text x="22.4633%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.2133%" y="325" width="0.0802%" height="15" fill="rgb(214,223,17)" fg:x="277" fg:w="1"/><text x="22.4633%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.2133%" y="309" width="0.0802%" height="15" fill="rgb(250,18,15)" fg:x="277" fg:w="1"/><text x="22.4633%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.2133%" y="293" width="0.0802%" height="15" fill="rgb(212,153,51)" fg:x="277" fg:w="1"/><text x="22.4633%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.2133%" y="277" width="0.0802%" height="15" fill="rgb(219,194,12)" fg:x="277" fg:w="1"/><text x="22.4633%" y="287.50"></text></g><g><title>core::iter::adapters::try_process (19 samples, 1.52%)</title><rect x="20.8500%" y="565" width="1.5237%" height="15" fill="rgb(212,58,17)" fg:x="260" fg:w="19"/><text x="21.1000%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 1.52%)</title><rect x="20.8500%" y="549" width="1.5237%" height="15" fill="rgb(254,5,10)" fg:x="260" fg:w="19"/><text x="21.1000%" y="559.50"></text></g><g><title>plugins_core::build::QuickThing::make (19 samples, 1.52%)</title><rect x="20.8500%" y="533" width="1.5237%" height="15" fill="rgb(246,91,7)" fg:x="260" fg:w="19"/><text x="21.1000%" y="543.50"></text></g><g><title>plugins_core::build::Build::leads_to (17 samples, 1.36%)</title><rect x="21.0104%" y="517" width="1.3633%" height="15" fill="rgb(218,108,49)" fg:x="262" fg:w="17"/><text x="21.2604%" y="527.50"></text></g><g><title>plugins_core::tools::leads_to (11 samples, 0.88%)</title><rect x="21.4916%" y="501" width="0.8821%" height="15" fill="rgb(238,123,20)" fg:x="268" fg:w="11"/><text x="21.7416%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="21.7322%" y="485" width="0.6415%" height="15" fill="rgb(231,69,23)" fg:x="271" fg:w="8"/><text x="21.9822%" y="495.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (8 samples, 0.64%)</title><rect x="21.7322%" y="469" width="0.6415%" height="15" fill="rgb(230,209,3)" fg:x="271" fg:w="8"/><text x="21.9822%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="22.0529%" y="453" width="0.3208%" height="15" fill="rgb(231,19,0)" fg:x="275" fg:w="4"/><text x="22.3029%" y="463.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.24%)</title><rect x="22.1331%" y="437" width="0.2406%" height="15" fill="rgb(226,192,25)" fg:x="276" fg:w="3"/><text x="22.3831%" y="447.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.24%)</title><rect x="22.1331%" y="421" width="0.2406%" height="15" fill="rgb(223,175,53)" fg:x="276" fg:w="3"/><text x="22.3831%" y="431.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="22.2935%" y="405" width="0.0802%" height="15" fill="rgb(248,35,51)" fg:x="278" fg:w="1"/><text x="22.5435%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.2935%" y="389" width="0.0802%" height="15" fill="rgb(230,37,26)" fg:x="278" fg:w="1"/><text x="22.5435%" y="399.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="22.2935%" y="373" width="0.0802%" height="15" fill="rgb(206,120,22)" fg:x="278" fg:w="1"/><text x="22.5435%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.2935%" y="357" width="0.0802%" height="15" fill="rgb(207,165,28)" fg:x="278" fg:w="1"/><text x="22.5435%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.2935%" y="341" width="0.0802%" height="15" fill="rgb(226,23,46)" fg:x="278" fg:w="1"/><text x="22.5435%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.2935%" y="325" width="0.0802%" height="15" fill="rgb(208,130,44)" fg:x="278" fg:w="1"/><text x="22.5435%" y="335.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="22.2935%" y="309" width="0.0802%" height="15" fill="rgb(231,67,8)" fg:x="278" fg:w="1"/><text x="22.5435%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.2935%" y="293" width="0.0802%" height="15" fill="rgb(205,183,22)" fg:x="278" fg:w="1"/><text x="22.5435%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.2935%" y="277" width="0.0802%" height="15" fill="rgb(224,47,9)" fg:x="278" fg:w="1"/><text x="22.5435%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.3737%" y="549" width="0.0802%" height="15" fill="rgb(250,183,49)" fg:x="279" fg:w="1"/><text x="22.6237%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (2 samples, 0.16%)</title><rect x="22.3737%" y="565" width="0.1604%" height="15" fill="rgb(220,151,39)" fg:x="279" fg:w="2"/><text x="22.6237%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="22.4539%" y="549" width="0.0802%" height="15" fill="rgb(220,118,20)" fg:x="280" fg:w="1"/><text x="22.7039%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="22.4539%" y="533" width="0.0802%" height="15" fill="rgb(231,65,51)" fg:x="280" fg:w="1"/><text x="22.7039%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.6143%" y="517" width="0.0802%" height="15" fill="rgb(253,125,37)" fg:x="282" fg:w="1"/><text x="22.8643%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="22.6143%" y="533" width="0.2406%" height="15" fill="rgb(232,102,6)" fg:x="282" fg:w="3"/><text x="22.8643%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="22.6945%" y="517" width="0.1604%" height="15" fill="rgb(251,105,13)" fg:x="283" fg:w="2"/><text x="22.9445%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.7747%" y="501" width="0.0802%" height="15" fill="rgb(222,179,29)" fg:x="284" fg:w="1"/><text x="23.0247%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.8549%" y="485" width="0.0802%" height="15" fill="rgb(229,180,53)" fg:x="285" fg:w="1"/><text x="23.1049%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.8549%" y="469" width="0.0802%" height="15" fill="rgb(238,104,13)" fg:x="285" fg:w="1"/><text x="23.1049%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.8549%" y="453" width="0.0802%" height="15" fill="rgb(210,130,5)" fg:x="285" fg:w="1"/><text x="23.1049%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.8549%" y="437" width="0.0802%" height="15" fill="rgb(233,87,49)" fg:x="285" fg:w="1"/><text x="23.1049%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.8549%" y="421" width="0.0802%" height="15" fill="rgb(243,34,9)" fg:x="285" fg:w="1"/><text x="23.1049%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.8549%" y="405" width="0.0802%" height="15" fill="rgb(235,225,10)" fg:x="285" fg:w="1"/><text x="23.1049%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.8549%" y="389" width="0.0802%" height="15" fill="rgb(212,0,30)" fg:x="285" fg:w="1"/><text x="23.1049%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.8549%" y="373" width="0.0802%" height="15" fill="rgb(211,177,0)" fg:x="285" fg:w="1"/><text x="23.1049%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.8549%" y="357" width="0.0802%" height="15" fill="rgb(225,220,11)" fg:x="285" fg:w="1"/><text x="23.1049%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.8549%" y="341" width="0.0802%" height="15" fill="rgb(215,10,13)" fg:x="285" fg:w="1"/><text x="23.1049%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.8549%" y="325" width="0.0802%" height="15" fill="rgb(240,177,14)" fg:x="285" fg:w="1"/><text x="23.1049%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.8549%" y="309" width="0.0802%" height="15" fill="rgb(243,7,39)" fg:x="285" fg:w="1"/><text x="23.1049%" y="319.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="22.8549%" y="533" width="0.1604%" height="15" fill="rgb(212,99,0)" fg:x="285" fg:w="2"/><text x="23.1049%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="22.8549%" y="517" width="0.1604%" height="15" fill="rgb(225,162,48)" fg:x="285" fg:w="2"/><text x="23.1049%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="22.8549%" y="501" width="0.1604%" height="15" fill="rgb(246,16,25)" fg:x="285" fg:w="2"/><text x="23.1049%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="22.9350%" y="485" width="0.0802%" height="15" fill="rgb(220,150,2)" fg:x="286" fg:w="1"/><text x="23.1850%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="22.9350%" y="469" width="0.0802%" height="15" fill="rgb(237,113,11)" fg:x="286" fg:w="1"/><text x="23.1850%" y="479.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="23.0152%" y="533" width="0.0802%" height="15" fill="rgb(236,70,20)" fg:x="287" fg:w="1"/><text x="23.2652%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="23.0152%" y="517" width="0.0802%" height="15" fill="rgb(234,94,7)" fg:x="287" fg:w="1"/><text x="23.2652%" y="527.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="23.0152%" y="501" width="0.0802%" height="15" fill="rgb(250,221,0)" fg:x="287" fg:w="1"/><text x="23.2652%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.0152%" y="485" width="0.0802%" height="15" fill="rgb(245,149,46)" fg:x="287" fg:w="1"/><text x="23.2652%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="23.0954%" y="517" width="0.0802%" height="15" fill="rgb(215,37,27)" fg:x="288" fg:w="1"/><text x="23.3454%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.1756%" y="469" width="0.0802%" height="15" fill="rgb(232,65,3)" fg:x="289" fg:w="1"/><text x="23.4256%" y="479.50"></text></g><g><title>engine::identifiers::model::set_gid (3 samples, 0.24%)</title><rect x="23.0954%" y="533" width="0.2406%" height="15" fill="rgb(214,2,16)" fg:x="288" fg:w="3"/><text x="23.3454%" y="543.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (2 samples, 0.16%)</title><rect x="23.1756%" y="517" width="0.1604%" height="15" fill="rgb(227,131,50)" fg:x="289" fg:w="2"/><text x="23.4256%" y="527.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (2 samples, 0.16%)</title><rect x="23.1756%" y="501" width="0.1604%" height="15" fill="rgb(247,131,45)" fg:x="289" fg:w="2"/><text x="23.4256%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="23.1756%" y="485" width="0.1604%" height="15" fill="rgb(215,97,47)" fg:x="289" fg:w="2"/><text x="23.4256%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="23.2558%" y="469" width="0.0802%" height="15" fill="rgb(233,143,12)" fg:x="290" fg:w="1"/><text x="23.5058%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="23.3360%" y="517" width="0.0802%" height="15" fill="rgb(222,57,17)" fg:x="291" fg:w="1"/><text x="23.5860%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="23.3360%" y="501" width="0.0802%" height="15" fill="rgb(214,119,38)" fg:x="291" fg:w="1"/><text x="23.5860%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.4964%" y="501" width="0.0802%" height="15" fill="rgb(217,28,47)" fg:x="293" fg:w="1"/><text x="23.7464%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="23.5766%" y="485" width="0.0802%" height="15" fill="rgb(231,14,52)" fg:x="294" fg:w="1"/><text x="23.8266%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="23.6568%" y="485" width="0.2406%" height="15" fill="rgb(220,158,18)" fg:x="295" fg:w="3"/><text x="23.9068%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="23.7370%" y="469" width="0.1604%" height="15" fill="rgb(222,143,46)" fg:x="296" fg:w="2"/><text x="23.9870%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="23.7370%" y="453" width="0.1604%" height="15" fill="rgb(227,165,5)" fg:x="296" fg:w="2"/><text x="23.9870%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="23.7370%" y="437" width="0.1604%" height="15" fill="rgb(216,222,49)" fg:x="296" fg:w="2"/><text x="23.9870%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="23.7370%" y="421" width="0.1604%" height="15" fill="rgb(238,73,39)" fg:x="296" fg:w="2"/><text x="23.9870%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (10 samples, 0.80%)</title><rect x="23.8974%" y="469" width="0.8019%" height="15" fill="rgb(252,115,9)" fg:x="298" fg:w="10"/><text x="24.1474%" y="479.50"></text></g><g><title>std::io::Write::write_all (8 samples, 0.64%)</title><rect x="24.0577%" y="453" width="0.6415%" height="15" fill="rgb(238,202,4)" fg:x="300" fg:w="8"/><text x="24.3077%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.48%)</title><rect x="24.2181%" y="437" width="0.4812%" height="15" fill="rgb(252,153,44)" fg:x="302" fg:w="6"/><text x="24.4681%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="24.5389%" y="421" width="0.1604%" height="15" fill="rgb(235,128,27)" fg:x="306" fg:w="2"/><text x="24.7889%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="24.6191%" y="405" width="0.0802%" height="15" fill="rgb(221,121,47)" fg:x="307" fg:w="1"/><text x="24.8691%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="24.6191%" y="389" width="0.0802%" height="15" fill="rgb(247,211,47)" fg:x="307" fg:w="1"/><text x="24.8691%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="24.6191%" y="373" width="0.0802%" height="15" fill="rgb(252,47,49)" fg:x="307" fg:w="1"/><text x="24.8691%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="24.6993%" y="453" width="0.3208%" height="15" fill="rgb(219,119,53)" fg:x="308" fg:w="4"/><text x="24.9493%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="24.6993%" y="437" width="0.3208%" height="15" fill="rgb(243,165,53)" fg:x="308" fg:w="4"/><text x="24.9493%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="24.7795%" y="421" width="0.2406%" height="15" fill="rgb(230,12,35)" fg:x="309" fg:w="3"/><text x="25.0295%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="24.7795%" y="405" width="0.2406%" height="15" fill="rgb(239,57,49)" fg:x="309" fg:w="3"/><text x="25.0295%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="24.7795%" y="389" width="0.2406%" height="15" fill="rgb(231,154,7)" fg:x="309" fg:w="3"/><text x="25.0295%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="24.9399%" y="373" width="0.0802%" height="15" fill="rgb(248,81,34)" fg:x="311" fg:w="1"/><text x="25.1899%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.9399%" y="357" width="0.0802%" height="15" fill="rgb(247,9,5)" fg:x="311" fg:w="1"/><text x="25.1899%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="25.0200%" y="453" width="0.3208%" height="15" fill="rgb(228,172,27)" fg:x="312" fg:w="4"/><text x="25.2700%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="25.1804%" y="437" width="0.1604%" height="15" fill="rgb(230,57,44)" fg:x="314" fg:w="2"/><text x="25.4304%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.2606%" y="421" width="0.0802%" height="15" fill="rgb(249,35,22)" fg:x="315" fg:w="1"/><text x="25.5106%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.2606%" y="405" width="0.0802%" height="15" fill="rgb(250,137,27)" fg:x="315" fg:w="1"/><text x="25.5106%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="25.4210%" y="437" width="0.0802%" height="15" fill="rgb(251,57,31)" fg:x="317" fg:w="1"/><text x="25.6710%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="25.5012%" y="421" width="0.0802%" height="15" fill="rgb(238,60,0)" fg:x="318" fg:w="1"/><text x="25.7512%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.5012%" y="405" width="0.0802%" height="15" fill="rgb(242,185,39)" fg:x="318" fg:w="1"/><text x="25.7512%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.5012%" y="389" width="0.0802%" height="15" fill="rgb(240,63,43)" fg:x="318" fg:w="1"/><text x="25.7512%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.5012%" y="373" width="0.0802%" height="15" fill="rgb(236,155,6)" fg:x="318" fg:w="1"/><text x="25.7512%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="25.5012%" y="357" width="0.0802%" height="15" fill="rgb(215,11,29)" fg:x="318" fg:w="1"/><text x="25.7512%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.5012%" y="341" width="0.0802%" height="15" fill="rgb(228,180,48)" fg:x="318" fg:w="1"/><text x="25.7512%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="25.5012%" y="325" width="0.0802%" height="15" fill="rgb(241,102,12)" fg:x="318" fg:w="1"/><text x="25.7512%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="25.5814%" y="405" width="0.3208%" height="15" fill="rgb(246,213,4)" fg:x="319" fg:w="4"/><text x="25.8314%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="25.9022%" y="405" width="0.1604%" height="15" fill="rgb(218,134,35)" fg:x="323" fg:w="2"/><text x="26.1522%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="25.9022%" y="389" width="0.1604%" height="15" fill="rgb(251,117,35)" fg:x="323" fg:w="2"/><text x="26.1522%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.9824%" y="373" width="0.0802%" height="15" fill="rgb(206,156,45)" fg:x="324" fg:w="1"/><text x="26.2324%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.9824%" y="357" width="0.0802%" height="15" fill="rgb(218,52,27)" fg:x="324" fg:w="1"/><text x="26.2324%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="25.5814%" y="421" width="0.5613%" height="15" fill="rgb(238,83,36)" fg:x="319" fg:w="7"/><text x="25.8314%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="26.0626%" y="405" width="0.0802%" height="15" fill="rgb(218,53,43)" fg:x="325" fg:w="1"/><text x="26.3126%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.0626%" y="389" width="0.0802%" height="15" fill="rgb(239,54,39)" fg:x="325" fg:w="1"/><text x="26.3126%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.0626%" y="373" width="0.0802%" height="15" fill="rgb(212,198,13)" fg:x="325" fg:w="1"/><text x="26.3126%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.0626%" y="357" width="0.0802%" height="15" fill="rgb(234,54,46)" fg:x="325" fg:w="1"/><text x="26.3126%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="25.5012%" y="437" width="0.8019%" height="15" fill="rgb(217,120,7)" fg:x="318" fg:w="10"/><text x="25.7512%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="26.1427%" y="421" width="0.1604%" height="15" fill="rgb(246,39,15)" fg:x="326" fg:w="2"/><text x="26.3927%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.2229%" y="405" width="0.0802%" height="15" fill="rgb(242,143,31)" fg:x="327" fg:w="1"/><text x="26.4729%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="25.3408%" y="453" width="1.0425%" height="15" fill="rgb(252,60,24)" fg:x="316" fg:w="13"/><text x="25.5908%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.3031%" y="437" width="0.0802%" height="15" fill="rgb(249,220,7)" fg:x="328" fg:w="1"/><text x="26.5531%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.3031%" y="421" width="0.0802%" height="15" fill="rgb(236,67,13)" fg:x="328" fg:w="1"/><text x="26.5531%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.84%)</title><rect x="24.6993%" y="469" width="1.8444%" height="15" fill="rgb(210,62,39)" fg:x="308" fg:w="23"/><text x="24.9493%" y="479.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="26.3833%" y="453" width="0.1604%" height="15" fill="rgb(219,122,53)" fg:x="329" fg:w="2"/><text x="26.6333%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.4635%" y="437" width="0.0802%" height="15" fill="rgb(218,87,25)" fg:x="330" fg:w="1"/><text x="26.7135%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (38 samples, 3.05%)</title><rect x="23.8974%" y="485" width="3.0473%" height="15" fill="rgb(234,179,48)" fg:x="298" fg:w="38"/><text x="24.1474%" y="495.50">ser..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="26.5437%" y="469" width="0.4010%" height="15" fill="rgb(248,90,0)" fg:x="331" fg:w="5"/><text x="26.7937%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="26.7041%" y="453" width="0.2406%" height="15" fill="rgb(207,228,37)" fg:x="333" fg:w="3"/><text x="26.9541%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="26.7041%" y="437" width="0.2406%" height="15" fill="rgb(235,214,15)" fg:x="333" fg:w="3"/><text x="26.9541%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="26.7843%" y="421" width="0.1604%" height="15" fill="rgb(210,144,39)" fg:x="334" fg:w="2"/><text x="27.0343%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="26.7843%" y="405" width="0.1604%" height="15" fill="rgb(222,67,41)" fg:x="334" fg:w="2"/><text x="27.0343%" y="415.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="26.7843%" y="389" width="0.1604%" height="15" fill="rgb(205,35,37)" fg:x="334" fg:w="2"/><text x="27.0343%" y="399.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (44 samples, 3.53%)</title><rect x="23.5766%" y="501" width="3.5285%" height="15" fill="rgb(216,125,40)" fg:x="294" fg:w="44"/><text x="23.8266%" y="511.50">&lt;se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="26.9447%" y="485" width="0.1604%" height="15" fill="rgb(228,227,20)" fg:x="336" fg:w="2"/><text x="27.1947%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.0249%" y="469" width="0.0802%" height="15" fill="rgb(242,173,45)" fg:x="337" fg:w="1"/><text x="27.2749%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="27.0249%" y="453" width="0.0802%" height="15" fill="rgb(215,79,24)" fg:x="337" fg:w="1"/><text x="27.2749%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="27.2654%" y="469" width="0.1604%" height="15" fill="rgb(238,164,38)" fg:x="340" fg:w="2"/><text x="27.5154%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.4258%" y="469" width="0.0802%" height="15" fill="rgb(245,196,38)" fg:x="342" fg:w="1"/><text x="27.6758%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.5060%" y="453" width="0.0802%" height="15" fill="rgb(231,217,29)" fg:x="343" fg:w="1"/><text x="27.7560%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="27.7466%" y="437" width="0.1604%" height="15" fill="rgb(245,6,4)" fg:x="346" fg:w="2"/><text x="27.9966%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="27.9070%" y="437" width="0.1604%" height="15" fill="rgb(214,76,49)" fg:x="348" fg:w="2"/><text x="28.1570%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="27.9070%" y="421" width="0.1604%" height="15" fill="rgb(205,96,12)" fg:x="348" fg:w="2"/><text x="28.1570%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.0674%" y="421" width="0.0802%" height="15" fill="rgb(243,131,4)" fg:x="350" fg:w="1"/><text x="28.3174%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.0674%" y="405" width="0.0802%" height="15" fill="rgb(214,114,4)" fg:x="350" fg:w="1"/><text x="28.3174%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="28.1476%" y="421" width="0.0802%" height="15" fill="rgb(234,215,15)" fg:x="351" fg:w="1"/><text x="28.3976%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="28.1476%" y="405" width="0.0802%" height="15" fill="rgb(250,216,45)" fg:x="351" fg:w="1"/><text x="28.3976%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.1476%" y="389" width="0.0802%" height="15" fill="rgb(236,128,4)" fg:x="351" fg:w="1"/><text x="28.3976%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.2277%" y="405" width="0.0802%" height="15" fill="rgb(234,50,33)" fg:x="352" fg:w="1"/><text x="28.4777%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.3881%" y="389" width="0.0802%" height="15" fill="rgb(253,131,37)" fg:x="354" fg:w="1"/><text x="28.6381%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 1.44%)</title><rect x="27.1051%" y="501" width="1.4435%" height="15" fill="rgb(218,55,27)" fg:x="338" fg:w="18"/><text x="27.3551%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (18 samples, 1.44%)</title><rect x="27.1051%" y="485" width="1.4435%" height="15" fill="rgb(241,220,28)" fg:x="338" fg:w="18"/><text x="27.3551%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="27.5060%" y="469" width="1.0425%" height="15" fill="rgb(241,90,48)" fg:x="343" fg:w="13"/><text x="27.7560%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="27.5862%" y="453" width="0.9623%" height="15" fill="rgb(216,43,37)" fg:x="344" fg:w="12"/><text x="27.8362%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="28.0674%" y="437" width="0.4812%" height="15" fill="rgb(207,173,9)" fg:x="350" fg:w="6"/><text x="28.3174%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="28.2277%" y="421" width="0.3208%" height="15" fill="rgb(240,126,30)" fg:x="352" fg:w="4"/><text x="28.4777%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="28.3079%" y="405" width="0.2406%" height="15" fill="rgb(228,178,53)" fg:x="353" fg:w="3"/><text x="28.5579%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.4683%" y="389" width="0.0802%" height="15" fill="rgb(217,33,4)" fg:x="355" fg:w="1"/><text x="28.7183%" y="399.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="28.6287%" y="485" width="0.0802%" height="15" fill="rgb(206,124,34)" fg:x="357" fg:w="1"/><text x="28.8787%" y="495.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="28.6287%" y="469" width="0.0802%" height="15" fill="rgb(208,122,53)" fg:x="357" fg:w="1"/><text x="28.8787%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="28.7089%" y="485" width="0.0802%" height="15" fill="rgb(215,202,26)" fg:x="358" fg:w="1"/><text x="28.9589%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.8693%" y="453" width="0.0802%" height="15" fill="rgb(232,198,31)" fg:x="360" fg:w="1"/><text x="29.1193%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="28.9495%" y="453" width="0.1604%" height="15" fill="rgb(222,23,35)" fg:x="361" fg:w="2"/><text x="29.1995%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="29.1099%" y="453" width="0.0802%" height="15" fill="rgb(242,27,53)" fg:x="363" fg:w="1"/><text x="29.3599%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.1099%" y="437" width="0.0802%" height="15" fill="rgb(210,216,42)" fg:x="363" fg:w="1"/><text x="29.3599%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="29.1099%" y="421" width="0.0802%" height="15" fill="rgb(234,39,38)" fg:x="363" fg:w="1"/><text x="29.3599%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="29.1099%" y="405" width="0.0802%" height="15" fill="rgb(235,126,54)" fg:x="363" fg:w="1"/><text x="29.3599%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.1901%" y="437" width="0.0802%" height="15" fill="rgb(235,150,33)" fg:x="364" fg:w="1"/><text x="29.4401%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.1901%" y="421" width="0.0802%" height="15" fill="rgb(249,49,53)" fg:x="364" fg:w="1"/><text x="29.4401%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.1901%" y="405" width="0.0802%" height="15" fill="rgb(238,60,50)" fg:x="364" fg:w="1"/><text x="29.4401%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.1901%" y="389" width="0.0802%" height="15" fill="rgb(210,5,2)" fg:x="364" fg:w="1"/><text x="29.4401%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="29.1901%" y="453" width="0.1604%" height="15" fill="rgb(214,207,24)" fg:x="364" fg:w="2"/><text x="29.4401%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="29.2702%" y="437" width="0.0802%" height="15" fill="rgb(228,173,2)" fg:x="365" fg:w="1"/><text x="29.5202%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="29.3504%" y="453" width="0.2406%" height="15" fill="rgb(244,26,8)" fg:x="366" fg:w="3"/><text x="29.6004%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="29.3504%" y="437" width="0.2406%" height="15" fill="rgb(249,153,35)" fg:x="366" fg:w="3"/><text x="29.6004%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.5108%" y="421" width="0.0802%" height="15" fill="rgb(221,215,40)" fg:x="368" fg:w="1"/><text x="29.7608%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.7514%" y="437" width="0.0802%" height="15" fill="rgb(238,106,35)" fg:x="371" fg:w="1"/><text x="30.0014%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.8316%" y="437" width="0.0802%" height="15" fill="rgb(207,195,21)" fg:x="372" fg:w="1"/><text x="30.0816%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.8316%" y="421" width="0.0802%" height="15" fill="rgb(205,43,29)" fg:x="372" fg:w="1"/><text x="30.0816%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="29.9118%" y="421" width="0.0802%" height="15" fill="rgb(236,35,21)" fg:x="373" fg:w="1"/><text x="30.1618%" y="431.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="30.0722%" y="373" width="0.2406%" height="15" fill="rgb(244,74,8)" fg:x="375" fg:w="3"/><text x="30.3222%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="29.9920%" y="405" width="0.4010%" height="15" fill="rgb(241,229,7)" fg:x="374" fg:w="5"/><text x="30.2420%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="30.0722%" y="389" width="0.3208%" height="15" fill="rgb(212,223,25)" fg:x="375" fg:w="4"/><text x="30.3222%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="30.3128%" y="373" width="0.0802%" height="15" fill="rgb(234,58,53)" fg:x="378" fg:w="1"/><text x="30.5628%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="30.3929%" y="405" width="0.0802%" height="15" fill="rgb(244,36,1)" fg:x="379" fg:w="1"/><text x="30.6429%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="30.3929%" y="389" width="0.0802%" height="15" fill="rgb(222,40,54)" fg:x="379" fg:w="1"/><text x="30.6429%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="30.3929%" y="373" width="0.0802%" height="15" fill="rgb(210,207,39)" fg:x="379" fg:w="1"/><text x="30.6429%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.3929%" y="357" width="0.0802%" height="15" fill="rgb(234,52,14)" fg:x="379" fg:w="1"/><text x="30.6429%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="30.6335%" y="373" width="0.2406%" height="15" fill="rgb(239,108,46)" fg:x="382" fg:w="3"/><text x="30.8835%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="30.6335%" y="357" width="0.2406%" height="15" fill="rgb(252,223,5)" fg:x="382" fg:w="3"/><text x="30.8835%" y="367.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="30.6335%" y="341" width="0.2406%" height="15" fill="rgb(227,181,11)" fg:x="382" fg:w="3"/><text x="30.8835%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="30.8741%" y="373" width="0.0802%" height="15" fill="rgb(248,126,40)" fg:x="385" fg:w="1"/><text x="31.1241%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.9543%" y="341" width="0.0802%" height="15" fill="rgb(243,1,18)" fg:x="386" fg:w="1"/><text x="31.2043%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="31.1147%" y="309" width="0.1604%" height="15" fill="rgb(214,145,23)" fg:x="388" fg:w="2"/><text x="31.3647%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="31.1147%" y="293" width="0.1604%" height="15" fill="rgb(241,218,11)" fg:x="388" fg:w="2"/><text x="31.3647%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.1949%" y="277" width="0.0802%" height="15" fill="rgb(214,219,24)" fg:x="389" fg:w="1"/><text x="31.4449%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="31.4354%" y="293" width="0.0802%" height="15" fill="rgb(235,32,7)" fg:x="392" fg:w="1"/><text x="31.6854%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="30.9543%" y="357" width="0.8019%" height="15" fill="rgb(227,121,28)" fg:x="386" fg:w="10"/><text x="31.2043%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="31.0345%" y="341" width="0.7217%" height="15" fill="rgb(216,129,49)" fg:x="387" fg:w="9"/><text x="31.2845%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="31.0345%" y="325" width="0.7217%" height="15" fill="rgb(207,194,50)" fg:x="387" fg:w="9"/><text x="31.2845%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="31.2751%" y="309" width="0.4812%" height="15" fill="rgb(207,4,18)" fg:x="390" fg:w="6"/><text x="31.5251%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="31.5156%" y="293" width="0.2406%" height="15" fill="rgb(213,50,30)" fg:x="393" fg:w="3"/><text x="31.7656%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="31.5156%" y="277" width="0.2406%" height="15" fill="rgb(208,77,22)" fg:x="393" fg:w="3"/><text x="31.7656%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="31.5156%" y="261" width="0.2406%" height="15" fill="rgb(244,204,34)" fg:x="393" fg:w="3"/><text x="31.7656%" y="271.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="31.5156%" y="245" width="0.2406%" height="15" fill="rgb(230,20,17)" fg:x="393" fg:w="3"/><text x="31.7656%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (16 samples, 1.28%)</title><rect x="30.5533%" y="389" width="1.2831%" height="15" fill="rgb(237,83,15)" fg:x="381" fg:w="16"/><text x="30.8033%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.88%)</title><rect x="30.9543%" y="373" width="0.8821%" height="15" fill="rgb(221,109,25)" fg:x="386" fg:w="11"/><text x="31.2043%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.7562%" y="357" width="0.0802%" height="15" fill="rgb(205,194,52)" fg:x="396" fg:w="1"/><text x="32.0062%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (25 samples, 2.00%)</title><rect x="29.9920%" y="421" width="2.0048%" height="15" fill="rgb(244,173,54)" fg:x="374" fg:w="25"/><text x="30.2420%" y="431.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (19 samples, 1.52%)</title><rect x="30.4731%" y="405" width="1.5237%" height="15" fill="rgb(227,181,18)" fg:x="380" fg:w="19"/><text x="30.7231%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="31.8364%" y="389" width="0.1604%" height="15" fill="rgb(238,36,30)" fg:x="397" fg:w="2"/><text x="32.0864%" y="399.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (110 samples, 8.82%)</title><rect x="23.3360%" y="533" width="8.8212%" height="15" fill="rgb(254,85,0)" fg:x="291" fg:w="110"/><text x="23.5860%" y="543.50">engine::inte..</text></g><g><title>engine::session::SavesEntities::check_for_changes (109 samples, 8.74%)</title><rect x="23.4162%" y="517" width="8.7410%" height="15" fill="rgb(247,63,33)" fg:x="292" fg:w="109"/><text x="23.6662%" y="527.50">engine::sess..</text></g><g><title>kernel::model::any_entity_changes (45 samples, 3.61%)</title><rect x="28.5485%" y="501" width="3.6087%" height="15" fill="rgb(220,7,54)" fg:x="356" fg:w="45"/><text x="28.7985%" y="511.50">kern..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (42 samples, 3.37%)</title><rect x="28.7891%" y="485" width="3.3681%" height="15" fill="rgb(238,227,21)" fg:x="359" fg:w="42"/><text x="29.0391%" y="495.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (42 samples, 3.37%)</title><rect x="28.7891%" y="469" width="3.3681%" height="15" fill="rgb(237,29,31)" fg:x="359" fg:w="42"/><text x="29.0391%" y="479.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (32 samples, 2.57%)</title><rect x="29.5910%" y="453" width="2.5662%" height="15" fill="rgb(211,21,50)" fg:x="369" fg:w="32"/><text x="29.8410%" y="463.50">se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (28 samples, 2.25%)</title><rect x="29.9118%" y="437" width="2.2454%" height="15" fill="rgb(239,119,2)" fg:x="373" fg:w="28"/><text x="30.1618%" y="447.50">s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="31.9968%" y="421" width="0.1604%" height="15" fill="rgb(250,2,39)" fg:x="399" fg:w="2"/><text x="32.2468%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.0770%" y="405" width="0.0802%" height="15" fill="rgb(244,46,53)" fg:x="400" fg:w="1"/><text x="32.3270%" y="415.50"></text></g><g><title>engine::session::Session::flush (122 samples, 9.78%)</title><rect x="22.5341%" y="565" width="9.7835%" height="15" fill="rgb(209,21,19)" fg:x="281" fg:w="122"/><text x="22.7841%" y="575.50">engine::sessio..</text></g><g><title>engine::session::Session::save_entity_changes (122 samples, 9.78%)</title><rect x="22.5341%" y="549" width="9.7835%" height="15" fill="rgb(236,145,4)" fg:x="281" fg:w="122"/><text x="22.7841%" y="559.50">engine::sessio..</text></g><g><title>std::env::_var (2 samples, 0.16%)</title><rect x="32.1572%" y="533" width="0.1604%" height="15" fill="rgb(220,133,36)" fg:x="401" fg:w="2"/><text x="32.4072%" y="543.50"></text></g><g><title>std::env::var_os (2 samples, 0.16%)</title><rect x="32.1572%" y="517" width="0.1604%" height="15" fill="rgb(244,18,3)" fg:x="401" fg:w="2"/><text x="32.4072%" y="527.50"></text></g><g><title>std::env::_var_os (2 samples, 0.16%)</title><rect x="32.1572%" y="501" width="0.1604%" height="15" fill="rgb(232,171,48)" fg:x="401" fg:w="2"/><text x="32.4072%" y="511.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.16%)</title><rect x="32.1572%" y="485" width="0.1604%" height="15" fill="rgb(223,223,53)" fg:x="401" fg:w="2"/><text x="32.4072%" y="495.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="32.1572%" y="469" width="0.1604%" height="15" fill="rgb(246,92,13)" fg:x="401" fg:w="2"/><text x="32.4072%" y="479.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="32.2374%" y="453" width="0.0802%" height="15" fill="rgb(229,171,10)" fg:x="402" fg:w="1"/><text x="32.4874%" y="463.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="32.2374%" y="437" width="0.0802%" height="15" fill="rgb(213,131,26)" fg:x="402" fg:w="1"/><text x="32.4874%" y="447.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="32.3176%" y="565" width="0.0802%" height="15" fill="rgb(242,87,54)" fg:x="403" fg:w="1"/><text x="32.5676%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="32.3176%" y="549" width="0.0802%" height="15" fill="rgb(237,21,35)" fg:x="403" fg:w="1"/><text x="32.5676%" y="559.50"></text></g><g><title>kernel::model::entity::Entity::new_with_key (1 samples, 0.08%)</title><rect x="32.4779%" y="533" width="0.0802%" height="15" fill="rgb(253,13,47)" fg:x="405" fg:w="1"/><text x="32.7279%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="32.3978%" y="565" width="0.2406%" height="15" fill="rgb(215,122,49)" fg:x="404" fg:w="3"/><text x="32.6478%" y="575.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (2 samples, 0.16%)</title><rect x="32.4779%" y="549" width="0.1604%" height="15" fill="rgb(209,179,30)" fg:x="405" fg:w="2"/><text x="32.7279%" y="559.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="32.5581%" y="533" width="0.0802%" height="15" fill="rgb(235,100,24)" fg:x="406" fg:w="1"/><text x="32.8081%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="32.7987%" y="517" width="0.0802%" height="15" fill="rgb(209,67,24)" fg:x="409" fg:w="1"/><text x="33.0487%" y="527.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="32.7987%" y="501" width="0.0802%" height="15" fill="rgb(206,74,32)" fg:x="409" fg:w="1"/><text x="33.0487%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="32.7185%" y="533" width="0.2406%" height="15" fill="rgb(212,45,25)" fg:x="408" fg:w="3"/><text x="32.9685%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="32.8789%" y="517" width="0.0802%" height="15" fill="rgb(239,26,3)" fg:x="410" fg:w="1"/><text x="33.1289%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="32.8789%" y="501" width="0.0802%" height="15" fill="rgb(218,36,15)" fg:x="410" fg:w="1"/><text x="33.1289%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.9591%" y="421" width="0.0802%" height="15" fill="rgb(206,108,24)" fg:x="411" fg:w="1"/><text x="33.2091%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.9591%" y="405" width="0.0802%" height="15" fill="rgb(234,204,42)" fg:x="411" fg:w="1"/><text x="33.2091%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.9591%" y="389" width="0.0802%" height="15" fill="rgb(229,2,11)" fg:x="411" fg:w="1"/><text x="33.2091%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.9591%" y="373" width="0.0802%" height="15" fill="rgb(221,20,48)" fg:x="411" fg:w="1"/><text x="33.2091%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.9591%" y="437" width="0.1604%" height="15" fill="rgb(244,164,10)" fg:x="411" fg:w="2"/><text x="33.2091%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.0393%" y="421" width="0.0802%" height="15" fill="rgb(243,229,2)" fg:x="412" fg:w="1"/><text x="33.2893%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.0393%" y="405" width="0.0802%" height="15" fill="rgb(232,131,37)" fg:x="412" fg:w="1"/><text x="33.2893%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.0393%" y="389" width="0.0802%" height="15" fill="rgb(217,156,11)" fg:x="412" fg:w="1"/><text x="33.2893%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.0393%" y="373" width="0.0802%" height="15" fill="rgb(239,99,48)" fg:x="412" fg:w="1"/><text x="33.2893%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.0393%" y="357" width="0.0802%" height="15" fill="rgb(231,209,9)" fg:x="412" fg:w="1"/><text x="33.2893%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="33.0393%" y="341" width="0.0802%" height="15" fill="rgb(254,97,27)" fg:x="412" fg:w="1"/><text x="33.2893%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="33.0393%" y="325" width="0.0802%" height="15" fill="rgb(223,151,38)" fg:x="412" fg:w="1"/><text x="33.2893%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="32.9591%" y="453" width="0.2406%" height="15" fill="rgb(219,206,35)" fg:x="411" fg:w="3"/><text x="33.2091%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.1195%" y="437" width="0.0802%" height="15" fill="rgb(216,130,31)" fg:x="413" fg:w="1"/><text x="33.3695%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.1195%" y="421" width="0.0802%" height="15" fill="rgb(251,97,34)" fg:x="413" fg:w="1"/><text x="33.3695%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.1195%" y="405" width="0.0802%" height="15" fill="rgb(246,159,47)" fg:x="413" fg:w="1"/><text x="33.3695%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.1195%" y="389" width="0.0802%" height="15" fill="rgb(232,87,10)" fg:x="413" fg:w="1"/><text x="33.3695%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.1195%" y="373" width="0.0802%" height="15" fill="rgb(249,1,37)" fg:x="413" fg:w="1"/><text x="33.3695%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.1195%" y="357" width="0.0802%" height="15" fill="rgb(239,135,14)" fg:x="413" fg:w="1"/><text x="33.3695%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.1195%" y="341" width="0.0802%" height="15" fill="rgb(253,116,46)" fg:x="413" fg:w="1"/><text x="33.3695%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="33.2799%" y="293" width="0.0802%" height="15" fill="rgb(222,217,37)" fg:x="415" fg:w="1"/><text x="33.5299%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.2799%" y="277" width="0.0802%" height="15" fill="rgb(252,96,8)" fg:x="415" fg:w="1"/><text x="33.5299%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="32.9591%" y="501" width="0.4812%" height="15" fill="rgb(254,103,41)" fg:x="411" fg:w="6"/><text x="33.2091%" y="511.50"></text></g><g><title>kernel::model::scopes::load_props (6 samples, 0.48%)</title><rect x="32.9591%" y="485" width="0.4812%" height="15" fill="rgb(218,213,19)" fg:x="411" fg:w="6"/><text x="33.2091%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (6 samples, 0.48%)</title><rect x="32.9591%" y="469" width="0.4812%" height="15" fill="rgb(253,95,21)" fg:x="411" fg:w="6"/><text x="33.2091%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="33.1997%" y="453" width="0.2406%" height="15" fill="rgb(229,26,28)" fg:x="414" fg:w="3"/><text x="33.4497%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="33.1997%" y="437" width="0.2406%" height="15" fill="rgb(230,129,16)" fg:x="414" fg:w="3"/><text x="33.4497%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="33.1997%" y="421" width="0.2406%" height="15" fill="rgb(236,126,17)" fg:x="414" fg:w="3"/><text x="33.4497%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="33.1997%" y="405" width="0.2406%" height="15" fill="rgb(209,33,33)" fg:x="414" fg:w="3"/><text x="33.4497%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="33.1997%" y="389" width="0.2406%" height="15" fill="rgb(227,85,29)" fg:x="414" fg:w="3"/><text x="33.4497%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="33.1997%" y="373" width="0.2406%" height="15" fill="rgb(241,53,46)" fg:x="414" fg:w="3"/><text x="33.4497%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="33.2799%" y="357" width="0.1604%" height="15" fill="rgb(228,167,53)" fg:x="415" fg:w="2"/><text x="33.5299%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="33.2799%" y="341" width="0.1604%" height="15" fill="rgb(238,195,45)" fg:x="415" fg:w="2"/><text x="33.5299%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="33.2799%" y="325" width="0.1604%" height="15" fill="rgb(252,124,45)" fg:x="415" fg:w="2"/><text x="33.5299%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="33.2799%" y="309" width="0.1604%" height="15" fill="rgb(251,38,35)" fg:x="415" fg:w="2"/><text x="33.5299%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="33.3601%" y="293" width="0.0802%" height="15" fill="rgb(227,33,2)" fg:x="416" fg:w="1"/><text x="33.6101%" y="303.50"></text></g><g><title>&lt;kernel::model::scopes::Properties as kernel::model::scopes::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="33.4403%" y="485" width="0.0802%" height="15" fill="rgb(223,157,46)" fg:x="417" fg:w="1"/><text x="33.6903%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.4403%" y="469" width="0.0802%" height="15" fill="rgb(222,78,41)" fg:x="417" fg:w="1"/><text x="33.6903%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.4403%" y="453" width="0.0802%" height="15" fill="rgb(248,176,11)" fg:x="417" fg:w="1"/><text x="33.6903%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.5204%" y="389" width="0.0802%" height="15" fill="rgb(241,221,18)" fg:x="418" fg:w="1"/><text x="33.7704%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.5204%" y="373" width="0.0802%" height="15" fill="rgb(218,85,22)" fg:x="418" fg:w="1"/><text x="33.7704%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.5204%" y="357" width="0.0802%" height="15" fill="rgb(222,223,7)" fg:x="418" fg:w="1"/><text x="33.7704%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.5204%" y="341" width="0.0802%" height="15" fill="rgb(254,59,39)" fg:x="418" fg:w="1"/><text x="33.7704%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.5204%" y="325" width="0.0802%" height="15" fill="rgb(247,100,27)" fg:x="418" fg:w="1"/><text x="33.7704%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.5204%" y="309" width="0.0802%" height="15" fill="rgb(237,207,10)" fg:x="418" fg:w="1"/><text x="33.7704%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="33.5204%" y="293" width="0.0802%" height="15" fill="rgb(220,121,28)" fg:x="418" fg:w="1"/><text x="33.7704%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="33.5204%" y="277" width="0.0802%" height="15" fill="rgb(213,223,20)" fg:x="418" fg:w="1"/><text x="33.7704%" y="287.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="33.5204%" y="485" width="0.1604%" height="15" fill="rgb(205,121,27)" fg:x="418" fg:w="2"/><text x="33.7704%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="33.5204%" y="469" width="0.1604%" height="15" fill="rgb(253,24,53)" fg:x="418" fg:w="2"/><text x="33.7704%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="33.5204%" y="453" width="0.1604%" height="15" fill="rgb(224,224,47)" fg:x="418" fg:w="2"/><text x="33.7704%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.5204%" y="437" width="0.1604%" height="15" fill="rgb(250,125,36)" fg:x="418" fg:w="2"/><text x="33.7704%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.5204%" y="421" width="0.1604%" height="15" fill="rgb(240,144,38)" fg:x="418" fg:w="2"/><text x="33.7704%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.5204%" y="405" width="0.1604%" height="15" fill="rgb(250,15,50)" fg:x="418" fg:w="2"/><text x="33.7704%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.6006%" y="389" width="0.0802%" height="15" fill="rgb(210,24,26)" fg:x="419" fg:w="1"/><text x="33.8506%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.6808%" y="453" width="0.0802%" height="15" fill="rgb(234,53,53)" fg:x="420" fg:w="1"/><text x="33.9308%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.6808%" y="437" width="0.0802%" height="15" fill="rgb(208,108,28)" fg:x="420" fg:w="1"/><text x="33.9308%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.6808%" y="421" width="0.0802%" height="15" fill="rgb(227,143,7)" fg:x="420" fg:w="1"/><text x="33.9308%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.6808%" y="405" width="0.0802%" height="15" fill="rgb(238,189,38)" fg:x="420" fg:w="1"/><text x="33.9308%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.6808%" y="389" width="0.0802%" height="15" fill="rgb(222,69,15)" fg:x="420" fg:w="1"/><text x="33.9308%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.6808%" y="373" width="0.0802%" height="15" fill="rgb(213,169,7)" fg:x="420" fg:w="1"/><text x="33.9308%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.6808%" y="357" width="0.0802%" height="15" fill="rgb(251,219,4)" fg:x="420" fg:w="1"/><text x="33.9308%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.6808%" y="341" width="0.0802%" height="15" fill="rgb(241,55,40)" fg:x="420" fg:w="1"/><text x="33.9308%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.6808%" y="325" width="0.0802%" height="15" fill="rgb(243,57,30)" fg:x="420" fg:w="1"/><text x="33.9308%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.6808%" y="309" width="0.0802%" height="15" fill="rgb(234,50,30)" fg:x="420" fg:w="1"/><text x="33.9308%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.6808%" y="293" width="0.0802%" height="15" fill="rgb(239,23,42)" fg:x="420" fg:w="1"/><text x="33.9308%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.6808%" y="277" width="0.0802%" height="15" fill="rgb(217,38,19)" fg:x="420" fg:w="1"/><text x="33.9308%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.6808%" y="261" width="0.0802%" height="15" fill="rgb(215,179,16)" fg:x="420" fg:w="1"/><text x="33.9308%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.6808%" y="245" width="0.0802%" height="15" fill="rgb(254,21,37)" fg:x="420" fg:w="1"/><text x="33.9308%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.6808%" y="229" width="0.0802%" height="15" fill="rgb(219,207,48)" fg:x="420" fg:w="1"/><text x="33.9308%" y="239.50"></text></g><g><title>&lt;kernel::model::scopes::Properties as kernel::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="33.7610%" y="453" width="0.0802%" height="15" fill="rgb(227,225,41)" fg:x="421" fg:w="1"/><text x="34.0110%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.7610%" y="437" width="0.0802%" height="15" fill="rgb(223,130,1)" fg:x="421" fg:w="1"/><text x="34.0110%" y="447.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="33.7610%" y="421" width="0.0802%" height="15" fill="rgb(249,54,42)" fg:x="421" fg:w="1"/><text x="34.0110%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.7610%" y="405" width="0.0802%" height="15" fill="rgb(248,69,25)" fg:x="421" fg:w="1"/><text x="34.0110%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="33.7610%" y="389" width="0.0802%" height="15" fill="rgb(234,21,32)" fg:x="421" fg:w="1"/><text x="34.0110%" y="399.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="33.7610%" y="373" width="0.0802%" height="15" fill="rgb(252,136,6)" fg:x="421" fg:w="1"/><text x="34.0110%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.7610%" y="357" width="0.0802%" height="15" fill="rgb(245,87,12)" fg:x="421" fg:w="1"/><text x="34.0110%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="33.7610%" y="341" width="0.0802%" height="15" fill="rgb(208,12,15)" fg:x="421" fg:w="1"/><text x="34.0110%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.7610%" y="325" width="0.0802%" height="15" fill="rgb(250,98,2)" fg:x="421" fg:w="1"/><text x="34.0110%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.7610%" y="309" width="0.0802%" height="15" fill="rgb(205,213,15)" fg:x="421" fg:w="1"/><text x="34.0110%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.8412%" y="405" width="0.0802%" height="15" fill="rgb(248,192,44)" fg:x="422" fg:w="1"/><text x="34.0912%" y="415.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (13 samples, 1.04%)</title><rect x="32.9591%" y="517" width="1.0425%" height="15" fill="rgb(221,89,17)" fg:x="411" fg:w="13"/><text x="33.2091%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (7 samples, 0.56%)</title><rect x="33.4403%" y="501" width="0.5613%" height="15" fill="rgb(209,55,3)" fg:x="417" fg:w="7"/><text x="33.6903%" y="511.50"></text></g><g><title>kernel::model::scopes::save_props (4 samples, 0.32%)</title><rect x="33.6808%" y="485" width="0.3208%" height="15" fill="rgb(247,23,45)" fg:x="420" fg:w="4"/><text x="33.9308%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (4 samples, 0.32%)</title><rect x="33.6808%" y="469" width="0.3208%" height="15" fill="rgb(235,152,23)" fg:x="420" fg:w="4"/><text x="33.9308%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (2 samples, 0.16%)</title><rect x="33.8412%" y="453" width="0.1604%" height="15" fill="rgb(244,63,13)" fg:x="422" fg:w="2"/><text x="34.0912%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="33.8412%" y="437" width="0.1604%" height="15" fill="rgb(227,30,37)" fg:x="422" fg:w="2"/><text x="34.0912%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="33.8412%" y="421" width="0.1604%" height="15" fill="rgb(224,49,42)" fg:x="422" fg:w="2"/><text x="34.0912%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.9214%" y="405" width="0.0802%" height="15" fill="rgb(218,129,5)" fg:x="423" fg:w="1"/><text x="34.1714%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.9214%" y="389" width="0.0802%" height="15" fill="rgb(240,199,54)" fg:x="423" fg:w="1"/><text x="34.1714%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.9214%" y="373" width="0.0802%" height="15" fill="rgb(234,31,13)" fg:x="423" fg:w="1"/><text x="34.1714%" y="383.50"></text></g><g><title>__libc_malloc (15 samples, 1.20%)</title><rect x="34.1620%" y="453" width="1.2029%" height="15" fill="rgb(219,73,54)" fg:x="426" fg:w="15"/><text x="34.4120%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (35 samples, 2.81%)</title><rect x="32.6383%" y="549" width="2.8067%" height="15" fill="rgb(251,162,10)" fg:x="407" fg:w="35"/><text x="32.8883%" y="559.50">&lt;e..</text></g><g><title>engine::internal::Entities::add_entity (31 samples, 2.49%)</title><rect x="32.9591%" y="533" width="2.4860%" height="15" fill="rgb(240,138,47)" fg:x="411" fg:w="31"/><text x="33.2091%" y="543.50">en..</text></g><g><title>engine::internal::EntityMap::add_entity (18 samples, 1.44%)</title><rect x="34.0016%" y="517" width="1.4435%" height="15" fill="rgb(216,138,26)" fg:x="424" fg:w="18"/><text x="34.2516%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (18 samples, 1.44%)</title><rect x="34.0016%" y="501" width="1.4435%" height="15" fill="rgb(243,17,35)" fg:x="424" fg:w="18"/><text x="34.2516%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (18 samples, 1.44%)</title><rect x="34.0016%" y="485" width="1.4435%" height="15" fill="rgb(241,60,18)" fg:x="424" fg:w="18"/><text x="34.2516%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (17 samples, 1.36%)</title><rect x="34.0818%" y="469" width="1.3633%" height="15" fill="rgb(234,2,44)" fg:x="425" fg:w="17"/><text x="34.3318%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.3649%" y="453" width="0.0802%" height="15" fill="rgb(225,225,33)" fg:x="441" fg:w="1"/><text x="35.6149%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.4451%" y="549" width="0.0802%" height="15" fill="rgb(234,50,31)" fg:x="442" fg:w="1"/><text x="35.6951%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="35.5253%" y="533" width="0.0802%" height="15" fill="rgb(249,6,25)" fg:x="443" fg:w="1"/><text x="35.7753%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.6856%" y="517" width="0.0802%" height="15" fill="rgb(241,5,17)" fg:x="445" fg:w="1"/><text x="35.9356%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.7658%" y="485" width="0.0802%" height="15" fill="rgb(207,116,10)" fg:x="446" fg:w="1"/><text x="36.0158%" y="495.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="35.7658%" y="517" width="0.1604%" height="15" fill="rgb(222,128,18)" fg:x="446" fg:w="2"/><text x="36.0158%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="35.7658%" y="501" width="0.1604%" height="15" fill="rgb(229,109,25)" fg:x="446" fg:w="2"/><text x="36.0158%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="35.8460%" y="485" width="0.0802%" height="15" fill="rgb(222,102,25)" fg:x="447" fg:w="1"/><text x="36.0960%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="35.8460%" y="469" width="0.0802%" height="15" fill="rgb(239,211,5)" fg:x="447" fg:w="1"/><text x="36.0960%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.8460%" y="453" width="0.0802%" height="15" fill="rgb(223,136,26)" fg:x="447" fg:w="1"/><text x="36.0960%" y="463.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (6 samples, 0.48%)</title><rect x="35.6055%" y="533" width="0.4812%" height="15" fill="rgb(227,30,15)" fg:x="444" fg:w="6"/><text x="35.8555%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="35.9262%" y="517" width="0.1604%" height="15" fill="rgb(247,76,4)" fg:x="448" fg:w="2"/><text x="36.1762%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="35.9262%" y="501" width="0.1604%" height="15" fill="rgb(245,38,48)" fg:x="448" fg:w="2"/><text x="36.1762%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="35.9262%" y="485" width="0.1604%" height="15" fill="rgb(210,220,14)" fg:x="448" fg:w="2"/><text x="36.1762%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="35.9262%" y="469" width="0.1604%" height="15" fill="rgb(224,60,51)" fg:x="448" fg:w="2"/><text x="36.1762%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.9262%" y="453" width="0.1604%" height="15" fill="rgb(212,133,49)" fg:x="448" fg:w="2"/><text x="36.1762%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.0064%" y="437" width="0.0802%" height="15" fill="rgb(231,39,22)" fg:x="449" fg:w="1"/><text x="36.2564%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="36.0064%" y="421" width="0.0802%" height="15" fill="rgb(236,173,22)" fg:x="449" fg:w="1"/><text x="36.2564%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.0866%" y="437" width="0.0802%" height="15" fill="rgb(210,70,0)" fg:x="450" fg:w="1"/><text x="36.3366%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.0866%" y="421" width="0.0802%" height="15" fill="rgb(215,170,11)" fg:x="450" fg:w="1"/><text x="36.3366%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.0866%" y="405" width="0.0802%" height="15" fill="rgb(220,154,28)" fg:x="450" fg:w="1"/><text x="36.3366%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.0866%" y="389" width="0.0802%" height="15" fill="rgb(240,160,41)" fg:x="450" fg:w="1"/><text x="36.3366%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.0866%" y="373" width="0.0802%" height="15" fill="rgb(243,215,41)" fg:x="450" fg:w="1"/><text x="36.3366%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.0866%" y="357" width="0.0802%" height="15" fill="rgb(214,208,31)" fg:x="450" fg:w="1"/><text x="36.3366%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.0866%" y="341" width="0.0802%" height="15" fill="rgb(247,57,22)" fg:x="450" fg:w="1"/><text x="36.3366%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.0866%" y="325" width="0.0802%" height="15" fill="rgb(228,73,52)" fg:x="450" fg:w="1"/><text x="36.3366%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.0866%" y="309" width="0.0802%" height="15" fill="rgb(252,60,9)" fg:x="450" fg:w="1"/><text x="36.3366%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.0866%" y="293" width="0.0802%" height="15" fill="rgb(233,9,51)" fg:x="450" fg:w="1"/><text x="36.3366%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.0866%" y="277" width="0.0802%" height="15" fill="rgb(223,67,14)" fg:x="450" fg:w="1"/><text x="36.3366%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.0866%" y="261" width="0.0802%" height="15" fill="rgb(222,86,2)" fg:x="450" fg:w="1"/><text x="36.3366%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.0866%" y="245" width="0.0802%" height="15" fill="rgb(243,58,54)" fg:x="450" fg:w="1"/><text x="36.3366%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.0866%" y="229" width="0.0802%" height="15" fill="rgb(210,200,39)" fg:x="450" fg:w="1"/><text x="36.3366%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.0866%" y="213" width="0.0802%" height="15" fill="rgb(238,135,9)" fg:x="450" fg:w="1"/><text x="36.3366%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.0866%" y="197" width="0.0802%" height="15" fill="rgb(232,179,7)" fg:x="450" fg:w="1"/><text x="36.3366%" y="207.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="36.0866%" y="453" width="0.2406%" height="15" fill="rgb(245,65,41)" fg:x="450" fg:w="3"/><text x="36.3366%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="36.1668%" y="437" width="0.1604%" height="15" fill="rgb(227,43,8)" fg:x="451" fg:w="2"/><text x="36.4168%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.1668%" y="421" width="0.1604%" height="15" fill="rgb(235,91,14)" fg:x="451" fg:w="2"/><text x="36.4168%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.2470%" y="405" width="0.0802%" height="15" fill="rgb(235,219,31)" fg:x="452" fg:w="1"/><text x="36.4970%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.2470%" y="389" width="0.0802%" height="15" fill="rgb(227,121,25)" fg:x="452" fg:w="1"/><text x="36.4970%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.2470%" y="373" width="0.0802%" height="15" fill="rgb(254,129,24)" fg:x="452" fg:w="1"/><text x="36.4970%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.2470%" y="357" width="0.0802%" height="15" fill="rgb(226,144,49)" fg:x="452" fg:w="1"/><text x="36.4970%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.2470%" y="341" width="0.0802%" height="15" fill="rgb(214,187,32)" fg:x="452" fg:w="1"/><text x="36.4970%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.2470%" y="325" width="0.0802%" height="15" fill="rgb(243,129,46)" fg:x="452" fg:w="1"/><text x="36.4970%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.2470%" y="309" width="0.0802%" height="15" fill="rgb(221,185,35)" fg:x="452" fg:w="1"/><text x="36.4970%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.2470%" y="293" width="0.0802%" height="15" fill="rgb(205,0,32)" fg:x="452" fg:w="1"/><text x="36.4970%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.2470%" y="277" width="0.0802%" height="15" fill="rgb(229,179,12)" fg:x="452" fg:w="1"/><text x="36.4970%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.2470%" y="261" width="0.0802%" height="15" fill="rgb(252,107,19)" fg:x="452" fg:w="1"/><text x="36.4970%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.2470%" y="245" width="0.0802%" height="15" fill="rgb(220,95,27)" fg:x="452" fg:w="1"/><text x="36.4970%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.2470%" y="229" width="0.0802%" height="15" fill="rgb(240,113,40)" fg:x="452" fg:w="1"/><text x="36.4970%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.2470%" y="213" width="0.0802%" height="15" fill="rgb(208,4,43)" fg:x="452" fg:w="1"/><text x="36.4970%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.2470%" y="197" width="0.0802%" height="15" fill="rgb(247,189,30)" fg:x="452" fg:w="1"/><text x="36.4970%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.2470%" y="181" width="0.0802%" height="15" fill="rgb(231,157,17)" fg:x="452" fg:w="1"/><text x="36.4970%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.2470%" y="165" width="0.0802%" height="15" fill="rgb(224,139,6)" fg:x="452" fg:w="1"/><text x="36.4970%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="36.0866%" y="501" width="0.3208%" height="15" fill="rgb(223,83,16)" fg:x="450" fg:w="4"/><text x="36.3366%" y="511.50"></text></g><g><title>kernel::model::scopes::load_props (4 samples, 0.32%)</title><rect x="36.0866%" y="485" width="0.3208%" height="15" fill="rgb(232,211,20)" fg:x="450" fg:w="4"/><text x="36.3366%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (4 samples, 0.32%)</title><rect x="36.0866%" y="469" width="0.3208%" height="15" fill="rgb(225,203,35)" fg:x="450" fg:w="4"/><text x="36.3366%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="36.3272%" y="453" width="0.0802%" height="15" fill="rgb(215,211,44)" fg:x="453" fg:w="1"/><text x="36.5772%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.3272%" y="437" width="0.0802%" height="15" fill="rgb(248,213,26)" fg:x="453" fg:w="1"/><text x="36.5772%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="36.3272%" y="421" width="0.0802%" height="15" fill="rgb(214,23,52)" fg:x="453" fg:w="1"/><text x="36.5772%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.3272%" y="405" width="0.0802%" height="15" fill="rgb(225,173,50)" fg:x="453" fg:w="1"/><text x="36.5772%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="36.3272%" y="389" width="0.0802%" height="15" fill="rgb(206,150,22)" fg:x="453" fg:w="1"/><text x="36.5772%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.3272%" y="373" width="0.0802%" height="15" fill="rgb(239,64,23)" fg:x="453" fg:w="1"/><text x="36.5772%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="36.3272%" y="357" width="0.0802%" height="15" fill="rgb(242,50,38)" fg:x="453" fg:w="1"/><text x="36.5772%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.3272%" y="341" width="0.0802%" height="15" fill="rgb(217,91,15)" fg:x="453" fg:w="1"/><text x="36.5772%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.4074%" y="485" width="0.0802%" height="15" fill="rgb(230,172,6)" fg:x="454" fg:w="1"/><text x="36.6574%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.4876%" y="405" width="0.0802%" height="15" fill="rgb(221,98,26)" fg:x="455" fg:w="1"/><text x="36.7376%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.4876%" y="437" width="0.1604%" height="15" fill="rgb(227,210,45)" fg:x="455" fg:w="2"/><text x="36.7376%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.4876%" y="421" width="0.1604%" height="15" fill="rgb(206,8,30)" fg:x="455" fg:w="2"/><text x="36.7376%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.5678%" y="405" width="0.0802%" height="15" fill="rgb(241,219,17)" fg:x="456" fg:w="1"/><text x="36.8178%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.6480%" y="389" width="0.0802%" height="15" fill="rgb(247,121,29)" fg:x="457" fg:w="1"/><text x="36.8980%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.6480%" y="373" width="0.0802%" height="15" fill="rgb(219,169,49)" fg:x="457" fg:w="1"/><text x="36.8980%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.6480%" y="357" width="0.0802%" height="15" fill="rgb(253,49,49)" fg:x="457" fg:w="1"/><text x="36.8980%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.6480%" y="341" width="0.0802%" height="15" fill="rgb(217,178,3)" fg:x="457" fg:w="1"/><text x="36.8980%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="36.4876%" y="453" width="0.3208%" height="15" fill="rgb(234,73,37)" fg:x="455" fg:w="4"/><text x="36.7376%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="36.6480%" y="437" width="0.1604%" height="15" fill="rgb(250,98,22)" fg:x="457" fg:w="2"/><text x="36.8980%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.6480%" y="421" width="0.1604%" height="15" fill="rgb(220,108,37)" fg:x="457" fg:w="2"/><text x="36.8980%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.6480%" y="405" width="0.1604%" height="15" fill="rgb(225,168,10)" fg:x="457" fg:w="2"/><text x="36.8980%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.7281%" y="389" width="0.0802%" height="15" fill="rgb(247,215,21)" fg:x="458" fg:w="1"/><text x="36.9781%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.8083%" y="357" width="0.0802%" height="15" fill="rgb(253,189,31)" fg:x="459" fg:w="1"/><text x="37.0583%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.8083%" y="341" width="0.0802%" height="15" fill="rgb(241,54,22)" fg:x="459" fg:w="1"/><text x="37.0583%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (2 samples, 0.16%)</title><rect x="36.8083%" y="453" width="0.1604%" height="15" fill="rgb(211,87,4)" fg:x="459" fg:w="2"/><text x="37.0583%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="36.8083%" y="437" width="0.1604%" height="15" fill="rgb(245,112,24)" fg:x="459" fg:w="2"/><text x="37.0583%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="36.8083%" y="421" width="0.1604%" height="15" fill="rgb(235,190,41)" fg:x="459" fg:w="2"/><text x="37.0583%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="36.8083%" y="405" width="0.1604%" height="15" fill="rgb(214,89,8)" fg:x="459" fg:w="2"/><text x="37.0583%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="36.8083%" y="389" width="0.1604%" height="15" fill="rgb(249,155,35)" fg:x="459" fg:w="2"/><text x="37.0583%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="36.8083%" y="373" width="0.1604%" height="15" fill="rgb(249,88,26)" fg:x="459" fg:w="2"/><text x="37.0583%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.8885%" y="357" width="0.0802%" height="15" fill="rgb(232,56,8)" fg:x="460" fg:w="1"/><text x="37.1385%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.8885%" y="341" width="0.0802%" height="15" fill="rgb(240,95,3)" fg:x="460" fg:w="1"/><text x="37.1385%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.8885%" y="325" width="0.0802%" height="15" fill="rgb(222,44,28)" fg:x="460" fg:w="1"/><text x="37.1385%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.0489%" y="357" width="0.0802%" height="15" fill="rgb(234,16,30)" fg:x="462" fg:w="1"/><text x="37.2989%" y="367.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (15 samples, 1.20%)</title><rect x="36.0866%" y="533" width="1.2029%" height="15" fill="rgb(223,26,17)" fg:x="450" fg:w="15"/><text x="36.3366%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (15 samples, 1.20%)</title><rect x="36.0866%" y="517" width="1.2029%" height="15" fill="rgb(239,187,47)" fg:x="450" fg:w="15"/><text x="36.3366%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (11 samples, 0.88%)</title><rect x="36.4074%" y="501" width="0.8821%" height="15" fill="rgb(247,102,50)" fg:x="454" fg:w="11"/><text x="36.6574%" y="511.50"></text></g><g><title>kernel::model::scopes::load_props (10 samples, 0.80%)</title><rect x="36.4876%" y="485" width="0.8019%" height="15" fill="rgb(231,216,22)" fg:x="455" fg:w="10"/><text x="36.7376%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (10 samples, 0.80%)</title><rect x="36.4876%" y="469" width="0.8019%" height="15" fill="rgb(216,201,26)" fg:x="455" fg:w="10"/><text x="36.7376%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (4 samples, 0.32%)</title><rect x="36.9687%" y="453" width="0.3208%" height="15" fill="rgb(214,186,23)" fg:x="461" fg:w="4"/><text x="37.2187%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="36.9687%" y="437" width="0.3208%" height="15" fill="rgb(235,184,4)" fg:x="461" fg:w="4"/><text x="37.2187%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (4 samples, 0.32%)</title><rect x="36.9687%" y="421" width="0.3208%" height="15" fill="rgb(244,46,17)" fg:x="461" fg:w="4"/><text x="37.2187%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="36.9687%" y="405" width="0.3208%" height="15" fill="rgb(248,74,46)" fg:x="461" fg:w="4"/><text x="37.2187%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="37.0489%" y="389" width="0.2406%" height="15" fill="rgb(243,79,5)" fg:x="462" fg:w="3"/><text x="37.2989%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="37.0489%" y="373" width="0.2406%" height="15" fill="rgb(213,148,1)" fg:x="462" fg:w="3"/><text x="37.2989%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="37.1291%" y="357" width="0.1604%" height="15" fill="rgb(221,30,0)" fg:x="463" fg:w="2"/><text x="37.3791%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.1291%" y="341" width="0.1604%" height="15" fill="rgb(207,85,29)" fg:x="463" fg:w="2"/><text x="37.3791%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="37.1291%" y="325" width="0.1604%" height="15" fill="rgb(239,31,46)" fg:x="463" fg:w="2"/><text x="37.3791%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.1291%" y="309" width="0.1604%" height="15" fill="rgb(219,6,1)" fg:x="463" fg:w="2"/><text x="37.3791%" y="319.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.2895%" y="517" width="0.1604%" height="15" fill="rgb(229,90,29)" fg:x="465" fg:w="2"/><text x="37.5395%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.2895%" y="501" width="0.1604%" height="15" fill="rgb(242,201,42)" fg:x="465" fg:w="2"/><text x="37.5395%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.2895%" y="485" width="0.1604%" height="15" fill="rgb(243,80,54)" fg:x="465" fg:w="2"/><text x="37.5395%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="37.2895%" y="469" width="0.1604%" height="15" fill="rgb(223,166,15)" fg:x="465" fg:w="2"/><text x="37.5395%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="37.2895%" y="453" width="0.1604%" height="15" fill="rgb(238,78,27)" fg:x="465" fg:w="2"/><text x="37.5395%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="37.2895%" y="437" width="0.1604%" height="15" fill="rgb(235,28,43)" fg:x="465" fg:w="2"/><text x="37.5395%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="37.2895%" y="421" width="0.1604%" height="15" fill="rgb(240,210,28)" fg:x="465" fg:w="2"/><text x="37.5395%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="37.2895%" y="405" width="0.1604%" height="15" fill="rgb(253,6,46)" fg:x="465" fg:w="2"/><text x="37.5395%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="37.2895%" y="389" width="0.1604%" height="15" fill="rgb(250,159,47)" fg:x="465" fg:w="2"/><text x="37.5395%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="37.2895%" y="373" width="0.1604%" height="15" fill="rgb(216,139,2)" fg:x="465" fg:w="2"/><text x="37.5395%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="37.2895%" y="357" width="0.1604%" height="15" fill="rgb(221,124,44)" fg:x="465" fg:w="2"/><text x="37.5395%" y="367.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="37.2895%" y="341" width="0.1604%" height="15" fill="rgb(205,37,22)" fg:x="465" fg:w="2"/><text x="37.5395%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="37.2895%" y="325" width="0.1604%" height="15" fill="rgb(250,55,8)" fg:x="465" fg:w="2"/><text x="37.5395%" y="335.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="37.2895%" y="533" width="0.3208%" height="15" fill="rgb(215,83,48)" fg:x="465" fg:w="4"/><text x="37.5395%" y="543.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="37.4499%" y="517" width="0.1604%" height="15" fill="rgb(253,2,32)" fg:x="467" fg:w="2"/><text x="37.6999%" y="527.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="37.5301%" y="501" width="0.0802%" height="15" fill="rgb(236,67,28)" fg:x="468" fg:w="1"/><text x="37.7801%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.6103%" y="421" width="0.0802%" height="15" fill="rgb(252,55,15)" fg:x="469" fg:w="1"/><text x="37.8603%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.6103%" y="405" width="0.0802%" height="15" fill="rgb(243,173,17)" fg:x="469" fg:w="1"/><text x="37.8603%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.6103%" y="389" width="0.0802%" height="15" fill="rgb(215,212,13)" fg:x="469" fg:w="1"/><text x="37.8603%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.6103%" y="373" width="0.0802%" height="15" fill="rgb(253,176,6)" fg:x="469" fg:w="1"/><text x="37.8603%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="37.6103%" y="437" width="0.2406%" height="15" fill="rgb(236,105,26)" fg:x="469" fg:w="3"/><text x="37.8603%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.6905%" y="421" width="0.1604%" height="15" fill="rgb(239,226,32)" fg:x="470" fg:w="2"/><text x="37.9405%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="37.6905%" y="405" width="0.1604%" height="15" fill="rgb(236,104,51)" fg:x="470" fg:w="2"/><text x="37.9405%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="37.6905%" y="389" width="0.1604%" height="15" fill="rgb(220,172,33)" fg:x="470" fg:w="2"/><text x="37.9405%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="37.6905%" y="373" width="0.1604%" height="15" fill="rgb(224,182,25)" fg:x="470" fg:w="2"/><text x="37.9405%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="37.6905%" y="357" width="0.1604%" height="15" fill="rgb(236,184,24)" fg:x="470" fg:w="2"/><text x="37.9405%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.6905%" y="341" width="0.1604%" height="15" fill="rgb(241,221,14)" fg:x="470" fg:w="2"/><text x="37.9405%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.7706%" y="325" width="0.0802%" height="15" fill="rgb(227,146,5)" fg:x="471" fg:w="1"/><text x="38.0206%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.7706%" y="309" width="0.0802%" height="15" fill="rgb(214,15,23)" fg:x="471" fg:w="1"/><text x="38.0206%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.7706%" y="293" width="0.0802%" height="15" fill="rgb(233,157,31)" fg:x="471" fg:w="1"/><text x="38.0206%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.7706%" y="277" width="0.0802%" height="15" fill="rgb(211,27,52)" fg:x="471" fg:w="1"/><text x="38.0206%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.7706%" y="261" width="0.0802%" height="15" fill="rgb(212,223,15)" fg:x="471" fg:w="1"/><text x="38.0206%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.7706%" y="245" width="0.0802%" height="15" fill="rgb(254,211,0)" fg:x="471" fg:w="1"/><text x="38.0206%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.7706%" y="229" width="0.0802%" height="15" fill="rgb(205,43,38)" fg:x="471" fg:w="1"/><text x="38.0206%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.7706%" y="213" width="0.0802%" height="15" fill="rgb(242,206,46)" fg:x="471" fg:w="1"/><text x="38.0206%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.7706%" y="197" width="0.0802%" height="15" fill="rgb(220,221,12)" fg:x="471" fg:w="1"/><text x="38.0206%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.7706%" y="181" width="0.0802%" height="15" fill="rgb(217,156,35)" fg:x="471" fg:w="1"/><text x="38.0206%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.7706%" y="165" width="0.0802%" height="15" fill="rgb(207,181,49)" fg:x="471" fg:w="1"/><text x="38.0206%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="37.6103%" y="485" width="0.3208%" height="15" fill="rgb(235,103,47)" fg:x="469" fg:w="4"/><text x="37.8603%" y="495.50"></text></g><g><title>kernel::model::scopes::load_props (4 samples, 0.32%)</title><rect x="37.6103%" y="469" width="0.3208%" height="15" fill="rgb(222,63,28)" fg:x="469" fg:w="4"/><text x="37.8603%" y="479.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (4 samples, 0.32%)</title><rect x="37.6103%" y="453" width="0.3208%" height="15" fill="rgb(244,137,21)" fg:x="469" fg:w="4"/><text x="37.8603%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="37.8508%" y="437" width="0.0802%" height="15" fill="rgb(228,35,27)" fg:x="472" fg:w="1"/><text x="38.1008%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.8508%" y="421" width="0.0802%" height="15" fill="rgb(226,191,41)" fg:x="472" fg:w="1"/><text x="38.1008%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="37.8508%" y="405" width="0.0802%" height="15" fill="rgb(210,154,3)" fg:x="472" fg:w="1"/><text x="38.1008%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.8508%" y="389" width="0.0802%" height="15" fill="rgb(216,60,49)" fg:x="472" fg:w="1"/><text x="38.1008%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.8508%" y="373" width="0.0802%" height="15" fill="rgb(226,17,20)" fg:x="472" fg:w="1"/><text x="38.1008%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="37.9310%" y="357" width="0.1604%" height="15" fill="rgb(206,115,35)" fg:x="473" fg:w="2"/><text x="38.1810%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.0112%" y="341" width="0.0802%" height="15" fill="rgb(227,88,1)" fg:x="474" fg:w="1"/><text x="38.2612%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.0914%" y="277" width="0.0802%" height="15" fill="rgb(230,222,24)" fg:x="475" fg:w="1"/><text x="38.3414%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.0914%" y="261" width="0.0802%" height="15" fill="rgb(214,124,32)" fg:x="475" fg:w="1"/><text x="38.3414%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.0914%" y="245" width="0.0802%" height="15" fill="rgb(240,41,36)" fg:x="475" fg:w="1"/><text x="38.3414%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.0914%" y="229" width="0.0802%" height="15" fill="rgb(221,17,52)" fg:x="475" fg:w="1"/><text x="38.3414%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.0914%" y="213" width="0.0802%" height="15" fill="rgb(252,70,16)" fg:x="475" fg:w="1"/><text x="38.3414%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.0914%" y="197" width="0.0802%" height="15" fill="rgb(250,177,4)" fg:x="475" fg:w="1"/><text x="38.3414%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.0914%" y="181" width="0.0802%" height="15" fill="rgb(240,188,47)" fg:x="475" fg:w="1"/><text x="38.3414%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="37.9310%" y="421" width="0.3208%" height="15" fill="rgb(215,92,12)" fg:x="473" fg:w="4"/><text x="38.1810%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="37.9310%" y="405" width="0.3208%" height="15" fill="rgb(242,110,29)" fg:x="473" fg:w="4"/><text x="38.1810%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="37.9310%" y="389" width="0.3208%" height="15" fill="rgb(208,211,26)" fg:x="473" fg:w="4"/><text x="38.1810%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="37.9310%" y="373" width="0.3208%" height="15" fill="rgb(244,147,6)" fg:x="473" fg:w="4"/><text x="38.1810%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="38.0914%" y="357" width="0.1604%" height="15" fill="rgb(211,130,42)" fg:x="475" fg:w="2"/><text x="38.3414%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="38.0914%" y="341" width="0.1604%" height="15" fill="rgb(220,63,1)" fg:x="475" fg:w="2"/><text x="38.3414%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="38.0914%" y="325" width="0.1604%" height="15" fill="rgb(241,212,30)" fg:x="475" fg:w="2"/><text x="38.3414%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="38.0914%" y="309" width="0.1604%" height="15" fill="rgb(233,153,17)" fg:x="475" fg:w="2"/><text x="38.3414%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="38.0914%" y="293" width="0.1604%" height="15" fill="rgb(236,3,10)" fg:x="475" fg:w="2"/><text x="38.3414%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="38.1716%" y="277" width="0.0802%" height="15" fill="rgb(232,41,21)" fg:x="476" fg:w="1"/><text x="38.4216%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="38.1716%" y="261" width="0.0802%" height="15" fill="rgb(206,63,51)" fg:x="476" fg:w="1"/><text x="38.4216%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="37.9310%" y="437" width="0.4010%" height="15" fill="rgb(250,214,3)" fg:x="473" fg:w="5"/><text x="38.1810%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.2518%" y="421" width="0.0802%" height="15" fill="rgb(254,89,27)" fg:x="477" fg:w="1"/><text x="38.5018%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.2518%" y="405" width="0.0802%" height="15" fill="rgb(249,41,14)" fg:x="477" fg:w="1"/><text x="38.5018%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.2518%" y="389" width="0.0802%" height="15" fill="rgb(221,196,51)" fg:x="477" fg:w="1"/><text x="38.5018%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.3320%" y="437" width="0.0802%" height="15" fill="rgb(214,116,26)" fg:x="478" fg:w="1"/><text x="38.5820%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.4924%" y="341" width="0.0802%" height="15" fill="rgb(236,67,7)" fg:x="480" fg:w="1"/><text x="38.7424%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (3 samples, 0.24%)</title><rect x="38.4122%" y="437" width="0.2406%" height="15" fill="rgb(253,179,32)" fg:x="479" fg:w="3"/><text x="38.6622%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="38.4122%" y="421" width="0.2406%" height="15" fill="rgb(218,33,15)" fg:x="479" fg:w="3"/><text x="38.6622%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="38.4122%" y="405" width="0.2406%" height="15" fill="rgb(217,202,41)" fg:x="479" fg:w="3"/><text x="38.6622%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="38.4122%" y="389" width="0.2406%" height="15" fill="rgb(234,133,5)" fg:x="479" fg:w="3"/><text x="38.6622%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="38.4122%" y="373" width="0.2406%" height="15" fill="rgb(240,47,40)" fg:x="479" fg:w="3"/><text x="38.6622%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="38.4122%" y="357" width="0.2406%" height="15" fill="rgb(234,166,26)" fg:x="479" fg:w="3"/><text x="38.6622%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.5726%" y="341" width="0.0802%" height="15" fill="rgb(244,125,51)" fg:x="481" fg:w="1"/><text x="38.8226%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.5726%" y="325" width="0.0802%" height="15" fill="rgb(229,171,11)" fg:x="481" fg:w="1"/><text x="38.8226%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.5726%" y="309" width="0.0802%" height="15" fill="rgb(224,38,45)" fg:x="481" fg:w="1"/><text x="38.8226%" y="319.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (14 samples, 1.12%)</title><rect x="37.6103%" y="517" width="1.1227%" height="15" fill="rgb(237,27,7)" fg:x="469" fg:w="14"/><text x="37.8603%" y="527.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (14 samples, 1.12%)</title><rect x="37.6103%" y="501" width="1.1227%" height="15" fill="rgb(216,52,7)" fg:x="469" fg:w="14"/><text x="37.8603%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (10 samples, 0.80%)</title><rect x="37.9310%" y="485" width="0.8019%" height="15" fill="rgb(243,11,11)" fg:x="473" fg:w="10"/><text x="38.1810%" y="495.50"></text></g><g><title>kernel::model::scopes::load_props (10 samples, 0.80%)</title><rect x="37.9310%" y="469" width="0.8019%" height="15" fill="rgb(253,167,20)" fg:x="473" fg:w="10"/><text x="38.1810%" y="479.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (10 samples, 0.80%)</title><rect x="37.9310%" y="453" width="0.8019%" height="15" fill="rgb(215,207,5)" fg:x="473" fg:w="10"/><text x="38.1810%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="38.6528%" y="437" width="0.0802%" height="15" fill="rgb(252,127,31)" fg:x="482" fg:w="1"/><text x="38.9028%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.6528%" y="421" width="0.0802%" height="15" fill="rgb(209,106,27)" fg:x="482" fg:w="1"/><text x="38.9028%" y="431.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="38.6528%" y="405" width="0.0802%" height="15" fill="rgb(214,220,18)" fg:x="482" fg:w="1"/><text x="38.9028%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.6528%" y="389" width="0.0802%" height="15" fill="rgb(237,89,12)" fg:x="482" fg:w="1"/><text x="38.9028%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.6528%" y="373" width="0.0802%" height="15" fill="rgb(209,167,36)" fg:x="482" fg:w="1"/><text x="38.9028%" y="383.50"></text></g><g><title>plugins_core::build::Build::holding (78 samples, 6.26%)</title><rect x="32.6383%" y="565" width="6.2550%" height="15" fill="rgb(243,45,22)" fg:x="407" fg:w="78"/><text x="32.8883%" y="575.50">plugins_..</text></g><g><title>plugins_core::tools::set_container (42 samples, 3.37%)</title><rect x="35.5253%" y="549" width="3.3681%" height="15" fill="rgb(239,2,46)" fg:x="443" fg:w="42"/><text x="35.7753%" y="559.50">plu..</text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (16 samples, 1.28%)</title><rect x="37.6103%" y="533" width="1.2831%" height="15" fill="rgb(241,101,0)" fg:x="469" fg:w="16"/><text x="37.8603%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="38.7330%" y="517" width="0.1604%" height="15" fill="rgb(244,34,31)" fg:x="483" fg:w="2"/><text x="38.9830%" y="527.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="38.7330%" y="501" width="0.1604%" height="15" fill="rgb(248,23,22)" fg:x="483" fg:w="2"/><text x="38.9830%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (2 samples, 0.16%)</title><rect x="38.7330%" y="485" width="0.1604%" height="15" fill="rgb(218,27,48)" fg:x="483" fg:w="2"/><text x="38.9830%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="38.8132%" y="469" width="0.0802%" height="15" fill="rgb(232,78,1)" fg:x="484" fg:w="1"/><text x="39.0632%" y="479.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="38.8132%" y="453" width="0.0802%" height="15" fill="rgb(233,169,12)" fg:x="484" fg:w="1"/><text x="39.0632%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="38.8132%" y="437" width="0.0802%" height="15" fill="rgb(225,222,54)" fg:x="484" fg:w="1"/><text x="39.0632%" y="447.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="38.8132%" y="421" width="0.0802%" height="15" fill="rgb(245,126,29)" fg:x="484" fg:w="1"/><text x="39.0632%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="38.8132%" y="405" width="0.0802%" height="15" fill="rgb(241,63,48)" fg:x="484" fg:w="1"/><text x="39.0632%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.8132%" y="389" width="0.0802%" height="15" fill="rgb(235,126,38)" fg:x="484" fg:w="1"/><text x="39.0632%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.8132%" y="373" width="0.0802%" height="15" fill="rgb(232,96,49)" fg:x="484" fg:w="1"/><text x="39.0632%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.8132%" y="357" width="0.0802%" height="15" fill="rgb(211,146,40)" fg:x="484" fg:w="1"/><text x="39.0632%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.8132%" y="341" width="0.0802%" height="15" fill="rgb(247,93,44)" fg:x="484" fg:w="1"/><text x="39.0632%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.8132%" y="325" width="0.0802%" height="15" fill="rgb(251,41,49)" fg:x="484" fg:w="1"/><text x="39.0632%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.8132%" y="309" width="0.0802%" height="15" fill="rgb(218,155,12)" fg:x="484" fg:w="1"/><text x="39.0632%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.8132%" y="293" width="0.0802%" height="15" fill="rgb(221,161,30)" fg:x="484" fg:w="1"/><text x="39.0632%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="38.9735%" y="533" width="0.1604%" height="15" fill="rgb(221,179,11)" fg:x="486" fg:w="2"/><text x="39.2235%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="39.0537%" y="517" width="0.0802%" height="15" fill="rgb(224,170,48)" fg:x="487" fg:w="1"/><text x="39.3037%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="39.0537%" y="501" width="0.0802%" height="15" fill="rgb(223,117,5)" fg:x="487" fg:w="1"/><text x="39.3037%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="39.0537%" y="485" width="0.0802%" height="15" fill="rgb(209,52,20)" fg:x="487" fg:w="1"/><text x="39.3037%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.0537%" y="469" width="0.0802%" height="15" fill="rgb(209,19,41)" fg:x="487" fg:w="1"/><text x="39.3037%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="39.0537%" y="453" width="0.0802%" height="15" fill="rgb(210,177,12)" fg:x="487" fg:w="1"/><text x="39.3037%" y="463.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="39.1339%" y="517" width="0.0802%" height="15" fill="rgb(211,159,37)" fg:x="488" fg:w="1"/><text x="39.3839%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="39.1339%" y="501" width="0.0802%" height="15" fill="rgb(209,20,2)" fg:x="488" fg:w="1"/><text x="39.3839%" y="511.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="39.1339%" y="485" width="0.0802%" height="15" fill="rgb(244,3,46)" fg:x="488" fg:w="1"/><text x="39.3839%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="39.1339%" y="469" width="0.0802%" height="15" fill="rgb(220,94,38)" fg:x="488" fg:w="1"/><text x="39.3839%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="39.1339%" y="453" width="0.0802%" height="15" fill="rgb(253,14,31)" fg:x="488" fg:w="1"/><text x="39.3839%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.1339%" y="437" width="0.0802%" height="15" fill="rgb(234,176,13)" fg:x="488" fg:w="1"/><text x="39.3839%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="39.1339%" y="421" width="0.0802%" height="15" fill="rgb(218,62,25)" fg:x="488" fg:w="1"/><text x="39.3839%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.1339%" y="405" width="0.0802%" height="15" fill="rgb(216,124,40)" fg:x="488" fg:w="1"/><text x="39.3839%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="39.1339%" y="389" width="0.0802%" height="15" fill="rgb(228,170,12)" fg:x="488" fg:w="1"/><text x="39.3839%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.1339%" y="373" width="0.0802%" height="15" fill="rgb(231,226,5)" fg:x="488" fg:w="1"/><text x="39.3839%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="39.1339%" y="357" width="0.0802%" height="15" fill="rgb(237,122,22)" fg:x="488" fg:w="1"/><text x="39.3839%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.1339%" y="341" width="0.0802%" height="15" fill="rgb(209,185,25)" fg:x="488" fg:w="1"/><text x="39.3839%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.2141%" y="501" width="0.0802%" height="15" fill="rgb(228,200,32)" fg:x="489" fg:w="1"/><text x="39.4641%" y="511.50"></text></g><g><title>plugins_core::build::Build::into_entry (7 samples, 0.56%)</title><rect x="38.8933%" y="565" width="0.5613%" height="15" fill="rgb(217,140,10)" fg:x="485" fg:w="7"/><text x="39.1433%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="38.9735%" y="549" width="0.4812%" height="15" fill="rgb(253,17,24)" fg:x="486" fg:w="6"/><text x="39.2235%" y="559.50"></text></g><g><title>engine::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="39.1339%" y="533" width="0.3208%" height="15" fill="rgb(212,61,6)" fg:x="488" fg:w="4"/><text x="39.3839%" y="543.50"></text></g><g><title>engine::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="39.2141%" y="517" width="0.2406%" height="15" fill="rgb(205,14,25)" fg:x="489" fg:w="3"/><text x="39.4641%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="39.2943%" y="501" width="0.1604%" height="15" fill="rgb(232,69,41)" fg:x="490" fg:w="2"/><text x="39.5443%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="39.3745%" y="485" width="0.0802%" height="15" fill="rgb(241,106,47)" fg:x="491" fg:w="1"/><text x="39.6245%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.4547%" y="517" width="0.0802%" height="15" fill="rgb(210,213,53)" fg:x="492" fg:w="1"/><text x="39.7047%" y="527.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="39.4547%" y="565" width="0.2406%" height="15" fill="rgb(253,175,27)" fg:x="492" fg:w="3"/><text x="39.7047%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="39.4547%" y="549" width="0.2406%" height="15" fill="rgb(211,171,24)" fg:x="492" fg:w="3"/><text x="39.7047%" y="559.50"></text></g><g><title>kernel::model::scopes::save_props (3 samples, 0.24%)</title><rect x="39.4547%" y="533" width="0.2406%" height="15" fill="rgb(229,80,7)" fg:x="492" fg:w="3"/><text x="39.7047%" y="543.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (2 samples, 0.16%)</title><rect x="39.5349%" y="517" width="0.1604%" height="15" fill="rgb(212,46,39)" fg:x="493" fg:w="2"/><text x="39.7849%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::Properties as kernel::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="39.5349%" y="501" width="0.1604%" height="15" fill="rgb(240,80,45)" fg:x="493" fg:w="2"/><text x="39.7849%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="39.5349%" y="485" width="0.1604%" height="15" fill="rgb(253,177,40)" fg:x="493" fg:w="2"/><text x="39.7849%" y="495.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="39.5349%" y="469" width="0.1604%" height="15" fill="rgb(249,200,15)" fg:x="493" fg:w="2"/><text x="39.7849%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="39.5349%" y="453" width="0.1604%" height="15" fill="rgb(217,78,26)" fg:x="493" fg:w="2"/><text x="39.7849%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="39.5349%" y="437" width="0.1604%" height="15" fill="rgb(254,151,32)" fg:x="493" fg:w="2"/><text x="39.7849%" y="447.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="39.5349%" y="421" width="0.1604%" height="15" fill="rgb(226,165,27)" fg:x="493" fg:w="2"/><text x="39.7849%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.6151%" y="405" width="0.0802%" height="15" fill="rgb(250,206,4)" fg:x="494" fg:w="1"/><text x="39.8651%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="39.6151%" y="389" width="0.0802%" height="15" fill="rgb(231,229,27)" fg:x="494" fg:w="1"/><text x="39.8651%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.6151%" y="373" width="0.0802%" height="15" fill="rgb(239,217,8)" fg:x="494" fg:w="1"/><text x="39.8651%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.6151%" y="357" width="0.0802%" height="15" fill="rgb(225,204,27)" fg:x="494" fg:w="1"/><text x="39.8651%" y="367.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="39.6953%" y="565" width="0.0802%" height="15" fill="rgb(230,56,32)" fg:x="495" fg:w="1"/><text x="39.9453%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="39.6953%" y="549" width="0.0802%" height="15" fill="rgb(222,56,27)" fg:x="495" fg:w="1"/><text x="39.9453%" y="559.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="39.6953%" y="533" width="0.0802%" height="15" fill="rgb(253,108,27)" fg:x="495" fg:w="1"/><text x="39.9453%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="39.6953%" y="517" width="0.0802%" height="15" fill="rgb(212,87,36)" fg:x="495" fg:w="1"/><text x="39.9453%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="39.6953%" y="501" width="0.0802%" height="15" fill="rgb(247,82,36)" fg:x="495" fg:w="1"/><text x="39.9453%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="39.6953%" y="485" width="0.0802%" height="15" fill="rgb(222,143,9)" fg:x="495" fg:w="1"/><text x="39.9453%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="39.6953%" y="469" width="0.0802%" height="15" fill="rgb(238,162,48)" fg:x="495" fg:w="1"/><text x="39.9453%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.6953%" y="453" width="0.0802%" height="15" fill="rgb(221,59,43)" fg:x="495" fg:w="1"/><text x="39.9453%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="39.6953%" y="437" width="0.0802%" height="15" fill="rgb(205,166,41)" fg:x="495" fg:w="1"/><text x="39.9453%" y="447.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="39.6953%" y="421" width="0.0802%" height="15" fill="rgb(241,186,40)" fg:x="495" fg:w="1"/><text x="39.9453%" y="431.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="39.6953%" y="405" width="0.0802%" height="15" fill="rgb(216,119,35)" fg:x="495" fg:w="1"/><text x="39.9453%" y="415.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="39.6953%" y="389" width="0.0802%" height="15" fill="rgb(208,68,38)" fg:x="495" fg:w="1"/><text x="39.9453%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="39.8557%" y="533" width="0.0802%" height="15" fill="rgb(217,113,1)" fg:x="497" fg:w="1"/><text x="40.1057%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="39.8557%" y="517" width="0.0802%" height="15" fill="rgb(242,153,3)" fg:x="497" fg:w="1"/><text x="40.1057%" y="527.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="39.8557%" y="501" width="0.0802%" height="15" fill="rgb(229,76,35)" fg:x="497" fg:w="1"/><text x="40.1057%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.8557%" y="485" width="0.0802%" height="15" fill="rgb(229,125,34)" fg:x="497" fg:w="1"/><text x="40.1057%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.8557%" y="469" width="0.0802%" height="15" fill="rgb(238,179,36)" fg:x="497" fg:w="1"/><text x="40.1057%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.9358%" y="373" width="0.0802%" height="15" fill="rgb(244,183,19)" fg:x="498" fg:w="1"/><text x="40.1858%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.9358%" y="357" width="0.0802%" height="15" fill="rgb(216,85,49)" fg:x="498" fg:w="1"/><text x="40.1858%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="39.9358%" y="501" width="0.1604%" height="15" fill="rgb(208,161,47)" fg:x="498" fg:w="2"/><text x="40.1858%" y="511.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="39.9358%" y="485" width="0.1604%" height="15" fill="rgb(233,210,18)" fg:x="498" fg:w="2"/><text x="40.1858%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="39.9358%" y="469" width="0.1604%" height="15" fill="rgb(205,104,42)" fg:x="498" fg:w="2"/><text x="40.1858%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="39.9358%" y="453" width="0.1604%" height="15" fill="rgb(248,90,43)" fg:x="498" fg:w="2"/><text x="40.1858%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.9358%" y="437" width="0.1604%" height="15" fill="rgb(206,198,11)" fg:x="498" fg:w="2"/><text x="40.1858%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.9358%" y="421" width="0.1604%" height="15" fill="rgb(239,165,27)" fg:x="498" fg:w="2"/><text x="40.1858%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.9358%" y="405" width="0.1604%" height="15" fill="rgb(246,44,32)" fg:x="498" fg:w="2"/><text x="40.1858%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.9358%" y="389" width="0.1604%" height="15" fill="rgb(252,65,42)" fg:x="498" fg:w="2"/><text x="40.1858%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.0160%" y="373" width="0.0802%" height="15" fill="rgb(246,197,18)" fg:x="499" fg:w="1"/><text x="40.2660%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.0160%" y="357" width="0.0802%" height="15" fill="rgb(216,192,4)" fg:x="499" fg:w="1"/><text x="40.2660%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.0160%" y="341" width="0.0802%" height="15" fill="rgb(208,117,10)" fg:x="499" fg:w="1"/><text x="40.2660%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.0160%" y="325" width="0.0802%" height="15" fill="rgb(240,61,47)" fg:x="499" fg:w="1"/><text x="40.2660%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.0160%" y="309" width="0.0802%" height="15" fill="rgb(228,178,21)" fg:x="499" fg:w="1"/><text x="40.2660%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.0160%" y="293" width="0.0802%" height="15" fill="rgb(219,96,54)" fg:x="499" fg:w="1"/><text x="40.2660%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.0160%" y="277" width="0.0802%" height="15" fill="rgb(250,177,24)" fg:x="499" fg:w="1"/><text x="40.2660%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.0160%" y="261" width="0.0802%" height="15" fill="rgb(242,154,46)" fg:x="499" fg:w="1"/><text x="40.2660%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.0160%" y="245" width="0.0802%" height="15" fill="rgb(226,176,29)" fg:x="499" fg:w="1"/><text x="40.2660%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.0160%" y="229" width="0.0802%" height="15" fill="rgb(226,29,2)" fg:x="499" fg:w="1"/><text x="40.2660%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.0160%" y="213" width="0.0802%" height="15" fill="rgb(237,104,14)" fg:x="499" fg:w="1"/><text x="40.2660%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.0160%" y="197" width="0.0802%" height="15" fill="rgb(245,207,31)" fg:x="499" fg:w="1"/><text x="40.2660%" y="207.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.1764%" y="453" width="0.0802%" height="15" fill="rgb(229,211,45)" fg:x="501" fg:w="1"/><text x="40.4264%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.1764%" y="437" width="0.0802%" height="15" fill="rgb(229,113,15)" fg:x="501" fg:w="1"/><text x="40.4264%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.1764%" y="421" width="0.0802%" height="15" fill="rgb(237,147,15)" fg:x="501" fg:w="1"/><text x="40.4264%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.1764%" y="405" width="0.0802%" height="15" fill="rgb(244,120,12)" fg:x="501" fg:w="1"/><text x="40.4264%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.1764%" y="389" width="0.0802%" height="15" fill="rgb(205,120,12)" fg:x="501" fg:w="1"/><text x="40.4264%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.1764%" y="373" width="0.0802%" height="15" fill="rgb(231,26,45)" fg:x="501" fg:w="1"/><text x="40.4264%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.1764%" y="357" width="0.0802%" height="15" fill="rgb(246,98,1)" fg:x="501" fg:w="1"/><text x="40.4264%" y="367.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.24%)</title><rect x="40.0962%" y="485" width="0.2406%" height="15" fill="rgb(207,68,45)" fg:x="500" fg:w="3"/><text x="40.3462%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.24%)</title><rect x="40.0962%" y="469" width="0.2406%" height="15" fill="rgb(231,27,38)" fg:x="500" fg:w="3"/><text x="40.3462%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="40.2566%" y="453" width="0.0802%" height="15" fill="rgb(214,223,3)" fg:x="502" fg:w="1"/><text x="40.5066%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.2566%" y="437" width="0.0802%" height="15" fill="rgb(228,195,46)" fg:x="502" fg:w="1"/><text x="40.5066%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="40.2566%" y="421" width="0.0802%" height="15" fill="rgb(231,100,42)" fg:x="502" fg:w="1"/><text x="40.5066%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.2566%" y="405" width="0.0802%" height="15" fill="rgb(236,53,4)" fg:x="502" fg:w="1"/><text x="40.5066%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="40.2566%" y="389" width="0.0802%" height="15" fill="rgb(230,152,12)" fg:x="502" fg:w="1"/><text x="40.5066%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.2566%" y="373" width="0.0802%" height="15" fill="rgb(226,101,19)" fg:x="502" fg:w="1"/><text x="40.5066%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="40.2566%" y="357" width="0.0802%" height="15" fill="rgb(250,149,32)" fg:x="502" fg:w="1"/><text x="40.5066%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.2566%" y="341" width="0.0802%" height="15" fill="rgb(232,178,12)" fg:x="502" fg:w="1"/><text x="40.5066%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.2566%" y="325" width="0.0802%" height="15" fill="rgb(246,151,17)" fg:x="502" fg:w="1"/><text x="40.5066%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.2566%" y="309" width="0.0802%" height="15" fill="rgb(252,17,51)" fg:x="502" fg:w="1"/><text x="40.5066%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.3368%" y="453" width="0.0802%" height="15" fill="rgb(250,207,23)" fg:x="503" fg:w="1"/><text x="40.5868%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.3368%" y="437" width="0.0802%" height="15" fill="rgb(205,27,5)" fg:x="503" fg:w="1"/><text x="40.5868%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.3368%" y="421" width="0.0802%" height="15" fill="rgb(224,32,19)" fg:x="503" fg:w="1"/><text x="40.5868%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.3368%" y="405" width="0.0802%" height="15" fill="rgb(247,214,40)" fg:x="503" fg:w="1"/><text x="40.5868%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.3368%" y="389" width="0.0802%" height="15" fill="rgb(239,199,17)" fg:x="503" fg:w="1"/><text x="40.5868%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.3368%" y="373" width="0.0802%" height="15" fill="rgb(251,159,9)" fg:x="503" fg:w="1"/><text x="40.5868%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.3368%" y="357" width="0.0802%" height="15" fill="rgb(225,78,32)" fg:x="503" fg:w="1"/><text x="40.5868%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.3368%" y="341" width="0.0802%" height="15" fill="rgb(206,97,47)" fg:x="503" fg:w="1"/><text x="40.5868%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.3368%" y="325" width="0.0802%" height="15" fill="rgb(227,107,4)" fg:x="503" fg:w="1"/><text x="40.5868%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.3368%" y="309" width="0.0802%" height="15" fill="rgb(241,146,50)" fg:x="503" fg:w="1"/><text x="40.5868%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.3368%" y="293" width="0.0802%" height="15" fill="rgb(232,92,30)" fg:x="503" fg:w="1"/><text x="40.5868%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.3368%" y="277" width="0.0802%" height="15" fill="rgb(222,0,40)" fg:x="503" fg:w="1"/><text x="40.5868%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.3368%" y="261" width="0.0802%" height="15" fill="rgb(219,54,33)" fg:x="503" fg:w="1"/><text x="40.5868%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.3368%" y="245" width="0.0802%" height="15" fill="rgb(226,209,28)" fg:x="503" fg:w="1"/><text x="40.5868%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="39.8557%" y="549" width="0.6415%" height="15" fill="rgb(254,205,35)" fg:x="497" fg:w="8"/><text x="40.1057%" y="559.50"></text></g><g><title>engine::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="39.9358%" y="533" width="0.5613%" height="15" fill="rgb(230,159,3)" fg:x="498" fg:w="7"/><text x="40.1858%" y="543.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (7 samples, 0.56%)</title><rect x="39.9358%" y="517" width="0.5613%" height="15" fill="rgb(232,190,24)" fg:x="498" fg:w="7"/><text x="40.1858%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="40.0962%" y="501" width="0.4010%" height="15" fill="rgb(217,227,44)" fg:x="500" fg:w="5"/><text x="40.3462%" y="511.50"></text></g><g><title>kernel::model::scopes::save_props (2 samples, 0.16%)</title><rect x="40.3368%" y="485" width="0.1604%" height="15" fill="rgb(236,211,1)" fg:x="503" fg:w="2"/><text x="40.5868%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (2 samples, 0.16%)</title><rect x="40.3368%" y="469" width="0.1604%" height="15" fill="rgb(250,127,46)" fg:x="503" fg:w="2"/><text x="40.5868%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.4170%" y="453" width="0.0802%" height="15" fill="rgb(229,213,6)" fg:x="504" fg:w="1"/><text x="40.6670%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Occupying&gt;&gt; (1 samples, 0.08%)</title><rect x="40.5774%" y="533" width="0.0802%" height="15" fill="rgb(237,15,36)" fg:x="506" fg:w="1"/><text x="40.8274%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="40.5774%" y="517" width="0.0802%" height="15" fill="rgb(213,131,41)" fg:x="506" fg:w="1"/><text x="40.8274%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="40.5774%" y="501" width="0.0802%" height="15" fill="rgb(225,82,44)" fg:x="506" fg:w="1"/><text x="40.8274%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.6576%" y="517" width="0.0802%" height="15" fill="rgb(249,42,11)" fg:x="507" fg:w="1"/><text x="40.9076%" y="527.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (2 samples, 0.16%)</title><rect x="40.6576%" y="533" width="0.1604%" height="15" fill="rgb(253,11,29)" fg:x="507" fg:w="2"/><text x="40.9076%" y="543.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="40.7378%" y="517" width="0.0802%" height="15" fill="rgb(206,8,54)" fg:x="508" fg:w="1"/><text x="40.9878%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="40.8180%" y="501" width="0.0802%" height="15" fill="rgb(222,186,2)" fg:x="509" fg:w="1"/><text x="41.0680%" y="511.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="40.8180%" y="485" width="0.0802%" height="15" fill="rgb(221,206,53)" fg:x="509" fg:w="1"/><text x="41.0680%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="40.8180%" y="469" width="0.0802%" height="15" fill="rgb(230,150,21)" fg:x="509" fg:w="1"/><text x="41.0680%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.8180%" y="453" width="0.0802%" height="15" fill="rgb(253,202,10)" fg:x="509" fg:w="1"/><text x="41.0680%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.8180%" y="437" width="0.0802%" height="15" fill="rgb(238,109,40)" fg:x="509" fg:w="1"/><text x="41.0680%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.8180%" y="421" width="0.0802%" height="15" fill="rgb(247,120,22)" fg:x="509" fg:w="1"/><text x="41.0680%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.8180%" y="405" width="0.0802%" height="15" fill="rgb(207,43,30)" fg:x="509" fg:w="1"/><text x="41.0680%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.8982%" y="453" width="0.0802%" height="15" fill="rgb(213,211,24)" fg:x="510" fg:w="1"/><text x="41.1482%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.8982%" y="437" width="0.0802%" height="15" fill="rgb(239,73,39)" fg:x="510" fg:w="1"/><text x="41.1482%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.8982%" y="421" width="0.0802%" height="15" fill="rgb(245,182,19)" fg:x="510" fg:w="1"/><text x="41.1482%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.8982%" y="405" width="0.0802%" height="15" fill="rgb(247,143,26)" fg:x="510" fg:w="1"/><text x="41.1482%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.8982%" y="389" width="0.0802%" height="15" fill="rgb(228,191,23)" fg:x="510" fg:w="1"/><text x="41.1482%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.8982%" y="373" width="0.0802%" height="15" fill="rgb(253,165,31)" fg:x="510" fg:w="1"/><text x="41.1482%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.8982%" y="357" width="0.0802%" height="15" fill="rgb(234,138,20)" fg:x="510" fg:w="1"/><text x="41.1482%" y="367.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="40.8180%" y="533" width="0.2406%" height="15" fill="rgb(218,191,29)" fg:x="509" fg:w="3"/><text x="41.0680%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="40.8180%" y="517" width="0.2406%" height="15" fill="rgb(221,157,19)" fg:x="509" fg:w="3"/><text x="41.0680%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="40.8982%" y="501" width="0.1604%" height="15" fill="rgb(237,26,42)" fg:x="510" fg:w="2"/><text x="41.1482%" y="511.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="40.8982%" y="485" width="0.1604%" height="15" fill="rgb(220,163,24)" fg:x="510" fg:w="2"/><text x="41.1482%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="40.8982%" y="469" width="0.1604%" height="15" fill="rgb(242,115,20)" fg:x="510" fg:w="2"/><text x="41.1482%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="40.9783%" y="453" width="0.0802%" height="15" fill="rgb(210,206,9)" fg:x="511" fg:w="1"/><text x="41.2283%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.9783%" y="437" width="0.0802%" height="15" fill="rgb(208,71,17)" fg:x="511" fg:w="1"/><text x="41.2283%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="40.9783%" y="421" width="0.0802%" height="15" fill="rgb(233,7,5)" fg:x="511" fg:w="1"/><text x="41.2283%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.9783%" y="405" width="0.0802%" height="15" fill="rgb(207,92,33)" fg:x="511" fg:w="1"/><text x="41.2283%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.9783%" y="389" width="0.0802%" height="15" fill="rgb(218,87,9)" fg:x="511" fg:w="1"/><text x="41.2283%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.9783%" y="373" width="0.0802%" height="15" fill="rgb(219,47,37)" fg:x="511" fg:w="1"/><text x="41.2283%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.9783%" y="357" width="0.0802%" height="15" fill="rgb(221,152,34)" fg:x="511" fg:w="1"/><text x="41.2283%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="41.0585%" y="533" width="0.0802%" height="15" fill="rgb(235,176,21)" fg:x="512" fg:w="1"/><text x="41.3085%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.0585%" y="517" width="0.0802%" height="15" fill="rgb(232,212,21)" fg:x="512" fg:w="1"/><text x="41.3085%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.0585%" y="501" width="0.0802%" height="15" fill="rgb(245,82,39)" fg:x="512" fg:w="1"/><text x="41.3085%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="41.1387%" y="421" width="0.1604%" height="15" fill="rgb(241,52,51)" fg:x="513" fg:w="2"/><text x="41.3887%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="41.1387%" y="405" width="0.1604%" height="15" fill="rgb(219,91,24)" fg:x="513" fg:w="2"/><text x="41.3887%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="41.1387%" y="389" width="0.1604%" height="15" fill="rgb(241,142,12)" fg:x="513" fg:w="2"/><text x="41.3887%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="41.1387%" y="373" width="0.1604%" height="15" fill="rgb(230,27,9)" fg:x="513" fg:w="2"/><text x="41.3887%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.2189%" y="357" width="0.0802%" height="15" fill="rgb(249,181,32)" fg:x="514" fg:w="1"/><text x="41.4689%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.2189%" y="341" width="0.0802%" height="15" fill="rgb(230,107,3)" fg:x="514" fg:w="1"/><text x="41.4689%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.2189%" y="325" width="0.0802%" height="15" fill="rgb(246,204,14)" fg:x="514" fg:w="1"/><text x="41.4689%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.2189%" y="309" width="0.0802%" height="15" fill="rgb(213,192,47)" fg:x="514" fg:w="1"/><text x="41.4689%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.2189%" y="293" width="0.0802%" height="15" fill="rgb(240,44,36)" fg:x="514" fg:w="1"/><text x="41.4689%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.2189%" y="277" width="0.0802%" height="15" fill="rgb(244,209,38)" fg:x="514" fg:w="1"/><text x="41.4689%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.2189%" y="261" width="0.0802%" height="15" fill="rgb(219,34,37)" fg:x="514" fg:w="1"/><text x="41.4689%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.2189%" y="245" width="0.0802%" height="15" fill="rgb(210,28,6)" fg:x="514" fg:w="1"/><text x="41.4689%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.2189%" y="229" width="0.0802%" height="15" fill="rgb(244,110,52)" fg:x="514" fg:w="1"/><text x="41.4689%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.2189%" y="213" width="0.0802%" height="15" fill="rgb(254,124,47)" fg:x="514" fg:w="1"/><text x="41.4689%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.2189%" y="197" width="0.0802%" height="15" fill="rgb(254,110,13)" fg:x="514" fg:w="1"/><text x="41.4689%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.2189%" y="181" width="0.0802%" height="15" fill="rgb(252,57,21)" fg:x="514" fg:w="1"/><text x="41.4689%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.2991%" y="389" width="0.0802%" height="15" fill="rgb(242,60,45)" fg:x="515" fg:w="1"/><text x="41.5491%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.2991%" y="373" width="0.0802%" height="15" fill="rgb(234,49,30)" fg:x="515" fg:w="1"/><text x="41.5491%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="41.1387%" y="437" width="0.3208%" height="15" fill="rgb(218,98,6)" fg:x="513" fg:w="4"/><text x="41.3887%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="41.2991%" y="421" width="0.1604%" height="15" fill="rgb(220,174,29)" fg:x="515" fg:w="2"/><text x="41.5491%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="41.2991%" y="405" width="0.1604%" height="15" fill="rgb(236,163,23)" fg:x="515" fg:w="2"/><text x="41.5491%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.3793%" y="389" width="0.0802%" height="15" fill="rgb(242,114,45)" fg:x="516" fg:w="1"/><text x="41.6293%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="41.1387%" y="485" width="0.4010%" height="15" fill="rgb(232,10,53)" fg:x="513" fg:w="5"/><text x="41.3887%" y="495.50"></text></g><g><title>kernel::model::scopes::load_props (5 samples, 0.40%)</title><rect x="41.1387%" y="469" width="0.4010%" height="15" fill="rgb(245,108,29)" fg:x="513" fg:w="5"/><text x="41.3887%" y="479.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (5 samples, 0.40%)</title><rect x="41.1387%" y="453" width="0.4010%" height="15" fill="rgb(240,89,53)" fg:x="513" fg:w="5"/><text x="41.3887%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="41.4595%" y="437" width="0.0802%" height="15" fill="rgb(226,60,45)" fg:x="517" fg:w="1"/><text x="41.7095%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.4595%" y="421" width="0.0802%" height="15" fill="rgb(230,41,44)" fg:x="517" fg:w="1"/><text x="41.7095%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.5397%" y="421" width="0.0802%" height="15" fill="rgb(230,26,20)" fg:x="518" fg:w="1"/><text x="41.7897%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.5397%" y="405" width="0.0802%" height="15" fill="rgb(237,170,32)" fg:x="518" fg:w="1"/><text x="41.7897%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.5397%" y="389" width="0.0802%" height="15" fill="rgb(212,35,42)" fg:x="518" fg:w="1"/><text x="41.7897%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.5397%" y="373" width="0.0802%" height="15" fill="rgb(227,31,34)" fg:x="518" fg:w="1"/><text x="41.7897%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.5397%" y="357" width="0.0802%" height="15" fill="rgb(216,19,18)" fg:x="518" fg:w="1"/><text x="41.7897%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.7803%" y="341" width="0.0802%" height="15" fill="rgb(211,133,42)" fg:x="521" fg:w="1"/><text x="42.0303%" y="351.50"></text></g><g><title>plugins_core::build::Build::occupying (27 samples, 2.17%)</title><rect x="39.7755%" y="565" width="2.1652%" height="15" fill="rgb(244,66,13)" fg:x="496" fg:w="27"/><text x="40.0255%" y="575.50">p..</text></g><g><title>plugins_core::tools::set_occupying (18 samples, 1.44%)</title><rect x="40.4972%" y="549" width="1.4435%" height="15" fill="rgb(218,185,50)" fg:x="505" fg:w="18"/><text x="40.7472%" y="559.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (10 samples, 0.80%)</title><rect x="41.1387%" y="533" width="0.8019%" height="15" fill="rgb(219,149,13)" fg:x="513" fg:w="10"/><text x="41.3887%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (10 samples, 0.80%)</title><rect x="41.1387%" y="517" width="0.8019%" height="15" fill="rgb(221,125,0)" fg:x="513" fg:w="10"/><text x="41.3887%" y="527.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (10 samples, 0.80%)</title><rect x="41.1387%" y="501" width="0.8019%" height="15" fill="rgb(247,126,27)" fg:x="513" fg:w="10"/><text x="41.3887%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="41.5397%" y="485" width="0.4010%" height="15" fill="rgb(250,138,30)" fg:x="518" fg:w="5"/><text x="41.7897%" y="495.50"></text></g><g><title>kernel::model::scopes::load_props (5 samples, 0.40%)</title><rect x="41.5397%" y="469" width="0.4010%" height="15" fill="rgb(230,151,9)" fg:x="518" fg:w="5"/><text x="41.7897%" y="479.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (5 samples, 0.40%)</title><rect x="41.5397%" y="453" width="0.4010%" height="15" fill="rgb(233,80,38)" fg:x="518" fg:w="5"/><text x="41.7897%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="41.5397%" y="437" width="0.4010%" height="15" fill="rgb(232,68,43)" fg:x="518" fg:w="5"/><text x="41.7897%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="41.6199%" y="421" width="0.3208%" height="15" fill="rgb(254,5,50)" fg:x="519" fg:w="4"/><text x="41.8699%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="41.6199%" y="405" width="0.3208%" height="15" fill="rgb(225,45,5)" fg:x="519" fg:w="4"/><text x="41.8699%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="41.6199%" y="389" width="0.3208%" height="15" fill="rgb(239,22,3)" fg:x="519" fg:w="4"/><text x="41.8699%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="41.6199%" y="373" width="0.3208%" height="15" fill="rgb(243,129,0)" fg:x="519" fg:w="4"/><text x="41.8699%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="41.7001%" y="357" width="0.2406%" height="15" fill="rgb(223,164,0)" fg:x="520" fg:w="3"/><text x="41.9501%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.8605%" y="341" width="0.0802%" height="15" fill="rgb(221,46,29)" fg:x="522" fg:w="1"/><text x="42.1105%" y="351.50"></text></g><g><title>kernel::model::scopes::Props::property_named (1 samples, 0.08%)</title><rect x="41.9407%" y="485" width="0.0802%" height="15" fill="rgb(205,97,47)" fg:x="523" fg:w="1"/><text x="42.1907%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="41.9407%" y="501" width="0.1604%" height="15" fill="rgb(249,14,8)" fg:x="523" fg:w="2"/><text x="42.1907%" y="511.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="42.0209%" y="485" width="0.0802%" height="15" fill="rgb(216,77,3)" fg:x="524" fg:w="1"/><text x="42.2709%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="42.0209%" y="469" width="0.0802%" height="15" fill="rgb(206,168,54)" fg:x="524" fg:w="1"/><text x="42.2709%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.0209%" y="453" width="0.0802%" height="15" fill="rgb(236,3,41)" fg:x="524" fg:w="1"/><text x="42.2709%" y="463.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.24%)</title><rect x="42.1010%" y="485" width="0.2406%" height="15" fill="rgb(231,132,24)" fg:x="525" fg:w="3"/><text x="42.3510%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.24%)</title><rect x="42.1010%" y="469" width="0.2406%" height="15" fill="rgb(227,221,40)" fg:x="525" fg:w="3"/><text x="42.3510%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="42.1812%" y="453" width="0.1604%" height="15" fill="rgb(233,151,11)" fg:x="526" fg:w="2"/><text x="42.4312%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.1812%" y="437" width="0.1604%" height="15" fill="rgb(247,81,35)" fg:x="526" fg:w="2"/><text x="42.4312%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.2614%" y="421" width="0.0802%" height="15" fill="rgb(243,128,48)" fg:x="527" fg:w="1"/><text x="42.5114%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.2614%" y="405" width="0.0802%" height="15" fill="rgb(253,16,10)" fg:x="527" fg:w="1"/><text x="42.5114%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.2614%" y="389" width="0.0802%" height="15" fill="rgb(228,67,27)" fg:x="527" fg:w="1"/><text x="42.5114%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.2614%" y="373" width="0.0802%" height="15" fill="rgb(231,105,25)" fg:x="527" fg:w="1"/><text x="42.5114%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.2614%" y="357" width="0.0802%" height="15" fill="rgb(213,166,47)" fg:x="527" fg:w="1"/><text x="42.5114%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.3416%" y="453" width="0.0802%" height="15" fill="rgb(209,27,10)" fg:x="528" fg:w="1"/><text x="42.5916%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.3416%" y="437" width="0.0802%" height="15" fill="rgb(241,44,30)" fg:x="528" fg:w="1"/><text x="42.5916%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.3416%" y="421" width="0.0802%" height="15" fill="rgb(223,216,15)" fg:x="528" fg:w="1"/><text x="42.5916%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.3416%" y="405" width="0.0802%" height="15" fill="rgb(227,14,7)" fg:x="528" fg:w="1"/><text x="42.5916%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.3416%" y="389" width="0.0802%" height="15" fill="rgb(237,14,5)" fg:x="528" fg:w="1"/><text x="42.5916%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.3416%" y="373" width="0.0802%" height="15" fill="rgb(232,14,36)" fg:x="528" fg:w="1"/><text x="42.5916%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.3416%" y="357" width="0.0802%" height="15" fill="rgb(234,0,38)" fg:x="528" fg:w="1"/><text x="42.5916%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="41.9407%" y="549" width="0.5613%" height="15" fill="rgb(207,170,14)" fg:x="523" fg:w="7"/><text x="42.1907%" y="559.50"></text></g><g><title>engine::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="41.9407%" y="533" width="0.5613%" height="15" fill="rgb(252,45,13)" fg:x="523" fg:w="7"/><text x="42.1907%" y="543.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (7 samples, 0.56%)</title><rect x="41.9407%" y="517" width="0.5613%" height="15" fill="rgb(213,142,7)" fg:x="523" fg:w="7"/><text x="42.1907%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="42.1010%" y="501" width="0.4010%" height="15" fill="rgb(216,157,23)" fg:x="525" fg:w="5"/><text x="42.3510%" y="511.50"></text></g><g><title>kernel::model::scopes::save_props (2 samples, 0.16%)</title><rect x="42.3416%" y="485" width="0.1604%" height="15" fill="rgb(212,145,33)" fg:x="528" fg:w="2"/><text x="42.5916%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (2 samples, 0.16%)</title><rect x="42.3416%" y="469" width="0.1604%" height="15" fill="rgb(233,26,13)" fg:x="528" fg:w="2"/><text x="42.5916%" y="479.50"></text></g><g><title>&lt;kernel::model::scopes::Properties as kernel::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="42.4218%" y="453" width="0.0802%" height="15" fill="rgb(219,196,19)" fg:x="529" fg:w="1"/><text x="42.6718%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.4218%" y="437" width="0.0802%" height="15" fill="rgb(246,56,21)" fg:x="529" fg:w="1"/><text x="42.6718%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.4218%" y="421" width="0.0802%" height="15" fill="rgb(222,28,53)" fg:x="529" fg:w="1"/><text x="42.6718%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.4218%" y="405" width="0.0802%" height="15" fill="rgb(224,5,27)" fg:x="529" fg:w="1"/><text x="42.6718%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.4218%" y="389" width="0.0802%" height="15" fill="rgb(220,153,33)" fg:x="529" fg:w="1"/><text x="42.6718%" y="399.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (2 samples, 0.16%)</title><rect x="42.5822%" y="517" width="0.1604%" height="15" fill="rgb(226,58,19)" fg:x="531" fg:w="2"/><text x="42.8322%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="42.7426%" y="501" width="0.1604%" height="15" fill="rgb(239,112,23)" fg:x="533" fg:w="2"/><text x="42.9926%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="42.7426%" y="485" width="0.1604%" height="15" fill="rgb(251,213,20)" fg:x="533" fg:w="2"/><text x="42.9926%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.8228%" y="469" width="0.0802%" height="15" fill="rgb(215,181,21)" fg:x="534" fg:w="1"/><text x="43.0728%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.8228%" y="453" width="0.0802%" height="15" fill="rgb(240,8,35)" fg:x="534" fg:w="1"/><text x="43.0728%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.8228%" y="437" width="0.0802%" height="15" fill="rgb(232,203,3)" fg:x="534" fg:w="1"/><text x="43.0728%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.8228%" y="421" width="0.0802%" height="15" fill="rgb(214,202,43)" fg:x="534" fg:w="1"/><text x="43.0728%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="42.8228%" y="405" width="0.0802%" height="15" fill="rgb(254,35,11)" fg:x="534" fg:w="1"/><text x="43.0728%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="42.8228%" y="389" width="0.0802%" height="15" fill="rgb(239,173,13)" fg:x="534" fg:w="1"/><text x="43.0728%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="42.9030%" y="485" width="0.0802%" height="15" fill="rgb(220,141,0)" fg:x="535" fg:w="1"/><text x="43.1530%" y="495.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (288 samples, 23.10%)</title><rect x="19.9679%" y="581" width="23.0954%" height="15" fill="rgb(210,98,12)" fg:x="249" fg:w="288"/><text x="20.2179%" y="591.50">plugins_core::build::BuildSurrounding..</text></g><g><title>plugins_core::build::Build::with_username (14 samples, 1.12%)</title><rect x="41.9407%" y="565" width="1.1227%" height="15" fill="rgb(254,153,22)" fg:x="523" fg:w="14"/><text x="42.1907%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (7 samples, 0.56%)</title><rect x="42.5020%" y="549" width="0.5613%" height="15" fill="rgb(247,223,17)" fg:x="530" fg:w="7"/><text x="42.7520%" y="559.50"></text></g><g><title>engine::users::model::add_username_to_key (7 samples, 0.56%)</title><rect x="42.5020%" y="533" width="0.5613%" height="15" fill="rgb(246,56,7)" fg:x="530" fg:w="7"/><text x="42.7520%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="42.7426%" y="517" width="0.3208%" height="15" fill="rgb(240,226,12)" fg:x="533" fg:w="4"/><text x="42.9926%" y="527.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="42.9030%" y="501" width="0.1604%" height="15" fill="rgb(205,87,46)" fg:x="535" fg:w="2"/><text x="43.1530%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="42.9832%" y="485" width="0.0802%" height="15" fill="rgb(245,214,51)" fg:x="536" fg:w="1"/><text x="43.2332%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="42.9832%" y="469" width="0.0802%" height="15" fill="rgb(223,172,33)" fg:x="536" fg:w="1"/><text x="43.2332%" y="479.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="43.0634%" y="581" width="0.0802%" height="15" fill="rgb(227,203,34)" fg:x="537" fg:w="1"/><text x="43.3134%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="43.0634%" y="565" width="0.0802%" height="15" fill="rgb(248,143,44)" fg:x="537" fg:w="1"/><text x="43.3134%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="43.0634%" y="549" width="0.0802%" height="15" fill="rgb(226,162,5)" fg:x="537" fg:w="1"/><text x="43.3134%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="43.0634%" y="533" width="0.0802%" height="15" fill="rgb(211,143,1)" fg:x="537" fg:w="1"/><text x="43.3134%" y="543.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="43.0634%" y="517" width="0.0802%" height="15" fill="rgb(224,96,15)" fg:x="537" fg:w="1"/><text x="43.3134%" y="527.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="43.0634%" y="501" width="0.0802%" height="15" fill="rgb(222,4,38)" fg:x="537" fg:w="1"/><text x="43.3134%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.0634%" y="485" width="0.0802%" height="15" fill="rgb(253,228,15)" fg:x="537" fg:w="1"/><text x="43.3134%" y="495.50"></text></g><g><title>plugins_core::build::BuildSurroundings::hands (1 samples, 0.08%)</title><rect x="43.1435%" y="581" width="0.0802%" height="15" fill="rgb(242,194,12)" fg:x="538" fg:w="1"/><text x="43.3935%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="43.2237%" y="533" width="0.1604%" height="15" fill="rgb(214,177,31)" fg:x="539" fg:w="2"/><text x="43.4737%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="43.2237%" y="517" width="0.1604%" height="15" fill="rgb(226,58,51)" fg:x="539" fg:w="2"/><text x="43.4737%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="43.3039%" y="501" width="0.0802%" height="15" fill="rgb(250,119,16)" fg:x="540" fg:w="1"/><text x="43.5539%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="43.3039%" y="485" width="0.0802%" height="15" fill="rgb(223,128,53)" fg:x="540" fg:w="1"/><text x="43.5539%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="43.3039%" y="469" width="0.0802%" height="15" fill="rgb(251,199,15)" fg:x="540" fg:w="1"/><text x="43.5539%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="43.3039%" y="453" width="0.0802%" height="15" fill="rgb(235,168,42)" fg:x="540" fg:w="1"/><text x="43.5539%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="43.3039%" y="437" width="0.0802%" height="15" fill="rgb(250,210,17)" fg:x="540" fg:w="1"/><text x="43.5539%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="43.3039%" y="421" width="0.0802%" height="15" fill="rgb(226,36,41)" fg:x="540" fg:w="1"/><text x="43.5539%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="43.3039%" y="405" width="0.0802%" height="15" fill="rgb(225,87,10)" fg:x="540" fg:w="1"/><text x="43.5539%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="43.3039%" y="389" width="0.0802%" height="15" fill="rgb(228,83,9)" fg:x="540" fg:w="1"/><text x="43.5539%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="43.3039%" y="373" width="0.0802%" height="15" fill="rgb(225,16,36)" fg:x="540" fg:w="1"/><text x="43.5539%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="43.3039%" y="357" width="0.0802%" height="15" fill="rgb(242,198,13)" fg:x="540" fg:w="1"/><text x="43.5539%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="43.3039%" y="341" width="0.0802%" height="15" fill="rgb(239,25,51)" fg:x="540" fg:w="1"/><text x="43.5539%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="43.3039%" y="325" width="0.0802%" height="15" fill="rgb(239,28,37)" fg:x="540" fg:w="1"/><text x="43.5539%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="43.3039%" y="309" width="0.0802%" height="15" fill="rgb(234,70,17)" fg:x="540" fg:w="1"/><text x="43.5539%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="43.3841%" y="453" width="0.1604%" height="15" fill="rgb(231,215,53)" fg:x="541" fg:w="2"/><text x="43.6341%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.4643%" y="437" width="0.0802%" height="15" fill="rgb(218,140,42)" fg:x="542" fg:w="1"/><text x="43.7143%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.4643%" y="421" width="0.0802%" height="15" fill="rgb(233,227,45)" fg:x="542" fg:w="1"/><text x="43.7143%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.4643%" y="405" width="0.0802%" height="15" fill="rgb(225,189,21)" fg:x="542" fg:w="1"/><text x="43.7143%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.4643%" y="389" width="0.0802%" height="15" fill="rgb(237,176,54)" fg:x="542" fg:w="1"/><text x="43.7143%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="43.7049%" y="325" width="0.0802%" height="15" fill="rgb(215,131,46)" fg:x="545" fg:w="1"/><text x="43.9549%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="43.3841%" y="501" width="0.4812%" height="15" fill="rgb(218,95,20)" fg:x="541" fg:w="6"/><text x="43.6341%" y="511.50"></text></g><g><title>kernel::model::scopes::load_props (6 samples, 0.48%)</title><rect x="43.3841%" y="485" width="0.4812%" height="15" fill="rgb(208,198,12)" fg:x="541" fg:w="6"/><text x="43.6341%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (6 samples, 0.48%)</title><rect x="43.3841%" y="469" width="0.4812%" height="15" fill="rgb(239,107,50)" fg:x="541" fg:w="6"/><text x="43.6341%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (4 samples, 0.32%)</title><rect x="43.5445%" y="453" width="0.3208%" height="15" fill="rgb(240,217,37)" fg:x="543" fg:w="4"/><text x="43.7945%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="43.6247%" y="437" width="0.2406%" height="15" fill="rgb(242,197,49)" fg:x="544" fg:w="3"/><text x="43.8747%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="43.6247%" y="421" width="0.2406%" height="15" fill="rgb(219,171,17)" fg:x="544" fg:w="3"/><text x="43.8747%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.7049%" y="405" width="0.1604%" height="15" fill="rgb(209,81,40)" fg:x="545" fg:w="2"/><text x="43.9549%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="43.7049%" y="389" width="0.1604%" height="15" fill="rgb(237,156,30)" fg:x="545" fg:w="2"/><text x="43.9549%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.7049%" y="373" width="0.1604%" height="15" fill="rgb(212,127,16)" fg:x="545" fg:w="2"/><text x="43.9549%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="43.7049%" y="357" width="0.1604%" height="15" fill="rgb(226,66,32)" fg:x="545" fg:w="2"/><text x="43.9549%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.7049%" y="341" width="0.1604%" height="15" fill="rgb(245,22,46)" fg:x="545" fg:w="2"/><text x="43.9549%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.7851%" y="325" width="0.0802%" height="15" fill="rgb(210,112,21)" fg:x="546" fg:w="1"/><text x="44.0351%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.7851%" y="309" width="0.0802%" height="15" fill="rgb(207,118,39)" fg:x="546" fg:w="1"/><text x="44.0351%" y="319.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.24%)</title><rect x="43.8653%" y="485" width="0.2406%" height="15" fill="rgb(205,206,35)" fg:x="547" fg:w="3"/><text x="44.1153%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.24%)</title><rect x="43.8653%" y="469" width="0.2406%" height="15" fill="rgb(222,120,2)" fg:x="547" fg:w="3"/><text x="44.1153%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="43.8653%" y="453" width="0.2406%" height="15" fill="rgb(205,38,18)" fg:x="547" fg:w="3"/><text x="44.1153%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="43.8653%" y="437" width="0.2406%" height="15" fill="rgb(226,61,2)" fg:x="547" fg:w="3"/><text x="44.1153%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="43.8653%" y="421" width="0.2406%" height="15" fill="rgb(242,161,23)" fg:x="547" fg:w="3"/><text x="44.1153%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="43.8653%" y="405" width="0.2406%" height="15" fill="rgb(213,13,52)" fg:x="547" fg:w="3"/><text x="44.1153%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="43.8653%" y="389" width="0.2406%" height="15" fill="rgb(246,209,47)" fg:x="547" fg:w="3"/><text x="44.1153%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="43.8653%" y="373" width="0.2406%" height="15" fill="rgb(214,41,3)" fg:x="547" fg:w="3"/><text x="44.1153%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="44.0257%" y="357" width="0.0802%" height="15" fill="rgb(236,119,38)" fg:x="549" fg:w="1"/><text x="44.2757%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.0257%" y="341" width="0.0802%" height="15" fill="rgb(218,50,11)" fg:x="549" fg:w="1"/><text x="44.2757%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.0257%" y="325" width="0.0802%" height="15" fill="rgb(228,38,11)" fg:x="549" fg:w="1"/><text x="44.2757%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="44.1059%" y="357" width="0.0802%" height="15" fill="rgb(212,13,9)" fg:x="550" fg:w="1"/><text x="44.3559%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.1059%" y="341" width="0.0802%" height="15" fill="rgb(208,211,9)" fg:x="550" fg:w="1"/><text x="44.3559%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.1059%" y="325" width="0.0802%" height="15" fill="rgb(239,39,32)" fg:x="550" fg:w="1"/><text x="44.3559%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="44.1059%" y="309" width="0.0802%" height="15" fill="rgb(254,179,26)" fg:x="550" fg:w="1"/><text x="44.3559%" y="319.50"></text></g><g><title>&lt;kernel::model::scopes::Properties as kernel::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="44.1059%" y="453" width="0.1604%" height="15" fill="rgb(249,165,28)" fg:x="550" fg:w="2"/><text x="44.3559%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="44.1059%" y="437" width="0.1604%" height="15" fill="rgb(225,59,50)" fg:x="550" fg:w="2"/><text x="44.3559%" y="447.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="44.1059%" y="421" width="0.1604%" height="15" fill="rgb(209,122,5)" fg:x="550" fg:w="2"/><text x="44.3559%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="44.1059%" y="405" width="0.1604%" height="15" fill="rgb(214,65,34)" fg:x="550" fg:w="2"/><text x="44.3559%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="44.1059%" y="389" width="0.1604%" height="15" fill="rgb(249,183,32)" fg:x="550" fg:w="2"/><text x="44.3559%" y="399.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="44.1059%" y="373" width="0.1604%" height="15" fill="rgb(218,122,24)" fg:x="550" fg:w="2"/><text x="44.3559%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.1860%" y="357" width="0.0802%" height="15" fill="rgb(224,109,18)" fg:x="551" fg:w="1"/><text x="44.4360%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="44.1860%" y="341" width="0.0802%" height="15" fill="rgb(210,68,50)" fg:x="551" fg:w="1"/><text x="44.4360%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.1860%" y="325" width="0.0802%" height="15" fill="rgb(212,184,34)" fg:x="551" fg:w="1"/><text x="44.4360%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.12%)</title><rect x="43.2237%" y="549" width="1.1227%" height="15" fill="rgb(238,105,48)" fg:x="539" fg:w="14"/><text x="43.4737%" y="559.50"></text></g><g><title>engine::internal::Entities::add_entity (12 samples, 0.96%)</title><rect x="43.3841%" y="533" width="0.9623%" height="15" fill="rgb(222,134,54)" fg:x="541" fg:w="12"/><text x="43.6341%" y="543.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (12 samples, 0.96%)</title><rect x="43.3841%" y="517" width="0.9623%" height="15" fill="rgb(246,24,43)" fg:x="541" fg:w="12"/><text x="43.6341%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (6 samples, 0.48%)</title><rect x="43.8653%" y="501" width="0.4812%" height="15" fill="rgb(227,169,22)" fg:x="547" fg:w="6"/><text x="44.1153%" y="511.50"></text></g><g><title>kernel::model::scopes::save_props (3 samples, 0.24%)</title><rect x="44.1059%" y="485" width="0.2406%" height="15" fill="rgb(253,152,4)" fg:x="550" fg:w="3"/><text x="44.3559%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (3 samples, 0.24%)</title><rect x="44.1059%" y="469" width="0.2406%" height="15" fill="rgb(219,158,36)" fg:x="550" fg:w="3"/><text x="44.3559%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="44.2662%" y="453" width="0.0802%" height="15" fill="rgb(251,128,40)" fg:x="552" fg:w="1"/><text x="44.5162%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.2662%" y="437" width="0.0802%" height="15" fill="rgb(254,101,39)" fg:x="552" fg:w="1"/><text x="44.5162%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="44.2662%" y="421" width="0.0802%" height="15" fill="rgb(221,168,40)" fg:x="552" fg:w="1"/><text x="44.5162%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.2662%" y="405" width="0.0802%" height="15" fill="rgb(221,14,27)" fg:x="552" fg:w="1"/><text x="44.5162%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.2662%" y="389" width="0.0802%" height="15" fill="rgb(207,36,43)" fg:x="552" fg:w="1"/><text x="44.5162%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.2662%" y="373" width="0.0802%" height="15" fill="rgb(240,172,53)" fg:x="552" fg:w="1"/><text x="44.5162%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.3464%" y="533" width="0.0802%" height="15" fill="rgb(241,138,43)" fg:x="553" fg:w="1"/><text x="44.5964%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="44.3464%" y="549" width="0.1604%" height="15" fill="rgb(227,78,19)" fg:x="553" fg:w="2"/><text x="44.5964%" y="559.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="44.4266%" y="533" width="0.0802%" height="15" fill="rgb(215,127,44)" fg:x="554" fg:w="1"/><text x="44.6766%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="44.4266%" y="517" width="0.0802%" height="15" fill="rgb(227,13,10)" fg:x="554" fg:w="1"/><text x="44.6766%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="44.4266%" y="501" width="0.0802%" height="15" fill="rgb(249,177,6)" fg:x="554" fg:w="1"/><text x="44.6766%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="44.4266%" y="485" width="0.0802%" height="15" fill="rgb(215,154,26)" fg:x="554" fg:w="1"/><text x="44.6766%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="44.4266%" y="469" width="0.0802%" height="15" fill="rgb(250,168,20)" fg:x="554" fg:w="1"/><text x="44.6766%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="44.4266%" y="453" width="0.0802%" height="15" fill="rgb(222,53,38)" fg:x="554" fg:w="1"/><text x="44.6766%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="44.4266%" y="437" width="0.0802%" height="15" fill="rgb(245,154,5)" fg:x="554" fg:w="1"/><text x="44.6766%" y="447.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="44.4266%" y="421" width="0.0802%" height="15" fill="rgb(214,89,50)" fg:x="554" fg:w="1"/><text x="44.6766%" y="431.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="44.4266%" y="405" width="0.0802%" height="15" fill="rgb(232,73,14)" fg:x="554" fg:w="1"/><text x="44.6766%" y="415.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="44.4266%" y="389" width="0.0802%" height="15" fill="rgb(230,101,20)" fg:x="554" fg:w="1"/><text x="44.6766%" y="399.50"></text></g><g><title>core::fmt::Formatter::sign_plus (1 samples, 0.08%)</title><rect x="44.4266%" y="373" width="0.0802%" height="15" fill="rgb(208,56,28)" fg:x="554" fg:w="1"/><text x="44.6766%" y="383.50"></text></g><g><title>kernel::model::scopes::Props::set_property (1 samples, 0.08%)</title><rect x="44.5870%" y="517" width="0.0802%" height="15" fill="rgb(247,205,22)" fg:x="556" fg:w="1"/><text x="44.8370%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.5870%" y="501" width="0.0802%" height="15" fill="rgb(252,109,51)" fg:x="556" fg:w="1"/><text x="44.8370%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.5870%" y="485" width="0.0802%" height="15" fill="rgb(220,40,24)" fg:x="556" fg:w="1"/><text x="44.8370%" y="495.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="44.5870%" y="469" width="0.0802%" height="15" fill="rgb(251,108,7)" fg:x="556" fg:w="1"/><text x="44.8370%" y="479.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="44.6672%" y="517" width="0.0802%" height="15" fill="rgb(238,102,51)" fg:x="557" fg:w="1"/><text x="44.9172%" y="527.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="44.6672%" y="501" width="0.0802%" height="15" fill="rgb(219,149,34)" fg:x="557" fg:w="1"/><text x="44.9172%" y="511.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (460 samples, 36.89%)</title><rect x="8.0192%" y="597" width="36.8885%" height="15" fill="rgb(239,70,0)" fg:x="100" fg:w="460"/><text x="8.2692%" y="607.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare</text></g><g><title>plugins_core::build::BuildSurroundings::make (21 samples, 1.68%)</title><rect x="43.2237%" y="581" width="1.6840%" height="15" fill="rgb(246,214,23)" fg:x="539" fg:w="21"/><text x="43.4737%" y="591.50"></text></g><g><title>plugins_core::build::QuickThing::make (21 samples, 1.68%)</title><rect x="43.2237%" y="565" width="1.6840%" height="15" fill="rgb(239,221,51)" fg:x="539" fg:w="21"/><text x="43.4737%" y="575.50"></text></g><g><title>plugins_core::build::Build::named (5 samples, 0.40%)</title><rect x="44.5068%" y="549" width="0.4010%" height="15" fill="rgb(254,62,14)" fg:x="555" fg:w="5"/><text x="44.7568%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="44.5870%" y="533" width="0.3208%" height="15" fill="rgb(253,57,33)" fg:x="556" fg:w="4"/><text x="44.8370%" y="543.50"></text></g><g><title>kernel::model::scopes::save_props (2 samples, 0.16%)</title><rect x="44.7474%" y="517" width="0.1604%" height="15" fill="rgb(229,34,6)" fg:x="558" fg:w="2"/><text x="44.9974%" y="527.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (2 samples, 0.16%)</title><rect x="44.7474%" y="501" width="0.1604%" height="15" fill="rgb(235,191,23)" fg:x="558" fg:w="2"/><text x="44.9974%" y="511.50"></text></g><g><title>&lt;kernel::model::scopes::Properties as kernel::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="44.8276%" y="485" width="0.0802%" height="15" fill="rgb(217,207,27)" fg:x="559" fg:w="1"/><text x="45.0776%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.8276%" y="469" width="0.0802%" height="15" fill="rgb(232,41,44)" fg:x="559" fg:w="1"/><text x="45.0776%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.8276%" y="453" width="0.0802%" height="15" fill="rgb(221,188,19)" fg:x="559" fg:w="1"/><text x="45.0776%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.8276%" y="437" width="0.0802%" height="15" fill="rgb(245,180,45)" fg:x="559" fg:w="1"/><text x="45.0776%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.8276%" y="421" width="0.0802%" height="15" fill="rgb(250,220,42)" fg:x="559" fg:w="1"/><text x="45.0776%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="44.9880%" y="245" width="0.0802%" height="15" fill="rgb(234,16,34)" fg:x="561" fg:w="1"/><text x="45.2380%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.9880%" y="229" width="0.0802%" height="15" fill="rgb(233,217,23)" fg:x="561" fg:w="1"/><text x="45.2380%" y="239.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="44.9078%" y="581" width="0.2406%" height="15" fill="rgb(209,22,46)" fg:x="560" fg:w="3"/><text x="45.1578%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="44.9078%" y="565" width="0.2406%" height="15" fill="rgb(213,101,18)" fg:x="560" fg:w="3"/><text x="45.1578%" y="575.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="44.9078%" y="549" width="0.2406%" height="15" fill="rgb(215,179,52)" fg:x="560" fg:w="3"/><text x="45.1578%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="44.9078%" y="533" width="0.2406%" height="15" fill="rgb(223,50,25)" fg:x="560" fg:w="3"/><text x="45.1578%" y="543.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="44.9078%" y="517" width="0.2406%" height="15" fill="rgb(224,51,44)" fg:x="560" fg:w="3"/><text x="45.1578%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (3 samples, 0.24%)</title><rect x="44.9078%" y="501" width="0.2406%" height="15" fill="rgb(224,13,54)" fg:x="560" fg:w="3"/><text x="45.1578%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.16%)</title><rect x="44.9880%" y="485" width="0.1604%" height="15" fill="rgb(219,58,47)" fg:x="561" fg:w="2"/><text x="45.2380%" y="495.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="44.9880%" y="469" width="0.1604%" height="15" fill="rgb(246,124,34)" fg:x="561" fg:w="2"/><text x="45.2380%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="44.9880%" y="453" width="0.1604%" height="15" fill="rgb(245,109,25)" fg:x="561" fg:w="2"/><text x="45.2380%" y="463.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.16%)</title><rect x="44.9880%" y="437" width="0.1604%" height="15" fill="rgb(235,48,23)" fg:x="561" fg:w="2"/><text x="45.2380%" y="447.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (2 samples, 0.16%)</title><rect x="44.9880%" y="421" width="0.1604%" height="15" fill="rgb(229,203,36)" fg:x="561" fg:w="2"/><text x="45.2380%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="44.9880%" y="405" width="0.1604%" height="15" fill="rgb(234,180,9)" fg:x="561" fg:w="2"/><text x="45.2380%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="44.9880%" y="389" width="0.1604%" height="15" fill="rgb(228,98,45)" fg:x="561" fg:w="2"/><text x="45.2380%" y="399.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="44.9880%" y="373" width="0.1604%" height="15" fill="rgb(240,24,36)" fg:x="561" fg:w="2"/><text x="45.2380%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="44.9880%" y="357" width="0.1604%" height="15" fill="rgb(227,154,19)" fg:x="561" fg:w="2"/><text x="45.2380%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="44.9880%" y="341" width="0.1604%" height="15" fill="rgb(231,2,48)" fg:x="561" fg:w="2"/><text x="45.2380%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="44.9880%" y="325" width="0.1604%" height="15" fill="rgb(219,216,0)" fg:x="561" fg:w="2"/><text x="45.2380%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="44.9880%" y="309" width="0.1604%" height="15" fill="rgb(251,88,0)" fg:x="561" fg:w="2"/><text x="45.2380%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="44.9880%" y="293" width="0.1604%" height="15" fill="rgb(242,45,45)" fg:x="561" fg:w="2"/><text x="45.2380%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="44.9880%" y="277" width="0.1604%" height="15" fill="rgb(218,149,45)" fg:x="561" fg:w="2"/><text x="45.2380%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="44.9880%" y="261" width="0.1604%" height="15" fill="rgb(247,194,10)" fg:x="561" fg:w="2"/><text x="45.2380%" y="271.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="45.0682%" y="245" width="0.0802%" height="15" fill="rgb(234,33,37)" fg:x="562" fg:w="1"/><text x="45.3182%" y="255.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="45.0682%" y="229" width="0.0802%" height="15" fill="rgb(218,61,13)" fg:x="562" fg:w="1"/><text x="45.3182%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="45.2285%" y="565" width="0.0802%" height="15" fill="rgb(210,80,52)" fg:x="564" fg:w="1"/><text x="45.4785%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.4691%" y="549" width="0.0802%" height="15" fill="rgb(218,203,27)" fg:x="567" fg:w="1"/><text x="45.7191%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.32%)</title><rect x="45.3087%" y="565" width="0.3208%" height="15" fill="rgb(209,126,33)" fg:x="565" fg:w="4"/><text x="45.5587%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.5493%" y="549" width="0.0802%" height="15" fill="rgb(234,173,41)" fg:x="568" fg:w="1"/><text x="45.7993%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="45.6295%" y="565" width="0.0802%" height="15" fill="rgb(228,166,9)" fg:x="569" fg:w="1"/><text x="45.8795%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="45.6295%" y="549" width="0.0802%" height="15" fill="rgb(208,124,43)" fg:x="569" fg:w="1"/><text x="45.8795%" y="559.50"></text></g><g><title>engine::session::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="45.6295%" y="533" width="0.0802%" height="15" fill="rgb(212,154,38)" fg:x="569" fg:w="1"/><text x="45.8795%" y="543.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="45.6295%" y="517" width="0.0802%" height="15" fill="rgb(246,179,35)" fg:x="569" fg:w="1"/><text x="45.8795%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="45.9503%" y="517" width="0.2406%" height="15" fill="rgb(251,3,50)" fg:x="573" fg:w="3"/><text x="46.2003%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="45.9503%" y="501" width="0.2406%" height="15" fill="rgb(219,96,8)" fg:x="573" fg:w="3"/><text x="46.2003%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.1107%" y="485" width="0.0802%" height="15" fill="rgb(251,216,33)" fg:x="575" fg:w="1"/><text x="46.3607%" y="495.50"></text></g><g><title>engine::identifiers::model::get_gid (8 samples, 0.64%)</title><rect x="45.7097%" y="565" width="0.6415%" height="15" fill="rgb(243,145,29)" fg:x="570" fg:w="8"/><text x="45.9597%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (8 samples, 0.64%)</title><rect x="45.7097%" y="549" width="0.6415%" height="15" fill="rgb(210,75,20)" fg:x="570" fg:w="8"/><text x="45.9597%" y="559.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (8 samples, 0.64%)</title><rect x="45.7097%" y="533" width="0.6415%" height="15" fill="rgb(235,56,8)" fg:x="570" fg:w="8"/><text x="45.9597%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="46.1909%" y="517" width="0.1604%" height="15" fill="rgb(226,175,49)" fg:x="576" fg:w="2"/><text x="46.4409%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.2711%" y="501" width="0.0802%" height="15" fill="rgb(242,204,23)" fg:x="577" fg:w="1"/><text x="46.5211%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="46.4314%" y="549" width="0.0802%" height="15" fill="rgb(225,104,24)" fg:x="579" fg:w="1"/><text x="46.6814%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="46.4314%" y="533" width="0.0802%" height="15" fill="rgb(253,34,1)" fg:x="579" fg:w="1"/><text x="46.6814%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.5116%" y="533" width="0.0802%" height="15" fill="rgb(233,199,23)" fg:x="580" fg:w="1"/><text x="46.7616%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.5116%" y="517" width="0.0802%" height="15" fill="rgb(247,7,51)" fg:x="580" fg:w="1"/><text x="46.7616%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.5116%" y="501" width="0.0802%" height="15" fill="rgb(214,146,12)" fg:x="580" fg:w="1"/><text x="46.7616%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.5116%" y="485" width="0.0802%" height="15" fill="rgb(234,181,43)" fg:x="580" fg:w="1"/><text x="46.7616%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.5116%" y="469" width="0.0802%" height="15" fill="rgb(239,148,6)" fg:x="580" fg:w="1"/><text x="46.7616%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.5116%" y="453" width="0.0802%" height="15" fill="rgb(206,151,17)" fg:x="580" fg:w="1"/><text x="46.7616%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.5116%" y="437" width="0.0802%" height="15" fill="rgb(213,215,10)" fg:x="580" fg:w="1"/><text x="46.7616%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="46.5116%" y="421" width="0.0802%" height="15" fill="rgb(215,220,44)" fg:x="580" fg:w="1"/><text x="46.7616%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="46.5116%" y="405" width="0.0802%" height="15" fill="rgb(245,205,37)" fg:x="580" fg:w="1"/><text x="46.7616%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="46.5116%" y="389" width="0.0802%" height="15" fill="rgb(245,130,43)" fg:x="580" fg:w="1"/><text x="46.7616%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="46.5116%" y="373" width="0.0802%" height="15" fill="rgb(231,227,38)" fg:x="580" fg:w="1"/><text x="46.7616%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="46.5918%" y="533" width="0.0802%" height="15" fill="rgb(233,185,4)" fg:x="581" fg:w="1"/><text x="46.8418%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="46.5918%" y="517" width="0.0802%" height="15" fill="rgb(224,154,43)" fg:x="581" fg:w="1"/><text x="46.8418%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="46.7522%" y="501" width="0.3208%" height="15" fill="rgb(235,156,15)" fg:x="583" fg:w="4"/><text x="47.0022%" y="511.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="46.7522%" y="485" width="0.3208%" height="15" fill="rgb(211,55,43)" fg:x="583" fg:w="4"/><text x="47.0022%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="46.8324%" y="469" width="0.2406%" height="15" fill="rgb(247,149,40)" fg:x="584" fg:w="3"/><text x="47.0824%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="46.8324%" y="453" width="0.2406%" height="15" fill="rgb(232,171,16)" fg:x="584" fg:w="3"/><text x="47.0824%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="46.9928%" y="437" width="0.0802%" height="15" fill="rgb(215,117,49)" fg:x="586" fg:w="1"/><text x="47.2428%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="46.9928%" y="421" width="0.0802%" height="15" fill="rgb(246,194,11)" fg:x="586" fg:w="1"/><text x="47.2428%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="46.9928%" y="405" width="0.0802%" height="15" fill="rgb(242,101,44)" fg:x="586" fg:w="1"/><text x="47.2428%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.56%)</title><rect x="46.6720%" y="517" width="0.5613%" height="15" fill="rgb(226,174,6)" fg:x="582" fg:w="7"/><text x="46.9220%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="47.0730%" y="501" width="0.1604%" height="15" fill="rgb(213,150,20)" fg:x="587" fg:w="2"/><text x="47.3230%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="47.1532%" y="485" width="0.0802%" height="15" fill="rgb(222,124,42)" fg:x="588" fg:w="1"/><text x="47.4032%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.1532%" y="469" width="0.0802%" height="15" fill="rgb(250,19,47)" fg:x="588" fg:w="1"/><text x="47.4032%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="47.3136%" y="501" width="0.0802%" height="15" fill="rgb(241,217,19)" fg:x="590" fg:w="1"/><text x="47.5636%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="47.3937%" y="501" width="0.3208%" height="15" fill="rgb(207,210,34)" fg:x="591" fg:w="4"/><text x="47.6437%" y="511.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="47.4739%" y="485" width="0.2406%" height="15" fill="rgb(244,45,4)" fg:x="592" fg:w="3"/><text x="47.7239%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="47.4739%" y="469" width="0.2406%" height="15" fill="rgb(252,134,50)" fg:x="592" fg:w="3"/><text x="47.7239%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="47.5541%" y="453" width="0.1604%" height="15" fill="rgb(238,74,2)" fg:x="593" fg:w="2"/><text x="47.8041%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="47.7947%" y="485" width="0.2406%" height="15" fill="rgb(226,58,46)" fg:x="596" fg:w="3"/><text x="48.0447%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="47.9551%" y="469" width="0.0802%" height="15" fill="rgb(232,83,35)" fg:x="598" fg:w="1"/><text x="48.2051%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="48.0353%" y="469" width="0.1604%" height="15" fill="rgb(212,148,47)" fg:x="599" fg:w="2"/><text x="48.2853%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="48.1957%" y="469" width="0.0802%" height="15" fill="rgb(235,29,1)" fg:x="601" fg:w="1"/><text x="48.4457%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="48.3561%" y="453" width="0.3208%" height="15" fill="rgb(247,55,37)" fg:x="603" fg:w="4"/><text x="48.6061%" y="463.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="48.3561%" y="437" width="0.3208%" height="15" fill="rgb(222,48,3)" fg:x="603" fg:w="4"/><text x="48.6061%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="48.4362%" y="421" width="0.2406%" height="15" fill="rgb(234,21,33)" fg:x="604" fg:w="3"/><text x="48.6862%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="48.4362%" y="405" width="0.2406%" height="15" fill="rgb(247,178,53)" fg:x="604" fg:w="3"/><text x="48.6862%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="48.5966%" y="389" width="0.0802%" height="15" fill="rgb(225,75,7)" fg:x="606" fg:w="1"/><text x="48.8466%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="48.5966%" y="373" width="0.0802%" height="15" fill="rgb(219,199,7)" fg:x="606" fg:w="1"/><text x="48.8466%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="48.5966%" y="357" width="0.0802%" height="15" fill="rgb(209,93,42)" fg:x="606" fg:w="1"/><text x="48.8466%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="48.7570%" y="437" width="0.4812%" height="15" fill="rgb(240,175,17)" fg:x="608" fg:w="6"/><text x="49.0070%" y="447.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="48.7570%" y="421" width="0.4812%" height="15" fill="rgb(232,106,7)" fg:x="608" fg:w="6"/><text x="49.0070%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="48.9174%" y="405" width="0.3208%" height="15" fill="rgb(242,106,43)" fg:x="610" fg:w="4"/><text x="49.1674%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="48.9976%" y="389" width="0.2406%" height="15" fill="rgb(242,61,37)" fg:x="611" fg:w="3"/><text x="49.2476%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="49.2382%" y="421" width="0.0802%" height="15" fill="rgb(205,72,10)" fg:x="614" fg:w="1"/><text x="49.4882%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="49.2382%" y="405" width="0.0802%" height="15" fill="rgb(214,184,36)" fg:x="614" fg:w="1"/><text x="49.4882%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="49.2382%" y="389" width="0.0802%" height="15" fill="rgb(206,107,18)" fg:x="614" fg:w="1"/><text x="49.4882%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.2382%" y="373" width="0.0802%" height="15" fill="rgb(210,75,5)" fg:x="614" fg:w="1"/><text x="49.4882%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="49.3184%" y="421" width="0.1604%" height="15" fill="rgb(205,3,19)" fg:x="615" fg:w="2"/><text x="49.5684%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="49.3986%" y="405" width="0.0802%" height="15" fill="rgb(207,181,42)" fg:x="616" fg:w="1"/><text x="49.6486%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="49.2382%" y="437" width="0.3208%" height="15" fill="rgb(229,179,43)" fg:x="614" fg:w="4"/><text x="49.4882%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="49.4787%" y="421" width="0.0802%" height="15" fill="rgb(246,95,30)" fg:x="617" fg:w="1"/><text x="49.7287%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="49.4787%" y="405" width="0.0802%" height="15" fill="rgb(234,144,45)" fg:x="617" fg:w="1"/><text x="49.7287%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.4787%" y="389" width="0.0802%" height="15" fill="rgb(250,54,25)" fg:x="617" fg:w="1"/><text x="49.7287%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.12%)</title><rect x="48.6768%" y="453" width="1.1227%" height="15" fill="rgb(215,195,40)" fg:x="607" fg:w="14"/><text x="48.9268%" y="463.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="49.5589%" y="437" width="0.2406%" height="15" fill="rgb(233,188,42)" fg:x="618" fg:w="3"/><text x="49.8089%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="49.6391%" y="421" width="0.1604%" height="15" fill="rgb(247,227,35)" fg:x="619" fg:w="2"/><text x="49.8891%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.60%)</title><rect x="48.2759%" y="469" width="1.6038%" height="15" fill="rgb(249,124,27)" fg:x="602" fg:w="20"/><text x="48.5259%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="49.7995%" y="453" width="0.0802%" height="15" fill="rgb(219,207,25)" fg:x="621" fg:w="1"/><text x="50.0495%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="49.7995%" y="437" width="0.0802%" height="15" fill="rgb(241,216,47)" fg:x="621" fg:w="1"/><text x="50.0495%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24 samples, 1.92%)</title><rect x="48.0353%" y="485" width="1.9246%" height="15" fill="rgb(233,82,50)" fg:x="599" fg:w="24"/><text x="48.2853%" y="495.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="49.8797%" y="469" width="0.0802%" height="15" fill="rgb(232,63,2)" fg:x="622" fg:w="1"/><text x="50.1297%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="49.8797%" y="453" width="0.0802%" height="15" fill="rgb(236,184,28)" fg:x="622" fg:w="1"/><text x="50.1297%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.8797%" y="437" width="0.0802%" height="15" fill="rgb(254,63,27)" fg:x="622" fg:w="1"/><text x="50.1297%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (29 samples, 2.33%)</title><rect x="47.7145%" y="501" width="2.3256%" height="15" fill="rgb(253,106,28)" fg:x="595" fg:w="29"/><text x="47.9645%" y="511.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="49.9599%" y="485" width="0.0802%" height="15" fill="rgb(225,141,39)" fg:x="623" fg:w="1"/><text x="50.2099%" y="495.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (44 samples, 3.53%)</title><rect x="46.6720%" y="533" width="3.5285%" height="15" fill="rgb(222,157,20)" fg:x="582" fg:w="44"/><text x="46.9220%" y="543.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (37 samples, 2.97%)</title><rect x="47.2334%" y="517" width="2.9671%" height="15" fill="rgb(210,190,9)" fg:x="589" fg:w="37"/><text x="47.4834%" y="527.50">ser..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="50.0401%" y="501" width="0.1604%" height="15" fill="rgb(242,167,7)" fg:x="624" fg:w="2"/><text x="50.2901%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="50.1203%" y="485" width="0.0802%" height="15" fill="rgb(227,82,41)" fg:x="625" fg:w="1"/><text x="50.3703%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="50.1203%" y="469" width="0.0802%" height="15" fill="rgb(222,131,13)" fg:x="625" fg:w="1"/><text x="50.3703%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="50.1203%" y="453" width="0.0802%" height="15" fill="rgb(221,98,26)" fg:x="625" fg:w="1"/><text x="50.3703%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="50.1203%" y="437" width="0.0802%" height="15" fill="rgb(251,63,52)" fg:x="625" fg:w="1"/><text x="50.3703%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="50.1203%" y="421" width="0.0802%" height="15" fill="rgb(246,25,43)" fg:x="625" fg:w="1"/><text x="50.3703%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="50.2807%" y="501" width="0.1604%" height="15" fill="rgb(247,167,15)" fg:x="627" fg:w="2"/><text x="50.5307%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="50.5213%" y="485" width="0.1604%" height="15" fill="rgb(240,104,42)" fg:x="630" fg:w="2"/><text x="50.7713%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="50.5213%" y="469" width="0.1604%" height="15" fill="rgb(224,54,6)" fg:x="630" fg:w="2"/><text x="50.7713%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="50.6816%" y="469" width="0.1604%" height="15" fill="rgb(244,108,35)" fg:x="632" fg:w="2"/><text x="50.9316%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="50.9222%" y="453" width="0.1604%" height="15" fill="rgb(216,154,2)" fg:x="635" fg:w="2"/><text x="51.1722%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.0826%" y="453" width="0.0802%" height="15" fill="rgb(222,8,47)" fg:x="637" fg:w="1"/><text x="51.3326%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.1628%" y="421" width="0.0802%" height="15" fill="rgb(252,93,1)" fg:x="638" fg:w="1"/><text x="51.4128%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="51.1628%" y="453" width="0.1604%" height="15" fill="rgb(223,226,51)" fg:x="638" fg:w="2"/><text x="51.4128%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="51.1628%" y="437" width="0.1604%" height="15" fill="rgb(206,147,9)" fg:x="638" fg:w="2"/><text x="51.4128%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.2430%" y="421" width="0.0802%" height="15" fill="rgb(248,180,41)" fg:x="639" fg:w="1"/><text x="51.4930%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.2430%" y="405" width="0.0802%" height="15" fill="rgb(209,47,50)" fg:x="639" fg:w="1"/><text x="51.4930%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.4836%" y="421" width="0.0802%" height="15" fill="rgb(243,65,31)" fg:x="642" fg:w="1"/><text x="51.7336%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="51.5638%" y="421" width="0.1604%" height="15" fill="rgb(228,128,1)" fg:x="643" fg:w="2"/><text x="51.8138%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.6439%" y="405" width="0.0802%" height="15" fill="rgb(231,192,16)" fg:x="644" fg:w="1"/><text x="51.8939%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (20 samples, 1.60%)</title><rect x="50.2005%" y="533" width="1.6038%" height="15" fill="rgb(224,26,40)" fg:x="626" fg:w="20"/><text x="50.4505%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (20 samples, 1.60%)</title><rect x="50.2005%" y="517" width="1.6038%" height="15" fill="rgb(214,192,17)" fg:x="626" fg:w="20"/><text x="50.4505%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.36%)</title><rect x="50.4411%" y="501" width="1.3633%" height="15" fill="rgb(225,147,18)" fg:x="629" fg:w="17"/><text x="50.6911%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.12%)</title><rect x="50.6816%" y="485" width="1.1227%" height="15" fill="rgb(205,35,11)" fg:x="632" fg:w="14"/><text x="50.9316%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="50.8420%" y="469" width="0.9623%" height="15" fill="rgb(242,40,42)" fg:x="634" fg:w="12"/><text x="51.0920%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="51.3232%" y="453" width="0.4812%" height="15" fill="rgb(250,170,13)" fg:x="640" fg:w="6"/><text x="51.5732%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="51.3232%" y="437" width="0.4812%" height="15" fill="rgb(240,161,28)" fg:x="640" fg:w="6"/><text x="51.5732%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="51.7241%" y="421" width="0.0802%" height="15" fill="rgb(245,179,12)" fg:x="645" fg:w="1"/><text x="51.9741%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.7241%" y="405" width="0.0802%" height="15" fill="rgb(250,92,32)" fg:x="645" fg:w="1"/><text x="51.9741%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.7241%" y="389" width="0.0802%" height="15" fill="rgb(233,10,40)" fg:x="645" fg:w="1"/><text x="51.9741%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="51.8845%" y="501" width="0.0802%" height="15" fill="rgb(217,98,1)" fg:x="647" fg:w="1"/><text x="52.1345%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="51.9647%" y="453" width="0.2406%" height="15" fill="rgb(238,202,7)" fg:x="648" fg:w="3"/><text x="52.2147%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.2855%" y="437" width="0.0802%" height="15" fill="rgb(222,91,3)" fg:x="652" fg:w="1"/><text x="52.5355%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.3657%" y="437" width="0.0802%" height="15" fill="rgb(211,170,49)" fg:x="653" fg:w="1"/><text x="52.6157%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.4459%" y="421" width="0.0802%" height="15" fill="rgb(253,139,18)" fg:x="654" fg:w="1"/><text x="52.6959%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="52.5261%" y="421" width="0.2406%" height="15" fill="rgb(222,4,43)" fg:x="655" fg:w="3"/><text x="52.7761%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.6864%" y="405" width="0.0802%" height="15" fill="rgb(207,205,12)" fg:x="657" fg:w="1"/><text x="52.9364%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="52.7666%" y="421" width="0.1604%" height="15" fill="rgb(216,159,46)" fg:x="658" fg:w="2"/><text x="53.0166%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="52.7666%" y="405" width="0.1604%" height="15" fill="rgb(236,115,1)" fg:x="658" fg:w="2"/><text x="53.0166%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="52.7666%" y="389" width="0.1604%" height="15" fill="rgb(251,35,33)" fg:x="658" fg:w="2"/><text x="53.0166%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="51.9647%" y="501" width="1.0425%" height="15" fill="rgb(248,62,51)" fg:x="648" fg:w="13"/><text x="52.2147%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.04%)</title><rect x="51.9647%" y="485" width="1.0425%" height="15" fill="rgb(254,180,19)" fg:x="648" fg:w="13"/><text x="52.2147%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="51.9647%" y="469" width="1.0425%" height="15" fill="rgb(217,100,32)" fg:x="648" fg:w="13"/><text x="52.2147%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="52.2053%" y="453" width="0.8019%" height="15" fill="rgb(224,71,22)" fg:x="651" fg:w="10"/><text x="52.4553%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="52.4459%" y="437" width="0.5613%" height="15" fill="rgb(251,185,33)" fg:x="654" fg:w="7"/><text x="52.6959%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.9270%" y="421" width="0.0802%" height="15" fill="rgb(209,75,48)" fg:x="660" fg:w="1"/><text x="53.1770%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.9270%" y="405" width="0.0802%" height="15" fill="rgb(253,190,16)" fg:x="660" fg:w="1"/><text x="53.1770%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.9270%" y="389" width="0.0802%" height="15" fill="rgb(226,140,1)" fg:x="660" fg:w="1"/><text x="53.1770%" y="399.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.16%)</title><rect x="53.4884%" y="437" width="0.1604%" height="15" fill="rgb(206,75,30)" fg:x="667" fg:w="2"/><text x="53.7384%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="53.4884%" y="421" width="0.1604%" height="15" fill="rgb(231,208,37)" fg:x="667" fg:w="2"/><text x="53.7384%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="53.5686%" y="405" width="0.0802%" height="15" fill="rgb(238,136,40)" fg:x="668" fg:w="1"/><text x="53.8186%" y="415.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="53.8091%" y="373" width="0.0802%" height="15" fill="rgb(247,137,17)" fg:x="671" fg:w="1"/><text x="54.0591%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="53.8091%" y="389" width="0.1604%" height="15" fill="rgb(240,60,40)" fg:x="671" fg:w="2"/><text x="54.0591%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="53.8893%" y="373" width="0.0802%" height="15" fill="rgb(236,68,50)" fg:x="672" fg:w="1"/><text x="54.1393%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="53.6488%" y="437" width="0.4010%" height="15" fill="rgb(230,42,12)" fg:x="669" fg:w="5"/><text x="53.8988%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="53.6488%" y="421" width="0.4010%" height="15" fill="rgb(219,16,16)" fg:x="669" fg:w="5"/><text x="53.8988%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="53.6488%" y="405" width="0.4010%" height="15" fill="rgb(220,38,35)" fg:x="669" fg:w="5"/><text x="53.8988%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="53.9695%" y="389" width="0.0802%" height="15" fill="rgb(228,33,1)" fg:x="673" fg:w="1"/><text x="54.2195%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (10 samples, 0.80%)</title><rect x="53.3280%" y="453" width="0.8019%" height="15" fill="rgb(241,46,31)" fg:x="665" fg:w="10"/><text x="53.5780%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="54.0497%" y="437" width="0.0802%" height="15" fill="rgb(232,58,20)" fg:x="674" fg:w="1"/><text x="54.2997%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (13 samples, 1.04%)</title><rect x="53.1676%" y="469" width="1.0425%" height="15" fill="rgb(206,228,53)" fg:x="663" fg:w="13"/><text x="53.4176%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="54.1299%" y="453" width="0.0802%" height="15" fill="rgb(206,88,33)" fg:x="675" fg:w="1"/><text x="54.3799%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (30 samples, 2.41%)</title><rect x="51.8845%" y="517" width="2.4058%" height="15" fill="rgb(238,69,7)" fg:x="647" fg:w="30"/><text x="52.1345%" y="527.50">&lt;k..</text></g><g><title>treediff::diff::diff (16 samples, 1.28%)</title><rect x="53.0072%" y="501" width="1.2831%" height="15" fill="rgb(250,21,46)" fg:x="661" fg:w="16"/><text x="53.2572%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (15 samples, 1.20%)</title><rect x="53.0874%" y="485" width="1.2029%" height="15" fill="rgb(215,212,21)" fg:x="662" fg:w="15"/><text x="53.3374%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="54.2101%" y="469" width="0.0802%" height="15" fill="rgb(211,35,12)" fg:x="676" fg:w="1"/><text x="54.4601%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.2903%" y="485" width="0.0802%" height="15" fill="rgb(231,184,16)" fg:x="677" fg:w="1"/><text x="54.5403%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.56%)</title><rect x="54.3705%" y="485" width="0.5613%" height="15" fill="rgb(242,140,15)" fg:x="678" fg:w="7"/><text x="54.6205%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.8516%" y="469" width="0.0802%" height="15" fill="rgb(220,37,14)" fg:x="684" fg:w="1"/><text x="55.1016%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="54.9318%" y="485" width="0.1604%" height="15" fill="rgb(223,146,22)" fg:x="685" fg:w="2"/><text x="55.1818%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="55.0120%" y="469" width="0.0802%" height="15" fill="rgb(216,132,15)" fg:x="686" fg:w="1"/><text x="55.2620%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="55.0120%" y="453" width="0.0802%" height="15" fill="rgb(248,83,5)" fg:x="686" fg:w="1"/><text x="55.2620%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="55.0120%" y="437" width="0.0802%" height="15" fill="rgb(231,206,48)" fg:x="686" fg:w="1"/><text x="55.2620%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="55.0922%" y="485" width="0.0802%" height="15" fill="rgb(253,185,37)" fg:x="687" fg:w="1"/><text x="55.3422%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="55.0922%" y="469" width="0.0802%" height="15" fill="rgb(208,21,44)" fg:x="687" fg:w="1"/><text x="55.3422%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.0922%" y="453" width="0.0802%" height="15" fill="rgb(236,125,4)" fg:x="687" fg:w="1"/><text x="55.3422%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="55.1724%" y="485" width="0.3208%" height="15" fill="rgb(226,134,25)" fg:x="688" fg:w="4"/><text x="55.4224%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="55.2526%" y="469" width="0.2406%" height="15" fill="rgb(250,201,12)" fg:x="689" fg:w="3"/><text x="55.5026%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.4130%" y="453" width="0.0802%" height="15" fill="rgb(225,92,18)" fg:x="691" fg:w="1"/><text x="55.6630%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="55.8140%" y="469" width="0.1604%" height="15" fill="rgb(227,35,22)" fg:x="696" fg:w="2"/><text x="56.0640%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.8941%" y="453" width="0.0802%" height="15" fill="rgb(214,180,52)" fg:x="697" fg:w="1"/><text x="56.1441%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (3 samples, 0.24%)</title><rect x="56.3753%" y="453" width="0.2406%" height="15" fill="rgb(233,55,38)" fg:x="703" fg:w="3"/><text x="56.6253%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.7763%" y="437" width="0.0802%" height="15" fill="rgb(249,171,43)" fg:x="708" fg:w="1"/><text x="57.0263%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.7763%" y="421" width="0.0802%" height="15" fill="rgb(239,87,2)" fg:x="708" fg:w="1"/><text x="57.0263%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="57.0970%" y="405" width="0.0802%" height="15" fill="rgb(248,141,5)" fg:x="712" fg:w="1"/><text x="57.3470%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.1772%" y="389" width="0.0802%" height="15" fill="rgb(238,33,42)" fg:x="713" fg:w="1"/><text x="57.4272%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.1772%" y="373" width="0.0802%" height="15" fill="rgb(231,57,19)" fg:x="713" fg:w="1"/><text x="57.4272%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="57.1772%" y="405" width="0.1604%" height="15" fill="rgb(214,78,53)" fg:x="713" fg:w="2"/><text x="57.4272%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="57.2574%" y="389" width="0.0802%" height="15" fill="rgb(206,132,29)" fg:x="714" fg:w="1"/><text x="57.5074%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.2574%" y="373" width="0.0802%" height="15" fill="rgb(248,174,31)" fg:x="714" fg:w="1"/><text x="57.5074%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (7 samples, 0.56%)</title><rect x="56.8565%" y="437" width="0.5613%" height="15" fill="rgb(221,87,13)" fg:x="709" fg:w="7"/><text x="57.1065%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="56.8565%" y="421" width="0.5613%" height="15" fill="rgb(223,197,17)" fg:x="709" fg:w="7"/><text x="57.1065%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.3376%" y="405" width="0.0802%" height="15" fill="rgb(220,144,50)" fg:x="715" fg:w="1"/><text x="57.5876%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="57.7386%" y="421" width="0.1604%" height="15" fill="rgb(244,201,11)" fg:x="720" fg:w="2"/><text x="57.9886%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.8990%" y="405" width="0.1604%" height="15" fill="rgb(249,81,34)" fg:x="722" fg:w="2"/><text x="58.1490%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.8990%" y="389" width="0.1604%" height="15" fill="rgb(205,161,12)" fg:x="722" fg:w="2"/><text x="58.1490%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.8990%" y="373" width="0.1604%" height="15" fill="rgb(252,139,50)" fg:x="722" fg:w="2"/><text x="58.1490%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="58.1395%" y="389" width="0.0802%" height="15" fill="rgb(205,169,14)" fg:x="725" fg:w="1"/><text x="58.3895%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.3801%" y="341" width="0.1604%" height="15" fill="rgb(248,198,33)" fg:x="728" fg:w="2"/><text x="58.6301%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.3801%" y="325" width="0.1604%" height="15" fill="rgb(236,23,21)" fg:x="728" fg:w="2"/><text x="58.6301%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="58.4603%" y="309" width="0.0802%" height="15" fill="rgb(231,13,38)" fg:x="729" fg:w="1"/><text x="58.7103%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="58.6207%" y="325" width="0.0802%" height="15" fill="rgb(239,139,21)" fg:x="731" fg:w="1"/><text x="58.8707%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="58.7009%" y="309" width="0.2406%" height="15" fill="rgb(222,164,45)" fg:x="732" fg:w="3"/><text x="58.9509%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="58.7009%" y="293" width="0.2406%" height="15" fill="rgb(230,52,27)" fg:x="732" fg:w="3"/><text x="58.9509%" y="303.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="58.7009%" y="277" width="0.2406%" height="15" fill="rgb(227,143,42)" fg:x="732" fg:w="3"/><text x="58.9509%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="58.7009%" y="325" width="0.3208%" height="15" fill="rgb(249,127,1)" fg:x="732" fg:w="4"/><text x="58.9509%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="58.9415%" y="309" width="0.0802%" height="15" fill="rgb(243,107,26)" fg:x="735" fg:w="1"/><text x="59.1915%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="58.9415%" y="293" width="0.0802%" height="15" fill="rgb(225,7,45)" fg:x="735" fg:w="1"/><text x="59.1915%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.88%)</title><rect x="58.2197%" y="389" width="0.8821%" height="15" fill="rgb(241,88,38)" fg:x="726" fg:w="11"/><text x="58.4697%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.88%)</title><rect x="58.2197%" y="373" width="0.8821%" height="15" fill="rgb(226,121,9)" fg:x="726" fg:w="11"/><text x="58.4697%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="58.2999%" y="357" width="0.8019%" height="15" fill="rgb(253,60,29)" fg:x="727" fg:w="10"/><text x="58.5499%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="58.5405%" y="341" width="0.5613%" height="15" fill="rgb(244,181,39)" fg:x="730" fg:w="7"/><text x="58.7905%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.0217%" y="325" width="0.0802%" height="15" fill="rgb(252,203,31)" fg:x="736" fg:w="1"/><text x="59.2717%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (17 samples, 1.36%)</title><rect x="57.8990%" y="421" width="1.3633%" height="15" fill="rgb(224,120,8)" fg:x="722" fg:w="17"/><text x="58.1490%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 1.20%)</title><rect x="58.0593%" y="405" width="1.2029%" height="15" fill="rgb(205,171,54)" fg:x="724" fg:w="15"/><text x="58.3093%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="59.1018%" y="389" width="0.1604%" height="15" fill="rgb(235,89,11)" fg:x="737" fg:w="2"/><text x="59.3518%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (36 samples, 2.89%)</title><rect x="56.6159%" y="453" width="2.8869%" height="15" fill="rgb(212,180,28)" fg:x="706" fg:w="36"/><text x="56.8659%" y="463.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (26 samples, 2.09%)</title><rect x="57.4178%" y="437" width="2.0850%" height="15" fill="rgb(247,84,49)" fg:x="716" fg:w="26"/><text x="57.6678%" y="447.50">s..</text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="59.2622%" y="421" width="0.2406%" height="15" fill="rgb(236,187,52)" fg:x="739" fg:w="3"/><text x="59.5122%" y="431.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (68 samples, 5.45%)</title><rect x="54.2903%" y="517" width="5.4531%" height="15" fill="rgb(227,24,15)" fg:x="677" fg:w="68"/><text x="54.5403%" y="527.50">kernel:..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (68 samples, 5.45%)</title><rect x="54.2903%" y="501" width="5.4531%" height="15" fill="rgb(227,211,13)" fg:x="677" fg:w="68"/><text x="54.5403%" y="511.50">&lt;serde_..</text></g><g><title>serde::ser::Serializer::collect_map (53 samples, 4.25%)</title><rect x="55.4932%" y="485" width="4.2502%" height="15" fill="rgb(245,52,14)" fg:x="692" fg:w="53"/><text x="55.7432%" y="495.50">serde..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (47 samples, 3.77%)</title><rect x="55.9743%" y="469" width="3.7690%" height="15" fill="rgb(225,185,13)" fg:x="698" fg:w="47"/><text x="56.2243%" y="479.50">serd..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="59.5028%" y="453" width="0.2406%" height="15" fill="rgb(217,160,29)" fg:x="742" fg:w="3"/><text x="59.7528%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.6632%" y="437" width="0.0802%" height="15" fill="rgb(216,115,53)" fg:x="744" fg:w="1"/><text x="59.9132%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="60.1443%" y="405" width="0.0802%" height="15" fill="rgb(236,99,5)" fg:x="750" fg:w="1"/><text x="60.3943%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.3849%" y="341" width="0.0802%" height="15" fill="rgb(222,60,38)" fg:x="753" fg:w="1"/><text x="60.6349%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.3849%" y="325" width="0.0802%" height="15" fill="rgb(212,82,22)" fg:x="753" fg:w="1"/><text x="60.6349%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="60.3849%" y="373" width="0.1604%" height="15" fill="rgb(214,48,28)" fg:x="753" fg:w="2"/><text x="60.6349%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="60.3849%" y="357" width="0.1604%" height="15" fill="rgb(245,196,50)" fg:x="753" fg:w="2"/><text x="60.6349%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.4651%" y="341" width="0.0802%" height="15" fill="rgb(225,159,46)" fg:x="754" fg:w="1"/><text x="60.7151%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.4651%" y="325" width="0.0802%" height="15" fill="rgb(207,195,48)" fg:x="754" fg:w="1"/><text x="60.7151%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.4651%" y="309" width="0.0802%" height="15" fill="rgb(240,73,3)" fg:x="754" fg:w="1"/><text x="60.7151%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="60.7057%" y="293" width="0.2406%" height="15" fill="rgb(245,57,23)" fg:x="757" fg:w="3"/><text x="60.9557%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="60.7057%" y="277" width="0.2406%" height="15" fill="rgb(240,75,18)" fg:x="757" fg:w="3"/><text x="60.9557%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="60.7057%" y="261" width="0.2406%" height="15" fill="rgb(238,168,12)" fg:x="757" fg:w="3"/><text x="60.9557%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="60.7057%" y="245" width="0.2406%" height="15" fill="rgb(226,20,40)" fg:x="757" fg:w="3"/><text x="60.9557%" y="255.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="60.7057%" y="229" width="0.2406%" height="15" fill="rgb(224,130,35)" fg:x="757" fg:w="3"/><text x="60.9557%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="60.6255%" y="325" width="0.4812%" height="15" fill="rgb(225,63,41)" fg:x="756" fg:w="6"/><text x="60.8755%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="60.6255%" y="309" width="0.4812%" height="15" fill="rgb(219,3,3)" fg:x="756" fg:w="6"/><text x="60.8755%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="60.9463%" y="293" width="0.1604%" height="15" fill="rgb(218,157,4)" fg:x="760" fg:w="2"/><text x="61.1963%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="60.9463%" y="277" width="0.1604%" height="15" fill="rgb(232,76,36)" fg:x="760" fg:w="2"/><text x="61.1963%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.0265%" y="261" width="0.0802%" height="15" fill="rgb(247,36,0)" fg:x="761" fg:w="1"/><text x="61.2765%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="60.5453%" y="357" width="0.6415%" height="15" fill="rgb(205,2,34)" fg:x="755" fg:w="8"/><text x="60.7953%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="60.6255%" y="341" width="0.5613%" height="15" fill="rgb(239,136,13)" fg:x="756" fg:w="7"/><text x="60.8755%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.1067%" y="325" width="0.0802%" height="15" fill="rgb(253,122,12)" fg:x="762" fg:w="1"/><text x="61.3567%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.1067%" y="309" width="0.0802%" height="15" fill="rgb(222,174,7)" fg:x="762" fg:w="1"/><text x="61.3567%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.1067%" y="293" width="0.0802%" height="15" fill="rgb(208,191,42)" fg:x="762" fg:w="1"/><text x="61.3567%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="61.1868%" y="357" width="0.2406%" height="15" fill="rgb(237,212,15)" fg:x="763" fg:w="3"/><text x="61.4368%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="61.2670%" y="341" width="0.1604%" height="15" fill="rgb(215,65,20)" fg:x="764" fg:w="2"/><text x="61.5170%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="60.5453%" y="373" width="0.9623%" height="15" fill="rgb(232,103,11)" fg:x="755" fg:w="12"/><text x="60.7953%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.4274%" y="357" width="0.0802%" height="15" fill="rgb(235,148,18)" fg:x="766" fg:w="1"/><text x="61.6774%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.4274%" y="341" width="0.0802%" height="15" fill="rgb(240,173,7)" fg:x="766" fg:w="1"/><text x="61.6774%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.4274%" y="325" width="0.0802%" height="15" fill="rgb(228,182,25)" fg:x="766" fg:w="1"/><text x="61.6774%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (20 samples, 1.60%)</title><rect x="59.9840%" y="421" width="1.6038%" height="15" fill="rgb(247,3,52)" fg:x="748" fg:w="20"/><text x="60.2340%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 1.36%)</title><rect x="60.2245%" y="405" width="1.3633%" height="15" fill="rgb(226,155,8)" fg:x="751" fg:w="17"/><text x="60.4745%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 1.36%)</title><rect x="60.2245%" y="389" width="1.3633%" height="15" fill="rgb(243,195,38)" fg:x="751" fg:w="17"/><text x="60.4745%" y="399.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="61.5076%" y="373" width="0.0802%" height="15" fill="rgb(254,181,33)" fg:x="767" fg:w="1"/><text x="61.7576%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (3 samples, 0.24%)</title><rect x="61.6680%" y="405" width="0.2406%" height="15" fill="rgb(232,98,23)" fg:x="769" fg:w="3"/><text x="61.9180%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (7 samples, 0.56%)</title><rect x="61.5878%" y="421" width="0.5613%" height="15" fill="rgb(205,23,10)" fg:x="768" fg:w="7"/><text x="61.8378%" y="431.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="61.9086%" y="405" width="0.2406%" height="15" fill="rgb(212,124,38)" fg:x="772" fg:w="3"/><text x="62.1586%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (29 samples, 2.33%)</title><rect x="59.9840%" y="453" width="2.3256%" height="15" fill="rgb(228,207,2)" fg:x="748" fg:w="29"/><text x="60.2340%" y="463.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (29 samples, 2.33%)</title><rect x="59.9840%" y="437" width="2.3256%" height="15" fill="rgb(215,120,22)" fg:x="748" fg:w="29"/><text x="60.2340%" y="447.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="62.1492%" y="421" width="0.1604%" height="15" fill="rgb(251,172,33)" fg:x="775" fg:w="2"/><text x="62.3992%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="62.1492%" y="405" width="0.1604%" height="15" fill="rgb(250,83,2)" fg:x="775" fg:w="2"/><text x="62.3992%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.2294%" y="389" width="0.0802%" height="15" fill="rgb(210,132,53)" fg:x="776" fg:w="1"/><text x="62.4794%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="62.3897%" y="437" width="0.0802%" height="15" fill="rgb(221,208,36)" fg:x="778" fg:w="1"/><text x="62.6397%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="62.3095%" y="453" width="0.2406%" height="15" fill="rgb(205,192,46)" fg:x="777" fg:w="3"/><text x="62.5595%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.4699%" y="437" width="0.0802%" height="15" fill="rgb(223,163,14)" fg:x="779" fg:w="1"/><text x="62.7199%" y="447.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (203 samples, 16.28%)</title><rect x="46.3512%" y="565" width="16.2791%" height="15" fill="rgb(218,41,28)" fg:x="578" fg:w="203"/><text x="46.6012%" y="575.50">engine::internal::Entitie..</text></g><g><title>engine::session::SavesEntities::check_for_changes (201 samples, 16.12%)</title><rect x="46.5116%" y="549" width="16.1187%" height="15" fill="rgb(235,104,10)" fg:x="580" fg:w="201"/><text x="46.7616%" y="559.50">engine::session::SavesEnt..</text></g><g><title>kernel::model::any_entity_changes (135 samples, 10.83%)</title><rect x="51.8043%" y="533" width="10.8260%" height="15" fill="rgb(246,17,4)" fg:x="646" fg:w="135"/><text x="52.0543%" y="543.50">kernel::model::a..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (36 samples, 2.89%)</title><rect x="59.7434%" y="517" width="2.8869%" height="15" fill="rgb(240,7,16)" fg:x="745" fg:w="36"/><text x="59.9934%" y="527.50">se..</text></g><g><title>serde_json::de::from_trait (36 samples, 2.89%)</title><rect x="59.7434%" y="501" width="2.8869%" height="15" fill="rgb(213,160,23)" fg:x="745" fg:w="36"/><text x="59.9934%" y="511.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (36 samples, 2.89%)</title><rect x="59.7434%" y="485" width="2.8869%" height="15" fill="rgb(251,179,49)" fg:x="745" fg:w="36"/><text x="59.9934%" y="495.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (36 samples, 2.89%)</title><rect x="59.7434%" y="469" width="2.8869%" height="15" fill="rgb(247,198,10)" fg:x="745" fg:w="36"/><text x="59.9934%" y="479.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.5501%" y="453" width="0.0802%" height="15" fill="rgb(220,65,29)" fg:x="780" fg:w="1"/><text x="62.8001%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.5501%" y="437" width="0.0802%" height="15" fill="rgb(237,171,28)" fg:x="780" fg:w="1"/><text x="62.8001%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.5501%" y="421" width="0.0802%" height="15" fill="rgb(228,44,26)" fg:x="780" fg:w="1"/><text x="62.8001%" y="431.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="62.7105%" y="533" width="0.0802%" height="15" fill="rgb(216,210,27)" fg:x="782" fg:w="1"/><text x="62.9605%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.7105%" y="517" width="0.0802%" height="15" fill="rgb(252,10,17)" fg:x="782" fg:w="1"/><text x="62.9605%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.7105%" y="501" width="0.0802%" height="15" fill="rgb(214,172,30)" fg:x="782" fg:w="1"/><text x="62.9605%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.7105%" y="485" width="0.0802%" height="15" fill="rgb(253,130,48)" fg:x="782" fg:w="1"/><text x="62.9605%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.7105%" y="469" width="0.0802%" height="15" fill="rgb(226,99,43)" fg:x="782" fg:w="1"/><text x="62.9605%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.7105%" y="453" width="0.0802%" height="15" fill="rgb(239,111,26)" fg:x="782" fg:w="1"/><text x="62.9605%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.7105%" y="437" width="0.0802%" height="15" fill="rgb(240,27,53)" fg:x="782" fg:w="1"/><text x="62.9605%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.7105%" y="421" width="0.0802%" height="15" fill="rgb(254,163,12)" fg:x="782" fg:w="1"/><text x="62.9605%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.7105%" y="405" width="0.0802%" height="15" fill="rgb(225,51,48)" fg:x="782" fg:w="1"/><text x="62.9605%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.7105%" y="389" width="0.0802%" height="15" fill="rgb(205,19,32)" fg:x="782" fg:w="1"/><text x="62.9605%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.7105%" y="373" width="0.0802%" height="15" fill="rgb(218,119,26)" fg:x="782" fg:w="1"/><text x="62.9605%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.7105%" y="357" width="0.0802%" height="15" fill="rgb(231,173,33)" fg:x="782" fg:w="1"/><text x="62.9605%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.7105%" y="341" width="0.0802%" height="15" fill="rgb(241,100,29)" fg:x="782" fg:w="1"/><text x="62.9605%" y="351.50"></text></g><g><title>engine::session::Session::save_entity_changes (221 samples, 17.72%)</title><rect x="45.1484%" y="581" width="17.7225%" height="15" fill="rgb(250,194,34)" fg:x="563" fg:w="221"/><text x="45.3984%" y="591.50">engine::session::Session::sa..</text></g><g><title>engine::session::Session::world (3 samples, 0.24%)</title><rect x="62.6303%" y="565" width="0.2406%" height="15" fill="rgb(215,23,50)" fg:x="781" fg:w="3"/><text x="62.8803%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="62.6303%" y="549" width="0.2406%" height="15" fill="rgb(206,49,37)" fg:x="781" fg:w="3"/><text x="62.8803%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="62.7907%" y="533" width="0.0802%" height="15" fill="rgb(247,39,21)" fg:x="783" fg:w="1"/><text x="63.0407%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="62.7907%" y="517" width="0.0802%" height="15" fill="rgb(209,220,15)" fg:x="783" fg:w="1"/><text x="63.0407%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="62.7907%" y="501" width="0.0802%" height="15" fill="rgb(206,41,33)" fg:x="783" fg:w="1"/><text x="63.0407%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="62.7907%" y="485" width="0.0802%" height="15" fill="rgb(221,225,45)" fg:x="783" fg:w="1"/><text x="63.0407%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="62.7907%" y="469" width="0.0802%" height="15" fill="rgb(216,27,18)" fg:x="783" fg:w="1"/><text x="63.0407%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="62.7907%" y="453" width="0.0802%" height="15" fill="rgb(250,193,34)" fg:x="783" fg:w="1"/><text x="63.0407%" y="463.50"></text></g><g><title>clock_getres (1 samples, 0.08%)</title><rect x="62.8709%" y="517" width="0.0802%" height="15" fill="rgb(227,215,20)" fg:x="784" fg:w="1"/><text x="63.1209%" y="527.50"></text></g><g><title>engine::session::Session::close (226 samples, 18.12%)</title><rect x="44.9078%" y="597" width="18.1235%" height="15" fill="rgb(242,211,27)" fg:x="560" fg:w="226"/><text x="45.1578%" y="607.50">engine::session::Session::cl..</text></g><g><title>std::time::Instant::elapsed (2 samples, 0.16%)</title><rect x="62.8709%" y="581" width="0.1604%" height="15" fill="rgb(229,190,30)" fg:x="784" fg:w="2"/><text x="63.1209%" y="591.50"></text></g><g><title>std::time::Instant::now (2 samples, 0.16%)</title><rect x="62.8709%" y="565" width="0.1604%" height="15" fill="rgb(253,31,29)" fg:x="784" fg:w="2"/><text x="63.1209%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (2 samples, 0.16%)</title><rect x="62.8709%" y="549" width="0.1604%" height="15" fill="rgb(229,177,52)" fg:x="784" fg:w="2"/><text x="63.1209%" y="559.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="62.8709%" y="533" width="0.1604%" height="15" fill="rgb(226,88,8)" fg:x="784" fg:w="2"/><text x="63.1209%" y="543.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="62.9511%" y="517" width="0.0802%" height="15" fill="rgb(214,55,27)" fg:x="785" fg:w="1"/><text x="63.2011%" y="527.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="63.1917%" y="501" width="0.0802%" height="15" fill="rgb(233,202,5)" fg:x="788" fg:w="1"/><text x="63.4417%" y="511.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="63.1917%" y="485" width="0.0802%" height="15" fill="rgb(251,49,30)" fg:x="788" fg:w="1"/><text x="63.4417%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (1 samples, 0.08%)</title><rect x="63.6728%" y="421" width="0.0802%" height="15" fill="rgb(235,18,52)" fg:x="794" fg:w="1"/><text x="63.9228%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="63.6728%" y="405" width="0.0802%" height="15" fill="rgb(250,111,51)" fg:x="794" fg:w="1"/><text x="63.9228%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="63.6728%" y="389" width="0.0802%" height="15" fill="rgb(218,13,25)" fg:x="794" fg:w="1"/><text x="63.9228%" y="399.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="63.6728%" y="373" width="0.0802%" height="15" fill="rgb(248,96,7)" fg:x="794" fg:w="1"/><text x="63.9228%" y="383.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="63.6728%" y="357" width="0.0802%" height="15" fill="rgb(217,31,15)" fg:x="794" fg:w="1"/><text x="63.9228%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="63.6728%" y="341" width="0.0802%" height="15" fill="rgb(228,59,49)" fg:x="794" fg:w="1"/><text x="63.9228%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="63.6728%" y="325" width="0.0802%" height="15" fill="rgb(210,152,38)" fg:x="794" fg:w="1"/><text x="63.9228%" y="335.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="63.6728%" y="309" width="0.0802%" height="15" fill="rgb(206,71,11)" fg:x="794" fg:w="1"/><text x="63.9228%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="63.6728%" y="293" width="0.0802%" height="15" fill="rgb(244,199,5)" fg:x="794" fg:w="1"/><text x="63.9228%" y="303.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="63.6728%" y="277" width="0.0802%" height="15" fill="rgb(253,49,1)" fg:x="794" fg:w="1"/><text x="63.9228%" y="287.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="63.6728%" y="261" width="0.0802%" height="15" fill="rgb(225,206,40)" fg:x="794" fg:w="1"/><text x="63.9228%" y="271.50"></text></g><g><title>&lt;&amp;kernel::model::EntityPtr as core::convert::Into&lt;kernel::model::entity::EntityRef&gt;&gt;::into (2 samples, 0.16%)</title><rect x="63.9134%" y="373" width="0.1604%" height="15" fill="rgb(243,116,47)" fg:x="797" fg:w="2"/><text x="64.1634%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.9936%" y="357" width="0.0802%" height="15" fill="rgb(219,225,16)" fg:x="798" fg:w="1"/><text x="64.2436%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.9936%" y="341" width="0.0802%" height="15" fill="rgb(233,29,47)" fg:x="798" fg:w="1"/><text x="64.2436%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.9936%" y="325" width="0.0802%" height="15" fill="rgb(250,179,18)" fg:x="798" fg:w="1"/><text x="64.2436%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.9936%" y="309" width="0.0802%" height="15" fill="rgb(215,176,6)" fg:x="798" fg:w="1"/><text x="64.2436%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.9936%" y="293" width="0.0802%" height="15" fill="rgb(214,117,39)" fg:x="798" fg:w="1"/><text x="64.2436%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="63.9936%" y="277" width="0.0802%" height="15" fill="rgb(247,183,36)" fg:x="798" fg:w="1"/><text x="64.2436%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="63.9936%" y="261" width="0.0802%" height="15" fill="rgb(237,200,3)" fg:x="798" fg:w="1"/><text x="64.2436%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.3144%" y="261" width="0.0802%" height="15" fill="rgb(212,220,24)" fg:x="802" fg:w="1"/><text x="64.5644%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.3144%" y="245" width="0.0802%" height="15" fill="rgb(245,216,20)" fg:x="802" fg:w="1"/><text x="64.5644%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.3144%" y="229" width="0.0802%" height="15" fill="rgb(219,124,7)" fg:x="802" fg:w="1"/><text x="64.5644%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.3144%" y="213" width="0.0802%" height="15" fill="rgb(227,167,8)" fg:x="802" fg:w="1"/><text x="64.5644%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.3144%" y="197" width="0.0802%" height="15" fill="rgb(241,37,2)" fg:x="802" fg:w="1"/><text x="64.5644%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.3144%" y="181" width="0.0802%" height="15" fill="rgb(238,134,33)" fg:x="802" fg:w="1"/><text x="64.5644%" y="191.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.3144%" y="165" width="0.0802%" height="15" fill="rgb(248,48,27)" fg:x="802" fg:w="1"/><text x="64.5644%" y="175.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.3144%" y="149" width="0.0802%" height="15" fill="rgb(212,14,16)" fg:x="802" fg:w="1"/><text x="64.5644%" y="159.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.3144%" y="133" width="0.0802%" height="15" fill="rgb(217,205,37)" fg:x="802" fg:w="1"/><text x="64.5644%" y="143.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="64.3144%" y="117" width="0.0802%" height="15" fill="rgb(233,185,47)" fg:x="802" fg:w="1"/><text x="64.5644%" y="127.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="64.3144%" y="101" width="0.0802%" height="15" fill="rgb(244,88,8)" fg:x="802" fg:w="1"/><text x="64.5644%" y="111.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="64.3144%" y="309" width="0.1604%" height="15" fill="rgb(213,0,20)" fg:x="802" fg:w="2"/><text x="64.5644%" y="319.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="64.3144%" y="293" width="0.1604%" height="15" fill="rgb(238,159,36)" fg:x="802" fg:w="2"/><text x="64.5644%" y="303.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="64.3144%" y="277" width="0.1604%" height="15" fill="rgb(253,173,17)" fg:x="802" fg:w="2"/><text x="64.5644%" y="287.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="64.3945%" y="261" width="0.0802%" height="15" fill="rgb(221,23,28)" fg:x="803" fg:w="1"/><text x="64.6445%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.3945%" y="245" width="0.0802%" height="15" fill="rgb(218,113,15)" fg:x="803" fg:w="1"/><text x="64.6445%" y="255.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="64.3945%" y="229" width="0.0802%" height="15" fill="rgb(233,58,3)" fg:x="803" fg:w="1"/><text x="64.6445%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.3945%" y="213" width="0.0802%" height="15" fill="rgb(250,46,35)" fg:x="803" fg:w="1"/><text x="64.6445%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="64.3945%" y="197" width="0.0802%" height="15" fill="rgb(210,169,11)" fg:x="803" fg:w="1"/><text x="64.6445%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.3945%" y="181" width="0.0802%" height="15" fill="rgb(246,88,19)" fg:x="803" fg:w="1"/><text x="64.6445%" y="191.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="64.3945%" y="165" width="0.0802%" height="15" fill="rgb(206,81,49)" fg:x="803" fg:w="1"/><text x="64.6445%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.3945%" y="149" width="0.0802%" height="15" fill="rgb(232,144,18)" fg:x="803" fg:w="1"/><text x="64.6445%" y="159.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="64.4747%" y="261" width="0.2406%" height="15" fill="rgb(235,2,27)" fg:x="804" fg:w="3"/><text x="64.7247%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="64.4747%" y="245" width="0.2406%" height="15" fill="rgb(239,157,39)" fg:x="804" fg:w="3"/><text x="64.7247%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.5549%" y="229" width="0.1604%" height="15" fill="rgb(220,11,17)" fg:x="805" fg:w="2"/><text x="64.8049%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.5549%" y="213" width="0.1604%" height="15" fill="rgb(243,94,50)" fg:x="805" fg:w="2"/><text x="64.8049%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.5549%" y="197" width="0.1604%" height="15" fill="rgb(218,22,0)" fg:x="805" fg:w="2"/><text x="64.8049%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.5549%" y="181" width="0.1604%" height="15" fill="rgb(249,70,21)" fg:x="805" fg:w="2"/><text x="64.8049%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.6351%" y="165" width="0.0802%" height="15" fill="rgb(245,111,46)" fg:x="806" fg:w="1"/><text x="64.8851%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.7153%" y="165" width="0.0802%" height="15" fill="rgb(244,183,12)" fg:x="807" fg:w="1"/><text x="64.9653%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.7153%" y="149" width="0.0802%" height="15" fill="rgb(207,117,0)" fg:x="807" fg:w="1"/><text x="64.9653%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.7153%" y="133" width="0.0802%" height="15" fill="rgb(206,20,43)" fg:x="807" fg:w="1"/><text x="64.9653%" y="143.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (7 samples, 0.56%)</title><rect x="64.3144%" y="341" width="0.5613%" height="15" fill="rgb(221,104,11)" fg:x="802" fg:w="7"/><text x="64.5644%" y="351.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (7 samples, 0.56%)</title><rect x="64.3144%" y="325" width="0.5613%" height="15" fill="rgb(254,36,50)" fg:x="802" fg:w="7"/><text x="64.5644%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="64.4747%" y="309" width="0.4010%" height="15" fill="rgb(252,17,15)" fg:x="804" fg:w="5"/><text x="64.7247%" y="319.50"></text></g><g><title>kernel::model::scopes::load_props (5 samples, 0.40%)</title><rect x="64.4747%" y="293" width="0.4010%" height="15" fill="rgb(219,129,43)" fg:x="804" fg:w="5"/><text x="64.7247%" y="303.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (5 samples, 0.40%)</title><rect x="64.4747%" y="277" width="0.4010%" height="15" fill="rgb(205,34,45)" fg:x="804" fg:w="5"/><text x="64.7247%" y="287.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="64.7153%" y="261" width="0.1604%" height="15" fill="rgb(251,201,32)" fg:x="807" fg:w="2"/><text x="64.9653%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.7153%" y="245" width="0.1604%" height="15" fill="rgb(205,56,0)" fg:x="807" fg:w="2"/><text x="64.9653%" y="255.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="64.7153%" y="229" width="0.1604%" height="15" fill="rgb(211,193,27)" fg:x="807" fg:w="2"/><text x="64.9653%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.7153%" y="213" width="0.1604%" height="15" fill="rgb(231,100,42)" fg:x="807" fg:w="2"/><text x="64.9653%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="64.7153%" y="197" width="0.1604%" height="15" fill="rgb(245,85,27)" fg:x="807" fg:w="2"/><text x="64.9653%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.7153%" y="181" width="0.1604%" height="15" fill="rgb(241,76,24)" fg:x="807" fg:w="2"/><text x="64.9653%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.7955%" y="165" width="0.0802%" height="15" fill="rgb(249,157,15)" fg:x="808" fg:w="1"/><text x="65.0455%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.8757%" y="325" width="0.0802%" height="15" fill="rgb(222,218,25)" fg:x="809" fg:w="1"/><text x="65.1257%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.9559%" y="293" width="0.0802%" height="15" fill="rgb(252,156,52)" fg:x="810" fg:w="1"/><text x="65.2059%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.9559%" y="277" width="0.0802%" height="15" fill="rgb(211,185,7)" fg:x="810" fg:w="1"/><text x="65.2059%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.9559%" y="261" width="0.0802%" height="15" fill="rgb(234,108,24)" fg:x="810" fg:w="1"/><text x="65.2059%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.9559%" y="245" width="0.0802%" height="15" fill="rgb(227,218,2)" fg:x="810" fg:w="1"/><text x="65.2059%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.9559%" y="229" width="0.0802%" height="15" fill="rgb(224,0,36)" fg:x="810" fg:w="1"/><text x="65.2059%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.9559%" y="213" width="0.0802%" height="15" fill="rgb(233,201,10)" fg:x="810" fg:w="1"/><text x="65.2059%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.9559%" y="197" width="0.0802%" height="15" fill="rgb(252,209,14)" fg:x="810" fg:w="1"/><text x="65.2059%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.9559%" y="181" width="0.0802%" height="15" fill="rgb(205,93,49)" fg:x="810" fg:w="1"/><text x="65.2059%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.9559%" y="165" width="0.0802%" height="15" fill="rgb(234,116,45)" fg:x="810" fg:w="1"/><text x="65.2059%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.9559%" y="149" width="0.0802%" height="15" fill="rgb(248,89,35)" fg:x="810" fg:w="1"/><text x="65.2059%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.9559%" y="133" width="0.0802%" height="15" fill="rgb(233,167,45)" fg:x="810" fg:w="1"/><text x="65.2059%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.9559%" y="117" width="0.0802%" height="15" fill="rgb(248,228,14)" fg:x="810" fg:w="1"/><text x="65.2059%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.9559%" y="101" width="0.0802%" height="15" fill="rgb(246,91,14)" fg:x="810" fg:w="1"/><text x="65.2059%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.9559%" y="85" width="0.0802%" height="15" fill="rgb(227,142,5)" fg:x="810" fg:w="1"/><text x="65.2059%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.9559%" y="69" width="0.0802%" height="15" fill="rgb(221,63,33)" fg:x="810" fg:w="1"/><text x="65.2059%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.9559%" y="53" width="0.0802%" height="15" fill="rgb(233,49,0)" fg:x="810" fg:w="1"/><text x="65.2059%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.9559%" y="37" width="0.0802%" height="15" fill="rgb(251,115,38)" fg:x="810" fg:w="1"/><text x="65.2059%" y="47.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.1965%" y="197" width="0.0802%" height="15" fill="rgb(231,214,32)" fg:x="813" fg:w="1"/><text x="65.4465%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.1965%" y="181" width="0.0802%" height="15" fill="rgb(248,73,46)" fg:x="813" fg:w="1"/><text x="65.4465%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.1965%" y="165" width="0.0802%" height="15" fill="rgb(237,156,4)" fg:x="813" fg:w="1"/><text x="65.4465%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="64.8757%" y="341" width="0.4812%" height="15" fill="rgb(227,132,2)" fg:x="809" fg:w="6"/><text x="65.1257%" y="351.50"></text></g><g><title>kernel::model::scopes::load_props (5 samples, 0.40%)</title><rect x="64.9559%" y="325" width="0.4010%" height="15" fill="rgb(248,161,9)" fg:x="810" fg:w="5"/><text x="65.2059%" y="335.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (5 samples, 0.40%)</title><rect x="64.9559%" y="309" width="0.4010%" height="15" fill="rgb(238,77,38)" fg:x="810" fg:w="5"/><text x="65.2059%" y="319.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (4 samples, 0.32%)</title><rect x="65.0361%" y="293" width="0.3208%" height="15" fill="rgb(222,166,40)" fg:x="811" fg:w="4"/><text x="65.2861%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="65.0361%" y="277" width="0.3208%" height="15" fill="rgb(214,168,45)" fg:x="811" fg:w="4"/><text x="65.2861%" y="287.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="65.1965%" y="261" width="0.1604%" height="15" fill="rgb(226,64,37)" fg:x="813" fg:w="2"/><text x="65.4465%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.1965%" y="245" width="0.1604%" height="15" fill="rgb(232,210,43)" fg:x="813" fg:w="2"/><text x="65.4465%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="65.1965%" y="229" width="0.1604%" height="15" fill="rgb(214,76,33)" fg:x="813" fg:w="2"/><text x="65.4465%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.1965%" y="213" width="0.1604%" height="15" fill="rgb(210,78,5)" fg:x="813" fg:w="2"/><text x="65.4465%" y="223.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="65.2767%" y="197" width="0.0802%" height="15" fill="rgb(211,107,37)" fg:x="814" fg:w="1"/><text x="65.5267%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.2767%" y="181" width="0.0802%" height="15" fill="rgb(249,67,16)" fg:x="814" fg:w="1"/><text x="65.5267%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.2767%" y="165" width="0.0802%" height="15" fill="rgb(222,114,31)" fg:x="814" fg:w="1"/><text x="65.5267%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.2767%" y="149" width="0.0802%" height="15" fill="rgb(242,118,19)" fg:x="814" fg:w="1"/><text x="65.5267%" y="159.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="65.3569%" y="181" width="0.1604%" height="15" fill="rgb(223,115,1)" fg:x="815" fg:w="2"/><text x="65.6069%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="65.3569%" y="165" width="0.1604%" height="15" fill="rgb(241,182,54)" fg:x="815" fg:w="2"/><text x="65.6069%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="65.3569%" y="149" width="0.1604%" height="15" fill="rgb(244,166,36)" fg:x="815" fg:w="2"/><text x="65.6069%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.3569%" y="133" width="0.1604%" height="15" fill="rgb(241,52,43)" fg:x="815" fg:w="2"/><text x="65.6069%" y="143.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="65.3569%" y="117" width="0.1604%" height="15" fill="rgb(236,82,9)" fg:x="815" fg:w="2"/><text x="65.6069%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (2 samples, 0.16%)</title><rect x="65.3569%" y="101" width="0.1604%" height="15" fill="rgb(241,119,0)" fg:x="815" fg:w="2"/><text x="65.6069%" y="111.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="65.3569%" y="85" width="0.1604%" height="15" fill="rgb(221,19,22)" fg:x="815" fg:w="2"/><text x="65.6069%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="65.3569%" y="213" width="0.2406%" height="15" fill="rgb(254,144,35)" fg:x="815" fg:w="3"/><text x="65.6069%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="65.3569%" y="197" width="0.2406%" height="15" fill="rgb(246,132,30)" fg:x="815" fg:w="3"/><text x="65.6069%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.5172%" y="181" width="0.0802%" height="15" fill="rgb(234,69,28)" fg:x="817" fg:w="1"/><text x="65.7672%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="65.5974%" y="213" width="0.0802%" height="15" fill="rgb(219,106,47)" fg:x="818" fg:w="1"/><text x="65.8474%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="65.5974%" y="197" width="0.0802%" height="15" fill="rgb(218,79,24)" fg:x="818" fg:w="1"/><text x="65.8474%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.5974%" y="181" width="0.0802%" height="15" fill="rgb(225,26,21)" fg:x="818" fg:w="1"/><text x="65.8474%" y="191.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="65.6776%" y="165" width="0.0802%" height="15" fill="rgb(217,68,49)" fg:x="819" fg:w="1"/><text x="65.9276%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="65.6776%" y="149" width="0.0802%" height="15" fill="rgb(220,204,28)" fg:x="819" fg:w="1"/><text x="65.9276%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.6776%" y="133" width="0.0802%" height="15" fill="rgb(237,208,43)" fg:x="819" fg:w="1"/><text x="65.9276%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.6776%" y="117" width="0.0802%" height="15" fill="rgb(213,97,42)" fg:x="819" fg:w="1"/><text x="65.9276%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="65.6776%" y="101" width="0.0802%" height="15" fill="rgb(238,96,52)" fg:x="819" fg:w="1"/><text x="65.9276%" y="111.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="65.7578%" y="149" width="0.0802%" height="15" fill="rgb(228,14,13)" fg:x="820" fg:w="1"/><text x="66.0078%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="65.3569%" y="261" width="0.5613%" height="15" fill="rgb(219,123,13)" fg:x="815" fg:w="7"/><text x="65.6069%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="65.3569%" y="245" width="0.5613%" height="15" fill="rgb(216,144,17)" fg:x="815" fg:w="7"/><text x="65.6069%" y="255.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="65.3569%" y="229" width="0.5613%" height="15" fill="rgb(230,228,29)" fg:x="815" fg:w="7"/><text x="65.6069%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="65.6776%" y="213" width="0.2406%" height="15" fill="rgb(233,18,5)" fg:x="819" fg:w="3"/><text x="65.9276%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="65.6776%" y="197" width="0.2406%" height="15" fill="rgb(233,197,12)" fg:x="819" fg:w="3"/><text x="65.9276%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="65.6776%" y="181" width="0.2406%" height="15" fill="rgb(234,140,29)" fg:x="819" fg:w="3"/><text x="65.9276%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.7578%" y="165" width="0.1604%" height="15" fill="rgb(233,113,19)" fg:x="820" fg:w="2"/><text x="66.0078%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.8380%" y="149" width="0.0802%" height="15" fill="rgb(246,209,13)" fg:x="821" fg:w="1"/><text x="66.0880%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.8380%" y="133" width="0.0802%" height="15" fill="rgb(242,79,54)" fg:x="821" fg:w="1"/><text x="66.0880%" y="143.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.8380%" y="117" width="0.0802%" height="15" fill="rgb(219,73,16)" fg:x="821" fg:w="1"/><text x="66.0880%" y="127.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.8380%" y="101" width="0.0802%" height="15" fill="rgb(224,52,10)" fg:x="821" fg:w="1"/><text x="66.0880%" y="111.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (8 samples, 0.64%)</title><rect x="65.3569%" y="325" width="0.6415%" height="15" fill="rgb(237,179,5)" fg:x="815" fg:w="8"/><text x="65.6069%" y="335.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (8 samples, 0.64%)</title><rect x="65.3569%" y="309" width="0.6415%" height="15" fill="rgb(231,20,6)" fg:x="815" fg:w="8"/><text x="65.6069%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="65.3569%" y="293" width="0.6415%" height="15" fill="rgb(253,171,45)" fg:x="815" fg:w="8"/><text x="65.6069%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="65.3569%" y="277" width="0.6415%" height="15" fill="rgb(230,75,49)" fg:x="815" fg:w="8"/><text x="65.6069%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.9182%" y="261" width="0.0802%" height="15" fill="rgb(216,83,46)" fg:x="822" fg:w="1"/><text x="66.1682%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.9182%" y="245" width="0.0802%" height="15" fill="rgb(236,56,9)" fg:x="822" fg:w="1"/><text x="66.1682%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="65.9182%" y="229" width="0.0802%" height="15" fill="rgb(215,28,34)" fg:x="822" fg:w="1"/><text x="66.1682%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="66.0786%" y="245" width="0.1604%" height="15" fill="rgb(230,222,20)" fg:x="824" fg:w="2"/><text x="66.3286%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.1588%" y="229" width="0.0802%" height="15" fill="rgb(235,209,51)" fg:x="825" fg:w="1"/><text x="66.4088%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.2390%" y="245" width="0.0802%" height="15" fill="rgb(235,167,1)" fg:x="826" fg:w="1"/><text x="66.4890%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="66.3192%" y="213" width="0.1604%" height="15" fill="rgb(248,220,0)" fg:x="827" fg:w="2"/><text x="66.5692%" y="223.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="66.3192%" y="197" width="0.1604%" height="15" fill="rgb(239,0,18)" fg:x="827" fg:w="2"/><text x="66.5692%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="66.4796%" y="213" width="0.1604%" height="15" fill="rgb(229,179,11)" fg:x="829" fg:w="2"/><text x="66.7296%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="66.7201%" y="197" width="0.1604%" height="15" fill="rgb(226,116,53)" fg:x="832" fg:w="2"/><text x="66.9701%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="66.7201%" y="181" width="0.1604%" height="15" fill="rgb(218,1,49)" fg:x="832" fg:w="2"/><text x="66.9701%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.8003%" y="165" width="0.0802%" height="15" fill="rgb(208,184,47)" fg:x="833" fg:w="1"/><text x="67.0503%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="66.8003%" y="149" width="0.0802%" height="15" fill="rgb(238,174,3)" fg:x="833" fg:w="1"/><text x="67.0503%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.8003%" y="133" width="0.0802%" height="15" fill="rgb(247,188,6)" fg:x="833" fg:w="1"/><text x="67.0503%" y="143.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.8003%" y="117" width="0.0802%" height="15" fill="rgb(211,165,46)" fg:x="833" fg:w="1"/><text x="67.0503%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.8003%" y="101" width="0.0802%" height="15" fill="rgb(222,190,10)" fg:x="833" fg:w="1"/><text x="67.0503%" y="111.50"></text></g><g><title>engine::internal::Entities::add_persisted (34 samples, 2.73%)</title><rect x="64.2342%" y="357" width="2.7265%" height="15" fill="rgb(206,185,3)" fg:x="801" fg:w="34"/><text x="64.4842%" y="367.50">en..</text></g><g><title>kernel::model::deserialize_entity (20 samples, 1.60%)</title><rect x="65.3569%" y="341" width="1.6038%" height="15" fill="rgb(244,125,37)" fg:x="815" fg:w="20"/><text x="65.6069%" y="351.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.96%)</title><rect x="65.9984%" y="325" width="0.9623%" height="15" fill="rgb(211,43,7)" fg:x="823" fg:w="12"/><text x="66.2484%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12 samples, 0.96%)</title><rect x="65.9984%" y="309" width="0.9623%" height="15" fill="rgb(250,41,42)" fg:x="823" fg:w="12"/><text x="66.2484%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="65.9984%" y="293" width="0.9623%" height="15" fill="rgb(254,54,42)" fg:x="823" fg:w="12"/><text x="66.2484%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.88%)</title><rect x="66.0786%" y="277" width="0.8821%" height="15" fill="rgb(213,71,43)" fg:x="824" fg:w="11"/><text x="66.3286%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="66.0786%" y="261" width="0.8821%" height="15" fill="rgb(249,3,44)" fg:x="824" fg:w="11"/><text x="66.3286%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="66.3192%" y="245" width="0.6415%" height="15" fill="rgb(229,80,41)" fg:x="827" fg:w="8"/><text x="66.5692%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="66.3192%" y="229" width="0.6415%" height="15" fill="rgb(231,25,28)" fg:x="827" fg:w="8"/><text x="66.5692%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="66.6399%" y="213" width="0.3208%" height="15" fill="rgb(208,79,48)" fg:x="831" fg:w="4"/><text x="66.8899%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="66.8805%" y="197" width="0.0802%" height="15" fill="rgb(207,196,38)" fg:x="834" fg:w="1"/><text x="67.1305%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.8805%" y="181" width="0.0802%" height="15" fill="rgb(228,105,49)" fg:x="834" fg:w="1"/><text x="67.1305%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.8805%" y="165" width="0.0802%" height="15" fill="rgb(237,99,15)" fg:x="834" fg:w="1"/><text x="67.1305%" y="175.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="66.8805%" y="149" width="0.0802%" height="15" fill="rgb(224,207,46)" fg:x="834" fg:w="1"/><text x="67.1305%" y="159.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (40 samples, 3.21%)</title><rect x="63.8332%" y="389" width="3.2077%" height="15" fill="rgb(249,117,50)" fg:x="796" fg:w="40"/><text x="64.0832%" y="399.50">&lt;en..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (37 samples, 2.97%)</title><rect x="64.0738%" y="373" width="2.9671%" height="15" fill="rgb(248,17,13)" fg:x="799" fg:w="37"/><text x="64.3238%" y="383.50">&lt;en..</text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="66.9607%" y="357" width="0.0802%" height="15" fill="rgb(228,187,36)" fg:x="835" fg:w="1"/><text x="67.2107%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.9607%" y="341" width="0.0802%" height="15" fill="rgb(234,132,20)" fg:x="835" fg:w="1"/><text x="67.2107%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.9607%" y="325" width="0.0802%" height="15" fill="rgb(209,170,46)" fg:x="835" fg:w="1"/><text x="67.2107%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.9607%" y="309" width="0.0802%" height="15" fill="rgb(237,23,19)" fg:x="835" fg:w="1"/><text x="67.2107%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.9607%" y="293" width="0.0802%" height="15" fill="rgb(227,21,26)" fg:x="835" fg:w="1"/><text x="67.2107%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.9607%" y="277" width="0.0802%" height="15" fill="rgb(222,220,48)" fg:x="835" fg:w="1"/><text x="67.2107%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.9607%" y="261" width="0.0802%" height="15" fill="rgb(214,9,16)" fg:x="835" fg:w="1"/><text x="67.2107%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.9607%" y="245" width="0.0802%" height="15" fill="rgb(209,73,30)" fg:x="835" fg:w="1"/><text x="67.2107%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.9607%" y="229" width="0.0802%" height="15" fill="rgb(207,20,33)" fg:x="835" fg:w="1"/><text x="67.2107%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.9607%" y="213" width="0.0802%" height="15" fill="rgb(219,153,12)" fg:x="835" fg:w="1"/><text x="67.2107%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.9607%" y="197" width="0.0802%" height="15" fill="rgb(235,97,25)" fg:x="835" fg:w="1"/><text x="67.2107%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.9607%" y="181" width="0.0802%" height="15" fill="rgb(244,30,34)" fg:x="835" fg:w="1"/><text x="67.2107%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.9607%" y="165" width="0.0802%" height="15" fill="rgb(214,106,45)" fg:x="835" fg:w="1"/><text x="67.2107%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.9607%" y="149" width="0.0802%" height="15" fill="rgb(226,41,9)" fg:x="835" fg:w="1"/><text x="67.2107%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.0409%" y="357" width="0.0802%" height="15" fill="rgb(253,139,29)" fg:x="836" fg:w="1"/><text x="67.2909%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.0409%" y="341" width="0.0802%" height="15" fill="rgb(213,205,39)" fg:x="836" fg:w="1"/><text x="67.2909%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.0409%" y="325" width="0.0802%" height="15" fill="rgb(209,27,10)" fg:x="836" fg:w="1"/><text x="67.2909%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.0409%" y="309" width="0.0802%" height="15" fill="rgb(249,142,16)" fg:x="836" fg:w="1"/><text x="67.2909%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.0409%" y="293" width="0.0802%" height="15" fill="rgb(242,65,12)" fg:x="836" fg:w="1"/><text x="67.2909%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.0409%" y="277" width="0.0802%" height="15" fill="rgb(232,48,10)" fg:x="836" fg:w="1"/><text x="67.2909%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.0409%" y="261" width="0.0802%" height="15" fill="rgb(253,67,19)" fg:x="836" fg:w="1"/><text x="67.2909%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.0409%" y="245" width="0.0802%" height="15" fill="rgb(227,93,29)" fg:x="836" fg:w="1"/><text x="67.2909%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.0409%" y="229" width="0.0802%" height="15" fill="rgb(226,189,53)" fg:x="836" fg:w="1"/><text x="67.2909%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.0409%" y="213" width="0.0802%" height="15" fill="rgb(223,224,1)" fg:x="836" fg:w="1"/><text x="67.2909%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.0409%" y="197" width="0.0802%" height="15" fill="rgb(221,84,32)" fg:x="836" fg:w="1"/><text x="67.2909%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.0409%" y="181" width="0.0802%" height="15" fill="rgb(214,189,28)" fg:x="836" fg:w="1"/><text x="67.2909%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.0409%" y="165" width="0.0802%" height="15" fill="rgb(234,7,52)" fg:x="836" fg:w="1"/><text x="67.2909%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="67.0409%" y="389" width="0.1604%" height="15" fill="rgb(249,73,31)" fg:x="836" fg:w="2"/><text x="67.2909%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.0409%" y="373" width="0.1604%" height="15" fill="rgb(253,153,41)" fg:x="836" fg:w="2"/><text x="67.2909%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.1211%" y="357" width="0.0802%" height="15" fill="rgb(249,52,34)" fg:x="837" fg:w="1"/><text x="67.3711%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="67.2013%" y="389" width="0.0802%" height="15" fill="rgb(236,177,47)" fg:x="838" fg:w="1"/><text x="67.4513%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.6022%" y="325" width="0.0802%" height="15" fill="rgb(252,185,45)" fg:x="843" fg:w="1"/><text x="67.8522%" y="335.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (51 samples, 4.09%)</title><rect x="63.6728%" y="437" width="4.0898%" height="15" fill="rgb(251,15,30)" fg:x="794" fg:w="51"/><text x="63.9228%" y="447.50">&lt;plu..</text></g><g><title>kernel::model::entry::Entry::scope (50 samples, 4.01%)</title><rect x="63.7530%" y="421" width="4.0096%" height="15" fill="rgb(233,31,4)" fg:x="795" fg:w="50"/><text x="64.0030%" y="431.50">kern..</text></g><g><title>kernel::model::entity::Entity::load_scope (50 samples, 4.01%)</title><rect x="63.7530%" y="405" width="4.0096%" height="15" fill="rgb(254,44,24)" fg:x="795" fg:w="50"/><text x="64.0030%" y="415.50">kern..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="67.2815%" y="389" width="0.4812%" height="15" fill="rgb(218,54,1)" fg:x="839" fg:w="6"/><text x="67.5315%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="67.2815%" y="373" width="0.4812%" height="15" fill="rgb(243,209,39)" fg:x="839" fg:w="6"/><text x="67.5315%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="67.4419%" y="357" width="0.3208%" height="15" fill="rgb(206,75,33)" fg:x="841" fg:w="4"/><text x="67.6919%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="67.5221%" y="341" width="0.2406%" height="15" fill="rgb(223,108,18)" fg:x="842" fg:w="3"/><text x="67.7721%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.6824%" y="325" width="0.0802%" height="15" fill="rgb(244,89,31)" fg:x="844" fg:w="1"/><text x="67.9324%" y="335.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (55 samples, 4.41%)</title><rect x="63.4322%" y="453" width="4.4106%" height="15" fill="rgb(222,167,27)" fg:x="791" fg:w="55"/><text x="63.6822%" y="463.50">engin..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="67.7626%" y="437" width="0.0802%" height="15" fill="rgb(247,41,16)" fg:x="845" fg:w="1"/><text x="68.0126%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="67.7626%" y="421" width="0.0802%" height="15" fill="rgb(233,168,40)" fg:x="845" fg:w="1"/><text x="68.0126%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="67.7626%" y="405" width="0.0802%" height="15" fill="rgb(205,211,8)" fg:x="845" fg:w="1"/><text x="68.0126%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="67.7626%" y="389" width="0.0802%" height="15" fill="rgb(238,105,11)" fg:x="845" fg:w="1"/><text x="68.0126%" y="399.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="67.7626%" y="373" width="0.0802%" height="15" fill="rgb(223,142,52)" fg:x="845" fg:w="1"/><text x="68.0126%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="67.7626%" y="357" width="0.0802%" height="15" fill="rgb(238,51,33)" fg:x="845" fg:w="1"/><text x="68.0126%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="67.7626%" y="341" width="0.0802%" height="15" fill="rgb(231,188,43)" fg:x="845" fg:w="1"/><text x="68.0126%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="67.7626%" y="325" width="0.0802%" height="15" fill="rgb(216,92,17)" fg:x="845" fg:w="1"/><text x="68.0126%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="67.7626%" y="309" width="0.0802%" height="15" fill="rgb(228,2,40)" fg:x="845" fg:w="1"/><text x="68.0126%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="67.7626%" y="293" width="0.0802%" height="15" fill="rgb(226,73,15)" fg:x="845" fg:w="1"/><text x="68.0126%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="67.7626%" y="277" width="0.0802%" height="15" fill="rgb(227,66,46)" fg:x="845" fg:w="1"/><text x="68.0126%" y="287.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="67.7626%" y="261" width="0.0802%" height="15" fill="rgb(209,71,6)" fg:x="845" fg:w="1"/><text x="68.0126%" y="271.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="67.7626%" y="245" width="0.0802%" height="15" fill="rgb(246,100,25)" fg:x="845" fg:w="1"/><text x="68.0126%" y="255.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="67.7626%" y="229" width="0.0802%" height="15" fill="rgb(248,185,27)" fg:x="845" fg:w="1"/><text x="68.0126%" y="239.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="67.7626%" y="213" width="0.0802%" height="15" fill="rgb(225,118,47)" fg:x="845" fg:w="1"/><text x="68.0126%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="67.8428%" y="421" width="0.0802%" height="15" fill="rgb(220,185,44)" fg:x="846" fg:w="1"/><text x="68.0928%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.0032%" y="389" width="0.0802%" height="15" fill="rgb(227,95,24)" fg:x="848" fg:w="1"/><text x="68.2532%" y="399.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (62 samples, 4.97%)</title><rect x="63.3520%" y="469" width="4.9719%" height="15" fill="rgb(252,84,24)" fg:x="790" fg:w="62"/><text x="63.6020%" y="479.50">&lt;engin..</text></g><g><title>kernel::plugins::apply_middleware (6 samples, 0.48%)</title><rect x="67.8428%" y="453" width="0.4812%" height="15" fill="rgb(240,34,44)" fg:x="846" fg:w="6"/><text x="68.0928%" y="463.50"></text></g><g><title>kernel::plugins::MiddlewareNext::handle (6 samples, 0.48%)</title><rect x="67.8428%" y="437" width="0.4812%" height="15" fill="rgb(209,72,54)" fg:x="846" fg:w="6"/><text x="68.0928%" y="447.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::Middleware&gt;::handle (5 samples, 0.40%)</title><rect x="67.9230%" y="421" width="0.4010%" height="15" fill="rgb(226,19,45)" fg:x="847" fg:w="5"/><text x="68.1730%" y="431.50"></text></g><g><title>kernel::plugins::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="68.0032%" y="405" width="0.3208%" height="15" fill="rgb(246,7,45)" fg:x="848" fg:w="4"/><text x="68.2532%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="68.0834%" y="389" width="0.2406%" height="15" fill="rgb(225,45,2)" fg:x="849" fg:w="3"/><text x="68.3334%" y="399.50"></text></g><g><title>kernel::plugins::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="68.0834%" y="373" width="0.2406%" height="15" fill="rgb(221,80,29)" fg:x="849" fg:w="3"/><text x="68.3334%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="68.0834%" y="357" width="0.2406%" height="15" fill="rgb(228,11,19)" fg:x="849" fg:w="3"/><text x="68.3334%" y="367.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.16%)</title><rect x="68.1636%" y="341" width="0.1604%" height="15" fill="rgb(243,17,21)" fg:x="850" fg:w="2"/><text x="68.4136%" y="351.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (2 samples, 0.16%)</title><rect x="68.1636%" y="325" width="0.1604%" height="15" fill="rgb(243,88,8)" fg:x="850" fg:w="2"/><text x="68.4136%" y="335.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="68.1636%" y="309" width="0.1604%" height="15" fill="rgb(214,17,9)" fg:x="850" fg:w="2"/><text x="68.4136%" y="319.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.2438%" y="293" width="0.0802%" height="15" fill="rgb(232,169,15)" fg:x="851" fg:w="1"/><text x="68.4938%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.2438%" y="277" width="0.0802%" height="15" fill="rgb(232,86,53)" fg:x="851" fg:w="1"/><text x="68.4938%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.2438%" y="261" width="0.0802%" height="15" fill="rgb(222,100,4)" fg:x="851" fg:w="1"/><text x="68.4938%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.2438%" y="245" width="0.0802%" height="15" fill="rgb(253,151,38)" fg:x="851" fg:w="1"/><text x="68.4938%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.2438%" y="229" width="0.0802%" height="15" fill="rgb(238,215,29)" fg:x="851" fg:w="1"/><text x="68.4938%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.2438%" y="213" width="0.0802%" height="15" fill="rgb(205,128,53)" fg:x="851" fg:w="1"/><text x="68.4938%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="68.2438%" y="197" width="0.0802%" height="15" fill="rgb(248,183,14)" fg:x="851" fg:w="1"/><text x="68.4938%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="68.2438%" y="181" width="0.0802%" height="15" fill="rgb(244,172,35)" fg:x="851" fg:w="1"/><text x="68.4938%" y="191.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.4844%" y="405" width="0.0802%" height="15" fill="rgb(234,93,19)" fg:x="854" fg:w="1"/><text x="68.7344%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.4844%" y="389" width="0.0802%" height="15" fill="rgb(227,109,7)" fg:x="854" fg:w="1"/><text x="68.7344%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.4844%" y="373" width="0.0802%" height="15" fill="rgb(233,136,54)" fg:x="854" fg:w="1"/><text x="68.7344%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.4844%" y="357" width="0.0802%" height="15" fill="rgb(233,19,40)" fg:x="854" fg:w="1"/><text x="68.7344%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.4844%" y="341" width="0.0802%" height="15" fill="rgb(247,41,18)" fg:x="854" fg:w="1"/><text x="68.7344%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.4844%" y="325" width="0.0802%" height="15" fill="rgb(220,34,34)" fg:x="854" fg:w="1"/><text x="68.7344%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="68.4844%" y="309" width="0.0802%" height="15" fill="rgb(222,135,32)" fg:x="854" fg:w="1"/><text x="68.7344%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="68.4844%" y="293" width="0.0802%" height="15" fill="rgb(214,80,19)" fg:x="854" fg:w="1"/><text x="68.7344%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.5646%" y="245" width="0.0802%" height="15" fill="rgb(234,54,46)" fg:x="855" fg:w="1"/><text x="68.8146%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.5646%" y="229" width="0.0802%" height="15" fill="rgb(251,48,23)" fg:x="855" fg:w="1"/><text x="68.8146%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.5646%" y="213" width="0.0802%" height="15" fill="rgb(254,109,52)" fg:x="855" fg:w="1"/><text x="68.8146%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.5646%" y="197" width="0.0802%" height="15" fill="rgb(240,186,19)" fg:x="855" fg:w="1"/><text x="68.8146%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.5646%" y="181" width="0.0802%" height="15" fill="rgb(246,187,17)" fg:x="855" fg:w="1"/><text x="68.8146%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.5646%" y="165" width="0.0802%" height="15" fill="rgb(212,21,5)" fg:x="855" fg:w="1"/><text x="68.8146%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.5646%" y="149" width="0.0802%" height="15" fill="rgb(225,185,18)" fg:x="855" fg:w="1"/><text x="68.8146%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.5646%" y="133" width="0.0802%" height="15" fill="rgb(245,114,17)" fg:x="855" fg:w="1"/><text x="68.8146%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.5646%" y="117" width="0.0802%" height="15" fill="rgb(223,164,24)" fg:x="855" fg:w="1"/><text x="68.8146%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.5646%" y="101" width="0.0802%" height="15" fill="rgb(211,228,3)" fg:x="855" fg:w="1"/><text x="68.8146%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.5646%" y="85" width="0.0802%" height="15" fill="rgb(223,16,38)" fg:x="855" fg:w="1"/><text x="68.8146%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.5646%" y="69" width="0.0802%" height="15" fill="rgb(207,31,54)" fg:x="855" fg:w="1"/><text x="68.8146%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.5646%" y="53" width="0.0802%" height="15" fill="rgb(220,39,11)" fg:x="855" fg:w="1"/><text x="68.8146%" y="63.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="68.5646%" y="373" width="0.1604%" height="15" fill="rgb(235,185,0)" fg:x="855" fg:w="2"/><text x="68.8146%" y="383.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="68.5646%" y="357" width="0.1604%" height="15" fill="rgb(249,39,18)" fg:x="855" fg:w="2"/><text x="68.8146%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="68.5646%" y="341" width="0.1604%" height="15" fill="rgb(240,110,33)" fg:x="855" fg:w="2"/><text x="68.8146%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="68.5646%" y="325" width="0.1604%" height="15" fill="rgb(210,92,42)" fg:x="855" fg:w="2"/><text x="68.8146%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.5646%" y="309" width="0.1604%" height="15" fill="rgb(218,215,28)" fg:x="855" fg:w="2"/><text x="68.8146%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.5646%" y="293" width="0.1604%" height="15" fill="rgb(238,215,36)" fg:x="855" fg:w="2"/><text x="68.8146%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.5646%" y="277" width="0.1604%" height="15" fill="rgb(220,31,10)" fg:x="855" fg:w="2"/><text x="68.8146%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.5646%" y="261" width="0.1604%" height="15" fill="rgb(212,93,14)" fg:x="855" fg:w="2"/><text x="68.8146%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.6447%" y="245" width="0.0802%" height="15" fill="rgb(254,207,2)" fg:x="856" fg:w="1"/><text x="68.8947%" y="255.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="68.5646%" y="405" width="0.2406%" height="15" fill="rgb(205,57,44)" fg:x="855" fg:w="3"/><text x="68.8146%" y="415.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="68.5646%" y="389" width="0.2406%" height="15" fill="rgb(226,151,19)" fg:x="855" fg:w="3"/><text x="68.8146%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="68.7249%" y="373" width="0.0802%" height="15" fill="rgb(230,72,30)" fg:x="857" fg:w="1"/><text x="68.9749%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::scopes::Property)&gt; (1 samples, 0.08%)</title><rect x="68.7249%" y="357" width="0.0802%" height="15" fill="rgb(244,0,8)" fg:x="857" fg:w="1"/><text x="68.9749%" y="367.50"></text></g><g><title>kernel::model::scopes::Props::property_named (1 samples, 0.08%)</title><rect x="68.8051%" y="389" width="0.0802%" height="15" fill="rgb(230,192,6)" fg:x="858" fg:w="1"/><text x="69.0551%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="68.8051%" y="373" width="0.0802%" height="15" fill="rgb(233,207,13)" fg:x="858" fg:w="1"/><text x="69.0551%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.8853%" y="261" width="0.0802%" height="15" fill="rgb(206,227,7)" fg:x="859" fg:w="1"/><text x="69.1353%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="68.8853%" y="245" width="0.0802%" height="15" fill="rgb(213,217,25)" fg:x="859" fg:w="1"/><text x="69.1353%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.9655%" y="261" width="0.0802%" height="15" fill="rgb(249,75,4)" fg:x="860" fg:w="1"/><text x="69.2155%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="68.8051%" y="405" width="0.3208%" height="15" fill="rgb(225,114,18)" fg:x="858" fg:w="4"/><text x="69.0551%" y="415.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.24%)</title><rect x="68.8853%" y="389" width="0.2406%" height="15" fill="rgb(211,162,40)" fg:x="859" fg:w="3"/><text x="69.1353%" y="399.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.24%)</title><rect x="68.8853%" y="373" width="0.2406%" height="15" fill="rgb(206,49,29)" fg:x="859" fg:w="3"/><text x="69.1353%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="68.8853%" y="357" width="0.2406%" height="15" fill="rgb(244,8,6)" fg:x="859" fg:w="3"/><text x="69.1353%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="68.8853%" y="341" width="0.2406%" height="15" fill="rgb(231,194,28)" fg:x="859" fg:w="3"/><text x="69.1353%" y="351.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="68.8853%" y="325" width="0.2406%" height="15" fill="rgb(210,69,5)" fg:x="859" fg:w="3"/><text x="69.1353%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="68.8853%" y="309" width="0.2406%" height="15" fill="rgb(216,186,12)" fg:x="859" fg:w="3"/><text x="69.1353%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="68.8853%" y="293" width="0.2406%" height="15" fill="rgb(238,61,15)" fg:x="859" fg:w="3"/><text x="69.1353%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="68.8853%" y="277" width="0.2406%" height="15" fill="rgb(226,104,1)" fg:x="859" fg:w="3"/><text x="69.1353%" y="287.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.0457%" y="261" width="0.0802%" height="15" fill="rgb(229,128,15)" fg:x="861" fg:w="1"/><text x="69.2957%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.0457%" y="245" width="0.0802%" height="15" fill="rgb(247,110,15)" fg:x="861" fg:w="1"/><text x="69.2957%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="69.3665%" y="293" width="0.1604%" height="15" fill="rgb(210,74,48)" fg:x="865" fg:w="2"/><text x="69.6165%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.4467%" y="277" width="0.0802%" height="15" fill="rgb(246,121,10)" fg:x="866" fg:w="1"/><text x="69.6967%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.4467%" y="261" width="0.0802%" height="15" fill="rgb(214,156,37)" fg:x="866" fg:w="1"/><text x="69.6967%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="69.5269%" y="213" width="0.0802%" height="15" fill="rgb(214,210,34)" fg:x="867" fg:w="1"/><text x="69.7769%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.5269%" y="197" width="0.0802%" height="15" fill="rgb(237,93,35)" fg:x="867" fg:w="1"/><text x="69.7769%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="69.5269%" y="181" width="0.0802%" height="15" fill="rgb(206,36,8)" fg:x="867" fg:w="1"/><text x="69.7769%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.5269%" y="165" width="0.0802%" height="15" fill="rgb(208,151,12)" fg:x="867" fg:w="1"/><text x="69.7769%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="69.5269%" y="149" width="0.0802%" height="15" fill="rgb(225,133,52)" fg:x="867" fg:w="1"/><text x="69.7769%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.5269%" y="133" width="0.0802%" height="15" fill="rgb(231,71,53)" fg:x="867" fg:w="1"/><text x="69.7769%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.5269%" y="117" width="0.0802%" height="15" fill="rgb(243,76,21)" fg:x="867" fg:w="1"/><text x="69.7769%" y="127.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.5269%" y="101" width="0.0802%" height="15" fill="rgb(252,144,3)" fg:x="867" fg:w="1"/><text x="69.7769%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.5269%" y="85" width="0.0802%" height="15" fill="rgb(231,199,10)" fg:x="867" fg:w="1"/><text x="69.7769%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="69.5269%" y="245" width="0.2406%" height="15" fill="rgb(215,18,11)" fg:x="867" fg:w="3"/><text x="69.7769%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="69.5269%" y="229" width="0.2406%" height="15" fill="rgb(241,65,24)" fg:x="867" fg:w="3"/><text x="69.7769%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="69.6071%" y="213" width="0.1604%" height="15" fill="rgb(251,192,38)" fg:x="868" fg:w="2"/><text x="69.8571%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="69.6872%" y="197" width="0.0802%" height="15" fill="rgb(205,9,35)" fg:x="869" fg:w="1"/><text x="69.9372%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="69.7674%" y="181" width="0.0802%" height="15" fill="rgb(229,225,49)" fg:x="870" fg:w="1"/><text x="70.0174%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="69.7674%" y="213" width="0.1604%" height="15" fill="rgb(207,125,39)" fg:x="870" fg:w="2"/><text x="70.0174%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.7674%" y="197" width="0.1604%" height="15" fill="rgb(222,78,19)" fg:x="870" fg:w="2"/><text x="70.0174%" y="207.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="69.8476%" y="181" width="0.0802%" height="15" fill="rgb(248,207,20)" fg:x="871" fg:w="1"/><text x="70.0976%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="69.8476%" y="165" width="0.0802%" height="15" fill="rgb(205,103,49)" fg:x="871" fg:w="1"/><text x="70.0976%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="69.5269%" y="277" width="0.4812%" height="15" fill="rgb(216,42,28)" fg:x="867" fg:w="6"/><text x="69.7769%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="69.5269%" y="261" width="0.4812%" height="15" fill="rgb(213,205,53)" fg:x="867" fg:w="6"/><text x="69.7769%" y="271.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="69.7674%" y="245" width="0.2406%" height="15" fill="rgb(239,140,53)" fg:x="870" fg:w="3"/><text x="70.0174%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="69.7674%" y="229" width="0.2406%" height="15" fill="rgb(248,95,9)" fg:x="870" fg:w="3"/><text x="70.0174%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.9278%" y="213" width="0.0802%" height="15" fill="rgb(254,58,47)" fg:x="872" fg:w="1"/><text x="70.1778%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="70.0080%" y="245" width="0.0802%" height="15" fill="rgb(234,227,14)" fg:x="873" fg:w="1"/><text x="70.2580%" y="255.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="70.0882%" y="229" width="0.1604%" height="15" fill="rgb(205,192,45)" fg:x="874" fg:w="2"/><text x="70.3382%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="70.0882%" y="213" width="0.1604%" height="15" fill="rgb(253,187,31)" fg:x="874" fg:w="2"/><text x="70.3382%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.0882%" y="197" width="0.1604%" height="15" fill="rgb(222,6,32)" fg:x="874" fg:w="2"/><text x="70.3382%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="70.0882%" y="181" width="0.1604%" height="15" fill="rgb(249,190,19)" fg:x="874" fg:w="2"/><text x="70.3382%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="70.1684%" y="165" width="0.0802%" height="15" fill="rgb(251,28,20)" fg:x="875" fg:w="1"/><text x="70.4184%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.1684%" y="149" width="0.0802%" height="15" fill="rgb(210,223,40)" fg:x="875" fg:w="1"/><text x="70.4184%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.1684%" y="133" width="0.0802%" height="15" fill="rgb(216,137,22)" fg:x="875" fg:w="1"/><text x="70.4184%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="70.3288%" y="197" width="0.0802%" height="15" fill="rgb(247,39,34)" fg:x="877" fg:w="1"/><text x="70.5788%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.3288%" y="181" width="0.0802%" height="15" fill="rgb(239,43,50)" fg:x="877" fg:w="1"/><text x="70.5788%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.3288%" y="165" width="0.0802%" height="15" fill="rgb(241,212,9)" fg:x="877" fg:w="1"/><text x="70.5788%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="70.4090%" y="197" width="0.1604%" height="15" fill="rgb(205,8,2)" fg:x="878" fg:w="2"/><text x="70.6590%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.4090%" y="181" width="0.1604%" height="15" fill="rgb(217,173,54)" fg:x="878" fg:w="2"/><text x="70.6590%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="70.4090%" y="165" width="0.1604%" height="15" fill="rgb(208,149,52)" fg:x="878" fg:w="2"/><text x="70.6590%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="70.4090%" y="149" width="0.1604%" height="15" fill="rgb(239,99,40)" fg:x="878" fg:w="2"/><text x="70.6590%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.4090%" y="133" width="0.1604%" height="15" fill="rgb(233,214,26)" fg:x="878" fg:w="2"/><text x="70.6590%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="70.4090%" y="117" width="0.1604%" height="15" fill="rgb(231,225,37)" fg:x="878" fg:w="2"/><text x="70.6590%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="70.4892%" y="101" width="0.0802%" height="15" fill="rgb(252,55,35)" fg:x="879" fg:w="1"/><text x="70.7392%" y="111.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.4892%" y="85" width="0.0802%" height="15" fill="rgb(239,43,18)" fg:x="879" fg:w="1"/><text x="70.7392%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.4892%" y="69" width="0.0802%" height="15" fill="rgb(251,125,49)" fg:x="879" fg:w="1"/><text x="70.7392%" y="79.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="70.4892%" y="53" width="0.0802%" height="15" fill="rgb(212,83,54)" fg:x="879" fg:w="1"/><text x="70.7392%" y="63.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (17 samples, 1.36%)</title><rect x="69.2863%" y="325" width="1.3633%" height="15" fill="rgb(250,75,6)" fg:x="864" fg:w="17"/><text x="69.5363%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (17 samples, 1.36%)</title><rect x="69.2863%" y="309" width="1.3633%" height="15" fill="rgb(252,36,40)" fg:x="864" fg:w="17"/><text x="69.5363%" y="319.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::ScopeValue&gt;::deserialize (14 samples, 1.12%)</title><rect x="69.5269%" y="293" width="1.1227%" height="15" fill="rgb(230,91,51)" fg:x="867" fg:w="14"/><text x="69.7769%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="70.0080%" y="277" width="0.6415%" height="15" fill="rgb(212,92,28)" fg:x="873" fg:w="8"/><text x="70.2580%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="70.0080%" y="261" width="0.6415%" height="15" fill="rgb(227,13,22)" fg:x="873" fg:w="8"/><text x="70.2580%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (7 samples, 0.56%)</title><rect x="70.0882%" y="245" width="0.5613%" height="15" fill="rgb(239,204,32)" fg:x="874" fg:w="7"/><text x="70.3382%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="70.2486%" y="229" width="0.4010%" height="15" fill="rgb(228,49,41)" fg:x="876" fg:w="5"/><text x="70.4986%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="70.3288%" y="213" width="0.3208%" height="15" fill="rgb(206,95,6)" fg:x="877" fg:w="4"/><text x="70.5788%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.5694%" y="197" width="0.0802%" height="15" fill="rgb(251,20,14)" fg:x="880" fg:w="1"/><text x="70.8194%" y="207.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (20 samples, 1.60%)</title><rect x="69.1259%" y="389" width="1.6038%" height="15" fill="rgb(214,99,28)" fg:x="862" fg:w="20"/><text x="69.3759%" y="399.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (20 samples, 1.60%)</title><rect x="69.1259%" y="373" width="1.6038%" height="15" fill="rgb(239,122,54)" fg:x="862" fg:w="20"/><text x="69.3759%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (20 samples, 1.60%)</title><rect x="69.1259%" y="357" width="1.6038%" height="15" fill="rgb(218,217,46)" fg:x="862" fg:w="20"/><text x="69.3759%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (20 samples, 1.60%)</title><rect x="69.1259%" y="341" width="1.6038%" height="15" fill="rgb(249,106,28)" fg:x="862" fg:w="20"/><text x="69.3759%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.6496%" y="325" width="0.0802%" height="15" fill="rgb(250,158,18)" fg:x="881" fg:w="1"/><text x="70.8996%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.6496%" y="309" width="0.0802%" height="15" fill="rgb(226,137,29)" fg:x="881" fg:w="1"/><text x="70.8996%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="70.8099%" y="309" width="0.0802%" height="15" fill="rgb(210,188,1)" fg:x="883" fg:w="1"/><text x="71.0599%" y="319.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="70.8099%" y="293" width="0.0802%" height="15" fill="rgb(227,84,42)" fg:x="883" fg:w="1"/><text x="71.0599%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.8901%" y="277" width="0.0802%" height="15" fill="rgb(222,147,48)" fg:x="884" fg:w="1"/><text x="71.1401%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.8901%" y="261" width="0.0802%" height="15" fill="rgb(241,150,43)" fg:x="884" fg:w="1"/><text x="71.1401%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.8901%" y="245" width="0.0802%" height="15" fill="rgb(206,139,52)" fg:x="884" fg:w="1"/><text x="71.1401%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="70.9703%" y="245" width="0.0802%" height="15" fill="rgb(230,63,14)" fg:x="885" fg:w="1"/><text x="71.2203%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.9703%" y="229" width="0.0802%" height="15" fill="rgb(247,8,20)" fg:x="885" fg:w="1"/><text x="71.2203%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="71.0505%" y="245" width="0.4010%" height="15" fill="rgb(213,115,4)" fg:x="886" fg:w="5"/><text x="71.3005%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="71.0505%" y="229" width="0.4010%" height="15" fill="rgb(241,79,49)" fg:x="886" fg:w="5"/><text x="71.3005%" y="239.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="71.0505%" y="213" width="0.4010%" height="15" fill="rgb(222,42,35)" fg:x="886" fg:w="5"/><text x="71.3005%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.4515%" y="181" width="0.0802%" height="15" fill="rgb(247,59,23)" fg:x="891" fg:w="1"/><text x="71.7015%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.5317%" y="181" width="0.0802%" height="15" fill="rgb(247,93,18)" fg:x="892" fg:w="1"/><text x="71.7817%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="70.9703%" y="261" width="0.7217%" height="15" fill="rgb(249,107,47)" fg:x="885" fg:w="9"/><text x="71.2203%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="71.4515%" y="245" width="0.2406%" height="15" fill="rgb(219,27,1)" fg:x="891" fg:w="3"/><text x="71.7015%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="71.4515%" y="229" width="0.2406%" height="15" fill="rgb(217,82,32)" fg:x="891" fg:w="3"/><text x="71.7015%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="71.4515%" y="213" width="0.2406%" height="15" fill="rgb(250,129,47)" fg:x="891" fg:w="3"/><text x="71.7015%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="71.4515%" y="197" width="0.2406%" height="15" fill="rgb(253,88,35)" fg:x="891" fg:w="3"/><text x="71.7015%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="71.6119%" y="181" width="0.0802%" height="15" fill="rgb(245,221,14)" fg:x="893" fg:w="1"/><text x="71.8619%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.6119%" y="165" width="0.0802%" height="15" fill="rgb(217,119,54)" fg:x="893" fg:w="1"/><text x="71.8619%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.6119%" y="149" width="0.0802%" height="15" fill="rgb(247,128,31)" fg:x="893" fg:w="1"/><text x="71.8619%" y="159.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (42 samples, 3.37%)</title><rect x="68.4042%" y="437" width="3.3681%" height="15" fill="rgb(211,99,22)" fg:x="853" fg:w="42"/><text x="68.6542%" y="447.50">&lt;en..</text></g><g><title>engine::internal::Entities::add_persisted (42 samples, 3.37%)</title><rect x="68.4042%" y="421" width="3.3681%" height="15" fill="rgb(212,20,17)" fg:x="853" fg:w="42"/><text x="68.6542%" y="431.50">eng..</text></g><g><title>kernel::model::deserialize_entity (33 samples, 2.65%)</title><rect x="69.1259%" y="405" width="2.6464%" height="15" fill="rgb(209,159,29)" fg:x="862" fg:w="33"/><text x="69.3759%" y="415.50">ke..</text></g><g><title>serde_json::de::from_trait (13 samples, 1.04%)</title><rect x="70.7298%" y="389" width="1.0425%" height="15" fill="rgb(222,177,53)" fg:x="882" fg:w="13"/><text x="70.9798%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13 samples, 1.04%)</title><rect x="70.7298%" y="373" width="1.0425%" height="15" fill="rgb(234,46,43)" fg:x="882" fg:w="13"/><text x="70.9798%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.04%)</title><rect x="70.7298%" y="357" width="1.0425%" height="15" fill="rgb(208,108,14)" fg:x="882" fg:w="13"/><text x="70.9798%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13 samples, 1.04%)</title><rect x="70.7298%" y="341" width="1.0425%" height="15" fill="rgb(226,78,53)" fg:x="882" fg:w="13"/><text x="70.9798%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.04%)</title><rect x="70.7298%" y="325" width="1.0425%" height="15" fill="rgb(230,20,41)" fg:x="882" fg:w="13"/><text x="70.9798%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.88%)</title><rect x="70.8901%" y="309" width="0.8821%" height="15" fill="rgb(213,195,35)" fg:x="884" fg:w="11"/><text x="71.1401%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="70.8901%" y="293" width="0.8821%" height="15" fill="rgb(242,62,36)" fg:x="884" fg:w="11"/><text x="71.1401%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.80%)</title><rect x="70.9703%" y="277" width="0.8019%" height="15" fill="rgb(222,210,37)" fg:x="885" fg:w="10"/><text x="71.2203%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="71.6921%" y="261" width="0.0802%" height="15" fill="rgb(232,107,19)" fg:x="894" fg:w="1"/><text x="71.9421%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.6921%" y="245" width="0.0802%" height="15" fill="rgb(235,85,17)" fg:x="894" fg:w="1"/><text x="71.9421%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.6921%" y="229" width="0.0802%" height="15" fill="rgb(219,195,31)" fg:x="894" fg:w="1"/><text x="71.9421%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.6921%" y="213" width="0.0802%" height="15" fill="rgb(231,183,30)" fg:x="894" fg:w="1"/><text x="71.9421%" y="223.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="71.7723%" y="437" width="0.0802%" height="15" fill="rgb(212,0,11)" fg:x="895" fg:w="1"/><text x="72.0223%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.7723%" y="421" width="0.0802%" height="15" fill="rgb(249,53,54)" fg:x="895" fg:w="1"/><text x="72.0223%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="71.9326%" y="229" width="0.0802%" height="15" fill="rgb(211,118,13)" fg:x="897" fg:w="1"/><text x="72.1826%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (46 samples, 3.69%)</title><rect x="68.4042%" y="453" width="3.6889%" height="15" fill="rgb(237,42,9)" fg:x="853" fg:w="46"/><text x="68.6542%" y="463.50">&lt;eng..</text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="71.8524%" y="437" width="0.2406%" height="15" fill="rgb(227,68,32)" fg:x="896" fg:w="3"/><text x="72.1024%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="71.8524%" y="421" width="0.2406%" height="15" fill="rgb(238,10,7)" fg:x="896" fg:w="3"/><text x="72.1024%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="71.8524%" y="405" width="0.2406%" height="15" fill="rgb(224,42,12)" fg:x="896" fg:w="3"/><text x="72.1024%" y="415.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="71.8524%" y="389" width="0.2406%" height="15" fill="rgb(252,190,5)" fg:x="896" fg:w="3"/><text x="72.1024%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="71.8524%" y="373" width="0.2406%" height="15" fill="rgb(220,214,39)" fg:x="896" fg:w="3"/><text x="72.1024%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="71.8524%" y="357" width="0.2406%" height="15" fill="rgb(247,98,4)" fg:x="896" fg:w="3"/><text x="72.1024%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="71.8524%" y="341" width="0.2406%" height="15" fill="rgb(211,60,12)" fg:x="896" fg:w="3"/><text x="72.1024%" y="351.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="71.8524%" y="325" width="0.2406%" height="15" fill="rgb(224,42,10)" fg:x="896" fg:w="3"/><text x="72.1024%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="71.9326%" y="309" width="0.1604%" height="15" fill="rgb(217,167,4)" fg:x="897" fg:w="2"/><text x="72.1826%" y="319.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="71.9326%" y="293" width="0.1604%" height="15" fill="rgb(253,18,17)" fg:x="897" fg:w="2"/><text x="72.1826%" y="303.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="71.9326%" y="277" width="0.1604%" height="15" fill="rgb(249,186,44)" fg:x="897" fg:w="2"/><text x="72.1826%" y="287.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="71.9326%" y="261" width="0.1604%" height="15" fill="rgb(254,124,54)" fg:x="897" fg:w="2"/><text x="72.1826%" y="271.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="71.9326%" y="245" width="0.1604%" height="15" fill="rgb(220,124,39)" fg:x="897" fg:w="2"/><text x="72.1826%" y="255.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="72.0128%" y="229" width="0.0802%" height="15" fill="rgb(225,96,46)" fg:x="898" fg:w="1"/><text x="72.2628%" y="239.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="72.0128%" y="213" width="0.0802%" height="15" fill="rgb(221,106,12)" fg:x="898" fg:w="1"/><text x="72.2628%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.0930%" y="389" width="0.0802%" height="15" fill="rgb(227,133,23)" fg:x="899" fg:w="1"/><text x="72.3430%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.0930%" y="373" width="0.0802%" height="15" fill="rgb(216,44,52)" fg:x="899" fg:w="1"/><text x="72.3430%" y="383.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.16%)</title><rect x="72.2534%" y="373" width="0.1604%" height="15" fill="rgb(239,149,7)" fg:x="901" fg:w="2"/><text x="72.5034%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.3336%" y="357" width="0.0802%" height="15" fill="rgb(211,157,31)" fg:x="902" fg:w="1"/><text x="72.5836%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="72.3336%" y="341" width="0.0802%" height="15" fill="rgb(206,215,22)" fg:x="902" fg:w="1"/><text x="72.5836%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="72.3336%" y="325" width="0.0802%" height="15" fill="rgb(208,113,15)" fg:x="902" fg:w="1"/><text x="72.5836%" y="335.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (5 samples, 0.40%)</title><rect x="72.0930%" y="453" width="0.4010%" height="15" fill="rgb(207,189,15)" fg:x="899" fg:w="5"/><text x="72.3430%" y="463.50"></text></g><g><title>engine::users::model::username_to_key (5 samples, 0.40%)</title><rect x="72.0930%" y="437" width="0.4010%" height="15" fill="rgb(231,115,4)" fg:x="899" fg:w="5"/><text x="72.3430%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="72.0930%" y="421" width="0.4010%" height="15" fill="rgb(253,117,2)" fg:x="899" fg:w="5"/><text x="72.3430%" y="431.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (5 samples, 0.40%)</title><rect x="72.0930%" y="405" width="0.4010%" height="15" fill="rgb(248,48,24)" fg:x="899" fg:w="5"/><text x="72.3430%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="72.1732%" y="389" width="0.3208%" height="15" fill="rgb(241,28,46)" fg:x="900" fg:w="4"/><text x="72.4232%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.4138%" y="373" width="0.0802%" height="15" fill="rgb(216,165,52)" fg:x="903" fg:w="1"/><text x="72.6638%" y="383.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (116 samples, 9.30%)</title><rect x="63.2719%" y="501" width="9.3023%" height="15" fill="rgb(220,222,34)" fg:x="789" fg:w="116"/><text x="63.5219%" y="511.50">&lt;plugins_core..</text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (115 samples, 9.22%)</title><rect x="63.3520%" y="485" width="9.2221%" height="15" fill="rgb(247,222,49)" fg:x="790" fg:w="115"/><text x="63.6020%" y="495.50">&lt;engine::perf..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (53 samples, 4.25%)</title><rect x="68.3240%" y="469" width="4.2502%" height="15" fill="rgb(240,10,31)" fg:x="852" fg:w="53"/><text x="68.5740%" y="479.50">engin..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="72.4940%" y="453" width="0.0802%" height="15" fill="rgb(221,199,35)" fg:x="904" fg:w="1"/><text x="72.7440%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="72.4940%" y="437" width="0.0802%" height="15" fill="rgb(230,223,11)" fg:x="904" fg:w="1"/><text x="72.7440%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="72.4940%" y="421" width="0.0802%" height="15" fill="rgb(218,82,45)" fg:x="904" fg:w="1"/><text x="72.7440%" y="431.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="72.4940%" y="405" width="0.0802%" height="15" fill="rgb(233,213,33)" fg:x="904" fg:w="1"/><text x="72.7440%" y="415.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="72.4940%" y="389" width="0.0802%" height="15" fill="rgb(210,143,52)" fg:x="904" fg:w="1"/><text x="72.7440%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="72.4940%" y="373" width="0.0802%" height="15" fill="rgb(206,95,4)" fg:x="904" fg:w="1"/><text x="72.7440%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="72.4940%" y="357" width="0.0802%" height="15" fill="rgb(246,164,46)" fg:x="904" fg:w="1"/><text x="72.7440%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="72.4940%" y="341" width="0.0802%" height="15" fill="rgb(213,210,47)" fg:x="904" fg:w="1"/><text x="72.7440%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="72.4940%" y="325" width="0.0802%" height="15" fill="rgb(210,12,38)" fg:x="904" fg:w="1"/><text x="72.7440%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="72.4940%" y="309" width="0.0802%" height="15" fill="rgb(252,192,54)" fg:x="904" fg:w="1"/><text x="72.7440%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="72.4940%" y="293" width="0.0802%" height="15" fill="rgb(242,92,6)" fg:x="904" fg:w="1"/><text x="72.7440%" y="303.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="72.4940%" y="277" width="0.0802%" height="15" fill="rgb(253,154,15)" fg:x="904" fg:w="1"/><text x="72.7440%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (118 samples, 9.46%)</title><rect x="63.1917%" y="517" width="9.4627%" height="15" fill="rgb(209,20,43)" fg:x="788" fg:w="118"/><text x="63.4417%" y="527.50">&lt;core::iter::a..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="72.5742%" y="501" width="0.0802%" height="15" fill="rgb(232,28,49)" fg:x="905" fg:w="1"/><text x="72.8242%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (1 samples, 0.08%)</title><rect x="72.5742%" y="485" width="0.0802%" height="15" fill="rgb(248,131,53)" fg:x="905" fg:w="1"/><text x="72.8242%" y="495.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (119 samples, 9.54%)</title><rect x="63.1917%" y="565" width="9.5429%" height="15" fill="rgb(214,16,30)" fg:x="788" fg:w="119"/><text x="63.4417%" y="575.50">&lt;kernel::plugi..</text></g><g><title>core::iter::adapters::try_process (119 samples, 9.54%)</title><rect x="63.1917%" y="549" width="9.5429%" height="15" fill="rgb(245,16,0)" fg:x="788" fg:w="119"/><text x="63.4417%" y="559.50">core::iter::ad..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (119 samples, 9.54%)</title><rect x="63.1917%" y="533" width="9.5429%" height="15" fill="rgb(245,17,35)" fg:x="788" fg:w="119"/><text x="63.4417%" y="543.50">&lt;alloc::vec::V..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="72.6544%" y="517" width="0.0802%" height="15" fill="rgb(249,27,53)" fg:x="906" fg:w="1"/><text x="72.9044%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="72.6544%" y="501" width="0.0802%" height="15" fill="rgb(214,73,24)" fg:x="906" fg:w="1"/><text x="72.9044%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="72.6544%" y="485" width="0.0802%" height="15" fill="rgb(223,84,37)" fg:x="906" fg:w="1"/><text x="72.9044%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="72.7346%" y="565" width="0.0802%" height="15" fill="rgb(210,109,28)" fg:x="907" fg:w="1"/><text x="72.9846%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="72.7346%" y="549" width="0.0802%" height="15" fill="rgb(208,186,6)" fg:x="907" fg:w="1"/><text x="72.9846%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="72.7346%" y="533" width="0.0802%" height="15" fill="rgb(235,201,30)" fg:x="907" fg:w="1"/><text x="72.9846%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="72.7346%" y="517" width="0.0802%" height="15" fill="rgb(216,198,48)" fg:x="907" fg:w="1"/><text x="72.9846%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="72.7346%" y="501" width="0.0802%" height="15" fill="rgb(254,186,25)" fg:x="907" fg:w="1"/><text x="72.9846%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="72.7346%" y="485" width="0.0802%" height="15" fill="rgb(227,87,5)" fg:x="907" fg:w="1"/><text x="72.9846%" y="495.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="72.7346%" y="469" width="0.0802%" height="15" fill="rgb(236,205,25)" fg:x="907" fg:w="1"/><text x="72.9846%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="72.7346%" y="453" width="0.0802%" height="15" fill="rgb(229,99,32)" fg:x="907" fg:w="1"/><text x="72.9846%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="72.7346%" y="437" width="0.0802%" height="15" fill="rgb(231,177,31)" fg:x="907" fg:w="1"/><text x="72.9846%" y="447.50"></text></g><g><title>core::fmt::run (1 samples, 0.08%)</title><rect x="72.7346%" y="421" width="0.0802%" height="15" fill="rgb(246,15,2)" fg:x="907" fg:w="1"/><text x="72.9846%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="72.7346%" y="405" width="0.0802%" height="15" fill="rgb(207,39,15)" fg:x="907" fg:w="1"/><text x="72.9846%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.7346%" y="389" width="0.0802%" height="15" fill="rgb(207,44,9)" fg:x="907" fg:w="1"/><text x="72.9846%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.7346%" y="373" width="0.0802%" height="15" fill="rgb(225,224,33)" fg:x="907" fg:w="1"/><text x="72.9846%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="72.7346%" y="357" width="0.0802%" height="15" fill="rgb(252,151,3)" fg:x="907" fg:w="1"/><text x="72.9846%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="72.7346%" y="341" width="0.0802%" height="15" fill="rgb(211,140,13)" fg:x="907" fg:w="1"/><text x="72.9846%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="72.7346%" y="325" width="0.0802%" height="15" fill="rgb(239,225,17)" fg:x="907" fg:w="1"/><text x="72.9846%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="72.7346%" y="309" width="0.0802%" height="15" fill="rgb(223,170,52)" fg:x="907" fg:w="1"/><text x="72.9846%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="72.7346%" y="293" width="0.0802%" height="15" fill="rgb(212,64,21)" fg:x="907" fg:w="1"/><text x="72.9846%" y="303.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (124 samples, 9.94%)</title><rect x="63.0313%" y="597" width="9.9439%" height="15" fill="rgb(236,126,48)" fg:x="786" fg:w="124"/><text x="63.2813%" y="607.50">engine::sessio..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (123 samples, 9.86%)</title><rect x="63.1115%" y="581" width="9.8637%" height="15" fill="rgb(209,135,11)" fg:x="787" fg:w="123"/><text x="63.3615%" y="591.50">engine::perfor..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="72.8148%" y="565" width="0.1604%" height="15" fill="rgb(228,126,40)" fg:x="908" fg:w="2"/><text x="73.0648%" y="575.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="72.8148%" y="549" width="0.1604%" height="15" fill="rgb(205,196,36)" fg:x="908" fg:w="2"/><text x="73.0648%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (913 samples, 73.22%)</title><rect x="0.0000%" y="645" width="73.2157%" height="15" fill="rgb(243,160,33)" fg:x="0" fg:w="913"/><text x="0.2500%" y="655.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (913 samples, 73.22%)</title><rect x="0.0000%" y="629" width="73.2157%" height="15" fill="rgb(210,84,20)" fg:x="0" fg:w="913"/><text x="0.2500%" y="639.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (912 samples, 73.14%)</title><rect x="0.0802%" y="613" width="73.1355%" height="15" fill="rgb(228,213,30)" fg:x="1" fg:w="912"/><text x="0.3302%" y="623.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (3 samples, 0.24%)</title><rect x="72.9751%" y="597" width="0.2406%" height="15" fill="rgb(252,33,45)" fg:x="910" fg:w="3"/><text x="73.2251%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="73.1355%" y="581" width="0.0802%" height="15" fill="rgb(254,227,20)" fg:x="912" fg:w="1"/><text x="73.3855%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.1355%" y="565" width="0.0802%" height="15" fill="rgb(228,192,2)" fg:x="912" fg:w="1"/><text x="73.3855%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.2959%" y="549" width="0.0802%" height="15" fill="rgb(233,32,8)" fg:x="914" fg:w="1"/><text x="73.5459%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.4563%" y="501" width="0.0802%" height="15" fill="rgb(220,146,47)" fg:x="916" fg:w="1"/><text x="73.7063%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;kernel::model::entity::ScopeValue&gt;&gt; (4 samples, 0.32%)</title><rect x="73.5365%" y="501" width="0.3208%" height="15" fill="rgb(246,194,1)" fg:x="917" fg:w="4"/><text x="73.7865%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="73.5365%" y="485" width="0.3208%" height="15" fill="rgb(218,203,9)" fg:x="917" fg:w="4"/><text x="73.7865%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="73.5365%" y="469" width="0.3208%" height="15" fill="rgb(237,97,14)" fg:x="917" fg:w="4"/><text x="73.7865%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="73.6167%" y="453" width="0.2406%" height="15" fill="rgb(239,76,15)" fg:x="918" fg:w="3"/><text x="73.8667%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="73.6167%" y="437" width="0.2406%" height="15" fill="rgb(222,53,45)" fg:x="918" fg:w="3"/><text x="73.8667%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.7771%" y="421" width="0.0802%" height="15" fill="rgb(237,88,5)" fg:x="920" fg:w="1"/><text x="74.0271%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.7771%" y="405" width="0.0802%" height="15" fill="rgb(218,223,35)" fg:x="920" fg:w="1"/><text x="74.0271%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.7771%" y="389" width="0.0802%" height="15" fill="rgb(243,229,38)" fg:x="920" fg:w="1"/><text x="74.0271%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.7771%" y="373" width="0.0802%" height="15" fill="rgb(240,75,41)" fg:x="920" fg:w="1"/><text x="74.0271%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.8573%" y="469" width="0.0802%" height="15" fill="rgb(209,110,37)" fg:x="921" fg:w="1"/><text x="74.1073%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="73.9374%" y="421" width="0.1604%" height="15" fill="rgb(221,130,46)" fg:x="922" fg:w="2"/><text x="74.1874%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.0978%" y="421" width="0.0802%" height="15" fill="rgb(237,160,20)" fg:x="924" fg:w="1"/><text x="74.3478%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.0978%" y="405" width="0.0802%" height="15" fill="rgb(234,126,24)" fg:x="924" fg:w="1"/><text x="74.3478%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.88%)</title><rect x="73.3761%" y="517" width="0.8821%" height="15" fill="rgb(207,177,9)" fg:x="915" fg:w="11"/><text x="73.6261%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="73.8573%" y="501" width="0.4010%" height="15" fill="rgb(231,191,33)" fg:x="921" fg:w="5"/><text x="74.1073%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="73.8573%" y="485" width="0.4010%" height="15" fill="rgb(207,42,1)" fg:x="921" fg:w="5"/><text x="74.1073%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="73.9374%" y="469" width="0.3208%" height="15" fill="rgb(218,34,50)" fg:x="922" fg:w="4"/><text x="74.1874%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="73.9374%" y="453" width="0.3208%" height="15" fill="rgb(254,126,39)" fg:x="922" fg:w="4"/><text x="74.1874%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="73.9374%" y="437" width="0.3208%" height="15" fill="rgb(251,17,26)" fg:x="922" fg:w="4"/><text x="74.1874%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.1780%" y="421" width="0.0802%" height="15" fill="rgb(252,215,34)" fg:x="925" fg:w="1"/><text x="74.4280%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.1780%" y="405" width="0.0802%" height="15" fill="rgb(217,120,44)" fg:x="925" fg:w="1"/><text x="74.4280%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (13 samples, 1.04%)</title><rect x="73.2959%" y="581" width="1.0425%" height="15" fill="rgb(211,31,11)" fg:x="914" fg:w="13"/><text x="73.5459%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.04%)</title><rect x="73.2959%" y="565" width="1.0425%" height="15" fill="rgb(222,69,51)" fg:x="914" fg:w="13"/><text x="73.5459%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (12 samples, 0.96%)</title><rect x="73.3761%" y="549" width="0.9623%" height="15" fill="rgb(215,229,42)" fg:x="915" fg:w="12"/><text x="73.6261%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.96%)</title><rect x="73.3761%" y="533" width="0.9623%" height="15" fill="rgb(212,102,15)" fg:x="915" fg:w="12"/><text x="73.6261%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.2582%" y="517" width="0.0802%" height="15" fill="rgb(205,179,41)" fg:x="926" fg:w="1"/><text x="74.5082%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.12%)</title><rect x="73.2959%" y="597" width="1.1227%" height="15" fill="rgb(219,148,46)" fg:x="914" fg:w="14"/><text x="73.5459%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::perform::StandardPerformer&gt;&gt; (1 samples, 0.08%)</title><rect x="74.3384%" y="581" width="0.0802%" height="15" fill="rgb(243,40,19)" fg:x="927" fg:w="1"/><text x="74.5884%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="74.3384%" y="565" width="0.0802%" height="15" fill="rgb(208,206,34)" fg:x="927" fg:w="1"/><text x="74.5884%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.3384%" y="549" width="0.0802%" height="15" fill="rgb(244,184,38)" fg:x="927" fg:w="1"/><text x="74.5884%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.5790%" y="469" width="0.0802%" height="15" fill="rgb(244,151,47)" fg:x="930" fg:w="1"/><text x="74.8290%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="74.5790%" y="485" width="0.1604%" height="15" fill="rgb(236,134,42)" fg:x="930" fg:w="2"/><text x="74.8290%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::scopes::Property)&gt; (1 samples, 0.08%)</title><rect x="74.6592%" y="469" width="0.0802%" height="15" fill="rgb(233,93,22)" fg:x="931" fg:w="1"/><text x="74.9092%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.6592%" y="453" width="0.0802%" height="15" fill="rgb(211,202,10)" fg:x="931" fg:w="1"/><text x="74.9092%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="74.5790%" y="517" width="0.2406%" height="15" fill="rgb(240,63,8)" fg:x="930" fg:w="3"/><text x="74.8290%" y="527.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="74.5790%" y="501" width="0.2406%" height="15" fill="rgb(214,9,4)" fg:x="930" fg:w="3"/><text x="74.8290%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="74.7394%" y="485" width="0.0802%" height="15" fill="rgb(243,66,45)" fg:x="932" fg:w="1"/><text x="74.9894%" y="495.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="74.7394%" y="469" width="0.0802%" height="15" fill="rgb(220,50,42)" fg:x="932" fg:w="1"/><text x="74.9894%" y="479.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="74.7394%" y="453" width="0.0802%" height="15" fill="rgb(220,134,27)" fg:x="932" fg:w="1"/><text x="74.9894%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.7394%" y="437" width="0.0802%" height="15" fill="rgb(246,151,50)" fg:x="932" fg:w="1"/><text x="74.9894%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.7394%" y="421" width="0.0802%" height="15" fill="rgb(238,216,27)" fg:x="932" fg:w="1"/><text x="74.9894%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.7394%" y="405" width="0.0802%" height="15" fill="rgb(250,92,11)" fg:x="932" fg:w="1"/><text x="74.9894%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.7394%" y="389" width="0.0802%" height="15" fill="rgb(248,183,6)" fg:x="932" fg:w="1"/><text x="74.9894%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.7394%" y="373" width="0.0802%" height="15" fill="rgb(211,204,50)" fg:x="932" fg:w="1"/><text x="74.9894%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.7394%" y="357" width="0.0802%" height="15" fill="rgb(252,55,47)" fg:x="932" fg:w="1"/><text x="74.9894%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.7394%" y="341" width="0.0802%" height="15" fill="rgb(240,198,32)" fg:x="932" fg:w="1"/><text x="74.9894%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.7394%" y="325" width="0.0802%" height="15" fill="rgb(224,203,19)" fg:x="932" fg:w="1"/><text x="74.9894%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.7394%" y="309" width="0.0802%" height="15" fill="rgb(205,27,16)" fg:x="932" fg:w="1"/><text x="74.9894%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.7394%" y="293" width="0.0802%" height="15" fill="rgb(224,226,17)" fg:x="932" fg:w="1"/><text x="74.9894%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.7394%" y="277" width="0.0802%" height="15" fill="rgb(205,216,54)" fg:x="932" fg:w="1"/><text x="74.9894%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.7394%" y="261" width="0.0802%" height="15" fill="rgb(248,168,46)" fg:x="932" fg:w="1"/><text x="74.9894%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.7394%" y="245" width="0.0802%" height="15" fill="rgb(226,111,45)" fg:x="932" fg:w="1"/><text x="74.9894%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.7394%" y="229" width="0.0802%" height="15" fill="rgb(231,15,9)" fg:x="932" fg:w="1"/><text x="74.9894%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.7394%" y="213" width="0.0802%" height="15" fill="rgb(243,168,3)" fg:x="932" fg:w="1"/><text x="74.9894%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.7394%" y="197" width="0.0802%" height="15" fill="rgb(221,220,54)" fg:x="932" fg:w="1"/><text x="74.9894%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.7394%" y="181" width="0.0802%" height="15" fill="rgb(232,174,38)" fg:x="932" fg:w="1"/><text x="74.9894%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.7394%" y="165" width="0.0802%" height="15" fill="rgb(205,14,38)" fg:x="932" fg:w="1"/><text x="74.9894%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.8196%" y="469" width="0.0802%" height="15" fill="rgb(234,89,19)" fg:x="933" fg:w="1"/><text x="75.0696%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.8196%" y="453" width="0.0802%" height="15" fill="rgb(216,68,51)" fg:x="933" fg:w="1"/><text x="75.0696%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.8196%" y="437" width="0.0802%" height="15" fill="rgb(213,49,2)" fg:x="933" fg:w="1"/><text x="75.0696%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.8196%" y="421" width="0.0802%" height="15" fill="rgb(242,146,30)" fg:x="933" fg:w="1"/><text x="75.0696%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.8196%" y="405" width="0.0802%" height="15" fill="rgb(224,188,11)" fg:x="933" fg:w="1"/><text x="75.0696%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="74.8196%" y="517" width="0.1604%" height="15" fill="rgb(213,159,11)" fg:x="933" fg:w="2"/><text x="75.0696%" y="527.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="74.8196%" y="501" width="0.1604%" height="15" fill="rgb(229,13,31)" fg:x="933" fg:w="2"/><text x="75.0696%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="74.8196%" y="485" width="0.1604%" height="15" fill="rgb(209,103,11)" fg:x="933" fg:w="2"/><text x="75.0696%" y="495.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="74.8998%" y="469" width="0.0802%" height="15" fill="rgb(206,3,4)" fg:x="934" fg:w="1"/><text x="75.1498%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.8998%" y="453" width="0.0802%" height="15" fill="rgb(252,10,49)" fg:x="934" fg:w="1"/><text x="75.1498%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="74.8998%" y="437" width="0.0802%" height="15" fill="rgb(217,160,32)" fg:x="934" fg:w="1"/><text x="75.1498%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.8998%" y="421" width="0.0802%" height="15" fill="rgb(249,196,0)" fg:x="934" fg:w="1"/><text x="75.1498%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.8998%" y="405" width="0.0802%" height="15" fill="rgb(213,17,48)" fg:x="934" fg:w="1"/><text x="75.1498%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.8998%" y="389" width="0.0802%" height="15" fill="rgb(206,42,46)" fg:x="934" fg:w="1"/><text x="75.1498%" y="399.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="74.8998%" y="373" width="0.0802%" height="15" fill="rgb(212,105,24)" fg:x="934" fg:w="1"/><text x="75.1498%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.8998%" y="357" width="0.0802%" height="15" fill="rgb(243,216,30)" fg:x="934" fg:w="1"/><text x="75.1498%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.8998%" y="341" width="0.0802%" height="15" fill="rgb(207,121,3)" fg:x="934" fg:w="1"/><text x="75.1498%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.8998%" y="325" width="0.0802%" height="15" fill="rgb(249,78,0)" fg:x="934" fg:w="1"/><text x="75.1498%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="74.8998%" y="309" width="0.0802%" height="15" fill="rgb(244,151,32)" fg:x="934" fg:w="1"/><text x="75.1498%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="74.8998%" y="293" width="0.0802%" height="15" fill="rgb(228,63,25)" fg:x="934" fg:w="1"/><text x="75.1498%" y="303.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="74.8998%" y="277" width="0.0802%" height="15" fill="rgb(231,158,23)" fg:x="934" fg:w="1"/><text x="75.1498%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="74.9800%" y="437" width="0.1604%" height="15" fill="rgb(248,107,23)" fg:x="935" fg:w="2"/><text x="75.2300%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.9800%" y="421" width="0.1604%" height="15" fill="rgb(215,168,21)" fg:x="935" fg:w="2"/><text x="75.2300%" y="431.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="74.9800%" y="405" width="0.1604%" height="15" fill="rgb(227,83,22)" fg:x="935" fg:w="2"/><text x="75.2300%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.9800%" y="389" width="0.1604%" height="15" fill="rgb(217,118,43)" fg:x="935" fg:w="2"/><text x="75.2300%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="74.9800%" y="373" width="0.1604%" height="15" fill="rgb(229,220,41)" fg:x="935" fg:w="2"/><text x="75.2300%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="74.9800%" y="357" width="0.1604%" height="15" fill="rgb(254,146,46)" fg:x="935" fg:w="2"/><text x="75.2300%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.9800%" y="341" width="0.1604%" height="15" fill="rgb(233,208,31)" fg:x="935" fg:w="2"/><text x="75.2300%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.0601%" y="325" width="0.0802%" height="15" fill="rgb(222,162,7)" fg:x="936" fg:w="1"/><text x="75.3101%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="75.0601%" y="309" width="0.0802%" height="15" fill="rgb(230,117,45)" fg:x="936" fg:w="1"/><text x="75.3101%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.0601%" y="293" width="0.0802%" height="15" fill="rgb(239,163,6)" fg:x="936" fg:w="1"/><text x="75.3101%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.0601%" y="277" width="0.0802%" height="15" fill="rgb(246,130,17)" fg:x="936" fg:w="1"/><text x="75.3101%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="75.0601%" y="261" width="0.0802%" height="15" fill="rgb(216,84,5)" fg:x="936" fg:w="1"/><text x="75.3101%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.0601%" y="245" width="0.0802%" height="15" fill="rgb(230,200,21)" fg:x="936" fg:w="1"/><text x="75.3101%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.0601%" y="229" width="0.0802%" height="15" fill="rgb(224,2,8)" fg:x="936" fg:w="1"/><text x="75.3101%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="75.0601%" y="213" width="0.0802%" height="15" fill="rgb(238,178,10)" fg:x="936" fg:w="1"/><text x="75.3101%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.0601%" y="197" width="0.0802%" height="15" fill="rgb(242,153,24)" fg:x="936" fg:w="1"/><text x="75.3101%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.0601%" y="181" width="0.0802%" height="15" fill="rgb(242,32,48)" fg:x="936" fg:w="1"/><text x="75.3101%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="75.0601%" y="165" width="0.0802%" height="15" fill="rgb(227,36,0)" fg:x="936" fg:w="1"/><text x="75.3101%" y="175.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="75.0601%" y="149" width="0.0802%" height="15" fill="rgb(251,33,35)" fg:x="936" fg:w="1"/><text x="75.3101%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="75.0601%" y="133" width="0.0802%" height="15" fill="rgb(232,168,51)" fg:x="936" fg:w="1"/><text x="75.3101%" y="143.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (3 samples, 0.24%)</title><rect x="74.9800%" y="501" width="0.2406%" height="15" fill="rgb(228,56,10)" fg:x="935" fg:w="3"/><text x="75.2300%" y="511.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (3 samples, 0.24%)</title><rect x="74.9800%" y="485" width="0.2406%" height="15" fill="rgb(231,10,26)" fg:x="935" fg:w="3"/><text x="75.2300%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="74.9800%" y="469" width="0.2406%" height="15" fill="rgb(226,202,12)" fg:x="935" fg:w="3"/><text x="75.2300%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="74.9800%" y="453" width="0.2406%" height="15" fill="rgb(251,49,21)" fg:x="935" fg:w="3"/><text x="75.2300%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.1403%" y="437" width="0.0802%" height="15" fill="rgb(206,228,28)" fg:x="937" fg:w="1"/><text x="75.3903%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.1403%" y="421" width="0.0802%" height="15" fill="rgb(205,198,31)" fg:x="937" fg:w="1"/><text x="75.3903%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (11 samples, 0.88%)</title><rect x="74.4988%" y="565" width="0.8821%" height="15" fill="rgb(213,69,1)" fg:x="929" fg:w="11"/><text x="74.7488%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (11 samples, 0.88%)</title><rect x="74.4988%" y="549" width="0.8821%" height="15" fill="rgb(209,177,9)" fg:x="929" fg:w="11"/><text x="74.7488%" y="559.50"></text></g><g><title>engine::internal::Entities::add_persisted (11 samples, 0.88%)</title><rect x="74.4988%" y="533" width="0.8821%" height="15" fill="rgb(227,119,30)" fg:x="929" fg:w="11"/><text x="74.7488%" y="543.50"></text></g><g><title>kernel::model::deserialize_entity (5 samples, 0.40%)</title><rect x="74.9800%" y="517" width="0.4010%" height="15" fill="rgb(234,106,41)" fg:x="935" fg:w="5"/><text x="75.2300%" y="527.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="75.2205%" y="501" width="0.1604%" height="15" fill="rgb(244,103,47)" fg:x="938" fg:w="2"/><text x="75.4705%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.3007%" y="485" width="0.0802%" height="15" fill="rgb(212,211,25)" fg:x="939" fg:w="1"/><text x="75.5507%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.3007%" y="469" width="0.0802%" height="15" fill="rgb(208,63,53)" fg:x="939" fg:w="1"/><text x="75.5507%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.3007%" y="453" width="0.0802%" height="15" fill="rgb(213,176,21)" fg:x="939" fg:w="1"/><text x="75.5507%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.3007%" y="437" width="0.0802%" height="15" fill="rgb(243,124,12)" fg:x="939" fg:w="1"/><text x="75.5507%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.3007%" y="421" width="0.0802%" height="15" fill="rgb(239,2,35)" fg:x="939" fg:w="1"/><text x="75.5507%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.3007%" y="405" width="0.0802%" height="15" fill="rgb(253,169,22)" fg:x="939" fg:w="1"/><text x="75.5507%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.3007%" y="389" width="0.0802%" height="15" fill="rgb(254,51,12)" fg:x="939" fg:w="1"/><text x="75.5507%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.3007%" y="373" width="0.0802%" height="15" fill="rgb(244,17,47)" fg:x="939" fg:w="1"/><text x="75.5507%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.3007%" y="357" width="0.0802%" height="15" fill="rgb(251,45,46)" fg:x="939" fg:w="1"/><text x="75.5507%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.3007%" y="341" width="0.0802%" height="15" fill="rgb(223,87,43)" fg:x="939" fg:w="1"/><text x="75.5507%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.3007%" y="325" width="0.0802%" height="15" fill="rgb(230,132,31)" fg:x="939" fg:w="1"/><text x="75.5507%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.3007%" y="309" width="0.0802%" height="15" fill="rgb(206,99,1)" fg:x="939" fg:w="1"/><text x="75.5507%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.3007%" y="293" width="0.0802%" height="15" fill="rgb(227,110,25)" fg:x="939" fg:w="1"/><text x="75.5507%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.3007%" y="277" width="0.0802%" height="15" fill="rgb(217,182,7)" fg:x="939" fg:w="1"/><text x="75.5507%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.3007%" y="261" width="0.0802%" height="15" fill="rgb(250,176,4)" fg:x="939" fg:w="1"/><text x="75.5507%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.3007%" y="245" width="0.0802%" height="15" fill="rgb(244,98,30)" fg:x="939" fg:w="1"/><text x="75.5507%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.3007%" y="229" width="0.0802%" height="15" fill="rgb(228,150,42)" fg:x="939" fg:w="1"/><text x="75.5507%" y="239.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="75.3809%" y="565" width="0.1604%" height="15" fill="rgb(231,91,46)" fg:x="940" fg:w="2"/><text x="75.6309%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="75.3809%" y="549" width="0.1604%" height="15" fill="rgb(252,161,32)" fg:x="940" fg:w="2"/><text x="75.6309%" y="559.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="75.4611%" y="533" width="0.0802%" height="15" fill="rgb(236,69,41)" fg:x="941" fg:w="1"/><text x="75.7111%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.4611%" y="517" width="0.0802%" height="15" fill="rgb(212,160,3)" fg:x="941" fg:w="1"/><text x="75.7111%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.4611%" y="501" width="0.0802%" height="15" fill="rgb(216,5,50)" fg:x="941" fg:w="1"/><text x="75.7111%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="75.5413%" y="533" width="0.0802%" height="15" fill="rgb(241,138,25)" fg:x="942" fg:w="1"/><text x="75.7913%" y="543.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="75.5413%" y="517" width="0.0802%" height="15" fill="rgb(239,42,18)" fg:x="942" fg:w="1"/><text x="75.7913%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="75.5413%" y="501" width="0.0802%" height="15" fill="rgb(239,40,7)" fg:x="942" fg:w="1"/><text x="75.7913%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.5413%" y="485" width="0.0802%" height="15" fill="rgb(239,11,31)" fg:x="942" fg:w="1"/><text x="75.7913%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.5413%" y="469" width="0.0802%" height="15" fill="rgb(224,77,40)" fg:x="942" fg:w="1"/><text x="75.7913%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="75.5413%" y="453" width="0.0802%" height="15" fill="rgb(226,15,5)" fg:x="942" fg:w="1"/><text x="75.7913%" y="463.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="75.6215%" y="533" width="0.0802%" height="15" fill="rgb(254,188,5)" fg:x="943" fg:w="1"/><text x="75.8715%" y="543.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="75.6215%" y="517" width="0.0802%" height="15" fill="rgb(241,148,52)" fg:x="943" fg:w="1"/><text x="75.8715%" y="527.50"></text></g><g><title>dlerror (2 samples, 0.16%)</title><rect x="75.7819%" y="517" width="0.1604%" height="15" fill="rgb(251,48,36)" fg:x="945" fg:w="2"/><text x="76.0319%" y="527.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="75.8621%" y="501" width="0.0802%" height="15" fill="rgb(243,83,13)" fg:x="946" fg:w="1"/><text x="76.1121%" y="511.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="75.8621%" y="485" width="0.0802%" height="15" fill="rgb(210,105,0)" fg:x="946" fg:w="1"/><text x="76.1121%" y="495.50"></text></g><g><title>dlopen (9 samples, 0.72%)</title><rect x="75.9423%" y="517" width="0.7217%" height="15" fill="rgb(239,60,36)" fg:x="947" fg:w="9"/><text x="76.1923%" y="527.50"></text></g><g><title>_dl_catch_error (9 samples, 0.72%)</title><rect x="75.9423%" y="501" width="0.7217%" height="15" fill="rgb(210,20,0)" fg:x="947" fg:w="9"/><text x="76.1923%" y="511.50"></text></g><g><title>_dl_catch_exception (9 samples, 0.72%)</title><rect x="75.9423%" y="485" width="0.7217%" height="15" fill="rgb(244,26,53)" fg:x="947" fg:w="9"/><text x="76.1923%" y="495.50"></text></g><g><title>_dl_catch_exception (9 samples, 0.72%)</title><rect x="75.9423%" y="469" width="0.7217%" height="15" fill="rgb(240,100,49)" fg:x="947" fg:w="9"/><text x="76.1923%" y="479.50"></text></g><g><title>_dl_catch_exception (9 samples, 0.72%)</title><rect x="75.9423%" y="453" width="0.7217%" height="15" fill="rgb(250,46,45)" fg:x="947" fg:w="9"/><text x="76.1923%" y="463.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (15 samples, 1.20%)</title><rect x="75.5413%" y="549" width="1.2029%" height="15" fill="rgb(220,181,29)" fg:x="942" fg:w="15"/><text x="75.7913%" y="559.50"></text></g><g><title>libloading::os::unix::Library::open (13 samples, 1.04%)</title><rect x="75.7017%" y="533" width="1.0425%" height="15" fill="rgb(213,137,33)" fg:x="944" fg:w="13"/><text x="75.9517%" y="543.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="76.6640%" y="517" width="0.0802%" height="15" fill="rgb(213,27,48)" fg:x="956" fg:w="1"/><text x="76.9140%" y="527.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="76.6640%" y="501" width="0.0802%" height="15" fill="rgb(245,180,39)" fg:x="956" fg:w="1"/><text x="76.9140%" y="511.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="76.6640%" y="485" width="0.0802%" height="15" fill="rgb(212,158,42)" fg:x="956" fg:w="1"/><text x="76.9140%" y="495.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.08%)</title><rect x="76.6640%" y="469" width="0.0802%" height="15" fill="rgb(228,193,18)" fg:x="956" fg:w="1"/><text x="76.9140%" y="479.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.08%)</title><rect x="76.6640%" y="453" width="0.0802%" height="15" fill="rgb(245,172,29)" fg:x="956" fg:w="1"/><text x="76.9140%" y="463.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.08%)</title><rect x="76.6640%" y="437" width="0.0802%" height="15" fill="rgb(207,98,24)" fg:x="956" fg:w="1"/><text x="76.9140%" y="447.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (30 samples, 2.41%)</title><rect x="74.4186%" y="597" width="2.4058%" height="15" fill="rgb(249,92,26)" fg:x="928" fg:w="30"/><text x="74.6686%" y="607.50">&lt;e..</text></g><g><title>engine::session::Session::new (30 samples, 2.41%)</title><rect x="74.4186%" y="581" width="2.4058%" height="15" fill="rgb(217,176,26)" fg:x="928" fg:w="30"/><text x="74.6686%" y="591.50">en..</text></g><g><title>kernel::plugins::SessionPlugins::initialize (16 samples, 1.28%)</title><rect x="75.5413%" y="565" width="1.2831%" height="15" fill="rgb(221,8,39)" fg:x="942" fg:w="16"/><text x="75.7913%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="76.7442%" y="549" width="0.0802%" height="15" fill="rgb(208,90,18)" fg:x="957" fg:w="1"/><text x="76.9942%" y="559.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="76.7442%" y="533" width="0.0802%" height="15" fill="rgb(207,202,30)" fg:x="957" fg:w="1"/><text x="76.9942%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="76.8244%" y="581" width="0.0802%" height="15" fill="rgb(231,124,22)" fg:x="958" fg:w="1"/><text x="77.0744%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.8244%" y="565" width="0.0802%" height="15" fill="rgb(206,15,5)" fg:x="958" fg:w="1"/><text x="77.0744%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="76.9046%" y="581" width="0.0802%" height="15" fill="rgb(239,16,52)" fg:x="959" fg:w="1"/><text x="77.1546%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="76.9848%" y="549" width="0.0802%" height="15" fill="rgb(245,213,29)" fg:x="960" fg:w="1"/><text x="77.2348%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="76.9848%" y="533" width="0.0802%" height="15" fill="rgb(213,203,36)" fg:x="960" fg:w="1"/><text x="77.2348%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="76.9848%" y="517" width="0.0802%" height="15" fill="rgb(209,55,18)" fg:x="960" fg:w="1"/><text x="77.2348%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="76.9848%" y="501" width="0.0802%" height="15" fill="rgb(207,133,49)" fg:x="960" fg:w="1"/><text x="77.2348%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.1451%" y="533" width="0.0802%" height="15" fill="rgb(240,33,46)" fg:x="962" fg:w="1"/><text x="77.3951%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.1451%" y="517" width="0.0802%" height="15" fill="rgb(212,35,2)" fg:x="962" fg:w="1"/><text x="77.3951%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.1451%" y="501" width="0.0802%" height="15" fill="rgb(231,119,28)" fg:x="962" fg:w="1"/><text x="77.3951%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.1451%" y="485" width="0.0802%" height="15" fill="rgb(252,178,7)" fg:x="962" fg:w="1"/><text x="77.3951%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.1451%" y="469" width="0.0802%" height="15" fill="rgb(251,91,4)" fg:x="962" fg:w="1"/><text x="77.3951%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.1451%" y="453" width="0.0802%" height="15" fill="rgb(233,122,19)" fg:x="962" fg:w="1"/><text x="77.3951%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.1451%" y="437" width="0.0802%" height="15" fill="rgb(231,208,46)" fg:x="962" fg:w="1"/><text x="77.3951%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.1451%" y="421" width="0.0802%" height="15" fill="rgb(243,15,41)" fg:x="962" fg:w="1"/><text x="77.3951%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.1451%" y="405" width="0.0802%" height="15" fill="rgb(210,32,43)" fg:x="962" fg:w="1"/><text x="77.3951%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.1451%" y="389" width="0.0802%" height="15" fill="rgb(222,177,15)" fg:x="962" fg:w="1"/><text x="77.3951%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.1451%" y="373" width="0.0802%" height="15" fill="rgb(244,121,34)" fg:x="962" fg:w="1"/><text x="77.3951%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.1451%" y="357" width="0.0802%" height="15" fill="rgb(234,138,4)" fg:x="962" fg:w="1"/><text x="77.3951%" y="367.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="77.0650%" y="549" width="0.2406%" height="15" fill="rgb(240,97,48)" fg:x="961" fg:w="3"/><text x="77.3150%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.2253%" y="533" width="0.0802%" height="15" fill="rgb(237,65,54)" fg:x="963" fg:w="1"/><text x="77.4753%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="77.3055%" y="549" width="0.0802%" height="15" fill="rgb(214,25,24)" fg:x="964" fg:w="1"/><text x="77.5555%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="77.3055%" y="533" width="0.0802%" height="15" fill="rgb(213,5,3)" fg:x="964" fg:w="1"/><text x="77.5555%" y="543.50"></text></g><g><title>engine::session::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="77.3055%" y="517" width="0.0802%" height="15" fill="rgb(219,81,29)" fg:x="964" fg:w="1"/><text x="77.5555%" y="527.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="77.3857%" y="549" width="0.0802%" height="15" fill="rgb(220,43,48)" fg:x="965" fg:w="1"/><text x="77.6357%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="77.3857%" y="533" width="0.0802%" height="15" fill="rgb(239,157,2)" fg:x="965" fg:w="1"/><text x="77.6357%" y="543.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="77.3857%" y="517" width="0.0802%" height="15" fill="rgb(213,104,43)" fg:x="965" fg:w="1"/><text x="77.6357%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.3857%" y="501" width="0.0802%" height="15" fill="rgb(237,84,9)" fg:x="965" fg:w="1"/><text x="77.6357%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.3857%" y="485" width="0.0802%" height="15" fill="rgb(252,6,33)" fg:x="965" fg:w="1"/><text x="77.6357%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.3857%" y="469" width="0.0802%" height="15" fill="rgb(251,172,22)" fg:x="965" fg:w="1"/><text x="77.6357%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="77.4659%" y="501" width="0.0802%" height="15" fill="rgb(244,91,53)" fg:x="966" fg:w="1"/><text x="77.7159%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="77.5461%" y="485" width="0.2406%" height="15" fill="rgb(219,29,30)" fg:x="967" fg:w="3"/><text x="77.7961%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="77.6263%" y="469" width="0.1604%" height="15" fill="rgb(213,3,15)" fg:x="968" fg:w="2"/><text x="77.8763%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="77.6263%" y="453" width="0.1604%" height="15" fill="rgb(208,25,28)" fg:x="968" fg:w="2"/><text x="77.8763%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.7065%" y="437" width="0.0802%" height="15" fill="rgb(252,144,25)" fg:x="969" fg:w="1"/><text x="77.9565%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="77.8669%" y="469" width="0.1604%" height="15" fill="rgb(226,220,25)" fg:x="971" fg:w="2"/><text x="78.1169%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="77.8669%" y="453" width="0.1604%" height="15" fill="rgb(212,131,28)" fg:x="971" fg:w="2"/><text x="78.1169%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.9471%" y="437" width="0.0802%" height="15" fill="rgb(219,143,52)" fg:x="972" fg:w="1"/><text x="78.1971%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.9471%" y="421" width="0.0802%" height="15" fill="rgb(215,56,7)" fg:x="972" fg:w="1"/><text x="78.1971%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="78.0273%" y="453" width="0.2406%" height="15" fill="rgb(239,59,51)" fg:x="973" fg:w="3"/><text x="78.2773%" y="463.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="78.0273%" y="437" width="0.2406%" height="15" fill="rgb(209,215,4)" fg:x="973" fg:w="3"/><text x="78.2773%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="78.1075%" y="421" width="0.1604%" height="15" fill="rgb(221,118,39)" fg:x="974" fg:w="2"/><text x="78.3575%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.1877%" y="405" width="0.0802%" height="15" fill="rgb(236,6,44)" fg:x="975" fg:w="1"/><text x="78.4377%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="78.2678%" y="421" width="0.2406%" height="15" fill="rgb(216,122,9)" fg:x="976" fg:w="3"/><text x="78.5178%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="78.3480%" y="405" width="0.1604%" height="15" fill="rgb(244,134,42)" fg:x="977" fg:w="2"/><text x="78.5980%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.4282%" y="389" width="0.0802%" height="15" fill="rgb(209,189,35)" fg:x="978" fg:w="1"/><text x="78.6782%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="78.5084%" y="405" width="0.0802%" height="15" fill="rgb(250,47,36)" fg:x="979" fg:w="1"/><text x="78.7584%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.5886%" y="405" width="0.0802%" height="15" fill="rgb(252,112,4)" fg:x="980" fg:w="1"/><text x="78.8386%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="78.5084%" y="421" width="0.2406%" height="15" fill="rgb(221,79,51)" fg:x="979" fg:w="3"/><text x="78.7584%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.6688%" y="405" width="0.0802%" height="15" fill="rgb(232,65,53)" fg:x="981" fg:w="1"/><text x="78.9188%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.6688%" y="389" width="0.0802%" height="15" fill="rgb(211,37,7)" fg:x="981" fg:w="1"/><text x="78.9188%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="78.2678%" y="437" width="0.5613%" height="15" fill="rgb(234,221,18)" fg:x="976" fg:w="7"/><text x="78.5178%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.7490%" y="421" width="0.0802%" height="15" fill="rgb(220,158,26)" fg:x="982" fg:w="1"/><text x="78.9990%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.7490%" y="405" width="0.0802%" height="15" fill="rgb(220,70,6)" fg:x="982" fg:w="1"/><text x="78.9990%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.7490%" y="389" width="0.0802%" height="15" fill="rgb(250,39,48)" fg:x="982" fg:w="1"/><text x="78.9990%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="78.2678%" y="453" width="0.6415%" height="15" fill="rgb(206,40,27)" fg:x="976" fg:w="8"/><text x="78.5178%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.8292%" y="437" width="0.0802%" height="15" fill="rgb(247,80,36)" fg:x="983" fg:w="1"/><text x="79.0792%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="77.7867%" y="485" width="1.2029%" height="15" fill="rgb(222,9,20)" fg:x="970" fg:w="15"/><text x="78.0367%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="78.0273%" y="469" width="0.9623%" height="15" fill="rgb(217,26,45)" fg:x="973" fg:w="12"/><text x="78.2773%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.9094%" y="453" width="0.0802%" height="15" fill="rgb(221,67,14)" fg:x="984" fg:w="1"/><text x="79.1594%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (21 samples, 1.68%)</title><rect x="77.4659%" y="517" width="1.6840%" height="15" fill="rgb(248,100,24)" fg:x="966" fg:w="21"/><text x="77.7159%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.60%)</title><rect x="77.5461%" y="501" width="1.6038%" height="15" fill="rgb(230,187,16)" fg:x="967" fg:w="20"/><text x="77.7961%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="78.9896%" y="485" width="0.1604%" height="15" fill="rgb(205,108,13)" fg:x="985" fg:w="2"/><text x="79.2396%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.0698%" y="469" width="0.0802%" height="15" fill="rgb(235,71,51)" fg:x="986" fg:w="1"/><text x="79.3198%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.0698%" y="453" width="0.0802%" height="15" fill="rgb(251,172,48)" fg:x="986" fg:w="1"/><text x="79.3198%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.0698%" y="437" width="0.0802%" height="15" fill="rgb(240,96,49)" fg:x="986" fg:w="1"/><text x="79.3198%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.0698%" y="421" width="0.0802%" height="15" fill="rgb(235,46,36)" fg:x="986" fg:w="1"/><text x="79.3198%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.0698%" y="405" width="0.0802%" height="15" fill="rgb(244,3,49)" fg:x="986" fg:w="1"/><text x="79.3198%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.2302%" y="469" width="0.0802%" height="15" fill="rgb(206,78,54)" fg:x="988" fg:w="1"/><text x="79.4802%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.3103%" y="453" width="0.0802%" height="15" fill="rgb(208,85,42)" fg:x="989" fg:w="1"/><text x="79.5603%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="79.1500%" y="517" width="0.3208%" height="15" fill="rgb(219,196,21)" fg:x="987" fg:w="4"/><text x="79.4000%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="79.1500%" y="501" width="0.3208%" height="15" fill="rgb(238,19,9)" fg:x="987" fg:w="4"/><text x="79.4000%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="79.2302%" y="485" width="0.2406%" height="15" fill="rgb(206,86,13)" fg:x="988" fg:w="3"/><text x="79.4802%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.3103%" y="469" width="0.1604%" height="15" fill="rgb(214,123,40)" fg:x="989" fg:w="2"/><text x="79.5603%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.3905%" y="453" width="0.0802%" height="15" fill="rgb(243,53,5)" fg:x="990" fg:w="1"/><text x="79.6405%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.3905%" y="437" width="0.0802%" height="15" fill="rgb(254,186,31)" fg:x="990" fg:w="1"/><text x="79.6405%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.3905%" y="421" width="0.0802%" height="15" fill="rgb(221,216,25)" fg:x="990" fg:w="1"/><text x="79.6405%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="79.5509%" y="469" width="0.1604%" height="15" fill="rgb(248,107,42)" fg:x="992" fg:w="2"/><text x="79.8009%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.6311%" y="453" width="0.0802%" height="15" fill="rgb(221,85,43)" fg:x="993" fg:w="1"/><text x="79.8811%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="79.6311%" y="437" width="0.0802%" height="15" fill="rgb(225,34,24)" fg:x="993" fg:w="1"/><text x="79.8811%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="79.7113%" y="469" width="0.1604%" height="15" fill="rgb(211,119,1)" fg:x="994" fg:w="2"/><text x="79.9613%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.7915%" y="453" width="0.0802%" height="15" fill="rgb(254,216,46)" fg:x="995" fg:w="1"/><text x="80.0415%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="79.7915%" y="437" width="0.0802%" height="15" fill="rgb(238,11,38)" fg:x="995" fg:w="1"/><text x="80.0415%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="79.7915%" y="421" width="0.0802%" height="15" fill="rgb(233,50,15)" fg:x="995" fg:w="1"/><text x="80.0415%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.9519%" y="421" width="0.0802%" height="15" fill="rgb(217,181,29)" fg:x="997" fg:w="1"/><text x="80.2019%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.9519%" y="405" width="0.0802%" height="15" fill="rgb(214,56,3)" fg:x="997" fg:w="1"/><text x="80.2019%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.9519%" y="389" width="0.0802%" height="15" fill="rgb(230,69,45)" fg:x="997" fg:w="1"/><text x="80.2019%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="80.0321%" y="421" width="0.1604%" height="15" fill="rgb(224,201,50)" fg:x="998" fg:w="2"/><text x="80.2821%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="80.0321%" y="405" width="0.1604%" height="15" fill="rgb(217,228,18)" fg:x="998" fg:w="2"/><text x="80.2821%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="80.0321%" y="389" width="0.1604%" height="15" fill="rgb(239,33,44)" fg:x="998" fg:w="2"/><text x="80.2821%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="80.0321%" y="373" width="0.1604%" height="15" fill="rgb(248,210,23)" fg:x="998" fg:w="2"/><text x="80.2821%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="80.0321%" y="357" width="0.1604%" height="15" fill="rgb(253,135,8)" fg:x="998" fg:w="2"/><text x="80.2821%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.1123%" y="341" width="0.0802%" height="15" fill="rgb(217,98,21)" fg:x="999" fg:w="1"/><text x="80.3623%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="80.1925%" y="405" width="0.1604%" height="15" fill="rgb(253,130,21)" fg:x="1000" fg:w="2"/><text x="80.4425%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="80.1925%" y="389" width="0.1604%" height="15" fill="rgb(207,81,54)" fg:x="1000" fg:w="2"/><text x="80.4425%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="80.2727%" y="373" width="0.0802%" height="15" fill="rgb(232,48,33)" fg:x="1001" fg:w="1"/><text x="80.5227%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.2727%" y="357" width="0.0802%" height="15" fill="rgb(211,9,35)" fg:x="1001" fg:w="1"/><text x="80.5227%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="80.2727%" y="341" width="0.0802%" height="15" fill="rgb(205,152,21)" fg:x="1001" fg:w="1"/><text x="80.5227%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.2727%" y="325" width="0.0802%" height="15" fill="rgb(249,21,27)" fg:x="1001" fg:w="1"/><text x="80.5227%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.2727%" y="309" width="0.0802%" height="15" fill="rgb(252,29,24)" fg:x="1001" fg:w="1"/><text x="80.5227%" y="319.50"></text></g><g><title>engine::session::Session::flush (43 samples, 3.45%)</title><rect x="76.9848%" y="581" width="3.4483%" height="15" fill="rgb(230,130,50)" fg:x="960" fg:w="43"/><text x="77.2348%" y="591.50">eng..</text></g><g><title>engine::session::Session::save_entity_changes (43 samples, 3.45%)</title><rect x="76.9848%" y="565" width="3.4483%" height="15" fill="rgb(239,144,14)" fg:x="960" fg:w="43"/><text x="77.2348%" y="575.50">eng..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (37 samples, 2.97%)</title><rect x="77.4659%" y="549" width="2.9671%" height="15" fill="rgb(227,111,50)" fg:x="966" fg:w="37"/><text x="77.7159%" y="559.50">eng..</text></g><g><title>engine::session::SavesEntities::check_for_changes (37 samples, 2.97%)</title><rect x="77.4659%" y="533" width="2.9671%" height="15" fill="rgb(254,84,20)" fg:x="966" fg:w="37"/><text x="77.7159%" y="543.50">eng..</text></g><g><title>kernel::model::any_entity_changes (12 samples, 0.96%)</title><rect x="79.4707%" y="517" width="0.9623%" height="15" fill="rgb(232,90,48)" fg:x="991" fg:w="12"/><text x="79.7207%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (12 samples, 0.96%)</title><rect x="79.4707%" y="501" width="0.9623%" height="15" fill="rgb(253,63,47)" fg:x="991" fg:w="12"/><text x="79.7207%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.96%)</title><rect x="79.4707%" y="485" width="0.9623%" height="15" fill="rgb(251,146,35)" fg:x="991" fg:w="12"/><text x="79.7207%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.56%)</title><rect x="79.8717%" y="469" width="0.5613%" height="15" fill="rgb(229,192,35)" fg:x="996" fg:w="7"/><text x="80.1217%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="79.8717%" y="453" width="0.5613%" height="15" fill="rgb(225,68,9)" fg:x="996" fg:w="7"/><text x="80.1217%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="79.8717%" y="437" width="0.5613%" height="15" fill="rgb(214,97,34)" fg:x="996" fg:w="7"/><text x="80.1217%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="80.1925%" y="421" width="0.2406%" height="15" fill="rgb(253,31,26)" fg:x="1000" fg:w="3"/><text x="80.4425%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.3528%" y="405" width="0.0802%" height="15" fill="rgb(225,151,47)" fg:x="1002" fg:w="1"/><text x="80.6028%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="80.4330%" y="517" width="0.0802%" height="15" fill="rgb(206,185,9)" fg:x="1003" fg:w="1"/><text x="80.6830%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.4330%" y="501" width="0.0802%" height="15" fill="rgb(249,65,17)" fg:x="1003" fg:w="1"/><text x="80.6830%" y="511.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="80.4330%" y="533" width="0.1604%" height="15" fill="rgb(220,110,10)" fg:x="1003" fg:w="2"/><text x="80.6830%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="80.5132%" y="517" width="0.0802%" height="15" fill="rgb(222,198,49)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="527.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="80.5132%" y="501" width="0.0802%" height="15" fill="rgb(239,81,13)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="80.5132%" y="485" width="0.0802%" height="15" fill="rgb(216,128,11)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.5132%" y="469" width="0.0802%" height="15" fill="rgb(247,156,8)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.5132%" y="453" width="0.0802%" height="15" fill="rgb(219,173,1)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.5132%" y="437" width="0.0802%" height="15" fill="rgb(227,42,24)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.5132%" y="421" width="0.0802%" height="15" fill="rgb(253,219,50)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.5132%" y="405" width="0.0802%" height="15" fill="rgb(215,191,54)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.5132%" y="389" width="0.0802%" height="15" fill="rgb(238,83,12)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.5132%" y="373" width="0.0802%" height="15" fill="rgb(205,124,9)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.5132%" y="357" width="0.0802%" height="15" fill="rgb(253,174,7)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.5132%" y="341" width="0.0802%" height="15" fill="rgb(206,134,49)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.5132%" y="325" width="0.0802%" height="15" fill="rgb(221,89,20)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="80.5132%" y="309" width="0.0802%" height="15" fill="rgb(240,205,13)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="80.5132%" y="293" width="0.0802%" height="15" fill="rgb(237,174,32)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="80.4330%" y="565" width="0.2406%" height="15" fill="rgb(226,12,15)" fg:x="1003" fg:w="3"/><text x="80.6830%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="80.4330%" y="549" width="0.2406%" height="15" fill="rgb(245,160,52)" fg:x="1003" fg:w="3"/><text x="80.6830%" y="559.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="80.5934%" y="533" width="0.0802%" height="15" fill="rgb(253,80,21)" fg:x="1005" fg:w="1"/><text x="80.8434%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.5934%" y="517" width="0.0802%" height="15" fill="rgb(231,225,22)" fg:x="1005" fg:w="1"/><text x="80.8434%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="80.6736%" y="549" width="0.0802%" height="15" fill="rgb(253,185,12)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="80.6736%" y="533" width="0.0802%" height="15" fill="rgb(234,197,21)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="80.7538%" y="533" width="0.0802%" height="15" fill="rgb(210,47,30)" fg:x="1007" fg:w="1"/><text x="81.0038%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.7538%" y="517" width="0.0802%" height="15" fill="rgb(246,139,27)" fg:x="1007" fg:w="1"/><text x="81.0038%" y="527.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (2 samples, 0.16%)</title><rect x="80.7538%" y="549" width="0.1604%" height="15" fill="rgb(226,130,16)" fg:x="1007" fg:w="2"/><text x="81.0038%" y="559.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="80.8340%" y="533" width="0.0802%" height="15" fill="rgb(237,208,20)" fg:x="1008" fg:w="1"/><text x="81.0840%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.8340%" y="517" width="0.0802%" height="15" fill="rgb(245,186,28)" fg:x="1008" fg:w="1"/><text x="81.0840%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="80.8340%" y="501" width="0.0802%" height="15" fill="rgb(238,105,39)" fg:x="1008" fg:w="1"/><text x="81.0840%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.8340%" y="485" width="0.0802%" height="15" fill="rgb(253,228,11)" fg:x="1008" fg:w="1"/><text x="81.0840%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.8340%" y="469" width="0.0802%" height="15" fill="rgb(224,136,38)" fg:x="1008" fg:w="1"/><text x="81.0840%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.9142%" y="469" width="0.0802%" height="15" fill="rgb(211,3,25)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.9142%" y="453" width="0.0802%" height="15" fill="rgb(238,66,34)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.9142%" y="437" width="0.0802%" height="15" fill="rgb(223,188,11)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.9142%" y="421" width="0.0802%" height="15" fill="rgb(221,10,35)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.9142%" y="405" width="0.0802%" height="15" fill="rgb(223,18,44)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.9142%" y="389" width="0.0802%" height="15" fill="rgb(220,97,41)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.9142%" y="373" width="0.0802%" height="15" fill="rgb(206,95,45)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.9142%" y="357" width="0.0802%" height="15" fill="rgb(209,96,13)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.9142%" y="341" width="0.0802%" height="15" fill="rgb(237,39,34)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.9142%" y="325" width="0.0802%" height="15" fill="rgb(213,49,47)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.9142%" y="309" width="0.0802%" height="15" fill="rgb(205,107,27)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.9142%" y="293" width="0.0802%" height="15" fill="rgb(212,142,9)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.9142%" y="277" width="0.0802%" height="15" fill="rgb(226,182,0)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.9142%" y="261" width="0.0802%" height="15" fill="rgb(231,3,53)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="80.9142%" y="245" width="0.0802%" height="15" fill="rgb(246,111,28)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="80.9142%" y="229" width="0.0802%" height="15" fill="rgb(254,183,7)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="80.9142%" y="213" width="0.0802%" height="15" fill="rgb(247,177,28)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="80.9142%" y="197" width="0.0802%" height="15" fill="rgb(244,43,1)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="207.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="80.9142%" y="181" width="0.0802%" height="15" fill="rgb(207,2,35)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="191.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="80.9142%" y="165" width="0.0802%" height="15" fill="rgb(213,83,22)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.9944%" y="421" width="0.0802%" height="15" fill="rgb(246,212,13)" fg:x="1010" fg:w="1"/><text x="81.2444%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (2 samples, 0.16%)</title><rect x="80.9944%" y="469" width="0.1604%" height="15" fill="rgb(213,127,46)" fg:x="1010" fg:w="2"/><text x="81.2444%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="80.9944%" y="453" width="0.1604%" height="15" fill="rgb(219,215,39)" fg:x="1010" fg:w="2"/><text x="81.2444%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="80.9944%" y="437" width="0.1604%" height="15" fill="rgb(227,99,17)" fg:x="1010" fg:w="2"/><text x="81.2444%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.0746%" y="421" width="0.0802%" height="15" fill="rgb(208,155,18)" fg:x="1011" fg:w="1"/><text x="81.3246%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.0746%" y="405" width="0.0802%" height="15" fill="rgb(223,204,38)" fg:x="1011" fg:w="1"/><text x="81.3246%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.0746%" y="389" width="0.0802%" height="15" fill="rgb(212,114,21)" fg:x="1011" fg:w="1"/><text x="81.3246%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="81.1548%" y="341" width="0.0802%" height="15" fill="rgb(250,74,13)" fg:x="1012" fg:w="1"/><text x="81.4048%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.1548%" y="325" width="0.0802%" height="15" fill="rgb(234,7,1)" fg:x="1012" fg:w="1"/><text x="81.4048%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="80.9142%" y="517" width="0.4010%" height="15" fill="rgb(207,138,31)" fg:x="1009" fg:w="5"/><text x="81.1642%" y="527.50"></text></g><g><title>kernel::model::scopes::load_props (5 samples, 0.40%)</title><rect x="80.9142%" y="501" width="0.4010%" height="15" fill="rgb(215,186,42)" fg:x="1009" fg:w="5"/><text x="81.1642%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (5 samples, 0.40%)</title><rect x="80.9142%" y="485" width="0.4010%" height="15" fill="rgb(229,205,49)" fg:x="1009" fg:w="5"/><text x="81.1642%" y="495.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="81.1548%" y="469" width="0.1604%" height="15" fill="rgb(216,156,32)" fg:x="1012" fg:w="2"/><text x="81.4048%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.1548%" y="453" width="0.1604%" height="15" fill="rgb(238,7,21)" fg:x="1012" fg:w="2"/><text x="81.4048%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="81.1548%" y="437" width="0.1604%" height="15" fill="rgb(249,190,22)" fg:x="1012" fg:w="2"/><text x="81.4048%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.1548%" y="421" width="0.1604%" height="15" fill="rgb(253,51,31)" fg:x="1012" fg:w="2"/><text x="81.4048%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="81.1548%" y="405" width="0.1604%" height="15" fill="rgb(237,90,54)" fg:x="1012" fg:w="2"/><text x="81.4048%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.1548%" y="389" width="0.1604%" height="15" fill="rgb(250,214,33)" fg:x="1012" fg:w="2"/><text x="81.4048%" y="399.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="81.1548%" y="373" width="0.1604%" height="15" fill="rgb(237,10,49)" fg:x="1012" fg:w="2"/><text x="81.4048%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.1548%" y="357" width="0.1604%" height="15" fill="rgb(241,56,36)" fg:x="1012" fg:w="2"/><text x="81.4048%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.2350%" y="341" width="0.0802%" height="15" fill="rgb(227,164,12)" fg:x="1013" fg:w="1"/><text x="81.4850%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.2350%" y="325" width="0.0802%" height="15" fill="rgb(249,149,35)" fg:x="1013" fg:w="1"/><text x="81.4850%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="81.2350%" y="309" width="0.0802%" height="15" fill="rgb(238,227,50)" fg:x="1013" fg:w="1"/><text x="81.4850%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="81.2350%" y="293" width="0.0802%" height="15" fill="rgb(235,102,45)" fg:x="1013" fg:w="1"/><text x="81.4850%" y="303.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="81.2350%" y="277" width="0.0802%" height="15" fill="rgb(211,10,38)" fg:x="1013" fg:w="1"/><text x="81.4850%" y="287.50"></text></g><g><title>kernel::model::scopes::Props::property_named (1 samples, 0.08%)</title><rect x="81.3152%" y="501" width="0.0802%" height="15" fill="rgb(219,77,48)" fg:x="1014" fg:w="1"/><text x="81.5652%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="80.9142%" y="549" width="0.6415%" height="15" fill="rgb(246,6,15)" fg:x="1009" fg:w="8"/><text x="81.1642%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (8 samples, 0.64%)</title><rect x="80.9142%" y="533" width="0.6415%" height="15" fill="rgb(207,220,2)" fg:x="1009" fg:w="8"/><text x="81.1642%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="81.3152%" y="517" width="0.2406%" height="15" fill="rgb(242,48,14)" fg:x="1014" fg:w="3"/><text x="81.5652%" y="527.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="81.3953%" y="501" width="0.1604%" height="15" fill="rgb(218,19,27)" fg:x="1015" fg:w="2"/><text x="81.6453%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="81.3953%" y="485" width="0.1604%" height="15" fill="rgb(228,0,35)" fg:x="1015" fg:w="2"/><text x="81.6453%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.4755%" y="469" width="0.0802%" height="15" fill="rgb(244,142,54)" fg:x="1016" fg:w="1"/><text x="81.7255%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.4755%" y="453" width="0.0802%" height="15" fill="rgb(243,217,40)" fg:x="1016" fg:w="1"/><text x="81.7255%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.4755%" y="437" width="0.0802%" height="15" fill="rgb(207,114,16)" fg:x="1016" fg:w="1"/><text x="81.7255%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.4755%" y="421" width="0.0802%" height="15" fill="rgb(224,33,25)" fg:x="1016" fg:w="1"/><text x="81.7255%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.4755%" y="405" width="0.0802%" height="15" fill="rgb(230,93,54)" fg:x="1016" fg:w="1"/><text x="81.7255%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="81.5557%" y="549" width="0.0802%" height="15" fill="rgb(224,56,24)" fg:x="1017" fg:w="1"/><text x="81.8057%" y="559.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="81.5557%" y="533" width="0.0802%" height="15" fill="rgb(235,189,50)" fg:x="1017" fg:w="1"/><text x="81.8057%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="81.5557%" y="517" width="0.0802%" height="15" fill="rgb(242,173,8)" fg:x="1017" fg:w="1"/><text x="81.8057%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.6359%" y="501" width="0.0802%" height="15" fill="rgb(209,206,10)" fg:x="1018" fg:w="1"/><text x="81.8859%" y="511.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="81.6359%" y="485" width="0.0802%" height="15" fill="rgb(213,182,44)" fg:x="1018" fg:w="1"/><text x="81.8859%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="81.6359%" y="469" width="0.0802%" height="15" fill="rgb(243,51,15)" fg:x="1018" fg:w="1"/><text x="81.8859%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="81.6359%" y="453" width="0.0802%" height="15" fill="rgb(241,13,14)" fg:x="1018" fg:w="1"/><text x="81.8859%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.6359%" y="437" width="0.0802%" height="15" fill="rgb(239,147,24)" fg:x="1018" fg:w="1"/><text x="81.8859%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="81.6359%" y="421" width="0.0802%" height="15" fill="rgb(223,129,16)" fg:x="1018" fg:w="1"/><text x="81.8859%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.6359%" y="405" width="0.0802%" height="15" fill="rgb(209,169,13)" fg:x="1018" fg:w="1"/><text x="81.8859%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.6359%" y="389" width="0.0802%" height="15" fill="rgb(235,159,41)" fg:x="1018" fg:w="1"/><text x="81.8859%" y="399.50"></text></g><g><title>kernel::model::scopes::Props::property_named (1 samples, 0.08%)</title><rect x="81.7161%" y="485" width="0.0802%" height="15" fill="rgb(223,219,48)" fg:x="1019" fg:w="1"/><text x="81.9661%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.7963%" y="453" width="0.0802%" height="15" fill="rgb(236,80,13)" fg:x="1020" fg:w="1"/><text x="82.0463%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.7963%" y="437" width="0.0802%" height="15" fill="rgb(213,5,6)" fg:x="1020" fg:w="1"/><text x="82.0463%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.7963%" y="421" width="0.0802%" height="15" fill="rgb(205,59,21)" fg:x="1020" fg:w="1"/><text x="82.0463%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.7963%" y="405" width="0.0802%" height="15" fill="rgb(247,137,35)" fg:x="1020" fg:w="1"/><text x="82.0463%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.7963%" y="389" width="0.0802%" height="15" fill="rgb(242,208,28)" fg:x="1020" fg:w="1"/><text x="82.0463%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.8765%" y="389" width="0.0802%" height="15" fill="rgb(245,62,25)" fg:x="1021" fg:w="1"/><text x="82.1265%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.8765%" y="373" width="0.0802%" height="15" fill="rgb(233,99,54)" fg:x="1021" fg:w="1"/><text x="82.1265%" y="383.50"></text></g><g><title>plugins_core::build::Build::holding (20 samples, 1.60%)</title><rect x="80.4330%" y="581" width="1.6038%" height="15" fill="rgb(213,10,37)" fg:x="1003" fg:w="20"/><text x="80.6830%" y="591.50"></text></g><g><title>plugins_core::tools::set_container (17 samples, 1.36%)</title><rect x="80.6736%" y="565" width="1.3633%" height="15" fill="rgb(235,143,30)" fg:x="1006" fg:w="17"/><text x="80.9236%" y="575.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.40%)</title><rect x="81.6359%" y="549" width="0.4010%" height="15" fill="rgb(250,146,33)" fg:x="1018" fg:w="5"/><text x="81.8859%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="81.6359%" y="533" width="0.4010%" height="15" fill="rgb(226,198,42)" fg:x="1018" fg:w="5"/><text x="81.8859%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.40%)</title><rect x="81.6359%" y="517" width="0.4010%" height="15" fill="rgb(222,55,6)" fg:x="1018" fg:w="5"/><text x="81.8859%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="81.7161%" y="501" width="0.3208%" height="15" fill="rgb(213,224,31)" fg:x="1019" fg:w="4"/><text x="81.9661%" y="511.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.24%)</title><rect x="81.7963%" y="485" width="0.2406%" height="15" fill="rgb(226,103,35)" fg:x="1020" fg:w="3"/><text x="82.0463%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.24%)</title><rect x="81.7963%" y="469" width="0.2406%" height="15" fill="rgb(205,66,45)" fg:x="1020" fg:w="3"/><text x="82.0463%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="81.8765%" y="453" width="0.1604%" height="15" fill="rgb(226,51,42)" fg:x="1021" fg:w="2"/><text x="82.1265%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.8765%" y="437" width="0.1604%" height="15" fill="rgb(206,69,1)" fg:x="1021" fg:w="2"/><text x="82.1265%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="81.8765%" y="421" width="0.1604%" height="15" fill="rgb(213,228,47)" fg:x="1021" fg:w="2"/><text x="82.1265%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.8765%" y="405" width="0.1604%" height="15" fill="rgb(224,204,18)" fg:x="1021" fg:w="2"/><text x="82.1265%" y="415.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="81.9567%" y="389" width="0.0802%" height="15" fill="rgb(253,187,47)" fg:x="1022" fg:w="1"/><text x="82.2067%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.0369%" y="469" width="0.0802%" height="15" fill="rgb(232,61,2)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.0369%" y="453" width="0.0802%" height="15" fill="rgb(213,132,35)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.0369%" y="437" width="0.0802%" height="15" fill="rgb(247,33,21)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.0369%" y="421" width="0.0802%" height="15" fill="rgb(233,71,46)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.0369%" y="405" width="0.0802%" height="15" fill="rgb(222,173,43)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.1171%" y="309" width="0.0802%" height="15" fill="rgb(249,218,47)" fg:x="1024" fg:w="1"/><text x="82.3671%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="82.0369%" y="517" width="0.2406%" height="15" fill="rgb(254,185,48)" fg:x="1023" fg:w="3"/><text x="82.2869%" y="527.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.24%)</title><rect x="82.0369%" y="501" width="0.2406%" height="15" fill="rgb(252,165,50)" fg:x="1023" fg:w="3"/><text x="82.2869%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.24%)</title><rect x="82.0369%" y="485" width="0.2406%" height="15" fill="rgb(206,219,6)" fg:x="1023" fg:w="3"/><text x="82.2869%" y="495.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="82.1171%" y="469" width="0.1604%" height="15" fill="rgb(212,212,45)" fg:x="1024" fg:w="2"/><text x="82.3671%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.1171%" y="453" width="0.1604%" height="15" fill="rgb(221,31,9)" fg:x="1024" fg:w="2"/><text x="82.3671%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="82.1171%" y="437" width="0.1604%" height="15" fill="rgb(234,198,39)" fg:x="1024" fg:w="2"/><text x="82.3671%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.1171%" y="421" width="0.1604%" height="15" fill="rgb(252,145,46)" fg:x="1024" fg:w="2"/><text x="82.3671%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="82.1171%" y="405" width="0.1604%" height="15" fill="rgb(237,149,0)" fg:x="1024" fg:w="2"/><text x="82.3671%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.1171%" y="389" width="0.1604%" height="15" fill="rgb(229,65,5)" fg:x="1024" fg:w="2"/><text x="82.3671%" y="399.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="82.1171%" y="373" width="0.1604%" height="15" fill="rgb(235,60,36)" fg:x="1024" fg:w="2"/><text x="82.3671%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.1171%" y="357" width="0.1604%" height="15" fill="rgb(222,47,18)" fg:x="1024" fg:w="2"/><text x="82.3671%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="82.1171%" y="341" width="0.1604%" height="15" fill="rgb(235,114,22)" fg:x="1024" fg:w="2"/><text x="82.3671%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.1171%" y="325" width="0.1604%" height="15" fill="rgb(209,167,11)" fg:x="1024" fg:w="2"/><text x="82.3671%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="82.1973%" y="309" width="0.0802%" height="15" fill="rgb(251,73,18)" fg:x="1025" fg:w="1"/><text x="82.4473%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="82.1973%" y="293" width="0.0802%" height="15" fill="rgb(217,60,17)" fg:x="1025" fg:w="1"/><text x="82.4473%" y="303.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="82.2775%" y="501" width="0.0802%" height="15" fill="rgb(224,36,37)" fg:x="1026" fg:w="1"/><text x="82.5275%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="82.2775%" y="485" width="0.0802%" height="15" fill="rgb(211,21,32)" fg:x="1026" fg:w="1"/><text x="82.5275%" y="495.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.2775%" y="469" width="0.0802%" height="15" fill="rgb(231,55,48)" fg:x="1026" fg:w="1"/><text x="82.5275%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.2775%" y="453" width="0.0802%" height="15" fill="rgb(227,42,18)" fg:x="1026" fg:w="1"/><text x="82.5275%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.2775%" y="437" width="0.0802%" height="15" fill="rgb(217,2,27)" fg:x="1026" fg:w="1"/><text x="82.5275%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.2775%" y="421" width="0.0802%" height="15" fill="rgb(251,138,23)" fg:x="1026" fg:w="1"/><text x="82.5275%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.2775%" y="405" width="0.0802%" height="15" fill="rgb(226,184,11)" fg:x="1026" fg:w="1"/><text x="82.5275%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.2775%" y="389" width="0.0802%" height="15" fill="rgb(242,142,12)" fg:x="1026" fg:w="1"/><text x="82.5275%" y="399.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="82.0369%" y="581" width="0.4010%" height="15" fill="rgb(234,187,18)" fg:x="1023" fg:w="5"/><text x="82.2869%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="82.0369%" y="565" width="0.4010%" height="15" fill="rgb(237,44,42)" fg:x="1023" fg:w="5"/><text x="82.2869%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="82.0369%" y="549" width="0.4010%" height="15" fill="rgb(211,90,23)" fg:x="1023" fg:w="5"/><text x="82.2869%" y="559.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="82.0369%" y="533" width="0.4010%" height="15" fill="rgb(207,81,18)" fg:x="1023" fg:w="5"/><text x="82.2869%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="82.2775%" y="517" width="0.1604%" height="15" fill="rgb(222,107,28)" fg:x="1026" fg:w="2"/><text x="82.5275%" y="527.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="82.3577%" y="501" width="0.0802%" height="15" fill="rgb(237,83,52)" fg:x="1027" fg:w="1"/><text x="82.6077%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (1 samples, 0.08%)</title><rect x="82.3577%" y="485" width="0.0802%" height="15" fill="rgb(208,67,11)" fg:x="1027" fg:w="1"/><text x="82.6077%" y="495.50"></text></g><g><title>&lt;kernel::model::scopes::Properties as kernel::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="82.3577%" y="469" width="0.0802%" height="15" fill="rgb(249,157,49)" fg:x="1027" fg:w="1"/><text x="82.6077%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.3577%" y="453" width="0.0802%" height="15" fill="rgb(243,200,1)" fg:x="1027" fg:w="1"/><text x="82.6077%" y="463.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="82.3577%" y="437" width="0.0802%" height="15" fill="rgb(225,162,37)" fg:x="1027" fg:w="1"/><text x="82.6077%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.3577%" y="421" width="0.0802%" height="15" fill="rgb(242,92,13)" fg:x="1027" fg:w="1"/><text x="82.6077%" y="431.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="82.4379%" y="533" width="0.0802%" height="15" fill="rgb(220,43,36)" fg:x="1028" fg:w="1"/><text x="82.6879%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.4379%" y="517" width="0.0802%" height="15" fill="rgb(213,165,48)" fg:x="1028" fg:w="1"/><text x="82.6879%" y="527.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="82.4379%" y="501" width="0.0802%" height="15" fill="rgb(227,200,9)" fg:x="1028" fg:w="1"/><text x="82.6879%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="82.4379%" y="485" width="0.0802%" height="15" fill="rgb(221,222,28)" fg:x="1028" fg:w="1"/><text x="82.6879%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.4379%" y="469" width="0.0802%" height="15" fill="rgb(223,142,26)" fg:x="1028" fg:w="1"/><text x="82.6879%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.4379%" y="453" width="0.0802%" height="15" fill="rgb(243,46,9)" fg:x="1028" fg:w="1"/><text x="82.6879%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4379%" y="437" width="0.0802%" height="15" fill="rgb(250,56,11)" fg:x="1028" fg:w="1"/><text x="82.6879%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4379%" y="421" width="0.0802%" height="15" fill="rgb(229,113,5)" fg:x="1028" fg:w="1"/><text x="82.6879%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4379%" y="405" width="0.0802%" height="15" fill="rgb(244,108,28)" fg:x="1028" fg:w="1"/><text x="82.6879%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4379%" y="389" width="0.0802%" height="15" fill="rgb(242,119,50)" fg:x="1028" fg:w="1"/><text x="82.6879%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4379%" y="373" width="0.0802%" height="15" fill="rgb(224,164,23)" fg:x="1028" fg:w="1"/><text x="82.6879%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.4379%" y="357" width="0.0802%" height="15" fill="rgb(214,227,44)" fg:x="1028" fg:w="1"/><text x="82.6879%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="82.4379%" y="565" width="0.1604%" height="15" fill="rgb(238,202,4)" fg:x="1028" fg:w="2"/><text x="82.6879%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="82.4379%" y="549" width="0.1604%" height="15" fill="rgb(213,190,30)" fg:x="1028" fg:w="2"/><text x="82.6879%" y="559.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="82.5180%" y="533" width="0.0802%" height="15" fill="rgb(239,15,2)" fg:x="1029" fg:w="1"/><text x="82.7680%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.5180%" y="517" width="0.0802%" height="15" fill="rgb(249,229,4)" fg:x="1029" fg:w="1"/><text x="82.7680%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.5180%" y="501" width="0.0802%" height="15" fill="rgb(239,75,44)" fg:x="1029" fg:w="1"/><text x="82.7680%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.5180%" y="485" width="0.0802%" height="15" fill="rgb(251,206,23)" fg:x="1029" fg:w="1"/><text x="82.7680%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.5180%" y="469" width="0.0802%" height="15" fill="rgb(215,208,0)" fg:x="1029" fg:w="1"/><text x="82.7680%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.5180%" y="453" width="0.0802%" height="15" fill="rgb(230,75,50)" fg:x="1029" fg:w="1"/><text x="82.7680%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="82.5180%" y="437" width="0.0802%" height="15" fill="rgb(246,180,39)" fg:x="1029" fg:w="1"/><text x="82.7680%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="82.5180%" y="421" width="0.0802%" height="15" fill="rgb(249,175,24)" fg:x="1029" fg:w="1"/><text x="82.7680%" y="431.50"></text></g><g><title>kernel::model::scopes::Props::property_named (1 samples, 0.08%)</title><rect x="82.5982%" y="437" width="0.0802%" height="15" fill="rgb(247,176,22)" fg:x="1030" fg:w="1"/><text x="82.8482%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.5982%" y="421" width="0.0802%" height="15" fill="rgb(241,100,24)" fg:x="1030" fg:w="1"/><text x="82.8482%" y="431.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="82.5982%" y="517" width="0.1604%" height="15" fill="rgb(233,4,35)" fg:x="1030" fg:w="2"/><text x="82.8482%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="82.5982%" y="501" width="0.1604%" height="15" fill="rgb(211,164,46)" fg:x="1030" fg:w="2"/><text x="82.8482%" y="511.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="82.5982%" y="485" width="0.1604%" height="15" fill="rgb(242,99,53)" fg:x="1030" fg:w="2"/><text x="82.8482%" y="495.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="82.5982%" y="469" width="0.1604%" height="15" fill="rgb(243,45,33)" fg:x="1030" fg:w="2"/><text x="82.8482%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="82.5982%" y="453" width="0.1604%" height="15" fill="rgb(217,55,21)" fg:x="1030" fg:w="2"/><text x="82.8482%" y="463.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="82.6784%" y="437" width="0.0802%" height="15" fill="rgb(245,145,46)" fg:x="1031" fg:w="1"/><text x="82.9284%" y="447.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="82.6784%" y="421" width="0.0802%" height="15" fill="rgb(215,112,45)" fg:x="1031" fg:w="1"/><text x="82.9284%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="82.6784%" y="405" width="0.0802%" height="15" fill="rgb(228,104,16)" fg:x="1031" fg:w="1"/><text x="82.9284%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.6784%" y="389" width="0.0802%" height="15" fill="rgb(239,186,38)" fg:x="1031" fg:w="1"/><text x="82.9284%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="82.6784%" y="373" width="0.0802%" height="15" fill="rgb(228,38,35)" fg:x="1031" fg:w="1"/><text x="82.9284%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.6784%" y="357" width="0.0802%" height="15" fill="rgb(251,42,40)" fg:x="1031" fg:w="1"/><text x="82.9284%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.6784%" y="341" width="0.0802%" height="15" fill="rgb(210,51,19)" fg:x="1031" fg:w="1"/><text x="82.9284%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.6784%" y="325" width="0.0802%" height="15" fill="rgb(236,94,42)" fg:x="1031" fg:w="1"/><text x="82.9284%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.6784%" y="309" width="0.0802%" height="15" fill="rgb(239,167,16)" fg:x="1031" fg:w="1"/><text x="82.9284%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="82.7586%" y="309" width="0.0802%" height="15" fill="rgb(252,175,31)" fg:x="1032" fg:w="1"/><text x="83.0086%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="82.7586%" y="453" width="0.1604%" height="15" fill="rgb(206,166,30)" fg:x="1032" fg:w="2"/><text x="83.0086%" y="463.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="82.7586%" y="437" width="0.1604%" height="15" fill="rgb(206,209,37)" fg:x="1032" fg:w="2"/><text x="83.0086%" y="447.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="82.7586%" y="421" width="0.1604%" height="15" fill="rgb(226,91,4)" fg:x="1032" fg:w="2"/><text x="83.0086%" y="431.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="82.7586%" y="405" width="0.1604%" height="15" fill="rgb(222,167,0)" fg:x="1032" fg:w="2"/><text x="83.0086%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.7586%" y="389" width="0.1604%" height="15" fill="rgb(211,70,14)" fg:x="1032" fg:w="2"/><text x="83.0086%" y="399.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="82.7586%" y="373" width="0.1604%" height="15" fill="rgb(214,84,42)" fg:x="1032" fg:w="2"/><text x="83.0086%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.7586%" y="357" width="0.1604%" height="15" fill="rgb(235,157,37)" fg:x="1032" fg:w="2"/><text x="83.0086%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="82.7586%" y="341" width="0.1604%" height="15" fill="rgb(225,13,6)" fg:x="1032" fg:w="2"/><text x="83.0086%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.7586%" y="325" width="0.1604%" height="15" fill="rgb(205,202,1)" fg:x="1032" fg:w="2"/><text x="83.0086%" y="335.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.8388%" y="309" width="0.0802%" height="15" fill="rgb(232,195,26)" fg:x="1033" fg:w="1"/><text x="83.0888%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.8388%" y="293" width="0.0802%" height="15" fill="rgb(208,102,26)" fg:x="1033" fg:w="1"/><text x="83.0888%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="82.7586%" y="501" width="0.2406%" height="15" fill="rgb(215,41,39)" fg:x="1032" fg:w="3"/><text x="83.0086%" y="511.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="82.7586%" y="485" width="0.2406%" height="15" fill="rgb(247,139,11)" fg:x="1032" fg:w="3"/><text x="83.0086%" y="495.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="82.7586%" y="469" width="0.2406%" height="15" fill="rgb(243,99,6)" fg:x="1032" fg:w="3"/><text x="83.0086%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="82.9190%" y="453" width="0.0802%" height="15" fill="rgb(230,168,48)" fg:x="1034" fg:w="1"/><text x="83.1690%" y="463.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="82.9190%" y="437" width="0.0802%" height="15" fill="rgb(238,227,13)" fg:x="1034" fg:w="1"/><text x="83.1690%" y="447.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="82.9190%" y="421" width="0.0802%" height="15" fill="rgb(209,109,13)" fg:x="1034" fg:w="1"/><text x="83.1690%" y="431.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.9190%" y="405" width="0.0802%" height="15" fill="rgb(228,195,1)" fg:x="1034" fg:w="1"/><text x="83.1690%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.9190%" y="389" width="0.0802%" height="15" fill="rgb(230,218,0)" fg:x="1034" fg:w="1"/><text x="83.1690%" y="399.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.9190%" y="373" width="0.0802%" height="15" fill="rgb(206,1,45)" fg:x="1034" fg:w="1"/><text x="83.1690%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.9190%" y="357" width="0.0802%" height="15" fill="rgb(209,124,26)" fg:x="1034" fg:w="1"/><text x="83.1690%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.9992%" y="405" width="0.0802%" height="15" fill="rgb(220,59,8)" fg:x="1035" fg:w="1"/><text x="83.2492%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.9992%" y="389" width="0.0802%" height="15" fill="rgb(251,41,37)" fg:x="1035" fg:w="1"/><text x="83.2492%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.9992%" y="373" width="0.0802%" height="15" fill="rgb(239,152,21)" fg:x="1035" fg:w="1"/><text x="83.2492%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.9992%" y="357" width="0.0802%" height="15" fill="rgb(226,32,1)" fg:x="1035" fg:w="1"/><text x="83.2492%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.9992%" y="341" width="0.0802%" height="15" fill="rgb(230,154,36)" fg:x="1035" fg:w="1"/><text x="83.2492%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.9992%" y="325" width="0.0802%" height="15" fill="rgb(208,228,43)" fg:x="1035" fg:w="1"/><text x="83.2492%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="82.9992%" y="453" width="0.1604%" height="15" fill="rgb(214,203,3)" fg:x="1035" fg:w="2"/><text x="83.2492%" y="463.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="82.9992%" y="437" width="0.1604%" height="15" fill="rgb(207,149,29)" fg:x="1035" fg:w="2"/><text x="83.2492%" y="447.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="82.9992%" y="421" width="0.1604%" height="15" fill="rgb(250,105,7)" fg:x="1035" fg:w="2"/><text x="83.2492%" y="431.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="83.0794%" y="405" width="0.0802%" height="15" fill="rgb(232,222,16)" fg:x="1036" fg:w="1"/><text x="83.3294%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.0794%" y="389" width="0.0802%" height="15" fill="rgb(209,32,24)" fg:x="1036" fg:w="1"/><text x="83.3294%" y="399.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="83.0794%" y="373" width="0.0802%" height="15" fill="rgb(225,13,6)" fg:x="1036" fg:w="1"/><text x="83.3294%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.1596%" y="405" width="0.0802%" height="15" fill="rgb(245,226,26)" fg:x="1037" fg:w="1"/><text x="83.4096%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.1596%" y="389" width="0.0802%" height="15" fill="rgb(229,178,27)" fg:x="1037" fg:w="1"/><text x="83.4096%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.1596%" y="373" width="0.0802%" height="15" fill="rgb(205,227,28)" fg:x="1037" fg:w="1"/><text x="83.4096%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.1596%" y="357" width="0.0802%" height="15" fill="rgb(210,191,45)" fg:x="1037" fg:w="1"/><text x="83.4096%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.1596%" y="341" width="0.0802%" height="15" fill="rgb(206,124,16)" fg:x="1037" fg:w="1"/><text x="83.4096%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.1596%" y="325" width="0.0802%" height="15" fill="rgb(210,162,0)" fg:x="1037" fg:w="1"/><text x="83.4096%" y="335.50"></text></g><g><title>core::iter::adapters::try_process (9 samples, 0.72%)</title><rect x="82.5982%" y="565" width="0.7217%" height="15" fill="rgb(211,54,38)" fg:x="1030" fg:w="9"/><text x="82.8482%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.72%)</title><rect x="82.5982%" y="549" width="0.7217%" height="15" fill="rgb(248,192,3)" fg:x="1030" fg:w="9"/><text x="82.8482%" y="559.50"></text></g><g><title>plugins_core::build::QuickThing::make (9 samples, 0.72%)</title><rect x="82.5982%" y="533" width="0.7217%" height="15" fill="rgb(233,187,18)" fg:x="1030" fg:w="9"/><text x="82.8482%" y="543.50"></text></g><g><title>plugins_core::build::Build::leads_to (7 samples, 0.56%)</title><rect x="82.7586%" y="517" width="0.5613%" height="15" fill="rgb(237,208,14)" fg:x="1032" fg:w="7"/><text x="83.0086%" y="527.50"></text></g><g><title>plugins_core::tools::leads_to (4 samples, 0.32%)</title><rect x="82.9992%" y="501" width="0.3208%" height="15" fill="rgb(212,77,1)" fg:x="1035" fg:w="4"/><text x="83.2492%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="82.9992%" y="485" width="0.3208%" height="15" fill="rgb(210,163,22)" fg:x="1035" fg:w="4"/><text x="83.2492%" y="495.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="82.9992%" y="469" width="0.3208%" height="15" fill="rgb(250,58,28)" fg:x="1035" fg:w="4"/><text x="83.2492%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="83.1596%" y="453" width="0.1604%" height="15" fill="rgb(254,28,41)" fg:x="1037" fg:w="2"/><text x="83.4096%" y="463.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="83.1596%" y="437" width="0.1604%" height="15" fill="rgb(237,162,36)" fg:x="1037" fg:w="2"/><text x="83.4096%" y="447.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="83.1596%" y="421" width="0.1604%" height="15" fill="rgb(232,56,6)" fg:x="1037" fg:w="2"/><text x="83.4096%" y="431.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="83.2398%" y="405" width="0.0802%" height="15" fill="rgb(216,127,42)" fg:x="1038" fg:w="1"/><text x="83.4898%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.2398%" y="389" width="0.0802%" height="15" fill="rgb(241,69,15)" fg:x="1038" fg:w="1"/><text x="83.4898%" y="399.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="83.2398%" y="373" width="0.0802%" height="15" fill="rgb(227,180,19)" fg:x="1038" fg:w="1"/><text x="83.4898%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.2398%" y="357" width="0.0802%" height="15" fill="rgb(231,188,29)" fg:x="1038" fg:w="1"/><text x="83.4898%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.2398%" y="341" width="0.0802%" height="15" fill="rgb(224,176,27)" fg:x="1038" fg:w="1"/><text x="83.4898%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.2398%" y="325" width="0.0802%" height="15" fill="rgb(249,214,19)" fg:x="1038" fg:w="1"/><text x="83.4898%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.2398%" y="309" width="0.0802%" height="15" fill="rgb(240,0,4)" fg:x="1038" fg:w="1"/><text x="83.4898%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="83.2398%" y="293" width="0.0802%" height="15" fill="rgb(233,28,41)" fg:x="1038" fg:w="1"/><text x="83.4898%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="83.2398%" y="277" width="0.0802%" height="15" fill="rgb(220,90,51)" fg:x="1038" fg:w="1"/><text x="83.4898%" y="287.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="83.4002%" y="533" width="0.0802%" height="15" fill="rgb(250,52,22)" fg:x="1040" fg:w="1"/><text x="83.6502%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="83.4002%" y="517" width="0.0802%" height="15" fill="rgb(231,152,36)" fg:x="1040" fg:w="1"/><text x="83.6502%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.4002%" y="501" width="0.0802%" height="15" fill="rgb(250,218,4)" fg:x="1040" fg:w="1"/><text x="83.6502%" y="511.50"></text></g><g><title>engine::identifiers::model::set_gid (1 samples, 0.08%)</title><rect x="83.4804%" y="533" width="0.0802%" height="15" fill="rgb(210,38,21)" fg:x="1041" fg:w="1"/><text x="83.7304%" y="543.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (1 samples, 0.08%)</title><rect x="83.4804%" y="517" width="0.0802%" height="15" fill="rgb(230,75,13)" fg:x="1041" fg:w="1"/><text x="83.7304%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="83.5605%" y="469" width="0.2406%" height="15" fill="rgb(250,68,53)" fg:x="1042" fg:w="3"/><text x="83.8105%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="83.6407%" y="453" width="0.1604%" height="15" fill="rgb(250,210,16)" fg:x="1043" fg:w="2"/><text x="83.8907%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.7209%" y="437" width="0.0802%" height="15" fill="rgb(240,132,5)" fg:x="1044" fg:w="1"/><text x="83.9709%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="83.5605%" y="485" width="0.3208%" height="15" fill="rgb(222,148,48)" fg:x="1042" fg:w="4"/><text x="83.8105%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.8011%" y="469" width="0.0802%" height="15" fill="rgb(247,181,24)" fg:x="1045" fg:w="1"/><text x="84.0511%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="83.9615%" y="469" width="0.0802%" height="15" fill="rgb(239,5,31)" fg:x="1047" fg:w="1"/><text x="84.2115%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="84.0417%" y="469" width="0.0802%" height="15" fill="rgb(241,152,38)" fg:x="1048" fg:w="1"/><text x="84.2917%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="84.2021%" y="453" width="0.0802%" height="15" fill="rgb(246,200,37)" fg:x="1050" fg:w="1"/><text x="84.4521%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="84.2823%" y="421" width="0.0802%" height="15" fill="rgb(243,210,26)" fg:x="1051" fg:w="1"/><text x="84.5323%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="84.2823%" y="453" width="0.1604%" height="15" fill="rgb(222,22,22)" fg:x="1051" fg:w="2"/><text x="84.5323%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="84.2823%" y="437" width="0.1604%" height="15" fill="rgb(208,129,28)" fg:x="1051" fg:w="2"/><text x="84.5323%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.3625%" y="421" width="0.0802%" height="15" fill="rgb(254,169,28)" fg:x="1052" fg:w="1"/><text x="84.6125%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="84.4427%" y="453" width="0.0802%" height="15" fill="rgb(225,45,17)" fg:x="1053" fg:w="1"/><text x="84.6927%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.4427%" y="437" width="0.0802%" height="15" fill="rgb(232,199,2)" fg:x="1053" fg:w="1"/><text x="84.6927%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.4427%" y="421" width="0.0802%" height="15" fill="rgb(235,33,40)" fg:x="1053" fg:w="1"/><text x="84.6927%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="84.5229%" y="437" width="0.0802%" height="15" fill="rgb(237,89,50)" fg:x="1054" fg:w="1"/><text x="84.7729%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="84.6832%" y="421" width="0.0802%" height="15" fill="rgb(238,126,5)" fg:x="1056" fg:w="1"/><text x="84.9332%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.6832%" y="405" width="0.0802%" height="15" fill="rgb(247,214,42)" fg:x="1056" fg:w="1"/><text x="84.9332%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="84.7634%" y="405" width="0.1604%" height="15" fill="rgb(238,60,45)" fg:x="1057" fg:w="2"/><text x="85.0134%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="84.7634%" y="389" width="0.1604%" height="15" fill="rgb(225,69,44)" fg:x="1057" fg:w="2"/><text x="85.0134%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.8436%" y="373" width="0.0802%" height="15" fill="rgb(241,13,44)" fg:x="1058" fg:w="1"/><text x="85.0936%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.8436%" y="357" width="0.0802%" height="15" fill="rgb(227,121,22)" fg:x="1058" fg:w="1"/><text x="85.0936%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.9238%" y="389" width="0.0802%" height="15" fill="rgb(231,160,23)" fg:x="1059" fg:w="1"/><text x="85.1738%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.9238%" y="373" width="0.0802%" height="15" fill="rgb(250,179,43)" fg:x="1059" fg:w="1"/><text x="85.1738%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.9238%" y="357" width="0.0802%" height="15" fill="rgb(233,54,46)" fg:x="1059" fg:w="1"/><text x="85.1738%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.9238%" y="341" width="0.0802%" height="15" fill="rgb(247,120,42)" fg:x="1059" fg:w="1"/><text x="85.1738%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="84.9238%" y="405" width="0.1604%" height="15" fill="rgb(221,219,12)" fg:x="1059" fg:w="2"/><text x="85.1738%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="85.0040%" y="389" width="0.0802%" height="15" fill="rgb(211,126,8)" fg:x="1060" fg:w="1"/><text x="85.2540%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="84.6030%" y="437" width="0.6415%" height="15" fill="rgb(218,154,33)" fg:x="1055" fg:w="8"/><text x="84.8530%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="84.7634%" y="421" width="0.4812%" height="15" fill="rgb(212,199,16)" fg:x="1057" fg:w="6"/><text x="85.0134%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="85.0842%" y="405" width="0.1604%" height="15" fill="rgb(236,215,46)" fg:x="1061" fg:w="2"/><text x="85.3342%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="85.0842%" y="389" width="0.1604%" height="15" fill="rgb(232,32,22)" fg:x="1061" fg:w="2"/><text x="85.3342%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="85.0842%" y="373" width="0.1604%" height="15" fill="rgb(234,79,15)" fg:x="1061" fg:w="2"/><text x="85.3342%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="85.1644%" y="357" width="0.0802%" height="15" fill="rgb(235,187,47)" fg:x="1062" fg:w="1"/><text x="85.4144%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="85.1644%" y="341" width="0.0802%" height="15" fill="rgb(244,69,37)" fg:x="1062" fg:w="1"/><text x="85.4144%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="85.1644%" y="325" width="0.0802%" height="15" fill="rgb(249,140,25)" fg:x="1062" fg:w="1"/><text x="85.4144%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="84.5229%" y="453" width="0.9623%" height="15" fill="rgb(213,69,8)" fg:x="1054" fg:w="12"/><text x="84.7729%" y="463.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="85.2446%" y="437" width="0.2406%" height="15" fill="rgb(220,136,2)" fg:x="1063" fg:w="3"/><text x="85.4946%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.4050%" y="421" width="0.0802%" height="15" fill="rgb(237,50,36)" fg:x="1065" fg:w="1"/><text x="85.6550%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.4050%" y="405" width="0.0802%" height="15" fill="rgb(226,18,11)" fg:x="1065" fg:w="1"/><text x="85.6550%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.44%)</title><rect x="84.1219%" y="469" width="1.4435%" height="15" fill="rgb(243,156,2)" fg:x="1049" fg:w="18"/><text x="84.3719%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.4852%" y="453" width="0.0802%" height="15" fill="rgb(218,8,34)" fg:x="1066" fg:w="1"/><text x="85.7352%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.4852%" y="437" width="0.0802%" height="15" fill="rgb(250,94,35)" fg:x="1066" fg:w="1"/><text x="85.7352%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.4852%" y="421" width="0.0802%" height="15" fill="rgb(229,127,21)" fg:x="1066" fg:w="1"/><text x="85.7352%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (28 samples, 2.25%)</title><rect x="83.5605%" y="501" width="2.2454%" height="15" fill="rgb(234,49,5)" fg:x="1042" fg:w="28"/><text x="83.8105%" y="511.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24 samples, 1.92%)</title><rect x="83.8813%" y="485" width="1.9246%" height="15" fill="rgb(248,12,16)" fg:x="1046" fg:w="24"/><text x="84.1313%" y="495.50">s..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="85.5654%" y="469" width="0.2406%" height="15" fill="rgb(208,220,31)" fg:x="1067" fg:w="3"/><text x="85.8154%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="85.5654%" y="453" width="0.2406%" height="15" fill="rgb(243,184,0)" fg:x="1067" fg:w="3"/><text x="85.8154%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="85.6455%" y="437" width="0.1604%" height="15" fill="rgb(217,38,21)" fg:x="1068" fg:w="2"/><text x="85.8955%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="85.7257%" y="421" width="0.0802%" height="15" fill="rgb(239,120,45)" fg:x="1069" fg:w="1"/><text x="85.9757%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="85.7257%" y="405" width="0.0802%" height="15" fill="rgb(235,33,2)" fg:x="1069" fg:w="1"/><text x="85.9757%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="85.8059%" y="453" width="0.1604%" height="15" fill="rgb(249,161,5)" fg:x="1070" fg:w="2"/><text x="86.0559%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.9663%" y="437" width="0.0802%" height="15" fill="rgb(250,165,48)" fg:x="1072" fg:w="1"/><text x="86.2163%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="85.8059%" y="501" width="0.3208%" height="15" fill="rgb(221,23,45)" fg:x="1070" fg:w="4"/><text x="86.0559%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="85.8059%" y="485" width="0.3208%" height="15" fill="rgb(217,108,46)" fg:x="1070" fg:w="4"/><text x="86.0559%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="85.8059%" y="469" width="0.3208%" height="15" fill="rgb(254,26,35)" fg:x="1070" fg:w="4"/><text x="86.0559%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="85.9663%" y="453" width="0.1604%" height="15" fill="rgb(218,223,28)" fg:x="1072" fg:w="2"/><text x="86.2163%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.0465%" y="437" width="0.0802%" height="15" fill="rgb(242,27,47)" fg:x="1073" fg:w="1"/><text x="86.2965%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.0465%" y="421" width="0.0802%" height="15" fill="rgb(218,39,35)" fg:x="1073" fg:w="1"/><text x="86.2965%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="86.2069%" y="453" width="0.0802%" height="15" fill="rgb(232,127,16)" fg:x="1075" fg:w="1"/><text x="86.4569%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="86.2871%" y="453" width="0.0802%" height="15" fill="rgb(231,219,51)" fg:x="1076" fg:w="1"/><text x="86.5371%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.2871%" y="437" width="0.0802%" height="15" fill="rgb(217,220,46)" fg:x="1076" fg:w="1"/><text x="86.5371%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="86.3673%" y="453" width="0.0802%" height="15" fill="rgb(230,75,1)" fg:x="1077" fg:w="1"/><text x="86.6173%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.3673%" y="437" width="0.0802%" height="15" fill="rgb(218,2,8)" fg:x="1077" fg:w="1"/><text x="86.6173%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.3673%" y="421" width="0.0802%" height="15" fill="rgb(206,111,30)" fg:x="1077" fg:w="1"/><text x="86.6173%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.3673%" y="405" width="0.0802%" height="15" fill="rgb(209,135,6)" fg:x="1077" fg:w="1"/><text x="86.6173%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.3673%" y="389" width="0.0802%" height="15" fill="rgb(205,169,10)" fg:x="1077" fg:w="1"/><text x="86.6173%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.4475%" y="405" width="0.0802%" height="15" fill="rgb(212,204,38)" fg:x="1078" fg:w="1"/><text x="86.6975%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.4475%" y="389" width="0.0802%" height="15" fill="rgb(205,199,14)" fg:x="1078" fg:w="1"/><text x="86.6975%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.4475%" y="373" width="0.0802%" height="15" fill="rgb(212,4,6)" fg:x="1078" fg:w="1"/><text x="86.6975%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="86.5277%" y="405" width="0.1604%" height="15" fill="rgb(250,15,10)" fg:x="1079" fg:w="2"/><text x="86.7777%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="86.5277%" y="389" width="0.1604%" height="15" fill="rgb(212,49,51)" fg:x="1079" fg:w="2"/><text x="86.7777%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="86.6079%" y="373" width="0.0802%" height="15" fill="rgb(235,21,9)" fg:x="1080" fg:w="1"/><text x="86.8579%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.9286%" y="373" width="0.0802%" height="15" fill="rgb(251,31,32)" fg:x="1084" fg:w="1"/><text x="87.1786%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.0890%" y="309" width="0.0802%" height="15" fill="rgb(246,23,9)" fg:x="1086" fg:w="1"/><text x="87.3390%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="87.1692%" y="293" width="0.0802%" height="15" fill="rgb(225,216,14)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.1692%" y="277" width="0.0802%" height="15" fill="rgb(215,200,26)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.1692%" y="261" width="0.0802%" height="15" fill="rgb(237,130,47)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.1692%" y="245" width="0.0802%" height="15" fill="rgb(247,74,14)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="255.50"></text></g><g><title>engine::session::Session::flush (50 samples, 4.01%)</title><rect x="83.3200%" y="565" width="4.0096%" height="15" fill="rgb(254,97,46)" fg:x="1039" fg:w="50"/><text x="83.5700%" y="575.50">engi..</text></g><g><title>engine::session::Session::save_entity_changes (50 samples, 4.01%)</title><rect x="83.3200%" y="549" width="4.0096%" height="15" fill="rgb(234,191,1)" fg:x="1039" fg:w="50"/><text x="83.5700%" y="559.50">engi..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (47 samples, 3.77%)</title><rect x="83.5605%" y="533" width="3.7690%" height="15" fill="rgb(215,165,14)" fg:x="1042" fg:w="47"/><text x="83.8105%" y="543.50">engi..</text></g><g><title>engine::session::SavesEntities::check_for_changes (47 samples, 3.77%)</title><rect x="83.5605%" y="517" width="3.7690%" height="15" fill="rgb(230,182,6)" fg:x="1042" fg:w="47"/><text x="83.8105%" y="527.50">engi..</text></g><g><title>kernel::model::any_entity_changes (15 samples, 1.20%)</title><rect x="86.1267%" y="501" width="1.2029%" height="15" fill="rgb(210,127,39)" fg:x="1074" fg:w="15"/><text x="86.3767%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (15 samples, 1.20%)</title><rect x="86.1267%" y="485" width="1.2029%" height="15" fill="rgb(223,212,51)" fg:x="1074" fg:w="15"/><text x="86.3767%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (15 samples, 1.20%)</title><rect x="86.1267%" y="469" width="1.2029%" height="15" fill="rgb(226,176,43)" fg:x="1074" fg:w="15"/><text x="86.3767%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (11 samples, 0.88%)</title><rect x="86.4475%" y="453" width="0.8821%" height="15" fill="rgb(222,155,4)" fg:x="1078" fg:w="11"/><text x="86.6975%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="86.4475%" y="437" width="0.8821%" height="15" fill="rgb(215,149,7)" fg:x="1078" fg:w="11"/><text x="86.6975%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.88%)</title><rect x="86.4475%" y="421" width="0.8821%" height="15" fill="rgb(252,199,23)" fg:x="1078" fg:w="11"/><text x="86.6975%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="86.6881%" y="405" width="0.6415%" height="15" fill="rgb(245,52,29)" fg:x="1081" fg:w="8"/><text x="86.9381%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="86.9286%" y="389" width="0.4010%" height="15" fill="rgb(221,228,19)" fg:x="1084" fg:w="5"/><text x="87.1786%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="87.0088%" y="373" width="0.3208%" height="15" fill="rgb(253,101,6)" fg:x="1085" fg:w="4"/><text x="87.2588%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="87.0088%" y="357" width="0.3208%" height="15" fill="rgb(211,130,8)" fg:x="1085" fg:w="4"/><text x="87.2588%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="87.0088%" y="341" width="0.3208%" height="15" fill="rgb(238,37,53)" fg:x="1085" fg:w="4"/><text x="87.2588%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="87.0890%" y="325" width="0.2406%" height="15" fill="rgb(235,145,5)" fg:x="1086" fg:w="3"/><text x="87.3390%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="87.1692%" y="309" width="0.1604%" height="15" fill="rgb(244,12,43)" fg:x="1087" fg:w="2"/><text x="87.4192%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.2494%" y="293" width="0.0802%" height="15" fill="rgb(246,195,24)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="87.3296%" y="533" width="0.0802%" height="15" fill="rgb(235,163,6)" fg:x="1089" fg:w="1"/><text x="87.5796%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="87.3296%" y="517" width="0.0802%" height="15" fill="rgb(236,218,17)" fg:x="1089" fg:w="1"/><text x="87.5796%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.4098%" y="501" width="0.0802%" height="15" fill="rgb(235,12,38)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="511.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="87.4098%" y="485" width="0.0802%" height="15" fill="rgb(225,195,33)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="87.4098%" y="469" width="0.0802%" height="15" fill="rgb(238,54,35)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.4098%" y="453" width="0.0802%" height="15" fill="rgb(238,33,7)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.4098%" y="437" width="0.0802%" height="15" fill="rgb(245,5,14)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.4098%" y="421" width="0.0802%" height="15" fill="rgb(251,95,31)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.4098%" y="405" width="0.0802%" height="15" fill="rgb(222,15,46)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.4098%" y="389" width="0.0802%" height="15" fill="rgb(226,182,24)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.4098%" y="373" width="0.0802%" height="15" fill="rgb(229,105,41)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.4098%" y="357" width="0.0802%" height="15" fill="rgb(216,99,53)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.4098%" y="341" width="0.0802%" height="15" fill="rgb(253,26,20)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.4098%" y="325" width="0.0802%" height="15" fill="rgb(249,155,28)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.4098%" y="309" width="0.0802%" height="15" fill="rgb(241,221,2)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.4098%" y="293" width="0.0802%" height="15" fill="rgb(219,124,6)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.4098%" y="277" width="0.0802%" height="15" fill="rgb(233,37,6)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.4098%" y="261" width="0.0802%" height="15" fill="rgb(238,20,14)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.4098%" y="245" width="0.0802%" height="15" fill="rgb(232,106,27)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.4098%" y="229" width="0.0802%" height="15" fill="rgb(246,157,24)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="239.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="87.4098%" y="517" width="0.1604%" height="15" fill="rgb(214,153,10)" fg:x="1090" fg:w="2"/><text x="87.6598%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="87.4900%" y="501" width="0.0802%" height="15" fill="rgb(212,94,6)" fg:x="1091" fg:w="1"/><text x="87.7400%" y="511.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="87.4900%" y="485" width="0.0802%" height="15" fill="rgb(254,25,27)" fg:x="1091" fg:w="1"/><text x="87.7400%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (1 samples, 0.08%)</title><rect x="87.4900%" y="469" width="0.0802%" height="15" fill="rgb(250,43,52)" fg:x="1091" fg:w="1"/><text x="87.7400%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.4900%" y="453" width="0.0802%" height="15" fill="rgb(221,226,40)" fg:x="1091" fg:w="1"/><text x="87.7400%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.4900%" y="437" width="0.0802%" height="15" fill="rgb(235,162,34)" fg:x="1091" fg:w="1"/><text x="87.7400%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="87.3296%" y="549" width="0.6415%" height="15" fill="rgb(239,24,26)" fg:x="1089" fg:w="8"/><text x="87.5796%" y="559.50"></text></g><g><title>engine::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="87.4098%" y="533" width="0.5613%" height="15" fill="rgb(244,226,11)" fg:x="1090" fg:w="7"/><text x="87.6598%" y="543.50"></text></g><g><title>engine::internal::EntityMap::add_entity (5 samples, 0.40%)</title><rect x="87.5702%" y="517" width="0.4010%" height="15" fill="rgb(225,23,10)" fg:x="1092" fg:w="5"/><text x="87.8202%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.40%)</title><rect x="87.5702%" y="501" width="0.4010%" height="15" fill="rgb(249,125,6)" fg:x="1092" fg:w="5"/><text x="87.8202%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.40%)</title><rect x="87.5702%" y="485" width="0.4010%" height="15" fill="rgb(246,212,12)" fg:x="1092" fg:w="5"/><text x="87.8202%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.40%)</title><rect x="87.5702%" y="469" width="0.4010%" height="15" fill="rgb(230,43,32)" fg:x="1092" fg:w="5"/><text x="87.8202%" y="479.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="87.5702%" y="453" width="0.4010%" height="15" fill="rgb(210,95,23)" fg:x="1092" fg:w="5"/><text x="87.8202%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="87.9711%" y="533" width="0.0802%" height="15" fill="rgb(229,103,33)" fg:x="1097" fg:w="1"/><text x="88.2211%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="87.9711%" y="517" width="0.0802%" height="15" fill="rgb(222,104,27)" fg:x="1097" fg:w="1"/><text x="88.2211%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.9711%" y="501" width="0.0802%" height="15" fill="rgb(239,221,23)" fg:x="1097" fg:w="1"/><text x="88.2211%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.1315%" y="453" width="0.0802%" height="15" fill="rgb(222,98,21)" fg:x="1099" fg:w="1"/><text x="88.3815%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.1315%" y="437" width="0.0802%" height="15" fill="rgb(231,101,20)" fg:x="1099" fg:w="1"/><text x="88.3815%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.1315%" y="421" width="0.0802%" height="15" fill="rgb(215,150,22)" fg:x="1099" fg:w="1"/><text x="88.3815%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.1315%" y="405" width="0.0802%" height="15" fill="rgb(248,3,34)" fg:x="1099" fg:w="1"/><text x="88.3815%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.1315%" y="389" width="0.0802%" height="15" fill="rgb(220,141,21)" fg:x="1099" fg:w="1"/><text x="88.3815%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="88.1315%" y="501" width="0.1604%" height="15" fill="rgb(223,41,48)" fg:x="1099" fg:w="2"/><text x="88.3815%" y="511.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="88.1315%" y="485" width="0.1604%" height="15" fill="rgb(247,12,5)" fg:x="1099" fg:w="2"/><text x="88.3815%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="88.1315%" y="469" width="0.1604%" height="15" fill="rgb(206,173,10)" fg:x="1099" fg:w="2"/><text x="88.3815%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.2117%" y="453" width="0.0802%" height="15" fill="rgb(233,214,37)" fg:x="1100" fg:w="1"/><text x="88.4617%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.2117%" y="437" width="0.0802%" height="15" fill="rgb(238,86,43)" fg:x="1100" fg:w="1"/><text x="88.4617%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.2117%" y="421" width="0.0802%" height="15" fill="rgb(212,182,8)" fg:x="1100" fg:w="1"/><text x="88.4617%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.2117%" y="405" width="0.0802%" height="15" fill="rgb(240,91,47)" fg:x="1100" fg:w="1"/><text x="88.4617%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.2117%" y="389" width="0.0802%" height="15" fill="rgb(209,138,26)" fg:x="1100" fg:w="1"/><text x="88.4617%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.2117%" y="373" width="0.0802%" height="15" fill="rgb(231,163,20)" fg:x="1100" fg:w="1"/><text x="88.4617%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="88.2117%" y="357" width="0.0802%" height="15" fill="rgb(214,91,54)" fg:x="1100" fg:w="1"/><text x="88.4617%" y="367.50"></text></g><g><title>kernel::model::scopes::Props::property_named (1 samples, 0.08%)</title><rect x="88.2919%" y="485" width="0.0802%" height="15" fill="rgb(230,32,17)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.3721%" y="453" width="0.0802%" height="15" fill="rgb(231,34,34)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.3721%" y="437" width="0.0802%" height="15" fill="rgb(224,228,27)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.3721%" y="421" width="0.0802%" height="15" fill="rgb(219,35,40)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.3721%" y="405" width="0.0802%" height="15" fill="rgb(234,42,8)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.3721%" y="389" width="0.0802%" height="15" fill="rgb(226,75,22)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.3721%" y="373" width="0.0802%" height="15" fill="rgb(242,203,28)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.3721%" y="357" width="0.0802%" height="15" fill="rgb(221,3,9)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="367.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="88.0513%" y="533" width="0.4812%" height="15" fill="rgb(214,34,31)" fg:x="1098" fg:w="6"/><text x="88.3013%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.48%)</title><rect x="88.0513%" y="517" width="0.4812%" height="15" fill="rgb(252,119,15)" fg:x="1098" fg:w="6"/><text x="88.3013%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="88.2919%" y="501" width="0.2406%" height="15" fill="rgb(244,224,31)" fg:x="1101" fg:w="3"/><text x="88.5419%" y="511.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="88.3721%" y="485" width="0.1604%" height="15" fill="rgb(215,8,51)" fg:x="1102" fg:w="2"/><text x="88.6221%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="88.3721%" y="469" width="0.1604%" height="15" fill="rgb(207,24,1)" fg:x="1102" fg:w="2"/><text x="88.6221%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.4523%" y="453" width="0.0802%" height="15" fill="rgb(245,90,0)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.6127%" y="437" width="0.0802%" height="15" fill="rgb(246,43,48)" fg:x="1105" fg:w="1"/><text x="88.8627%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.6127%" y="421" width="0.0802%" height="15" fill="rgb(252,218,10)" fg:x="1105" fg:w="1"/><text x="88.8627%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="88.5325%" y="485" width="0.2406%" height="15" fill="rgb(231,24,35)" fg:x="1104" fg:w="3"/><text x="88.7825%" y="495.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="88.6127%" y="469" width="0.1604%" height="15" fill="rgb(225,66,19)" fg:x="1105" fg:w="2"/><text x="88.8627%" y="479.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="88.6127%" y="453" width="0.1604%" height="15" fill="rgb(214,96,51)" fg:x="1105" fg:w="2"/><text x="88.8627%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.6929%" y="437" width="0.0802%" height="15" fill="rgb(251,151,47)" fg:x="1106" fg:w="1"/><text x="88.9429%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.6929%" y="421" width="0.0802%" height="15" fill="rgb(236,79,14)" fg:x="1106" fg:w="1"/><text x="88.9429%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.6929%" y="405" width="0.0802%" height="15" fill="rgb(210,205,11)" fg:x="1106" fg:w="1"/><text x="88.9429%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="88.7731%" y="421" width="0.1604%" height="15" fill="rgb(233,142,53)" fg:x="1107" fg:w="2"/><text x="89.0231%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="88.7731%" y="405" width="0.1604%" height="15" fill="rgb(212,116,48)" fg:x="1107" fg:w="2"/><text x="89.0231%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="88.7731%" y="389" width="0.1604%" height="15" fill="rgb(234,55,33)" fg:x="1107" fg:w="2"/><text x="89.0231%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="88.7731%" y="373" width="0.1604%" height="15" fill="rgb(253,92,27)" fg:x="1107" fg:w="2"/><text x="89.0231%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="88.7731%" y="357" width="0.1604%" height="15" fill="rgb(220,7,35)" fg:x="1107" fg:w="2"/><text x="89.0231%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="88.7731%" y="341" width="0.1604%" height="15" fill="rgb(246,124,6)" fg:x="1107" fg:w="2"/><text x="89.0231%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="88.7731%" y="325" width="0.1604%" height="15" fill="rgb(212,111,51)" fg:x="1107" fg:w="2"/><text x="89.0231%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="88.7731%" y="309" width="0.1604%" height="15" fill="rgb(253,116,7)" fg:x="1107" fg:w="2"/><text x="89.0231%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="88.7731%" y="293" width="0.1604%" height="15" fill="rgb(213,145,18)" fg:x="1107" fg:w="2"/><text x="89.0231%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="88.7731%" y="277" width="0.1604%" height="15" fill="rgb(219,149,7)" fg:x="1107" fg:w="2"/><text x="89.0231%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="88.7731%" y="261" width="0.1604%" height="15" fill="rgb(225,156,20)" fg:x="1107" fg:w="2"/><text x="89.0231%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="88.7731%" y="245" width="0.1604%" height="15" fill="rgb(211,98,19)" fg:x="1107" fg:w="2"/><text x="89.0231%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="88.7731%" y="229" width="0.1604%" height="15" fill="rgb(231,192,31)" fg:x="1107" fg:w="2"/><text x="89.0231%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="88.7731%" y="213" width="0.1604%" height="15" fill="rgb(249,95,19)" fg:x="1107" fg:w="2"/><text x="89.0231%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="88.7731%" y="197" width="0.1604%" height="15" fill="rgb(247,101,36)" fg:x="1107" fg:w="2"/><text x="89.0231%" y="207.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="88.7731%" y="181" width="0.1604%" height="15" fill="rgb(221,45,43)" fg:x="1107" fg:w="2"/><text x="89.0231%" y="191.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="88.7731%" y="165" width="0.1604%" height="15" fill="rgb(220,42,1)" fg:x="1107" fg:w="2"/><text x="89.0231%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="88.7731%" y="437" width="0.2406%" height="15" fill="rgb(236,19,24)" fg:x="1107" fg:w="3"/><text x="89.0231%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.9334%" y="421" width="0.0802%" height="15" fill="rgb(225,192,6)" fg:x="1109" fg:w="1"/><text x="89.1834%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.9334%" y="405" width="0.0802%" height="15" fill="rgb(242,30,19)" fg:x="1109" fg:w="1"/><text x="89.1834%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.9334%" y="389" width="0.0802%" height="15" fill="rgb(240,36,6)" fg:x="1109" fg:w="1"/><text x="89.1834%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.9334%" y="373" width="0.0802%" height="15" fill="rgb(246,40,28)" fg:x="1109" fg:w="1"/><text x="89.1834%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.9334%" y="357" width="0.0802%" height="15" fill="rgb(225,155,33)" fg:x="1109" fg:w="1"/><text x="89.1834%" y="367.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="88.9334%" y="341" width="0.0802%" height="15" fill="rgb(240,65,18)" fg:x="1109" fg:w="1"/><text x="89.1834%" y="351.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="88.9334%" y="325" width="0.0802%" height="15" fill="rgb(217,0,48)" fg:x="1109" fg:w="1"/><text x="89.1834%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="89.0136%" y="437" width="0.0802%" height="15" fill="rgb(217,80,15)" fg:x="1110" fg:w="1"/><text x="89.2636%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.0136%" y="421" width="0.0802%" height="15" fill="rgb(253,43,51)" fg:x="1110" fg:w="1"/><text x="89.2636%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="89.0136%" y="405" width="0.0802%" height="15" fill="rgb(246,60,4)" fg:x="1110" fg:w="1"/><text x="89.2636%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.0136%" y="389" width="0.0802%" height="15" fill="rgb(230,40,54)" fg:x="1110" fg:w="1"/><text x="89.2636%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.0136%" y="373" width="0.0802%" height="15" fill="rgb(208,20,44)" fg:x="1110" fg:w="1"/><text x="89.2636%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.0136%" y="357" width="0.0802%" height="15" fill="rgb(230,22,22)" fg:x="1110" fg:w="1"/><text x="89.2636%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.0136%" y="341" width="0.0802%" height="15" fill="rgb(207,57,4)" fg:x="1110" fg:w="1"/><text x="89.2636%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.0136%" y="325" width="0.0802%" height="15" fill="rgb(242,130,33)" fg:x="1110" fg:w="1"/><text x="89.2636%" y="335.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.72%)</title><rect x="88.5325%" y="517" width="0.7217%" height="15" fill="rgb(218,66,43)" fg:x="1104" fg:w="9"/><text x="88.7825%" y="527.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (9 samples, 0.72%)</title><rect x="88.5325%" y="501" width="0.7217%" height="15" fill="rgb(236,105,16)" fg:x="1104" fg:w="9"/><text x="88.7825%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="88.7731%" y="485" width="0.4812%" height="15" fill="rgb(230,46,15)" fg:x="1107" fg:w="6"/><text x="89.0231%" y="495.50"></text></g><g><title>kernel::model::scopes::load_props (6 samples, 0.48%)</title><rect x="88.7731%" y="469" width="0.4812%" height="15" fill="rgb(251,172,40)" fg:x="1107" fg:w="6"/><text x="89.0231%" y="479.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (6 samples, 0.48%)</title><rect x="88.7731%" y="453" width="0.4812%" height="15" fill="rgb(225,217,32)" fg:x="1107" fg:w="6"/><text x="89.0231%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="89.0938%" y="437" width="0.1604%" height="15" fill="rgb(243,10,29)" fg:x="1111" fg:w="2"/><text x="89.3438%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.0938%" y="421" width="0.1604%" height="15" fill="rgb(207,102,10)" fg:x="1111" fg:w="2"/><text x="89.3438%" y="431.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="89.0938%" y="405" width="0.1604%" height="15" fill="rgb(241,125,5)" fg:x="1111" fg:w="2"/><text x="89.3438%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.0938%" y="389" width="0.1604%" height="15" fill="rgb(230,125,29)" fg:x="1111" fg:w="2"/><text x="89.3438%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="89.0938%" y="373" width="0.1604%" height="15" fill="rgb(223,65,44)" fg:x="1111" fg:w="2"/><text x="89.3438%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.0938%" y="357" width="0.1604%" height="15" fill="rgb(224,188,28)" fg:x="1111" fg:w="2"/><text x="89.3438%" y="367.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.1740%" y="341" width="0.0802%" height="15" fill="rgb(254,197,27)" fg:x="1112" fg:w="1"/><text x="89.4240%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.1740%" y="325" width="0.0802%" height="15" fill="rgb(220,200,25)" fg:x="1112" fg:w="1"/><text x="89.4240%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.1740%" y="309" width="0.0802%" height="15" fill="rgb(239,225,54)" fg:x="1112" fg:w="1"/><text x="89.4240%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.1740%" y="293" width="0.0802%" height="15" fill="rgb(211,59,40)" fg:x="1112" fg:w="1"/><text x="89.4240%" y="303.50"></text></g><g><title>plugins_core::build::Build::holding (25 samples, 2.00%)</title><rect x="87.3296%" y="565" width="2.0048%" height="15" fill="rgb(213,176,46)" fg:x="1089" fg:w="25"/><text x="87.5796%" y="575.50">p..</text></g><g><title>plugins_core::tools::set_container (17 samples, 1.36%)</title><rect x="87.9711%" y="549" width="1.3633%" height="15" fill="rgb(226,99,4)" fg:x="1097" fg:w="17"/><text x="88.2211%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (10 samples, 0.80%)</title><rect x="88.5325%" y="533" width="0.8019%" height="15" fill="rgb(239,203,43)" fg:x="1104" fg:w="10"/><text x="88.7825%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="89.2542%" y="517" width="0.0802%" height="15" fill="rgb(246,1,45)" fg:x="1113" fg:w="1"/><text x="89.5042%" y="527.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="89.2542%" y="501" width="0.0802%" height="15" fill="rgb(231,42,52)" fg:x="1113" fg:w="1"/><text x="89.5042%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="89.2542%" y="485" width="0.0802%" height="15" fill="rgb(240,13,50)" fg:x="1113" fg:w="1"/><text x="89.5042%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="89.2542%" y="469" width="0.0802%" height="15" fill="rgb(225,81,14)" fg:x="1113" fg:w="1"/><text x="89.5042%" y="479.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="89.2542%" y="453" width="0.0802%" height="15" fill="rgb(216,182,23)" fg:x="1113" fg:w="1"/><text x="89.5042%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="89.2542%" y="437" width="0.0802%" height="15" fill="rgb(233,137,19)" fg:x="1113" fg:w="1"/><text x="89.5042%" y="447.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="89.2542%" y="421" width="0.0802%" height="15" fill="rgb(242,61,46)" fg:x="1113" fg:w="1"/><text x="89.5042%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="89.2542%" y="405" width="0.0802%" height="15" fill="rgb(221,168,51)" fg:x="1113" fg:w="1"/><text x="89.5042%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.2542%" y="389" width="0.0802%" height="15" fill="rgb(238,48,15)" fg:x="1113" fg:w="1"/><text x="89.5042%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.2542%" y="373" width="0.0802%" height="15" fill="rgb(216,13,16)" fg:x="1113" fg:w="1"/><text x="89.5042%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.2542%" y="357" width="0.0802%" height="15" fill="rgb(223,185,34)" fg:x="1113" fg:w="1"/><text x="89.5042%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.2542%" y="341" width="0.0802%" height="15" fill="rgb(228,94,42)" fg:x="1113" fg:w="1"/><text x="89.5042%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.2542%" y="325" width="0.0802%" height="15" fill="rgb(218,166,43)" fg:x="1113" fg:w="1"/><text x="89.5042%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.2542%" y="309" width="0.0802%" height="15" fill="rgb(232,30,50)" fg:x="1113" fg:w="1"/><text x="89.5042%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.2542%" y="293" width="0.0802%" height="15" fill="rgb(245,206,45)" fg:x="1113" fg:w="1"/><text x="89.5042%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::scopes::Property)&gt; (1 samples, 0.08%)</title><rect x="89.3344%" y="485" width="0.0802%" height="15" fill="rgb(220,56,22)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.3344%" y="469" width="0.0802%" height="15" fill="rgb(239,129,38)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="89.4146%" y="453" width="0.0802%" height="15" fill="rgb(207,68,41)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.4146%" y="437" width="0.0802%" height="15" fill="rgb(221,21,7)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="89.4146%" y="421" width="0.0802%" height="15" fill="rgb(240,33,25)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.4146%" y="405" width="0.0802%" height="15" fill="rgb(242,119,10)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.4146%" y="389" width="0.0802%" height="15" fill="rgb(214,149,40)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="399.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="89.3344%" y="533" width="0.2406%" height="15" fill="rgb(228,25,36)" fg:x="1114" fg:w="3"/><text x="89.5844%" y="543.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="89.3344%" y="517" width="0.2406%" height="15" fill="rgb(222,59,15)" fg:x="1114" fg:w="3"/><text x="89.5844%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="89.3344%" y="501" width="0.2406%" height="15" fill="rgb(218,170,0)" fg:x="1114" fg:w="3"/><text x="89.5844%" y="511.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="89.4146%" y="485" width="0.1604%" height="15" fill="rgb(232,173,23)" fg:x="1115" fg:w="2"/><text x="89.6646%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="89.4146%" y="469" width="0.1604%" height="15" fill="rgb(218,116,1)" fg:x="1115" fg:w="2"/><text x="89.6646%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.4948%" y="453" width="0.0802%" height="15" fill="rgb(207,34,4)" fg:x="1116" fg:w="1"/><text x="89.7448%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.4948%" y="437" width="0.0802%" height="15" fill="rgb(229,54,52)" fg:x="1116" fg:w="1"/><text x="89.7448%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.4948%" y="421" width="0.0802%" height="15" fill="rgb(211,86,23)" fg:x="1116" fg:w="1"/><text x="89.7448%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.4948%" y="405" width="0.0802%" height="15" fill="rgb(254,153,34)" fg:x="1116" fg:w="1"/><text x="89.7448%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="89.4948%" y="389" width="0.0802%" height="15" fill="rgb(219,220,14)" fg:x="1116" fg:w="1"/><text x="89.7448%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.4948%" y="373" width="0.0802%" height="15" fill="rgb(247,8,26)" fg:x="1116" fg:w="1"/><text x="89.7448%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.4948%" y="357" width="0.0802%" height="15" fill="rgb(213,129,42)" fg:x="1116" fg:w="1"/><text x="89.7448%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.5750%" y="437" width="0.0802%" height="15" fill="rgb(225,95,41)" fg:x="1117" fg:w="1"/><text x="89.8250%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.5750%" y="421" width="0.0802%" height="15" fill="rgb(215,134,24)" fg:x="1117" fg:w="1"/><text x="89.8250%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.5750%" y="405" width="0.0802%" height="15" fill="rgb(235,23,54)" fg:x="1117" fg:w="1"/><text x="89.8250%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.5750%" y="389" width="0.0802%" height="15" fill="rgb(229,96,31)" fg:x="1117" fg:w="1"/><text x="89.8250%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.5750%" y="373" width="0.0802%" height="15" fill="rgb(206,111,12)" fg:x="1117" fg:w="1"/><text x="89.8250%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.5750%" y="357" width="0.0802%" height="15" fill="rgb(222,177,8)" fg:x="1117" fg:w="1"/><text x="89.8250%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="89.5750%" y="341" width="0.0802%" height="15" fill="rgb(251,36,52)" fg:x="1117" fg:w="1"/><text x="89.8250%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="89.5750%" y="325" width="0.0802%" height="15" fill="rgb(216,182,29)" fg:x="1117" fg:w="1"/><text x="89.8250%" y="335.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="89.3344%" y="565" width="0.4010%" height="15" fill="rgb(241,145,50)" fg:x="1114" fg:w="5"/><text x="89.5844%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="89.3344%" y="549" width="0.4010%" height="15" fill="rgb(231,71,35)" fg:x="1114" fg:w="5"/><text x="89.5844%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::key (2 samples, 0.16%)</title><rect x="89.5750%" y="533" width="0.1604%" height="15" fill="rgb(218,22,17)" fg:x="1117" fg:w="2"/><text x="89.8250%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="89.5750%" y="517" width="0.1604%" height="15" fill="rgb(225,227,6)" fg:x="1117" fg:w="2"/><text x="89.8250%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="89.5750%" y="501" width="0.1604%" height="15" fill="rgb(224,204,17)" fg:x="1117" fg:w="2"/><text x="89.8250%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="89.5750%" y="485" width="0.1604%" height="15" fill="rgb(227,61,28)" fg:x="1117" fg:w="2"/><text x="89.8250%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="89.5750%" y="469" width="0.1604%" height="15" fill="rgb(242,148,23)" fg:x="1117" fg:w="2"/><text x="89.8250%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="89.5750%" y="453" width="0.1604%" height="15" fill="rgb(237,105,33)" fg:x="1117" fg:w="2"/><text x="89.8250%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="89.6552%" y="437" width="0.0802%" height="15" fill="rgb(238,218,40)" fg:x="1118" fg:w="1"/><text x="89.9052%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="89.6552%" y="421" width="0.0802%" height="15" fill="rgb(209,126,11)" fg:x="1118" fg:w="1"/><text x="89.9052%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="89.7354%" y="517" width="0.0802%" height="15" fill="rgb(245,90,11)" fg:x="1119" fg:w="1"/><text x="89.9854%" y="527.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="89.7354%" y="501" width="0.0802%" height="15" fill="rgb(211,195,10)" fg:x="1119" fg:w="1"/><text x="89.9854%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="89.7354%" y="485" width="0.0802%" height="15" fill="rgb(231,45,45)" fg:x="1119" fg:w="1"/><text x="89.9854%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="89.7354%" y="533" width="0.1604%" height="15" fill="rgb(246,100,43)" fg:x="1119" fg:w="2"/><text x="89.9854%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="89.8156%" y="517" width="0.0802%" height="15" fill="rgb(241,193,8)" fg:x="1120" fg:w="1"/><text x="90.0656%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.8156%" y="501" width="0.0802%" height="15" fill="rgb(208,76,19)" fg:x="1120" fg:w="1"/><text x="90.0656%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.8957%" y="453" width="0.0802%" height="15" fill="rgb(223,69,40)" fg:x="1121" fg:w="1"/><text x="90.1457%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.8957%" y="437" width="0.0802%" height="15" fill="rgb(207,120,39)" fg:x="1121" fg:w="1"/><text x="90.1457%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.8957%" y="421" width="0.0802%" height="15" fill="rgb(212,209,28)" fg:x="1121" fg:w="1"/><text x="90.1457%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="89.8957%" y="501" width="0.2406%" height="15" fill="rgb(246,82,29)" fg:x="1121" fg:w="3"/><text x="90.1457%" y="511.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.24%)</title><rect x="89.8957%" y="485" width="0.2406%" height="15" fill="rgb(239,6,40)" fg:x="1121" fg:w="3"/><text x="90.1457%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.24%)</title><rect x="89.8957%" y="469" width="0.2406%" height="15" fill="rgb(228,181,35)" fg:x="1121" fg:w="3"/><text x="90.1457%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="89.9759%" y="453" width="0.1604%" height="15" fill="rgb(238,151,2)" fg:x="1122" fg:w="2"/><text x="90.2259%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.9759%" y="437" width="0.1604%" height="15" fill="rgb(236,94,18)" fg:x="1122" fg:w="2"/><text x="90.2259%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="89.9759%" y="421" width="0.1604%" height="15" fill="rgb(208,38,14)" fg:x="1122" fg:w="2"/><text x="90.2259%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.9759%" y="405" width="0.1604%" height="15" fill="rgb(234,215,27)" fg:x="1122" fg:w="2"/><text x="90.2259%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="90.0561%" y="389" width="0.0802%" height="15" fill="rgb(254,211,53)" fg:x="1123" fg:w="1"/><text x="90.3061%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.0561%" y="373" width="0.0802%" height="15" fill="rgb(216,175,11)" fg:x="1123" fg:w="1"/><text x="90.3061%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.0561%" y="357" width="0.0802%" height="15" fill="rgb(246,179,26)" fg:x="1123" fg:w="1"/><text x="90.3061%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.0561%" y="341" width="0.0802%" height="15" fill="rgb(249,19,52)" fg:x="1123" fg:w="1"/><text x="90.3061%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.1363%" y="453" width="0.0802%" height="15" fill="rgb(230,42,52)" fg:x="1124" fg:w="1"/><text x="90.3863%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.1363%" y="437" width="0.0802%" height="15" fill="rgb(221,171,0)" fg:x="1124" fg:w="1"/><text x="90.3863%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.1363%" y="421" width="0.0802%" height="15" fill="rgb(222,177,40)" fg:x="1124" fg:w="1"/><text x="90.3863%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.1363%" y="405" width="0.0802%" height="15" fill="rgb(247,34,16)" fg:x="1124" fg:w="1"/><text x="90.3863%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.1363%" y="389" width="0.0802%" height="15" fill="rgb(213,217,37)" fg:x="1124" fg:w="1"/><text x="90.3863%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.1363%" y="373" width="0.0802%" height="15" fill="rgb(231,189,24)" fg:x="1124" fg:w="1"/><text x="90.3863%" y="383.50"></text></g><g><title>&lt;kernel::model::scopes::Properties as kernel::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="90.2165%" y="453" width="0.0802%" height="15" fill="rgb(214,22,9)" fg:x="1125" fg:w="1"/><text x="90.4665%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.2165%" y="437" width="0.0802%" height="15" fill="rgb(212,70,22)" fg:x="1125" fg:w="1"/><text x="90.4665%" y="447.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="90.2165%" y="421" width="0.0802%" height="15" fill="rgb(249,64,51)" fg:x="1125" fg:w="1"/><text x="90.4665%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.2165%" y="405" width="0.0802%" height="15" fill="rgb(249,148,20)" fg:x="1125" fg:w="1"/><text x="90.4665%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="90.2165%" y="389" width="0.0802%" height="15" fill="rgb(246,46,48)" fg:x="1125" fg:w="1"/><text x="90.4665%" y="399.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="90.2165%" y="373" width="0.0802%" height="15" fill="rgb(217,34,48)" fg:x="1125" fg:w="1"/><text x="90.4665%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="90.2165%" y="357" width="0.0802%" height="15" fill="rgb(222,45,26)" fg:x="1125" fg:w="1"/><text x="90.4665%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.2165%" y="341" width="0.0802%" height="15" fill="rgb(230,201,36)" fg:x="1125" fg:w="1"/><text x="90.4665%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.2165%" y="325" width="0.0802%" height="15" fill="rgb(217,30,43)" fg:x="1125" fg:w="1"/><text x="90.4665%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="89.7354%" y="549" width="0.6415%" height="15" fill="rgb(230,197,40)" fg:x="1119" fg:w="8"/><text x="89.9854%" y="559.50"></text></g><g><title>engine::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="89.8957%" y="533" width="0.4812%" height="15" fill="rgb(239,181,18)" fg:x="1121" fg:w="6"/><text x="90.1457%" y="543.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="89.8957%" y="517" width="0.4812%" height="15" fill="rgb(222,60,39)" fg:x="1121" fg:w="6"/><text x="90.1457%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="90.1363%" y="501" width="0.2406%" height="15" fill="rgb(210,60,22)" fg:x="1124" fg:w="3"/><text x="90.3863%" y="511.50"></text></g><g><title>kernel::model::scopes::save_props (3 samples, 0.24%)</title><rect x="90.1363%" y="485" width="0.2406%" height="15" fill="rgb(239,213,48)" fg:x="1124" fg:w="3"/><text x="90.3863%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (3 samples, 0.24%)</title><rect x="90.1363%" y="469" width="0.2406%" height="15" fill="rgb(253,214,23)" fg:x="1124" fg:w="3"/><text x="90.3863%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.2967%" y="453" width="0.0802%" height="15" fill="rgb(211,98,45)" fg:x="1126" fg:w="1"/><text x="90.5467%" y="463.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (2 samples, 0.16%)</title><rect x="90.3769%" y="533" width="0.1604%" height="15" fill="rgb(239,130,44)" fg:x="1127" fg:w="2"/><text x="90.6269%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.5373%" y="453" width="0.0802%" height="15" fill="rgb(222,181,35)" fg:x="1129" fg:w="1"/><text x="90.7873%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.5373%" y="437" width="0.0802%" height="15" fill="rgb(219,219,49)" fg:x="1129" fg:w="1"/><text x="90.7873%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.5373%" y="421" width="0.0802%" height="15" fill="rgb(227,161,51)" fg:x="1129" fg:w="1"/><text x="90.7873%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.5373%" y="405" width="0.0802%" height="15" fill="rgb(239,112,27)" fg:x="1129" fg:w="1"/><text x="90.7873%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="90.6175%" y="453" width="0.0802%" height="15" fill="rgb(248,122,18)" fg:x="1130" fg:w="1"/><text x="90.8675%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.6175%" y="437" width="0.0802%" height="15" fill="rgb(245,130,23)" fg:x="1130" fg:w="1"/><text x="90.8675%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="90.6175%" y="421" width="0.0802%" height="15" fill="rgb(211,225,28)" fg:x="1130" fg:w="1"/><text x="90.8675%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.6175%" y="405" width="0.0802%" height="15" fill="rgb(242,105,44)" fg:x="1130" fg:w="1"/><text x="90.8675%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.6175%" y="389" width="0.0802%" height="15" fill="rgb(216,183,46)" fg:x="1130" fg:w="1"/><text x="90.8675%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.6175%" y="373" width="0.0802%" height="15" fill="rgb(227,112,9)" fg:x="1130" fg:w="1"/><text x="90.8675%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.6175%" y="357" width="0.0802%" height="15" fill="rgb(244,21,0)" fg:x="1130" fg:w="1"/><text x="90.8675%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.6175%" y="341" width="0.0802%" height="15" fill="rgb(236,185,14)" fg:x="1130" fg:w="1"/><text x="90.8675%" y="351.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="90.5373%" y="533" width="0.2406%" height="15" fill="rgb(236,170,30)" fg:x="1129" fg:w="3"/><text x="90.7873%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="90.5373%" y="517" width="0.2406%" height="15" fill="rgb(209,198,51)" fg:x="1129" fg:w="3"/><text x="90.7873%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="90.5373%" y="501" width="0.2406%" height="15" fill="rgb(205,171,26)" fg:x="1129" fg:w="3"/><text x="90.7873%" y="511.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.24%)</title><rect x="90.5373%" y="485" width="0.2406%" height="15" fill="rgb(246,41,49)" fg:x="1129" fg:w="3"/><text x="90.7873%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.24%)</title><rect x="90.5373%" y="469" width="0.2406%" height="15" fill="rgb(240,229,12)" fg:x="1129" fg:w="3"/><text x="90.7873%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.6977%" y="453" width="0.0802%" height="15" fill="rgb(212,8,54)" fg:x="1131" fg:w="1"/><text x="90.9477%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.6977%" y="437" width="0.0802%" height="15" fill="rgb(230,114,13)" fg:x="1131" fg:w="1"/><text x="90.9477%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.6977%" y="421" width="0.0802%" height="15" fill="rgb(229,130,28)" fg:x="1131" fg:w="1"/><text x="90.9477%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.6977%" y="405" width="0.0802%" height="15" fill="rgb(206,139,15)" fg:x="1131" fg:w="1"/><text x="90.9477%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="90.6977%" y="389" width="0.0802%" height="15" fill="rgb(241,188,35)" fg:x="1131" fg:w="1"/><text x="90.9477%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.6977%" y="373" width="0.0802%" height="15" fill="rgb(208,224,26)" fg:x="1131" fg:w="1"/><text x="90.9477%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.6977%" y="357" width="0.0802%" height="15" fill="rgb(251,131,28)" fg:x="1131" fg:w="1"/><text x="90.9477%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.6977%" y="341" width="0.0802%" height="15" fill="rgb(208,153,1)" fg:x="1131" fg:w="1"/><text x="90.9477%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="90.7779%" y="485" width="0.0802%" height="15" fill="rgb(234,33,36)" fg:x="1132" fg:w="1"/><text x="91.0279%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::scopes::Property)&gt; (1 samples, 0.08%)</title><rect x="90.7779%" y="469" width="0.0802%" height="15" fill="rgb(246,42,29)" fg:x="1132" fg:w="1"/><text x="91.0279%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.7779%" y="453" width="0.0802%" height="15" fill="rgb(251,114,16)" fg:x="1132" fg:w="1"/><text x="91.0279%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.8581%" y="421" width="0.0802%" height="15" fill="rgb(233,13,38)" fg:x="1133" fg:w="1"/><text x="91.1081%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.8581%" y="405" width="0.0802%" height="15" fill="rgb(247,120,19)" fg:x="1133" fg:w="1"/><text x="91.1081%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.8581%" y="389" width="0.0802%" height="15" fill="rgb(205,11,16)" fg:x="1133" fg:w="1"/><text x="91.1081%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.8581%" y="373" width="0.0802%" height="15" fill="rgb(228,185,19)" fg:x="1133" fg:w="1"/><text x="91.1081%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.8581%" y="357" width="0.0802%" height="15" fill="rgb(239,88,52)" fg:x="1133" fg:w="1"/><text x="91.1081%" y="367.50"></text></g><g><title>plugins_core::build::Build::occupying (16 samples, 1.28%)</title><rect x="89.7354%" y="565" width="1.2831%" height="15" fill="rgb(219,23,1)" fg:x="1119" fg:w="16"/><text x="89.9854%" y="575.50"></text></g><g><title>plugins_core::tools::set_occupying (8 samples, 0.64%)</title><rect x="90.3769%" y="549" width="0.6415%" height="15" fill="rgb(253,177,16)" fg:x="1127" fg:w="8"/><text x="90.6269%" y="559.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (3 samples, 0.24%)</title><rect x="90.7779%" y="533" width="0.2406%" height="15" fill="rgb(225,150,40)" fg:x="1132" fg:w="3"/><text x="91.0279%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="90.7779%" y="517" width="0.2406%" height="15" fill="rgb(208,108,30)" fg:x="1132" fg:w="3"/><text x="91.0279%" y="527.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="90.7779%" y="501" width="0.2406%" height="15" fill="rgb(214,122,4)" fg:x="1132" fg:w="3"/><text x="91.0279%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="90.8581%" y="485" width="0.1604%" height="15" fill="rgb(229,74,37)" fg:x="1133" fg:w="2"/><text x="91.1081%" y="495.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="90.8581%" y="469" width="0.1604%" height="15" fill="rgb(233,61,41)" fg:x="1133" fg:w="2"/><text x="91.1081%" y="479.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="90.8581%" y="453" width="0.1604%" height="15" fill="rgb(238,191,5)" fg:x="1133" fg:w="2"/><text x="91.1081%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="90.8581%" y="437" width="0.1604%" height="15" fill="rgb(233,78,24)" fg:x="1133" fg:w="2"/><text x="91.1081%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.9383%" y="421" width="0.0802%" height="15" fill="rgb(211,142,8)" fg:x="1134" fg:w="1"/><text x="91.1883%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.9383%" y="405" width="0.0802%" height="15" fill="rgb(253,38,53)" fg:x="1134" fg:w="1"/><text x="91.1883%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.9383%" y="389" width="0.0802%" height="15" fill="rgb(234,63,51)" fg:x="1134" fg:w="1"/><text x="91.1883%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.9383%" y="373" width="0.0802%" height="15" fill="rgb(205,23,31)" fg:x="1134" fg:w="1"/><text x="91.1883%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.9383%" y="357" width="0.0802%" height="15" fill="rgb(210,184,50)" fg:x="1134" fg:w="1"/><text x="91.1883%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.9383%" y="341" width="0.0802%" height="15" fill="rgb(222,112,26)" fg:x="1134" fg:w="1"/><text x="91.1883%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.9383%" y="325" width="0.0802%" height="15" fill="rgb(250,98,18)" fg:x="1134" fg:w="1"/><text x="91.1883%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="91.0184%" y="501" width="0.0802%" height="15" fill="rgb(250,34,12)" fg:x="1135" fg:w="1"/><text x="91.2684%" y="511.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="91.0184%" y="485" width="0.0802%" height="15" fill="rgb(236,141,30)" fg:x="1135" fg:w="1"/><text x="91.2684%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="91.0184%" y="469" width="0.0802%" height="15" fill="rgb(246,134,38)" fg:x="1135" fg:w="1"/><text x="91.2684%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.0184%" y="453" width="0.0802%" height="15" fill="rgb(240,114,4)" fg:x="1135" fg:w="1"/><text x="91.2684%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.0184%" y="437" width="0.0802%" height="15" fill="rgb(243,113,39)" fg:x="1135" fg:w="1"/><text x="91.2684%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.0184%" y="421" width="0.0802%" height="15" fill="rgb(239,215,4)" fg:x="1135" fg:w="1"/><text x="91.2684%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.0184%" y="405" width="0.0802%" height="15" fill="rgb(236,229,45)" fg:x="1135" fg:w="1"/><text x="91.2684%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.0184%" y="389" width="0.0802%" height="15" fill="rgb(242,2,6)" fg:x="1135" fg:w="1"/><text x="91.2684%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.0986%" y="453" width="0.0802%" height="15" fill="rgb(239,108,21)" fg:x="1136" fg:w="1"/><text x="91.3486%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.0986%" y="437" width="0.0802%" height="15" fill="rgb(215,168,34)" fg:x="1136" fg:w="1"/><text x="91.3486%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.0986%" y="421" width="0.0802%" height="15" fill="rgb(238,31,17)" fg:x="1136" fg:w="1"/><text x="91.3486%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.0986%" y="405" width="0.0802%" height="15" fill="rgb(220,133,11)" fg:x="1136" fg:w="1"/><text x="91.3486%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.0986%" y="389" width="0.0802%" height="15" fill="rgb(212,158,23)" fg:x="1136" fg:w="1"/><text x="91.3486%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.0986%" y="373" width="0.0802%" height="15" fill="rgb(223,172,7)" fg:x="1136" fg:w="1"/><text x="91.3486%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="91.0184%" y="549" width="0.2406%" height="15" fill="rgb(244,3,52)" fg:x="1135" fg:w="3"/><text x="91.2684%" y="559.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="91.0184%" y="533" width="0.2406%" height="15" fill="rgb(207,69,27)" fg:x="1135" fg:w="3"/><text x="91.2684%" y="543.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="91.0184%" y="517" width="0.2406%" height="15" fill="rgb(213,136,45)" fg:x="1135" fg:w="3"/><text x="91.2684%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="91.0986%" y="501" width="0.1604%" height="15" fill="rgb(218,79,17)" fg:x="1136" fg:w="2"/><text x="91.3486%" y="511.50"></text></g><g><title>kernel::model::scopes::save_props (2 samples, 0.16%)</title><rect x="91.0986%" y="485" width="0.1604%" height="15" fill="rgb(216,106,36)" fg:x="1136" fg:w="2"/><text x="91.3486%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (2 samples, 0.16%)</title><rect x="91.0986%" y="469" width="0.1604%" height="15" fill="rgb(251,27,45)" fg:x="1136" fg:w="2"/><text x="91.3486%" y="479.50"></text></g><g><title>&lt;kernel::model::scopes::Properties as kernel::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="91.1788%" y="453" width="0.0802%" height="15" fill="rgb(232,21,34)" fg:x="1137" fg:w="1"/><text x="91.4288%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="91.1788%" y="437" width="0.0802%" height="15" fill="rgb(249,191,16)" fg:x="1137" fg:w="1"/><text x="91.4288%" y="447.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="91.1788%" y="421" width="0.0802%" height="15" fill="rgb(224,88,20)" fg:x="1137" fg:w="1"/><text x="91.4288%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="91.1788%" y="405" width="0.0802%" height="15" fill="rgb(237,93,27)" fg:x="1137" fg:w="1"/><text x="91.4288%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="91.1788%" y="389" width="0.0802%" height="15" fill="rgb(226,198,48)" fg:x="1137" fg:w="1"/><text x="91.4288%" y="399.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="91.1788%" y="373" width="0.0802%" height="15" fill="rgb(207,162,53)" fg:x="1137" fg:w="1"/><text x="91.4288%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.1788%" y="357" width="0.0802%" height="15" fill="rgb(207,169,9)" fg:x="1137" fg:w="1"/><text x="91.4288%" y="367.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (112 samples, 8.98%)</title><rect x="82.4379%" y="581" width="8.9816%" height="15" fill="rgb(224,166,46)" fg:x="1028" fg:w="112"/><text x="82.6879%" y="591.50">plugins_core:..</text></g><g><title>plugins_core::build::Build::with_username (5 samples, 0.40%)</title><rect x="91.0184%" y="565" width="0.4010%" height="15" fill="rgb(233,26,6)" fg:x="1135" fg:w="5"/><text x="91.2684%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="91.2590%" y="549" width="0.1604%" height="15" fill="rgb(218,106,45)" fg:x="1138" fg:w="2"/><text x="91.5090%" y="559.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="91.2590%" y="533" width="0.1604%" height="15" fill="rgb(240,217,4)" fg:x="1138" fg:w="2"/><text x="91.5090%" y="543.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (2 samples, 0.16%)</title><rect x="91.2590%" y="517" width="0.1604%" height="15" fill="rgb(246,171,10)" fg:x="1138" fg:w="2"/><text x="91.5090%" y="527.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="91.3392%" y="501" width="0.0802%" height="15" fill="rgb(223,197,30)" fg:x="1139" fg:w="1"/><text x="91.5892%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="91.3392%" y="485" width="0.0802%" height="15" fill="rgb(207,92,16)" fg:x="1139" fg:w="1"/><text x="91.5892%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="91.3392%" y="469" width="0.0802%" height="15" fill="rgb(211,6,44)" fg:x="1139" fg:w="1"/><text x="91.5892%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="91.3392%" y="453" width="0.0802%" height="15" fill="rgb(219,139,2)" fg:x="1139" fg:w="1"/><text x="91.5892%" y="463.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (183 samples, 14.68%)</title><rect x="76.8244%" y="597" width="14.6752%" height="15" fill="rgb(224,103,21)" fg:x="958" fg:w="183"/><text x="77.0744%" y="607.50">&lt;tests::HoldingKeyInVe..</text></g><g><title>plugins_core::build::BuildSurroundings::make (1 samples, 0.08%)</title><rect x="91.4194%" y="581" width="0.0802%" height="15" fill="rgb(254,110,48)" fg:x="1140" fg:w="1"/><text x="91.6694%" y="591.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="91.4194%" y="565" width="0.0802%" height="15" fill="rgb(212,88,19)" fg:x="1140" fg:w="1"/><text x="91.6694%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="91.4194%" y="549" width="0.0802%" height="15" fill="rgb(248,103,6)" fg:x="1140" fg:w="1"/><text x="91.6694%" y="559.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="91.4194%" y="533" width="0.0802%" height="15" fill="rgb(214,53,46)" fg:x="1140" fg:w="1"/><text x="91.6694%" y="543.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="91.4194%" y="517" width="0.0802%" height="15" fill="rgb(236,190,24)" fg:x="1140" fg:w="1"/><text x="91.6694%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.4194%" y="501" width="0.0802%" height="15" fill="rgb(254,58,28)" fg:x="1140" fg:w="1"/><text x="91.6694%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.4194%" y="485" width="0.0802%" height="15" fill="rgb(243,63,27)" fg:x="1140" fg:w="1"/><text x="91.6694%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="91.4194%" y="469" width="0.0802%" height="15" fill="rgb(206,81,20)" fg:x="1140" fg:w="1"/><text x="91.6694%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.4194%" y="453" width="0.0802%" height="15" fill="rgb(252,69,51)" fg:x="1140" fg:w="1"/><text x="91.6694%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="91.4996%" y="597" width="0.0802%" height="15" fill="rgb(222,213,4)" fg:x="1141" fg:w="1"/><text x="91.7496%" y="607.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="91.4996%" y="581" width="0.0802%" height="15" fill="rgb(226,198,12)" fg:x="1141" fg:w="1"/><text x="91.7496%" y="591.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="91.4996%" y="565" width="0.0802%" height="15" fill="rgb(248,115,11)" fg:x="1141" fg:w="1"/><text x="91.7496%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="91.4996%" y="549" width="0.0802%" height="15" fill="rgb(221,148,54)" fg:x="1141" fg:w="1"/><text x="91.7496%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.4996%" y="533" width="0.0802%" height="15" fill="rgb(214,209,51)" fg:x="1141" fg:w="1"/><text x="91.7496%" y="543.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (1 samples, 0.08%)</title><rect x="91.5798%" y="581" width="0.0802%" height="15" fill="rgb(249,116,53)" fg:x="1142" fg:w="1"/><text x="91.8298%" y="591.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="91.6600%" y="565" width="0.0802%" height="15" fill="rgb(248,170,1)" fg:x="1143" fg:w="1"/><text x="91.9100%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="91.6600%" y="549" width="0.0802%" height="15" fill="rgb(244,105,10)" fg:x="1143" fg:w="1"/><text x="91.9100%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="91.6600%" y="533" width="0.0802%" height="15" fill="rgb(229,100,5)" fg:x="1143" fg:w="1"/><text x="91.9100%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.6600%" y="517" width="0.0802%" height="15" fill="rgb(233,221,39)" fg:x="1143" fg:w="1"/><text x="91.9100%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.8204%" y="517" width="0.0802%" height="15" fill="rgb(233,88,21)" fg:x="1145" fg:w="1"/><text x="92.0704%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.8204%" y="501" width="0.0802%" height="15" fill="rgb(206,13,0)" fg:x="1145" fg:w="1"/><text x="92.0704%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.8204%" y="485" width="0.0802%" height="15" fill="rgb(242,15,35)" fg:x="1145" fg:w="1"/><text x="92.0704%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.8204%" y="469" width="0.0802%" height="15" fill="rgb(247,142,41)" fg:x="1145" fg:w="1"/><text x="92.0704%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.8204%" y="453" width="0.0802%" height="15" fill="rgb(245,51,29)" fg:x="1145" fg:w="1"/><text x="92.0704%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.8204%" y="437" width="0.0802%" height="15" fill="rgb(228,209,43)" fg:x="1145" fg:w="1"/><text x="92.0704%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.8204%" y="421" width="0.0802%" height="15" fill="rgb(233,185,9)" fg:x="1145" fg:w="1"/><text x="92.0704%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.8204%" y="405" width="0.0802%" height="15" fill="rgb(226,93,0)" fg:x="1145" fg:w="1"/><text x="92.0704%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="91.8204%" y="389" width="0.0802%" height="15" fill="rgb(245,194,43)" fg:x="1145" fg:w="1"/><text x="92.0704%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="91.8204%" y="373" width="0.0802%" height="15" fill="rgb(211,145,34)" fg:x="1145" fg:w="1"/><text x="92.0704%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.9808%" y="501" width="0.0802%" height="15" fill="rgb(231,228,28)" fg:x="1147" fg:w="1"/><text x="92.2308%" y="511.50"></text></g><g><title>engine::identifiers::model::get_gid (5 samples, 0.40%)</title><rect x="91.7402%" y="565" width="0.4010%" height="15" fill="rgb(236,149,4)" fg:x="1144" fg:w="5"/><text x="91.9902%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="91.7402%" y="549" width="0.4010%" height="15" fill="rgb(234,114,38)" fg:x="1144" fg:w="5"/><text x="91.9902%" y="559.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (4 samples, 0.32%)</title><rect x="91.8204%" y="533" width="0.3208%" height="15" fill="rgb(246,132,51)" fg:x="1145" fg:w="4"/><text x="92.0704%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="91.9006%" y="517" width="0.2406%" height="15" fill="rgb(251,137,22)" fg:x="1146" fg:w="3"/><text x="92.1506%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.0609%" y="501" width="0.0802%" height="15" fill="rgb(243,59,52)" fg:x="1148" fg:w="1"/><text x="92.3109%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="92.0609%" y="485" width="0.0802%" height="15" fill="rgb(239,56,28)" fg:x="1148" fg:w="1"/><text x="92.3109%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="92.0609%" y="469" width="0.0802%" height="15" fill="rgb(218,168,27)" fg:x="1148" fg:w="1"/><text x="92.3109%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.1411%" y="533" width="0.0802%" height="15" fill="rgb(232,165,11)" fg:x="1149" fg:w="1"/><text x="92.3911%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.1411%" y="517" width="0.0802%" height="15" fill="rgb(253,55,41)" fg:x="1149" fg:w="1"/><text x="92.3911%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.1411%" y="501" width="0.0802%" height="15" fill="rgb(233,206,24)" fg:x="1149" fg:w="1"/><text x="92.3911%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.1411%" y="485" width="0.0802%" height="15" fill="rgb(220,199,8)" fg:x="1149" fg:w="1"/><text x="92.3911%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.1411%" y="469" width="0.0802%" height="15" fill="rgb(254,65,26)" fg:x="1149" fg:w="1"/><text x="92.3911%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="92.1411%" y="453" width="0.0802%" height="15" fill="rgb(253,102,23)" fg:x="1149" fg:w="1"/><text x="92.3911%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="92.1411%" y="437" width="0.0802%" height="15" fill="rgb(231,103,35)" fg:x="1149" fg:w="1"/><text x="92.3911%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="92.2213%" y="501" width="0.1604%" height="15" fill="rgb(238,26,10)" fg:x="1150" fg:w="2"/><text x="92.4713%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="92.2213%" y="485" width="0.1604%" height="15" fill="rgb(234,191,34)" fg:x="1150" fg:w="2"/><text x="92.4713%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.3015%" y="469" width="0.0802%" height="15" fill="rgb(206,210,9)" fg:x="1151" fg:w="1"/><text x="92.5515%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.3015%" y="453" width="0.0802%" height="15" fill="rgb(219,155,3)" fg:x="1151" fg:w="1"/><text x="92.5515%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="92.2213%" y="517" width="0.2406%" height="15" fill="rgb(221,62,52)" fg:x="1150" fg:w="3"/><text x="92.4713%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.3817%" y="501" width="0.0802%" height="15" fill="rgb(215,197,36)" fg:x="1152" fg:w="1"/><text x="92.6317%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.3817%" y="485" width="0.0802%" height="15" fill="rgb(226,222,6)" fg:x="1152" fg:w="1"/><text x="92.6317%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="92.4619%" y="501" width="0.0802%" height="15" fill="rgb(215,58,28)" fg:x="1153" fg:w="1"/><text x="92.7119%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.4619%" y="485" width="0.0802%" height="15" fill="rgb(212,148,2)" fg:x="1153" fg:w="1"/><text x="92.7119%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="92.6223%" y="453" width="0.1604%" height="15" fill="rgb(208,21,42)" fg:x="1155" fg:w="2"/><text x="92.8723%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="92.6223%" y="437" width="0.1604%" height="15" fill="rgb(209,107,26)" fg:x="1155" fg:w="2"/><text x="92.8723%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="92.7827%" y="437" width="0.0802%" height="15" fill="rgb(254,60,47)" fg:x="1157" fg:w="1"/><text x="93.0327%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.7827%" y="421" width="0.0802%" height="15" fill="rgb(207,226,45)" fg:x="1157" fg:w="1"/><text x="93.0327%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="92.8629%" y="437" width="0.1604%" height="15" fill="rgb(223,124,22)" fg:x="1158" fg:w="2"/><text x="93.1129%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="92.9431%" y="421" width="0.0802%" height="15" fill="rgb(240,162,13)" fg:x="1159" fg:w="1"/><text x="93.1931%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.9431%" y="405" width="0.0802%" height="15" fill="rgb(244,199,31)" fg:x="1159" fg:w="1"/><text x="93.1931%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.9431%" y="389" width="0.0802%" height="15" fill="rgb(207,92,16)" fg:x="1159" fg:w="1"/><text x="93.1931%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="92.5421%" y="501" width="0.5613%" height="15" fill="rgb(215,31,19)" fg:x="1154" fg:w="7"/><text x="92.7921%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="92.6223%" y="485" width="0.4812%" height="15" fill="rgb(245,118,14)" fg:x="1155" fg:w="6"/><text x="92.8723%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="92.6223%" y="469" width="0.4812%" height="15" fill="rgb(248,12,46)" fg:x="1155" fg:w="6"/><text x="92.8723%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="92.7827%" y="453" width="0.3208%" height="15" fill="rgb(209,119,0)" fg:x="1157" fg:w="4"/><text x="93.0327%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="93.0233%" y="437" width="0.0802%" height="15" fill="rgb(254,51,44)" fg:x="1160" fg:w="1"/><text x="93.2733%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="93.0233%" y="421" width="0.0802%" height="15" fill="rgb(253,182,35)" fg:x="1160" fg:w="1"/><text x="93.2733%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.0233%" y="405" width="0.0802%" height="15" fill="rgb(205,198,39)" fg:x="1160" fg:w="1"/><text x="93.2733%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (16 samples, 1.28%)</title><rect x="92.2213%" y="533" width="1.2831%" height="15" fill="rgb(251,175,48)" fg:x="1150" fg:w="16"/><text x="92.4713%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="92.4619%" y="517" width="1.0425%" height="15" fill="rgb(239,38,17)" fg:x="1153" fg:w="13"/><text x="92.7119%" y="527.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="93.1034%" y="501" width="0.4010%" height="15" fill="rgb(212,101,8)" fg:x="1161" fg:w="5"/><text x="93.3534%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="93.4242%" y="485" width="0.0802%" height="15" fill="rgb(228,35,17)" fg:x="1165" fg:w="1"/><text x="93.6742%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.4242%" y="469" width="0.0802%" height="15" fill="rgb(214,95,8)" fg:x="1165" fg:w="1"/><text x="93.6742%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="93.4242%" y="453" width="0.0802%" height="15" fill="rgb(210,176,35)" fg:x="1165" fg:w="1"/><text x="93.6742%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="93.4242%" y="437" width="0.0802%" height="15" fill="rgb(226,4,3)" fg:x="1165" fg:w="1"/><text x="93.6742%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="93.4242%" y="421" width="0.0802%" height="15" fill="rgb(232,133,14)" fg:x="1165" fg:w="1"/><text x="93.6742%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::base::Item&gt; (1 samples, 0.08%)</title><rect x="93.5044%" y="533" width="0.0802%" height="15" fill="rgb(250,191,8)" fg:x="1166" fg:w="1"/><text x="93.7544%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.7450%" y="501" width="0.0802%" height="15" fill="rgb(213,12,45)" fg:x="1169" fg:w="1"/><text x="93.9950%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.8252%" y="469" width="0.0802%" height="15" fill="rgb(233,78,26)" fg:x="1170" fg:w="1"/><text x="94.0752%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="93.5846%" y="533" width="0.4812%" height="15" fill="rgb(245,222,11)" fg:x="1167" fg:w="6"/><text x="93.8346%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="93.6648%" y="517" width="0.4010%" height="15" fill="rgb(216,174,12)" fg:x="1168" fg:w="5"/><text x="93.9148%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="93.8252%" y="501" width="0.2406%" height="15" fill="rgb(213,15,9)" fg:x="1170" fg:w="3"/><text x="94.0752%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="93.8252%" y="485" width="0.2406%" height="15" fill="rgb(238,103,32)" fg:x="1170" fg:w="3"/><text x="94.0752%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="93.9054%" y="469" width="0.1604%" height="15" fill="rgb(245,85,15)" fg:x="1171" fg:w="2"/><text x="94.1554%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.9856%" y="453" width="0.0802%" height="15" fill="rgb(254,204,5)" fg:x="1172" fg:w="1"/><text x="94.2356%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.9856%" y="437" width="0.0802%" height="15" fill="rgb(231,178,15)" fg:x="1172" fg:w="1"/><text x="94.2356%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.9856%" y="421" width="0.0802%" height="15" fill="rgb(248,151,3)" fg:x="1172" fg:w="1"/><text x="94.2356%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="94.0658%" y="501" width="0.0802%" height="15" fill="rgb(250,139,13)" fg:x="1173" fg:w="1"/><text x="94.3158%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.1460%" y="469" width="0.0802%" height="15" fill="rgb(243,107,53)" fg:x="1174" fg:w="1"/><text x="94.3960%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.2261%" y="469" width="0.0802%" height="15" fill="rgb(232,81,15)" fg:x="1175" fg:w="1"/><text x="94.4761%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.3865%" y="437" width="0.0802%" height="15" fill="rgb(225,187,48)" fg:x="1177" fg:w="1"/><text x="94.6365%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.3865%" y="421" width="0.0802%" height="15" fill="rgb(205,116,12)" fg:x="1177" fg:w="1"/><text x="94.6365%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.4667%" y="405" width="0.0802%" height="15" fill="rgb(220,222,31)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="94.1460%" y="501" width="0.4812%" height="15" fill="rgb(233,187,49)" fg:x="1174" fg:w="6"/><text x="94.3960%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="94.1460%" y="485" width="0.4812%" height="15" fill="rgb(211,168,53)" fg:x="1174" fg:w="6"/><text x="94.3960%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="94.3063%" y="469" width="0.3208%" height="15" fill="rgb(206,160,16)" fg:x="1176" fg:w="4"/><text x="94.5563%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="94.3865%" y="453" width="0.2406%" height="15" fill="rgb(254,164,13)" fg:x="1177" fg:w="3"/><text x="94.6365%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="94.4667%" y="437" width="0.1604%" height="15" fill="rgb(229,45,30)" fg:x="1178" fg:w="2"/><text x="94.7167%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="94.4667%" y="421" width="0.1604%" height="15" fill="rgb(237,32,10)" fg:x="1178" fg:w="2"/><text x="94.7167%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.5469%" y="405" width="0.0802%" height="15" fill="rgb(251,20,47)" fg:x="1179" fg:w="1"/><text x="94.7969%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.5469%" y="389" width="0.0802%" height="15" fill="rgb(251,116,12)" fg:x="1179" fg:w="1"/><text x="94.7969%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.5469%" y="373" width="0.0802%" height="15" fill="rgb(214,227,27)" fg:x="1179" fg:w="1"/><text x="94.7969%" y="383.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (9 samples, 0.72%)</title><rect x="94.0658%" y="517" width="0.7217%" height="15" fill="rgb(248,10,53)" fg:x="1173" fg:w="9"/><text x="94.3158%" y="527.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="94.6271%" y="501" width="0.1604%" height="15" fill="rgb(221,176,25)" fg:x="1180" fg:w="2"/><text x="94.8771%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="94.7073%" y="485" width="0.0802%" height="15" fill="rgb(205,70,46)" fg:x="1181" fg:w="1"/><text x="94.9573%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="94.7073%" y="469" width="0.0802%" height="15" fill="rgb(217,45,38)" fg:x="1181" fg:w="1"/><text x="94.9573%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="94.7073%" y="453" width="0.0802%" height="15" fill="rgb(243,6,54)" fg:x="1181" fg:w="1"/><text x="94.9573%" y="463.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="94.7073%" y="437" width="0.0802%" height="15" fill="rgb(242,76,23)" fg:x="1181" fg:w="1"/><text x="94.9573%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="94.7073%" y="421" width="0.0802%" height="15" fill="rgb(239,166,0)" fg:x="1181" fg:w="1"/><text x="94.9573%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="94.7875%" y="501" width="0.0802%" height="15" fill="rgb(238,174,32)" fg:x="1182" fg:w="1"/><text x="95.0375%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="94.8677%" y="485" width="0.1604%" height="15" fill="rgb(238,124,44)" fg:x="1183" fg:w="2"/><text x="95.1177%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.0281%" y="485" width="0.0802%" height="15" fill="rgb(206,185,9)" fg:x="1185" fg:w="1"/><text x="95.2781%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.0281%" y="469" width="0.0802%" height="15" fill="rgb(215,157,17)" fg:x="1185" fg:w="1"/><text x="95.2781%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.0281%" y="453" width="0.0802%" height="15" fill="rgb(251,17,29)" fg:x="1185" fg:w="1"/><text x="95.2781%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.1885%" y="469" width="0.1604%" height="15" fill="rgb(227,113,27)" fg:x="1187" fg:w="2"/><text x="95.4385%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.1885%" y="453" width="0.1604%" height="15" fill="rgb(217,226,24)" fg:x="1187" fg:w="2"/><text x="95.4385%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="95.1885%" y="437" width="0.1604%" height="15" fill="rgb(251,99,38)" fg:x="1187" fg:w="2"/><text x="95.4385%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.3488%" y="437" width="0.0802%" height="15" fill="rgb(231,147,19)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.3488%" y="421" width="0.0802%" height="15" fill="rgb(230,86,8)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="95.3488%" y="405" width="0.0802%" height="15" fill="rgb(237,159,39)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="95.4290%" y="405" width="0.0802%" height="15" fill="rgb(247,179,47)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="95.4290%" y="437" width="0.2406%" height="15" fill="rgb(253,152,26)" fg:x="1190" fg:w="3"/><text x="95.6790%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="95.4290%" y="421" width="0.2406%" height="15" fill="rgb(222,211,15)" fg:x="1190" fg:w="3"/><text x="95.6790%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="95.5092%" y="405" width="0.1604%" height="15" fill="rgb(236,193,6)" fg:x="1191" fg:w="2"/><text x="95.7592%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.5894%" y="389" width="0.0802%" height="15" fill="rgb(226,206,10)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.5894%" y="373" width="0.0802%" height="15" fill="rgb(213,125,22)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="95.8300%" y="421" width="0.0802%" height="15" fill="rgb(221,66,28)" fg:x="1195" fg:w="1"/><text x="96.0800%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.9102%" y="373" width="0.0802%" height="15" fill="rgb(222,84,53)" fg:x="1196" fg:w="1"/><text x="96.1602%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.9102%" y="405" width="0.1604%" height="15" fill="rgb(243,50,15)" fg:x="1196" fg:w="2"/><text x="96.1602%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.9102%" y="389" width="0.1604%" height="15" fill="rgb(208,184,23)" fg:x="1196" fg:w="2"/><text x="96.1602%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="95.9904%" y="373" width="0.0802%" height="15" fill="rgb(221,83,2)" fg:x="1197" fg:w="1"/><text x="96.2404%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.1508%" y="309" width="0.0802%" height="15" fill="rgb(236,53,24)" fg:x="1199" fg:w="1"/><text x="96.4008%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.1508%" y="293" width="0.0802%" height="15" fill="rgb(244,171,29)" fg:x="1199" fg:w="1"/><text x="96.4008%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.1508%" y="277" width="0.0802%" height="15" fill="rgb(205,19,11)" fg:x="1199" fg:w="1"/><text x="96.4008%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="96.1508%" y="325" width="0.1604%" height="15" fill="rgb(207,108,29)" fg:x="1199" fg:w="2"/><text x="96.4008%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="96.2310%" y="309" width="0.0802%" height="15" fill="rgb(236,215,43)" fg:x="1200" fg:w="1"/><text x="96.4810%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="96.2310%" y="293" width="0.0802%" height="15" fill="rgb(213,58,35)" fg:x="1200" fg:w="1"/><text x="96.4810%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="96.1508%" y="357" width="0.2406%" height="15" fill="rgb(220,211,46)" fg:x="1199" fg:w="3"/><text x="96.4008%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="96.1508%" y="341" width="0.2406%" height="15" fill="rgb(212,134,16)" fg:x="1199" fg:w="3"/><text x="96.4008%" y="351.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="96.3111%" y="325" width="0.0802%" height="15" fill="rgb(232,90,44)" fg:x="1201" fg:w="1"/><text x="96.5611%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="96.3111%" y="309" width="0.0802%" height="15" fill="rgb(212,18,36)" fg:x="1201" fg:w="1"/><text x="96.5611%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="96.0706%" y="389" width="0.4010%" height="15" fill="rgb(206,112,24)" fg:x="1198" fg:w="5"/><text x="96.3206%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="96.1508%" y="373" width="0.3208%" height="15" fill="rgb(238,223,40)" fg:x="1199" fg:w="4"/><text x="96.4008%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.3913%" y="357" width="0.0802%" height="15" fill="rgb(226,169,20)" fg:x="1202" fg:w="1"/><text x="96.6413%" y="367.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (22 samples, 1.76%)</title><rect x="94.7875%" y="517" width="1.7642%" height="15" fill="rgb(241,64,52)" fg:x="1182" fg:w="22"/><text x="95.0375%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (21 samples, 1.68%)</title><rect x="94.8677%" y="501" width="1.6840%" height="15" fill="rgb(228,120,25)" fg:x="1183" fg:w="21"/><text x="95.1177%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (18 samples, 1.44%)</title><rect x="95.1083%" y="485" width="1.4435%" height="15" fill="rgb(234,108,19)" fg:x="1186" fg:w="18"/><text x="95.3583%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="95.3488%" y="469" width="1.2029%" height="15" fill="rgb(236,133,29)" fg:x="1189" fg:w="15"/><text x="95.5988%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.20%)</title><rect x="95.3488%" y="453" width="1.2029%" height="15" fill="rgb(246,174,53)" fg:x="1189" fg:w="15"/><text x="95.5988%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.88%)</title><rect x="95.6696%" y="437" width="0.8821%" height="15" fill="rgb(210,105,35)" fg:x="1193" fg:w="11"/><text x="95.9196%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="95.9102%" y="421" width="0.6415%" height="15" fill="rgb(225,27,26)" fg:x="1196" fg:w="8"/><text x="96.1602%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="96.0706%" y="405" width="0.4812%" height="15" fill="rgb(233,2,39)" fg:x="1198" fg:w="6"/><text x="96.3206%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.4715%" y="389" width="0.0802%" height="15" fill="rgb(219,164,26)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.5517%" y="341" width="0.0802%" height="15" fill="rgb(236,211,5)" fg:x="1204" fg:w="1"/><text x="96.8017%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="96.5517%" y="373" width="0.2406%" height="15" fill="rgb(244,227,23)" fg:x="1204" fg:w="3"/><text x="96.8017%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="96.5517%" y="357" width="0.2406%" height="15" fill="rgb(230,184,8)" fg:x="1204" fg:w="3"/><text x="96.8017%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="96.6319%" y="341" width="0.1604%" height="15" fill="rgb(217,125,48)" fg:x="1205" fg:w="2"/><text x="96.8819%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="96.7121%" y="325" width="0.0802%" height="15" fill="rgb(223,192,47)" fg:x="1206" fg:w="1"/><text x="96.9621%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.7923%" y="357" width="0.0802%" height="15" fill="rgb(226,119,10)" fg:x="1207" fg:w="1"/><text x="97.0423%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.7923%" y="341" width="0.0802%" height="15" fill="rgb(221,49,29)" fg:x="1207" fg:w="1"/><text x="97.0423%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.7923%" y="325" width="0.0802%" height="15" fill="rgb(217,205,19)" fg:x="1207" fg:w="1"/><text x="97.0423%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.7923%" y="309" width="0.0802%" height="15" fill="rgb(242,104,7)" fg:x="1207" fg:w="1"/><text x="97.0423%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.7923%" y="293" width="0.0802%" height="15" fill="rgb(209,154,48)" fg:x="1207" fg:w="1"/><text x="97.0423%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.7923%" y="277" width="0.0802%" height="15" fill="rgb(219,213,46)" fg:x="1207" fg:w="1"/><text x="97.0423%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="96.5517%" y="421" width="0.4010%" height="15" fill="rgb(229,105,38)" fg:x="1204" fg:w="5"/><text x="96.8017%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="96.5517%" y="405" width="0.4010%" height="15" fill="rgb(205,151,5)" fg:x="1204" fg:w="5"/><text x="96.8017%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="96.5517%" y="389" width="0.4010%" height="15" fill="rgb(248,115,40)" fg:x="1204" fg:w="5"/><text x="96.8017%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.7923%" y="373" width="0.1604%" height="15" fill="rgb(206,179,2)" fg:x="1207" fg:w="2"/><text x="97.0423%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.8725%" y="357" width="0.0802%" height="15" fill="rgb(230,103,24)" fg:x="1208" fg:w="1"/><text x="97.1225%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.8725%" y="341" width="0.0802%" height="15" fill="rgb(218,152,4)" fg:x="1208" fg:w="1"/><text x="97.1225%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.9527%" y="421" width="0.0802%" height="15" fill="rgb(236,161,54)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="431.50"></text></g><g><title>engine::session::Session::save_entity_changes (68 samples, 5.45%)</title><rect x="91.6600%" y="581" width="5.4531%" height="15" fill="rgb(226,65,17)" fg:x="1143" fg:w="68"/><text x="91.9100%" y="591.50">engine:..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (62 samples, 4.97%)</title><rect x="92.1411%" y="565" width="4.9719%" height="15" fill="rgb(221,134,44)" fg:x="1149" fg:w="62"/><text x="92.3911%" y="575.50">engine..</text></g><g><title>engine::session::SavesEntities::check_for_changes (62 samples, 4.97%)</title><rect x="92.1411%" y="549" width="4.9719%" height="15" fill="rgb(251,129,4)" fg:x="1149" fg:w="62"/><text x="92.3911%" y="559.50">engine..</text></g><g><title>kernel::model::any_entity_changes (38 samples, 3.05%)</title><rect x="94.0658%" y="533" width="3.0473%" height="15" fill="rgb(244,32,34)" fg:x="1173" fg:w="38"/><text x="94.3158%" y="543.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (7 samples, 0.56%)</title><rect x="96.5517%" y="517" width="0.5613%" height="15" fill="rgb(251,224,37)" fg:x="1204" fg:w="7"/><text x="96.8017%" y="527.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.56%)</title><rect x="96.5517%" y="501" width="0.5613%" height="15" fill="rgb(248,117,31)" fg:x="1204" fg:w="7"/><text x="96.8017%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="96.5517%" y="485" width="0.5613%" height="15" fill="rgb(222,208,37)" fg:x="1204" fg:w="7"/><text x="96.8017%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="96.5517%" y="469" width="0.5613%" height="15" fill="rgb(234,211,25)" fg:x="1204" fg:w="7"/><text x="96.8017%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="96.5517%" y="453" width="0.5613%" height="15" fill="rgb(211,72,6)" fg:x="1204" fg:w="7"/><text x="96.8017%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="96.5517%" y="437" width="0.5613%" height="15" fill="rgb(249,198,38)" fg:x="1204" fg:w="7"/><text x="96.8017%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.0329%" y="421" width="0.0802%" height="15" fill="rgb(221,86,51)" fg:x="1210" fg:w="1"/><text x="97.2829%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.0329%" y="405" width="0.0802%" height="15" fill="rgb(226,178,43)" fg:x="1210" fg:w="1"/><text x="97.2829%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.0329%" y="389" width="0.0802%" height="15" fill="rgb(215,145,7)" fg:x="1210" fg:w="1"/><text x="97.2829%" y="399.50"></text></g><g><title>engine::session::Session::close (70 samples, 5.61%)</title><rect x="91.5798%" y="597" width="5.6135%" height="15" fill="rgb(250,202,36)" fg:x="1142" fg:w="70"/><text x="91.8298%" y="607.50">engine:..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="97.1131%" y="581" width="0.0802%" height="15" fill="rgb(215,86,13)" fg:x="1211" fg:w="1"/><text x="97.3631%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (1 samples, 0.08%)</title><rect x="97.2735%" y="421" width="0.0802%" height="15" fill="rgb(221,134,12)" fg:x="1213" fg:w="1"/><text x="97.5235%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.3536%" y="341" width="0.0802%" height="15" fill="rgb(213,82,10)" fg:x="1214" fg:w="1"/><text x="97.6036%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.3536%" y="325" width="0.0802%" height="15" fill="rgb(214,142,0)" fg:x="1214" fg:w="1"/><text x="97.6036%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.3536%" y="309" width="0.0802%" height="15" fill="rgb(205,145,9)" fg:x="1214" fg:w="1"/><text x="97.6036%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.3536%" y="293" width="0.0802%" height="15" fill="rgb(244,214,8)" fg:x="1214" fg:w="1"/><text x="97.6036%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.3536%" y="277" width="0.0802%" height="15" fill="rgb(224,72,51)" fg:x="1214" fg:w="1"/><text x="97.6036%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.3536%" y="261" width="0.0802%" height="15" fill="rgb(233,137,37)" fg:x="1214" fg:w="1"/><text x="97.6036%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="97.3536%" y="245" width="0.0802%" height="15" fill="rgb(208,71,28)" fg:x="1214" fg:w="1"/><text x="97.6036%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="97.3536%" y="229" width="0.0802%" height="15" fill="rgb(226,31,7)" fg:x="1214" fg:w="1"/><text x="97.6036%" y="239.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="97.4338%" y="341" width="0.0802%" height="15" fill="rgb(229,62,18)" fg:x="1215" fg:w="1"/><text x="97.6838%" y="351.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="97.4338%" y="325" width="0.0802%" height="15" fill="rgb(226,74,28)" fg:x="1215" fg:w="1"/><text x="97.6838%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="97.4338%" y="309" width="0.0802%" height="15" fill="rgb(214,170,18)" fg:x="1215" fg:w="1"/><text x="97.6838%" y="319.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="97.4338%" y="293" width="0.0802%" height="15" fill="rgb(227,229,35)" fg:x="1215" fg:w="1"/><text x="97.6838%" y="303.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="97.4338%" y="277" width="0.0802%" height="15" fill="rgb(225,181,39)" fg:x="1215" fg:w="1"/><text x="97.6838%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.4338%" y="261" width="0.0802%" height="15" fill="rgb(253,124,44)" fg:x="1215" fg:w="1"/><text x="97.6838%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.4338%" y="245" width="0.0802%" height="15" fill="rgb(220,75,18)" fg:x="1215" fg:w="1"/><text x="97.6838%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.4338%" y="229" width="0.0802%" height="15" fill="rgb(239,175,43)" fg:x="1215" fg:w="1"/><text x="97.6838%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.4338%" y="213" width="0.0802%" height="15" fill="rgb(228,112,50)" fg:x="1215" fg:w="1"/><text x="97.6838%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.4338%" y="197" width="0.0802%" height="15" fill="rgb(232,105,36)" fg:x="1215" fg:w="1"/><text x="97.6838%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.4338%" y="181" width="0.0802%" height="15" fill="rgb(227,137,47)" fg:x="1215" fg:w="1"/><text x="97.6838%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.5140%" y="181" width="0.0802%" height="15" fill="rgb(217,51,9)" fg:x="1216" fg:w="1"/><text x="97.7640%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.5140%" y="165" width="0.0802%" height="15" fill="rgb(245,117,0)" fg:x="1216" fg:w="1"/><text x="97.7640%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.5140%" y="149" width="0.0802%" height="15" fill="rgb(252,52,30)" fg:x="1216" fg:w="1"/><text x="97.7640%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.5140%" y="133" width="0.0802%" height="15" fill="rgb(227,85,33)" fg:x="1216" fg:w="1"/><text x="97.7640%" y="143.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="97.5140%" y="117" width="0.0802%" height="15" fill="rgb(220,157,20)" fg:x="1216" fg:w="1"/><text x="97.7640%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="97.5140%" y="101" width="0.0802%" height="15" fill="rgb(254,14,34)" fg:x="1216" fg:w="1"/><text x="97.7640%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.5140%" y="213" width="0.1604%" height="15" fill="rgb(216,103,41)" fg:x="1216" fg:w="2"/><text x="97.7640%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.5140%" y="197" width="0.1604%" height="15" fill="rgb(245,221,9)" fg:x="1216" fg:w="2"/><text x="97.7640%" y="207.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="97.5942%" y="181" width="0.0802%" height="15" fill="rgb(254,136,47)" fg:x="1217" fg:w="1"/><text x="97.8442%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="97.5140%" y="261" width="0.2406%" height="15" fill="rgb(235,71,46)" fg:x="1216" fg:w="3"/><text x="97.7640%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="97.5140%" y="245" width="0.2406%" height="15" fill="rgb(242,154,29)" fg:x="1216" fg:w="3"/><text x="97.7640%" y="255.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.5140%" y="229" width="0.2406%" height="15" fill="rgb(210,65,31)" fg:x="1216" fg:w="3"/><text x="97.7640%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="97.6744%" y="213" width="0.0802%" height="15" fill="rgb(244,9,50)" fg:x="1218" fg:w="1"/><text x="97.9244%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.6744%" y="197" width="0.0802%" height="15" fill="rgb(215,141,38)" fg:x="1218" fg:w="1"/><text x="97.9244%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.6744%" y="181" width="0.0802%" height="15" fill="rgb(241,129,6)" fg:x="1218" fg:w="1"/><text x="97.9244%" y="191.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (4 samples, 0.32%)</title><rect x="97.5140%" y="325" width="0.3208%" height="15" fill="rgb(253,169,4)" fg:x="1216" fg:w="4"/><text x="97.7640%" y="335.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (4 samples, 0.32%)</title><rect x="97.5140%" y="309" width="0.3208%" height="15" fill="rgb(237,82,36)" fg:x="1216" fg:w="4"/><text x="97.7640%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="97.5140%" y="293" width="0.3208%" height="15" fill="rgb(209,171,11)" fg:x="1216" fg:w="4"/><text x="97.7640%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="97.5140%" y="277" width="0.3208%" height="15" fill="rgb(242,19,22)" fg:x="1216" fg:w="4"/><text x="97.7640%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.7546%" y="261" width="0.0802%" height="15" fill="rgb(251,122,24)" fg:x="1219" fg:w="1"/><text x="98.0046%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.7546%" y="245" width="0.0802%" height="15" fill="rgb(226,166,42)" fg:x="1219" fg:w="1"/><text x="98.0046%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.8348%" y="245" width="0.0802%" height="15" fill="rgb(244,101,48)" fg:x="1220" fg:w="1"/><text x="98.0848%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.8348%" y="229" width="0.0802%" height="15" fill="rgb(227,125,1)" fg:x="1220" fg:w="1"/><text x="98.0848%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (8 samples, 0.64%)</title><rect x="97.3536%" y="389" width="0.6415%" height="15" fill="rgb(206,79,43)" fg:x="1214" fg:w="8"/><text x="97.6036%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (8 samples, 0.64%)</title><rect x="97.3536%" y="373" width="0.6415%" height="15" fill="rgb(241,109,41)" fg:x="1214" fg:w="8"/><text x="97.6036%" y="383.50"></text></g><g><title>engine::internal::Entities::add_persisted (8 samples, 0.64%)</title><rect x="97.3536%" y="357" width="0.6415%" height="15" fill="rgb(219,73,4)" fg:x="1214" fg:w="8"/><text x="97.6036%" y="367.50"></text></g><g><title>kernel::model::deserialize_entity (6 samples, 0.48%)</title><rect x="97.5140%" y="341" width="0.4812%" height="15" fill="rgb(239,25,41)" fg:x="1216" fg:w="6"/><text x="97.7640%" y="351.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="97.8348%" y="325" width="0.1604%" height="15" fill="rgb(208,88,46)" fg:x="1220" fg:w="2"/><text x="98.0848%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="97.8348%" y="309" width="0.1604%" height="15" fill="rgb(239,184,9)" fg:x="1220" fg:w="2"/><text x="98.0848%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.8348%" y="293" width="0.1604%" height="15" fill="rgb(223,114,13)" fg:x="1220" fg:w="2"/><text x="98.0848%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="97.8348%" y="277" width="0.1604%" height="15" fill="rgb(214,28,42)" fg:x="1220" fg:w="2"/><text x="98.0848%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.8348%" y="261" width="0.1604%" height="15" fill="rgb(252,32,44)" fg:x="1220" fg:w="2"/><text x="98.0848%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.9150%" y="245" width="0.0802%" height="15" fill="rgb(231,159,4)" fg:x="1221" fg:w="1"/><text x="98.1650%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.9150%" y="229" width="0.0802%" height="15" fill="rgb(210,35,26)" fg:x="1221" fg:w="1"/><text x="98.1650%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.9150%" y="213" width="0.0802%" height="15" fill="rgb(208,190,37)" fg:x="1221" fg:w="1"/><text x="98.1650%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.9150%" y="197" width="0.0802%" height="15" fill="rgb(226,148,22)" fg:x="1221" fg:w="1"/><text x="98.1650%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.9150%" y="181" width="0.0802%" height="15" fill="rgb(242,153,24)" fg:x="1221" fg:w="1"/><text x="98.1650%" y="191.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (10 samples, 0.80%)</title><rect x="97.2735%" y="437" width="0.8019%" height="15" fill="rgb(213,133,7)" fg:x="1213" fg:w="10"/><text x="97.5235%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope (9 samples, 0.72%)</title><rect x="97.3536%" y="421" width="0.7217%" height="15" fill="rgb(248,206,18)" fg:x="1214" fg:w="9"/><text x="97.6036%" y="431.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (9 samples, 0.72%)</title><rect x="97.3536%" y="405" width="0.7217%" height="15" fill="rgb(233,157,4)" fg:x="1214" fg:w="9"/><text x="97.6036%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.9952%" y="389" width="0.0802%" height="15" fill="rgb(249,179,32)" fg:x="1222" fg:w="1"/><text x="98.2452%" y="399.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (11 samples, 0.88%)</title><rect x="97.2735%" y="453" width="0.8821%" height="15" fill="rgb(248,69,35)" fg:x="1213" fg:w="11"/><text x="97.5235%" y="463.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="98.0754%" y="437" width="0.0802%" height="15" fill="rgb(249,158,38)" fg:x="1223" fg:w="1"/><text x="98.3254%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="98.0754%" y="421" width="0.0802%" height="15" fill="rgb(223,18,43)" fg:x="1223" fg:w="1"/><text x="98.3254%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="98.0754%" y="405" width="0.0802%" height="15" fill="rgb(238,42,45)" fg:x="1223" fg:w="1"/><text x="98.3254%" y="415.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="98.0754%" y="389" width="0.0802%" height="15" fill="rgb(219,65,47)" fg:x="1223" fg:w="1"/><text x="98.3254%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="98.1556%" y="405" width="0.0802%" height="15" fill="rgb(248,153,12)" fg:x="1224" fg:w="1"/><text x="98.4056%" y="415.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (14 samples, 1.12%)</title><rect x="97.2735%" y="469" width="1.1227%" height="15" fill="rgb(240,118,4)" fg:x="1213" fg:w="14"/><text x="97.5235%" y="479.50"></text></g><g><title>kernel::plugins::apply_middleware (3 samples, 0.24%)</title><rect x="98.1556%" y="453" width="0.2406%" height="15" fill="rgb(250,96,34)" fg:x="1224" fg:w="3"/><text x="98.4056%" y="463.50"></text></g><g><title>kernel::plugins::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="98.1556%" y="437" width="0.2406%" height="15" fill="rgb(221,15,4)" fg:x="1224" fg:w="3"/><text x="98.4056%" y="447.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::Middleware&gt;::handle (3 samples, 0.24%)</title><rect x="98.1556%" y="421" width="0.2406%" height="15" fill="rgb(217,149,33)" fg:x="1224" fg:w="3"/><text x="98.4056%" y="431.50"></text></g><g><title>kernel::plugins::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="98.2358%" y="405" width="0.1604%" height="15" fill="rgb(213,58,29)" fg:x="1225" fg:w="2"/><text x="98.4858%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="98.2358%" y="389" width="0.1604%" height="15" fill="rgb(236,218,9)" fg:x="1225" fg:w="2"/><text x="98.4858%" y="399.50"></text></g><g><title>kernel::plugins::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="98.2358%" y="373" width="0.1604%" height="15" fill="rgb(248,40,19)" fg:x="1225" fg:w="2"/><text x="98.4858%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="98.2358%" y="357" width="0.1604%" height="15" fill="rgb(212,17,6)" fg:x="1225" fg:w="2"/><text x="98.4858%" y="367.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.16%)</title><rect x="98.2358%" y="341" width="0.1604%" height="15" fill="rgb(206,212,20)" fg:x="1225" fg:w="2"/><text x="98.4858%" y="351.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (2 samples, 0.16%)</title><rect x="98.2358%" y="325" width="0.1604%" height="15" fill="rgb(229,80,37)" fg:x="1225" fg:w="2"/><text x="98.4858%" y="335.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="98.2358%" y="309" width="0.1604%" height="15" fill="rgb(253,8,37)" fg:x="1225" fg:w="2"/><text x="98.4858%" y="319.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="98.2358%" y="293" width="0.1604%" height="15" fill="rgb(215,16,43)" fg:x="1225" fg:w="2"/><text x="98.4858%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="98.2358%" y="277" width="0.1604%" height="15" fill="rgb(236,219,16)" fg:x="1225" fg:w="2"/><text x="98.4858%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="98.2358%" y="261" width="0.1604%" height="15" fill="rgb(251,0,3)" fg:x="1225" fg:w="2"/><text x="98.4858%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="98.2358%" y="245" width="0.1604%" height="15" fill="rgb(207,133,37)" fg:x="1225" fg:w="2"/><text x="98.4858%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="98.2358%" y="229" width="0.1604%" height="15" fill="rgb(250,143,20)" fg:x="1225" fg:w="2"/><text x="98.4858%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="98.2358%" y="213" width="0.1604%" height="15" fill="rgb(242,19,50)" fg:x="1225" fg:w="2"/><text x="98.4858%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="98.2358%" y="197" width="0.1604%" height="15" fill="rgb(206,124,43)" fg:x="1225" fg:w="2"/><text x="98.4858%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="98.2358%" y="181" width="0.1604%" height="15" fill="rgb(229,4,38)" fg:x="1225" fg:w="2"/><text x="98.4858%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="98.2358%" y="165" width="0.1604%" height="15" fill="rgb(247,220,45)" fg:x="1225" fg:w="2"/><text x="98.4858%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="98.2358%" y="149" width="0.1604%" height="15" fill="rgb(247,195,0)" fg:x="1225" fg:w="2"/><text x="98.4858%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="98.2358%" y="133" width="0.1604%" height="15" fill="rgb(252,12,19)" fg:x="1225" fg:w="2"/><text x="98.4858%" y="143.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="98.2358%" y="117" width="0.1604%" height="15" fill="rgb(222,49,50)" fg:x="1225" fg:w="2"/><text x="98.4858%" y="127.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="98.2358%" y="101" width="0.1604%" height="15" fill="rgb(209,157,28)" fg:x="1225" fg:w="2"/><text x="98.4858%" y="111.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.3962%" y="373" width="0.0802%" height="15" fill="rgb(238,174,24)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="383.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="98.3962%" y="357" width="0.0802%" height="15" fill="rgb(224,17,28)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="98.3962%" y="341" width="0.0802%" height="15" fill="rgb(249,7,29)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="351.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.3962%" y="325" width="0.0802%" height="15" fill="rgb(243,178,4)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3962%" y="309" width="0.0802%" height="15" fill="rgb(246,138,35)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="319.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.3962%" y="293" width="0.0802%" height="15" fill="rgb(251,85,18)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3962%" y="277" width="0.0802%" height="15" fill="rgb(254,55,9)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.3962%" y="261" width="0.0802%" height="15" fill="rgb(248,4,50)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3962%" y="245" width="0.0802%" height="15" fill="rgb(215,208,14)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="255.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.3962%" y="229" width="0.0802%" height="15" fill="rgb(218,37,18)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3962%" y="213" width="0.0802%" height="15" fill="rgb(206,104,13)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.3962%" y="197" width="0.0802%" height="15" fill="rgb(248,94,22)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.5565%" y="229" width="0.0802%" height="15" fill="rgb(235,42,46)" fg:x="1229" fg:w="1"/><text x="98.8065%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.5565%" y="213" width="0.0802%" height="15" fill="rgb(220,228,48)" fg:x="1229" fg:w="1"/><text x="98.8065%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.5565%" y="197" width="0.0802%" height="15" fill="rgb(216,58,12)" fg:x="1229" fg:w="1"/><text x="98.8065%" y="207.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="98.3962%" y="405" width="0.3208%" height="15" fill="rgb(223,97,52)" fg:x="1227" fg:w="4"/><text x="98.6462%" y="415.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="98.3962%" y="389" width="0.3208%" height="15" fill="rgb(208,159,17)" fg:x="1227" fg:w="4"/><text x="98.6462%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="98.4763%" y="373" width="0.2406%" height="15" fill="rgb(215,172,9)" fg:x="1228" fg:w="3"/><text x="98.7263%" y="383.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.24%)</title><rect x="98.4763%" y="357" width="0.2406%" height="15" fill="rgb(252,175,30)" fg:x="1228" fg:w="3"/><text x="98.7263%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.24%)</title><rect x="98.4763%" y="341" width="0.2406%" height="15" fill="rgb(209,159,10)" fg:x="1228" fg:w="3"/><text x="98.7263%" y="351.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.5565%" y="325" width="0.1604%" height="15" fill="rgb(229,73,51)" fg:x="1229" fg:w="2"/><text x="98.8065%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.5565%" y="309" width="0.1604%" height="15" fill="rgb(208,212,43)" fg:x="1229" fg:w="2"/><text x="98.8065%" y="319.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.5565%" y="293" width="0.1604%" height="15" fill="rgb(254,123,53)" fg:x="1229" fg:w="2"/><text x="98.8065%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.5565%" y="277" width="0.1604%" height="15" fill="rgb(254,128,49)" fg:x="1229" fg:w="2"/><text x="98.8065%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="98.5565%" y="261" width="0.1604%" height="15" fill="rgb(246,16,16)" fg:x="1229" fg:w="2"/><text x="98.8065%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.5565%" y="245" width="0.1604%" height="15" fill="rgb(209,200,1)" fg:x="1229" fg:w="2"/><text x="98.8065%" y="255.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.6367%" y="229" width="0.0802%" height="15" fill="rgb(235,9,3)" fg:x="1230" fg:w="1"/><text x="98.8867%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.6367%" y="213" width="0.0802%" height="15" fill="rgb(233,121,54)" fg:x="1230" fg:w="1"/><text x="98.8867%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.6367%" y="197" width="0.0802%" height="15" fill="rgb(236,80,25)" fg:x="1230" fg:w="1"/><text x="98.8867%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.6367%" y="181" width="0.0802%" height="15" fill="rgb(220,44,24)" fg:x="1230" fg:w="1"/><text x="98.8867%" y="191.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.7169%" y="357" width="0.0802%" height="15" fill="rgb(236,225,16)" fg:x="1231" fg:w="1"/><text x="98.9669%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.7169%" y="341" width="0.0802%" height="15" fill="rgb(237,140,0)" fg:x="1231" fg:w="1"/><text x="98.9669%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.7169%" y="325" width="0.0802%" height="15" fill="rgb(243,225,53)" fg:x="1231" fg:w="1"/><text x="98.9669%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.7169%" y="309" width="0.0802%" height="15" fill="rgb(240,140,30)" fg:x="1231" fg:w="1"/><text x="98.9669%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="98.7169%" y="405" width="0.1604%" height="15" fill="rgb(217,51,16)" fg:x="1231" fg:w="2"/><text x="98.9669%" y="415.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="98.7169%" y="389" width="0.1604%" height="15" fill="rgb(245,75,50)" fg:x="1231" fg:w="2"/><text x="98.9669%" y="399.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="98.7169%" y="373" width="0.1604%" height="15" fill="rgb(208,174,22)" fg:x="1231" fg:w="2"/><text x="98.9669%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.7971%" y="357" width="0.0802%" height="15" fill="rgb(219,98,50)" fg:x="1232" fg:w="1"/><text x="99.0471%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7971%" y="341" width="0.0802%" height="15" fill="rgb(243,138,3)" fg:x="1232" fg:w="1"/><text x="99.0471%" y="351.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.7971%" y="325" width="0.0802%" height="15" fill="rgb(243,132,26)" fg:x="1232" fg:w="1"/><text x="99.0471%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7971%" y="309" width="0.0802%" height="15" fill="rgb(250,201,8)" fg:x="1232" fg:w="1"/><text x="99.0471%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.7971%" y="293" width="0.0802%" height="15" fill="rgb(213,91,26)" fg:x="1232" fg:w="1"/><text x="99.0471%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7971%" y="277" width="0.0802%" height="15" fill="rgb(229,117,1)" fg:x="1232" fg:w="1"/><text x="99.0471%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.9575%" y="293" width="0.0802%" height="15" fill="rgb(229,24,6)" fg:x="1234" fg:w="1"/><text x="99.2075%" y="303.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="98.9575%" y="277" width="0.0802%" height="15" fill="rgb(206,69,11)" fg:x="1234" fg:w="1"/><text x="99.2075%" y="287.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (5 samples, 0.40%)</title><rect x="98.8773%" y="389" width="0.4010%" height="15" fill="rgb(234,111,34)" fg:x="1233" fg:w="5"/><text x="99.1273%" y="399.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (5 samples, 0.40%)</title><rect x="98.8773%" y="373" width="0.4010%" height="15" fill="rgb(213,187,51)" fg:x="1233" fg:w="5"/><text x="99.1273%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="98.8773%" y="357" width="0.4010%" height="15" fill="rgb(207,45,11)" fg:x="1233" fg:w="5"/><text x="99.1273%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="98.8773%" y="341" width="0.4010%" height="15" fill="rgb(225,151,47)" fg:x="1233" fg:w="5"/><text x="99.1273%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="98.9575%" y="325" width="0.3208%" height="15" fill="rgb(211,226,5)" fg:x="1234" fg:w="4"/><text x="99.2075%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="98.9575%" y="309" width="0.3208%" height="15" fill="rgb(214,83,52)" fg:x="1234" fg:w="4"/><text x="99.2075%" y="319.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="99.0377%" y="293" width="0.2406%" height="15" fill="rgb(229,49,53)" fg:x="1235" fg:w="3"/><text x="99.2877%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="99.0377%" y="277" width="0.2406%" height="15" fill="rgb(246,8,28)" fg:x="1235" fg:w="3"/><text x="99.2877%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="99.1179%" y="261" width="0.1604%" height="15" fill="rgb(207,28,41)" fg:x="1236" fg:w="2"/><text x="99.3679%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="99.1179%" y="245" width="0.1604%" height="15" fill="rgb(254,22,25)" fg:x="1236" fg:w="2"/><text x="99.3679%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.1981%" y="229" width="0.0802%" height="15" fill="rgb(209,120,42)" fg:x="1237" fg:w="1"/><text x="99.4481%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.1981%" y="213" width="0.0802%" height="15" fill="rgb(216,194,18)" fg:x="1237" fg:w="1"/><text x="99.4481%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.2783%" y="341" width="0.0802%" height="15" fill="rgb(213,70,17)" fg:x="1238" fg:w="1"/><text x="99.5283%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="99.2783%" y="325" width="0.0802%" height="15" fill="rgb(228,66,19)" fg:x="1238" fg:w="1"/><text x="99.5283%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.3585%" y="341" width="0.0802%" height="15" fill="rgb(236,221,54)" fg:x="1239" fg:w="1"/><text x="99.6085%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4387%" y="261" width="0.0802%" height="15" fill="rgb(207,175,15)" fg:x="1240" fg:w="1"/><text x="99.6887%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.4387%" y="245" width="0.0802%" height="15" fill="rgb(234,76,8)" fg:x="1240" fg:w="1"/><text x="99.6887%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.4387%" y="229" width="0.0802%" height="15" fill="rgb(243,106,0)" fg:x="1240" fg:w="1"/><text x="99.6887%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (15 samples, 1.20%)</title><rect x="98.3962%" y="453" width="1.2029%" height="15" fill="rgb(208,48,19)" fg:x="1227" fg:w="15"/><text x="98.6462%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (15 samples, 1.20%)</title><rect x="98.3962%" y="437" width="1.2029%" height="15" fill="rgb(251,50,29)" fg:x="1227" fg:w="15"/><text x="98.6462%" y="447.50"></text></g><g><title>engine::internal::Entities::add_persisted (15 samples, 1.20%)</title><rect x="98.3962%" y="421" width="1.2029%" height="15" fill="rgb(222,31,49)" fg:x="1227" fg:w="15"/><text x="98.6462%" y="431.50"></text></g><g><title>kernel::model::deserialize_entity (9 samples, 0.72%)</title><rect x="98.8773%" y="405" width="0.7217%" height="15" fill="rgb(232,33,18)" fg:x="1233" fg:w="9"/><text x="99.1273%" y="415.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="99.2783%" y="389" width="0.3208%" height="15" fill="rgb(209,1,44)" fg:x="1238" fg:w="4"/><text x="99.5283%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="99.2783%" y="373" width="0.3208%" height="15" fill="rgb(211,7,1)" fg:x="1238" fg:w="4"/><text x="99.5283%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="99.2783%" y="357" width="0.3208%" height="15" fill="rgb(224,111,27)" fg:x="1238" fg:w="4"/><text x="99.5283%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.4387%" y="341" width="0.1604%" height="15" fill="rgb(252,195,39)" fg:x="1240" fg:w="2"/><text x="99.6887%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.4387%" y="325" width="0.1604%" height="15" fill="rgb(237,198,5)" fg:x="1240" fg:w="2"/><text x="99.6887%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.4387%" y="309" width="0.1604%" height="15" fill="rgb(232,148,1)" fg:x="1240" fg:w="2"/><text x="99.6887%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.4387%" y="293" width="0.1604%" height="15" fill="rgb(249,41,3)" fg:x="1240" fg:w="2"/><text x="99.6887%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.4387%" y="277" width="0.1604%" height="15" fill="rgb(215,14,33)" fg:x="1240" fg:w="2"/><text x="99.6887%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.5188%" y="261" width="0.0802%" height="15" fill="rgb(209,146,24)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5188%" y="245" width="0.0802%" height="15" fill="rgb(219,51,47)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.5188%" y="229" width="0.0802%" height="15" fill="rgb(234,217,40)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="239.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (31 samples, 2.49%)</title><rect x="97.1933%" y="565" width="2.4860%" height="15" fill="rgb(228,34,26)" fg:x="1212" fg:w="31"/><text x="97.4433%" y="575.50">&lt;k..</text></g><g><title>core::iter::adapters::try_process (31 samples, 2.49%)</title><rect x="97.1933%" y="549" width="2.4860%" height="15" fill="rgb(224,50,29)" fg:x="1212" fg:w="31"/><text x="97.4433%" y="559.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (31 samples, 2.49%)</title><rect x="97.1933%" y="533" width="2.4860%" height="15" fill="rgb(205,79,51)" fg:x="1212" fg:w="31"/><text x="97.4433%" y="543.50">&lt;a..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (31 samples, 2.49%)</title><rect x="97.1933%" y="517" width="2.4860%" height="15" fill="rgb(218,136,28)" fg:x="1212" fg:w="31"/><text x="97.4433%" y="527.50">&lt;c..</text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (30 samples, 2.41%)</title><rect x="97.2735%" y="501" width="2.4058%" height="15" fill="rgb(220,150,10)" fg:x="1213" fg:w="30"/><text x="97.5235%" y="511.50">&lt;p..</text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (30 samples, 2.41%)</title><rect x="97.2735%" y="485" width="2.4058%" height="15" fill="rgb(242,158,47)" fg:x="1213" fg:w="30"/><text x="97.5235%" y="495.50">&lt;e..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (16 samples, 1.28%)</title><rect x="98.3962%" y="469" width="1.2831%" height="15" fill="rgb(209,68,0)" fg:x="1227" fg:w="16"/><text x="98.6462%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::base::DomainError&gt; (1 samples, 0.08%)</title><rect x="99.5990%" y="453" width="0.0802%" height="15" fill="rgb(208,13,41)" fg:x="1242" fg:w="1"/><text x="99.8490%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.6792%" y="565" width="0.0802%" height="15" fill="rgb(226,201,7)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.6792%" y="549" width="0.0802%" height="15" fill="rgb(236,103,26)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.6792%" y="533" width="0.0802%" height="15" fill="rgb(243,162,8)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.6792%" y="517" width="0.0802%" height="15" fill="rgb(237,225,11)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.6792%" y="501" width="0.0802%" height="15" fill="rgb(247,186,32)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="99.6792%" y="485" width="0.0802%" height="15" fill="rgb(215,26,28)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="495.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="99.6792%" y="469" width="0.0802%" height="15" fill="rgb(208,121,6)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.6792%" y="453" width="0.0802%" height="15" fill="rgb(225,91,3)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.6792%" y="437" width="0.0802%" height="15" fill="rgb(246,119,36)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="447.50"></text></g><g><title>core::fmt::run (1 samples, 0.08%)</title><rect x="99.6792%" y="421" width="0.0802%" height="15" fill="rgb(254,173,2)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.6792%" y="405" width="0.0802%" height="15" fill="rgb(209,87,54)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="415.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="99.6792%" y="389" width="0.0802%" height="15" fill="rgb(223,216,20)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="399.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.08%)</title><rect x="99.6792%" y="373" width="0.0802%" height="15" fill="rgb(220,31,8)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="383.50"></text></g><g><title>core::str::count::count_chars (1 samples, 0.08%)</title><rect x="99.6792%" y="357" width="0.0802%" height="15" fill="rgb(220,185,15)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="367.50"></text></g><g><title>core::str::count::char_count_general_case (1 samples, 0.08%)</title><rect x="99.6792%" y="341" width="0.0802%" height="15" fill="rgb(247,190,50)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.08%)</title><rect x="99.6792%" y="325" width="0.0802%" height="15" fill="rgb(239,173,47)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="99.6792%" y="309" width="0.0802%" height="15" fill="rgb(218,190,42)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="319.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="99.6792%" y="293" width="0.0802%" height="15" fill="rgb(251,207,16)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="99.6792%" y="277" width="0.0802%" height="15" fill="rgb(222,199,47)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="99.6792%" y="261" width="0.0802%" height="15" fill="rgb(245,190,7)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="99.6792%" y="245" width="0.0802%" height="15" fill="rgb(239,85,38)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::perform::StandardPerformer&gt; (1 samples, 0.08%)</title><rect x="99.7594%" y="565" width="0.0802%" height="15" fill="rgb(229,69,51)" fg:x="1244" fg:w="1"/><text x="100.0094%" y="575.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (34 samples, 2.73%)</title><rect x="97.1933%" y="597" width="2.7265%" height="15" fill="rgb(231,104,51)" fg:x="1212" fg:w="34"/><text x="97.4433%" y="607.50">en..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (34 samples, 2.73%)</title><rect x="97.1933%" y="581" width="2.7265%" height="15" fill="rgb(235,49,4)" fg:x="1212" fg:w="34"/><text x="97.4433%" y="591.50">en..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="99.8396%" y="565" width="0.0802%" height="15" fill="rgb(246,166,20)" fg:x="1245" fg:w="1"/><text x="100.0896%" y="575.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="99.8396%" y="549" width="0.0802%" height="15" fill="rgb(230,119,37)" fg:x="1245" fg:w="1"/><text x="100.0896%" y="559.50"></text></g><g><title>all (1,247 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(234,77,34)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="959.50"></text></g><g><title>simple-5e588292 (1,247 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(211,222,33)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="943.50">simple-5e588292</text></g><g><title>_start (1,247 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(226,45,42)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="927.50">_start</text></g><g><title>__libc_start_main (1,247 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(215,174,28)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="911.50">__libc_start_main</text></g><g><title>main (1,247 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(254,173,49)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (1,247 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(229,191,6)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,247 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(212,145,22)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,247 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(226,6,51)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,247 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(227,128,8)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="831.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,247 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(205,24,10)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="815.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,247 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(217,147,27)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,247 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(250,82,42)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,247 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(248,93,17)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="767.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,247 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(254,212,40)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="751.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,247 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(229,209,2)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="735.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,247 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(211,50,43)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="719.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,247 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(245,196,29)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="703.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,247 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(216,132,13)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="687.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,247 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(251,108,21)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="671.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (334 samples, 26.78%)</title><rect x="73.2157%" y="645" width="26.7843%" height="15" fill="rgb(229,174,54)" fg:x="913" fg:w="334"/><text x="73.4657%" y="655.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as cri..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (334 samples, 26.78%)</title><rect x="73.2157%" y="629" width="26.7843%" height="15" fill="rgb(211,175,47)" fg:x="913" fg:w="334"/><text x="73.4657%" y="639.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (334 samples, 26.78%)</title><rect x="73.2157%" y="613" width="26.7843%" height="15" fill="rgb(234,5,37)" fg:x="913" fg:w="334"/><text x="73.4657%" y="623.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="99.9198%" y="597" width="0.0802%" height="15" fill="rgb(244,150,43)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="607.50"></text></g></svg></svg>