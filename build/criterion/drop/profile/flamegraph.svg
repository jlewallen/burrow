<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="981.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="981.00"> </text><svg id="frames" x="10" width="1180" total_samples="1253"><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.3192%" y="533" width="0.2394%" height="15" fill="rgb(219,158,36)" fg:x="4" fg:w="3"/><text x="0.5692%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.5587%" y="517" width="0.0798%" height="15" fill="rgb(251,128,40)" fg:x="7" fg:w="1"/><text x="0.8087%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (11 samples, 0.88%)</title><rect x="0.0798%" y="581" width="0.8779%" height="15" fill="rgb(254,101,39)" fg:x="1" fg:w="11"/><text x="0.3298%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.88%)</title><rect x="0.0798%" y="565" width="0.8779%" height="15" fill="rgb(221,168,40)" fg:x="1" fg:w="11"/><text x="0.3298%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (9 samples, 0.72%)</title><rect x="0.2394%" y="549" width="0.7183%" height="15" fill="rgb(221,14,27)" fg:x="3" fg:w="9"/><text x="0.4894%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (5 samples, 0.40%)</title><rect x="0.5587%" y="533" width="0.3990%" height="15" fill="rgb(207,36,43)" fg:x="7" fg:w="5"/><text x="0.8087%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (4 samples, 0.32%)</title><rect x="0.6385%" y="517" width="0.3192%" height="15" fill="rgb(240,172,53)" fg:x="8" fg:w="4"/><text x="0.8885%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.8779%" y="501" width="0.0798%" height="15" fill="rgb(241,138,43)" fg:x="11" fg:w="1"/><text x="1.1279%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.1173%" y="501" width="0.0798%" height="15" fill="rgb(227,78,19)" fg:x="14" fg:w="1"/><text x="1.3673%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.1971%" y="501" width="0.1596%" height="15" fill="rgb(215,127,44)" fg:x="15" fg:w="2"/><text x="1.4471%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.5164%" y="485" width="0.0798%" height="15" fill="rgb(227,13,10)" fg:x="19" fg:w="1"/><text x="1.7664%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.5962%" y="469" width="0.1596%" height="15" fill="rgb(249,177,6)" fg:x="20" fg:w="2"/><text x="1.8462%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.7558%" y="469" width="0.0798%" height="15" fill="rgb(215,154,26)" fg:x="22" fg:w="1"/><text x="2.0058%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.8356%" y="453" width="0.1596%" height="15" fill="rgb(250,168,20)" fg:x="23" fg:w="2"/><text x="2.0856%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.9952%" y="453" width="0.0798%" height="15" fill="rgb(222,53,38)" fg:x="25" fg:w="1"/><text x="2.2452%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="2.0750%" y="453" width="0.0798%" height="15" fill="rgb(245,154,5)" fg:x="26" fg:w="1"/><text x="2.3250%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="2.0750%" y="437" width="0.0798%" height="15" fill="rgb(214,89,50)" fg:x="26" fg:w="1"/><text x="2.3250%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="2.0750%" y="421" width="0.0798%" height="15" fill="rgb(232,73,14)" fg:x="26" fg:w="1"/><text x="2.3250%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.2346%" y="437" width="0.0798%" height="15" fill="rgb(230,101,20)" fg:x="28" fg:w="1"/><text x="2.4846%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 1.44%)</title><rect x="1.0375%" y="517" width="1.4366%" height="15" fill="rgb(208,56,28)" fg:x="13" fg:w="18"/><text x="1.2875%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.12%)</title><rect x="1.3567%" y="501" width="1.1173%" height="15" fill="rgb(247,205,22)" fg:x="17" fg:w="14"/><text x="1.6067%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="1.5962%" y="485" width="0.8779%" height="15" fill="rgb(252,109,51)" fg:x="20" fg:w="11"/><text x="1.8462%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="1.8356%" y="469" width="0.6385%" height="15" fill="rgb(220,40,24)" fg:x="23" fg:w="8"/><text x="2.0856%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="2.1548%" y="453" width="0.3192%" height="15" fill="rgb(251,108,7)" fg:x="27" fg:w="4"/><text x="2.4048%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="2.3144%" y="437" width="0.1596%" height="15" fill="rgb(238,102,51)" fg:x="29" fg:w="2"/><text x="2.5644%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.3943%" y="421" width="0.0798%" height="15" fill="rgb(219,149,34)" fg:x="30" fg:w="1"/><text x="2.6443%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.6337%" y="485" width="0.1596%" height="15" fill="rgb(239,70,0)" fg:x="33" fg:w="2"/><text x="2.8837%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="2.7933%" y="485" width="0.1596%" height="15" fill="rgb(246,214,23)" fg:x="35" fg:w="2"/><text x="3.0433%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.8731%" y="469" width="0.0798%" height="15" fill="rgb(239,221,51)" fg:x="36" fg:w="1"/><text x="3.1231%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.0327%" y="469" width="0.0798%" height="15" fill="rgb(254,62,14)" fg:x="38" fg:w="1"/><text x="3.2827%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.1125%" y="469" width="0.0798%" height="15" fill="rgb(253,57,33)" fg:x="39" fg:w="1"/><text x="3.3625%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.1923%" y="437" width="0.0798%" height="15" fill="rgb(229,34,6)" fg:x="40" fg:w="1"/><text x="3.4423%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="3.2721%" y="437" width="0.2394%" height="15" fill="rgb(235,191,23)" fg:x="41" fg:w="3"/><text x="3.5221%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.4318%" y="421" width="0.0798%" height="15" fill="rgb(217,207,27)" fg:x="43" fg:w="1"/><text x="3.6818%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (7 samples, 0.56%)</title><rect x="3.1923%" y="469" width="0.5587%" height="15" fill="rgb(232,41,44)" fg:x="40" fg:w="7"/><text x="3.4423%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="3.1923%" y="453" width="0.5587%" height="15" fill="rgb(221,188,19)" fg:x="40" fg:w="7"/><text x="3.4423%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="3.5116%" y="437" width="0.2394%" height="15" fill="rgb(245,180,45)" fg:x="44" fg:w="3"/><text x="3.7616%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="3.6712%" y="421" width="0.0798%" height="15" fill="rgb(250,220,42)" fg:x="46" fg:w="1"/><text x="3.9212%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.9106%" y="453" width="0.0798%" height="15" fill="rgb(234,16,34)" fg:x="49" fg:w="1"/><text x="4.1606%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="3.9904%" y="453" width="0.1596%" height="15" fill="rgb(233,217,23)" fg:x="50" fg:w="2"/><text x="4.2404%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.0702%" y="437" width="0.0798%" height="15" fill="rgb(209,22,46)" fg:x="51" fg:w="1"/><text x="4.3202%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.76%)</title><rect x="2.4741%" y="517" width="1.7558%" height="15" fill="rgb(213,101,18)" fg:x="31" fg:w="22"/><text x="2.7241%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 1.60%)</title><rect x="2.6337%" y="501" width="1.5962%" height="15" fill="rgb(215,179,52)" fg:x="33" fg:w="20"/><text x="2.8837%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.28%)</title><rect x="2.9529%" y="485" width="1.2769%" height="15" fill="rgb(223,50,25)" fg:x="37" fg:w="16"/><text x="3.2029%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="3.7510%" y="469" width="0.4789%" height="15" fill="rgb(224,51,44)" fg:x="47" fg:w="6"/><text x="4.0010%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="4.1500%" y="453" width="0.0798%" height="15" fill="rgb(224,13,54)" fg:x="52" fg:w="1"/><text x="4.4000%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (43 samples, 3.43%)</title><rect x="0.9577%" y="581" width="3.4318%" height="15" fill="rgb(219,58,47)" fg:x="12" fg:w="43"/><text x="1.2077%" y="591.50">cor..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 3.43%)</title><rect x="0.9577%" y="565" width="3.4318%" height="15" fill="rgb(246,124,34)" fg:x="12" fg:w="43"/><text x="1.2077%" y="575.50">&lt;ha..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (43 samples, 3.43%)</title><rect x="0.9577%" y="549" width="3.4318%" height="15" fill="rgb(245,109,25)" fg:x="12" fg:w="43"/><text x="1.2077%" y="559.50">cor..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 3.35%)</title><rect x="1.0375%" y="533" width="3.3520%" height="15" fill="rgb(235,48,23)" fg:x="13" fg:w="42"/><text x="1.2875%" y="543.50">&lt;al..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="4.2298%" y="517" width="0.1596%" height="15" fill="rgb(229,203,36)" fg:x="53" fg:w="2"/><text x="4.4798%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 4.39%)</title><rect x="0.0798%" y="597" width="4.3895%" height="15" fill="rgb(234,180,9)" fg:x="1" fg:w="55"/><text x="0.3298%" y="607.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryStorage&gt; (1 samples, 0.08%)</title><rect x="4.3895%" y="581" width="0.0798%" height="15" fill="rgb(228,98,45)" fg:x="55" fg:w="1"/><text x="4.6395%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.3895%" y="565" width="0.0798%" height="15" fill="rgb(240,24,36)" fg:x="55" fg:w="1"/><text x="4.6395%" y="575.50"></text></g><g><title>&lt;kernel::session::SetSession&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="4.5491%" y="533" width="0.0798%" height="15" fill="rgb(227,154,19)" fg:x="57" fg:w="1"/><text x="4.7991%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.8683%" y="501" width="0.0798%" height="15" fill="rgb(231,2,48)" fg:x="61" fg:w="1"/><text x="5.1183%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="4.9481%" y="501" width="0.1596%" height="15" fill="rgb(219,216,0)" fg:x="62" fg:w="2"/><text x="5.1981%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="4.9481%" y="485" width="0.1596%" height="15" fill="rgb(251,88,0)" fg:x="62" fg:w="2"/><text x="5.1981%" y="495.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="4.9481%" y="469" width="0.1596%" height="15" fill="rgb(242,45,45)" fg:x="62" fg:w="2"/><text x="5.1981%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="4.9481%" y="453" width="0.1596%" height="15" fill="rgb(218,149,45)" fg:x="62" fg:w="2"/><text x="5.1981%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="4.9481%" y="437" width="0.1596%" height="15" fill="rgb(247,194,10)" fg:x="62" fg:w="2"/><text x="5.1981%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="4.9481%" y="421" width="0.1596%" height="15" fill="rgb(234,33,37)" fg:x="62" fg:w="2"/><text x="5.1981%" y="431.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="4.9481%" y="405" width="0.1596%" height="15" fill="rgb(218,61,13)" fg:x="62" fg:w="2"/><text x="5.1981%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="4.9481%" y="389" width="0.1596%" height="15" fill="rgb(210,80,52)" fg:x="62" fg:w="2"/><text x="5.1981%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="4.9481%" y="373" width="0.1596%" height="15" fill="rgb(218,203,27)" fg:x="62" fg:w="2"/><text x="5.1981%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="4.9481%" y="357" width="0.1596%" height="15" fill="rgb(209,126,33)" fg:x="62" fg:w="2"/><text x="5.1981%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="4.9481%" y="341" width="0.1596%" height="15" fill="rgb(234,173,41)" fg:x="62" fg:w="2"/><text x="5.1981%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="4.9481%" y="325" width="0.1596%" height="15" fill="rgb(228,166,9)" fg:x="62" fg:w="2"/><text x="5.1981%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="4.9481%" y="309" width="0.1596%" height="15" fill="rgb(208,124,43)" fg:x="62" fg:w="2"/><text x="5.1981%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="4.9481%" y="293" width="0.1596%" height="15" fill="rgb(212,154,38)" fg:x="62" fg:w="2"/><text x="5.1981%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="4.9481%" y="277" width="0.1596%" height="15" fill="rgb(246,179,35)" fg:x="62" fg:w="2"/><text x="5.1981%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="4.9481%" y="261" width="0.1596%" height="15" fill="rgb(251,3,50)" fg:x="62" fg:w="2"/><text x="5.1981%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="4.9481%" y="245" width="0.1596%" height="15" fill="rgb(219,96,8)" fg:x="62" fg:w="2"/><text x="5.1981%" y="255.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="4.9481%" y="229" width="0.1596%" height="15" fill="rgb(251,216,33)" fg:x="62" fg:w="2"/><text x="5.1981%" y="239.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="4.9481%" y="213" width="0.1596%" height="15" fill="rgb(243,145,29)" fg:x="62" fg:w="2"/><text x="5.1981%" y="223.50"></text></g><g><title>anyhow::error::&lt;impl anyhow::Error&gt;::construct (1 samples, 0.08%)</title><rect x="5.1077%" y="501" width="0.0798%" height="15" fill="rgb(210,75,20)" fg:x="64" fg:w="1"/><text x="5.3577%" y="511.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="5.1875%" y="453" width="0.0798%" height="15" fill="rgb(235,56,8)" fg:x="65" fg:w="1"/><text x="5.4375%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="5.2674%" y="453" width="0.1596%" height="15" fill="rgb(226,175,49)" fg:x="66" fg:w="2"/><text x="5.5174%" y="463.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (15 samples, 1.20%)</title><rect x="4.7885%" y="517" width="1.1971%" height="15" fill="rgb(242,204,23)" fg:x="60" fg:w="15"/><text x="5.0385%" y="527.50"></text></g><g><title>std::sys::unix::fs::stat (10 samples, 0.80%)</title><rect x="5.1875%" y="501" width="0.7981%" height="15" fill="rgb(225,104,24)" fg:x="65" fg:w="10"/><text x="5.4375%" y="511.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (10 samples, 0.80%)</title><rect x="5.1875%" y="485" width="0.7981%" height="15" fill="rgb(253,34,1)" fg:x="65" fg:w="10"/><text x="5.4375%" y="495.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (10 samples, 0.80%)</title><rect x="5.1875%" y="469" width="0.7981%" height="15" fill="rgb(233,199,23)" fg:x="65" fg:w="10"/><text x="5.4375%" y="479.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (7 samples, 0.56%)</title><rect x="5.4270%" y="453" width="0.5587%" height="15" fill="rgb(247,7,51)" fg:x="68" fg:w="7"/><text x="5.6770%" y="463.50"></text></g><g><title>std::sys::unix::fs::try_statx (7 samples, 0.56%)</title><rect x="5.4270%" y="437" width="0.5587%" height="15" fill="rgb(214,146,12)" fg:x="68" fg:w="7"/><text x="5.6770%" y="447.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (7 samples, 0.56%)</title><rect x="5.4270%" y="421" width="0.5587%" height="15" fill="rgb(234,181,43)" fg:x="68" fg:w="7"/><text x="5.6770%" y="431.50"></text></g><g><title>statx (7 samples, 0.56%)</title><rect x="5.4270%" y="405" width="0.5587%" height="15" fill="rgb(239,148,6)" fg:x="68" fg:w="7"/><text x="5.6770%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="6.4645%" y="373" width="0.1596%" height="15" fill="rgb(206,151,17)" fg:x="81" fg:w="2"/><text x="6.7145%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="6.4645%" y="357" width="0.1596%" height="15" fill="rgb(213,215,10)" fg:x="81" fg:w="2"/><text x="6.7145%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="6.4645%" y="341" width="0.1596%" height="15" fill="rgb(215,220,44)" fg:x="81" fg:w="2"/><text x="6.7145%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="6.4645%" y="325" width="0.1596%" height="15" fill="rgb(245,205,37)" fg:x="81" fg:w="2"/><text x="6.7145%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="6.4645%" y="309" width="0.1596%" height="15" fill="rgb(245,130,43)" fg:x="81" fg:w="2"/><text x="6.7145%" y="319.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="6.4645%" y="293" width="0.1596%" height="15" fill="rgb(231,227,38)" fg:x="81" fg:w="2"/><text x="6.7145%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.5443%" y="277" width="0.0798%" height="15" fill="rgb(233,185,4)" fg:x="82" fg:w="1"/><text x="6.7943%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="6.3049%" y="453" width="0.3990%" height="15" fill="rgb(224,154,43)" fg:x="79" fg:w="5"/><text x="6.5549%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="6.4645%" y="437" width="0.2394%" height="15" fill="rgb(235,156,15)" fg:x="81" fg:w="3"/><text x="6.7145%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="6.4645%" y="421" width="0.2394%" height="15" fill="rgb(211,55,43)" fg:x="81" fg:w="3"/><text x="6.7145%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="6.4645%" y="405" width="0.2394%" height="15" fill="rgb(247,149,40)" fg:x="81" fg:w="3"/><text x="6.7145%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="6.4645%" y="389" width="0.2394%" height="15" fill="rgb(232,171,16)" fg:x="81" fg:w="3"/><text x="6.7145%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="6.6241%" y="373" width="0.0798%" height="15" fill="rgb(215,117,49)" fg:x="83" fg:w="1"/><text x="6.8741%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="6.6241%" y="357" width="0.0798%" height="15" fill="rgb(246,194,11)" fg:x="83" fg:w="1"/><text x="6.8741%" y="367.50"></text></g><g><title>plugins_rune::runner::SharedRunners::initialize (11 samples, 0.88%)</title><rect x="5.9856%" y="501" width="0.8779%" height="15" fill="rgb(242,101,44)" fg:x="75" fg:w="11"/><text x="6.2356%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.88%)</title><rect x="5.9856%" y="485" width="0.8779%" height="15" fill="rgb(226,174,6)" fg:x="75" fg:w="11"/><text x="6.2356%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.88%)</title><rect x="5.9856%" y="469" width="0.8779%" height="15" fill="rgb(213,150,20)" fg:x="75" fg:w="11"/><text x="6.2356%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="6.7039%" y="453" width="0.1596%" height="15" fill="rgb(222,124,42)" fg:x="84" fg:w="2"/><text x="6.9539%" y="463.50"></text></g><g><title>glob::is_dir (9 samples, 0.72%)</title><rect x="7.0231%" y="453" width="0.7183%" height="15" fill="rgb(250,19,47)" fg:x="88" fg:w="9"/><text x="7.2731%" y="463.50"></text></g><g><title>std::sys::unix::fs::stat (9 samples, 0.72%)</title><rect x="7.0231%" y="437" width="0.7183%" height="15" fill="rgb(241,217,19)" fg:x="88" fg:w="9"/><text x="7.2731%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (9 samples, 0.72%)</title><rect x="7.0231%" y="421" width="0.7183%" height="15" fill="rgb(207,210,34)" fg:x="88" fg:w="9"/><text x="7.2731%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (9 samples, 0.72%)</title><rect x="7.0231%" y="405" width="0.7183%" height="15" fill="rgb(244,45,4)" fg:x="88" fg:w="9"/><text x="7.2731%" y="415.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (9 samples, 0.72%)</title><rect x="7.0231%" y="389" width="0.7183%" height="15" fill="rgb(252,134,50)" fg:x="88" fg:w="9"/><text x="7.2731%" y="399.50"></text></g><g><title>std::sys::unix::fs::try_statx (8 samples, 0.64%)</title><rect x="7.1030%" y="373" width="0.6385%" height="15" fill="rgb(238,74,2)" fg:x="89" fg:w="8"/><text x="7.3530%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (8 samples, 0.64%)</title><rect x="7.1030%" y="357" width="0.6385%" height="15" fill="rgb(226,58,46)" fg:x="89" fg:w="8"/><text x="7.3530%" y="367.50"></text></g><g><title>statx (8 samples, 0.64%)</title><rect x="7.1030%" y="341" width="0.6385%" height="15" fill="rgb(232,83,35)" fg:x="89" fg:w="8"/><text x="7.3530%" y="351.50"></text></g><g><title>std::path::Path::components (1 samples, 0.08%)</title><rect x="7.7414%" y="453" width="0.0798%" height="15" fill="rgb(212,148,47)" fg:x="97" fg:w="1"/><text x="7.9914%" y="463.50"></text></g><g><title>&lt;glob::Paths as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.12%)</title><rect x="6.9433%" y="485" width="1.1173%" height="15" fill="rgb(235,29,1)" fg:x="87" fg:w="14"/><text x="7.1933%" y="495.50"></text></g><g><title>glob::fill_todo (13 samples, 1.04%)</title><rect x="7.0231%" y="469" width="1.0375%" height="15" fill="rgb(247,55,37)" fg:x="88" fg:w="13"/><text x="7.2731%" y="479.50"></text></g><g><title>std::sys::unix::fs::stat (3 samples, 0.24%)</title><rect x="7.8212%" y="453" width="0.2394%" height="15" fill="rgb(222,48,3)" fg:x="98" fg:w="3"/><text x="8.0712%" y="463.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (3 samples, 0.24%)</title><rect x="7.8212%" y="437" width="0.2394%" height="15" fill="rgb(234,21,33)" fg:x="98" fg:w="3"/><text x="8.0712%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (3 samples, 0.24%)</title><rect x="7.8212%" y="421" width="0.2394%" height="15" fill="rgb(247,178,53)" fg:x="98" fg:w="3"/><text x="8.0712%" y="431.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (3 samples, 0.24%)</title><rect x="7.8212%" y="405" width="0.2394%" height="15" fill="rgb(225,75,7)" fg:x="98" fg:w="3"/><text x="8.0712%" y="415.50"></text></g><g><title>std::sys::unix::fs::try_statx (3 samples, 0.24%)</title><rect x="7.8212%" y="389" width="0.2394%" height="15" fill="rgb(219,199,7)" fg:x="98" fg:w="3"/><text x="8.0712%" y="399.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (3 samples, 0.24%)</title><rect x="7.8212%" y="373" width="0.2394%" height="15" fill="rgb(209,93,42)" fg:x="98" fg:w="3"/><text x="8.0712%" y="383.50"></text></g><g><title>statx (3 samples, 0.24%)</title><rect x="7.8212%" y="357" width="0.2394%" height="15" fill="rgb(240,175,17)" fg:x="98" fg:w="3"/><text x="8.0712%" y="367.50"></text></g><g><title>&lt;std::path::PathBuf as core::iter::traits::collect::FromIterator&lt;P&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="8.1405%" y="453" width="0.0798%" height="15" fill="rgb(232,106,7)" fg:x="102" fg:w="1"/><text x="8.3905%" y="463.50"></text></g><g><title>glob::Pattern::new (3 samples, 0.24%)</title><rect x="8.2203%" y="453" width="0.2394%" height="15" fill="rgb(242,106,43)" fg:x="103" fg:w="3"/><text x="8.4703%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="8.3799%" y="437" width="0.0798%" height="15" fill="rgb(242,61,37)" fg:x="105" fg:w="1"/><text x="8.6299%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="8.3799%" y="421" width="0.0798%" height="15" fill="rgb(205,72,10)" fg:x="105" fg:w="1"/><text x="8.6299%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.3799%" y="405" width="0.0798%" height="15" fill="rgb(214,184,36)" fg:x="105" fg:w="1"/><text x="8.6299%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="8.3799%" y="389" width="0.0798%" height="15" fill="rgb(206,107,18)" fg:x="105" fg:w="1"/><text x="8.6299%" y="399.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::initialize (32 samples, 2.55%)</title><rect x="5.9856%" y="517" width="2.5539%" height="15" fill="rgb(210,75,5)" fg:x="75" fg:w="32"/><text x="6.2356%" y="527.50">&lt;p..</text></g><g><title>plugins_rune::sources::load_directory_sources (21 samples, 1.68%)</title><rect x="6.8635%" y="501" width="1.6760%" height="15" fill="rgb(205,3,19)" fg:x="86" fg:w="21"/><text x="7.1135%" y="511.50"></text></g><g><title>glob::glob (6 samples, 0.48%)</title><rect x="8.0607%" y="485" width="0.4789%" height="15" fill="rgb(207,181,42)" fg:x="101" fg:w="6"/><text x="8.3107%" y="495.50"></text></g><g><title>glob::glob_with (6 samples, 0.48%)</title><rect x="8.0607%" y="469" width="0.4789%" height="15" fill="rgb(229,179,43)" fg:x="101" fg:w="6"/><text x="8.3107%" y="479.50"></text></g><g><title>std::ffi::os_str::&lt;impl core::convert::TryFrom&lt;&amp;std::ffi::os_str::OsStr&gt; for &amp;str&gt;::try_from (1 samples, 0.08%)</title><rect x="8.4597%" y="453" width="0.0798%" height="15" fill="rgb(246,95,30)" fg:x="106" fg:w="1"/><text x="8.7097%" y="463.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_str (1 samples, 0.08%)</title><rect x="8.4597%" y="437" width="0.0798%" height="15" fill="rgb(234,144,45)" fg:x="106" fg:w="1"/><text x="8.7097%" y="447.50"></text></g><g><title>&lt;plugins_core::building::actions::BidirectionalDigAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="8.7789%" y="453" width="0.0798%" height="15" fill="rgb(250,54,25)" fg:x="110" fg:w="1"/><text x="9.0289%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="8.7789%" y="437" width="0.0798%" height="15" fill="rgb(215,195,40)" fg:x="110" fg:w="1"/><text x="9.0289%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="8.8587%" y="453" width="0.0798%" height="15" fill="rgb(233,188,42)" fg:x="111" fg:w="1"/><text x="9.1087%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.8587%" y="437" width="0.0798%" height="15" fill="rgb(247,227,35)" fg:x="111" fg:w="1"/><text x="9.1087%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (4 samples, 0.32%)</title><rect x="8.9385%" y="453" width="0.3192%" height="15" fill="rgb(249,124,27)" fg:x="112" fg:w="4"/><text x="9.1885%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.24%)</title><rect x="9.0184%" y="437" width="0.2394%" height="15" fill="rgb(219,207,25)" fg:x="113" fg:w="3"/><text x="9.2684%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="9.0184%" y="421" width="0.2394%" height="15" fill="rgb(241,216,47)" fg:x="113" fg:w="3"/><text x="9.2684%" y="431.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="9.0184%" y="405" width="0.2394%" height="15" fill="rgb(233,82,50)" fg:x="113" fg:w="3"/><text x="9.2684%" y="415.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="9.2578%" y="453" width="0.0798%" height="15" fill="rgb(232,63,2)" fg:x="116" fg:w="1"/><text x="9.5078%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.2578%" y="437" width="0.0798%" height="15" fill="rgb(236,184,28)" fg:x="116" fg:w="1"/><text x="9.5078%" y="447.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::schema (9 samples, 0.72%)</title><rect x="8.6991%" y="485" width="0.7183%" height="15" fill="rgb(254,63,27)" fg:x="109" fg:w="9"/><text x="8.9491%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (9 samples, 0.72%)</title><rect x="8.6991%" y="469" width="0.7183%" height="15" fill="rgb(253,106,28)" fg:x="109" fg:w="9"/><text x="8.9491%" y="479.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="9.3376%" y="453" width="0.0798%" height="15" fill="rgb(225,141,39)" fg:x="117" fg:w="1"/><text x="9.5876%" y="463.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="9.4174%" y="453" width="0.0798%" height="15" fill="rgb(222,157,20)" fg:x="118" fg:w="1"/><text x="9.6674%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="9.4174%" y="437" width="0.0798%" height="15" fill="rgb(210,190,9)" fg:x="118" fg:w="1"/><text x="9.6674%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="9.4174%" y="421" width="0.0798%" height="15" fill="rgb(242,167,7)" fg:x="118" fg:w="1"/><text x="9.6674%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.4174%" y="405" width="0.0798%" height="15" fill="rgb(227,82,41)" fg:x="118" fg:w="1"/><text x="9.6674%" y="415.50"></text></g><g><title>&lt;plugins_core::carrying::actions::GiveToAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="9.4972%" y="453" width="0.0798%" height="15" fill="rgb(222,131,13)" fg:x="119" fg:w="1"/><text x="9.7472%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="9.4972%" y="437" width="0.0798%" height="15" fill="rgb(221,98,26)" fg:x="119" fg:w="1"/><text x="9.7472%" y="447.50"></text></g><g><title>&lt;plugins_core::carrying::actions::PutInsideAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="9.5770%" y="453" width="0.0798%" height="15" fill="rgb(251,63,52)" fg:x="120" fg:w="1"/><text x="9.8270%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="9.5770%" y="437" width="0.0798%" height="15" fill="rgb(246,25,43)" fg:x="120" fg:w="1"/><text x="9.8270%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="9.5770%" y="421" width="0.0798%" height="15" fill="rgb(247,167,15)" fg:x="120" fg:w="1"/><text x="9.8270%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.5770%" y="405" width="0.0798%" height="15" fill="rgb(240,104,42)" fg:x="120" fg:w="1"/><text x="9.8270%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.5770%" y="389" width="0.0798%" height="15" fill="rgb(224,54,6)" fg:x="120" fg:w="1"/><text x="9.8270%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="9.6568%" y="453" width="0.0798%" height="15" fill="rgb(244,108,35)" fg:x="121" fg:w="1"/><text x="9.9068%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.6568%" y="437" width="0.0798%" height="15" fill="rgb(216,154,2)" fg:x="121" fg:w="1"/><text x="9.9068%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="9.6568%" y="421" width="0.0798%" height="15" fill="rgb(222,8,47)" fg:x="121" fg:w="1"/><text x="9.9068%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.7366%" y="437" width="0.0798%" height="15" fill="rgb(252,93,1)" fg:x="122" fg:w="1"/><text x="9.9866%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.16%)</title><rect x="9.7366%" y="453" width="0.1596%" height="15" fill="rgb(223,226,51)" fg:x="122" fg:w="2"/><text x="9.9866%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="9.8164%" y="437" width="0.0798%" height="15" fill="rgb(206,147,9)" fg:x="123" fg:w="1"/><text x="10.0664%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.8164%" y="421" width="0.0798%" height="15" fill="rgb(248,180,41)" fg:x="123" fg:w="1"/><text x="10.0664%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.8164%" y="405" width="0.0798%" height="15" fill="rgb(209,47,50)" fg:x="123" fg:w="1"/><text x="10.0664%" y="415.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="9.8962%" y="453" width="0.0798%" height="15" fill="rgb(243,65,31)" fg:x="124" fg:w="1"/><text x="10.1462%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.8962%" y="437" width="0.0798%" height="15" fill="rgb(228,128,1)" fg:x="124" fg:w="1"/><text x="10.1462%" y="447.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::schema (8 samples, 0.64%)</title><rect x="9.4174%" y="485" width="0.6385%" height="15" fill="rgb(231,192,16)" fg:x="118" fg:w="8"/><text x="9.6674%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (8 samples, 0.64%)</title><rect x="9.4174%" y="469" width="0.6385%" height="15" fill="rgb(224,26,40)" fg:x="118" fg:w="8"/><text x="9.6674%" y="479.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="9.9761%" y="453" width="0.0798%" height="15" fill="rgb(214,192,17)" fg:x="125" fg:w="1"/><text x="10.2261%" y="463.50"></text></g><g><title>&lt;plugins_core::chat::actions::SpeakAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="10.0559%" y="469" width="0.0798%" height="15" fill="rgb(225,147,18)" fg:x="126" fg:w="1"/><text x="10.3059%" y="479.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="10.0559%" y="453" width="0.0798%" height="15" fill="rgb(205,35,11)" fg:x="126" fg:w="1"/><text x="10.3059%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.0559%" y="437" width="0.0798%" height="15" fill="rgb(242,40,42)" fg:x="126" fg:w="1"/><text x="10.3059%" y="447.50"></text></g><g><title>&lt;plugins_core::chat::ChatPlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="10.0559%" y="485" width="0.1596%" height="15" fill="rgb(250,170,13)" fg:x="126" fg:w="2"/><text x="10.3059%" y="495.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="10.1357%" y="469" width="0.0798%" height="15" fill="rgb(240,161,28)" fg:x="127" fg:w="1"/><text x="10.3857%" y="479.50"></text></g><g><title>&lt;plugins_core::emote::EmotePlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="10.2155%" y="485" width="0.1596%" height="15" fill="rgb(245,179,12)" fg:x="128" fg:w="2"/><text x="10.4655%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="10.2953%" y="469" width="0.0798%" height="15" fill="rgb(250,92,32)" fg:x="129" fg:w="1"/><text x="10.5453%" y="479.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="10.2953%" y="453" width="0.0798%" height="15" fill="rgb(233,10,40)" fg:x="129" fg:w="1"/><text x="10.5453%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="10.2953%" y="437" width="0.0798%" height="15" fill="rgb(217,98,1)" fg:x="129" fg:w="1"/><text x="10.5453%" y="447.50"></text></g><g><title>&lt;plugins_core::fashion::actions::RemoveAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="10.3751%" y="453" width="0.0798%" height="15" fill="rgb(238,202,7)" fg:x="130" fg:w="1"/><text x="10.6251%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="10.3751%" y="437" width="0.0798%" height="15" fill="rgb(222,91,3)" fg:x="130" fg:w="1"/><text x="10.6251%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.3751%" y="421" width="0.0798%" height="15" fill="rgb(211,170,49)" fg:x="130" fg:w="1"/><text x="10.6251%" y="431.50"></text></g><g><title>&lt;plugins_core::fashion::FashionPlugin as kernel::plugins::Plugin&gt;::schema (3 samples, 0.24%)</title><rect x="10.3751%" y="485" width="0.2394%" height="15" fill="rgb(253,139,18)" fg:x="130" fg:w="3"/><text x="10.6251%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (3 samples, 0.24%)</title><rect x="10.3751%" y="469" width="0.2394%" height="15" fill="rgb(222,4,43)" fg:x="130" fg:w="3"/><text x="10.6251%" y="479.50"></text></g><g><title>replies::identifier_to_key (2 samples, 0.16%)</title><rect x="10.4549%" y="453" width="0.1596%" height="15" fill="rgb(207,205,12)" fg:x="131" fg:w="2"/><text x="10.7049%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="10.4549%" y="437" width="0.1596%" height="15" fill="rgb(216,159,46)" fg:x="131" fg:w="2"/><text x="10.7049%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="10.4549%" y="421" width="0.1596%" height="15" fill="rgb(236,115,1)" fg:x="131" fg:w="2"/><text x="10.7049%" y="431.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="10.4549%" y="405" width="0.1596%" height="15" fill="rgb(251,35,33)" fg:x="131" fg:w="2"/><text x="10.7049%" y="415.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::Plugin&gt;::schema (4 samples, 0.32%)</title><rect x="10.6145%" y="485" width="0.3192%" height="15" fill="rgb(248,62,51)" fg:x="133" fg:w="4"/><text x="10.8645%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (4 samples, 0.32%)</title><rect x="10.6145%" y="469" width="0.3192%" height="15" fill="rgb(254,180,19)" fg:x="133" fg:w="4"/><text x="10.8645%" y="479.50"></text></g><g><title>replies::identifier_to_key (4 samples, 0.32%)</title><rect x="10.6145%" y="453" width="0.3192%" height="15" fill="rgb(217,100,32)" fg:x="133" fg:w="4"/><text x="10.8645%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="10.6145%" y="437" width="0.3192%" height="15" fill="rgb(224,71,22)" fg:x="133" fg:w="4"/><text x="10.8645%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="10.6145%" y="421" width="0.3192%" height="15" fill="rgb(251,185,33)" fg:x="133" fg:w="4"/><text x="10.8645%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="10.6145%" y="405" width="0.3192%" height="15" fill="rgb(209,75,48)" fg:x="133" fg:w="4"/><text x="10.8645%" y="415.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="10.6943%" y="389" width="0.2394%" height="15" fill="rgb(253,190,16)" fg:x="134" fg:w="3"/><text x="10.9443%" y="399.50"></text></g><g><title>&lt;plugins_core::moving::actions::AddRouteAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="10.9338%" y="453" width="0.0798%" height="15" fill="rgb(226,140,1)" fg:x="137" fg:w="1"/><text x="11.1838%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="10.9338%" y="437" width="0.0798%" height="15" fill="rgb(206,75,30)" fg:x="137" fg:w="1"/><text x="11.1838%" y="447.50"></text></g><g><title>&lt;plugins_core::moving::actions::DeactivateRouteAction as kernel::plugins::HasActionSchema&gt;::action_schema (2 samples, 0.16%)</title><rect x="11.0136%" y="453" width="0.1596%" height="15" fill="rgb(231,208,37)" fg:x="138" fg:w="2"/><text x="11.2636%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.16%)</title><rect x="11.0136%" y="437" width="0.1596%" height="15" fill="rgb(238,136,40)" fg:x="138" fg:w="2"/><text x="11.2636%" y="447.50"></text></g><g><title>&lt;plugins_core::moving::actions::RemoveRouteAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="11.1732%" y="453" width="0.0798%" height="15" fill="rgb(247,137,17)" fg:x="140" fg:w="1"/><text x="11.4232%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="11.1732%" y="437" width="0.0798%" height="15" fill="rgb(240,60,40)" fg:x="140" fg:w="1"/><text x="11.4232%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.1732%" y="421" width="0.0798%" height="15" fill="rgb(236,68,50)" fg:x="140" fg:w="1"/><text x="11.4232%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="11.2530%" y="453" width="0.0798%" height="15" fill="rgb(230,42,12)" fg:x="141" fg:w="1"/><text x="11.5030%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="11.2530%" y="437" width="0.0798%" height="15" fill="rgb(219,16,16)" fg:x="141" fg:w="1"/><text x="11.5030%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="11.2530%" y="421" width="0.0798%" height="15" fill="rgb(220,38,35)" fg:x="141" fg:w="1"/><text x="11.5030%" y="431.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="11.3328%" y="453" width="0.0798%" height="15" fill="rgb(228,33,1)" fg:x="142" fg:w="1"/><text x="11.5828%" y="463.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Plugin&gt;::schema (8 samples, 0.64%)</title><rect x="10.9338%" y="485" width="0.6385%" height="15" fill="rgb(241,46,31)" fg:x="137" fg:w="8"/><text x="11.1838%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (8 samples, 0.64%)</title><rect x="10.9338%" y="469" width="0.6385%" height="15" fill="rgb(232,58,20)" fg:x="137" fg:w="8"/><text x="11.1838%" y="479.50"></text></g><g><title>replies::identifier_to_key (2 samples, 0.16%)</title><rect x="11.4126%" y="453" width="0.1596%" height="15" fill="rgb(206,228,53)" fg:x="143" fg:w="2"/><text x="11.6626%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="11.4924%" y="437" width="0.0798%" height="15" fill="rgb(206,88,33)" fg:x="144" fg:w="1"/><text x="11.7424%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="11.4924%" y="421" width="0.0798%" height="15" fill="rgb(238,69,7)" fg:x="144" fg:w="1"/><text x="11.7424%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="11.4924%" y="405" width="0.0798%" height="15" fill="rgb(250,21,46)" fg:x="144" fg:w="1"/><text x="11.7424%" y="415.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="11.5722%" y="485" width="0.0798%" height="15" fill="rgb(215,212,21)" fg:x="145" fg:w="1"/><text x="11.8222%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (40 samples, 3.19%)</title><rect x="8.5395%" y="517" width="3.1923%" height="15" fill="rgb(211,35,12)" fg:x="107" fg:w="40"/><text x="8.7895%" y="527.50">&lt;st..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (40 samples, 3.19%)</title><rect x="8.5395%" y="501" width="3.1923%" height="15" fill="rgb(231,184,16)" fg:x="107" fg:w="40"/><text x="8.7895%" y="511.50">&lt;co..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.6520%" y="485" width="0.0798%" height="15" fill="rgb(242,140,15)" fg:x="146" fg:w="1"/><text x="11.9020%" y="495.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.08%)</title><rect x="11.7318%" y="517" width="0.0798%" height="15" fill="rgb(220,37,14)" fg:x="147" fg:w="1"/><text x="11.9818%" y="527.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.08%)</title><rect x="11.7318%" y="501" width="0.0798%" height="15" fill="rgb(223,146,22)" fg:x="147" fg:w="1"/><text x="11.9818%" y="511.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.08%)</title><rect x="11.7318%" y="485" width="0.0798%" height="15" fill="rgb(216,132,15)" fg:x="147" fg:w="1"/><text x="11.9818%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.08%)</title><rect x="11.7318%" y="469" width="0.0798%" height="15" fill="rgb(248,83,5)" fg:x="147" fg:w="1"/><text x="11.9818%" y="479.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.08%)</title><rect x="11.7318%" y="453" width="0.0798%" height="15" fill="rgb(231,206,48)" fg:x="147" fg:w="1"/><text x="11.9818%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (1 samples, 0.08%)</title><rect x="11.7318%" y="437" width="0.0798%" height="15" fill="rgb(253,185,37)" fg:x="147" fg:w="1"/><text x="11.9818%" y="447.50"></text></g><g><title>core::cmp::PartialOrd::ge (1 samples, 0.08%)</title><rect x="11.7318%" y="421" width="0.0798%" height="15" fill="rgb(208,21,44)" fg:x="147" fg:w="1"/><text x="11.9818%" y="431.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (93 samples, 7.42%)</title><rect x="4.6289%" y="533" width="7.4222%" height="15" fill="rgb(236,125,4)" fg:x="58" fg:w="93"/><text x="4.8789%" y="543.50">kernel::pl..</text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::plugins::Schema)&gt; (3 samples, 0.24%)</title><rect x="11.8117%" y="517" width="0.2394%" height="15" fill="rgb(226,134,25)" fg:x="148" fg:w="3"/><text x="12.0617%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (1 samples, 0.08%)</title><rect x="11.9713%" y="501" width="0.0798%" height="15" fill="rgb(250,201,12)" fg:x="150" fg:w="1"/><text x="12.2213%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="12.0511%" y="501" width="0.0798%" height="15" fill="rgb(225,92,18)" fg:x="151" fg:w="1"/><text x="12.3011%" y="511.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::sources (1 samples, 0.08%)</title><rect x="12.1309%" y="501" width="0.0798%" height="15" fill="rgb(227,35,22)" fg:x="152" fg:w="1"/><text x="12.3809%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.2107%" y="501" width="0.0798%" height="15" fill="rgb(214,180,52)" fg:x="153" fg:w="1"/><text x="12.4607%" y="511.50"></text></g><g><title>engine::session::Session::initialize (100 samples, 7.98%)</title><rect x="4.4693%" y="549" width="7.9808%" height="15" fill="rgb(233,55,38)" fg:x="56" fg:w="100"/><text x="4.7193%" y="559.50">engine::ses..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (5 samples, 0.40%)</title><rect x="12.0511%" y="533" width="0.3990%" height="15" fill="rgb(249,171,43)" fg:x="151" fg:w="5"/><text x="12.3011%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="12.0511%" y="517" width="0.3990%" height="15" fill="rgb(239,87,2)" fg:x="151" fg:w="5"/><text x="12.3011%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="12.2905%" y="501" width="0.1596%" height="15" fill="rgb(248,141,5)" fg:x="154" fg:w="2"/><text x="12.5405%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="12.2905%" y="485" width="0.1596%" height="15" fill="rgb(238,33,42)" fg:x="154" fg:w="2"/><text x="12.5405%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="12.3703%" y="469" width="0.0798%" height="15" fill="rgb(231,57,19)" fg:x="155" fg:w="1"/><text x="12.6203%" y="479.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (104 samples, 8.30%)</title><rect x="4.4693%" y="597" width="8.3001%" height="15" fill="rgb(214,78,53)" fg:x="56" fg:w="104"/><text x="4.7193%" y="607.50">&lt;engine::dom..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (104 samples, 8.30%)</title><rect x="4.4693%" y="581" width="8.3001%" height="15" fill="rgb(206,132,29)" fg:x="56" fg:w="104"/><text x="4.7193%" y="591.50">engine::doma..</text></g><g><title>engine::session::Session::new (104 samples, 8.30%)</title><rect x="4.4693%" y="565" width="8.3001%" height="15" fill="rgb(248,174,31)" fg:x="56" fg:w="104"/><text x="4.7193%" y="575.50">engine::sess..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (4 samples, 0.32%)</title><rect x="12.4501%" y="549" width="0.3192%" height="15" fill="rgb(221,87,13)" fg:x="156" fg:w="4"/><text x="12.7001%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="12.4501%" y="533" width="0.3192%" height="15" fill="rgb(223,197,17)" fg:x="156" fg:w="4"/><text x="12.7001%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="12.6895%" y="517" width="0.0798%" height="15" fill="rgb(220,144,50)" fg:x="159" fg:w="1"/><text x="12.9395%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="12.6895%" y="501" width="0.0798%" height="15" fill="rgb(244,201,11)" fg:x="159" fg:w="1"/><text x="12.9395%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="12.6895%" y="485" width="0.0798%" height="15" fill="rgb(249,81,34)" fg:x="159" fg:w="1"/><text x="12.9395%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="12.8492%" y="581" width="0.1596%" height="15" fill="rgb(205,161,12)" fg:x="161" fg:w="2"/><text x="13.0992%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="12.9290%" y="565" width="0.0798%" height="15" fill="rgb(252,139,50)" fg:x="162" fg:w="1"/><text x="13.1790%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.9290%" y="549" width="0.0798%" height="15" fill="rgb(205,169,14)" fg:x="162" fg:w="1"/><text x="13.1790%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.9290%" y="533" width="0.0798%" height="15" fill="rgb(248,198,33)" fg:x="162" fg:w="1"/><text x="13.1790%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.9290%" y="517" width="0.0798%" height="15" fill="rgb(236,23,21)" fg:x="162" fg:w="1"/><text x="13.1790%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (2 samples, 0.16%)</title><rect x="13.0088%" y="581" width="0.1596%" height="15" fill="rgb(231,13,38)" fg:x="163" fg:w="2"/><text x="13.2588%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="13.0088%" y="565" width="0.1596%" height="15" fill="rgb(239,139,21)" fg:x="163" fg:w="2"/><text x="13.2588%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::begin (1 samples, 0.08%)</title><rect x="13.1684%" y="565" width="0.0798%" height="15" fill="rgb(222,164,45)" fg:x="165" fg:w="1"/><text x="13.4184%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="13.2482%" y="565" width="0.0798%" height="15" fill="rgb(230,52,27)" fg:x="166" fg:w="1"/><text x="13.4982%" y="575.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="13.2482%" y="549" width="0.0798%" height="15" fill="rgb(227,143,42)" fg:x="166" fg:w="1"/><text x="13.4982%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="13.3280%" y="533" width="0.2394%" height="15" fill="rgb(249,127,1)" fg:x="167" fg:w="3"/><text x="13.5780%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="13.3280%" y="517" width="0.2394%" height="15" fill="rgb(243,107,26)" fg:x="167" fg:w="3"/><text x="13.5780%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (3 samples, 0.24%)</title><rect x="13.3280%" y="501" width="0.2394%" height="15" fill="rgb(225,7,45)" fg:x="167" fg:w="3"/><text x="13.5780%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.4876%" y="485" width="0.0798%" height="15" fill="rgb(241,88,38)" fg:x="169" fg:w="1"/><text x="13.7376%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.4876%" y="469" width="0.0798%" height="15" fill="rgb(226,121,9)" fg:x="169" fg:w="1"/><text x="13.7376%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.4876%" y="453" width="0.0798%" height="15" fill="rgb(253,60,29)" fg:x="169" fg:w="1"/><text x="13.7376%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.4876%" y="437" width="0.0798%" height="15" fill="rgb(244,181,39)" fg:x="169" fg:w="1"/><text x="13.7376%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.4876%" y="421" width="0.0798%" height="15" fill="rgb(252,203,31)" fg:x="169" fg:w="1"/><text x="13.7376%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="13.4876%" y="405" width="0.0798%" height="15" fill="rgb(224,120,8)" fg:x="169" fg:w="1"/><text x="13.7376%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="13.4876%" y="389" width="0.0798%" height="15" fill="rgb(205,171,54)" fg:x="169" fg:w="1"/><text x="13.7376%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.5674%" y="501" width="0.0798%" height="15" fill="rgb(235,89,11)" fg:x="170" fg:w="1"/><text x="13.8174%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.5674%" y="485" width="0.0798%" height="15" fill="rgb(212,180,28)" fg:x="170" fg:w="1"/><text x="13.8174%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="13.5674%" y="469" width="0.0798%" height="15" fill="rgb(247,84,49)" fg:x="170" fg:w="1"/><text x="13.8174%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="13.8867%" y="437" width="0.1596%" height="15" fill="rgb(236,187,52)" fg:x="174" fg:w="2"/><text x="14.1367%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.9665%" y="421" width="0.0798%" height="15" fill="rgb(227,24,15)" fg:x="175" fg:w="1"/><text x="14.2165%" y="431.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="14.0463%" y="437" width="0.2394%" height="15" fill="rgb(227,211,13)" fg:x="176" fg:w="3"/><text x="14.2963%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.2857%" y="437" width="0.0798%" height="15" fill="rgb(245,52,14)" fg:x="179" fg:w="1"/><text x="14.5357%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="14.3655%" y="405" width="0.0798%" height="15" fill="rgb(225,185,13)" fg:x="180" fg:w="1"/><text x="14.6155%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="14.3655%" y="389" width="0.0798%" height="15" fill="rgb(217,160,29)" fg:x="180" fg:w="1"/><text x="14.6155%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.3655%" y="373" width="0.0798%" height="15" fill="rgb(216,115,53)" fg:x="180" fg:w="1"/><text x="14.6155%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="13.8069%" y="453" width="0.7183%" height="15" fill="rgb(236,99,5)" fg:x="173" fg:w="9"/><text x="14.0569%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="14.3655%" y="437" width="0.1596%" height="15" fill="rgb(222,60,38)" fg:x="180" fg:w="2"/><text x="14.6155%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="14.3655%" y="421" width="0.1596%" height="15" fill="rgb(212,82,22)" fg:x="180" fg:w="2"/><text x="14.6155%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.4453%" y="405" width="0.0798%" height="15" fill="rgb(214,48,28)" fg:x="181" fg:w="1"/><text x="14.6953%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.80%)</title><rect x="13.8069%" y="469" width="0.7981%" height="15" fill="rgb(245,196,50)" fg:x="173" fg:w="10"/><text x="14.0569%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.5251%" y="453" width="0.0798%" height="15" fill="rgb(225,159,46)" fg:x="182" fg:w="1"/><text x="14.7751%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="14.6049%" y="469" width="0.1596%" height="15" fill="rgb(207,195,48)" fg:x="183" fg:w="2"/><text x="14.8549%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.28%)</title><rect x="13.6472%" y="485" width="1.2769%" height="15" fill="rgb(240,73,3)" fg:x="171" fg:w="16"/><text x="13.8972%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="14.7646%" y="469" width="0.1596%" height="15" fill="rgb(245,57,23)" fg:x="185" fg:w="2"/><text x="15.0146%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.8444%" y="453" width="0.0798%" height="15" fill="rgb(240,75,18)" fg:x="186" fg:w="1"/><text x="15.0944%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="14.9242%" y="453" width="0.3192%" height="15" fill="rgb(238,168,12)" fg:x="187" fg:w="4"/><text x="15.1742%" y="463.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="14.9242%" y="437" width="0.3192%" height="15" fill="rgb(226,20,40)" fg:x="187" fg:w="4"/><text x="15.1742%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="15.0040%" y="421" width="0.2394%" height="15" fill="rgb(224,130,35)" fg:x="188" fg:w="3"/><text x="15.2540%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="15.0838%" y="405" width="0.1596%" height="15" fill="rgb(225,63,41)" fg:x="189" fg:w="2"/><text x="15.3338%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="15.0838%" y="389" width="0.1596%" height="15" fill="rgb(219,3,3)" fg:x="189" fg:w="2"/><text x="15.3338%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="15.0838%" y="373" width="0.1596%" height="15" fill="rgb(218,157,4)" fg:x="189" fg:w="2"/><text x="15.3338%" y="383.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="15.0838%" y="357" width="0.1596%" height="15" fill="rgb(232,76,36)" fg:x="189" fg:w="2"/><text x="15.3338%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.56%)</title><rect x="14.9242%" y="469" width="0.5587%" height="15" fill="rgb(247,36,0)" fg:x="187" fg:w="7"/><text x="15.1742%" y="479.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="15.2434%" y="453" width="0.2394%" height="15" fill="rgb(205,2,34)" fg:x="191" fg:w="3"/><text x="15.4934%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="15.3232%" y="437" width="0.1596%" height="15" fill="rgb(239,136,13)" fg:x="192" fg:w="2"/><text x="15.5732%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.4030%" y="421" width="0.0798%" height="15" fill="rgb(253,122,12)" fg:x="193" fg:w="1"/><text x="15.6530%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="15.4828%" y="453" width="0.0798%" height="15" fill="rgb(222,174,7)" fg:x="194" fg:w="1"/><text x="15.7328%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="15.5626%" y="453" width="0.4789%" height="15" fill="rgb(208,191,42)" fg:x="195" fg:w="6"/><text x="15.8126%" y="463.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="15.7223%" y="437" width="0.3192%" height="15" fill="rgb(237,212,15)" fg:x="197" fg:w="4"/><text x="15.9723%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="15.8021%" y="421" width="0.2394%" height="15" fill="rgb(215,65,20)" fg:x="198" fg:w="3"/><text x="16.0521%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="15.8021%" y="405" width="0.2394%" height="15" fill="rgb(232,103,11)" fg:x="198" fg:w="3"/><text x="16.0521%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="15.8819%" y="389" width="0.1596%" height="15" fill="rgb(235,148,18)" fg:x="199" fg:w="2"/><text x="16.1319%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="15.8819%" y="373" width="0.1596%" height="15" fill="rgb(240,173,7)" fg:x="199" fg:w="2"/><text x="16.1319%" y="383.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="15.8819%" y="357" width="0.1596%" height="15" fill="rgb(228,182,25)" fg:x="199" fg:w="2"/><text x="16.1319%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="16.1213%" y="405" width="0.0798%" height="15" fill="rgb(247,3,52)" fg:x="202" fg:w="1"/><text x="16.3713%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.1213%" y="389" width="0.0798%" height="15" fill="rgb(226,155,8)" fg:x="202" fg:w="1"/><text x="16.3713%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="16.2011%" y="405" width="0.0798%" height="15" fill="rgb(243,195,38)" fg:x="203" fg:w="1"/><text x="16.4511%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="16.2011%" y="389" width="0.0798%" height="15" fill="rgb(254,181,33)" fg:x="203" fg:w="1"/><text x="16.4511%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.2011%" y="373" width="0.0798%" height="15" fill="rgb(232,98,23)" fg:x="203" fg:w="1"/><text x="16.4511%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.2011%" y="357" width="0.0798%" height="15" fill="rgb(205,23,10)" fg:x="203" fg:w="1"/><text x="16.4511%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="16.1213%" y="421" width="0.2394%" height="15" fill="rgb(212,124,38)" fg:x="202" fg:w="3"/><text x="16.3713%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.2809%" y="405" width="0.0798%" height="15" fill="rgb(228,207,2)" fg:x="204" fg:w="1"/><text x="16.5309%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="16.1213%" y="437" width="0.3192%" height="15" fill="rgb(215,120,22)" fg:x="202" fg:w="4"/><text x="16.3713%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.3607%" y="421" width="0.0798%" height="15" fill="rgb(251,172,33)" fg:x="205" fg:w="1"/><text x="16.6107%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="16.4405%" y="437" width="0.1596%" height="15" fill="rgb(250,83,2)" fg:x="206" fg:w="2"/><text x="16.6905%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="16.4405%" y="421" width="0.1596%" height="15" fill="rgb(210,132,53)" fg:x="206" fg:w="2"/><text x="16.6905%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.5204%" y="405" width="0.0798%" height="15" fill="rgb(221,208,36)" fg:x="207" fg:w="1"/><text x="16.7704%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.5204%" y="389" width="0.0798%" height="15" fill="rgb(205,192,46)" fg:x="207" fg:w="1"/><text x="16.7704%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="16.7598%" y="421" width="0.1596%" height="15" fill="rgb(223,163,14)" fg:x="210" fg:w="2"/><text x="17.0098%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.8396%" y="405" width="0.0798%" height="15" fill="rgb(218,41,28)" fg:x="211" fg:w="1"/><text x="17.0896%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.8396%" y="389" width="0.0798%" height="15" fill="rgb(235,104,10)" fg:x="211" fg:w="1"/><text x="17.0896%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.8396%" y="373" width="0.0798%" height="15" fill="rgb(246,17,4)" fg:x="211" fg:w="1"/><text x="17.0896%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="16.9992%" y="405" width="0.1596%" height="15" fill="rgb(240,7,16)" fg:x="213" fg:w="2"/><text x="17.2492%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="16.9992%" y="389" width="0.1596%" height="15" fill="rgb(213,160,23)" fg:x="213" fg:w="2"/><text x="17.2492%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="16.9992%" y="373" width="0.1596%" height="15" fill="rgb(251,179,49)" fg:x="213" fg:w="2"/><text x="17.2492%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="16.9992%" y="357" width="0.1596%" height="15" fill="rgb(247,198,10)" fg:x="213" fg:w="2"/><text x="17.2492%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.28%)</title><rect x="16.0415%" y="453" width="1.2769%" height="15" fill="rgb(220,65,29)" fg:x="201" fg:w="16"/><text x="16.2915%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="16.6002%" y="437" width="0.7183%" height="15" fill="rgb(237,171,28)" fg:x="208" fg:w="9"/><text x="16.8502%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="16.9194%" y="421" width="0.3990%" height="15" fill="rgb(228,44,26)" fg:x="212" fg:w="5"/><text x="17.1694%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="17.1588%" y="405" width="0.1596%" height="15" fill="rgb(216,210,27)" fg:x="215" fg:w="2"/><text x="17.4088%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="17.2386%" y="389" width="0.0798%" height="15" fill="rgb(252,10,17)" fg:x="216" fg:w="1"/><text x="17.4886%" y="399.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (32 samples, 2.55%)</title><rect x="14.9242%" y="485" width="2.5539%" height="15" fill="rgb(214,172,30)" fg:x="187" fg:w="32"/><text x="15.1742%" y="495.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (25 samples, 2.00%)</title><rect x="15.4828%" y="469" width="1.9952%" height="15" fill="rgb(253,130,48)" fg:x="194" fg:w="25"/><text x="15.7328%" y="479.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="17.3184%" y="453" width="0.1596%" height="15" fill="rgb(226,99,43)" fg:x="217" fg:w="2"/><text x="17.5684%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="17.3184%" y="437" width="0.1596%" height="15" fill="rgb(239,111,26)" fg:x="217" fg:w="2"/><text x="17.5684%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="17.3982%" y="421" width="0.0798%" height="15" fill="rgb(240,27,53)" fg:x="218" fg:w="1"/><text x="17.6482%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="17.5579%" y="453" width="0.1596%" height="15" fill="rgb(254,163,12)" fg:x="220" fg:w="2"/><text x="17.8079%" y="463.50"></text></g><g><title>&lt;burrow_bon::dotted::DottedPath as core::convert::From&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt;&gt;::from (2 samples, 0.16%)</title><rect x="17.5579%" y="437" width="0.1596%" height="15" fill="rgb(225,51,48)" fg:x="220" fg:w="2"/><text x="17.8079%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="17.6377%" y="421" width="0.0798%" height="15" fill="rgb(205,19,32)" fg:x="221" fg:w="1"/><text x="17.8877%" y="431.50"></text></g><g><title>&lt;burrow_bon::dotted::DottedPaths as core::convert::Into&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt;&gt;::into (1 samples, 0.08%)</title><rect x="17.7175%" y="453" width="0.0798%" height="15" fill="rgb(218,119,26)" fg:x="222" fg:w="1"/><text x="17.9675%" y="463.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="17.7175%" y="437" width="0.0798%" height="15" fill="rgb(231,173,33)" fg:x="222" fg:w="1"/><text x="17.9675%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="17.7175%" y="421" width="0.0798%" height="15" fill="rgb(241,100,29)" fg:x="222" fg:w="1"/><text x="17.9675%" y="431.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (4 samples, 0.32%)</title><rect x="17.5579%" y="469" width="0.3192%" height="15" fill="rgb(250,194,34)" fg:x="220" fg:w="4"/><text x="17.8079%" y="479.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="17.7973%" y="453" width="0.0798%" height="15" fill="rgb(215,23,50)" fg:x="223" fg:w="1"/><text x="18.0473%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="17.7973%" y="437" width="0.0798%" height="15" fill="rgb(206,49,37)" fg:x="223" fg:w="1"/><text x="18.0473%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="17.7973%" y="421" width="0.0798%" height="15" fill="rgb(247,39,21)" fg:x="223" fg:w="1"/><text x="18.0473%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.7973%" y="405" width="0.0798%" height="15" fill="rgb(209,220,15)" fg:x="223" fg:w="1"/><text x="18.0473%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="18.0367%" y="437" width="0.3192%" height="15" fill="rgb(206,41,33)" fg:x="226" fg:w="4"/><text x="18.2867%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="18.2761%" y="421" width="0.0798%" height="15" fill="rgb(221,225,45)" fg:x="229" fg:w="1"/><text x="18.5261%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="18.3559%" y="437" width="0.1596%" height="15" fill="rgb(216,27,18)" fg:x="230" fg:w="2"/><text x="18.6059%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="18.5954%" y="405" width="0.0798%" height="15" fill="rgb(250,193,34)" fg:x="233" fg:w="1"/><text x="18.8454%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.8348%" y="373" width="0.0798%" height="15" fill="rgb(227,215,20)" fg:x="236" fg:w="1"/><text x="19.0848%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="18.7550%" y="389" width="0.2394%" height="15" fill="rgb(242,211,27)" fg:x="235" fg:w="3"/><text x="19.0050%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="18.9146%" y="373" width="0.0798%" height="15" fill="rgb(229,190,30)" fg:x="237" fg:w="1"/><text x="19.1646%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.9944%" y="341" width="0.1596%" height="15" fill="rgb(253,31,29)" fg:x="238" fg:w="2"/><text x="19.2444%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="18.9944%" y="389" width="0.3192%" height="15" fill="rgb(229,177,52)" fg:x="238" fg:w="4"/><text x="19.2444%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="18.9944%" y="373" width="0.3192%" height="15" fill="rgb(226,88,8)" fg:x="238" fg:w="4"/><text x="19.2444%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="18.9944%" y="357" width="0.3192%" height="15" fill="rgb(214,55,27)" fg:x="238" fg:w="4"/><text x="19.2444%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="19.1540%" y="341" width="0.1596%" height="15" fill="rgb(233,202,5)" fg:x="240" fg:w="2"/><text x="19.4040%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="19.2338%" y="325" width="0.0798%" height="15" fill="rgb(251,49,30)" fg:x="241" fg:w="1"/><text x="19.4838%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.2338%" y="309" width="0.0798%" height="15" fill="rgb(235,18,52)" fg:x="241" fg:w="1"/><text x="19.4838%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.2338%" y="293" width="0.0798%" height="15" fill="rgb(250,111,51)" fg:x="241" fg:w="1"/><text x="19.4838%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="19.3935%" y="373" width="0.0798%" height="15" fill="rgb(218,13,25)" fg:x="243" fg:w="1"/><text x="19.6435%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="19.4733%" y="373" width="0.0798%" height="15" fill="rgb(248,96,7)" fg:x="244" fg:w="1"/><text x="19.7233%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.7127%" y="341" width="0.0798%" height="15" fill="rgb(217,31,15)" fg:x="247" fg:w="1"/><text x="19.9627%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="19.6329%" y="357" width="0.2394%" height="15" fill="rgb(228,59,49)" fg:x="246" fg:w="3"/><text x="19.8829%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="19.7925%" y="341" width="0.0798%" height="15" fill="rgb(210,152,38)" fg:x="248" fg:w="1"/><text x="20.0425%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (2 samples, 0.16%)</title><rect x="19.8723%" y="341" width="0.1596%" height="15" fill="rgb(206,71,11)" fg:x="249" fg:w="2"/><text x="20.1223%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="20.0319%" y="341" width="0.1596%" height="15" fill="rgb(244,199,5)" fg:x="251" fg:w="2"/><text x="20.2819%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.1117%" y="325" width="0.0798%" height="15" fill="rgb(253,49,1)" fg:x="252" fg:w="1"/><text x="20.3617%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="19.5531%" y="373" width="0.7183%" height="15" fill="rgb(225,206,40)" fg:x="245" fg:w="9"/><text x="19.8031%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="19.8723%" y="357" width="0.3990%" height="15" fill="rgb(243,116,47)" fg:x="249" fg:w="5"/><text x="20.1223%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.1915%" y="341" width="0.0798%" height="15" fill="rgb(219,225,16)" fg:x="253" fg:w="1"/><text x="20.4415%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (22 samples, 1.76%)</title><rect x="18.5954%" y="421" width="1.7558%" height="15" fill="rgb(233,29,47)" fg:x="233" fg:w="22"/><text x="18.8454%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (21 samples, 1.68%)</title><rect x="18.6752%" y="405" width="1.6760%" height="15" fill="rgb(250,179,18)" fg:x="234" fg:w="21"/><text x="18.9252%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.04%)</title><rect x="19.3136%" y="389" width="1.0375%" height="15" fill="rgb(215,176,6)" fg:x="242" fg:w="13"/><text x="19.5636%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.2713%" y="373" width="0.0798%" height="15" fill="rgb(214,117,39)" fg:x="254" fg:w="1"/><text x="20.5213%" y="383.50"></text></g><g><title>engine::session::Session::flush (91 samples, 7.26%)</title><rect x="13.1684%" y="581" width="7.2626%" height="15" fill="rgb(247,183,36)" fg:x="165" fg:w="91"/><text x="13.4184%" y="591.50">engine::se..</text></g><g><title>engine::session::state::State::close (89 samples, 7.10%)</title><rect x="13.3280%" y="565" width="7.1030%" height="15" fill="rgb(237,200,3)" fg:x="167" fg:w="89"/><text x="13.5780%" y="575.50">engine::se..</text></g><g><title>engine::session::state::State::flush_entities (89 samples, 7.10%)</title><rect x="13.3280%" y="549" width="7.1030%" height="15" fill="rgb(212,220,24)" fg:x="167" fg:w="89"/><text x="13.5780%" y="559.50">engine::se..</text></g><g><title>core::iter::adapters::try_process (86 samples, 6.86%)</title><rect x="13.5674%" y="533" width="6.8635%" height="15" fill="rgb(245,216,20)" fg:x="170" fg:w="86"/><text x="13.8174%" y="543.50">core::ite..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (86 samples, 6.86%)</title><rect x="13.5674%" y="517" width="6.8635%" height="15" fill="rgb(219,124,7)" fg:x="170" fg:w="86"/><text x="13.8174%" y="527.50">&lt;alloc::v..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (85 samples, 6.78%)</title><rect x="13.6472%" y="501" width="6.7837%" height="15" fill="rgb(227,167,8)" fg:x="171" fg:w="85"/><text x="13.8972%" y="511.50">engine::s..</text></g><g><title>kernel::model::any_entity_changes (37 samples, 2.95%)</title><rect x="17.4781%" y="485" width="2.9529%" height="15" fill="rgb(241,37,2)" fg:x="219" fg:w="37"/><text x="17.7281%" y="495.50">ker..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (32 samples, 2.55%)</title><rect x="17.8771%" y="469" width="2.5539%" height="15" fill="rgb(238,134,33)" fg:x="224" fg:w="32"/><text x="18.1271%" y="479.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (32 samples, 2.55%)</title><rect x="17.8771%" y="453" width="2.5539%" height="15" fill="rgb(248,48,27)" fg:x="224" fg:w="32"/><text x="18.1271%" y="463.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (24 samples, 1.92%)</title><rect x="18.5156%" y="437" width="1.9154%" height="15" fill="rgb(212,14,16)" fg:x="232" fg:w="24"/><text x="18.7656%" y="447.50">s..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.3512%" y="421" width="0.0798%" height="15" fill="rgb(217,205,37)" fg:x="255" fg:w="1"/><text x="20.6012%" y="431.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="20.4310%" y="581" width="0.0798%" height="15" fill="rgb(233,185,47)" fg:x="256" fg:w="1"/><text x="20.6810%" y="591.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="20.4310%" y="565" width="0.0798%" height="15" fill="rgb(244,88,8)" fg:x="256" fg:w="1"/><text x="20.6810%" y="575.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="20.4310%" y="549" width="0.0798%" height="15" fill="rgb(213,0,20)" fg:x="256" fg:w="1"/><text x="20.6810%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.4310%" y="533" width="0.0798%" height="15" fill="rgb(238,159,36)" fg:x="256" fg:w="1"/><text x="20.6810%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.4310%" y="517" width="0.0798%" height="15" fill="rgb(253,173,17)" fg:x="256" fg:w="1"/><text x="20.6810%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.5108%" y="533" width="0.0798%" height="15" fill="rgb(221,23,28)" fg:x="257" fg:w="1"/><text x="20.7608%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.5108%" y="517" width="0.0798%" height="15" fill="rgb(218,113,15)" fg:x="257" fg:w="1"/><text x="20.7608%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.5108%" y="501" width="0.0798%" height="15" fill="rgb(233,58,3)" fg:x="257" fg:w="1"/><text x="20.7608%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.5108%" y="485" width="0.0798%" height="15" fill="rgb(250,46,35)" fg:x="257" fg:w="1"/><text x="20.7608%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="20.5108%" y="549" width="0.1596%" height="15" fill="rgb(210,169,11)" fg:x="257" fg:w="2"/><text x="20.7608%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.5906%" y="533" width="0.0798%" height="15" fill="rgb(246,88,19)" fg:x="258" fg:w="1"/><text x="20.8406%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.5906%" y="517" width="0.0798%" height="15" fill="rgb(206,81,49)" fg:x="258" fg:w="1"/><text x="20.8406%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="20.5906%" y="501" width="0.0798%" height="15" fill="rgb(232,144,18)" fg:x="258" fg:w="1"/><text x="20.8406%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.5906%" y="485" width="0.0798%" height="15" fill="rgb(235,2,27)" fg:x="258" fg:w="1"/><text x="20.8406%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.5906%" y="469" width="0.0798%" height="15" fill="rgb(239,157,39)" fg:x="258" fg:w="1"/><text x="20.8406%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.5906%" y="453" width="0.0798%" height="15" fill="rgb(220,11,17)" fg:x="258" fg:w="1"/><text x="20.8406%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.5906%" y="437" width="0.0798%" height="15" fill="rgb(243,94,50)" fg:x="258" fg:w="1"/><text x="20.8406%" y="447.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="20.5108%" y="565" width="0.2394%" height="15" fill="rgb(218,22,0)" fg:x="257" fg:w="3"/><text x="20.7608%" y="575.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="20.6704%" y="549" width="0.0798%" height="15" fill="rgb(249,70,21)" fg:x="259" fg:w="1"/><text x="20.9204%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.6704%" y="533" width="0.0798%" height="15" fill="rgb(245,111,46)" fg:x="259" fg:w="1"/><text x="20.9204%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.7502%" y="549" width="0.0798%" height="15" fill="rgb(244,183,12)" fg:x="260" fg:w="1"/><text x="21.0002%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.7502%" y="533" width="0.0798%" height="15" fill="rgb(207,117,0)" fg:x="260" fg:w="1"/><text x="21.0002%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.7502%" y="517" width="0.0798%" height="15" fill="rgb(206,20,43)" fg:x="260" fg:w="1"/><text x="21.0002%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.7502%" y="501" width="0.0798%" height="15" fill="rgb(221,104,11)" fg:x="260" fg:w="1"/><text x="21.0002%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.7502%" y="485" width="0.0798%" height="15" fill="rgb(254,36,50)" fg:x="260" fg:w="1"/><text x="21.0002%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.7502%" y="469" width="0.0798%" height="15" fill="rgb(252,17,15)" fg:x="260" fg:w="1"/><text x="21.0002%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.7502%" y="453" width="0.0798%" height="15" fill="rgb(219,129,43)" fg:x="260" fg:w="1"/><text x="21.0002%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.7502%" y="437" width="0.0798%" height="15" fill="rgb(205,34,45)" fg:x="260" fg:w="1"/><text x="21.0002%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.7502%" y="421" width="0.0798%" height="15" fill="rgb(251,201,32)" fg:x="260" fg:w="1"/><text x="21.0002%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.7502%" y="405" width="0.0798%" height="15" fill="rgb(205,56,0)" fg:x="260" fg:w="1"/><text x="21.0002%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.7502%" y="389" width="0.0798%" height="15" fill="rgb(211,193,27)" fg:x="260" fg:w="1"/><text x="21.0002%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.7502%" y="373" width="0.0798%" height="15" fill="rgb(231,100,42)" fg:x="260" fg:w="1"/><text x="21.0002%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="20.8300%" y="549" width="0.0798%" height="15" fill="rgb(245,85,27)" fg:x="261" fg:w="1"/><text x="21.0800%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.8300%" y="533" width="0.0798%" height="15" fill="rgb(241,76,24)" fg:x="261" fg:w="1"/><text x="21.0800%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="20.9098%" y="549" width="0.0798%" height="15" fill="rgb(249,157,15)" fg:x="262" fg:w="1"/><text x="21.1598%" y="559.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="20.9896%" y="533" width="0.1596%" height="15" fill="rgb(222,218,25)" fg:x="263" fg:w="2"/><text x="21.2396%" y="543.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (2 samples, 0.16%)</title><rect x="20.9896%" y="517" width="0.1596%" height="15" fill="rgb(252,156,52)" fg:x="263" fg:w="2"/><text x="21.2396%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.9896%" y="501" width="0.1596%" height="15" fill="rgb(211,185,7)" fg:x="263" fg:w="2"/><text x="21.2396%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.0694%" y="485" width="0.0798%" height="15" fill="rgb(234,108,24)" fg:x="264" fg:w="1"/><text x="21.3194%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="21.1492%" y="517" width="0.0798%" height="15" fill="rgb(227,218,2)" fg:x="265" fg:w="1"/><text x="21.3992%" y="527.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="20.9896%" y="549" width="0.3192%" height="15" fill="rgb(224,0,36)" fg:x="263" fg:w="4"/><text x="21.2396%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="21.1492%" y="533" width="0.1596%" height="15" fill="rgb(233,201,10)" fg:x="265" fg:w="2"/><text x="21.3992%" y="543.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="21.2291%" y="517" width="0.0798%" height="15" fill="rgb(252,209,14)" fg:x="266" fg:w="1"/><text x="21.4791%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.2291%" y="501" width="0.0798%" height="15" fill="rgb(205,93,49)" fg:x="266" fg:w="1"/><text x="21.4791%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.2291%" y="485" width="0.0798%" height="15" fill="rgb(234,116,45)" fg:x="266" fg:w="1"/><text x="21.4791%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="21.3089%" y="501" width="0.1596%" height="15" fill="rgb(248,89,35)" fg:x="267" fg:w="2"/><text x="21.5589%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.3089%" y="485" width="0.1596%" height="15" fill="rgb(233,167,45)" fg:x="267" fg:w="2"/><text x="21.5589%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.3089%" y="469" width="0.1596%" height="15" fill="rgb(248,228,14)" fg:x="267" fg:w="2"/><text x="21.5589%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="21.3887%" y="453" width="0.0798%" height="15" fill="rgb(246,91,14)" fg:x="268" fg:w="1"/><text x="21.6387%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.3887%" y="437" width="0.0798%" height="15" fill="rgb(227,142,5)" fg:x="268" fg:w="1"/><text x="21.6387%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.3887%" y="421" width="0.0798%" height="15" fill="rgb(221,63,33)" fg:x="268" fg:w="1"/><text x="21.6387%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.3887%" y="405" width="0.0798%" height="15" fill="rgb(233,49,0)" fg:x="268" fg:w="1"/><text x="21.6387%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.3887%" y="389" width="0.0798%" height="15" fill="rgb(251,115,38)" fg:x="268" fg:w="1"/><text x="21.6387%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="21.4685%" y="501" width="0.0798%" height="15" fill="rgb(231,214,32)" fg:x="269" fg:w="1"/><text x="21.7185%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="21.4685%" y="485" width="0.0798%" height="15" fill="rgb(248,73,46)" fg:x="269" fg:w="1"/><text x="21.7185%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="21.4685%" y="469" width="0.0798%" height="15" fill="rgb(237,156,4)" fg:x="269" fg:w="1"/><text x="21.7185%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="21.5483%" y="485" width="0.0798%" height="15" fill="rgb(227,132,2)" fg:x="270" fg:w="1"/><text x="21.7983%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.6281%" y="453" width="0.0798%" height="15" fill="rgb(248,161,9)" fg:x="271" fg:w="1"/><text x="21.8781%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.6281%" y="437" width="0.0798%" height="15" fill="rgb(238,77,38)" fg:x="271" fg:w="1"/><text x="21.8781%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="21.3089%" y="533" width="0.4789%" height="15" fill="rgb(222,166,40)" fg:x="267" fg:w="6"/><text x="21.5589%" y="543.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (6 samples, 0.48%)</title><rect x="21.3089%" y="517" width="0.4789%" height="15" fill="rgb(214,168,45)" fg:x="267" fg:w="6"/><text x="21.5589%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="21.5483%" y="501" width="0.2394%" height="15" fill="rgb(226,64,37)" fg:x="270" fg:w="3"/><text x="21.7983%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="21.6281%" y="485" width="0.1596%" height="15" fill="rgb(232,210,43)" fg:x="271" fg:w="2"/><text x="21.8781%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="21.6281%" y="469" width="0.1596%" height="15" fill="rgb(214,76,33)" fg:x="271" fg:w="2"/><text x="21.8781%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="21.7079%" y="453" width="0.0798%" height="15" fill="rgb(210,78,5)" fg:x="272" fg:w="1"/><text x="21.9579%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="21.7079%" y="437" width="0.0798%" height="15" fill="rgb(211,107,37)" fg:x="272" fg:w="1"/><text x="21.9579%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.7079%" y="421" width="0.0798%" height="15" fill="rgb(249,67,16)" fg:x="272" fg:w="1"/><text x="21.9579%" y="431.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="21.7877%" y="533" width="0.2394%" height="15" fill="rgb(222,114,31)" fg:x="273" fg:w="3"/><text x="22.0377%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="21.7877%" y="517" width="0.2394%" height="15" fill="rgb(242,118,19)" fg:x="273" fg:w="3"/><text x="22.0377%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="21.8675%" y="501" width="0.1596%" height="15" fill="rgb(223,115,1)" fg:x="274" fg:w="2"/><text x="22.1175%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="22.1069%" y="501" width="0.0798%" height="15" fill="rgb(241,182,54)" fg:x="277" fg:w="1"/><text x="22.3569%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="22.1069%" y="485" width="0.0798%" height="15" fill="rgb(244,166,36)" fg:x="277" fg:w="1"/><text x="22.3569%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="22.1069%" y="469" width="0.0798%" height="15" fill="rgb(241,52,43)" fg:x="277" fg:w="1"/><text x="22.3569%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="22.1069%" y="453" width="0.0798%" height="15" fill="rgb(236,82,9)" fg:x="277" fg:w="1"/><text x="22.3569%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="22.1069%" y="437" width="0.0798%" height="15" fill="rgb(241,119,0)" fg:x="277" fg:w="1"/><text x="22.3569%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="22.1069%" y="421" width="0.0798%" height="15" fill="rgb(221,19,22)" fg:x="277" fg:w="1"/><text x="22.3569%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="22.1069%" y="405" width="0.0798%" height="15" fill="rgb(254,144,35)" fg:x="277" fg:w="1"/><text x="22.3569%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="22.1069%" y="389" width="0.0798%" height="15" fill="rgb(246,132,30)" fg:x="277" fg:w="1"/><text x="22.3569%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.1069%" y="373" width="0.0798%" height="15" fill="rgb(234,69,28)" fg:x="277" fg:w="1"/><text x="22.3569%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.1868%" y="469" width="0.0798%" height="15" fill="rgb(219,106,47)" fg:x="278" fg:w="1"/><text x="22.4368%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (20 samples, 1.60%)</title><rect x="20.7502%" y="565" width="1.5962%" height="15" fill="rgb(218,79,24)" fg:x="260" fg:w="20"/><text x="21.0002%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (13 samples, 1.04%)</title><rect x="21.3089%" y="549" width="1.0375%" height="15" fill="rgb(225,26,21)" fg:x="267" fg:w="13"/><text x="21.5589%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="22.0271%" y="533" width="0.3192%" height="15" fill="rgb(217,68,49)" fg:x="276" fg:w="4"/><text x="22.2771%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="22.0271%" y="517" width="0.3192%" height="15" fill="rgb(220,204,28)" fg:x="276" fg:w="4"/><text x="22.2771%" y="527.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="22.1868%" y="501" width="0.1596%" height="15" fill="rgb(237,208,43)" fg:x="278" fg:w="2"/><text x="22.4368%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.1868%" y="485" width="0.1596%" height="15" fill="rgb(213,97,42)" fg:x="278" fg:w="2"/><text x="22.4368%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.2666%" y="469" width="0.0798%" height="15" fill="rgb(238,96,52)" fg:x="279" fg:w="1"/><text x="22.5166%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.2666%" y="453" width="0.0798%" height="15" fill="rgb(228,14,13)" fg:x="279" fg:w="1"/><text x="22.5166%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.2666%" y="437" width="0.0798%" height="15" fill="rgb(219,123,13)" fg:x="279" fg:w="1"/><text x="22.5166%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="22.4262%" y="533" width="0.1596%" height="15" fill="rgb(216,144,17)" fg:x="281" fg:w="2"/><text x="22.6762%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.5060%" y="517" width="0.0798%" height="15" fill="rgb(230,228,29)" fg:x="282" fg:w="1"/><text x="22.7560%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="22.4262%" y="549" width="0.2394%" height="15" fill="rgb(233,18,5)" fg:x="281" fg:w="3"/><text x="22.6762%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.5858%" y="533" width="0.0798%" height="15" fill="rgb(233,197,12)" fg:x="283" fg:w="1"/><text x="22.8358%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.5858%" y="517" width="0.0798%" height="15" fill="rgb(234,140,29)" fg:x="283" fg:w="1"/><text x="22.8358%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.5858%" y="501" width="0.0798%" height="15" fill="rgb(233,113,19)" fg:x="283" fg:w="1"/><text x="22.8358%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.5858%" y="485" width="0.0798%" height="15" fill="rgb(246,209,13)" fg:x="283" fg:w="1"/><text x="22.8358%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.5858%" y="469" width="0.0798%" height="15" fill="rgb(242,79,54)" fg:x="283" fg:w="1"/><text x="22.8358%" y="479.50"></text></g><g><title>plugins_core::build::Build::save (28 samples, 2.23%)</title><rect x="20.5108%" y="581" width="2.2346%" height="15" fill="rgb(219,73,16)" fg:x="257" fg:w="28"/><text x="20.7608%" y="591.50">p..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="22.3464%" y="565" width="0.3990%" height="15" fill="rgb(224,52,10)" fg:x="280" fg:w="5"/><text x="22.5964%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.6656%" y="549" width="0.0798%" height="15" fill="rgb(237,179,5)" fg:x="284" fg:w="1"/><text x="22.9156%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.6656%" y="533" width="0.0798%" height="15" fill="rgb(231,20,6)" fg:x="284" fg:w="1"/><text x="22.9156%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.6656%" y="517" width="0.0798%" height="15" fill="rgb(253,171,45)" fg:x="284" fg:w="1"/><text x="22.9156%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.6656%" y="501" width="0.0798%" height="15" fill="rgb(230,75,49)" fg:x="284" fg:w="1"/><text x="22.9156%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.6656%" y="485" width="0.0798%" height="15" fill="rgb(216,83,46)" fg:x="284" fg:w="1"/><text x="22.9156%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.6656%" y="469" width="0.0798%" height="15" fill="rgb(236,56,9)" fg:x="284" fg:w="1"/><text x="22.9156%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.6656%" y="453" width="0.0798%" height="15" fill="rgb(215,28,34)" fg:x="284" fg:w="1"/><text x="22.9156%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.6656%" y="437" width="0.0798%" height="15" fill="rgb(230,222,20)" fg:x="284" fg:w="1"/><text x="22.9156%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.6656%" y="421" width="0.0798%" height="15" fill="rgb(235,209,51)" fg:x="284" fg:w="1"/><text x="22.9156%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.6656%" y="405" width="0.0798%" height="15" fill="rgb(235,167,1)" fg:x="284" fg:w="1"/><text x="22.9156%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.6656%" y="389" width="0.0798%" height="15" fill="rgb(248,220,0)" fg:x="284" fg:w="1"/><text x="22.9156%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.6656%" y="373" width="0.0798%" height="15" fill="rgb(239,0,18)" fg:x="284" fg:w="1"/><text x="22.9156%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="22.7454%" y="533" width="0.0798%" height="15" fill="rgb(229,179,11)" fg:x="285" fg:w="1"/><text x="22.9954%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="22.7454%" y="517" width="0.0798%" height="15" fill="rgb(226,116,53)" fg:x="285" fg:w="1"/><text x="22.9954%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="22.7454%" y="501" width="0.0798%" height="15" fill="rgb(218,1,49)" fg:x="285" fg:w="1"/><text x="22.9954%" y="511.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (2 samples, 0.16%)</title><rect x="22.7454%" y="581" width="0.1596%" height="15" fill="rgb(208,184,47)" fg:x="285" fg:w="2"/><text x="22.9954%" y="591.50"></text></g><g><title>plugins_core::tools::set_quantity (2 samples, 0.16%)</title><rect x="22.7454%" y="565" width="0.1596%" height="15" fill="rgb(238,174,3)" fg:x="285" fg:w="2"/><text x="22.9954%" y="575.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="22.7454%" y="549" width="0.1596%" height="15" fill="rgb(247,188,6)" fg:x="285" fg:w="2"/><text x="22.9954%" y="559.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Carryable&gt;::serialize (1 samples, 0.08%)</title><rect x="22.8252%" y="533" width="0.0798%" height="15" fill="rgb(211,165,46)" fg:x="286" fg:w="1"/><text x="23.0752%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.8252%" y="517" width="0.0798%" height="15" fill="rgb(222,190,10)" fg:x="286" fg:w="1"/><text x="23.0752%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Kind&gt;::serialize (1 samples, 0.08%)</title><rect x="22.8252%" y="501" width="0.0798%" height="15" fill="rgb(206,185,3)" fg:x="286" fg:w="1"/><text x="23.0752%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.8252%" y="485" width="0.0798%" height="15" fill="rgb(244,125,37)" fg:x="286" fg:w="1"/><text x="23.0752%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="22.8252%" y="469" width="0.0798%" height="15" fill="rgb(211,43,7)" fg:x="286" fg:w="1"/><text x="23.0752%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.8252%" y="453" width="0.0798%" height="15" fill="rgb(250,41,42)" fg:x="286" fg:w="1"/><text x="23.0752%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.8252%" y="437" width="0.0798%" height="15" fill="rgb(254,54,42)" fg:x="286" fg:w="1"/><text x="23.0752%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.9848%" y="485" width="0.0798%" height="15" fill="rgb(213,71,43)" fg:x="288" fg:w="1"/><text x="23.2348%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.9848%" y="469" width="0.0798%" height="15" fill="rgb(249,3,44)" fg:x="288" fg:w="1"/><text x="23.2348%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.9848%" y="453" width="0.0798%" height="15" fill="rgb(229,80,41)" fg:x="288" fg:w="1"/><text x="23.2348%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.9848%" y="437" width="0.0798%" height="15" fill="rgb(231,25,28)" fg:x="288" fg:w="1"/><text x="23.2348%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.9848%" y="421" width="0.0798%" height="15" fill="rgb(208,79,48)" fg:x="288" fg:w="1"/><text x="23.2348%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.9848%" y="405" width="0.0798%" height="15" fill="rgb(207,196,38)" fg:x="288" fg:w="1"/><text x="23.2348%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.9848%" y="389" width="0.0798%" height="15" fill="rgb(228,105,49)" fg:x="288" fg:w="1"/><text x="23.2348%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.9848%" y="373" width="0.0798%" height="15" fill="rgb(237,99,15)" fg:x="288" fg:w="1"/><text x="23.2348%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="22.9848%" y="357" width="0.0798%" height="15" fill="rgb(224,207,46)" fg:x="288" fg:w="1"/><text x="23.2348%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="22.9848%" y="341" width="0.0798%" height="15" fill="rgb(249,117,50)" fg:x="288" fg:w="1"/><text x="23.2348%" y="351.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="22.9848%" y="549" width="0.1596%" height="15" fill="rgb(248,17,13)" fg:x="288" fg:w="2"/><text x="23.2348%" y="559.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="22.9848%" y="533" width="0.1596%" height="15" fill="rgb(228,187,36)" fg:x="288" fg:w="2"/><text x="23.2348%" y="543.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="22.9848%" y="517" width="0.1596%" height="15" fill="rgb(234,132,20)" fg:x="288" fg:w="2"/><text x="23.2348%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="22.9848%" y="501" width="0.1596%" height="15" fill="rgb(209,170,46)" fg:x="288" fg:w="2"/><text x="23.2348%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.0646%" y="485" width="0.0798%" height="15" fill="rgb(237,23,19)" fg:x="289" fg:w="1"/><text x="23.3146%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.0646%" y="469" width="0.0798%" height="15" fill="rgb(227,21,26)" fg:x="289" fg:w="1"/><text x="23.3146%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="23.1445%" y="549" width="0.0798%" height="15" fill="rgb(222,220,48)" fg:x="290" fg:w="1"/><text x="23.3945%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="23.1445%" y="533" width="0.0798%" height="15" fill="rgb(214,9,16)" fg:x="290" fg:w="1"/><text x="23.3945%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="23.2243%" y="517" width="0.0798%" height="15" fill="rgb(209,73,30)" fg:x="291" fg:w="1"/><text x="23.4743%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="23.2243%" y="501" width="0.0798%" height="15" fill="rgb(207,20,33)" fg:x="291" fg:w="1"/><text x="23.4743%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.3041%" y="453" width="0.0798%" height="15" fill="rgb(219,153,12)" fg:x="292" fg:w="1"/><text x="23.5541%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.3041%" y="437" width="0.0798%" height="15" fill="rgb(235,97,25)" fg:x="292" fg:w="1"/><text x="23.5541%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="23.2243%" y="533" width="0.3192%" height="15" fill="rgb(244,30,34)" fg:x="291" fg:w="4"/><text x="23.4743%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="23.3041%" y="517" width="0.2394%" height="15" fill="rgb(214,106,45)" fg:x="292" fg:w="3"/><text x="23.5541%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="23.3041%" y="501" width="0.2394%" height="15" fill="rgb(226,41,9)" fg:x="292" fg:w="3"/><text x="23.5541%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="23.3041%" y="485" width="0.2394%" height="15" fill="rgb(253,139,29)" fg:x="292" fg:w="3"/><text x="23.5541%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="23.3041%" y="469" width="0.2394%" height="15" fill="rgb(213,205,39)" fg:x="292" fg:w="3"/><text x="23.5541%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="23.3839%" y="453" width="0.1596%" height="15" fill="rgb(209,27,10)" fg:x="293" fg:w="2"/><text x="23.6339%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.3839%" y="437" width="0.1596%" height="15" fill="rgb(249,142,16)" fg:x="293" fg:w="2"/><text x="23.6339%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.4637%" y="421" width="0.0798%" height="15" fill="rgb(242,65,12)" fg:x="294" fg:w="1"/><text x="23.7137%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.5435%" y="469" width="0.0798%" height="15" fill="rgb(232,48,10)" fg:x="295" fg:w="1"/><text x="23.7935%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.5435%" y="453" width="0.0798%" height="15" fill="rgb(253,67,19)" fg:x="295" fg:w="1"/><text x="23.7935%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.5435%" y="437" width="0.0798%" height="15" fill="rgb(227,93,29)" fg:x="295" fg:w="1"/><text x="23.7935%" y="447.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="23.5435%" y="501" width="0.1596%" height="15" fill="rgb(226,189,53)" fg:x="295" fg:w="2"/><text x="23.7935%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="23.5435%" y="485" width="0.1596%" height="15" fill="rgb(223,224,1)" fg:x="295" fg:w="2"/><text x="23.7935%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="23.6233%" y="469" width="0.0798%" height="15" fill="rgb(221,84,32)" fg:x="296" fg:w="1"/><text x="23.8733%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.6233%" y="453" width="0.0798%" height="15" fill="rgb(214,189,28)" fg:x="296" fg:w="1"/><text x="23.8733%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="23.7829%" y="485" width="0.0798%" height="15" fill="rgb(234,7,52)" fg:x="298" fg:w="1"/><text x="24.0329%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.7829%" y="469" width="0.0798%" height="15" fill="rgb(249,73,31)" fg:x="298" fg:w="1"/><text x="24.0329%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.7829%" y="453" width="0.0798%" height="15" fill="rgb(253,153,41)" fg:x="298" fg:w="1"/><text x="24.0329%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="23.7829%" y="437" width="0.0798%" height="15" fill="rgb(249,52,34)" fg:x="298" fg:w="1"/><text x="24.0329%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.7829%" y="421" width="0.0798%" height="15" fill="rgb(236,177,47)" fg:x="298" fg:w="1"/><text x="24.0329%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.8627%" y="485" width="0.0798%" height="15" fill="rgb(252,185,45)" fg:x="299" fg:w="1"/><text x="24.1127%" y="495.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (14 samples, 1.12%)</title><rect x="22.9050%" y="581" width="1.1173%" height="15" fill="rgb(251,15,30)" fg:x="287" fg:w="14"/><text x="23.1550%" y="591.50"></text></g><g><title>plugins_core::tools::set_container (14 samples, 1.12%)</title><rect x="22.9050%" y="565" width="1.1173%" height="15" fill="rgb(233,31,4)" fg:x="287" fg:w="14"/><text x="23.1550%" y="575.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (10 samples, 0.80%)</title><rect x="23.2243%" y="549" width="0.7981%" height="15" fill="rgb(254,44,24)" fg:x="291" fg:w="10"/><text x="23.4743%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (6 samples, 0.48%)</title><rect x="23.5435%" y="533" width="0.4789%" height="15" fill="rgb(218,54,1)" fg:x="295" fg:w="6"/><text x="23.7935%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="23.5435%" y="517" width="0.4789%" height="15" fill="rgb(243,209,39)" fg:x="295" fg:w="6"/><text x="23.7935%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="23.7031%" y="501" width="0.3192%" height="15" fill="rgb(206,75,33)" fg:x="297" fg:w="4"/><text x="23.9531%" y="511.50"></text></g><g><title>kernel::model::props::Props::string_property (1 samples, 0.08%)</title><rect x="23.9425%" y="485" width="0.0798%" height="15" fill="rgb(223,108,18)" fg:x="300" fg:w="1"/><text x="24.1925%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="23.9425%" y="469" width="0.0798%" height="15" fill="rgb(244,89,31)" fg:x="300" fg:w="1"/><text x="24.1925%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="24.0223%" y="565" width="0.0798%" height="15" fill="rgb(222,167,27)" fg:x="301" fg:w="1"/><text x="24.2723%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.0223%" y="549" width="0.0798%" height="15" fill="rgb(247,41,16)" fg:x="301" fg:w="1"/><text x="24.2723%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.0223%" y="533" width="0.0798%" height="15" fill="rgb(233,168,40)" fg:x="301" fg:w="1"/><text x="24.2723%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.0223%" y="517" width="0.0798%" height="15" fill="rgb(205,211,8)" fg:x="301" fg:w="1"/><text x="24.2723%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="24.1022%" y="533" width="0.0798%" height="15" fill="rgb(238,105,11)" fg:x="302" fg:w="1"/><text x="24.3522%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.1022%" y="549" width="0.1596%" height="15" fill="rgb(223,142,52)" fg:x="302" fg:w="2"/><text x="24.3522%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="24.1820%" y="533" width="0.0798%" height="15" fill="rgb(238,51,33)" fg:x="303" fg:w="1"/><text x="24.4320%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.1820%" y="517" width="0.0798%" height="15" fill="rgb(231,188,43)" fg:x="303" fg:w="1"/><text x="24.4320%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="24.2618%" y="533" width="0.0798%" height="15" fill="rgb(216,92,17)" fg:x="304" fg:w="1"/><text x="24.5118%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="24.2618%" y="517" width="0.0798%" height="15" fill="rgb(228,2,40)" fg:x="304" fg:w="1"/><text x="24.5118%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::add_username_to_key (5 samples, 0.40%)</title><rect x="24.1022%" y="565" width="0.3990%" height="15" fill="rgb(226,73,15)" fg:x="302" fg:w="5"/><text x="24.3522%" y="575.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="24.2618%" y="549" width="0.2394%" height="15" fill="rgb(227,66,46)" fg:x="304" fg:w="3"/><text x="24.5118%" y="559.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (2 samples, 0.16%)</title><rect x="24.3416%" y="533" width="0.1596%" height="15" fill="rgb(209,71,6)" fg:x="305" fg:w="2"/><text x="24.5916%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.4214%" y="517" width="0.0798%" height="15" fill="rgb(246,100,25)" fg:x="306" fg:w="1"/><text x="24.6714%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="24.4214%" y="501" width="0.0798%" height="15" fill="rgb(248,185,27)" fg:x="306" fg:w="1"/><text x="24.6714%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.4214%" y="485" width="0.0798%" height="15" fill="rgb(225,118,47)" fg:x="306" fg:w="1"/><text x="24.6714%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.5012%" y="565" width="0.0798%" height="15" fill="rgb(220,185,44)" fg:x="307" fg:w="1"/><text x="24.7512%" y="575.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="24.5810%" y="485" width="0.0798%" height="15" fill="rgb(227,95,24)" fg:x="308" fg:w="1"/><text x="24.8310%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="24.5810%" y="469" width="0.0798%" height="15" fill="rgb(252,84,24)" fg:x="308" fg:w="1"/><text x="24.8310%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.5810%" y="453" width="0.0798%" height="15" fill="rgb(240,34,44)" fg:x="308" fg:w="1"/><text x="24.8310%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.5810%" y="437" width="0.0798%" height="15" fill="rgb(209,72,54)" fg:x="308" fg:w="1"/><text x="24.8310%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.5810%" y="421" width="0.0798%" height="15" fill="rgb(226,19,45)" fg:x="308" fg:w="1"/><text x="24.8310%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.5810%" y="405" width="0.0798%" height="15" fill="rgb(246,7,45)" fg:x="308" fg:w="1"/><text x="24.8310%" y="415.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="24.5810%" y="565" width="0.1596%" height="15" fill="rgb(225,45,2)" fg:x="308" fg:w="2"/><text x="24.8310%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="24.5810%" y="549" width="0.1596%" height="15" fill="rgb(221,80,29)" fg:x="308" fg:w="2"/><text x="24.8310%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="24.5810%" y="533" width="0.1596%" height="15" fill="rgb(228,11,19)" fg:x="308" fg:w="2"/><text x="24.8310%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="24.5810%" y="517" width="0.1596%" height="15" fill="rgb(243,17,21)" fg:x="308" fg:w="2"/><text x="24.8310%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="24.5810%" y="501" width="0.1596%" height="15" fill="rgb(243,88,8)" fg:x="308" fg:w="2"/><text x="24.8310%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="24.6608%" y="485" width="0.0798%" height="15" fill="rgb(214,17,9)" fg:x="309" fg:w="1"/><text x="24.9108%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="24.6608%" y="469" width="0.0798%" height="15" fill="rgb(232,169,15)" fg:x="309" fg:w="1"/><text x="24.9108%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.6608%" y="453" width="0.0798%" height="15" fill="rgb(232,86,53)" fg:x="309" fg:w="1"/><text x="24.9108%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.6608%" y="437" width="0.0798%" height="15" fill="rgb(222,100,4)" fg:x="309" fg:w="1"/><text x="24.9108%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.6608%" y="421" width="0.0798%" height="15" fill="rgb(253,151,38)" fg:x="309" fg:w="1"/><text x="24.9108%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.6608%" y="405" width="0.0798%" height="15" fill="rgb(238,215,29)" fg:x="309" fg:w="1"/><text x="24.9108%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.6608%" y="389" width="0.0798%" height="15" fill="rgb(205,128,53)" fg:x="309" fg:w="1"/><text x="24.9108%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.6608%" y="373" width="0.0798%" height="15" fill="rgb(248,183,14)" fg:x="309" fg:w="1"/><text x="24.9108%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.6608%" y="357" width="0.0798%" height="15" fill="rgb(244,172,35)" fg:x="309" fg:w="1"/><text x="24.9108%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.6608%" y="341" width="0.0798%" height="15" fill="rgb(234,93,19)" fg:x="309" fg:w="1"/><text x="24.9108%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="24.6608%" y="325" width="0.0798%" height="15" fill="rgb(227,109,7)" fg:x="309" fg:w="1"/><text x="24.9108%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="24.6608%" y="309" width="0.0798%" height="15" fill="rgb(233,136,54)" fg:x="309" fg:w="1"/><text x="24.9108%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (1 samples, 0.08%)</title><rect x="24.7406%" y="565" width="0.0798%" height="15" fill="rgb(233,19,40)" fg:x="310" fg:w="1"/><text x="24.9906%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.7406%" y="549" width="0.0798%" height="15" fill="rgb(247,41,18)" fg:x="310" fg:w="1"/><text x="24.9906%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::Build&gt; (1 samples, 0.08%)</title><rect x="24.8204%" y="565" width="0.0798%" height="15" fill="rgb(220,34,34)" fg:x="311" fg:w="1"/><text x="25.0704%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="24.9002%" y="549" width="0.0798%" height="15" fill="rgb(222,135,32)" fg:x="312" fg:w="1"/><text x="25.1502%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.9002%" y="533" width="0.0798%" height="15" fill="rgb(214,80,19)" fg:x="312" fg:w="1"/><text x="25.1502%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.9002%" y="517" width="0.0798%" height="15" fill="rgb(234,54,46)" fg:x="312" fg:w="1"/><text x="25.1502%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.9002%" y="501" width="0.0798%" height="15" fill="rgb(251,48,23)" fg:x="312" fg:w="1"/><text x="25.1502%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.9002%" y="485" width="0.0798%" height="15" fill="rgb(254,109,52)" fg:x="312" fg:w="1"/><text x="25.1502%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.9002%" y="469" width="0.0798%" height="15" fill="rgb(240,186,19)" fg:x="312" fg:w="1"/><text x="25.1502%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.9002%" y="453" width="0.0798%" height="15" fill="rgb(246,187,17)" fg:x="312" fg:w="1"/><text x="25.1502%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.9002%" y="437" width="0.0798%" height="15" fill="rgb(212,21,5)" fg:x="312" fg:w="1"/><text x="25.1502%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.9002%" y="421" width="0.0798%" height="15" fill="rgb(225,185,18)" fg:x="312" fg:w="1"/><text x="25.1502%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.9002%" y="405" width="0.0798%" height="15" fill="rgb(245,114,17)" fg:x="312" fg:w="1"/><text x="25.1502%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.9002%" y="389" width="0.0798%" height="15" fill="rgb(223,164,24)" fg:x="312" fg:w="1"/><text x="25.1502%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.9002%" y="373" width="0.0798%" height="15" fill="rgb(211,228,3)" fg:x="312" fg:w="1"/><text x="25.1502%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.9002%" y="357" width="0.0798%" height="15" fill="rgb(223,16,38)" fg:x="312" fg:w="1"/><text x="25.1502%" y="367.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="24.9800%" y="437" width="0.0798%" height="15" fill="rgb(207,31,54)" fg:x="313" fg:w="1"/><text x="25.2300%" y="447.50"></text></g><g><title>engine::session::should_force_rollback (3 samples, 0.24%)</title><rect x="24.9800%" y="533" width="0.2394%" height="15" fill="rgb(220,39,11)" fg:x="313" fg:w="3"/><text x="25.2300%" y="543.50"></text></g><g><title>std::env::_var (3 samples, 0.24%)</title><rect x="24.9800%" y="517" width="0.2394%" height="15" fill="rgb(235,185,0)" fg:x="313" fg:w="3"/><text x="25.2300%" y="527.50"></text></g><g><title>std::env::var_os (3 samples, 0.24%)</title><rect x="24.9800%" y="501" width="0.2394%" height="15" fill="rgb(249,39,18)" fg:x="313" fg:w="3"/><text x="25.2300%" y="511.50"></text></g><g><title>std::env::_var_os (3 samples, 0.24%)</title><rect x="24.9800%" y="485" width="0.2394%" height="15" fill="rgb(240,110,33)" fg:x="313" fg:w="3"/><text x="25.2300%" y="495.50"></text></g><g><title>std::sys::unix::os::getenv (3 samples, 0.24%)</title><rect x="24.9800%" y="469" width="0.2394%" height="15" fill="rgb(210,92,42)" fg:x="313" fg:w="3"/><text x="25.2300%" y="479.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (3 samples, 0.24%)</title><rect x="24.9800%" y="453" width="0.2394%" height="15" fill="rgb(218,215,28)" fg:x="313" fg:w="3"/><text x="25.2300%" y="463.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (2 samples, 0.16%)</title><rect x="25.0599%" y="437" width="0.1596%" height="15" fill="rgb(238,215,36)" fg:x="314" fg:w="2"/><text x="25.3099%" y="447.50"></text></g><g><title>getenv (2 samples, 0.16%)</title><rect x="25.0599%" y="421" width="0.1596%" height="15" fill="rgb(220,31,10)" fg:x="314" fg:w="2"/><text x="25.3099%" y="431.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="25.2195%" y="501" width="0.1596%" height="15" fill="rgb(212,93,14)" fg:x="316" fg:w="2"/><text x="25.4695%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="25.2195%" y="485" width="0.1596%" height="15" fill="rgb(254,207,2)" fg:x="316" fg:w="2"/><text x="25.4695%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="25.2195%" y="469" width="0.1596%" height="15" fill="rgb(205,57,44)" fg:x="316" fg:w="2"/><text x="25.4695%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="25.2993%" y="453" width="0.0798%" height="15" fill="rgb(226,151,19)" fg:x="317" fg:w="1"/><text x="25.5493%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="25.3791%" y="469" width="0.0798%" height="15" fill="rgb(230,72,30)" fg:x="318" fg:w="1"/><text x="25.6291%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.3791%" y="453" width="0.0798%" height="15" fill="rgb(244,0,8)" fg:x="318" fg:w="1"/><text x="25.6291%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="25.3791%" y="437" width="0.0798%" height="15" fill="rgb(230,192,6)" fg:x="318" fg:w="1"/><text x="25.6291%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="25.6983%" y="373" width="0.1596%" height="15" fill="rgb(233,207,13)" fg:x="322" fg:w="2"/><text x="25.9483%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="25.6185%" y="405" width="0.3192%" height="15" fill="rgb(206,227,7)" fg:x="321" fg:w="4"/><text x="25.8685%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="25.6983%" y="389" width="0.2394%" height="15" fill="rgb(213,217,25)" fg:x="322" fg:w="3"/><text x="25.9483%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.8579%" y="373" width="0.0798%" height="15" fill="rgb(249,75,4)" fg:x="324" fg:w="1"/><text x="26.1079%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.8579%" y="357" width="0.0798%" height="15" fill="rgb(225,114,18)" fg:x="324" fg:w="1"/><text x="26.1079%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="25.9377%" y="405" width="0.2394%" height="15" fill="rgb(211,162,40)" fg:x="325" fg:w="3"/><text x="26.1877%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.0974%" y="389" width="0.0798%" height="15" fill="rgb(206,49,29)" fg:x="327" fg:w="1"/><text x="26.3474%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="25.5387%" y="421" width="0.7183%" height="15" fill="rgb(244,8,6)" fg:x="320" fg:w="9"/><text x="25.7887%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="26.1772%" y="405" width="0.0798%" height="15" fill="rgb(231,194,28)" fg:x="328" fg:w="1"/><text x="26.4272%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.96%)</title><rect x="25.5387%" y="437" width="0.9577%" height="15" fill="rgb(210,69,5)" fg:x="320" fg:w="12"/><text x="25.7887%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="26.2570%" y="421" width="0.2394%" height="15" fill="rgb(216,186,12)" fg:x="329" fg:w="3"/><text x="26.5070%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.4166%" y="405" width="0.0798%" height="15" fill="rgb(238,61,15)" fg:x="331" fg:w="1"/><text x="26.6666%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.04%)</title><rect x="25.5387%" y="453" width="1.0375%" height="15" fill="rgb(226,104,1)" fg:x="320" fg:w="13"/><text x="25.7887%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.4964%" y="437" width="0.0798%" height="15" fill="rgb(229,128,15)" fg:x="332" fg:w="1"/><text x="26.7464%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="26.5762%" y="453" width="0.1596%" height="15" fill="rgb(247,110,15)" fg:x="333" fg:w="2"/><text x="26.8262%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="26.6560%" y="437" width="0.0798%" height="15" fill="rgb(210,74,48)" fg:x="334" fg:w="1"/><text x="26.9060%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="26.6560%" y="421" width="0.0798%" height="15" fill="rgb(246,121,10)" fg:x="334" fg:w="1"/><text x="26.9060%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="26.6560%" y="405" width="0.0798%" height="15" fill="rgb(214,156,37)" fg:x="334" fg:w="1"/><text x="26.9060%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.6560%" y="389" width="0.0798%" height="15" fill="rgb(214,210,34)" fg:x="334" fg:w="1"/><text x="26.9060%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.6560%" y="373" width="0.0798%" height="15" fill="rgb(237,93,35)" fg:x="334" fg:w="1"/><text x="26.9060%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.6560%" y="357" width="0.0798%" height="15" fill="rgb(206,36,8)" fg:x="334" fg:w="1"/><text x="26.9060%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.6560%" y="341" width="0.0798%" height="15" fill="rgb(208,151,12)" fg:x="334" fg:w="1"/><text x="26.9060%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="26.8156%" y="421" width="0.2394%" height="15" fill="rgb(225,133,52)" fg:x="336" fg:w="3"/><text x="27.0656%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="26.7358%" y="437" width="0.3990%" height="15" fill="rgb(231,71,53)" fg:x="335" fg:w="5"/><text x="26.9858%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.0551%" y="421" width="0.0798%" height="15" fill="rgb(243,76,21)" fg:x="339" fg:w="1"/><text x="27.3051%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.0551%" y="405" width="0.0798%" height="15" fill="rgb(252,144,3)" fg:x="339" fg:w="1"/><text x="27.3051%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.1349%" y="421" width="0.0798%" height="15" fill="rgb(231,199,10)" fg:x="340" fg:w="1"/><text x="27.3849%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="27.2147%" y="421" width="0.0798%" height="15" fill="rgb(215,18,11)" fg:x="341" fg:w="1"/><text x="27.4647%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.64%)</title><rect x="27.2945%" y="421" width="0.6385%" height="15" fill="rgb(241,65,24)" fg:x="342" fg:w="8"/><text x="27.5445%" y="431.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="27.3743%" y="405" width="0.5587%" height="15" fill="rgb(251,192,38)" fg:x="343" fg:w="7"/><text x="27.6243%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="27.6137%" y="389" width="0.3192%" height="15" fill="rgb(205,9,35)" fg:x="346" fg:w="4"/><text x="27.8637%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="27.6935%" y="373" width="0.2394%" height="15" fill="rgb(229,225,49)" fg:x="347" fg:w="3"/><text x="27.9435%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="27.8532%" y="357" width="0.0798%" height="15" fill="rgb(207,125,39)" fg:x="349" fg:w="1"/><text x="28.1032%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="27.8532%" y="341" width="0.0798%" height="15" fill="rgb(222,78,19)" fg:x="349" fg:w="1"/><text x="28.1032%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="27.8532%" y="325" width="0.0798%" height="15" fill="rgb(248,207,20)" fg:x="349" fg:w="1"/><text x="28.1032%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.9330%" y="405" width="0.0798%" height="15" fill="rgb(205,103,49)" fg:x="350" fg:w="1"/><text x="28.1830%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="28.0128%" y="389" width="0.0798%" height="15" fill="rgb(216,42,28)" fg:x="351" fg:w="1"/><text x="28.2628%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="28.0128%" y="373" width="0.0798%" height="15" fill="rgb(213,205,53)" fg:x="351" fg:w="1"/><text x="28.2628%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.0128%" y="357" width="0.0798%" height="15" fill="rgb(239,140,53)" fg:x="351" fg:w="1"/><text x="28.2628%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.0128%" y="341" width="0.0798%" height="15" fill="rgb(248,95,9)" fg:x="351" fg:w="1"/><text x="28.2628%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.0128%" y="325" width="0.0798%" height="15" fill="rgb(254,58,47)" fg:x="351" fg:w="1"/><text x="28.2628%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="28.0128%" y="405" width="0.1596%" height="15" fill="rgb(234,227,14)" fg:x="351" fg:w="2"/><text x="28.2628%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.0926%" y="389" width="0.0798%" height="15" fill="rgb(205,192,45)" fg:x="352" fg:w="1"/><text x="28.3426%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.0926%" y="373" width="0.0798%" height="15" fill="rgb(253,187,31)" fg:x="352" fg:w="1"/><text x="28.3426%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.0926%" y="357" width="0.0798%" height="15" fill="rgb(222,6,32)" fg:x="352" fg:w="1"/><text x="28.3426%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="28.3320%" y="357" width="0.2394%" height="15" fill="rgb(249,190,19)" fg:x="355" fg:w="3"/><text x="28.5820%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="28.4916%" y="341" width="0.0798%" height="15" fill="rgb(251,28,20)" fg:x="357" fg:w="1"/><text x="28.7416%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="28.4916%" y="325" width="0.0798%" height="15" fill="rgb(210,223,40)" fg:x="357" fg:w="1"/><text x="28.7416%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="28.4916%" y="309" width="0.0798%" height="15" fill="rgb(216,137,22)" fg:x="357" fg:w="1"/><text x="28.7416%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="28.1724%" y="405" width="0.4789%" height="15" fill="rgb(247,39,34)" fg:x="353" fg:w="6"/><text x="28.4224%" y="415.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="28.3320%" y="389" width="0.3192%" height="15" fill="rgb(239,43,50)" fg:x="355" fg:w="4"/><text x="28.5820%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="28.3320%" y="373" width="0.3192%" height="15" fill="rgb(241,212,9)" fg:x="355" fg:w="4"/><text x="28.5820%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="28.5714%" y="357" width="0.0798%" height="15" fill="rgb(205,8,2)" fg:x="358" fg:w="1"/><text x="28.8214%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="28.6512%" y="389" width="0.3990%" height="15" fill="rgb(217,173,54)" fg:x="359" fg:w="5"/><text x="28.9012%" y="399.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="28.6512%" y="373" width="0.3990%" height="15" fill="rgb(208,149,52)" fg:x="359" fg:w="5"/><text x="28.9012%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="28.6512%" y="357" width="0.3990%" height="15" fill="rgb(239,99,40)" fg:x="359" fg:w="5"/><text x="28.9012%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="28.6512%" y="341" width="0.3990%" height="15" fill="rgb(233,214,26)" fg:x="359" fg:w="5"/><text x="28.9012%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="28.8109%" y="325" width="0.2394%" height="15" fill="rgb(231,225,37)" fg:x="361" fg:w="3"/><text x="29.0609%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="28.8109%" y="309" width="0.2394%" height="15" fill="rgb(252,55,35)" fg:x="361" fg:w="3"/><text x="29.0609%" y="319.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="28.8109%" y="293" width="0.2394%" height="15" fill="rgb(239,43,18)" fg:x="361" fg:w="3"/><text x="29.0609%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="29.0503%" y="373" width="0.0798%" height="15" fill="rgb(251,125,49)" fg:x="364" fg:w="1"/><text x="29.3003%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="29.1301%" y="373" width="0.4789%" height="15" fill="rgb(212,83,54)" fg:x="365" fg:w="6"/><text x="29.3801%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="29.4493%" y="357" width="0.1596%" height="15" fill="rgb(250,75,6)" fg:x="369" fg:w="2"/><text x="29.6993%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.5291%" y="341" width="0.0798%" height="15" fill="rgb(252,36,40)" fg:x="370" fg:w="1"/><text x="29.7791%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.5291%" y="325" width="0.0798%" height="15" fill="rgb(230,91,51)" fg:x="370" fg:w="1"/><text x="29.7791%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="29.0503%" y="389" width="0.7183%" height="15" fill="rgb(212,92,28)" fg:x="364" fg:w="9"/><text x="29.3003%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="29.6089%" y="373" width="0.1596%" height="15" fill="rgb(227,13,22)" fg:x="371" fg:w="2"/><text x="29.8589%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.6887%" y="357" width="0.0798%" height="15" fill="rgb(239,204,32)" fg:x="372" fg:w="1"/><text x="29.9387%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.36%)</title><rect x="28.6512%" y="405" width="1.3567%" height="15" fill="rgb(228,49,41)" fg:x="359" fg:w="17"/><text x="28.9012%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="29.7686%" y="389" width="0.2394%" height="15" fill="rgb(206,95,6)" fg:x="373" fg:w="3"/><text x="30.0186%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="29.8484%" y="373" width="0.1596%" height="15" fill="rgb(251,20,14)" fg:x="374" fg:w="2"/><text x="30.0984%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="29.8484%" y="357" width="0.1596%" height="15" fill="rgb(214,99,28)" fg:x="374" fg:w="2"/><text x="30.0984%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.15%)</title><rect x="27.9330%" y="421" width="2.1548%" height="15" fill="rgb(239,122,54)" fg:x="350" fg:w="27"/><text x="28.1830%" y="431.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="30.0080%" y="405" width="0.0798%" height="15" fill="rgb(218,217,46)" fg:x="376" fg:w="1"/><text x="30.2580%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="30.0080%" y="389" width="0.0798%" height="15" fill="rgb(249,106,28)" fg:x="376" fg:w="1"/><text x="30.2580%" y="399.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (46 samples, 3.67%)</title><rect x="26.7358%" y="453" width="3.6712%" height="15" fill="rgb(250,158,18)" fg:x="335" fg:w="46"/><text x="26.9858%" y="463.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (41 samples, 3.27%)</title><rect x="27.1349%" y="437" width="3.2721%" height="15" fill="rgb(226,137,29)" fg:x="340" fg:w="41"/><text x="27.3849%" y="447.50">ser..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="30.0878%" y="421" width="0.3192%" height="15" fill="rgb(210,188,1)" fg:x="377" fg:w="4"/><text x="30.3378%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="30.1676%" y="405" width="0.2394%" height="15" fill="rgb(227,84,42)" fg:x="378" fg:w="3"/><text x="30.4176%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="30.2474%" y="389" width="0.1596%" height="15" fill="rgb(222,147,48)" fg:x="379" fg:w="2"/><text x="30.4974%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="30.3272%" y="373" width="0.0798%" height="15" fill="rgb(241,150,43)" fg:x="380" fg:w="1"/><text x="30.5772%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="30.3272%" y="357" width="0.0798%" height="15" fill="rgb(206,139,52)" fg:x="380" fg:w="1"/><text x="30.5772%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="30.3272%" y="341" width="0.0798%" height="15" fill="rgb(230,63,14)" fg:x="380" fg:w="1"/><text x="30.5772%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::compare::Modified&gt; (1 samples, 0.08%)</title><rect x="30.4070%" y="453" width="0.0798%" height="15" fill="rgb(247,8,20)" fg:x="381" fg:w="1"/><text x="30.6570%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.4868%" y="421" width="0.0798%" height="15" fill="rgb(213,115,4)" fg:x="382" fg:w="1"/><text x="30.7368%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="30.5666%" y="421" width="0.0798%" height="15" fill="rgb(241,79,49)" fg:x="383" fg:w="1"/><text x="30.8166%" y="431.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (1 samples, 0.08%)</title><rect x="30.6464%" y="421" width="0.0798%" height="15" fill="rgb(222,42,35)" fg:x="384" fg:w="1"/><text x="30.8964%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="30.6464%" y="405" width="0.0798%" height="15" fill="rgb(247,59,23)" fg:x="384" fg:w="1"/><text x="30.8964%" y="415.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (5 samples, 0.40%)</title><rect x="30.4868%" y="437" width="0.3990%" height="15" fill="rgb(247,93,18)" fg:x="382" fg:w="5"/><text x="30.7368%" y="447.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="30.7263%" y="421" width="0.1596%" height="15" fill="rgb(249,107,47)" fg:x="385" fg:w="2"/><text x="30.9763%" y="431.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="30.8061%" y="405" width="0.0798%" height="15" fill="rgb(219,27,1)" fg:x="386" fg:w="1"/><text x="31.0561%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.0455%" y="405" width="0.0798%" height="15" fill="rgb(217,82,32)" fg:x="389" fg:w="1"/><text x="31.2955%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="31.0455%" y="389" width="0.0798%" height="15" fill="rgb(250,129,47)" fg:x="389" fg:w="1"/><text x="31.2955%" y="399.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="31.1253%" y="405" width="0.0798%" height="15" fill="rgb(253,88,35)" fg:x="390" fg:w="1"/><text x="31.3753%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="31.1253%" y="389" width="0.0798%" height="15" fill="rgb(245,221,14)" fg:x="390" fg:w="1"/><text x="31.3753%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.7638%" y="341" width="0.0798%" height="15" fill="rgb(217,119,54)" fg:x="398" fg:w="1"/><text x="32.0138%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="31.5243%" y="357" width="0.3990%" height="15" fill="rgb(247,128,31)" fg:x="395" fg:w="5"/><text x="31.7743%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="31.8436%" y="341" width="0.0798%" height="15" fill="rgb(211,99,22)" fg:x="399" fg:w="1"/><text x="32.0936%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="32.0032%" y="325" width="0.2394%" height="15" fill="rgb(212,20,17)" fg:x="401" fg:w="3"/><text x="32.2532%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="32.0032%" y="309" width="0.2394%" height="15" fill="rgb(209,159,29)" fg:x="401" fg:w="3"/><text x="32.2532%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="32.0830%" y="293" width="0.1596%" height="15" fill="rgb(222,177,53)" fg:x="402" fg:w="2"/><text x="32.3330%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="32.0830%" y="277" width="0.1596%" height="15" fill="rgb(234,46,43)" fg:x="402" fg:w="2"/><text x="32.3330%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="32.0830%" y="261" width="0.1596%" height="15" fill="rgb(208,108,14)" fg:x="402" fg:w="2"/><text x="32.3330%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="32.1628%" y="245" width="0.0798%" height="15" fill="rgb(226,78,53)" fg:x="403" fg:w="1"/><text x="32.4128%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.1628%" y="229" width="0.0798%" height="15" fill="rgb(230,20,41)" fg:x="403" fg:w="1"/><text x="32.4128%" y="239.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="31.9234%" y="357" width="0.3990%" height="15" fill="rgb(213,195,35)" fg:x="400" fg:w="5"/><text x="32.1734%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="31.9234%" y="341" width="0.3990%" height="15" fill="rgb(242,62,36)" fg:x="400" fg:w="5"/><text x="32.1734%" y="351.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="32.2426%" y="325" width="0.0798%" height="15" fill="rgb(222,210,37)" fg:x="404" fg:w="1"/><text x="32.4926%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="32.2426%" y="309" width="0.0798%" height="15" fill="rgb(232,107,19)" fg:x="404" fg:w="1"/><text x="32.4926%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="32.4022%" y="325" width="0.3990%" height="15" fill="rgb(235,85,17)" fg:x="406" fg:w="5"/><text x="32.6522%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="33.0407%" y="309" width="0.0798%" height="15" fill="rgb(219,195,31)" fg:x="414" fg:w="1"/><text x="33.2907%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.88%)</title><rect x="32.4022%" y="341" width="0.8779%" height="15" fill="rgb(231,183,30)" fg:x="406" fg:w="11"/><text x="32.6522%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="32.8013%" y="325" width="0.4789%" height="15" fill="rgb(212,0,11)" fg:x="411" fg:w="6"/><text x="33.0513%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="33.1205%" y="309" width="0.1596%" height="15" fill="rgb(249,53,54)" fg:x="415" fg:w="2"/><text x="33.3705%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (24 samples, 1.92%)</title><rect x="31.5243%" y="373" width="1.9154%" height="15" fill="rgb(211,118,13)" fg:x="395" fg:w="24"/><text x="31.7743%" y="383.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (14 samples, 1.12%)</title><rect x="32.3224%" y="357" width="1.1173%" height="15" fill="rgb(237,42,9)" fg:x="405" fg:w="14"/><text x="32.5724%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="33.2801%" y="341" width="0.1596%" height="15" fill="rgb(227,68,32)" fg:x="417" fg:w="2"/><text x="33.5301%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (28 samples, 2.23%)</title><rect x="31.4445%" y="389" width="2.2346%" height="15" fill="rgb(238,10,7)" fg:x="394" fg:w="28"/><text x="31.6945%" y="399.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="33.4397%" y="373" width="0.2394%" height="15" fill="rgb(224,42,12)" fg:x="419" fg:w="3"/><text x="33.6897%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.5994%" y="357" width="0.0798%" height="15" fill="rgb(252,190,5)" fg:x="421" fg:w="1"/><text x="33.8494%" y="367.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="33.6792%" y="389" width="0.3192%" height="15" fill="rgb(220,214,39)" fg:x="422" fg:w="4"/><text x="33.9292%" y="399.50"></text></g><g><title>engine::session::Session::flush (115 samples, 9.18%)</title><rect x="24.9002%" y="565" width="9.1780%" height="15" fill="rgb(247,98,4)" fg:x="312" fg:w="115"/><text x="25.1502%" y="575.50">engine::sessi..</text></g><g><title>engine::session::Session::save_changes (114 samples, 9.10%)</title><rect x="24.9800%" y="549" width="9.0982%" height="15" fill="rgb(211,60,12)" fg:x="313" fg:w="114"/><text x="25.2300%" y="559.50">engine::sessi..</text></g><g><title>engine::session::state::State::close (111 samples, 8.86%)</title><rect x="25.2195%" y="533" width="8.8587%" height="15" fill="rgb(224,42,10)" fg:x="316" fg:w="111"/><text x="25.4695%" y="543.50">engine::sessi..</text></g><g><title>engine::session::state::State::flush_entities (111 samples, 8.86%)</title><rect x="25.2195%" y="517" width="8.8587%" height="15" fill="rgb(217,167,4)" fg:x="316" fg:w="111"/><text x="25.4695%" y="527.50">engine::sessi..</text></g><g><title>core::iter::adapters::try_process (109 samples, 8.70%)</title><rect x="25.3791%" y="501" width="8.6991%" height="15" fill="rgb(253,18,17)" fg:x="318" fg:w="109"/><text x="25.6291%" y="511.50">core::iter::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (109 samples, 8.70%)</title><rect x="25.3791%" y="485" width="8.6991%" height="15" fill="rgb(249,186,44)" fg:x="318" fg:w="109"/><text x="25.6291%" y="495.50">&lt;alloc::vec:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (108 samples, 8.62%)</title><rect x="25.4589%" y="469" width="8.6193%" height="15" fill="rgb(254,124,54)" fg:x="319" fg:w="108"/><text x="25.7089%" y="479.50">engine::sess..</text></g><g><title>kernel::model::any_entity_changes (45 samples, 3.59%)</title><rect x="30.4868%" y="453" width="3.5914%" height="15" fill="rgb(220,124,39)" fg:x="382" fg:w="45"/><text x="30.7368%" y="463.50">kern..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (40 samples, 3.19%)</title><rect x="30.8859%" y="437" width="3.1923%" height="15" fill="rgb(225,96,46)" fg:x="387" fg:w="40"/><text x="31.1359%" y="447.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (40 samples, 3.19%)</title><rect x="30.8859%" y="421" width="3.1923%" height="15" fill="rgb(221,106,12)" fg:x="387" fg:w="40"/><text x="31.1359%" y="431.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (36 samples, 2.87%)</title><rect x="31.2051%" y="405" width="2.8731%" height="15" fill="rgb(227,133,23)" fg:x="391" fg:w="36"/><text x="31.4551%" y="415.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.9984%" y="389" width="0.0798%" height="15" fill="rgb(216,44,52)" fg:x="426" fg:w="1"/><text x="34.2484%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="33.9984%" y="373" width="0.0798%" height="15" fill="rgb(239,149,7)" fg:x="426" fg:w="1"/><text x="34.2484%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (2 samples, 0.16%)</title><rect x="34.1580%" y="549" width="0.1596%" height="15" fill="rgb(211,157,31)" fg:x="428" fg:w="2"/><text x="34.4080%" y="559.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (2 samples, 0.16%)</title><rect x="34.1580%" y="533" width="0.1596%" height="15" fill="rgb(206,215,22)" fg:x="428" fg:w="2"/><text x="34.4080%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="34.1580%" y="517" width="0.1596%" height="15" fill="rgb(208,113,15)" fg:x="428" fg:w="2"/><text x="34.4080%" y="527.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="34.3176%" y="533" width="0.0798%" height="15" fill="rgb(207,189,15)" fg:x="430" fg:w="1"/><text x="34.5676%" y="543.50"></text></g><g><title>plugins_core::build::Build::new (5 samples, 0.40%)</title><rect x="34.0782%" y="565" width="0.3990%" height="15" fill="rgb(231,115,4)" fg:x="427" fg:w="5"/><text x="34.3282%" y="575.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="34.3176%" y="549" width="0.1596%" height="15" fill="rgb(253,117,2)" fg:x="430" fg:w="2"/><text x="34.5676%" y="559.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="34.3974%" y="533" width="0.0798%" height="15" fill="rgb(248,48,24)" fg:x="431" fg:w="1"/><text x="34.6474%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="34.3974%" y="517" width="0.0798%" height="15" fill="rgb(241,28,46)" fg:x="431" fg:w="1"/><text x="34.6474%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.3974%" y="501" width="0.0798%" height="15" fill="rgb(216,165,52)" fg:x="431" fg:w="1"/><text x="34.6474%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.3974%" y="485" width="0.0798%" height="15" fill="rgb(220,222,34)" fg:x="431" fg:w="1"/><text x="34.6474%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="34.5571%" y="517" width="0.2394%" height="15" fill="rgb(247,222,49)" fg:x="433" fg:w="3"/><text x="34.8071%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.7167%" y="501" width="0.0798%" height="15" fill="rgb(240,10,31)" fg:x="435" fg:w="1"/><text x="34.9667%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.7167%" y="485" width="0.0798%" height="15" fill="rgb(221,199,35)" fg:x="435" fg:w="1"/><text x="34.9667%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.7167%" y="469" width="0.0798%" height="15" fill="rgb(230,223,11)" fg:x="435" fg:w="1"/><text x="34.9667%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.7965%" y="517" width="0.0798%" height="15" fill="rgb(218,82,45)" fg:x="436" fg:w="1"/><text x="35.0465%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.8763%" y="453" width="0.0798%" height="15" fill="rgb(233,213,33)" fg:x="437" fg:w="1"/><text x="35.1263%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (7 samples, 0.56%)</title><rect x="34.5571%" y="533" width="0.5587%" height="15" fill="rgb(210,143,52)" fg:x="433" fg:w="7"/><text x="34.8071%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="34.8763%" y="517" width="0.2394%" height="15" fill="rgb(206,95,4)" fg:x="437" fg:w="3"/><text x="35.1263%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="34.8763%" y="501" width="0.2394%" height="15" fill="rgb(246,164,46)" fg:x="437" fg:w="3"/><text x="35.1263%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="34.8763%" y="485" width="0.2394%" height="15" fill="rgb(213,210,47)" fg:x="437" fg:w="3"/><text x="35.1263%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="34.8763%" y="469" width="0.2394%" height="15" fill="rgb(210,12,38)" fg:x="437" fg:w="3"/><text x="35.1263%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.9561%" y="453" width="0.1596%" height="15" fill="rgb(252,192,54)" fg:x="438" fg:w="2"/><text x="35.2061%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.9561%" y="437" width="0.1596%" height="15" fill="rgb(242,92,6)" fg:x="438" fg:w="2"/><text x="35.2061%" y="447.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.64%)</title><rect x="34.5571%" y="549" width="0.6385%" height="15" fill="rgb(253,154,15)" fg:x="433" fg:w="8"/><text x="34.8071%" y="559.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="35.1157%" y="533" width="0.0798%" height="15" fill="rgb(209,20,43)" fg:x="440" fg:w="1"/><text x="35.3657%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.1157%" y="517" width="0.0798%" height="15" fill="rgb(232,28,49)" fg:x="440" fg:w="1"/><text x="35.3657%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="35.1157%" y="501" width="0.0798%" height="15" fill="rgb(248,131,53)" fg:x="440" fg:w="1"/><text x="35.3657%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.3551%" y="517" width="0.1596%" height="15" fill="rgb(214,16,30)" fg:x="443" fg:w="2"/><text x="35.6051%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="35.3551%" y="501" width="0.1596%" height="15" fill="rgb(245,16,0)" fg:x="443" fg:w="2"/><text x="35.6051%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.5148%" y="517" width="0.0798%" height="15" fill="rgb(245,17,35)" fg:x="445" fg:w="1"/><text x="35.7648%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="35.5148%" y="501" width="0.0798%" height="15" fill="rgb(249,27,53)" fg:x="445" fg:w="1"/><text x="35.7648%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="35.5946%" y="517" width="0.0798%" height="15" fill="rgb(214,73,24)" fg:x="446" fg:w="1"/><text x="35.8446%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.5946%" y="501" width="0.0798%" height="15" fill="rgb(223,84,37)" fg:x="446" fg:w="1"/><text x="35.8446%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.6744%" y="453" width="0.0798%" height="15" fill="rgb(210,109,28)" fg:x="447" fg:w="1"/><text x="35.9244%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.6744%" y="437" width="0.0798%" height="15" fill="rgb(208,186,6)" fg:x="447" fg:w="1"/><text x="35.9244%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (7 samples, 0.56%)</title><rect x="35.2753%" y="533" width="0.5587%" height="15" fill="rgb(235,201,30)" fg:x="442" fg:w="7"/><text x="35.5253%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.6744%" y="517" width="0.1596%" height="15" fill="rgb(216,198,48)" fg:x="447" fg:w="2"/><text x="35.9244%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.6744%" y="501" width="0.1596%" height="15" fill="rgb(254,186,25)" fg:x="447" fg:w="2"/><text x="35.9244%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="35.6744%" y="485" width="0.1596%" height="15" fill="rgb(227,87,5)" fg:x="447" fg:w="2"/><text x="35.9244%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.6744%" y="469" width="0.1596%" height="15" fill="rgb(236,205,25)" fg:x="447" fg:w="2"/><text x="35.9244%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.7542%" y="453" width="0.0798%" height="15" fill="rgb(229,99,32)" fg:x="448" fg:w="1"/><text x="36.0042%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.7542%" y="437" width="0.0798%" height="15" fill="rgb(231,177,31)" fg:x="448" fg:w="1"/><text x="36.0042%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.7542%" y="421" width="0.0798%" height="15" fill="rgb(246,15,2)" fg:x="448" fg:w="1"/><text x="36.0042%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.8340%" y="501" width="0.0798%" height="15" fill="rgb(207,39,15)" fg:x="449" fg:w="1"/><text x="36.0840%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="35.9138%" y="501" width="0.0798%" height="15" fill="rgb(207,44,9)" fg:x="450" fg:w="1"/><text x="36.1638%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.9138%" y="485" width="0.0798%" height="15" fill="rgb(225,224,33)" fg:x="450" fg:w="1"/><text x="36.1638%" y="495.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (3 samples, 0.24%)</title><rect x="35.8340%" y="517" width="0.2394%" height="15" fill="rgb(252,151,3)" fg:x="449" fg:w="3"/><text x="36.0840%" y="527.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="35.9936%" y="501" width="0.0798%" height="15" fill="rgb(211,140,13)" fg:x="451" fg:w="1"/><text x="36.2436%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.9936%" y="485" width="0.0798%" height="15" fill="rgb(239,225,17)" fg:x="451" fg:w="1"/><text x="36.2436%" y="495.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="35.8340%" y="533" width="0.3192%" height="15" fill="rgb(223,170,52)" fg:x="449" fg:w="4"/><text x="36.0840%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="36.0734%" y="517" width="0.0798%" height="15" fill="rgb(212,64,21)" fg:x="452" fg:w="1"/><text x="36.3234%" y="527.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="36.0734%" y="501" width="0.0798%" height="15" fill="rgb(236,126,48)" fg:x="452" fg:w="1"/><text x="36.3234%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.0734%" y="485" width="0.0798%" height="15" fill="rgb(209,135,11)" fg:x="452" fg:w="1"/><text x="36.3234%" y="495.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="36.0734%" y="469" width="0.0798%" height="15" fill="rgb(228,126,40)" fg:x="452" fg:w="1"/><text x="36.3234%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.0734%" y="453" width="0.0798%" height="15" fill="rgb(205,196,36)" fg:x="452" fg:w="1"/><text x="36.3234%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.0734%" y="437" width="0.0798%" height="15" fill="rgb(243,160,33)" fg:x="452" fg:w="1"/><text x="36.3234%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="36.1532%" y="485" width="0.0798%" height="15" fill="rgb(210,84,20)" fg:x="453" fg:w="1"/><text x="36.4032%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.1532%" y="469" width="0.0798%" height="15" fill="rgb(228,213,30)" fg:x="453" fg:w="1"/><text x="36.4032%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.1532%" y="453" width="0.0798%" height="15" fill="rgb(252,33,45)" fg:x="453" fg:w="1"/><text x="36.4032%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="36.1532%" y="437" width="0.0798%" height="15" fill="rgb(254,227,20)" fg:x="453" fg:w="1"/><text x="36.4032%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.1532%" y="421" width="0.0798%" height="15" fill="rgb(228,192,2)" fg:x="453" fg:w="1"/><text x="36.4032%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.1532%" y="405" width="0.0798%" height="15" fill="rgb(233,32,8)" fg:x="453" fg:w="1"/><text x="36.4032%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.1532%" y="389" width="0.0798%" height="15" fill="rgb(220,146,47)" fg:x="453" fg:w="1"/><text x="36.4032%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.3128%" y="453" width="0.0798%" height="15" fill="rgb(246,194,1)" fg:x="455" fg:w="1"/><text x="36.5628%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.3128%" y="437" width="0.0798%" height="15" fill="rgb(218,203,9)" fg:x="455" fg:w="1"/><text x="36.5628%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.3128%" y="421" width="0.0798%" height="15" fill="rgb(237,97,14)" fg:x="455" fg:w="1"/><text x="36.5628%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="36.1532%" y="517" width="0.4789%" height="15" fill="rgb(239,76,15)" fg:x="453" fg:w="6"/><text x="36.4032%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (6 samples, 0.48%)</title><rect x="36.1532%" y="501" width="0.4789%" height="15" fill="rgb(222,53,45)" fg:x="453" fg:w="6"/><text x="36.4032%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (5 samples, 0.40%)</title><rect x="36.2330%" y="485" width="0.3990%" height="15" fill="rgb(237,88,5)" fg:x="454" fg:w="5"/><text x="36.4830%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="36.2330%" y="469" width="0.3990%" height="15" fill="rgb(218,223,35)" fg:x="454" fg:w="5"/><text x="36.4830%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="36.3927%" y="453" width="0.2394%" height="15" fill="rgb(243,229,38)" fg:x="456" fg:w="3"/><text x="36.6427%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="36.5523%" y="437" width="0.0798%" height="15" fill="rgb(240,75,41)" fg:x="458" fg:w="1"/><text x="36.8023%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.5523%" y="421" width="0.0798%" height="15" fill="rgb(209,110,37)" fg:x="458" fg:w="1"/><text x="36.8023%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="36.6321%" y="485" width="0.1596%" height="15" fill="rgb(221,130,46)" fg:x="459" fg:w="2"/><text x="36.8821%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.7119%" y="469" width="0.0798%" height="15" fill="rgb(237,160,20)" fg:x="460" fg:w="1"/><text x="36.9619%" y="479.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="36.7917%" y="485" width="0.0798%" height="15" fill="rgb(234,126,24)" fg:x="461" fg:w="1"/><text x="37.0417%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.7917%" y="469" width="0.0798%" height="15" fill="rgb(207,177,9)" fg:x="461" fg:w="1"/><text x="37.0417%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.7917%" y="453" width="0.0798%" height="15" fill="rgb(231,191,33)" fg:x="461" fg:w="1"/><text x="37.0417%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.7917%" y="437" width="0.0798%" height="15" fill="rgb(207,42,1)" fg:x="461" fg:w="1"/><text x="37.0417%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (24 samples, 1.92%)</title><rect x="35.1955%" y="549" width="1.9154%" height="15" fill="rgb(218,34,50)" fg:x="441" fg:w="24"/><text x="35.4455%" y="559.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_entity (12 samples, 0.96%)</title><rect x="36.1532%" y="533" width="0.9577%" height="15" fill="rgb(254,126,39)" fg:x="453" fg:w="12"/><text x="36.4032%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (6 samples, 0.48%)</title><rect x="36.6321%" y="517" width="0.4789%" height="15" fill="rgb(251,17,26)" fg:x="459" fg:w="6"/><text x="36.8821%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="36.6321%" y="501" width="0.4789%" height="15" fill="rgb(252,215,34)" fg:x="459" fg:w="6"/><text x="36.8821%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="36.8715%" y="485" width="0.2394%" height="15" fill="rgb(217,120,44)" fg:x="462" fg:w="3"/><text x="37.1215%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="36.8715%" y="469" width="0.2394%" height="15" fill="rgb(211,31,11)" fg:x="462" fg:w="3"/><text x="37.1215%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="36.9513%" y="453" width="0.1596%" height="15" fill="rgb(222,69,51)" fg:x="463" fg:w="2"/><text x="37.2013%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="36.9513%" y="437" width="0.1596%" height="15" fill="rgb(215,229,42)" fg:x="463" fg:w="2"/><text x="37.2013%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="36.9513%" y="421" width="0.1596%" height="15" fill="rgb(212,102,15)" fg:x="463" fg:w="2"/><text x="37.2013%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="36.9513%" y="405" width="0.1596%" height="15" fill="rgb(205,179,41)" fg:x="463" fg:w="2"/><text x="37.2013%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="37.0311%" y="389" width="0.0798%" height="15" fill="rgb(219,148,46)" fg:x="464" fg:w="1"/><text x="37.2811%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="37.0311%" y="373" width="0.0798%" height="15" fill="rgb(243,40,19)" fg:x="464" fg:w="1"/><text x="37.2811%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="37.1109%" y="517" width="0.1596%" height="15" fill="rgb(208,206,34)" fg:x="465" fg:w="2"/><text x="37.3609%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="37.1109%" y="501" width="0.1596%" height="15" fill="rgb(244,184,38)" fg:x="465" fg:w="2"/><text x="37.3609%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.1109%" y="485" width="0.1596%" height="15" fill="rgb(244,151,47)" fg:x="465" fg:w="2"/><text x="37.3609%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.1109%" y="469" width="0.1596%" height="15" fill="rgb(236,134,42)" fg:x="465" fg:w="2"/><text x="37.3609%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="37.1109%" y="453" width="0.1596%" height="15" fill="rgb(233,93,22)" fg:x="465" fg:w="2"/><text x="37.3609%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="37.1109%" y="437" width="0.1596%" height="15" fill="rgb(211,202,10)" fg:x="465" fg:w="2"/><text x="37.3609%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="37.1109%" y="421" width="0.1596%" height="15" fill="rgb(240,63,8)" fg:x="465" fg:w="2"/><text x="37.3609%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="37.1109%" y="405" width="0.1596%" height="15" fill="rgb(214,9,4)" fg:x="465" fg:w="2"/><text x="37.3609%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="37.1109%" y="389" width="0.1596%" height="15" fill="rgb(243,66,45)" fg:x="465" fg:w="2"/><text x="37.3609%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="37.1109%" y="373" width="0.1596%" height="15" fill="rgb(220,50,42)" fg:x="465" fg:w="2"/><text x="37.3609%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="37.1109%" y="357" width="0.1596%" height="15" fill="rgb(220,134,27)" fg:x="465" fg:w="2"/><text x="37.3609%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="37.1109%" y="341" width="0.1596%" height="15" fill="rgb(246,151,50)" fg:x="465" fg:w="2"/><text x="37.3609%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="37.1109%" y="325" width="0.1596%" height="15" fill="rgb(238,216,27)" fg:x="465" fg:w="2"/><text x="37.3609%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="37.1109%" y="309" width="0.1596%" height="15" fill="rgb(250,92,11)" fg:x="465" fg:w="2"/><text x="37.3609%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="37.1109%" y="533" width="0.2394%" height="15" fill="rgb(248,183,6)" fg:x="465" fg:w="3"/><text x="37.3609%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.2706%" y="517" width="0.0798%" height="15" fill="rgb(211,204,50)" fg:x="467" fg:w="1"/><text x="37.5206%" y="527.50"></text></g><g><title>plugins_core::build::Build::save (37 samples, 2.95%)</title><rect x="34.4773%" y="565" width="2.9529%" height="15" fill="rgb(252,55,47)" fg:x="432" fg:w="37"/><text x="34.7273%" y="575.50">plu..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="37.1109%" y="549" width="0.3192%" height="15" fill="rgb(240,198,32)" fg:x="465" fg:w="4"/><text x="37.3609%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.3504%" y="533" width="0.0798%" height="15" fill="rgb(224,203,19)" fg:x="468" fg:w="1"/><text x="37.6004%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.3504%" y="517" width="0.0798%" height="15" fill="rgb(205,27,16)" fg:x="468" fg:w="1"/><text x="37.6004%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.3504%" y="501" width="0.0798%" height="15" fill="rgb(224,226,17)" fg:x="468" fg:w="1"/><text x="37.6004%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.3504%" y="485" width="0.0798%" height="15" fill="rgb(205,216,54)" fg:x="468" fg:w="1"/><text x="37.6004%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.3504%" y="469" width="0.0798%" height="15" fill="rgb(248,168,46)" fg:x="468" fg:w="1"/><text x="37.6004%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.3504%" y="453" width="0.0798%" height="15" fill="rgb(226,111,45)" fg:x="468" fg:w="1"/><text x="37.6004%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.3504%" y="437" width="0.0798%" height="15" fill="rgb(231,15,9)" fg:x="468" fg:w="1"/><text x="37.6004%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.3504%" y="421" width="0.0798%" height="15" fill="rgb(243,168,3)" fg:x="468" fg:w="1"/><text x="37.6004%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.3504%" y="405" width="0.0798%" height="15" fill="rgb(221,220,54)" fg:x="468" fg:w="1"/><text x="37.6004%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.3504%" y="389" width="0.0798%" height="15" fill="rgb(232,174,38)" fg:x="468" fg:w="1"/><text x="37.6004%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.3504%" y="373" width="0.0798%" height="15" fill="rgb(205,14,38)" fg:x="468" fg:w="1"/><text x="37.6004%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.3504%" y="357" width="0.0798%" height="15" fill="rgb(234,89,19)" fg:x="468" fg:w="1"/><text x="37.6004%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.4302%" y="469" width="0.0798%" height="15" fill="rgb(216,68,51)" fg:x="469" fg:w="1"/><text x="37.6802%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.4302%" y="453" width="0.0798%" height="15" fill="rgb(213,49,2)" fg:x="469" fg:w="1"/><text x="37.6802%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.4302%" y="437" width="0.0798%" height="15" fill="rgb(242,146,30)" fg:x="469" fg:w="1"/><text x="37.6802%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.4302%" y="421" width="0.0798%" height="15" fill="rgb(224,188,11)" fg:x="469" fg:w="1"/><text x="37.6802%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.4302%" y="405" width="0.0798%" height="15" fill="rgb(213,159,11)" fg:x="469" fg:w="1"/><text x="37.6802%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.4302%" y="389" width="0.0798%" height="15" fill="rgb(229,13,31)" fg:x="469" fg:w="1"/><text x="37.6802%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.4302%" y="373" width="0.0798%" height="15" fill="rgb(209,103,11)" fg:x="469" fg:w="1"/><text x="37.6802%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.4302%" y="357" width="0.0798%" height="15" fill="rgb(206,3,4)" fg:x="469" fg:w="1"/><text x="37.6802%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.4302%" y="341" width="0.0798%" height="15" fill="rgb(252,10,49)" fg:x="469" fg:w="1"/><text x="37.6802%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.4302%" y="325" width="0.0798%" height="15" fill="rgb(217,160,32)" fg:x="469" fg:w="1"/><text x="37.6802%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.4302%" y="309" width="0.0798%" height="15" fill="rgb(249,196,0)" fg:x="469" fg:w="1"/><text x="37.6802%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.4302%" y="293" width="0.0798%" height="15" fill="rgb(213,17,48)" fg:x="469" fg:w="1"/><text x="37.6802%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.4302%" y="277" width="0.0798%" height="15" fill="rgb(206,42,46)" fg:x="469" fg:w="1"/><text x="37.6802%" y="287.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="37.4302%" y="501" width="0.1596%" height="15" fill="rgb(212,105,24)" fg:x="469" fg:w="2"/><text x="37.6802%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="37.4302%" y="485" width="0.1596%" height="15" fill="rgb(243,216,30)" fg:x="469" fg:w="2"/><text x="37.6802%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.5100%" y="469" width="0.0798%" height="15" fill="rgb(207,121,3)" fg:x="470" fg:w="1"/><text x="37.7600%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.5100%" y="453" width="0.0798%" height="15" fill="rgb(249,78,0)" fg:x="470" fg:w="1"/><text x="37.7600%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="37.5100%" y="437" width="0.0798%" height="15" fill="rgb(244,151,32)" fg:x="470" fg:w="1"/><text x="37.7600%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.5100%" y="421" width="0.0798%" height="15" fill="rgb(228,63,25)" fg:x="470" fg:w="1"/><text x="37.7600%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.6696%" y="405" width="0.0798%" height="15" fill="rgb(231,158,23)" fg:x="472" fg:w="1"/><text x="37.9196%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.6696%" y="389" width="0.0798%" height="15" fill="rgb(248,107,23)" fg:x="472" fg:w="1"/><text x="37.9196%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="37.5898%" y="485" width="0.2394%" height="15" fill="rgb(215,168,21)" fg:x="471" fg:w="3"/><text x="37.8398%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="37.5898%" y="469" width="0.2394%" height="15" fill="rgb(227,83,22)" fg:x="471" fg:w="3"/><text x="37.8398%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="37.5898%" y="453" width="0.2394%" height="15" fill="rgb(217,118,43)" fg:x="471" fg:w="3"/><text x="37.8398%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="37.6696%" y="437" width="0.1596%" height="15" fill="rgb(229,220,41)" fg:x="472" fg:w="2"/><text x="37.9196%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.6696%" y="421" width="0.1596%" height="15" fill="rgb(254,146,46)" fg:x="472" fg:w="2"/><text x="37.9196%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.7494%" y="405" width="0.0798%" height="15" fill="rgb(233,208,31)" fg:x="473" fg:w="1"/><text x="37.9994%" y="415.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (6 samples, 0.48%)</title><rect x="37.4302%" y="533" width="0.4789%" height="15" fill="rgb(222,162,7)" fg:x="469" fg:w="6"/><text x="37.6802%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="37.4302%" y="517" width="0.4789%" height="15" fill="rgb(230,117,45)" fg:x="469" fg:w="6"/><text x="37.6802%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="37.5898%" y="501" width="0.3192%" height="15" fill="rgb(239,163,6)" fg:x="471" fg:w="4"/><text x="37.8398%" y="511.50"></text></g><g><title>kernel::model::props::Props::string_property (1 samples, 0.08%)</title><rect x="37.8292%" y="485" width="0.0798%" height="15" fill="rgb(246,130,17)" fg:x="474" fg:w="1"/><text x="38.0792%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.8292%" y="469" width="0.0798%" height="15" fill="rgb(216,84,5)" fg:x="474" fg:w="1"/><text x="38.0792%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.8292%" y="453" width="0.0798%" height="15" fill="rgb(230,200,21)" fg:x="474" fg:w="1"/><text x="38.0792%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.8292%" y="437" width="0.0798%" height="15" fill="rgb(224,2,8)" fg:x="474" fg:w="1"/><text x="38.0792%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.8292%" y="421" width="0.0798%" height="15" fill="rgb(238,178,10)" fg:x="474" fg:w="1"/><text x="38.0792%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.8292%" y="405" width="0.0798%" height="15" fill="rgb(242,153,24)" fg:x="474" fg:w="1"/><text x="38.0792%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.8292%" y="389" width="0.0798%" height="15" fill="rgb(242,32,48)" fg:x="474" fg:w="1"/><text x="38.0792%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.8292%" y="373" width="0.0798%" height="15" fill="rgb(227,36,0)" fg:x="474" fg:w="1"/><text x="38.0792%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.8292%" y="357" width="0.0798%" height="15" fill="rgb(251,33,35)" fg:x="474" fg:w="1"/><text x="38.0792%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.8292%" y="341" width="0.0798%" height="15" fill="rgb(232,168,51)" fg:x="474" fg:w="1"/><text x="38.0792%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.8292%" y="325" width="0.0798%" height="15" fill="rgb(228,56,10)" fg:x="474" fg:w="1"/><text x="38.0792%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.8292%" y="309" width="0.0798%" height="15" fill="rgb(231,10,26)" fg:x="474" fg:w="1"/><text x="38.0792%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.8292%" y="293" width="0.0798%" height="15" fill="rgb(226,202,12)" fg:x="474" fg:w="1"/><text x="38.0792%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.9090%" y="437" width="0.0798%" height="15" fill="rgb(251,49,21)" fg:x="475" fg:w="1"/><text x="38.1590%" y="447.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="37.9090%" y="517" width="0.1596%" height="15" fill="rgb(206,228,28)" fg:x="475" fg:w="2"/><text x="38.1590%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="37.9090%" y="501" width="0.1596%" height="15" fill="rgb(205,198,31)" fg:x="475" fg:w="2"/><text x="38.1590%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="37.9090%" y="485" width="0.1596%" height="15" fill="rgb(213,69,1)" fg:x="475" fg:w="2"/><text x="38.1590%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="37.9090%" y="469" width="0.1596%" height="15" fill="rgb(209,177,9)" fg:x="475" fg:w="2"/><text x="38.1590%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="37.9090%" y="453" width="0.1596%" height="15" fill="rgb(227,119,30)" fg:x="475" fg:w="2"/><text x="38.1590%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.9888%" y="437" width="0.0798%" height="15" fill="rgb(234,106,41)" fg:x="476" fg:w="1"/><text x="38.2388%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.9888%" y="421" width="0.0798%" height="15" fill="rgb(244,103,47)" fg:x="476" fg:w="1"/><text x="38.2388%" y="431.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (11 samples, 0.88%)</title><rect x="37.4302%" y="565" width="0.8779%" height="15" fill="rgb(212,211,25)" fg:x="469" fg:w="11"/><text x="37.6802%" y="575.50"></text></g><g><title>plugins_core::tools::set_occupying (11 samples, 0.88%)</title><rect x="37.4302%" y="549" width="0.8779%" height="15" fill="rgb(208,63,53)" fg:x="469" fg:w="11"/><text x="37.6802%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (5 samples, 0.40%)</title><rect x="37.9090%" y="533" width="0.3990%" height="15" fill="rgb(213,176,21)" fg:x="475" fg:w="5"/><text x="38.1590%" y="543.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (3 samples, 0.24%)</title><rect x="38.0686%" y="517" width="0.2394%" height="15" fill="rgb(243,124,12)" fg:x="477" fg:w="3"/><text x="38.3186%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="38.0686%" y="501" width="0.2394%" height="15" fill="rgb(239,2,35)" fg:x="477" fg:w="3"/><text x="38.3186%" y="511.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="38.0686%" y="485" width="0.2394%" height="15" fill="rgb(253,169,22)" fg:x="477" fg:w="3"/><text x="38.3186%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="38.0686%" y="469" width="0.2394%" height="15" fill="rgb(254,51,12)" fg:x="477" fg:w="3"/><text x="38.3186%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="38.1484%" y="453" width="0.1596%" height="15" fill="rgb(244,17,47)" fg:x="478" fg:w="2"/><text x="38.3984%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.3081%" y="517" width="0.0798%" height="15" fill="rgb(251,45,46)" fg:x="480" fg:w="1"/><text x="38.5581%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.3081%" y="501" width="0.0798%" height="15" fill="rgb(223,87,43)" fg:x="480" fg:w="1"/><text x="38.5581%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.3081%" y="533" width="0.1596%" height="15" fill="rgb(230,132,31)" fg:x="480" fg:w="2"/><text x="38.5581%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.3879%" y="517" width="0.0798%" height="15" fill="rgb(206,99,1)" fg:x="481" fg:w="1"/><text x="38.6379%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.3879%" y="501" width="0.0798%" height="15" fill="rgb(227,110,25)" fg:x="481" fg:w="1"/><text x="38.6379%" y="511.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (3 samples, 0.24%)</title><rect x="38.3081%" y="549" width="0.2394%" height="15" fill="rgb(217,182,7)" fg:x="480" fg:w="3"/><text x="38.5581%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.4677%" y="533" width="0.0798%" height="15" fill="rgb(250,176,4)" fg:x="482" fg:w="1"/><text x="38.7177%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.4677%" y="517" width="0.0798%" height="15" fill="rgb(244,98,30)" fg:x="482" fg:w="1"/><text x="38.7177%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.4677%" y="501" width="0.0798%" height="15" fill="rgb(228,150,42)" fg:x="482" fg:w="1"/><text x="38.7177%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::moving::model::Occupyable&gt; (1 samples, 0.08%)</title><rect x="38.5475%" y="549" width="0.0798%" height="15" fill="rgb(231,91,46)" fg:x="483" fg:w="1"/><text x="38.7975%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="38.5475%" y="533" width="0.0798%" height="15" fill="rgb(252,161,32)" fg:x="483" fg:w="1"/><text x="38.7975%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.16%)</title><rect x="38.6273%" y="533" width="0.1596%" height="15" fill="rgb(236,69,41)" fg:x="484" fg:w="2"/><text x="38.8773%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.7071%" y="517" width="0.0798%" height="15" fill="rgb(212,160,3)" fg:x="485" fg:w="1"/><text x="38.9571%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.7869%" y="517" width="0.0798%" height="15" fill="rgb(216,5,50)" fg:x="486" fg:w="1"/><text x="39.0369%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="38.7869%" y="501" width="0.0798%" height="15" fill="rgb(241,138,25)" fg:x="486" fg:w="1"/><text x="39.0369%" y="511.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="38.7869%" y="485" width="0.0798%" height="15" fill="rgb(239,42,18)" fg:x="486" fg:w="1"/><text x="39.0369%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.7869%" y="469" width="0.0798%" height="15" fill="rgb(239,40,7)" fg:x="486" fg:w="1"/><text x="39.0369%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.7869%" y="453" width="0.0798%" height="15" fill="rgb(239,11,31)" fg:x="486" fg:w="1"/><text x="39.0369%" y="463.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (8 samples, 0.64%)</title><rect x="38.3081%" y="565" width="0.6385%" height="15" fill="rgb(224,77,40)" fg:x="480" fg:w="8"/><text x="38.5581%" y="575.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (4 samples, 0.32%)</title><rect x="38.6273%" y="549" width="0.3192%" height="15" fill="rgb(226,15,5)" fg:x="484" fg:w="4"/><text x="38.8773%" y="559.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="38.7869%" y="533" width="0.1596%" height="15" fill="rgb(254,188,5)" fg:x="486" fg:w="2"/><text x="39.0369%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="38.8667%" y="517" width="0.0798%" height="15" fill="rgb(241,148,52)" fg:x="487" fg:w="1"/><text x="39.1167%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Route&gt;::serialize (1 samples, 0.08%)</title><rect x="38.8667%" y="501" width="0.0798%" height="15" fill="rgb(251,48,36)" fg:x="487" fg:w="1"/><text x="39.1167%" y="511.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::SimpleRoute&gt;::serialize (1 samples, 0.08%)</title><rect x="38.8667%" y="485" width="0.0798%" height="15" fill="rgb(243,83,13)" fg:x="487" fg:w="1"/><text x="39.1167%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.8667%" y="469" width="0.0798%" height="15" fill="rgb(210,105,0)" fg:x="487" fg:w="1"/><text x="39.1167%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.8667%" y="453" width="0.0798%" height="15" fill="rgb(239,60,36)" fg:x="487" fg:w="1"/><text x="39.1167%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.9465%" y="485" width="0.0798%" height="15" fill="rgb(210,20,0)" fg:x="488" fg:w="1"/><text x="39.1965%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.9465%" y="469" width="0.0798%" height="15" fill="rgb(244,26,53)" fg:x="488" fg:w="1"/><text x="39.1965%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.9465%" y="453" width="0.0798%" height="15" fill="rgb(240,100,49)" fg:x="488" fg:w="1"/><text x="39.1965%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.9465%" y="437" width="0.0798%" height="15" fill="rgb(250,46,45)" fg:x="488" fg:w="1"/><text x="39.1965%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.9465%" y="421" width="0.0798%" height="15" fill="rgb(220,181,29)" fg:x="488" fg:w="1"/><text x="39.1965%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.9465%" y="405" width="0.0798%" height="15" fill="rgb(213,137,33)" fg:x="488" fg:w="1"/><text x="39.1965%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.9465%" y="389" width="0.0798%" height="15" fill="rgb(213,27,48)" fg:x="488" fg:w="1"/><text x="39.1965%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.9465%" y="373" width="0.0798%" height="15" fill="rgb(245,180,39)" fg:x="488" fg:w="1"/><text x="39.1965%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.9465%" y="357" width="0.0798%" height="15" fill="rgb(212,158,42)" fg:x="488" fg:w="1"/><text x="39.1965%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.9465%" y="341" width="0.0798%" height="15" fill="rgb(228,193,18)" fg:x="488" fg:w="1"/><text x="39.1965%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.9465%" y="325" width="0.0798%" height="15" fill="rgb(245,172,29)" fg:x="488" fg:w="1"/><text x="39.1965%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.9465%" y="309" width="0.0798%" height="15" fill="rgb(207,98,24)" fg:x="488" fg:w="1"/><text x="39.1965%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.9465%" y="293" width="0.0798%" height="15" fill="rgb(249,92,26)" fg:x="488" fg:w="1"/><text x="39.1965%" y="303.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="38.9465%" y="517" width="0.1596%" height="15" fill="rgb(217,176,26)" fg:x="488" fg:w="2"/><text x="39.1965%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="38.9465%" y="501" width="0.1596%" height="15" fill="rgb(221,8,39)" fg:x="488" fg:w="2"/><text x="39.1965%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.0263%" y="485" width="0.0798%" height="15" fill="rgb(208,90,18)" fg:x="489" fg:w="1"/><text x="39.2763%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.0263%" y="469" width="0.0798%" height="15" fill="rgb(207,202,30)" fg:x="489" fg:w="1"/><text x="39.2763%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="39.0263%" y="453" width="0.0798%" height="15" fill="rgb(231,124,22)" fg:x="489" fg:w="1"/><text x="39.2763%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.0263%" y="437" width="0.0798%" height="15" fill="rgb(206,15,5)" fg:x="489" fg:w="1"/><text x="39.2763%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.0263%" y="421" width="0.0798%" height="15" fill="rgb(239,16,52)" fg:x="489" fg:w="1"/><text x="39.2763%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.0263%" y="405" width="0.0798%" height="15" fill="rgb(245,213,29)" fg:x="489" fg:w="1"/><text x="39.2763%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.0263%" y="389" width="0.0798%" height="15" fill="rgb(213,203,36)" fg:x="489" fg:w="1"/><text x="39.2763%" y="399.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.24%)</title><rect x="38.9465%" y="549" width="0.2394%" height="15" fill="rgb(209,55,18)" fg:x="488" fg:w="3"/><text x="39.1965%" y="559.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="38.9465%" y="533" width="0.2394%" height="15" fill="rgb(207,133,49)" fg:x="488" fg:w="3"/><text x="39.1965%" y="543.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="39.1061%" y="517" width="0.0798%" height="15" fill="rgb(240,33,46)" fg:x="490" fg:w="1"/><text x="39.3561%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="39.1061%" y="501" width="0.0798%" height="15" fill="rgb(212,35,2)" fg:x="490" fg:w="1"/><text x="39.3561%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.1061%" y="485" width="0.0798%" height="15" fill="rgb(231,119,28)" fg:x="490" fg:w="1"/><text x="39.3561%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.1061%" y="469" width="0.0798%" height="15" fill="rgb(252,178,7)" fg:x="490" fg:w="1"/><text x="39.3561%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.1061%" y="453" width="0.0798%" height="15" fill="rgb(251,91,4)" fg:x="490" fg:w="1"/><text x="39.3561%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.1061%" y="437" width="0.0798%" height="15" fill="rgb(233,122,19)" fg:x="490" fg:w="1"/><text x="39.3561%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.1061%" y="421" width="0.0798%" height="15" fill="rgb(231,208,46)" fg:x="490" fg:w="1"/><text x="39.3561%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.1061%" y="405" width="0.0798%" height="15" fill="rgb(243,15,41)" fg:x="490" fg:w="1"/><text x="39.3561%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.1061%" y="389" width="0.0798%" height="15" fill="rgb(210,32,43)" fg:x="490" fg:w="1"/><text x="39.3561%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.1061%" y="373" width="0.0798%" height="15" fill="rgb(222,177,15)" fg:x="490" fg:w="1"/><text x="39.3561%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="39.1061%" y="357" width="0.0798%" height="15" fill="rgb(244,121,34)" fg:x="490" fg:w="1"/><text x="39.3561%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="39.1061%" y="341" width="0.0798%" height="15" fill="rgb(234,138,4)" fg:x="490" fg:w="1"/><text x="39.3561%" y="351.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="39.1860%" y="549" width="0.0798%" height="15" fill="rgb(240,97,48)" fg:x="491" fg:w="1"/><text x="39.4360%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="39.1860%" y="533" width="0.0798%" height="15" fill="rgb(237,65,54)" fg:x="491" fg:w="1"/><text x="39.4360%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="39.1860%" y="517" width="0.0798%" height="15" fill="rgb(214,25,24)" fg:x="491" fg:w="1"/><text x="39.4360%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="39.1860%" y="501" width="0.0798%" height="15" fill="rgb(213,5,3)" fg:x="491" fg:w="1"/><text x="39.4360%" y="511.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="39.3456%" y="533" width="0.0798%" height="15" fill="rgb(219,81,29)" fg:x="493" fg:w="1"/><text x="39.5956%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.3456%" y="517" width="0.0798%" height="15" fill="rgb(220,43,48)" fg:x="493" fg:w="1"/><text x="39.5956%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.3456%" y="501" width="0.0798%" height="15" fill="rgb(239,157,2)" fg:x="493" fg:w="1"/><text x="39.5956%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.3456%" y="485" width="0.0798%" height="15" fill="rgb(213,104,43)" fg:x="493" fg:w="1"/><text x="39.5956%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.3456%" y="469" width="0.0798%" height="15" fill="rgb(237,84,9)" fg:x="493" fg:w="1"/><text x="39.5956%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.3456%" y="453" width="0.0798%" height="15" fill="rgb(252,6,33)" fg:x="493" fg:w="1"/><text x="39.5956%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.3456%" y="437" width="0.0798%" height="15" fill="rgb(251,172,22)" fg:x="493" fg:w="1"/><text x="39.5956%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.3456%" y="421" width="0.0798%" height="15" fill="rgb(244,91,53)" fg:x="493" fg:w="1"/><text x="39.5956%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.3456%" y="405" width="0.0798%" height="15" fill="rgb(219,29,30)" fg:x="493" fg:w="1"/><text x="39.5956%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.3456%" y="389" width="0.0798%" height="15" fill="rgb(213,3,15)" fg:x="493" fg:w="1"/><text x="39.5956%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.3456%" y="373" width="0.0798%" height="15" fill="rgb(208,25,28)" fg:x="493" fg:w="1"/><text x="39.5956%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.3456%" y="357" width="0.0798%" height="15" fill="rgb(252,144,25)" fg:x="493" fg:w="1"/><text x="39.5956%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.3456%" y="341" width="0.0798%" height="15" fill="rgb(226,220,25)" fg:x="493" fg:w="1"/><text x="39.5956%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.3456%" y="325" width="0.0798%" height="15" fill="rgb(212,131,28)" fg:x="493" fg:w="1"/><text x="39.5956%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.3456%" y="309" width="0.0798%" height="15" fill="rgb(219,143,52)" fg:x="493" fg:w="1"/><text x="39.5956%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.3456%" y="293" width="0.0798%" height="15" fill="rgb(215,56,7)" fg:x="493" fg:w="1"/><text x="39.5956%" y="303.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="39.4254%" y="501" width="0.0798%" height="15" fill="rgb(239,59,51)" fg:x="494" fg:w="1"/><text x="39.6754%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="39.4254%" y="485" width="0.0798%" height="15" fill="rgb(209,215,4)" fg:x="494" fg:w="1"/><text x="39.6754%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.4254%" y="469" width="0.0798%" height="15" fill="rgb(221,118,39)" fg:x="494" fg:w="1"/><text x="39.6754%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.4254%" y="453" width="0.0798%" height="15" fill="rgb(236,6,44)" fg:x="494" fg:w="1"/><text x="39.6754%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="39.4254%" y="437" width="0.0798%" height="15" fill="rgb(216,122,9)" fg:x="494" fg:w="1"/><text x="39.6754%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.4254%" y="421" width="0.0798%" height="15" fill="rgb(244,134,42)" fg:x="494" fg:w="1"/><text x="39.6754%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.4254%" y="405" width="0.0798%" height="15" fill="rgb(209,189,35)" fg:x="494" fg:w="1"/><text x="39.6754%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.4254%" y="389" width="0.0798%" height="15" fill="rgb(250,47,36)" fg:x="494" fg:w="1"/><text x="39.6754%" y="399.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="39.2658%" y="549" width="0.3192%" height="15" fill="rgb(252,112,4)" fg:x="492" fg:w="4"/><text x="39.5158%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="39.4254%" y="533" width="0.1596%" height="15" fill="rgb(221,79,51)" fg:x="494" fg:w="2"/><text x="39.6754%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="39.4254%" y="517" width="0.1596%" height="15" fill="rgb(232,65,53)" fg:x="494" fg:w="2"/><text x="39.6754%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="39.5052%" y="501" width="0.0798%" height="15" fill="rgb(211,37,7)" fg:x="495" fg:w="1"/><text x="39.7552%" y="511.50"></text></g><g><title>kernel::model::props::Props::string_property (1 samples, 0.08%)</title><rect x="39.5052%" y="485" width="0.0798%" height="15" fill="rgb(234,221,18)" fg:x="495" fg:w="1"/><text x="39.7552%" y="495.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (197 samples, 15.72%)</title><rect x="24.0223%" y="581" width="15.7223%" height="15" fill="rgb(220,158,26)" fg:x="301" fg:w="197"/><text x="24.2723%" y="591.50">plugins_core::build::Bui..</text></g><g><title>plugins_core::tools::set_container (10 samples, 0.80%)</title><rect x="38.9465%" y="565" width="0.7981%" height="15" fill="rgb(220,70,6)" fg:x="488" fg:w="10"/><text x="39.1965%" y="575.50"></text></g><g><title>plugins_core::location::model::Location::set (2 samples, 0.16%)</title><rect x="39.5850%" y="549" width="0.1596%" height="15" fill="rgb(250,39,48)" fg:x="496" fg:w="2"/><text x="39.8350%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="39.5850%" y="533" width="0.1596%" height="15" fill="rgb(206,40,27)" fg:x="496" fg:w="2"/><text x="39.8350%" y="543.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="39.5850%" y="517" width="0.1596%" height="15" fill="rgb(247,80,36)" fg:x="496" fg:w="2"/><text x="39.8350%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="39.5850%" y="501" width="0.1596%" height="15" fill="rgb(222,9,20)" fg:x="496" fg:w="2"/><text x="39.8350%" y="511.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="39.5850%" y="485" width="0.1596%" height="15" fill="rgb(217,26,45)" fg:x="496" fg:w="2"/><text x="39.8350%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.6648%" y="469" width="0.0798%" height="15" fill="rgb(221,67,14)" fg:x="497" fg:w="1"/><text x="39.9148%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.6648%" y="453" width="0.0798%" height="15" fill="rgb(248,100,24)" fg:x="497" fg:w="1"/><text x="39.9148%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="39.7446%" y="549" width="0.0798%" height="15" fill="rgb(230,187,16)" fg:x="498" fg:w="1"/><text x="39.9946%" y="559.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="39.7446%" y="533" width="0.0798%" height="15" fill="rgb(205,108,13)" fg:x="498" fg:w="1"/><text x="39.9946%" y="543.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="39.7446%" y="517" width="0.0798%" height="15" fill="rgb(235,71,51)" fg:x="498" fg:w="1"/><text x="39.9946%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.7446%" y="501" width="0.0798%" height="15" fill="rgb(251,172,48)" fg:x="498" fg:w="1"/><text x="39.9946%" y="511.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (4 samples, 0.32%)</title><rect x="39.7446%" y="581" width="0.3192%" height="15" fill="rgb(240,96,49)" fg:x="498" fg:w="4"/><text x="39.9946%" y="591.50"></text></g><g><title>plugins_core::build::Build::new (4 samples, 0.32%)</title><rect x="39.7446%" y="565" width="0.3192%" height="15" fill="rgb(235,46,36)" fg:x="498" fg:w="4"/><text x="39.9946%" y="575.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.24%)</title><rect x="39.8244%" y="549" width="0.2394%" height="15" fill="rgb(244,3,49)" fg:x="499" fg:w="3"/><text x="40.0744%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="39.9840%" y="533" width="0.0798%" height="15" fill="rgb(206,78,54)" fg:x="501" fg:w="1"/><text x="40.2340%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="39.9840%" y="517" width="0.0798%" height="15" fill="rgb(208,85,42)" fg:x="501" fg:w="1"/><text x="40.2340%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.9840%" y="501" width="0.0798%" height="15" fill="rgb(219,196,21)" fg:x="501" fg:w="1"/><text x="40.2340%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.0638%" y="517" width="0.0798%" height="15" fill="rgb(238,19,9)" fg:x="502" fg:w="1"/><text x="40.3138%" y="527.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="40.0638%" y="533" width="0.1596%" height="15" fill="rgb(206,86,13)" fg:x="502" fg:w="2"/><text x="40.3138%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.1437%" y="517" width="0.0798%" height="15" fill="rgb(214,123,40)" fg:x="503" fg:w="1"/><text x="40.3937%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.1437%" y="501" width="0.0798%" height="15" fill="rgb(243,53,5)" fg:x="503" fg:w="1"/><text x="40.3937%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.1437%" y="485" width="0.0798%" height="15" fill="rgb(254,186,31)" fg:x="503" fg:w="1"/><text x="40.3937%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (3 samples, 0.24%)</title><rect x="40.0638%" y="549" width="0.2394%" height="15" fill="rgb(221,216,25)" fg:x="502" fg:w="3"/><text x="40.3138%" y="559.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="40.2235%" y="533" width="0.0798%" height="15" fill="rgb(248,107,42)" fg:x="504" fg:w="1"/><text x="40.4735%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.2235%" y="517" width="0.0798%" height="15" fill="rgb(221,85,43)" fg:x="504" fg:w="1"/><text x="40.4735%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="40.3033%" y="549" width="0.0798%" height="15" fill="rgb(225,34,24)" fg:x="505" fg:w="1"/><text x="40.5533%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.3033%" y="533" width="0.0798%" height="15" fill="rgb(211,119,1)" fg:x="505" fg:w="1"/><text x="40.5533%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.3033%" y="517" width="0.0798%" height="15" fill="rgb(254,216,46)" fg:x="505" fg:w="1"/><text x="40.5533%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.3033%" y="501" width="0.0798%" height="15" fill="rgb(238,11,38)" fg:x="505" fg:w="1"/><text x="40.5533%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.4629%" y="469" width="0.0798%" height="15" fill="rgb(233,50,15)" fg:x="507" fg:w="1"/><text x="40.7129%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.4629%" y="453" width="0.0798%" height="15" fill="rgb(217,181,29)" fg:x="507" fg:w="1"/><text x="40.7129%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.4629%" y="437" width="0.0798%" height="15" fill="rgb(214,56,3)" fg:x="507" fg:w="1"/><text x="40.7129%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.4629%" y="421" width="0.0798%" height="15" fill="rgb(230,69,45)" fg:x="507" fg:w="1"/><text x="40.7129%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.4629%" y="405" width="0.0798%" height="15" fill="rgb(224,201,50)" fg:x="507" fg:w="1"/><text x="40.7129%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.4629%" y="389" width="0.0798%" height="15" fill="rgb(217,228,18)" fg:x="507" fg:w="1"/><text x="40.7129%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.4629%" y="373" width="0.0798%" height="15" fill="rgb(239,33,44)" fg:x="507" fg:w="1"/><text x="40.7129%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.4629%" y="357" width="0.0798%" height="15" fill="rgb(248,210,23)" fg:x="507" fg:w="1"/><text x="40.7129%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.4629%" y="341" width="0.0798%" height="15" fill="rgb(253,135,8)" fg:x="507" fg:w="1"/><text x="40.7129%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.4629%" y="325" width="0.0798%" height="15" fill="rgb(217,98,21)" fg:x="507" fg:w="1"/><text x="40.7129%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.4629%" y="309" width="0.0798%" height="15" fill="rgb(253,130,21)" fg:x="507" fg:w="1"/><text x="40.7129%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.4629%" y="293" width="0.0798%" height="15" fill="rgb(207,81,54)" fg:x="507" fg:w="1"/><text x="40.7129%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.4629%" y="277" width="0.0798%" height="15" fill="rgb(232,48,33)" fg:x="507" fg:w="1"/><text x="40.7129%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.4629%" y="501" width="0.1596%" height="15" fill="rgb(211,9,35)" fg:x="507" fg:w="2"/><text x="40.7129%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.4629%" y="485" width="0.1596%" height="15" fill="rgb(205,152,21)" fg:x="507" fg:w="2"/><text x="40.7129%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.5427%" y="469" width="0.0798%" height="15" fill="rgb(249,21,27)" fg:x="508" fg:w="1"/><text x="40.7927%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="40.4629%" y="533" width="0.2394%" height="15" fill="rgb(252,29,24)" fg:x="507" fg:w="3"/><text x="40.7129%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="40.4629%" y="517" width="0.2394%" height="15" fill="rgb(230,130,50)" fg:x="507" fg:w="3"/><text x="40.7129%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.6225%" y="501" width="0.0798%" height="15" fill="rgb(239,144,14)" fg:x="509" fg:w="1"/><text x="40.8725%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.6225%" y="485" width="0.0798%" height="15" fill="rgb(227,111,50)" fg:x="509" fg:w="1"/><text x="40.8725%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="40.6225%" y="469" width="0.0798%" height="15" fill="rgb(254,84,20)" fg:x="509" fg:w="1"/><text x="40.8725%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.6225%" y="453" width="0.0798%" height="15" fill="rgb(232,90,48)" fg:x="509" fg:w="1"/><text x="40.8725%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.6225%" y="437" width="0.0798%" height="15" fill="rgb(253,63,47)" fg:x="509" fg:w="1"/><text x="40.8725%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.16%)</title><rect x="40.7821%" y="485" width="0.1596%" height="15" fill="rgb(251,146,35)" fg:x="511" fg:w="2"/><text x="41.0321%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.8619%" y="469" width="0.0798%" height="15" fill="rgb(229,192,35)" fg:x="512" fg:w="1"/><text x="41.1119%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.8619%" y="453" width="0.0798%" height="15" fill="rgb(225,68,9)" fg:x="512" fg:w="1"/><text x="41.1119%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="40.8619%" y="437" width="0.0798%" height="15" fill="rgb(214,97,34)" fg:x="512" fg:w="1"/><text x="41.1119%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.0215%" y="453" width="0.0798%" height="15" fill="rgb(253,31,26)" fg:x="514" fg:w="1"/><text x="41.2715%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.0215%" y="437" width="0.0798%" height="15" fill="rgb(225,151,47)" fg:x="514" fg:w="1"/><text x="41.2715%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="41.0215%" y="421" width="0.0798%" height="15" fill="rgb(206,185,9)" fg:x="514" fg:w="1"/><text x="41.2715%" y="431.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (5 samples, 0.40%)</title><rect x="40.7821%" y="517" width="0.3990%" height="15" fill="rgb(249,65,17)" fg:x="511" fg:w="5"/><text x="41.0321%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (5 samples, 0.40%)</title><rect x="40.7821%" y="501" width="0.3990%" height="15" fill="rgb(220,110,10)" fg:x="511" fg:w="5"/><text x="41.0321%" y="511.50"></text></g><g><title>serde_json::value::to_value (3 samples, 0.24%)</title><rect x="40.9417%" y="485" width="0.2394%" height="15" fill="rgb(222,198,49)" fg:x="513" fg:w="3"/><text x="41.1917%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="40.9417%" y="469" width="0.2394%" height="15" fill="rgb(239,81,13)" fg:x="513" fg:w="3"/><text x="41.1917%" y="479.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="41.1014%" y="453" width="0.0798%" height="15" fill="rgb(216,128,11)" fg:x="515" fg:w="1"/><text x="41.3514%" y="463.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="41.1812%" y="501" width="0.0798%" height="15" fill="rgb(247,156,8)" fg:x="516" fg:w="1"/><text x="41.4312%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="41.1812%" y="485" width="0.0798%" height="15" fill="rgb(219,173,1)" fg:x="516" fg:w="1"/><text x="41.4312%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="41.1812%" y="469" width="0.0798%" height="15" fill="rgb(227,42,24)" fg:x="516" fg:w="1"/><text x="41.4312%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.1812%" y="453" width="0.0798%" height="15" fill="rgb(253,219,50)" fg:x="516" fg:w="1"/><text x="41.4312%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.1812%" y="437" width="0.0798%" height="15" fill="rgb(215,191,54)" fg:x="516" fg:w="1"/><text x="41.4312%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="41.1812%" y="421" width="0.0798%" height="15" fill="rgb(238,83,12)" fg:x="516" fg:w="1"/><text x="41.4312%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.1812%" y="405" width="0.0798%" height="15" fill="rgb(205,124,9)" fg:x="516" fg:w="1"/><text x="41.4312%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.1812%" y="389" width="0.0798%" height="15" fill="rgb(253,174,7)" fg:x="516" fg:w="1"/><text x="41.4312%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.2610%" y="469" width="0.0798%" height="15" fill="rgb(206,134,49)" fg:x="517" fg:w="1"/><text x="41.5110%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.4206%" y="389" width="0.0798%" height="15" fill="rgb(221,89,20)" fg:x="519" fg:w="1"/><text x="41.6706%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.4206%" y="373" width="0.0798%" height="15" fill="rgb(240,205,13)" fg:x="519" fg:w="1"/><text x="41.6706%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.4206%" y="357" width="0.0798%" height="15" fill="rgb(237,174,32)" fg:x="519" fg:w="1"/><text x="41.6706%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="41.3408%" y="469" width="0.2394%" height="15" fill="rgb(226,12,15)" fg:x="518" fg:w="3"/><text x="41.5908%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="41.3408%" y="453" width="0.2394%" height="15" fill="rgb(245,160,52)" fg:x="518" fg:w="3"/><text x="41.5908%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="41.3408%" y="437" width="0.2394%" height="15" fill="rgb(253,80,21)" fg:x="518" fg:w="3"/><text x="41.5908%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="41.3408%" y="421" width="0.2394%" height="15" fill="rgb(231,225,22)" fg:x="518" fg:w="3"/><text x="41.5908%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="41.4206%" y="405" width="0.1596%" height="15" fill="rgb(253,185,12)" fg:x="519" fg:w="2"/><text x="41.6706%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="41.5004%" y="389" width="0.0798%" height="15" fill="rgb(234,197,21)" fg:x="520" fg:w="1"/><text x="41.7504%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="41.5004%" y="373" width="0.0798%" height="15" fill="rgb(210,47,30)" fg:x="520" fg:w="1"/><text x="41.7504%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="41.5004%" y="357" width="0.0798%" height="15" fill="rgb(246,139,27)" fg:x="520" fg:w="1"/><text x="41.7504%" y="367.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (20 samples, 1.60%)</title><rect x="40.0638%" y="581" width="1.5962%" height="15" fill="rgb(226,130,16)" fg:x="502" fg:w="20"/><text x="40.3138%" y="591.50"></text></g><g><title>plugins_core::build::QuickThing::make (20 samples, 1.60%)</title><rect x="40.0638%" y="565" width="1.5962%" height="15" fill="rgb(237,208,20)" fg:x="502" fg:w="20"/><text x="40.3138%" y="575.50"></text></g><g><title>plugins_core::build::Build::save (16 samples, 1.28%)</title><rect x="40.3831%" y="549" width="1.2769%" height="15" fill="rgb(245,186,28)" fg:x="506" fg:w="16"/><text x="40.6331%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.96%)</title><rect x="40.7023%" y="533" width="0.9577%" height="15" fill="rgb(238,105,39)" fg:x="510" fg:w="12"/><text x="40.9523%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="41.1812%" y="517" width="0.4789%" height="15" fill="rgb(253,228,11)" fg:x="516" fg:w="6"/><text x="41.4312%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (5 samples, 0.40%)</title><rect x="41.2610%" y="501" width="0.3990%" height="15" fill="rgb(224,136,38)" fg:x="517" fg:w="5"/><text x="41.5110%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="41.2610%" y="485" width="0.3990%" height="15" fill="rgb(211,3,25)" fg:x="517" fg:w="5"/><text x="41.5110%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="41.5802%" y="469" width="0.0798%" height="15" fill="rgb(238,66,34)" fg:x="521" fg:w="1"/><text x="41.8302%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="41.5802%" y="453" width="0.0798%" height="15" fill="rgb(223,188,11)" fg:x="521" fg:w="1"/><text x="41.8302%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.5802%" y="437" width="0.0798%" height="15" fill="rgb(221,10,35)" fg:x="521" fg:w="1"/><text x="41.8302%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.5802%" y="421" width="0.0798%" height="15" fill="rgb(223,18,44)" fg:x="521" fg:w="1"/><text x="41.8302%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.5802%" y="405" width="0.0798%" height="15" fill="rgb(220,97,41)" fg:x="521" fg:w="1"/><text x="41.8302%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.6600%" y="533" width="0.0798%" height="15" fill="rgb(206,95,45)" fg:x="522" fg:w="1"/><text x="41.9100%" y="543.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (3 samples, 0.24%)</title><rect x="41.6600%" y="549" width="0.2394%" height="15" fill="rgb(209,96,13)" fg:x="522" fg:w="3"/><text x="41.9100%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.7398%" y="533" width="0.1596%" height="15" fill="rgb(237,39,34)" fg:x="523" fg:w="2"/><text x="41.9898%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.7398%" y="517" width="0.1596%" height="15" fill="rgb(213,49,47)" fg:x="523" fg:w="2"/><text x="41.9898%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.8196%" y="501" width="0.0798%" height="15" fill="rgb(205,107,27)" fg:x="524" fg:w="1"/><text x="42.0696%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (3 samples, 0.24%)</title><rect x="41.8994%" y="549" width="0.2394%" height="15" fill="rgb(212,142,9)" fg:x="525" fg:w="3"/><text x="42.1494%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (2 samples, 0.16%)</title><rect x="41.9792%" y="533" width="0.1596%" height="15" fill="rgb(226,182,0)" fg:x="526" fg:w="2"/><text x="42.2292%" y="543.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="42.1389%" y="549" width="0.0798%" height="15" fill="rgb(231,3,53)" fg:x="528" fg:w="1"/><text x="42.3889%" y="559.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="42.1389%" y="533" width="0.0798%" height="15" fill="rgb(246,111,28)" fg:x="528" fg:w="1"/><text x="42.3889%" y="543.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (8 samples, 0.64%)</title><rect x="41.6600%" y="565" width="0.6385%" height="15" fill="rgb(254,183,7)" fg:x="522" fg:w="8"/><text x="41.9100%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="42.2187%" y="549" width="0.0798%" height="15" fill="rgb(247,177,28)" fg:x="529" fg:w="1"/><text x="42.4687%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.2187%" y="533" width="0.0798%" height="15" fill="rgb(244,43,1)" fg:x="529" fg:w="1"/><text x="42.4687%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="42.2985%" y="565" width="0.0798%" height="15" fill="rgb(207,2,35)" fg:x="530" fg:w="1"/><text x="42.5485%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.2985%" y="549" width="0.0798%" height="15" fill="rgb(213,83,22)" fg:x="530" fg:w="1"/><text x="42.5485%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.2985%" y="533" width="0.0798%" height="15" fill="rgb(246,212,13)" fg:x="530" fg:w="1"/><text x="42.5485%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.2985%" y="517" width="0.0798%" height="15" fill="rgb(213,127,46)" fg:x="530" fg:w="1"/><text x="42.5485%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (1 samples, 0.08%)</title><rect x="42.3783%" y="565" width="0.0798%" height="15" fill="rgb(219,215,39)" fg:x="531" fg:w="1"/><text x="42.6283%" y="575.50"></text></g><g><title>plugins_core::build::Build::new_world (2 samples, 0.16%)</title><rect x="42.4581%" y="565" width="0.1596%" height="15" fill="rgb(227,99,17)" fg:x="532" fg:w="2"/><text x="42.7081%" y="575.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="42.4581%" y="549" width="0.1596%" height="15" fill="rgb(208,155,18)" fg:x="532" fg:w="2"/><text x="42.7081%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="42.5379%" y="533" width="0.0798%" height="15" fill="rgb(223,204,38)" fg:x="533" fg:w="1"/><text x="42.7879%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="42.5379%" y="517" width="0.0798%" height="15" fill="rgb(212,114,21)" fg:x="533" fg:w="1"/><text x="42.7879%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="42.6975%" y="533" width="0.0798%" height="15" fill="rgb(250,74,13)" fg:x="535" fg:w="1"/><text x="42.9475%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.6975%" y="517" width="0.0798%" height="15" fill="rgb(234,7,1)" fg:x="535" fg:w="1"/><text x="42.9475%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.6975%" y="501" width="0.0798%" height="15" fill="rgb(207,138,31)" fg:x="535" fg:w="1"/><text x="42.9475%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="42.6975%" y="485" width="0.0798%" height="15" fill="rgb(215,186,42)" fg:x="535" fg:w="1"/><text x="42.9475%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.6975%" y="469" width="0.0798%" height="15" fill="rgb(229,205,49)" fg:x="535" fg:w="1"/><text x="42.9475%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="42.6975%" y="453" width="0.0798%" height="15" fill="rgb(216,156,32)" fg:x="535" fg:w="1"/><text x="42.9475%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.6975%" y="437" width="0.0798%" height="15" fill="rgb(238,7,21)" fg:x="535" fg:w="1"/><text x="42.9475%" y="447.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="42.6975%" y="549" width="0.1596%" height="15" fill="rgb(249,190,22)" fg:x="535" fg:w="2"/><text x="42.9475%" y="559.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="42.7773%" y="533" width="0.0798%" height="15" fill="rgb(253,51,31)" fg:x="536" fg:w="1"/><text x="43.0273%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.9370%" y="517" width="0.0798%" height="15" fill="rgb(237,90,54)" fg:x="538" fg:w="1"/><text x="43.1870%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="42.9370%" y="533" width="0.1596%" height="15" fill="rgb(250,214,33)" fg:x="538" fg:w="2"/><text x="43.1870%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.0168%" y="517" width="0.0798%" height="15" fill="rgb(237,10,49)" fg:x="539" fg:w="1"/><text x="43.2668%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0168%" y="501" width="0.0798%" height="15" fill="rgb(241,56,36)" fg:x="539" fg:w="1"/><text x="43.2668%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="43.0168%" y="485" width="0.0798%" height="15" fill="rgb(227,164,12)" fg:x="539" fg:w="1"/><text x="43.2668%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0168%" y="469" width="0.0798%" height="15" fill="rgb(249,149,35)" fg:x="539" fg:w="1"/><text x="43.2668%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.0168%" y="453" width="0.0798%" height="15" fill="rgb(238,227,50)" fg:x="539" fg:w="1"/><text x="43.2668%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0168%" y="437" width="0.0798%" height="15" fill="rgb(235,102,45)" fg:x="539" fg:w="1"/><text x="43.2668%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="43.0966%" y="469" width="0.0798%" height="15" fill="rgb(211,10,38)" fg:x="540" fg:w="1"/><text x="43.3466%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="43.2562%" y="405" width="0.0798%" height="15" fill="rgb(219,77,48)" fg:x="542" fg:w="1"/><text x="43.5062%" y="415.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="43.2562%" y="389" width="0.0798%" height="15" fill="rgb(246,6,15)" fg:x="542" fg:w="1"/><text x="43.5062%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.3360%" y="405" width="0.0798%" height="15" fill="rgb(207,220,2)" fg:x="543" fg:w="1"/><text x="43.5860%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="43.3360%" y="389" width="0.0798%" height="15" fill="rgb(242,48,14)" fg:x="543" fg:w="1"/><text x="43.5860%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (5 samples, 0.40%)</title><rect x="43.0966%" y="485" width="0.3990%" height="15" fill="rgb(218,19,27)" fg:x="540" fg:w="5"/><text x="43.3466%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="43.1764%" y="469" width="0.3192%" height="15" fill="rgb(228,0,35)" fg:x="541" fg:w="4"/><text x="43.4264%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="43.2562%" y="453" width="0.2394%" height="15" fill="rgb(244,142,54)" fg:x="542" fg:w="3"/><text x="43.5062%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="43.2562%" y="437" width="0.2394%" height="15" fill="rgb(243,217,40)" fg:x="542" fg:w="3"/><text x="43.5062%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="43.2562%" y="421" width="0.2394%" height="15" fill="rgb(207,114,16)" fg:x="542" fg:w="3"/><text x="43.5062%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.4158%" y="405" width="0.0798%" height="15" fill="rgb(224,33,25)" fg:x="544" fg:w="1"/><text x="43.6658%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.4158%" y="389" width="0.0798%" height="15" fill="rgb(230,93,54)" fg:x="544" fg:w="1"/><text x="43.6658%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="43.4956%" y="469" width="0.0798%" height="15" fill="rgb(224,56,24)" fg:x="545" fg:w="1"/><text x="43.7456%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.16%)</title><rect x="43.4956%" y="485" width="0.1596%" height="15" fill="rgb(235,189,50)" fg:x="545" fg:w="2"/><text x="43.7456%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.5754%" y="469" width="0.0798%" height="15" fill="rgb(242,173,8)" fg:x="546" fg:w="1"/><text x="43.8254%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="43.5754%" y="453" width="0.0798%" height="15" fill="rgb(209,206,10)" fg:x="546" fg:w="1"/><text x="43.8254%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="43.6552%" y="437" width="0.0798%" height="15" fill="rgb(213,182,44)" fg:x="547" fg:w="1"/><text x="43.9052%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (9 samples, 0.72%)</title><rect x="43.0966%" y="517" width="0.7183%" height="15" fill="rgb(243,51,15)" fg:x="540" fg:w="9"/><text x="43.3466%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (9 samples, 0.72%)</title><rect x="43.0966%" y="501" width="0.7183%" height="15" fill="rgb(241,13,14)" fg:x="540" fg:w="9"/><text x="43.3466%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="43.6552%" y="485" width="0.1596%" height="15" fill="rgb(239,147,24)" fg:x="547" fg:w="2"/><text x="43.9052%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="43.6552%" y="469" width="0.1596%" height="15" fill="rgb(223,129,16)" fg:x="547" fg:w="2"/><text x="43.9052%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="43.6552%" y="453" width="0.1596%" height="15" fill="rgb(209,169,13)" fg:x="547" fg:w="2"/><text x="43.9052%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="43.7350%" y="437" width="0.0798%" height="15" fill="rgb(235,159,41)" fg:x="548" fg:w="1"/><text x="43.9850%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.8148%" y="517" width="0.0798%" height="15" fill="rgb(223,219,48)" fg:x="549" fg:w="1"/><text x="44.0648%" y="527.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="43.8947%" y="517" width="0.1596%" height="15" fill="rgb(236,80,13)" fg:x="550" fg:w="2"/><text x="44.1447%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="43.8947%" y="501" width="0.1596%" height="15" fill="rgb(213,5,6)" fg:x="550" fg:w="2"/><text x="44.1447%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="43.8947%" y="485" width="0.1596%" height="15" fill="rgb(205,59,21)" fg:x="550" fg:w="2"/><text x="44.1447%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="44.0543%" y="501" width="0.0798%" height="15" fill="rgb(247,137,35)" fg:x="552" fg:w="1"/><text x="44.3043%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="44.2139%" y="485" width="0.0798%" height="15" fill="rgb(242,208,28)" fg:x="554" fg:w="1"/><text x="44.4639%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="44.2139%" y="469" width="0.0798%" height="15" fill="rgb(245,62,25)" fg:x="554" fg:w="1"/><text x="44.4639%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_entity (16 samples, 1.28%)</title><rect x="43.0966%" y="533" width="1.2769%" height="15" fill="rgb(233,99,54)" fg:x="540" fg:w="16"/><text x="43.3466%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="44.0543%" y="517" width="0.3192%" height="15" fill="rgb(213,10,37)" fg:x="552" fg:w="4"/><text x="44.3043%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="44.1341%" y="501" width="0.2394%" height="15" fill="rgb(235,143,30)" fg:x="553" fg:w="3"/><text x="44.3841%" y="511.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="44.2937%" y="485" width="0.0798%" height="15" fill="rgb(250,146,33)" fg:x="555" fg:w="1"/><text x="44.5437%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.2937%" y="469" width="0.0798%" height="15" fill="rgb(226,198,42)" fg:x="555" fg:w="1"/><text x="44.5437%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.2937%" y="453" width="0.0798%" height="15" fill="rgb(222,55,6)" fg:x="555" fg:w="1"/><text x="44.5437%" y="463.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.08%)</title><rect x="44.3735%" y="533" width="0.0798%" height="15" fill="rgb(213,224,31)" fg:x="556" fg:w="1"/><text x="44.6235%" y="543.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="44.3735%" y="517" width="0.0798%" height="15" fill="rgb(226,103,35)" fg:x="556" fg:w="1"/><text x="44.6235%" y="527.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="44.3735%" y="501" width="0.0798%" height="15" fill="rgb(205,66,45)" fg:x="556" fg:w="1"/><text x="44.6235%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (21 samples, 1.68%)</title><rect x="42.8571%" y="549" width="1.6760%" height="15" fill="rgb(226,51,42)" fg:x="537" fg:w="21"/><text x="43.1071%" y="559.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="44.4533%" y="533" width="0.0798%" height="15" fill="rgb(206,69,1)" fg:x="557" fg:w="1"/><text x="44.7033%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.4533%" y="517" width="0.0798%" height="15" fill="rgb(213,228,47)" fg:x="557" fg:w="1"/><text x="44.7033%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.5331%" y="501" width="0.0798%" height="15" fill="rgb(224,204,18)" fg:x="558" fg:w="1"/><text x="44.7831%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="44.5331%" y="533" width="0.1596%" height="15" fill="rgb(253,187,47)" fg:x="558" fg:w="2"/><text x="44.7831%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="44.5331%" y="517" width="0.1596%" height="15" fill="rgb(232,61,2)" fg:x="558" fg:w="2"/><text x="44.7831%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.6129%" y="501" width="0.0798%" height="15" fill="rgb(213,132,35)" fg:x="559" fg:w="1"/><text x="44.8629%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.6129%" y="485" width="0.0798%" height="15" fill="rgb(247,33,21)" fg:x="559" fg:w="1"/><text x="44.8629%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.6129%" y="469" width="0.0798%" height="15" fill="rgb(233,71,46)" fg:x="559" fg:w="1"/><text x="44.8629%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.6129%" y="453" width="0.0798%" height="15" fill="rgb(222,173,43)" fg:x="559" fg:w="1"/><text x="44.8629%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.6129%" y="437" width="0.0798%" height="15" fill="rgb(249,218,47)" fg:x="559" fg:w="1"/><text x="44.8629%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.6129%" y="421" width="0.0798%" height="15" fill="rgb(254,185,48)" fg:x="559" fg:w="1"/><text x="44.8629%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.6129%" y="405" width="0.0798%" height="15" fill="rgb(252,165,50)" fg:x="559" fg:w="1"/><text x="44.8629%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.6129%" y="389" width="0.0798%" height="15" fill="rgb(206,219,6)" fg:x="559" fg:w="1"/><text x="44.8629%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.6129%" y="373" width="0.0798%" height="15" fill="rgb(212,212,45)" fg:x="559" fg:w="1"/><text x="44.8629%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.6129%" y="357" width="0.0798%" height="15" fill="rgb(221,31,9)" fg:x="559" fg:w="1"/><text x="44.8629%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.6129%" y="341" width="0.0798%" height="15" fill="rgb(234,198,39)" fg:x="559" fg:w="1"/><text x="44.8629%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.6129%" y="325" width="0.0798%" height="15" fill="rgb(252,145,46)" fg:x="559" fg:w="1"/><text x="44.8629%" y="335.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (401 samples, 32.00%)</title><rect x="12.7694%" y="597" width="32.0032%" height="15" fill="rgb(237,149,0)" fg:x="160" fg:w="401"/><text x="13.0194%" y="607.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (39 samples, 3.11%)</title><rect x="41.6600%" y="581" width="3.1125%" height="15" fill="rgb(229,65,5)" fg:x="522" fg:w="39"/><text x="41.9100%" y="591.50">plu..</text></g><g><title>plugins_core::build::Build::save (27 samples, 2.15%)</title><rect x="42.6177%" y="565" width="2.1548%" height="15" fill="rgb(235,60,36)" fg:x="534" fg:w="27"/><text x="42.8677%" y="575.50">p..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="44.5331%" y="549" width="0.2394%" height="15" fill="rgb(222,47,18)" fg:x="558" fg:w="3"/><text x="44.7831%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.6927%" y="533" width="0.0798%" height="15" fill="rgb(235,114,22)" fg:x="560" fg:w="1"/><text x="44.9427%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.6927%" y="517" width="0.0798%" height="15" fill="rgb(209,167,11)" fg:x="560" fg:w="1"/><text x="44.9427%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.6927%" y="501" width="0.0798%" height="15" fill="rgb(251,73,18)" fg:x="560" fg:w="1"/><text x="44.9427%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.6927%" y="485" width="0.0798%" height="15" fill="rgb(217,60,17)" fg:x="560" fg:w="1"/><text x="44.9427%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.6927%" y="469" width="0.0798%" height="15" fill="rgb(224,36,37)" fg:x="560" fg:w="1"/><text x="44.9427%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.6927%" y="453" width="0.0798%" height="15" fill="rgb(211,21,32)" fg:x="560" fg:w="1"/><text x="44.9427%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.6927%" y="437" width="0.0798%" height="15" fill="rgb(231,55,48)" fg:x="560" fg:w="1"/><text x="44.9427%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.6927%" y="421" width="0.0798%" height="15" fill="rgb(227,42,18)" fg:x="560" fg:w="1"/><text x="44.9427%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.6927%" y="405" width="0.0798%" height="15" fill="rgb(217,2,27)" fg:x="560" fg:w="1"/><text x="44.9427%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.6927%" y="389" width="0.0798%" height="15" fill="rgb(251,138,23)" fg:x="560" fg:w="1"/><text x="44.9427%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.6927%" y="373" width="0.0798%" height="15" fill="rgb(226,184,11)" fg:x="560" fg:w="1"/><text x="44.9427%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.6927%" y="357" width="0.0798%" height="15" fill="rgb(242,142,12)" fg:x="560" fg:w="1"/><text x="44.9427%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.7725%" y="581" width="0.0798%" height="15" fill="rgb(234,187,18)" fg:x="561" fg:w="1"/><text x="45.0225%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (3 samples, 0.24%)</title><rect x="44.7725%" y="597" width="0.2394%" height="15" fill="rgb(237,44,42)" fg:x="561" fg:w="3"/><text x="45.0225%" y="607.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="44.8524%" y="581" width="0.1596%" height="15" fill="rgb(211,90,23)" fg:x="562" fg:w="2"/><text x="45.1024%" y="591.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="44.8524%" y="565" width="0.1596%" height="15" fill="rgb(207,81,18)" fg:x="562" fg:w="2"/><text x="45.1024%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="44.8524%" y="549" width="0.1596%" height="15" fill="rgb(222,107,28)" fg:x="562" fg:w="2"/><text x="45.1024%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.1716%" y="565" width="0.0798%" height="15" fill="rgb(237,83,52)" fg:x="566" fg:w="1"/><text x="45.4216%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="45.0918%" y="581" width="0.2394%" height="15" fill="rgb(208,67,11)" fg:x="565" fg:w="3"/><text x="45.3418%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.2514%" y="565" width="0.0798%" height="15" fill="rgb(249,157,49)" fg:x="567" fg:w="1"/><text x="45.5014%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="45.3312%" y="581" width="0.1596%" height="15" fill="rgb(243,200,1)" fg:x="568" fg:w="2"/><text x="45.5812%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="45.3312%" y="565" width="0.1596%" height="15" fill="rgb(225,162,37)" fg:x="568" fg:w="2"/><text x="45.5812%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="45.3312%" y="549" width="0.1596%" height="15" fill="rgb(242,92,13)" fg:x="568" fg:w="2"/><text x="45.5812%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="45.3312%" y="533" width="0.1596%" height="15" fill="rgb(220,43,36)" fg:x="568" fg:w="2"/><text x="45.5812%" y="543.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="45.3312%" y="517" width="0.1596%" height="15" fill="rgb(213,165,48)" fg:x="568" fg:w="2"/><text x="45.5812%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="45.4110%" y="501" width="0.0798%" height="15" fill="rgb(227,200,9)" fg:x="569" fg:w="1"/><text x="45.6610%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="45.4110%" y="485" width="0.0798%" height="15" fill="rgb(221,222,28)" fg:x="569" fg:w="1"/><text x="45.6610%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="45.4110%" y="469" width="0.0798%" height="15" fill="rgb(223,142,26)" fg:x="569" fg:w="1"/><text x="45.6610%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="45.4110%" y="453" width="0.0798%" height="15" fill="rgb(243,46,9)" fg:x="569" fg:w="1"/><text x="45.6610%" y="463.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="45.4110%" y="437" width="0.0798%" height="15" fill="rgb(250,56,11)" fg:x="569" fg:w="1"/><text x="45.6610%" y="447.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="45.4110%" y="421" width="0.0798%" height="15" fill="rgb(229,113,5)" fg:x="569" fg:w="1"/><text x="45.6610%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.4110%" y="405" width="0.0798%" height="15" fill="rgb(244,108,28)" fg:x="569" fg:w="1"/><text x="45.6610%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.4110%" y="389" width="0.0798%" height="15" fill="rgb(242,119,50)" fg:x="569" fg:w="1"/><text x="45.6610%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="45.4110%" y="373" width="0.0798%" height="15" fill="rgb(224,164,23)" fg:x="569" fg:w="1"/><text x="45.6610%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="45.4110%" y="357" width="0.0798%" height="15" fill="rgb(214,227,44)" fg:x="569" fg:w="1"/><text x="45.6610%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="45.4110%" y="341" width="0.0798%" height="15" fill="rgb(238,202,4)" fg:x="569" fg:w="1"/><text x="45.6610%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="45.4110%" y="325" width="0.0798%" height="15" fill="rgb(213,190,30)" fg:x="569" fg:w="1"/><text x="45.6610%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="45.4110%" y="309" width="0.0798%" height="15" fill="rgb(239,15,2)" fg:x="569" fg:w="1"/><text x="45.6610%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="45.4110%" y="293" width="0.0798%" height="15" fill="rgb(249,229,4)" fg:x="569" fg:w="1"/><text x="45.6610%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="45.4110%" y="277" width="0.0798%" height="15" fill="rgb(239,75,44)" fg:x="569" fg:w="1"/><text x="45.6610%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="45.4110%" y="261" width="0.0798%" height="15" fill="rgb(251,206,23)" fg:x="569" fg:w="1"/><text x="45.6610%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="45.4110%" y="245" width="0.0798%" height="15" fill="rgb(215,208,0)" fg:x="569" fg:w="1"/><text x="45.6610%" y="255.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="45.6504%" y="549" width="0.1596%" height="15" fill="rgb(230,75,50)" fg:x="572" fg:w="2"/><text x="45.9004%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="45.6504%" y="533" width="0.1596%" height="15" fill="rgb(246,180,39)" fg:x="572" fg:w="2"/><text x="45.9004%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="45.7302%" y="517" width="0.0798%" height="15" fill="rgb(249,175,24)" fg:x="573" fg:w="1"/><text x="45.9802%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.7302%" y="501" width="0.0798%" height="15" fill="rgb(247,176,22)" fg:x="573" fg:w="1"/><text x="45.9802%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.7302%" y="485" width="0.0798%" height="15" fill="rgb(241,100,24)" fg:x="573" fg:w="1"/><text x="45.9802%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.7302%" y="469" width="0.0798%" height="15" fill="rgb(233,4,35)" fg:x="573" fg:w="1"/><text x="45.9802%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.7302%" y="453" width="0.0798%" height="15" fill="rgb(211,164,46)" fg:x="573" fg:w="1"/><text x="45.9802%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.7302%" y="437" width="0.0798%" height="15" fill="rgb(242,99,53)" fg:x="573" fg:w="1"/><text x="45.9802%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="45.7302%" y="421" width="0.0798%" height="15" fill="rgb(243,45,33)" fg:x="573" fg:w="1"/><text x="45.9802%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="45.7302%" y="405" width="0.0798%" height="15" fill="rgb(217,55,21)" fg:x="573" fg:w="1"/><text x="45.9802%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="45.9697%" y="453" width="0.1596%" height="15" fill="rgb(245,145,46)" fg:x="576" fg:w="2"/><text x="46.2197%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="46.1293%" y="453" width="0.0798%" height="15" fill="rgb(215,112,45)" fg:x="578" fg:w="1"/><text x="46.3793%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="45.8899%" y="469" width="0.3990%" height="15" fill="rgb(228,104,16)" fg:x="575" fg:w="5"/><text x="46.1399%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="46.2091%" y="453" width="0.0798%" height="15" fill="rgb(239,186,38)" fg:x="579" fg:w="1"/><text x="46.4591%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="46.2091%" y="437" width="0.0798%" height="15" fill="rgb(228,38,35)" fg:x="579" fg:w="1"/><text x="46.4591%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.2091%" y="421" width="0.0798%" height="15" fill="rgb(251,42,40)" fg:x="579" fg:w="1"/><text x="46.4591%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="45.8899%" y="485" width="0.4789%" height="15" fill="rgb(210,51,19)" fg:x="575" fg:w="6"/><text x="46.1399%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="46.2889%" y="469" width="0.0798%" height="15" fill="rgb(236,94,42)" fg:x="580" fg:w="1"/><text x="46.5389%" y="479.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="46.3687%" y="485" width="0.2394%" height="15" fill="rgb(239,167,16)" fg:x="581" fg:w="3"/><text x="46.6187%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.96%)</title><rect x="45.8899%" y="501" width="0.9577%" height="15" fill="rgb(252,175,31)" fg:x="575" fg:w="12"/><text x="46.1399%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="46.6081%" y="485" width="0.2394%" height="15" fill="rgb(206,166,30)" fg:x="584" fg:w="3"/><text x="46.8581%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="46.6879%" y="469" width="0.1596%" height="15" fill="rgb(206,209,37)" fg:x="585" fg:w="2"/><text x="46.9379%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="46.8476%" y="485" width="0.0798%" height="15" fill="rgb(226,91,4)" fg:x="587" fg:w="1"/><text x="47.0976%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="46.9274%" y="485" width="0.3990%" height="15" fill="rgb(222,167,0)" fg:x="588" fg:w="5"/><text x="47.1774%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="46.9274%" y="469" width="0.3990%" height="15" fill="rgb(211,70,14)" fg:x="588" fg:w="5"/><text x="47.1774%" y="479.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="47.0870%" y="453" width="0.2394%" height="15" fill="rgb(214,84,42)" fg:x="590" fg:w="3"/><text x="47.3370%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="47.1668%" y="437" width="0.1596%" height="15" fill="rgb(235,157,37)" fg:x="591" fg:w="2"/><text x="47.4168%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="47.1668%" y="421" width="0.1596%" height="15" fill="rgb(225,13,6)" fg:x="591" fg:w="2"/><text x="47.4168%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="47.2466%" y="405" width="0.0798%" height="15" fill="rgb(205,202,1)" fg:x="592" fg:w="1"/><text x="47.4966%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="47.2466%" y="389" width="0.0798%" height="15" fill="rgb(232,195,26)" fg:x="592" fg:w="1"/><text x="47.4966%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="47.2466%" y="373" width="0.0798%" height="15" fill="rgb(208,102,26)" fg:x="592" fg:w="1"/><text x="47.4966%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.64%)</title><rect x="47.4062%" y="469" width="0.6385%" height="15" fill="rgb(215,41,39)" fg:x="594" fg:w="8"/><text x="47.6562%" y="479.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="47.4860%" y="453" width="0.5587%" height="15" fill="rgb(247,139,11)" fg:x="595" fg:w="7"/><text x="47.7360%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="47.8053%" y="437" width="0.2394%" height="15" fill="rgb(243,99,6)" fg:x="599" fg:w="3"/><text x="48.0553%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="47.8053%" y="421" width="0.2394%" height="15" fill="rgb(230,168,48)" fg:x="599" fg:w="3"/><text x="48.0553%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="47.9649%" y="405" width="0.0798%" height="15" fill="rgb(238,227,13)" fg:x="601" fg:w="1"/><text x="48.2149%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="47.9649%" y="389" width="0.0798%" height="15" fill="rgb(209,109,13)" fg:x="601" fg:w="1"/><text x="48.2149%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="47.9649%" y="373" width="0.0798%" height="15" fill="rgb(228,195,1)" fg:x="601" fg:w="1"/><text x="48.2149%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="48.2043%" y="453" width="0.1596%" height="15" fill="rgb(230,218,0)" fg:x="604" fg:w="2"/><text x="48.4543%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="48.2043%" y="437" width="0.1596%" height="15" fill="rgb(206,1,45)" fg:x="604" fg:w="2"/><text x="48.4543%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="48.2043%" y="421" width="0.1596%" height="15" fill="rgb(209,124,26)" fg:x="604" fg:w="2"/><text x="48.4543%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="48.2043%" y="405" width="0.1596%" height="15" fill="rgb(220,59,8)" fg:x="604" fg:w="2"/><text x="48.4543%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="48.2043%" y="389" width="0.1596%" height="15" fill="rgb(251,41,37)" fg:x="604" fg:w="2"/><text x="48.4543%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="48.2841%" y="373" width="0.0798%" height="15" fill="rgb(239,152,21)" fg:x="605" fg:w="1"/><text x="48.5341%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="48.3639%" y="453" width="0.2394%" height="15" fill="rgb(226,32,1)" fg:x="606" fg:w="3"/><text x="48.6139%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="48.4437%" y="437" width="0.1596%" height="15" fill="rgb(230,154,36)" fg:x="607" fg:w="2"/><text x="48.6937%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="48.5235%" y="421" width="0.0798%" height="15" fill="rgb(208,228,43)" fg:x="608" fg:w="1"/><text x="48.7735%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="48.5235%" y="405" width="0.0798%" height="15" fill="rgb(214,203,3)" fg:x="608" fg:w="1"/><text x="48.7735%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="48.6832%" y="437" width="0.0798%" height="15" fill="rgb(207,149,29)" fg:x="610" fg:w="1"/><text x="48.9332%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="48.6832%" y="421" width="0.0798%" height="15" fill="rgb(250,105,7)" fg:x="610" fg:w="1"/><text x="48.9332%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="48.7630%" y="437" width="0.1596%" height="15" fill="rgb(232,222,16)" fg:x="611" fg:w="2"/><text x="49.0130%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="48.7630%" y="421" width="0.1596%" height="15" fill="rgb(209,32,24)" fg:x="611" fg:w="2"/><text x="49.0130%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="48.7630%" y="405" width="0.1596%" height="15" fill="rgb(225,13,6)" fg:x="611" fg:w="2"/><text x="49.0130%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="48.7630%" y="389" width="0.1596%" height="15" fill="rgb(245,226,26)" fg:x="611" fg:w="2"/><text x="49.0130%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="48.7630%" y="373" width="0.1596%" height="15" fill="rgb(229,178,27)" fg:x="611" fg:w="2"/><text x="49.0130%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="48.7630%" y="357" width="0.1596%" height="15" fill="rgb(205,227,28)" fg:x="611" fg:w="2"/><text x="49.0130%" y="367.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="48.7630%" y="341" width="0.1596%" height="15" fill="rgb(210,191,45)" fg:x="611" fg:w="2"/><text x="49.0130%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="49.0024%" y="421" width="0.5587%" height="15" fill="rgb(206,124,16)" fg:x="614" fg:w="7"/><text x="49.2524%" y="431.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="49.2418%" y="405" width="0.3192%" height="15" fill="rgb(210,162,0)" fg:x="617" fg:w="4"/><text x="49.4918%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="49.4812%" y="389" width="0.0798%" height="15" fill="rgb(211,54,38)" fg:x="620" fg:w="1"/><text x="49.7312%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.4812%" y="373" width="0.0798%" height="15" fill="rgb(248,192,3)" fg:x="620" fg:w="1"/><text x="49.7312%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="49.5611%" y="421" width="0.0798%" height="15" fill="rgb(233,187,18)" fg:x="621" fg:w="1"/><text x="49.8111%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="48.9226%" y="437" width="1.0375%" height="15" fill="rgb(237,208,14)" fg:x="613" fg:w="13"/><text x="49.1726%" y="447.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="49.6409%" y="421" width="0.3192%" height="15" fill="rgb(212,77,1)" fg:x="622" fg:w="4"/><text x="49.8909%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.52%)</title><rect x="48.6034%" y="453" width="1.5164%" height="15" fill="rgb(210,163,22)" fg:x="609" fg:w="19"/><text x="48.8534%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="49.9601%" y="437" width="0.1596%" height="15" fill="rgb(250,58,28)" fg:x="626" fg:w="2"/><text x="50.2101%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="50.0399%" y="421" width="0.0798%" height="15" fill="rgb(254,28,41)" fg:x="627" fg:w="1"/><text x="50.2899%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="50.0399%" y="405" width="0.0798%" height="15" fill="rgb(237,162,36)" fg:x="627" fg:w="1"/><text x="50.2899%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.15%)</title><rect x="48.0447%" y="469" width="2.1548%" height="15" fill="rgb(232,56,6)" fg:x="602" fg:w="27"/><text x="48.2947%" y="479.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="50.1197%" y="453" width="0.0798%" height="15" fill="rgb(216,127,42)" fg:x="628" fg:w="1"/><text x="50.3697%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="50.1197%" y="437" width="0.0798%" height="15" fill="rgb(241,69,15)" fg:x="628" fg:w="1"/><text x="50.3697%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="50.1197%" y="421" width="0.0798%" height="15" fill="rgb(227,180,19)" fg:x="628" fg:w="1"/><text x="50.3697%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (39 samples, 3.11%)</title><rect x="47.3264%" y="485" width="3.1125%" height="15" fill="rgb(231,188,29)" fg:x="593" fg:w="39"/><text x="47.5764%" y="495.50">ser..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="50.1995%" y="469" width="0.2394%" height="15" fill="rgb(224,176,27)" fg:x="629" fg:w="3"/><text x="50.4495%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="50.2793%" y="453" width="0.1596%" height="15" fill="rgb(249,214,19)" fg:x="630" fg:w="2"/><text x="50.5293%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="50.2793%" y="437" width="0.1596%" height="15" fill="rgb(240,0,4)" fg:x="630" fg:w="2"/><text x="50.5293%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="50.3591%" y="421" width="0.0798%" height="15" fill="rgb(233,28,41)" fg:x="631" fg:w="1"/><text x="50.6091%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="50.3591%" y="405" width="0.0798%" height="15" fill="rgb(220,90,51)" fg:x="631" fg:w="1"/><text x="50.6091%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="50.3591%" y="389" width="0.0798%" height="15" fill="rgb(250,52,22)" fg:x="631" fg:w="1"/><text x="50.6091%" y="399.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (46 samples, 3.67%)</title><rect x="46.8476%" y="501" width="3.6712%" height="15" fill="rgb(231,152,36)" fg:x="587" fg:w="46"/><text x="47.0976%" y="511.50">&lt;ser..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="50.4389%" y="485" width="0.0798%" height="15" fill="rgb(250,218,4)" fg:x="632" fg:w="1"/><text x="50.6889%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="50.4389%" y="469" width="0.0798%" height="15" fill="rgb(210,38,21)" fg:x="632" fg:w="1"/><text x="50.6889%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.5188%" y="437" width="0.0798%" height="15" fill="rgb(230,75,13)" fg:x="633" fg:w="1"/><text x="50.7688%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.6784%" y="421" width="0.0798%" height="15" fill="rgb(250,68,53)" fg:x="635" fg:w="1"/><text x="50.9284%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (6 samples, 0.48%)</title><rect x="50.7582%" y="421" width="0.4789%" height="15" fill="rgb(250,210,16)" fg:x="636" fg:w="6"/><text x="51.0082%" y="431.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="50.9976%" y="405" width="0.2394%" height="15" fill="rgb(240,132,5)" fg:x="639" fg:w="3"/><text x="51.2476%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.2370%" y="405" width="0.0798%" height="15" fill="rgb(222,148,48)" fg:x="642" fg:w="1"/><text x="51.4870%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="51.3168%" y="405" width="0.1596%" height="15" fill="rgb(247,181,24)" fg:x="643" fg:w="2"/><text x="51.5668%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.3966%" y="389" width="0.0798%" height="15" fill="rgb(239,5,31)" fg:x="644" fg:w="1"/><text x="51.6466%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.5563%" y="389" width="0.0798%" height="15" fill="rgb(241,152,38)" fg:x="646" fg:w="1"/><text x="51.8063%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.6361%" y="389" width="0.0798%" height="15" fill="rgb(246,200,37)" fg:x="647" fg:w="1"/><text x="51.8861%" y="399.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="51.7957%" y="357" width="0.2394%" height="15" fill="rgb(243,210,26)" fg:x="649" fg:w="3"/><text x="52.0457%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.0351%" y="357" width="0.0798%" height="15" fill="rgb(222,22,22)" fg:x="652" fg:w="1"/><text x="52.2851%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.0351%" y="341" width="0.0798%" height="15" fill="rgb(208,129,28)" fg:x="652" fg:w="1"/><text x="52.2851%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (6 samples, 0.48%)</title><rect x="51.7159%" y="389" width="0.4789%" height="15" fill="rgb(254,169,28)" fg:x="648" fg:w="6"/><text x="51.9659%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="51.7159%" y="373" width="0.4789%" height="15" fill="rgb(225,45,17)" fg:x="648" fg:w="6"/><text x="51.9659%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.1149%" y="357" width="0.0798%" height="15" fill="rgb(232,199,2)" fg:x="653" fg:w="1"/><text x="52.3649%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.1149%" y="341" width="0.0798%" height="15" fill="rgb(235,33,40)" fg:x="653" fg:w="1"/><text x="52.3649%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 1.92%)</title><rect x="50.5188%" y="469" width="1.9154%" height="15" fill="rgb(237,89,50)" fg:x="633" fg:w="24"/><text x="50.7688%" y="479.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (24 samples, 1.92%)</title><rect x="50.5188%" y="453" width="1.9154%" height="15" fill="rgb(238,126,5)" fg:x="633" fg:w="24"/><text x="50.7688%" y="463.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (23 samples, 1.84%)</title><rect x="50.5986%" y="437" width="1.8356%" height="15" fill="rgb(247,214,42)" fg:x="634" fg:w="23"/><text x="50.8486%" y="447.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.20%)</title><rect x="51.2370%" y="421" width="1.1971%" height="15" fill="rgb(238,60,45)" fg:x="642" fg:w="15"/><text x="51.4870%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="51.4765%" y="405" width="0.9577%" height="15" fill="rgb(225,69,44)" fg:x="645" fg:w="12"/><text x="51.7265%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="52.1947%" y="389" width="0.2394%" height="15" fill="rgb(241,13,44)" fg:x="654" fg:w="3"/><text x="52.4447%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.3543%" y="373" width="0.0798%" height="15" fill="rgb(227,121,22)" fg:x="656" fg:w="1"/><text x="52.6043%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.3543%" y="357" width="0.0798%" height="15" fill="rgb(231,160,23)" fg:x="656" fg:w="1"/><text x="52.6043%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.4342%" y="469" width="0.0798%" height="15" fill="rgb(250,179,43)" fg:x="657" fg:w="1"/><text x="52.6842%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="52.5140%" y="469" width="0.0798%" height="15" fill="rgb(233,54,46)" fg:x="658" fg:w="1"/><text x="52.7640%" y="479.50"></text></g><g><title>&lt;burrow_bon::dotted::DottedPaths as core::convert::Into&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt;&gt;::into (1 samples, 0.08%)</title><rect x="52.5938%" y="469" width="0.0798%" height="15" fill="rgb(247,120,42)" fg:x="659" fg:w="1"/><text x="52.8438%" y="479.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="52.6736%" y="437" width="0.0798%" height="15" fill="rgb(221,219,12)" fg:x="660" fg:w="1"/><text x="52.9236%" y="447.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.08%)</title><rect x="52.6736%" y="421" width="0.0798%" height="15" fill="rgb(211,126,8)" fg:x="660" fg:w="1"/><text x="52.9236%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="52.6736%" y="405" width="0.0798%" height="15" fill="rgb(218,154,33)" fg:x="660" fg:w="1"/><text x="52.9236%" y="415.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (2 samples, 0.16%)</title><rect x="52.6736%" y="469" width="0.1596%" height="15" fill="rgb(212,199,16)" fg:x="660" fg:w="2"/><text x="52.9236%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="52.6736%" y="453" width="0.1596%" height="15" fill="rgb(236,215,46)" fg:x="660" fg:w="2"/><text x="52.9236%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.7534%" y="437" width="0.0798%" height="15" fill="rgb(232,32,22)" fg:x="661" fg:w="1"/><text x="53.0034%" y="447.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.16%)</title><rect x="53.1524%" y="405" width="0.1596%" height="15" fill="rgb(234,79,15)" fg:x="666" fg:w="2"/><text x="53.4024%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="53.2322%" y="389" width="0.0798%" height="15" fill="rgb(235,187,47)" fg:x="667" fg:w="1"/><text x="53.4822%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="53.2322%" y="373" width="0.0798%" height="15" fill="rgb(244,69,37)" fg:x="667" fg:w="1"/><text x="53.4822%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="53.3121%" y="389" width="0.0798%" height="15" fill="rgb(249,140,25)" fg:x="668" fg:w="1"/><text x="53.5621%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="53.3121%" y="373" width="0.0798%" height="15" fill="rgb(213,69,8)" fg:x="668" fg:w="1"/><text x="53.5621%" y="383.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (37 samples, 2.95%)</title><rect x="50.5188%" y="485" width="2.9529%" height="15" fill="rgb(220,136,2)" fg:x="633" fg:w="37"/><text x="50.7688%" y="495.50">&lt;ke..</text></g><g><title>treediff::diff::diff (8 samples, 0.64%)</title><rect x="52.8332%" y="469" width="0.6385%" height="15" fill="rgb(237,50,36)" fg:x="662" fg:w="8"/><text x="53.0832%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="53.0726%" y="453" width="0.3990%" height="15" fill="rgb(226,18,11)" fg:x="665" fg:w="5"/><text x="53.3226%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="53.0726%" y="437" width="0.3990%" height="15" fill="rgb(243,156,2)" fg:x="665" fg:w="5"/><text x="53.3226%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="53.1524%" y="421" width="0.3192%" height="15" fill="rgb(218,8,34)" fg:x="666" fg:w="4"/><text x="53.4024%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="53.3121%" y="405" width="0.1596%" height="15" fill="rgb(250,94,35)" fg:x="668" fg:w="2"/><text x="53.5621%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="53.3919%" y="389" width="0.0798%" height="15" fill="rgb(229,127,21)" fg:x="669" fg:w="1"/><text x="53.6419%" y="399.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="53.9505%" y="453" width="0.2394%" height="15" fill="rgb(234,49,5)" fg:x="676" fg:w="3"/><text x="54.2005%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="54.1899%" y="453" width="0.1596%" height="15" fill="rgb(248,12,16)" fg:x="679" fg:w="2"/><text x="54.4399%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="54.2698%" y="437" width="0.0798%" height="15" fill="rgb(208,220,31)" fg:x="680" fg:w="1"/><text x="54.5198%" y="447.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="54.3496%" y="453" width="0.1596%" height="15" fill="rgb(243,184,0)" fg:x="681" fg:w="2"/><text x="54.5996%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="54.3496%" y="437" width="0.1596%" height="15" fill="rgb(217,38,21)" fg:x="681" fg:w="2"/><text x="54.5996%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="54.4294%" y="421" width="0.0798%" height="15" fill="rgb(239,120,45)" fg:x="682" fg:w="1"/><text x="54.6794%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="54.5890%" y="421" width="0.1596%" height="15" fill="rgb(235,33,2)" fg:x="684" fg:w="2"/><text x="54.8390%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="54.5092%" y="453" width="0.3192%" height="15" fill="rgb(249,161,5)" fg:x="683" fg:w="4"/><text x="54.7592%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="54.5890%" y="437" width="0.2394%" height="15" fill="rgb(250,165,48)" fg:x="684" fg:w="3"/><text x="54.8390%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.7486%" y="421" width="0.0798%" height="15" fill="rgb(221,23,45)" fg:x="686" fg:w="1"/><text x="54.9986%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="54.9880%" y="421" width="0.0798%" height="15" fill="rgb(217,108,46)" fg:x="689" fg:w="1"/><text x="55.2380%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.3073%" y="389" width="0.0798%" height="15" fill="rgb(254,26,35)" fg:x="693" fg:w="1"/><text x="55.5573%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="55.2275%" y="405" width="0.2394%" height="15" fill="rgb(218,223,28)" fg:x="692" fg:w="3"/><text x="55.4775%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="55.3871%" y="389" width="0.0798%" height="15" fill="rgb(242,27,47)" fg:x="694" fg:w="1"/><text x="55.6371%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="55.4669%" y="373" width="0.0798%" height="15" fill="rgb(218,39,35)" fg:x="695" fg:w="1"/><text x="55.7169%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.7063%" y="341" width="0.0798%" height="15" fill="rgb(232,127,16)" fg:x="698" fg:w="1"/><text x="55.9563%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="55.6265%" y="357" width="0.2394%" height="15" fill="rgb(231,219,51)" fg:x="697" fg:w="3"/><text x="55.8765%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="55.7861%" y="341" width="0.0798%" height="15" fill="rgb(217,220,46)" fg:x="699" fg:w="1"/><text x="56.0361%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="55.9457%" y="341" width="0.1596%" height="15" fill="rgb(230,75,1)" fg:x="701" fg:w="2"/><text x="56.1957%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="55.9457%" y="325" width="0.1596%" height="15" fill="rgb(218,2,8)" fg:x="701" fg:w="2"/><text x="56.1957%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="56.0255%" y="309" width="0.0798%" height="15" fill="rgb(206,111,30)" fg:x="702" fg:w="1"/><text x="56.2755%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (10 samples, 0.80%)</title><rect x="55.4669%" y="405" width="0.7981%" height="15" fill="rgb(209,135,6)" fg:x="695" fg:w="10"/><text x="55.7169%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="55.4669%" y="389" width="0.7981%" height="15" fill="rgb(205,169,10)" fg:x="695" fg:w="10"/><text x="55.7169%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="55.5467%" y="373" width="0.7183%" height="15" fill="rgb(212,204,38)" fg:x="696" fg:w="9"/><text x="55.7967%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="55.8659%" y="357" width="0.3990%" height="15" fill="rgb(205,199,14)" fg:x="700" fg:w="5"/><text x="56.1159%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.1053%" y="341" width="0.1596%" height="15" fill="rgb(212,4,6)" fg:x="703" fg:w="2"/><text x="56.3553%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="56.4246%" y="373" width="0.3990%" height="15" fill="rgb(250,15,10)" fg:x="707" fg:w="5"/><text x="56.6746%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="56.6640%" y="357" width="0.1596%" height="15" fill="rgb(212,49,51)" fg:x="710" fg:w="2"/><text x="56.9140%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="57.0630%" y="357" width="0.0798%" height="15" fill="rgb(235,21,9)" fg:x="715" fg:w="1"/><text x="57.3130%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.2227%" y="341" width="0.1596%" height="15" fill="rgb(251,31,32)" fg:x="717" fg:w="2"/><text x="57.4727%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="57.3025%" y="325" width="0.0798%" height="15" fill="rgb(246,23,9)" fg:x="718" fg:w="1"/><text x="57.5525%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="57.1429%" y="357" width="0.3192%" height="15" fill="rgb(225,216,14)" fg:x="716" fg:w="4"/><text x="57.3929%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="57.3823%" y="341" width="0.0798%" height="15" fill="rgb(215,200,26)" fg:x="719" fg:w="1"/><text x="57.6323%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.3823%" y="325" width="0.0798%" height="15" fill="rgb(237,130,47)" fg:x="719" fg:w="1"/><text x="57.6323%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (16 samples, 1.28%)</title><rect x="56.3448%" y="389" width="1.2769%" height="15" fill="rgb(247,74,14)" fg:x="706" fg:w="16"/><text x="56.5948%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="56.8236%" y="373" width="0.7981%" height="15" fill="rgb(254,97,46)" fg:x="712" fg:w="10"/><text x="57.0736%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.4621%" y="357" width="0.1596%" height="15" fill="rgb(234,191,1)" fg:x="720" fg:w="2"/><text x="57.7121%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (33 samples, 2.63%)</title><rect x="55.0678%" y="421" width="2.6337%" height="15" fill="rgb(215,165,14)" fg:x="690" fg:w="33"/><text x="55.3178%" y="431.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (18 samples, 1.44%)</title><rect x="56.2650%" y="405" width="1.4366%" height="15" fill="rgb(230,182,6)" fg:x="705" fg:w="18"/><text x="56.5150%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.6217%" y="389" width="0.0798%" height="15" fill="rgb(210,127,39)" fg:x="722" fg:w="1"/><text x="57.8717%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (38 samples, 3.03%)</title><rect x="54.9082%" y="437" width="3.0327%" height="15" fill="rgb(223,212,51)" fg:x="688" fg:w="38"/><text x="55.1582%" y="447.50">&lt;se..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="57.7015%" y="421" width="0.2394%" height="15" fill="rgb(226,176,43)" fg:x="723" fg:w="3"/><text x="57.9515%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.8611%" y="405" width="0.0798%" height="15" fill="rgb(222,155,4)" fg:x="725" fg:w="1"/><text x="58.1111%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.9409%" y="437" width="0.0798%" height="15" fill="rgb(215,149,7)" fg:x="726" fg:w="1"/><text x="58.1909%" y="447.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (58 samples, 4.63%)</title><rect x="53.4717%" y="485" width="4.6289%" height="15" fill="rgb(252,199,23)" fg:x="670" fg:w="58"/><text x="53.7217%" y="495.50">kerne..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (58 samples, 4.63%)</title><rect x="53.4717%" y="469" width="4.6289%" height="15" fill="rgb(245,52,29)" fg:x="670" fg:w="58"/><text x="53.7217%" y="479.50">&lt;serd..</text></g><g><title>serde::ser::Serializer::collect_map (41 samples, 3.27%)</title><rect x="54.8284%" y="453" width="3.2721%" height="15" fill="rgb(221,228,19)" fg:x="687" fg:w="41"/><text x="55.0784%" y="463.50">ser..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.0208%" y="437" width="0.0798%" height="15" fill="rgb(253,101,6)" fg:x="727" fg:w="1"/><text x="58.2708%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="58.0208%" y="421" width="0.0798%" height="15" fill="rgb(211,130,8)" fg:x="727" fg:w="1"/><text x="58.2708%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="58.3400%" y="373" width="0.1596%" height="15" fill="rgb(238,37,53)" fg:x="731" fg:w="2"/><text x="58.5900%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="58.5794%" y="245" width="0.0798%" height="15" fill="rgb(235,145,5)" fg:x="734" fg:w="1"/><text x="58.8294%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="58.5794%" y="261" width="0.1596%" height="15" fill="rgb(244,12,43)" fg:x="734" fg:w="2"/><text x="58.8294%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.6592%" y="245" width="0.0798%" height="15" fill="rgb(246,195,24)" fg:x="735" fg:w="1"/><text x="58.9092%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="58.5794%" y="293" width="0.2394%" height="15" fill="rgb(235,163,6)" fg:x="734" fg:w="3"/><text x="58.8294%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="58.5794%" y="277" width="0.2394%" height="15" fill="rgb(236,218,17)" fg:x="734" fg:w="3"/><text x="58.8294%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.7390%" y="261" width="0.0798%" height="15" fill="rgb(235,12,38)" fg:x="736" fg:w="1"/><text x="58.9890%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="58.4996%" y="309" width="0.3990%" height="15" fill="rgb(225,195,33)" fg:x="733" fg:w="5"/><text x="58.7496%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.8188%" y="293" width="0.0798%" height="15" fill="rgb(238,54,35)" fg:x="737" fg:w="1"/><text x="59.0688%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="58.4996%" y="341" width="0.5587%" height="15" fill="rgb(238,33,7)" fg:x="733" fg:w="7"/><text x="58.7496%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="58.4996%" y="325" width="0.5587%" height="15" fill="rgb(245,5,14)" fg:x="733" fg:w="7"/><text x="58.7496%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="58.8986%" y="309" width="0.1596%" height="15" fill="rgb(251,95,31)" fg:x="738" fg:w="2"/><text x="59.1486%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.9785%" y="293" width="0.0798%" height="15" fill="rgb(222,15,46)" fg:x="739" fg:w="1"/><text x="59.2285%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.2977%" y="293" width="0.0798%" height="15" fill="rgb(226,182,24)" fg:x="743" fg:w="1"/><text x="59.5477%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.2977%" y="277" width="0.0798%" height="15" fill="rgb(229,105,41)" fg:x="743" fg:w="1"/><text x="59.5477%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="59.1381%" y="325" width="0.3192%" height="15" fill="rgb(216,99,53)" fg:x="741" fg:w="4"/><text x="59.3881%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="59.2977%" y="309" width="0.1596%" height="15" fill="rgb(253,26,20)" fg:x="743" fg:w="2"/><text x="59.5477%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.3775%" y="293" width="0.0798%" height="15" fill="rgb(249,155,28)" fg:x="744" fg:w="1"/><text x="59.6275%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.3775%" y="277" width="0.0798%" height="15" fill="rgb(241,221,2)" fg:x="744" fg:w="1"/><text x="59.6275%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.04%)</title><rect x="58.4996%" y="357" width="1.0375%" height="15" fill="rgb(219,124,6)" fg:x="733" fg:w="13"/><text x="58.7496%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="59.0583%" y="341" width="0.4789%" height="15" fill="rgb(233,37,6)" fg:x="740" fg:w="6"/><text x="59.3083%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.4573%" y="325" width="0.0798%" height="15" fill="rgb(238,20,14)" fg:x="745" fg:w="1"/><text x="59.7073%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="59.5371%" y="357" width="0.1596%" height="15" fill="rgb(232,106,27)" fg:x="746" fg:w="2"/><text x="59.7871%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="59.6169%" y="341" width="0.0798%" height="15" fill="rgb(246,157,24)" fg:x="747" fg:w="1"/><text x="59.8669%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.44%)</title><rect x="58.3400%" y="389" width="1.4366%" height="15" fill="rgb(214,153,10)" fg:x="731" fg:w="18"/><text x="58.5900%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 1.28%)</title><rect x="58.4996%" y="373" width="1.2769%" height="15" fill="rgb(212,94,6)" fg:x="733" fg:w="16"/><text x="58.7496%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.6967%" y="357" width="0.0798%" height="15" fill="rgb(254,25,27)" fg:x="748" fg:w="1"/><text x="59.9467%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.6967%" y="341" width="0.0798%" height="15" fill="rgb(250,43,52)" fg:x="748" fg:w="1"/><text x="59.9467%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.6967%" y="325" width="0.0798%" height="15" fill="rgb(221,226,40)" fg:x="748" fg:w="1"/><text x="59.9467%" y="335.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="59.8563%" y="373" width="0.1596%" height="15" fill="rgb(235,162,34)" fg:x="750" fg:w="2"/><text x="60.1063%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (25 samples, 2.00%)</title><rect x="58.1006%" y="421" width="1.9952%" height="15" fill="rgb(239,24,26)" fg:x="728" fg:w="25"/><text x="58.3506%" y="431.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (25 samples, 2.00%)</title><rect x="58.1006%" y="405" width="1.9952%" height="15" fill="rgb(244,226,11)" fg:x="728" fg:w="25"/><text x="58.3506%" y="415.50">&lt;..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="59.7765%" y="389" width="0.3192%" height="15" fill="rgb(225,23,10)" fg:x="749" fg:w="4"/><text x="60.0265%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.0160%" y="373" width="0.0798%" height="15" fill="rgb(249,125,6)" fg:x="752" fg:w="1"/><text x="60.2660%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="60.0958%" y="405" width="0.1596%" height="15" fill="rgb(246,212,12)" fg:x="753" fg:w="2"/><text x="60.3458%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="60.0958%" y="421" width="0.2394%" height="15" fill="rgb(230,43,32)" fg:x="753" fg:w="3"/><text x="60.3458%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.2554%" y="405" width="0.0798%" height="15" fill="rgb(210,95,23)" fg:x="755" fg:w="1"/><text x="60.5054%" y="415.50"></text></g><g><title>engine::session::state::State::close (187 samples, 14.92%)</title><rect x="45.4908%" y="581" width="14.9242%" height="15" fill="rgb(229,103,33)" fg:x="570" fg:w="187"/><text x="45.7408%" y="591.50">engine::session::state:..</text></g><g><title>engine::session::state::State::flush_entities (185 samples, 14.76%)</title><rect x="45.6504%" y="565" width="14.7646%" height="15" fill="rgb(222,104,27)" fg:x="572" fg:w="185"/><text x="45.9004%" y="575.50">engine::session::state:..</text></g><g><title>core::iter::adapters::try_process (183 samples, 14.60%)</title><rect x="45.8101%" y="549" width="14.6049%" height="15" fill="rgb(239,221,23)" fg:x="574" fg:w="183"/><text x="46.0601%" y="559.50">core::iter::adapters::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (183 samples, 14.60%)</title><rect x="45.8101%" y="533" width="14.6049%" height="15" fill="rgb(222,98,21)" fg:x="574" fg:w="183"/><text x="46.0601%" y="543.50">&lt;alloc::vec::Vec&lt;T&gt; as..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (183 samples, 14.60%)</title><rect x="45.8101%" y="517" width="14.6049%" height="15" fill="rgb(231,101,20)" fg:x="574" fg:w="183"/><text x="46.0601%" y="527.50">engine::session::state..</text></g><g><title>kernel::model::any_entity_changes (124 samples, 9.90%)</title><rect x="50.5188%" y="501" width="9.8962%" height="15" fill="rgb(215,150,22)" fg:x="633" fg:w="124"/><text x="50.7688%" y="511.50">kernel::model:..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (29 samples, 2.31%)</title><rect x="58.1006%" y="485" width="2.3144%" height="15" fill="rgb(248,3,34)" fg:x="728" fg:w="29"/><text x="58.3506%" y="495.50">s..</text></g><g><title>serde_json::de::from_trait (29 samples, 2.31%)</title><rect x="58.1006%" y="469" width="2.3144%" height="15" fill="rgb(220,141,21)" fg:x="728" fg:w="29"/><text x="58.3506%" y="479.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (29 samples, 2.31%)</title><rect x="58.1006%" y="453" width="2.3144%" height="15" fill="rgb(223,41,48)" fg:x="728" fg:w="29"/><text x="58.3506%" y="463.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (29 samples, 2.31%)</title><rect x="58.1006%" y="437" width="2.3144%" height="15" fill="rgb(247,12,5)" fg:x="728" fg:w="29"/><text x="58.3506%" y="447.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.3352%" y="421" width="0.0798%" height="15" fill="rgb(206,173,10)" fg:x="756" fg:w="1"/><text x="60.5852%" y="431.50"></text></g><g><title>engine::session::Session::close (195 samples, 15.56%)</title><rect x="45.0120%" y="597" width="15.5626%" height="15" fill="rgb(233,214,37)" fg:x="564" fg:w="195"/><text x="45.2620%" y="607.50">engine::session::Session..</text></g><g><title>kernel::plugins::SessionPlugins::stop (2 samples, 0.16%)</title><rect x="60.4150%" y="581" width="0.1596%" height="15" fill="rgb(238,86,43)" fg:x="757" fg:w="2"/><text x="60.6650%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.7342%" y="501" width="0.0798%" height="15" fill="rgb(212,182,8)" fg:x="761" fg:w="1"/><text x="60.9842%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::find_name_key (3 samples, 0.24%)</title><rect x="60.6544%" y="565" width="0.2394%" height="15" fill="rgb(240,91,47)" fg:x="760" fg:w="3"/><text x="60.9044%" y="575.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="60.6544%" y="549" width="0.2394%" height="15" fill="rgb(209,138,26)" fg:x="760" fg:w="3"/><text x="60.9044%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="60.6544%" y="533" width="0.2394%" height="15" fill="rgb(231,163,20)" fg:x="760" fg:w="3"/><text x="60.9044%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="60.6544%" y="517" width="0.2394%" height="15" fill="rgb(214,91,54)" fg:x="760" fg:w="3"/><text x="60.9044%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="60.8140%" y="501" width="0.0798%" height="15" fill="rgb(230,32,17)" fg:x="762" fg:w="1"/><text x="61.0640%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.8140%" y="485" width="0.0798%" height="15" fill="rgb(231,34,34)" fg:x="762" fg:w="1"/><text x="61.0640%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="60.8939%" y="533" width="0.0798%" height="15" fill="rgb(224,228,27)" fg:x="763" fg:w="1"/><text x="61.1439%" y="543.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="60.8939%" y="517" width="0.0798%" height="15" fill="rgb(219,35,40)" fg:x="763" fg:w="1"/><text x="61.1439%" y="527.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="60.8939%" y="501" width="0.0798%" height="15" fill="rgb(234,42,8)" fg:x="763" fg:w="1"/><text x="61.1439%" y="511.50"></text></g><g><title>&lt;plugins_core::emote::EmotePlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="60.9737%" y="533" width="0.0798%" height="15" fill="rgb(226,75,22)" fg:x="764" fg:w="1"/><text x="61.2237%" y="543.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="60.9737%" y="517" width="0.0798%" height="15" fill="rgb(242,203,28)" fg:x="764" fg:w="1"/><text x="61.2237%" y="527.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="61.0535%" y="533" width="0.0798%" height="15" fill="rgb(221,3,9)" fg:x="765" fg:w="1"/><text x="61.3035%" y="543.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (4 samples, 0.32%)</title><rect x="60.8939%" y="565" width="0.3192%" height="15" fill="rgb(214,34,31)" fg:x="763" fg:w="4"/><text x="61.1439%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.32%)</title><rect x="60.8939%" y="549" width="0.3192%" height="15" fill="rgb(252,119,15)" fg:x="763" fg:w="4"/><text x="61.1439%" y="559.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="61.1333%" y="533" width="0.0798%" height="15" fill="rgb(244,224,31)" fg:x="766" fg:w="1"/><text x="61.3833%" y="543.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="61.1333%" y="517" width="0.0798%" height="15" fill="rgb(215,8,51)" fg:x="766" fg:w="1"/><text x="61.3833%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="61.1333%" y="501" width="0.0798%" height="15" fill="rgb(207,24,1)" fg:x="766" fg:w="1"/><text x="61.3833%" y="511.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.08%)</title><rect x="61.3727%" y="293" width="0.0798%" height="15" fill="rgb(245,90,0)" fg:x="769" fg:w="1"/><text x="61.6227%" y="303.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="61.3727%" y="277" width="0.0798%" height="15" fill="rgb(246,43,48)" fg:x="769" fg:w="1"/><text x="61.6227%" y="287.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.08%)</title><rect x="61.3727%" y="261" width="0.0798%" height="15" fill="rgb(252,218,10)" fg:x="769" fg:w="1"/><text x="61.6227%" y="271.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="61.3727%" y="245" width="0.0798%" height="15" fill="rgb(231,24,35)" fg:x="769" fg:w="1"/><text x="61.6227%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="61.3727%" y="229" width="0.0798%" height="15" fill="rgb(225,66,19)" fg:x="769" fg:w="1"/><text x="61.6227%" y="239.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="61.3727%" y="213" width="0.0798%" height="15" fill="rgb(214,96,51)" fg:x="769" fg:w="1"/><text x="61.6227%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="61.3727%" y="197" width="0.0798%" height="15" fill="rgb(251,151,47)" fg:x="769" fg:w="1"/><text x="61.6227%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="61.3727%" y="181" width="0.0798%" height="15" fill="rgb(236,79,14)" fg:x="769" fg:w="1"/><text x="61.6227%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="61.3727%" y="165" width="0.0798%" height="15" fill="rgb(210,205,11)" fg:x="769" fg:w="1"/><text x="61.6227%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="61.3727%" y="149" width="0.0798%" height="15" fill="rgb(233,142,53)" fg:x="769" fg:w="1"/><text x="61.6227%" y="159.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish (1 samples, 0.08%)</title><rect x="61.4525%" y="293" width="0.0798%" height="15" fill="rgb(212,116,48)" fg:x="770" fg:w="1"/><text x="61.7025%" y="303.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="61.4525%" y="277" width="0.0798%" height="15" fill="rgb(234,55,33)" fg:x="770" fg:w="1"/><text x="61.7025%" y="287.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish::{{closure}} (1 samples, 0.08%)</title><rect x="61.4525%" y="261" width="0.0798%" height="15" fill="rgb(253,92,27)" fg:x="770" fg:w="1"/><text x="61.7025%" y="271.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="61.4525%" y="245" width="0.0798%" height="15" fill="rgb(220,7,35)" fg:x="770" fg:w="1"/><text x="61.7025%" y="255.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="61.2929%" y="405" width="0.3192%" height="15" fill="rgb(246,124,6)" fg:x="768" fg:w="4"/><text x="61.5429%" y="415.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (4 samples, 0.32%)</title><rect x="61.2929%" y="389" width="0.3192%" height="15" fill="rgb(212,111,51)" fg:x="768" fg:w="4"/><text x="61.5429%" y="399.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (4 samples, 0.32%)</title><rect x="61.2929%" y="373" width="0.3192%" height="15" fill="rgb(253,116,7)" fg:x="768" fg:w="4"/><text x="61.5429%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (4 samples, 0.32%)</title><rect x="61.2929%" y="357" width="0.3192%" height="15" fill="rgb(213,145,18)" fg:x="768" fg:w="4"/><text x="61.5429%" y="367.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (4 samples, 0.32%)</title><rect x="61.2929%" y="341" width="0.3192%" height="15" fill="rgb(219,149,7)" fg:x="768" fg:w="4"/><text x="61.5429%" y="351.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="61.3727%" y="325" width="0.2394%" height="15" fill="rgb(225,156,20)" fg:x="769" fg:w="3"/><text x="61.6227%" y="335.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field1_finish (3 samples, 0.24%)</title><rect x="61.3727%" y="309" width="0.2394%" height="15" fill="rgb(211,98,19)" fg:x="769" fg:w="3"/><text x="61.6227%" y="319.50"></text></g><g><title>core::fmt::builders::debug_struct_new (1 samples, 0.08%)</title><rect x="61.5323%" y="293" width="0.0798%" height="15" fill="rgb(231,192,31)" fg:x="771" fg:w="1"/><text x="61.7823%" y="303.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="61.5323%" y="277" width="0.0798%" height="15" fill="rgb(249,95,19)" fg:x="771" fg:w="1"/><text x="61.7823%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="61.5323%" y="261" width="0.0798%" height="15" fill="rgb(247,101,36)" fg:x="771" fg:w="1"/><text x="61.7823%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="61.5323%" y="245" width="0.0798%" height="15" fill="rgb(221,45,43)" fg:x="771" fg:w="1"/><text x="61.7823%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="61.5323%" y="229" width="0.0798%" height="15" fill="rgb(220,42,1)" fg:x="771" fg:w="1"/><text x="61.7823%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="61.5323%" y="213" width="0.0798%" height="15" fill="rgb(236,19,24)" fg:x="771" fg:w="1"/><text x="61.7823%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="61.5323%" y="197" width="0.0798%" height="15" fill="rgb(225,192,6)" fg:x="771" fg:w="1"/><text x="61.7823%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="61.5323%" y="181" width="0.0798%" height="15" fill="rgb(242,30,19)" fg:x="771" fg:w="1"/><text x="61.7823%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="61.5323%" y="165" width="0.0798%" height="15" fill="rgb(240,36,6)" fg:x="771" fg:w="1"/><text x="61.7823%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="61.5323%" y="149" width="0.0798%" height="15" fill="rgb(246,40,28)" fg:x="771" fg:w="1"/><text x="61.7823%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="61.5323%" y="133" width="0.0798%" height="15" fill="rgb(225,155,33)" fg:x="771" fg:w="1"/><text x="61.7823%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="61.5323%" y="117" width="0.0798%" height="15" fill="rgb(240,65,18)" fg:x="771" fg:w="1"/><text x="61.7823%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="61.5323%" y="101" width="0.0798%" height="15" fill="rgb(217,0,48)" fg:x="771" fg:w="1"/><text x="61.7823%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="61.5323%" y="85" width="0.0798%" height="15" fill="rgb(217,80,15)" fg:x="771" fg:w="1"/><text x="61.7823%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="61.5323%" y="69" width="0.0798%" height="15" fill="rgb(253,43,51)" fg:x="771" fg:w="1"/><text x="61.7823%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="61.5323%" y="53" width="0.0798%" height="15" fill="rgb(246,60,4)" fg:x="771" fg:w="1"/><text x="61.7823%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.6121%" y="389" width="0.0798%" height="15" fill="rgb(230,40,54)" fg:x="772" fg:w="1"/><text x="61.8621%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.6121%" y="373" width="0.0798%" height="15" fill="rgb(208,20,44)" fg:x="772" fg:w="1"/><text x="61.8621%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.6121%" y="357" width="0.0798%" height="15" fill="rgb(230,22,22)" fg:x="772" fg:w="1"/><text x="61.8621%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.6121%" y="341" width="0.0798%" height="15" fill="rgb(207,57,4)" fg:x="772" fg:w="1"/><text x="61.8621%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.6121%" y="325" width="0.0798%" height="15" fill="rgb(242,130,33)" fg:x="772" fg:w="1"/><text x="61.8621%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.6121%" y="309" width="0.0798%" height="15" fill="rgb(218,66,43)" fg:x="772" fg:w="1"/><text x="61.8621%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.6121%" y="293" width="0.0798%" height="15" fill="rgb(236,105,16)" fg:x="772" fg:w="1"/><text x="61.8621%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.6121%" y="277" width="0.0798%" height="15" fill="rgb(230,46,15)" fg:x="772" fg:w="1"/><text x="61.8621%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.6121%" y="261" width="0.0798%" height="15" fill="rgb(251,172,40)" fg:x="772" fg:w="1"/><text x="61.8621%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.6121%" y="245" width="0.0798%" height="15" fill="rgb(225,217,32)" fg:x="772" fg:w="1"/><text x="61.8621%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.6121%" y="229" width="0.0798%" height="15" fill="rgb(243,10,29)" fg:x="772" fg:w="1"/><text x="61.8621%" y="239.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="61.6121%" y="213" width="0.0798%" height="15" fill="rgb(207,102,10)" fg:x="772" fg:w="1"/><text x="61.8621%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="61.6121%" y="197" width="0.0798%" height="15" fill="rgb(241,125,5)" fg:x="772" fg:w="1"/><text x="61.8621%" y="207.50"></text></g><g><title>alloc::fmt::format::format_inner (7 samples, 0.56%)</title><rect x="61.2131%" y="549" width="0.5587%" height="15" fill="rgb(230,125,29)" fg:x="767" fg:w="7"/><text x="61.4631%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (7 samples, 0.56%)</title><rect x="61.2131%" y="533" width="0.5587%" height="15" fill="rgb(223,65,44)" fg:x="767" fg:w="7"/><text x="61.4631%" y="543.50"></text></g><g><title>core::fmt::write (7 samples, 0.56%)</title><rect x="61.2131%" y="517" width="0.5587%" height="15" fill="rgb(224,188,28)" fg:x="767" fg:w="7"/><text x="61.4631%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (7 samples, 0.56%)</title><rect x="61.2131%" y="501" width="0.5587%" height="15" fill="rgb(254,197,27)" fg:x="767" fg:w="7"/><text x="61.4631%" y="511.50"></text></g><g><title>&lt;kernel::actions::Perform as core::fmt::Debug&gt;::fmt (7 samples, 0.56%)</title><rect x="61.2131%" y="485" width="0.5587%" height="15" fill="rgb(220,200,25)" fg:x="767" fg:w="7"/><text x="61.4631%" y="495.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (6 samples, 0.48%)</title><rect x="61.2929%" y="469" width="0.4789%" height="15" fill="rgb(239,225,54)" fg:x="768" fg:w="6"/><text x="61.5429%" y="479.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (6 samples, 0.48%)</title><rect x="61.2929%" y="453" width="0.4789%" height="15" fill="rgb(211,59,40)" fg:x="768" fg:w="6"/><text x="61.5429%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (6 samples, 0.48%)</title><rect x="61.2929%" y="437" width="0.4789%" height="15" fill="rgb(213,176,46)" fg:x="768" fg:w="6"/><text x="61.5429%" y="447.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (6 samples, 0.48%)</title><rect x="61.2929%" y="421" width="0.4789%" height="15" fill="rgb(226,99,4)" fg:x="768" fg:w="6"/><text x="61.5429%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="61.6121%" y="405" width="0.1596%" height="15" fill="rgb(239,203,43)" fg:x="772" fg:w="2"/><text x="61.8621%" y="415.50"></text></g><g><title>core::fmt::Formatter::debug_struct (1 samples, 0.08%)</title><rect x="61.6919%" y="389" width="0.0798%" height="15" fill="rgb(246,1,45)" fg:x="773" fg:w="1"/><text x="61.9419%" y="399.50"></text></g><g><title>core::fmt::builders::debug_struct_new (1 samples, 0.08%)</title><rect x="61.6919%" y="373" width="0.0798%" height="15" fill="rgb(231,42,52)" fg:x="773" fg:w="1"/><text x="61.9419%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="61.6919%" y="357" width="0.0798%" height="15" fill="rgb(240,13,50)" fg:x="773" fg:w="1"/><text x="61.9419%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="61.6919%" y="341" width="0.0798%" height="15" fill="rgb(225,81,14)" fg:x="773" fg:w="1"/><text x="61.9419%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="61.6919%" y="325" width="0.0798%" height="15" fill="rgb(216,182,23)" fg:x="773" fg:w="1"/><text x="61.9419%" y="335.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="61.6919%" y="309" width="0.0798%" height="15" fill="rgb(233,137,19)" fg:x="773" fg:w="1"/><text x="61.9419%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="61.6919%" y="293" width="0.0798%" height="15" fill="rgb(242,61,46)" fg:x="773" fg:w="1"/><text x="61.9419%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="61.6919%" y="277" width="0.0798%" height="15" fill="rgb(221,168,51)" fg:x="773" fg:w="1"/><text x="61.9419%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="61.6919%" y="261" width="0.0798%" height="15" fill="rgb(238,48,15)" fg:x="773" fg:w="1"/><text x="61.9419%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="61.6919%" y="245" width="0.0798%" height="15" fill="rgb(216,13,16)" fg:x="773" fg:w="1"/><text x="61.9419%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="61.6919%" y="229" width="0.0798%" height="15" fill="rgb(223,185,34)" fg:x="773" fg:w="1"/><text x="61.9419%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="61.6919%" y="213" width="0.0798%" height="15" fill="rgb(228,94,42)" fg:x="773" fg:w="1"/><text x="61.9419%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="61.6919%" y="197" width="0.0798%" height="15" fill="rgb(218,166,43)" fg:x="773" fg:w="1"/><text x="61.9419%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="61.6919%" y="181" width="0.0798%" height="15" fill="rgb(232,30,50)" fg:x="773" fg:w="1"/><text x="61.9419%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="61.6919%" y="165" width="0.0798%" height="15" fill="rgb(245,206,45)" fg:x="773" fg:w="1"/><text x="61.9419%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="61.6919%" y="149" width="0.0798%" height="15" fill="rgb(220,56,22)" fg:x="773" fg:w="1"/><text x="61.9419%" y="159.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="61.6919%" y="133" width="0.0798%" height="15" fill="rgb(239,129,38)" fg:x="773" fg:w="1"/><text x="61.9419%" y="143.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="61.6919%" y="117" width="0.0798%" height="15" fill="rgb(207,68,41)" fg:x="773" fg:w="1"/><text x="61.9419%" y="127.50"></text></g><g><title>chrono::offset::utc::Utc::now (1 samples, 0.08%)</title><rect x="61.7717%" y="533" width="0.0798%" height="15" fill="rgb(221,21,7)" fg:x="774" fg:w="1"/><text x="62.0217%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="61.7717%" y="517" width="0.0798%" height="15" fill="rgb(240,33,25)" fg:x="774" fg:w="1"/><text x="62.0217%" y="527.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="61.7717%" y="501" width="0.0798%" height="15" fill="rgb(242,119,10)" fg:x="774" fg:w="1"/><text x="62.0217%" y="511.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new (6 samples, 0.48%)</title><rect x="61.8516%" y="533" width="0.4789%" height="15" fill="rgb(214,149,40)" fg:x="775" fg:w="6"/><text x="62.1016%" y="543.50"></text></g><g><title>tracing_core::callsite::register_dispatch (6 samples, 0.48%)</title><rect x="61.8516%" y="517" width="0.4789%" height="15" fill="rgb(228,25,36)" fg:x="775" fg:w="6"/><text x="62.1016%" y="527.50"></text></g><g><title>tracing_core::callsite::Callsites::rebuild_interest (6 samples, 0.48%)</title><rect x="61.8516%" y="501" width="0.4789%" height="15" fill="rgb(222,59,15)" fg:x="775" fg:w="6"/><text x="62.1016%" y="511.50"></text></g><g><title>tracing_core::callsite::dispatchers::Rebuilder::for_each (3 samples, 0.24%)</title><rect x="62.0910%" y="485" width="0.2394%" height="15" fill="rgb(218,170,0)" fg:x="778" fg:w="3"/><text x="62.3410%" y="495.50"></text></g><g><title>tracing_core::dispatcher::get_default (2 samples, 0.16%)</title><rect x="62.3304%" y="533" width="0.1596%" height="15" fill="rgb(232,173,23)" fg:x="781" fg:w="2"/><text x="62.5804%" y="543.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::downgrade (2 samples, 0.16%)</title><rect x="62.3304%" y="517" width="0.1596%" height="15" fill="rgb(218,116,1)" fg:x="781" fg:w="2"/><text x="62.5804%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.8093%" y="405" width="0.0798%" height="15" fill="rgb(207,34,4)" fg:x="787" fg:w="1"/><text x="63.0593%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.8093%" y="389" width="0.0798%" height="15" fill="rgb(229,54,52)" fg:x="787" fg:w="1"/><text x="63.0593%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.8093%" y="373" width="0.0798%" height="15" fill="rgb(211,86,23)" fg:x="787" fg:w="1"/><text x="63.0593%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.8093%" y="357" width="0.0798%" height="15" fill="rgb(254,153,34)" fg:x="787" fg:w="1"/><text x="63.0593%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.8093%" y="341" width="0.0798%" height="15" fill="rgb(219,220,14)" fg:x="787" fg:w="1"/><text x="63.0593%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.8093%" y="325" width="0.0798%" height="15" fill="rgb(247,8,26)" fg:x="787" fg:w="1"/><text x="63.0593%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.8093%" y="309" width="0.0798%" height="15" fill="rgb(213,129,42)" fg:x="787" fg:w="1"/><text x="63.0593%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.8093%" y="293" width="0.0798%" height="15" fill="rgb(225,95,41)" fg:x="787" fg:w="1"/><text x="63.0593%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.8093%" y="277" width="0.0798%" height="15" fill="rgb(215,134,24)" fg:x="787" fg:w="1"/><text x="63.0593%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.8093%" y="261" width="0.0798%" height="15" fill="rgb(235,23,54)" fg:x="787" fg:w="1"/><text x="63.0593%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.8093%" y="245" width="0.0798%" height="15" fill="rgb(229,96,31)" fg:x="787" fg:w="1"/><text x="63.0593%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.8093%" y="229" width="0.0798%" height="15" fill="rgb(206,111,12)" fg:x="787" fg:w="1"/><text x="63.0593%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.8093%" y="213" width="0.0798%" height="15" fill="rgb(222,177,8)" fg:x="787" fg:w="1"/><text x="63.0593%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.8093%" y="197" width="0.0798%" height="15" fill="rgb(251,36,52)" fg:x="787" fg:w="1"/><text x="63.0593%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.9689%" y="373" width="0.0798%" height="15" fill="rgb(216,182,29)" fg:x="789" fg:w="1"/><text x="63.2189%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (5 samples, 0.40%)</title><rect x="62.7294%" y="421" width="0.3990%" height="15" fill="rgb(241,145,50)" fg:x="786" fg:w="5"/><text x="62.9794%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="62.8891%" y="405" width="0.2394%" height="15" fill="rgb(231,71,35)" fg:x="788" fg:w="3"/><text x="63.1391%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.8891%" y="389" width="0.2394%" height="15" fill="rgb(218,22,17)" fg:x="788" fg:w="3"/><text x="63.1391%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.0487%" y="373" width="0.0798%" height="15" fill="rgb(225,227,6)" fg:x="790" fg:w="1"/><text x="63.2987%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.0487%" y="357" width="0.0798%" height="15" fill="rgb(224,204,17)" fg:x="790" fg:w="1"/><text x="63.2987%" y="367.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="63.1285%" y="373" width="0.0798%" height="15" fill="rgb(227,61,28)" fg:x="791" fg:w="1"/><text x="63.3785%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.3679%" y="325" width="0.1596%" height="15" fill="rgb(242,148,23)" fg:x="794" fg:w="2"/><text x="63.6179%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="63.3679%" y="309" width="0.1596%" height="15" fill="rgb(237,105,33)" fg:x="794" fg:w="2"/><text x="63.6179%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.3679%" y="293" width="0.1596%" height="15" fill="rgb(238,218,40)" fg:x="794" fg:w="2"/><text x="63.6179%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.3679%" y="277" width="0.1596%" height="15" fill="rgb(209,126,11)" fg:x="794" fg:w="2"/><text x="63.6179%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.3679%" y="261" width="0.1596%" height="15" fill="rgb(245,90,11)" fg:x="794" fg:w="2"/><text x="63.6179%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="63.3679%" y="245" width="0.1596%" height="15" fill="rgb(211,195,10)" fg:x="794" fg:w="2"/><text x="63.6179%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.4477%" y="229" width="0.0798%" height="15" fill="rgb(231,45,45)" fg:x="795" fg:w="1"/><text x="63.6977%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.4477%" y="213" width="0.0798%" height="15" fill="rgb(246,100,43)" fg:x="795" fg:w="1"/><text x="63.6977%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.4477%" y="197" width="0.0798%" height="15" fill="rgb(241,193,8)" fg:x="795" fg:w="1"/><text x="63.6977%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.4477%" y="181" width="0.0798%" height="15" fill="rgb(208,76,19)" fg:x="795" fg:w="1"/><text x="63.6977%" y="191.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="63.4477%" y="165" width="0.0798%" height="15" fill="rgb(223,69,40)" fg:x="795" fg:w="1"/><text x="63.6977%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="63.4477%" y="149" width="0.0798%" height="15" fill="rgb(207,120,39)" fg:x="795" fg:w="1"/><text x="63.6977%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="63.2083%" y="341" width="0.4789%" height="15" fill="rgb(212,209,28)" fg:x="792" fg:w="6"/><text x="63.4583%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="63.5275%" y="325" width="0.1596%" height="15" fill="rgb(246,82,29)" fg:x="796" fg:w="2"/><text x="63.7775%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="63.5275%" y="309" width="0.1596%" height="15" fill="rgb(239,6,40)" fg:x="796" fg:w="2"/><text x="63.7775%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="63.5275%" y="293" width="0.1596%" height="15" fill="rgb(228,181,35)" fg:x="796" fg:w="2"/><text x="63.7775%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="63.5275%" y="277" width="0.1596%" height="15" fill="rgb(238,151,2)" fg:x="796" fg:w="2"/><text x="63.7775%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="63.5275%" y="261" width="0.1596%" height="15" fill="rgb(236,94,18)" fg:x="796" fg:w="2"/><text x="63.7775%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="63.5275%" y="245" width="0.1596%" height="15" fill="rgb(208,38,14)" fg:x="796" fg:w="2"/><text x="63.7775%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="63.5275%" y="229" width="0.1596%" height="15" fill="rgb(234,215,27)" fg:x="796" fg:w="2"/><text x="63.7775%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="63.5275%" y="213" width="0.1596%" height="15" fill="rgb(254,211,53)" fg:x="796" fg:w="2"/><text x="63.7775%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="63.5275%" y="197" width="0.1596%" height="15" fill="rgb(216,175,11)" fg:x="796" fg:w="2"/><text x="63.7775%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="63.5275%" y="181" width="0.1596%" height="15" fill="rgb(246,179,26)" fg:x="796" fg:w="2"/><text x="63.7775%" y="191.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="63.5275%" y="165" width="0.1596%" height="15" fill="rgb(249,19,52)" fg:x="796" fg:w="2"/><text x="63.7775%" y="175.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="63.5275%" y="149" width="0.1596%" height="15" fill="rgb(230,42,52)" fg:x="796" fg:w="2"/><text x="63.7775%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="63.2083%" y="357" width="0.5587%" height="15" fill="rgb(221,171,0)" fg:x="792" fg:w="7"/><text x="63.4583%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.6872%" y="341" width="0.0798%" height="15" fill="rgb(222,177,40)" fg:x="798" fg:w="1"/><text x="63.9372%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.6872%" y="325" width="0.0798%" height="15" fill="rgb(247,34,16)" fg:x="798" fg:w="1"/><text x="63.9372%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.6872%" y="309" width="0.0798%" height="15" fill="rgb(213,217,37)" fg:x="798" fg:w="1"/><text x="63.9372%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.6872%" y="293" width="0.0798%" height="15" fill="rgb(231,189,24)" fg:x="798" fg:w="1"/><text x="63.9372%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.6872%" y="277" width="0.0798%" height="15" fill="rgb(214,22,9)" fg:x="798" fg:w="1"/><text x="63.9372%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.6872%" y="261" width="0.0798%" height="15" fill="rgb(212,70,22)" fg:x="798" fg:w="1"/><text x="63.9372%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.6872%" y="245" width="0.0798%" height="15" fill="rgb(249,64,51)" fg:x="798" fg:w="1"/><text x="63.9372%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.6872%" y="229" width="0.0798%" height="15" fill="rgb(249,148,20)" fg:x="798" fg:w="1"/><text x="63.9372%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.6872%" y="213" width="0.0798%" height="15" fill="rgb(246,46,48)" fg:x="798" fg:w="1"/><text x="63.9372%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.6872%" y="197" width="0.0798%" height="15" fill="rgb(217,34,48)" fg:x="798" fg:w="1"/><text x="63.9372%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.6872%" y="181" width="0.0798%" height="15" fill="rgb(222,45,26)" fg:x="798" fg:w="1"/><text x="63.9372%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.6872%" y="165" width="0.0798%" height="15" fill="rgb(230,201,36)" fg:x="798" fg:w="1"/><text x="63.9372%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.7670%" y="341" width="0.0798%" height="15" fill="rgb(217,30,43)" fg:x="799" fg:w="1"/><text x="64.0170%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.7670%" y="325" width="0.0798%" height="15" fill="rgb(230,197,40)" fg:x="799" fg:w="1"/><text x="64.0170%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.7670%" y="309" width="0.0798%" height="15" fill="rgb(239,181,18)" fg:x="799" fg:w="1"/><text x="64.0170%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.7670%" y="293" width="0.0798%" height="15" fill="rgb(222,60,39)" fg:x="799" fg:w="1"/><text x="64.0170%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.9266%" y="277" width="0.0798%" height="15" fill="rgb(210,60,22)" fg:x="801" fg:w="1"/><text x="64.1766%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.32%)</title><rect x="63.7670%" y="357" width="0.3192%" height="15" fill="rgb(239,213,48)" fg:x="799" fg:w="4"/><text x="64.0170%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="63.8468%" y="341" width="0.2394%" height="15" fill="rgb(253,214,23)" fg:x="800" fg:w="3"/><text x="64.0968%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="63.8468%" y="325" width="0.2394%" height="15" fill="rgb(211,98,45)" fg:x="800" fg:w="3"/><text x="64.0968%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="63.8468%" y="309" width="0.2394%" height="15" fill="rgb(239,130,44)" fg:x="800" fg:w="3"/><text x="64.0968%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="63.8468%" y="293" width="0.2394%" height="15" fill="rgb(222,181,35)" fg:x="800" fg:w="3"/><text x="64.0968%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.0064%" y="277" width="0.0798%" height="15" fill="rgb(219,219,49)" fg:x="802" fg:w="1"/><text x="64.2564%" y="287.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="64.0862%" y="357" width="0.0798%" height="15" fill="rgb(227,161,51)" fg:x="803" fg:w="1"/><text x="64.3362%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.0862%" y="341" width="0.0798%" height="15" fill="rgb(239,112,27)" fg:x="803" fg:w="1"/><text x="64.3362%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.1660%" y="229" width="0.0798%" height="15" fill="rgb(248,122,18)" fg:x="804" fg:w="1"/><text x="64.4160%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.1660%" y="213" width="0.0798%" height="15" fill="rgb(245,130,23)" fg:x="804" fg:w="1"/><text x="64.4160%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="64.1660%" y="197" width="0.0798%" height="15" fill="rgb(211,225,28)" fg:x="804" fg:w="1"/><text x="64.4160%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.1660%" y="181" width="0.0798%" height="15" fill="rgb(242,105,44)" fg:x="804" fg:w="1"/><text x="64.4160%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="64.3256%" y="133" width="0.0798%" height="15" fill="rgb(216,183,46)" fg:x="806" fg:w="1"/><text x="64.5756%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.3256%" y="117" width="0.0798%" height="15" fill="rgb(227,112,9)" fg:x="806" fg:w="1"/><text x="64.5756%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.3256%" y="101" width="0.0798%" height="15" fill="rgb(244,21,0)" fg:x="806" fg:w="1"/><text x="64.5756%" y="111.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="64.3256%" y="85" width="0.0798%" height="15" fill="rgb(236,185,14)" fg:x="806" fg:w="1"/><text x="64.5756%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="64.3256%" y="69" width="0.0798%" height="15" fill="rgb(236,170,30)" fg:x="806" fg:w="1"/><text x="64.5756%" y="79.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="64.3256%" y="53" width="0.0798%" height="15" fill="rgb(209,198,51)" fg:x="806" fg:w="1"/><text x="64.5756%" y="63.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="64.3256%" y="37" width="0.0798%" height="15" fill="rgb(205,171,26)" fg:x="806" fg:w="1"/><text x="64.5756%" y="47.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="64.3256%" y="197" width="0.1596%" height="15" fill="rgb(246,41,49)" fg:x="806" fg:w="2"/><text x="64.5756%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.3256%" y="181" width="0.1596%" height="15" fill="rgb(240,229,12)" fg:x="806" fg:w="2"/><text x="64.5756%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="64.3256%" y="165" width="0.1596%" height="15" fill="rgb(212,8,54)" fg:x="806" fg:w="2"/><text x="64.5756%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.3256%" y="149" width="0.1596%" height="15" fill="rgb(230,114,13)" fg:x="806" fg:w="2"/><text x="64.5756%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.4054%" y="133" width="0.0798%" height="15" fill="rgb(229,130,28)" fg:x="807" fg:w="1"/><text x="64.6554%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="64.1660%" y="261" width="0.3990%" height="15" fill="rgb(206,139,15)" fg:x="804" fg:w="5"/><text x="64.4160%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="64.1660%" y="245" width="0.3990%" height="15" fill="rgb(241,188,35)" fg:x="804" fg:w="5"/><text x="64.4160%" y="255.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (4 samples, 0.32%)</title><rect x="64.2458%" y="229" width="0.3192%" height="15" fill="rgb(208,224,26)" fg:x="805" fg:w="4"/><text x="64.4958%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="64.3256%" y="213" width="0.2394%" height="15" fill="rgb(251,131,28)" fg:x="806" fg:w="3"/><text x="64.5756%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.4852%" y="197" width="0.0798%" height="15" fill="rgb(208,153,1)" fg:x="808" fg:w="1"/><text x="64.7352%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="64.5650%" y="261" width="0.0798%" height="15" fill="rgb(234,33,36)" fg:x="809" fg:w="1"/><text x="64.8150%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="64.5650%" y="245" width="0.0798%" height="15" fill="rgb(246,42,29)" fg:x="809" fg:w="1"/><text x="64.8150%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.5650%" y="229" width="0.0798%" height="15" fill="rgb(251,114,16)" fg:x="809" fg:w="1"/><text x="64.8150%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="64.6449%" y="197" width="0.0798%" height="15" fill="rgb(233,13,38)" fg:x="810" fg:w="1"/><text x="64.8949%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.6449%" y="181" width="0.0798%" height="15" fill="rgb(247,120,19)" fg:x="810" fg:w="1"/><text x="64.8949%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.6449%" y="165" width="0.0798%" height="15" fill="rgb(205,11,16)" fg:x="810" fg:w="1"/><text x="64.8949%" y="175.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="64.6449%" y="213" width="0.1596%" height="15" fill="rgb(228,185,19)" fg:x="810" fg:w="2"/><text x="64.8949%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.7247%" y="197" width="0.0798%" height="15" fill="rgb(239,88,52)" fg:x="811" fg:w="1"/><text x="64.9747%" y="207.50"></text></g><g><title>kernel::model::entity::Entity::from_value (9 samples, 0.72%)</title><rect x="64.1660%" y="357" width="0.7183%" height="15" fill="rgb(219,23,1)" fg:x="804" fg:w="9"/><text x="64.4160%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="64.1660%" y="341" width="0.7183%" height="15" fill="rgb(253,177,16)" fg:x="804" fg:w="9"/><text x="64.4160%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="64.1660%" y="325" width="0.7183%" height="15" fill="rgb(225,150,40)" fg:x="804" fg:w="9"/><text x="64.4160%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (9 samples, 0.72%)</title><rect x="64.1660%" y="309" width="0.7183%" height="15" fill="rgb(208,108,30)" fg:x="804" fg:w="9"/><text x="64.4160%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="64.1660%" y="293" width="0.7183%" height="15" fill="rgb(214,122,4)" fg:x="804" fg:w="9"/><text x="64.4160%" y="303.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.72%)</title><rect x="64.1660%" y="277" width="0.7183%" height="15" fill="rgb(229,74,37)" fg:x="804" fg:w="9"/><text x="64.4160%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="64.6449%" y="261" width="0.2394%" height="15" fill="rgb(233,61,41)" fg:x="810" fg:w="3"/><text x="64.8949%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="64.6449%" y="245" width="0.2394%" height="15" fill="rgb(238,191,5)" fg:x="810" fg:w="3"/><text x="64.8949%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="64.6449%" y="229" width="0.2394%" height="15" fill="rgb(233,78,24)" fg:x="810" fg:w="3"/><text x="64.8949%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.8045%" y="213" width="0.0798%" height="15" fill="rgb(211,142,8)" fg:x="812" fg:w="1"/><text x="65.0545%" y="223.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="64.8045%" y="197" width="0.0798%" height="15" fill="rgb(253,38,53)" fg:x="812" fg:w="1"/><text x="65.0545%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.2833%" y="213" width="0.0798%" height="15" fill="rgb(234,63,51)" fg:x="818" fg:w="1"/><text x="65.5333%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.2833%" y="197" width="0.0798%" height="15" fill="rgb(205,23,31)" fg:x="818" fg:w="1"/><text x="65.5333%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.2833%" y="181" width="0.0798%" height="15" fill="rgb(210,184,50)" fg:x="818" fg:w="1"/><text x="65.5333%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.2833%" y="165" width="0.0798%" height="15" fill="rgb(222,112,26)" fg:x="818" fg:w="1"/><text x="65.5333%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.2833%" y="149" width="0.0798%" height="15" fill="rgb(250,98,18)" fg:x="818" fg:w="1"/><text x="65.5333%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.2833%" y="133" width="0.0798%" height="15" fill="rgb(250,34,12)" fg:x="818" fg:w="1"/><text x="65.5333%" y="143.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.2833%" y="117" width="0.0798%" height="15" fill="rgb(236,141,30)" fg:x="818" fg:w="1"/><text x="65.5333%" y="127.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="65.2833%" y="101" width="0.0798%" height="15" fill="rgb(246,134,38)" fg:x="818" fg:w="1"/><text x="65.5333%" y="111.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="65.1237%" y="229" width="0.3990%" height="15" fill="rgb(240,114,4)" fg:x="816" fg:w="5"/><text x="65.3737%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.3631%" y="213" width="0.1596%" height="15" fill="rgb(243,113,39)" fg:x="819" fg:w="2"/><text x="65.6131%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.4429%" y="197" width="0.0798%" height="15" fill="rgb(239,215,4)" fg:x="820" fg:w="1"/><text x="65.6929%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.4429%" y="181" width="0.0798%" height="15" fill="rgb(236,229,45)" fg:x="820" fg:w="1"/><text x="65.6929%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.5227%" y="229" width="0.0798%" height="15" fill="rgb(242,2,6)" fg:x="821" fg:w="1"/><text x="65.7727%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.5227%" y="213" width="0.0798%" height="15" fill="rgb(239,108,21)" fg:x="821" fg:w="1"/><text x="65.7727%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="64.9641%" y="245" width="0.7981%" height="15" fill="rgb(215,168,34)" fg:x="814" fg:w="10"/><text x="65.2141%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="65.6026%" y="229" width="0.1596%" height="15" fill="rgb(238,31,17)" fg:x="822" fg:w="2"/><text x="65.8526%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="65.6026%" y="213" width="0.1596%" height="15" fill="rgb(220,133,11)" fg:x="822" fg:w="2"/><text x="65.8526%" y="223.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="65.6026%" y="197" width="0.1596%" height="15" fill="rgb(212,158,23)" fg:x="822" fg:w="2"/><text x="65.8526%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="64.9641%" y="293" width="0.8779%" height="15" fill="rgb(223,172,7)" fg:x="814" fg:w="11"/><text x="65.2141%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="64.9641%" y="277" width="0.8779%" height="15" fill="rgb(244,3,52)" fg:x="814" fg:w="11"/><text x="65.2141%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="64.9641%" y="261" width="0.8779%" height="15" fill="rgb(207,69,27)" fg:x="814" fg:w="11"/><text x="65.2141%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.7622%" y="245" width="0.0798%" height="15" fill="rgb(213,136,45)" fg:x="824" fg:w="1"/><text x="66.0122%" y="255.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (35 samples, 2.79%)</title><rect x="63.1285%" y="421" width="2.7933%" height="15" fill="rgb(218,79,17)" fg:x="791" fg:w="35"/><text x="63.3785%" y="431.50">&lt;k..</text></g><g><title>kernel::model::EntityPtrResolver::entity (35 samples, 2.79%)</title><rect x="63.1285%" y="405" width="2.7933%" height="15" fill="rgb(216,106,36)" fg:x="791" fg:w="35"/><text x="63.3785%" y="415.50">ke..</text></g><g><title>engine::session::Session::load_entity (35 samples, 2.79%)</title><rect x="63.1285%" y="389" width="2.7933%" height="15" fill="rgb(251,27,45)" fg:x="791" fg:w="35"/><text x="63.3785%" y="399.50">en..</text></g><g><title>engine::session::internal::Entities::add_persisted (34 samples, 2.71%)</title><rect x="63.2083%" y="373" width="2.7135%" height="15" fill="rgb(232,21,34)" fg:x="792" fg:w="34"/><text x="63.4583%" y="383.50">en..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (13 samples, 1.04%)</title><rect x="64.8843%" y="357" width="1.0375%" height="15" fill="rgb(249,191,16)" fg:x="813" fg:w="13"/><text x="65.1343%" y="367.50"></text></g><g><title>serde_json::de::from_trait (13 samples, 1.04%)</title><rect x="64.8843%" y="341" width="1.0375%" height="15" fill="rgb(224,88,20)" fg:x="813" fg:w="13"/><text x="65.1343%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.04%)</title><rect x="64.8843%" y="325" width="1.0375%" height="15" fill="rgb(237,93,27)" fg:x="813" fg:w="13"/><text x="65.1343%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.04%)</title><rect x="64.8843%" y="309" width="1.0375%" height="15" fill="rgb(226,198,48)" fg:x="813" fg:w="13"/><text x="65.1343%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.8420%" y="293" width="0.0798%" height="15" fill="rgb(207,162,53)" fg:x="825" fg:w="1"/><text x="66.0920%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.8420%" y="277" width="0.0798%" height="15" fill="rgb(207,169,9)" fg:x="825" fg:w="1"/><text x="66.0920%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.9218%" y="421" width="0.0798%" height="15" fill="rgb(224,166,46)" fg:x="826" fg:w="1"/><text x="66.1718%" y="431.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (44 samples, 3.51%)</title><rect x="62.7294%" y="453" width="3.5116%" height="15" fill="rgb(233,26,6)" fg:x="786" fg:w="44"/><text x="62.9794%" y="463.50">&lt;en..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_area (44 samples, 3.51%)</title><rect x="62.7294%" y="437" width="3.5116%" height="15" fill="rgb(218,106,45)" fg:x="786" fg:w="44"/><text x="62.9794%" y="447.50">&lt;pl..</text></g><g><title>plugins_core::finding::DefaultFinder::find_top_container (3 samples, 0.24%)</title><rect x="66.0016%" y="421" width="0.2394%" height="15" fill="rgb(240,217,4)" fg:x="827" fg:w="3"/><text x="66.2516%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="66.0814%" y="405" width="0.1596%" height="15" fill="rgb(246,171,10)" fg:x="828" fg:w="2"/><text x="66.3314%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (2 samples, 0.16%)</title><rect x="66.0814%" y="389" width="0.1596%" height="15" fill="rgb(223,197,30)" fg:x="828" fg:w="2"/><text x="66.3314%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="66.1612%" y="373" width="0.0798%" height="15" fill="rgb(207,92,16)" fg:x="829" fg:w="1"/><text x="66.4112%" y="383.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="66.2410%" y="421" width="0.1596%" height="15" fill="rgb(211,6,44)" fg:x="830" fg:w="2"/><text x="66.4910%" y="431.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (2 samples, 0.16%)</title><rect x="66.2410%" y="405" width="0.1596%" height="15" fill="rgb(219,139,2)" fg:x="830" fg:w="2"/><text x="66.4910%" y="415.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="66.2410%" y="389" width="0.1596%" height="15" fill="rgb(224,103,21)" fg:x="830" fg:w="2"/><text x="66.4910%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="66.2410%" y="373" width="0.1596%" height="15" fill="rgb(254,110,48)" fg:x="830" fg:w="2"/><text x="66.4910%" y="383.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="66.2410%" y="357" width="0.1596%" height="15" fill="rgb(212,88,19)" fg:x="830" fg:w="2"/><text x="66.4910%" y="367.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="66.2410%" y="341" width="0.1596%" height="15" fill="rgb(248,103,6)" fg:x="830" fg:w="2"/><text x="66.4910%" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.16%)</title><rect x="66.2410%" y="325" width="0.1596%" height="15" fill="rgb(214,53,46)" fg:x="830" fg:w="2"/><text x="66.4910%" y="335.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (2 samples, 0.16%)</title><rect x="66.2410%" y="309" width="0.1596%" height="15" fill="rgb(236,190,24)" fg:x="830" fg:w="2"/><text x="66.4910%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="66.3208%" y="293" width="0.0798%" height="15" fill="rgb(254,58,28)" fg:x="831" fg:w="1"/><text x="66.5708%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="66.3208%" y="277" width="0.0798%" height="15" fill="rgb(243,63,27)" fg:x="831" fg:w="1"/><text x="66.5708%" y="287.50"></text></g><g><title>plugins_rune::runner::SharedRunners::add_runners_for (1 samples, 0.08%)</title><rect x="66.4006%" y="421" width="0.0798%" height="15" fill="rgb(206,81,20)" fg:x="832" fg:w="1"/><text x="66.6506%" y="431.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="66.6401%" y="389" width="0.1596%" height="15" fill="rgb(252,69,51)" fg:x="835" fg:w="2"/><text x="66.8901%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="66.6401%" y="373" width="0.1596%" height="15" fill="rgb(222,213,4)" fg:x="835" fg:w="2"/><text x="66.8901%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.8795%" y="357" width="0.0798%" height="15" fill="rgb(226,198,12)" fg:x="838" fg:w="1"/><text x="67.1295%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.8795%" y="341" width="0.0798%" height="15" fill="rgb(248,115,11)" fg:x="838" fg:w="1"/><text x="67.1295%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.8795%" y="325" width="0.0798%" height="15" fill="rgb(221,148,54)" fg:x="838" fg:w="1"/><text x="67.1295%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.8795%" y="309" width="0.0798%" height="15" fill="rgb(214,209,51)" fg:x="838" fg:w="1"/><text x="67.1295%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.8795%" y="293" width="0.0798%" height="15" fill="rgb(249,116,53)" fg:x="838" fg:w="1"/><text x="67.1295%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.8795%" y="277" width="0.0798%" height="15" fill="rgb(248,170,1)" fg:x="838" fg:w="1"/><text x="67.1295%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.8795%" y="261" width="0.0798%" height="15" fill="rgb(244,105,10)" fg:x="838" fg:w="1"/><text x="67.1295%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.8795%" y="245" width="0.0798%" height="15" fill="rgb(229,100,5)" fg:x="838" fg:w="1"/><text x="67.1295%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.8795%" y="229" width="0.0798%" height="15" fill="rgb(233,221,39)" fg:x="838" fg:w="1"/><text x="67.1295%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.8795%" y="213" width="0.0798%" height="15" fill="rgb(233,88,21)" fg:x="838" fg:w="1"/><text x="67.1295%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.8795%" y="197" width="0.0798%" height="15" fill="rgb(206,13,0)" fg:x="838" fg:w="1"/><text x="67.1295%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.8795%" y="181" width="0.0798%" height="15" fill="rgb(242,15,35)" fg:x="838" fg:w="1"/><text x="67.1295%" y="191.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="66.8795%" y="165" width="0.0798%" height="15" fill="rgb(247,142,41)" fg:x="838" fg:w="1"/><text x="67.1295%" y="175.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="66.9593%" y="293" width="0.0798%" height="15" fill="rgb(245,51,29)" fg:x="839" fg:w="1"/><text x="67.2093%" y="303.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="66.8795%" y="373" width="0.2394%" height="15" fill="rgb(228,209,43)" fg:x="838" fg:w="3"/><text x="67.1295%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="66.9593%" y="357" width="0.1596%" height="15" fill="rgb(233,185,9)" fg:x="839" fg:w="2"/><text x="67.2093%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.9593%" y="341" width="0.1596%" height="15" fill="rgb(226,93,0)" fg:x="839" fg:w="2"/><text x="67.2093%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="66.9593%" y="325" width="0.1596%" height="15" fill="rgb(245,194,43)" fg:x="839" fg:w="2"/><text x="67.2093%" y="335.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="66.9593%" y="309" width="0.1596%" height="15" fill="rgb(211,145,34)" fg:x="839" fg:w="2"/><text x="67.2093%" y="319.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="67.0391%" y="293" width="0.0798%" height="15" fill="rgb(231,228,28)" fg:x="840" fg:w="1"/><text x="67.2891%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.1189%" y="309" width="0.1596%" height="15" fill="rgb(236,149,4)" fg:x="841" fg:w="2"/><text x="67.3689%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.1189%" y="293" width="0.1596%" height="15" fill="rgb(234,114,38)" fg:x="841" fg:w="2"/><text x="67.3689%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.1189%" y="277" width="0.1596%" height="15" fill="rgb(246,132,51)" fg:x="841" fg:w="2"/><text x="67.3689%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.1987%" y="261" width="0.0798%" height="15" fill="rgb(251,137,22)" fg:x="842" fg:w="1"/><text x="67.4487%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.1987%" y="245" width="0.0798%" height="15" fill="rgb(243,59,52)" fg:x="842" fg:w="1"/><text x="67.4487%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.1987%" y="229" width="0.0798%" height="15" fill="rgb(239,56,28)" fg:x="842" fg:w="1"/><text x="67.4487%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.1987%" y="213" width="0.0798%" height="15" fill="rgb(218,168,27)" fg:x="842" fg:w="1"/><text x="67.4487%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.1987%" y="197" width="0.0798%" height="15" fill="rgb(232,165,11)" fg:x="842" fg:w="1"/><text x="67.4487%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.1987%" y="181" width="0.0798%" height="15" fill="rgb(253,55,41)" fg:x="842" fg:w="1"/><text x="67.4487%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.1987%" y="165" width="0.0798%" height="15" fill="rgb(233,206,24)" fg:x="842" fg:w="1"/><text x="67.4487%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.1987%" y="149" width="0.0798%" height="15" fill="rgb(220,199,8)" fg:x="842" fg:w="1"/><text x="67.4487%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.1987%" y="133" width="0.0798%" height="15" fill="rgb(254,65,26)" fg:x="842" fg:w="1"/><text x="67.4487%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.1987%" y="117" width="0.0798%" height="15" fill="rgb(253,102,23)" fg:x="842" fg:w="1"/><text x="67.4487%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.1987%" y="101" width="0.0798%" height="15" fill="rgb(231,103,35)" fg:x="842" fg:w="1"/><text x="67.4487%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.1987%" y="85" width="0.0798%" height="15" fill="rgb(238,26,10)" fg:x="842" fg:w="1"/><text x="67.4487%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.1987%" y="69" width="0.0798%" height="15" fill="rgb(234,191,34)" fg:x="842" fg:w="1"/><text x="67.4487%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.1987%" y="53" width="0.0798%" height="15" fill="rgb(206,210,9)" fg:x="842" fg:w="1"/><text x="67.4487%" y="63.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.2785%" y="229" width="0.0798%" height="15" fill="rgb(219,155,3)" fg:x="843" fg:w="1"/><text x="67.5285%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.2785%" y="213" width="0.0798%" height="15" fill="rgb(221,62,52)" fg:x="843" fg:w="1"/><text x="67.5285%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.2785%" y="197" width="0.0798%" height="15" fill="rgb(215,197,36)" fg:x="843" fg:w="1"/><text x="67.5285%" y="207.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="67.2785%" y="309" width="0.2394%" height="15" fill="rgb(226,222,6)" fg:x="843" fg:w="3"/><text x="67.5285%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="67.2785%" y="293" width="0.2394%" height="15" fill="rgb(215,58,28)" fg:x="843" fg:w="3"/><text x="67.5285%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="67.2785%" y="277" width="0.2394%" height="15" fill="rgb(212,148,2)" fg:x="843" fg:w="3"/><text x="67.5285%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="67.2785%" y="261" width="0.2394%" height="15" fill="rgb(208,21,42)" fg:x="843" fg:w="3"/><text x="67.5285%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="67.2785%" y="245" width="0.2394%" height="15" fill="rgb(209,107,26)" fg:x="843" fg:w="3"/><text x="67.5285%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="67.3583%" y="229" width="0.1596%" height="15" fill="rgb(254,60,47)" fg:x="844" fg:w="2"/><text x="67.6083%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="67.3583%" y="213" width="0.1596%" height="15" fill="rgb(207,226,45)" fg:x="844" fg:w="2"/><text x="67.6083%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.4381%" y="197" width="0.0798%" height="15" fill="rgb(223,124,22)" fg:x="845" fg:w="1"/><text x="67.6881%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.5180%" y="309" width="0.0798%" height="15" fill="rgb(240,162,13)" fg:x="846" fg:w="1"/><text x="67.7680%" y="319.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="67.5978%" y="309" width="0.1596%" height="15" fill="rgb(244,199,31)" fg:x="847" fg:w="2"/><text x="67.8478%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="67.5978%" y="293" width="0.1596%" height="15" fill="rgb(207,92,16)" fg:x="847" fg:w="2"/><text x="67.8478%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="67.5978%" y="277" width="0.1596%" height="15" fill="rgb(215,31,19)" fg:x="847" fg:w="2"/><text x="67.8478%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="67.6776%" y="261" width="0.0798%" height="15" fill="rgb(245,118,14)" fg:x="848" fg:w="1"/><text x="67.9276%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="67.6776%" y="245" width="0.0798%" height="15" fill="rgb(248,12,46)" fg:x="848" fg:w="1"/><text x="67.9276%" y="255.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="67.7574%" y="309" width="0.0798%" height="15" fill="rgb(209,119,0)" fg:x="849" fg:w="1"/><text x="68.0074%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.7574%" y="293" width="0.0798%" height="15" fill="rgb(254,51,44)" fg:x="849" fg:w="1"/><text x="68.0074%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.9968%" y="261" width="0.0798%" height="15" fill="rgb(253,182,35)" fg:x="852" fg:w="1"/><text x="68.2468%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="68.1564%" y="149" width="0.0798%" height="15" fill="rgb(205,198,39)" fg:x="854" fg:w="1"/><text x="68.4064%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.1564%" y="133" width="0.0798%" height="15" fill="rgb(251,175,48)" fg:x="854" fg:w="1"/><text x="68.4064%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="68.1564%" y="117" width="0.0798%" height="15" fill="rgb(239,38,17)" fg:x="854" fg:w="1"/><text x="68.4064%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="68.1564%" y="181" width="0.1596%" height="15" fill="rgb(212,101,8)" fg:x="854" fg:w="2"/><text x="68.4064%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="68.1564%" y="165" width="0.1596%" height="15" fill="rgb(228,35,17)" fg:x="854" fg:w="2"/><text x="68.4064%" y="175.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="68.2362%" y="149" width="0.0798%" height="15" fill="rgb(214,95,8)" fg:x="855" fg:w="1"/><text x="68.4862%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="68.3160%" y="181" width="0.0798%" height="15" fill="rgb(210,176,35)" fg:x="856" fg:w="1"/><text x="68.5660%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.3160%" y="165" width="0.0798%" height="15" fill="rgb(226,4,3)" fg:x="856" fg:w="1"/><text x="68.5660%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="68.1564%" y="213" width="0.3192%" height="15" fill="rgb(232,133,14)" fg:x="854" fg:w="4"/><text x="68.4064%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="68.1564%" y="197" width="0.3192%" height="15" fill="rgb(250,191,8)" fg:x="854" fg:w="4"/><text x="68.4064%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.3958%" y="181" width="0.0798%" height="15" fill="rgb(213,12,45)" fg:x="857" fg:w="1"/><text x="68.6458%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.3958%" y="165" width="0.0798%" height="15" fill="rgb(233,78,26)" fg:x="857" fg:w="1"/><text x="68.6458%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="68.4757%" y="213" width="0.0798%" height="15" fill="rgb(245,222,11)" fg:x="858" fg:w="1"/><text x="68.7257%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="68.4757%" y="197" width="0.0798%" height="15" fill="rgb(216,174,12)" fg:x="858" fg:w="1"/><text x="68.7257%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="68.4757%" y="181" width="0.0798%" height="15" fill="rgb(213,15,9)" fg:x="858" fg:w="1"/><text x="68.7257%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="68.4757%" y="165" width="0.0798%" height="15" fill="rgb(238,103,32)" fg:x="858" fg:w="1"/><text x="68.7257%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="68.5555%" y="197" width="0.0798%" height="15" fill="rgb(245,85,15)" fg:x="859" fg:w="1"/><text x="68.8055%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.5555%" y="181" width="0.0798%" height="15" fill="rgb(254,204,5)" fg:x="859" fg:w="1"/><text x="68.8055%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (11 samples, 0.88%)</title><rect x="68.0766%" y="261" width="0.8779%" height="15" fill="rgb(231,178,15)" fg:x="853" fg:w="11"/><text x="68.3266%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="68.0766%" y="245" width="0.8779%" height="15" fill="rgb(248,151,3)" fg:x="853" fg:w="11"/><text x="68.3266%" y="255.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (10 samples, 0.80%)</title><rect x="68.1564%" y="229" width="0.7981%" height="15" fill="rgb(250,139,13)" fg:x="854" fg:w="10"/><text x="68.4064%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="68.5555%" y="213" width="0.3990%" height="15" fill="rgb(243,107,53)" fg:x="859" fg:w="5"/><text x="68.8055%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="68.6353%" y="197" width="0.3192%" height="15" fill="rgb(232,81,15)" fg:x="860" fg:w="4"/><text x="68.8853%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.32%)</title><rect x="68.6353%" y="181" width="0.3192%" height="15" fill="rgb(225,187,48)" fg:x="860" fg:w="4"/><text x="68.8853%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="68.6353%" y="165" width="0.3192%" height="15" fill="rgb(205,116,12)" fg:x="860" fg:w="4"/><text x="68.8853%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="68.6353%" y="149" width="0.3192%" height="15" fill="rgb(220,222,31)" fg:x="860" fg:w="4"/><text x="68.8853%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="68.7151%" y="133" width="0.2394%" height="15" fill="rgb(233,187,49)" fg:x="861" fg:w="3"/><text x="68.9651%" y="143.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="68.7151%" y="117" width="0.2394%" height="15" fill="rgb(211,168,53)" fg:x="861" fg:w="3"/><text x="68.9651%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="68.7151%" y="101" width="0.2394%" height="15" fill="rgb(206,160,16)" fg:x="861" fg:w="3"/><text x="68.9651%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.8747%" y="85" width="0.0798%" height="15" fill="rgb(254,164,13)" fg:x="863" fg:w="1"/><text x="69.1247%" y="95.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.8747%" y="69" width="0.0798%" height="15" fill="rgb(229,45,30)" fg:x="863" fg:w="1"/><text x="69.1247%" y="79.50"></text></g><g><title>kernel::model::entity::Entity::from_value (15 samples, 1.20%)</title><rect x="67.8372%" y="309" width="1.1971%" height="15" fill="rgb(237,32,10)" fg:x="850" fg:w="15"/><text x="68.0872%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (15 samples, 1.20%)</title><rect x="67.8372%" y="293" width="1.1971%" height="15" fill="rgb(251,20,47)" fg:x="850" fg:w="15"/><text x="68.0872%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (15 samples, 1.20%)</title><rect x="67.8372%" y="277" width="1.1971%" height="15" fill="rgb(251,116,12)" fg:x="850" fg:w="15"/><text x="68.0872%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.9545%" y="261" width="0.0798%" height="15" fill="rgb(214,227,27)" fg:x="864" fg:w="1"/><text x="69.2045%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.9545%" y="245" width="0.0798%" height="15" fill="rgb(248,10,53)" fg:x="864" fg:w="1"/><text x="69.2045%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="69.1141%" y="181" width="0.0798%" height="15" fill="rgb(221,176,25)" fg:x="866" fg:w="1"/><text x="69.3641%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.1141%" y="165" width="0.0798%" height="15" fill="rgb(205,70,46)" fg:x="866" fg:w="1"/><text x="69.3641%" y="175.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="69.1939%" y="165" width="0.0798%" height="15" fill="rgb(217,45,38)" fg:x="867" fg:w="1"/><text x="69.4439%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="69.0343%" y="213" width="0.3192%" height="15" fill="rgb(243,6,54)" fg:x="865" fg:w="4"/><text x="69.2843%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="69.0343%" y="197" width="0.3192%" height="15" fill="rgb(242,76,23)" fg:x="865" fg:w="4"/><text x="69.2843%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="69.1939%" y="181" width="0.1596%" height="15" fill="rgb(239,166,0)" fg:x="867" fg:w="2"/><text x="69.4439%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.2737%" y="165" width="0.0798%" height="15" fill="rgb(238,174,32)" fg:x="868" fg:w="1"/><text x="69.5237%" y="175.50"></text></g><g><title>plugins_core::tools::contained_by (33 samples, 2.63%)</title><rect x="66.7997%" y="389" width="2.6337%" height="15" fill="rgb(238,124,44)" fg:x="837" fg:w="33"/><text x="67.0497%" y="399.50">pl..</text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (29 samples, 2.31%)</title><rect x="67.1189%" y="373" width="2.3144%" height="15" fill="rgb(206,185,9)" fg:x="841" fg:w="29"/><text x="67.3689%" y="383.50">&lt;..</text></g><g><title>kernel::model::EntityPtrResolver::entity (29 samples, 2.31%)</title><rect x="67.1189%" y="357" width="2.3144%" height="15" fill="rgb(215,157,17)" fg:x="841" fg:w="29"/><text x="67.3689%" y="367.50">k..</text></g><g><title>engine::session::Session::load_entity (29 samples, 2.31%)</title><rect x="67.1189%" y="341" width="2.3144%" height="15" fill="rgb(251,17,29)" fg:x="841" fg:w="29"/><text x="67.3689%" y="351.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (29 samples, 2.31%)</title><rect x="67.1189%" y="325" width="2.3144%" height="15" fill="rgb(227,113,27)" fg:x="841" fg:w="29"/><text x="67.3689%" y="335.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (5 samples, 0.40%)</title><rect x="69.0343%" y="309" width="0.3990%" height="15" fill="rgb(217,226,24)" fg:x="865" fg:w="5"/><text x="69.2843%" y="319.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="69.0343%" y="293" width="0.3990%" height="15" fill="rgb(251,99,38)" fg:x="865" fg:w="5"/><text x="69.2843%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="69.0343%" y="277" width="0.3990%" height="15" fill="rgb(231,147,19)" fg:x="865" fg:w="5"/><text x="69.2843%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="69.0343%" y="261" width="0.3990%" height="15" fill="rgb(230,86,8)" fg:x="865" fg:w="5"/><text x="69.2843%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="69.0343%" y="245" width="0.3990%" height="15" fill="rgb(237,159,39)" fg:x="865" fg:w="5"/><text x="69.2843%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="69.0343%" y="229" width="0.3990%" height="15" fill="rgb(247,179,47)" fg:x="865" fg:w="5"/><text x="69.2843%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.3536%" y="213" width="0.0798%" height="15" fill="rgb(253,152,26)" fg:x="869" fg:w="1"/><text x="69.6036%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.5132%" y="341" width="0.0798%" height="15" fill="rgb(222,211,15)" fg:x="871" fg:w="1"/><text x="69.7632%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.5132%" y="325" width="0.0798%" height="15" fill="rgb(236,193,6)" fg:x="871" fg:w="1"/><text x="69.7632%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.5132%" y="309" width="0.0798%" height="15" fill="rgb(226,206,10)" fg:x="871" fg:w="1"/><text x="69.7632%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.5132%" y="293" width="0.0798%" height="15" fill="rgb(213,125,22)" fg:x="871" fg:w="1"/><text x="69.7632%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.5132%" y="277" width="0.0798%" height="15" fill="rgb(221,66,28)" fg:x="871" fg:w="1"/><text x="69.7632%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="69.5132%" y="261" width="0.0798%" height="15" fill="rgb(222,84,53)" fg:x="871" fg:w="1"/><text x="69.7632%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="69.5132%" y="245" width="0.0798%" height="15" fill="rgb(243,50,15)" fg:x="871" fg:w="1"/><text x="69.7632%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="69.5132%" y="357" width="0.2394%" height="15" fill="rgb(208,184,23)" fg:x="871" fg:w="3"/><text x="69.7632%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="69.5930%" y="341" width="0.1596%" height="15" fill="rgb(221,83,2)" fg:x="872" fg:w="2"/><text x="69.8430%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.5930%" y="325" width="0.1596%" height="15" fill="rgb(236,53,24)" fg:x="872" fg:w="2"/><text x="69.8430%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.5930%" y="309" width="0.1596%" height="15" fill="rgb(244,171,29)" fg:x="872" fg:w="2"/><text x="69.8430%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.6728%" y="293" width="0.0798%" height="15" fill="rgb(205,19,11)" fg:x="873" fg:w="1"/><text x="69.9228%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.6728%" y="277" width="0.0798%" height="15" fill="rgb(207,108,29)" fg:x="873" fg:w="1"/><text x="69.9228%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.6728%" y="261" width="0.0798%" height="15" fill="rgb(236,215,43)" fg:x="873" fg:w="1"/><text x="69.9228%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.6728%" y="245" width="0.0798%" height="15" fill="rgb(213,58,35)" fg:x="873" fg:w="1"/><text x="69.9228%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.6728%" y="229" width="0.0798%" height="15" fill="rgb(220,211,46)" fg:x="873" fg:w="1"/><text x="69.9228%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.6728%" y="213" width="0.0798%" height="15" fill="rgb(212,134,16)" fg:x="873" fg:w="1"/><text x="69.9228%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.6728%" y="197" width="0.0798%" height="15" fill="rgb(232,90,44)" fg:x="873" fg:w="1"/><text x="69.9228%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.6728%" y="181" width="0.0798%" height="15" fill="rgb(212,18,36)" fg:x="873" fg:w="1"/><text x="69.9228%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.6728%" y="165" width="0.0798%" height="15" fill="rgb(206,112,24)" fg:x="873" fg:w="1"/><text x="69.9228%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.6728%" y="149" width="0.0798%" height="15" fill="rgb(238,223,40)" fg:x="873" fg:w="1"/><text x="69.9228%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.6728%" y="133" width="0.0798%" height="15" fill="rgb(226,169,20)" fg:x="873" fg:w="1"/><text x="69.9228%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.6728%" y="117" width="0.0798%" height="15" fill="rgb(241,64,52)" fg:x="873" fg:w="1"/><text x="69.9228%" y="127.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="69.7526%" y="357" width="0.0798%" height="15" fill="rgb(228,120,25)" fg:x="874" fg:w="1"/><text x="70.0026%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="69.7526%" y="341" width="0.0798%" height="15" fill="rgb(234,108,19)" fg:x="874" fg:w="1"/><text x="70.0026%" y="351.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::de::Deserialize for plugins_core::moving::model::Route&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.9920%" y="277" width="0.0798%" height="15" fill="rgb(236,133,29)" fg:x="877" fg:w="1"/><text x="70.2420%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.9920%" y="261" width="0.0798%" height="15" fill="rgb(246,174,53)" fg:x="877" fg:w="1"/><text x="70.2420%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.9920%" y="245" width="0.0798%" height="15" fill="rgb(210,105,35)" fg:x="877" fg:w="1"/><text x="70.2420%" y="255.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="69.9920%" y="229" width="0.0798%" height="15" fill="rgb(225,27,26)" fg:x="877" fg:w="1"/><text x="70.2420%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.0718%" y="245" width="0.0798%" height="15" fill="rgb(233,2,39)" fg:x="878" fg:w="1"/><text x="70.3218%" y="255.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (9 samples, 0.72%)</title><rect x="69.5132%" y="373" width="0.7183%" height="15" fill="rgb(219,164,26)" fg:x="871" fg:w="9"/><text x="69.7632%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="69.8324%" y="357" width="0.3990%" height="15" fill="rgb(236,211,5)" fg:x="875" fg:w="5"/><text x="70.0824%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="69.8324%" y="341" width="0.3990%" height="15" fill="rgb(244,227,23)" fg:x="875" fg:w="5"/><text x="70.0824%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (4 samples, 0.32%)</title><rect x="69.9122%" y="325" width="0.3192%" height="15" fill="rgb(230,184,8)" fg:x="876" fg:w="4"/><text x="70.1622%" y="335.50"></text></g><g><title>serde_json::value::de::visit_array (4 samples, 0.32%)</title><rect x="69.9122%" y="309" width="0.3192%" height="15" fill="rgb(217,125,48)" fg:x="876" fg:w="4"/><text x="70.1622%" y="319.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="69.9920%" y="293" width="0.2394%" height="15" fill="rgb(223,192,47)" fg:x="877" fg:w="3"/><text x="70.2420%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.0718%" y="277" width="0.1596%" height="15" fill="rgb(226,119,10)" fg:x="878" fg:w="2"/><text x="70.3218%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.0718%" y="261" width="0.1596%" height="15" fill="rgb(221,49,29)" fg:x="878" fg:w="2"/><text x="70.3218%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="70.1516%" y="245" width="0.0798%" height="15" fill="rgb(217,205,19)" fg:x="879" fg:w="1"/><text x="70.4016%" y="255.50"></text></g><g><title>plugins_core::tools::occupied_by (11 samples, 0.88%)</title><rect x="69.4334%" y="389" width="0.8779%" height="15" fill="rgb(242,104,7)" fg:x="870" fg:w="11"/><text x="69.6834%" y="399.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="70.2314%" y="373" width="0.0798%" height="15" fill="rgb(209,154,48)" fg:x="880" fg:w="1"/><text x="70.4814%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="70.2314%" y="357" width="0.0798%" height="15" fill="rgb(219,213,46)" fg:x="880" fg:w="1"/><text x="70.4814%" y="367.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (1 samples, 0.08%)</title><rect x="70.2314%" y="341" width="0.0798%" height="15" fill="rgb(229,105,38)" fg:x="880" fg:w="1"/><text x="70.4814%" y="351.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (1 samples, 0.08%)</title><rect x="70.2314%" y="325" width="0.0798%" height="15" fill="rgb(205,151,5)" fg:x="880" fg:w="1"/><text x="70.4814%" y="335.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="70.2314%" y="309" width="0.0798%" height="15" fill="rgb(248,115,40)" fg:x="880" fg:w="1"/><text x="70.4814%" y="319.50"></text></g><g><title>engine::session::Session::captured (116 samples, 9.26%)</title><rect x="61.2131%" y="565" width="9.2578%" height="15" fill="rgb(206,179,2)" fg:x="767" fg:w="116"/><text x="61.4631%" y="575.50">engine::sessi..</text></g><g><title>engine::session::logs::capture (109 samples, 8.70%)</title><rect x="61.7717%" y="549" width="8.6991%" height="15" fill="rgb(230,103,24)" fg:x="774" fg:w="109"/><text x="62.0217%" y="559.50">engine::sess..</text></g><g><title>tracing_core::dispatcher::with_default (100 samples, 7.98%)</title><rect x="62.4900%" y="533" width="7.9808%" height="15" fill="rgb(218,152,4)" fg:x="783" fg:w="100"/><text x="62.7400%" y="543.50">tracing_cor..</text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (100 samples, 7.98%)</title><rect x="62.4900%" y="517" width="7.9808%" height="15" fill="rgb(236,161,54)" fg:x="783" fg:w="100"/><text x="62.7400%" y="527.50">&lt;engine::se..</text></g><g><title>kernel::plugins::mw::apply_middleware (99 samples, 7.90%)</title><rect x="62.5698%" y="501" width="7.9010%" height="15" fill="rgb(226,65,17)" fg:x="784" fg:w="99"/><text x="62.8198%" y="511.50">kernel::plu..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (99 samples, 7.90%)</title><rect x="62.5698%" y="485" width="7.9010%" height="15" fill="rgb(221,134,44)" fg:x="784" fg:w="99"/><text x="62.8198%" y="495.50">kernel::plu..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (97 samples, 7.74%)</title><rect x="62.7294%" y="469" width="7.7414%" height="15" fill="rgb(251,129,4)" fg:x="786" fg:w="97"/><text x="62.9794%" y="479.50">&lt;engine::se..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (53 samples, 4.23%)</title><rect x="66.2410%" y="453" width="4.2298%" height="15" fill="rgb(244,32,34)" fg:x="830" fg:w="53"/><text x="66.4910%" y="463.50">kerne..</text></g><g><title>&lt;plugins_rune::RuneMiddleware as kernel::plugins::mw::Middleware&gt;::handle (53 samples, 4.23%)</title><rect x="66.2410%" y="437" width="4.2298%" height="15" fill="rgb(251,224,37)" fg:x="830" fg:w="53"/><text x="66.4910%" y="447.50">&lt;plug..</text></g><g><title>plugins_rune::sources::load_sources_from_surroundings (50 samples, 3.99%)</title><rect x="66.4804%" y="421" width="3.9904%" height="15" fill="rgb(248,117,31)" fg:x="833" fg:w="50"/><text x="66.7304%" y="431.50">plug..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (49 samples, 3.91%)</title><rect x="66.5603%" y="405" width="3.9106%" height="15" fill="rgb(222,208,37)" fg:x="834" fg:w="49"/><text x="66.8103%" y="415.50">plug..</text></g><g><title>plugins_core::tools::worn_by (2 samples, 0.16%)</title><rect x="70.3113%" y="389" width="0.1596%" height="15" fill="rgb(234,211,25)" fg:x="881" fg:w="2"/><text x="70.5613%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="70.3911%" y="373" width="0.0798%" height="15" fill="rgb(211,72,6)" fg:x="882" fg:w="1"/><text x="70.6411%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.3911%" y="357" width="0.0798%" height="15" fill="rgb(249,198,38)" fg:x="882" fg:w="1"/><text x="70.6411%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.3911%" y="341" width="0.0798%" height="15" fill="rgb(221,86,51)" fg:x="882" fg:w="1"/><text x="70.6411%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.3911%" y="325" width="0.0798%" height="15" fill="rgb(226,178,43)" fg:x="882" fg:w="1"/><text x="70.6411%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.3911%" y="309" width="0.0798%" height="15" fill="rgb(215,145,7)" fg:x="882" fg:w="1"/><text x="70.6411%" y="319.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.4709%" y="549" width="0.0798%" height="15" fill="rgb(250,202,36)" fg:x="883" fg:w="1"/><text x="70.7209%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::FutureStorage&gt;::query_futures_before (1 samples, 0.08%)</title><rect x="70.5507%" y="549" width="0.0798%" height="15" fill="rgb(215,86,13)" fg:x="884" fg:w="1"/><text x="70.8007%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.7103%" y="501" width="0.1596%" height="15" fill="rgb(221,134,12)" fg:x="886" fg:w="2"/><text x="70.9603%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.7103%" y="485" width="0.1596%" height="15" fill="rgb(213,82,10)" fg:x="886" fg:w="2"/><text x="70.9603%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.7103%" y="469" width="0.1596%" height="15" fill="rgb(214,142,0)" fg:x="886" fg:w="2"/><text x="70.9603%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7901%" y="453" width="0.0798%" height="15" fill="rgb(205,145,9)" fg:x="887" fg:w="1"/><text x="71.0401%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7901%" y="437" width="0.0798%" height="15" fill="rgb(244,214,8)" fg:x="887" fg:w="1"/><text x="71.0401%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.7901%" y="421" width="0.0798%" height="15" fill="rgb(224,72,51)" fg:x="887" fg:w="1"/><text x="71.0401%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.7901%" y="405" width="0.0798%" height="15" fill="rgb(233,137,37)" fg:x="887" fg:w="1"/><text x="71.0401%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.7901%" y="389" width="0.0798%" height="15" fill="rgb(208,71,28)" fg:x="887" fg:w="1"/><text x="71.0401%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.7901%" y="373" width="0.0798%" height="15" fill="rgb(226,31,7)" fg:x="887" fg:w="1"/><text x="71.0401%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.7901%" y="357" width="0.0798%" height="15" fill="rgb(229,62,18)" fg:x="887" fg:w="1"/><text x="71.0401%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.7901%" y="341" width="0.0798%" height="15" fill="rgb(226,74,28)" fg:x="887" fg:w="1"/><text x="71.0401%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.7901%" y="325" width="0.0798%" height="15" fill="rgb(214,170,18)" fg:x="887" fg:w="1"/><text x="71.0401%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.7901%" y="309" width="0.0798%" height="15" fill="rgb(227,229,35)" fg:x="887" fg:w="1"/><text x="71.0401%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.7901%" y="293" width="0.0798%" height="15" fill="rgb(225,181,39)" fg:x="887" fg:w="1"/><text x="71.0401%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.7901%" y="277" width="0.0798%" height="15" fill="rgb(253,124,44)" fg:x="887" fg:w="1"/><text x="71.0401%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="70.7103%" y="517" width="0.2394%" height="15" fill="rgb(220,75,18)" fg:x="886" fg:w="3"/><text x="70.9603%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.8699%" y="501" width="0.0798%" height="15" fill="rgb(239,175,43)" fg:x="888" fg:w="1"/><text x="71.1199%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.8699%" y="485" width="0.0798%" height="15" fill="rgb(228,112,50)" fg:x="888" fg:w="1"/><text x="71.1199%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.8699%" y="469" width="0.0798%" height="15" fill="rgb(232,105,36)" fg:x="888" fg:w="1"/><text x="71.1199%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.8699%" y="453" width="0.0798%" height="15" fill="rgb(227,137,47)" fg:x="888" fg:w="1"/><text x="71.1199%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.8699%" y="437" width="0.0798%" height="15" fill="rgb(217,51,9)" fg:x="888" fg:w="1"/><text x="71.1199%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.8699%" y="421" width="0.0798%" height="15" fill="rgb(245,117,0)" fg:x="888" fg:w="1"/><text x="71.1199%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.8699%" y="405" width="0.0798%" height="15" fill="rgb(252,52,30)" fg:x="888" fg:w="1"/><text x="71.1199%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.8699%" y="389" width="0.0798%" height="15" fill="rgb(227,85,33)" fg:x="888" fg:w="1"/><text x="71.1199%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.8699%" y="373" width="0.0798%" height="15" fill="rgb(220,157,20)" fg:x="888" fg:w="1"/><text x="71.1199%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.8699%" y="357" width="0.0798%" height="15" fill="rgb(254,14,34)" fg:x="888" fg:w="1"/><text x="71.1199%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.8699%" y="341" width="0.0798%" height="15" fill="rgb(216,103,41)" fg:x="888" fg:w="1"/><text x="71.1199%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.8699%" y="325" width="0.0798%" height="15" fill="rgb(245,221,9)" fg:x="888" fg:w="1"/><text x="71.1199%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.9497%" y="437" width="0.0798%" height="15" fill="rgb(254,136,47)" fg:x="889" fg:w="1"/><text x="71.1997%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.9497%" y="421" width="0.0798%" height="15" fill="rgb(235,71,46)" fg:x="889" fg:w="1"/><text x="71.1997%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.9497%" y="453" width="0.1596%" height="15" fill="rgb(242,154,29)" fg:x="889" fg:w="2"/><text x="71.1997%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.0295%" y="437" width="0.0798%" height="15" fill="rgb(210,65,31)" fg:x="890" fg:w="1"/><text x="71.2795%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.0295%" y="421" width="0.0798%" height="15" fill="rgb(244,9,50)" fg:x="890" fg:w="1"/><text x="71.2795%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="70.9497%" y="469" width="0.2394%" height="15" fill="rgb(215,141,38)" fg:x="889" fg:w="3"/><text x="71.1997%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.1093%" y="453" width="0.0798%" height="15" fill="rgb(241,129,6)" fg:x="891" fg:w="1"/><text x="71.3593%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.1093%" y="437" width="0.0798%" height="15" fill="rgb(253,169,4)" fg:x="891" fg:w="1"/><text x="71.3593%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.1093%" y="421" width="0.0798%" height="15" fill="rgb(237,82,36)" fg:x="891" fg:w="1"/><text x="71.3593%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.1093%" y="405" width="0.0798%" height="15" fill="rgb(209,171,11)" fg:x="891" fg:w="1"/><text x="71.3593%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.1093%" y="389" width="0.0798%" height="15" fill="rgb(242,19,22)" fg:x="891" fg:w="1"/><text x="71.3593%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="71.1093%" y="373" width="0.0798%" height="15" fill="rgb(251,122,24)" fg:x="891" fg:w="1"/><text x="71.3593%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="71.1093%" y="357" width="0.0798%" height="15" fill="rgb(226,166,42)" fg:x="891" fg:w="1"/><text x="71.3593%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="71.2690%" y="437" width="0.0798%" height="15" fill="rgb(244,101,48)" fg:x="893" fg:w="1"/><text x="71.5190%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.3488%" y="421" width="0.0798%" height="15" fill="rgb(227,125,1)" fg:x="894" fg:w="1"/><text x="71.5988%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.3488%" y="405" width="0.0798%" height="15" fill="rgb(206,79,43)" fg:x="894" fg:w="1"/><text x="71.5988%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.5882%" y="373" width="0.0798%" height="15" fill="rgb(241,109,41)" fg:x="897" fg:w="1"/><text x="71.8382%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.5882%" y="357" width="0.0798%" height="15" fill="rgb(219,73,4)" fg:x="897" fg:w="1"/><text x="71.8382%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.5882%" y="341" width="0.0798%" height="15" fill="rgb(239,25,41)" fg:x="897" fg:w="1"/><text x="71.8382%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.6680%" y="325" width="0.0798%" height="15" fill="rgb(208,88,46)" fg:x="898" fg:w="1"/><text x="71.9180%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="71.6680%" y="373" width="0.1596%" height="15" fill="rgb(239,184,9)" fg:x="898" fg:w="2"/><text x="71.9180%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="71.6680%" y="357" width="0.1596%" height="15" fill="rgb(223,114,13)" fg:x="898" fg:w="2"/><text x="71.9180%" y="367.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="71.6680%" y="341" width="0.1596%" height="15" fill="rgb(214,28,42)" fg:x="898" fg:w="2"/><text x="71.9180%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="71.7478%" y="325" width="0.0798%" height="15" fill="rgb(252,32,44)" fg:x="899" fg:w="1"/><text x="71.9978%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="71.7478%" y="309" width="0.0798%" height="15" fill="rgb(231,159,4)" fg:x="899" fg:w="1"/><text x="71.9978%" y="319.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="71.7478%" y="293" width="0.0798%" height="15" fill="rgb(210,35,26)" fg:x="899" fg:w="1"/><text x="71.9978%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="71.4286%" y="421" width="0.4789%" height="15" fill="rgb(208,190,37)" fg:x="895" fg:w="6"/><text x="71.6786%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.48%)</title><rect x="71.4286%" y="405" width="0.4789%" height="15" fill="rgb(226,148,22)" fg:x="895" fg:w="6"/><text x="71.6786%" y="415.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (4 samples, 0.32%)</title><rect x="71.5882%" y="389" width="0.3192%" height="15" fill="rgb(242,153,24)" fg:x="897" fg:w="4"/><text x="71.8382%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.8276%" y="373" width="0.0798%" height="15" fill="rgb(213,133,7)" fg:x="900" fg:w="1"/><text x="72.0776%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.8276%" y="357" width="0.0798%" height="15" fill="rgb(248,206,18)" fg:x="900" fg:w="1"/><text x="72.0776%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="71.8276%" y="341" width="0.0798%" height="15" fill="rgb(233,157,4)" fg:x="900" fg:w="1"/><text x="72.0776%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="71.8276%" y="325" width="0.0798%" height="15" fill="rgb(249,179,32)" fg:x="900" fg:w="1"/><text x="72.0776%" y="335.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="71.8276%" y="309" width="0.0798%" height="15" fill="rgb(248,69,35)" fg:x="900" fg:w="1"/><text x="72.0776%" y="319.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="71.8276%" y="293" width="0.0798%" height="15" fill="rgb(249,158,38)" fg:x="900" fg:w="1"/><text x="72.0776%" y="303.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="71.8276%" y="277" width="0.0798%" height="15" fill="rgb(223,18,43)" fg:x="900" fg:w="1"/><text x="72.0776%" y="287.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="71.8276%" y="261" width="0.0798%" height="15" fill="rgb(238,42,45)" fg:x="900" fg:w="1"/><text x="72.0776%" y="271.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="71.8276%" y="245" width="0.0798%" height="15" fill="rgb(219,65,47)" fg:x="900" fg:w="1"/><text x="72.0776%" y="255.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.8276%" y="229" width="0.0798%" height="15" fill="rgb(248,153,12)" fg:x="900" fg:w="1"/><text x="72.0776%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.8276%" y="213" width="0.0798%" height="15" fill="rgb(240,118,4)" fg:x="900" fg:w="1"/><text x="72.0776%" y="223.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="71.8276%" y="197" width="0.0798%" height="15" fill="rgb(250,96,34)" fg:x="900" fg:w="1"/><text x="72.0776%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="71.8276%" y="181" width="0.0798%" height="15" fill="rgb(221,15,4)" fg:x="900" fg:w="1"/><text x="72.0776%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="71.8276%" y="165" width="0.0798%" height="15" fill="rgb(217,149,33)" fg:x="900" fg:w="1"/><text x="72.0776%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="71.8276%" y="149" width="0.0798%" height="15" fill="rgb(213,58,29)" fg:x="900" fg:w="1"/><text x="72.0776%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="71.8276%" y="133" width="0.0798%" height="15" fill="rgb(236,218,9)" fg:x="900" fg:w="1"/><text x="72.0776%" y="143.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.9074%" y="389" width="0.0798%" height="15" fill="rgb(248,40,19)" fg:x="901" fg:w="1"/><text x="72.1574%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.9074%" y="373" width="0.0798%" height="15" fill="rgb(212,17,6)" fg:x="901" fg:w="1"/><text x="72.1574%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.88%)</title><rect x="71.1891%" y="469" width="0.8779%" height="15" fill="rgb(206,212,20)" fg:x="892" fg:w="11"/><text x="71.4391%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.88%)</title><rect x="71.1891%" y="453" width="0.8779%" height="15" fill="rgb(229,80,37)" fg:x="892" fg:w="11"/><text x="71.4391%" y="463.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (9 samples, 0.72%)</title><rect x="71.3488%" y="437" width="0.7183%" height="15" fill="rgb(253,8,37)" fg:x="894" fg:w="9"/><text x="71.5988%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="71.9074%" y="421" width="0.1596%" height="15" fill="rgb(215,16,43)" fg:x="901" fg:w="2"/><text x="72.1574%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.9074%" y="405" width="0.1596%" height="15" fill="rgb(236,219,16)" fg:x="901" fg:w="2"/><text x="72.1574%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.9872%" y="389" width="0.0798%" height="15" fill="rgb(251,0,3)" fg:x="902" fg:w="1"/><text x="72.2372%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="71.9872%" y="373" width="0.0798%" height="15" fill="rgb(207,133,37)" fg:x="902" fg:w="1"/><text x="72.2372%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="71.9872%" y="357" width="0.0798%" height="15" fill="rgb(250,143,20)" fg:x="902" fg:w="1"/><text x="72.2372%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.9872%" y="341" width="0.0798%" height="15" fill="rgb(242,19,50)" fg:x="902" fg:w="1"/><text x="72.2372%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 1.20%)</title><rect x="70.9497%" y="517" width="1.1971%" height="15" fill="rgb(206,124,43)" fg:x="889" fg:w="15"/><text x="71.1997%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 1.20%)</title><rect x="70.9497%" y="501" width="1.1971%" height="15" fill="rgb(229,4,38)" fg:x="889" fg:w="15"/><text x="71.1997%" y="511.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (15 samples, 1.20%)</title><rect x="70.9497%" y="485" width="1.1971%" height="15" fill="rgb(247,220,45)" fg:x="889" fg:w="15"/><text x="71.1997%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.0670%" y="469" width="0.0798%" height="15" fill="rgb(247,195,0)" fg:x="903" fg:w="1"/><text x="72.3170%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.0670%" y="453" width="0.0798%" height="15" fill="rgb(252,12,19)" fg:x="903" fg:w="1"/><text x="72.3170%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.0670%" y="437" width="0.0798%" height="15" fill="rgb(222,49,50)" fg:x="903" fg:w="1"/><text x="72.3170%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.1468%" y="517" width="0.0798%" height="15" fill="rgb(209,157,28)" fg:x="904" fg:w="1"/><text x="72.3968%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.3065%" y="453" width="0.0798%" height="15" fill="rgb(238,174,24)" fg:x="906" fg:w="1"/><text x="72.5565%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.3065%" y="437" width="0.0798%" height="15" fill="rgb(224,17,28)" fg:x="906" fg:w="1"/><text x="72.5565%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.3863%" y="437" width="0.0798%" height="15" fill="rgb(249,7,29)" fg:x="907" fg:w="1"/><text x="72.6363%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.4661%" y="437" width="0.0798%" height="15" fill="rgb(243,178,4)" fg:x="908" fg:w="1"/><text x="72.7161%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.4661%" y="421" width="0.0798%" height="15" fill="rgb(246,138,35)" fg:x="908" fg:w="1"/><text x="72.7161%" y="431.50"></text></g><g><title>engine::session::internal::Added::find_refs (25 samples, 2.00%)</title><rect x="70.6305%" y="549" width="1.9952%" height="15" fill="rgb(251,85,18)" fg:x="885" fg:w="25"/><text x="70.8805%" y="559.50">e..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (25 samples, 2.00%)</title><rect x="70.6305%" y="533" width="1.9952%" height="15" fill="rgb(254,55,9)" fg:x="885" fg:w="25"/><text x="70.8805%" y="543.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="72.2267%" y="517" width="0.3990%" height="15" fill="rgb(248,4,50)" fg:x="905" fg:w="5"/><text x="72.4767%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="72.2267%" y="501" width="0.3990%" height="15" fill="rgb(215,208,14)" fg:x="905" fg:w="5"/><text x="72.4767%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="72.3065%" y="485" width="0.3192%" height="15" fill="rgb(218,37,18)" fg:x="906" fg:w="4"/><text x="72.5565%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="72.3065%" y="469" width="0.3192%" height="15" fill="rgb(206,104,13)" fg:x="906" fg:w="4"/><text x="72.5565%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="72.3863%" y="453" width="0.2394%" height="15" fill="rgb(248,94,22)" fg:x="907" fg:w="3"/><text x="72.6363%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.5459%" y="437" width="0.0798%" height="15" fill="rgb(235,42,46)" fg:x="909" fg:w="1"/><text x="72.7959%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.5459%" y="421" width="0.0798%" height="15" fill="rgb(220,228,48)" fg:x="909" fg:w="1"/><text x="72.7959%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.5459%" y="405" width="0.0798%" height="15" fill="rgb(216,58,12)" fg:x="909" fg:w="1"/><text x="72.7959%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="72.7853%" y="469" width="0.2394%" height="15" fill="rgb(223,97,52)" fg:x="912" fg:w="3"/><text x="73.0353%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.9449%" y="453" width="0.0798%" height="15" fill="rgb(208,159,17)" fg:x="914" fg:w="1"/><text x="73.1949%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.9449%" y="437" width="0.0798%" height="15" fill="rgb(215,172,9)" fg:x="914" fg:w="1"/><text x="73.1949%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.9449%" y="421" width="0.0798%" height="15" fill="rgb(252,175,30)" fg:x="914" fg:w="1"/><text x="73.1949%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.9449%" y="405" width="0.0798%" height="15" fill="rgb(209,159,10)" fg:x="914" fg:w="1"/><text x="73.1949%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.9449%" y="389" width="0.0798%" height="15" fill="rgb(229,73,51)" fg:x="914" fg:w="1"/><text x="73.1949%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.9449%" y="373" width="0.0798%" height="15" fill="rgb(208,212,43)" fg:x="914" fg:w="1"/><text x="73.1949%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.9449%" y="357" width="0.0798%" height="15" fill="rgb(254,123,53)" fg:x="914" fg:w="1"/><text x="73.1949%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.9449%" y="341" width="0.0798%" height="15" fill="rgb(254,128,49)" fg:x="914" fg:w="1"/><text x="73.1949%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.9449%" y="325" width="0.0798%" height="15" fill="rgb(246,16,16)" fg:x="914" fg:w="1"/><text x="73.1949%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.9449%" y="309" width="0.0798%" height="15" fill="rgb(209,200,1)" fg:x="914" fg:w="1"/><text x="73.1949%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.9449%" y="293" width="0.0798%" height="15" fill="rgb(235,9,3)" fg:x="914" fg:w="1"/><text x="73.1949%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.9449%" y="277" width="0.0798%" height="15" fill="rgb(233,121,54)" fg:x="914" fg:w="1"/><text x="73.1949%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="72.7055%" y="485" width="0.3990%" height="15" fill="rgb(236,80,25)" fg:x="911" fg:w="5"/><text x="72.9555%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.0247%" y="469" width="0.0798%" height="15" fill="rgb(220,44,24)" fg:x="915" fg:w="1"/><text x="73.2747%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.0247%" y="453" width="0.0798%" height="15" fill="rgb(236,225,16)" fg:x="915" fg:w="1"/><text x="73.2747%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.0247%" y="437" width="0.0798%" height="15" fill="rgb(237,140,0)" fg:x="915" fg:w="1"/><text x="73.2747%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.0247%" y="421" width="0.0798%" height="15" fill="rgb(243,225,53)" fg:x="915" fg:w="1"/><text x="73.2747%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.0247%" y="405" width="0.0798%" height="15" fill="rgb(240,140,30)" fg:x="915" fg:w="1"/><text x="73.2747%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.0247%" y="389" width="0.0798%" height="15" fill="rgb(217,51,16)" fg:x="915" fg:w="1"/><text x="73.2747%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.0247%" y="373" width="0.0798%" height="15" fill="rgb(245,75,50)" fg:x="915" fg:w="1"/><text x="73.2747%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.0247%" y="357" width="0.0798%" height="15" fill="rgb(208,174,22)" fg:x="915" fg:w="1"/><text x="73.2747%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.0247%" y="341" width="0.0798%" height="15" fill="rgb(219,98,50)" fg:x="915" fg:w="1"/><text x="73.2747%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.0247%" y="325" width="0.0798%" height="15" fill="rgb(243,138,3)" fg:x="915" fg:w="1"/><text x="73.2747%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.0247%" y="309" width="0.0798%" height="15" fill="rgb(243,132,26)" fg:x="915" fg:w="1"/><text x="73.2747%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.0247%" y="293" width="0.0798%" height="15" fill="rgb(250,201,8)" fg:x="915" fg:w="1"/><text x="73.2747%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.64%)</title><rect x="72.6257%" y="517" width="0.6385%" height="15" fill="rgb(213,91,26)" fg:x="910" fg:w="8"/><text x="72.8757%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.64%)</title><rect x="72.6257%" y="501" width="0.6385%" height="15" fill="rgb(229,117,1)" fg:x="910" fg:w="8"/><text x="72.8757%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="73.1045%" y="485" width="0.1596%" height="15" fill="rgb(229,24,6)" fg:x="916" fg:w="2"/><text x="73.3545%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="73.1045%" y="469" width="0.1596%" height="15" fill="rgb(206,69,11)" fg:x="916" fg:w="2"/><text x="73.3545%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.1844%" y="453" width="0.0798%" height="15" fill="rgb(234,111,34)" fg:x="917" fg:w="1"/><text x="73.4344%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.1844%" y="437" width="0.0798%" height="15" fill="rgb(213,187,51)" fg:x="917" fg:w="1"/><text x="73.4344%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.1844%" y="421" width="0.0798%" height="15" fill="rgb(207,45,11)" fg:x="917" fg:w="1"/><text x="73.4344%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.1844%" y="405" width="0.0798%" height="15" fill="rgb(225,151,47)" fg:x="917" fg:w="1"/><text x="73.4344%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.1844%" y="389" width="0.0798%" height="15" fill="rgb(211,226,5)" fg:x="917" fg:w="1"/><text x="73.4344%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.1844%" y="373" width="0.0798%" height="15" fill="rgb(214,83,52)" fg:x="917" fg:w="1"/><text x="73.4344%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.1844%" y="357" width="0.0798%" height="15" fill="rgb(229,49,53)" fg:x="917" fg:w="1"/><text x="73.4344%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.1844%" y="341" width="0.0798%" height="15" fill="rgb(246,8,28)" fg:x="917" fg:w="1"/><text x="73.4344%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.1844%" y="325" width="0.0798%" height="15" fill="rgb(207,28,41)" fg:x="917" fg:w="1"/><text x="73.4344%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.1844%" y="309" width="0.0798%" height="15" fill="rgb(254,22,25)" fg:x="917" fg:w="1"/><text x="73.4344%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.1844%" y="293" width="0.0798%" height="15" fill="rgb(209,120,42)" fg:x="917" fg:w="1"/><text x="73.4344%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9 samples, 0.72%)</title><rect x="72.6257%" y="533" width="0.7183%" height="15" fill="rgb(216,194,18)" fg:x="910" fg:w="9"/><text x="72.8757%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.2642%" y="517" width="0.0798%" height="15" fill="rgb(213,70,17)" fg:x="918" fg:w="1"/><text x="73.5142%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.2642%" y="501" width="0.0798%" height="15" fill="rgb(228,66,19)" fg:x="918" fg:w="1"/><text x="73.5142%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.2642%" y="485" width="0.0798%" height="15" fill="rgb(236,221,54)" fg:x="918" fg:w="1"/><text x="73.5142%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.2642%" y="469" width="0.0798%" height="15" fill="rgb(207,175,15)" fg:x="918" fg:w="1"/><text x="73.5142%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.2642%" y="453" width="0.0798%" height="15" fill="rgb(234,76,8)" fg:x="918" fg:w="1"/><text x="73.5142%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.2642%" y="437" width="0.0798%" height="15" fill="rgb(243,106,0)" fg:x="918" fg:w="1"/><text x="73.5142%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.2642%" y="421" width="0.0798%" height="15" fill="rgb(208,48,19)" fg:x="918" fg:w="1"/><text x="73.5142%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.2642%" y="405" width="0.0798%" height="15" fill="rgb(251,50,29)" fg:x="918" fg:w="1"/><text x="73.5142%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.2642%" y="389" width="0.0798%" height="15" fill="rgb(222,31,49)" fg:x="918" fg:w="1"/><text x="73.5142%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.2642%" y="373" width="0.0798%" height="15" fill="rgb(232,33,18)" fg:x="918" fg:w="1"/><text x="73.5142%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.2642%" y="357" width="0.0798%" height="15" fill="rgb(209,1,44)" fg:x="918" fg:w="1"/><text x="73.5142%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.2642%" y="341" width="0.0798%" height="15" fill="rgb(211,7,1)" fg:x="918" fg:w="1"/><text x="73.5142%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="73.3440%" y="533" width="0.0798%" height="15" fill="rgb(224,111,27)" fg:x="919" fg:w="1"/><text x="73.5940%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="73.3440%" y="517" width="0.0798%" height="15" fill="rgb(252,195,39)" fg:x="919" fg:w="1"/><text x="73.5940%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.3440%" y="501" width="0.0798%" height="15" fill="rgb(237,198,5)" fg:x="919" fg:w="1"/><text x="73.5940%" y="511.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="73.5036%" y="405" width="0.0798%" height="15" fill="rgb(232,148,1)" fg:x="921" fg:w="1"/><text x="73.7536%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="73.5036%" y="389" width="0.0798%" height="15" fill="rgb(249,41,3)" fg:x="921" fg:w="1"/><text x="73.7536%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="73.5036%" y="373" width="0.0798%" height="15" fill="rgb(215,14,33)" fg:x="921" fg:w="1"/><text x="73.7536%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.5036%" y="357" width="0.0798%" height="15" fill="rgb(209,146,24)" fg:x="921" fg:w="1"/><text x="73.7536%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="73.5036%" y="341" width="0.0798%" height="15" fill="rgb(219,51,47)" fg:x="921" fg:w="1"/><text x="73.7536%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.5036%" y="325" width="0.0798%" height="15" fill="rgb(234,217,40)" fg:x="921" fg:w="1"/><text x="73.7536%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="73.5036%" y="437" width="0.1596%" height="15" fill="rgb(228,34,26)" fg:x="921" fg:w="2"/><text x="73.7536%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="73.5036%" y="421" width="0.1596%" height="15" fill="rgb(224,50,29)" fg:x="921" fg:w="2"/><text x="73.7536%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.5834%" y="405" width="0.0798%" height="15" fill="rgb(205,79,51)" fg:x="922" fg:w="1"/><text x="73.8334%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="73.6632%" y="437" width="0.1596%" height="15" fill="rgb(218,136,28)" fg:x="923" fg:w="2"/><text x="73.9132%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="73.6632%" y="421" width="0.1596%" height="15" fill="rgb(220,150,10)" fg:x="923" fg:w="2"/><text x="73.9132%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="73.6632%" y="405" width="0.1596%" height="15" fill="rgb(242,158,47)" fg:x="923" fg:w="2"/><text x="73.9132%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="73.7430%" y="389" width="0.0798%" height="15" fill="rgb(209,68,0)" fg:x="924" fg:w="1"/><text x="73.9930%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.7430%" y="373" width="0.0798%" height="15" fill="rgb(208,13,41)" fg:x="924" fg:w="1"/><text x="73.9930%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="73.4238%" y="485" width="0.4789%" height="15" fill="rgb(226,201,7)" fg:x="920" fg:w="6"/><text x="73.6738%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="73.4238%" y="469" width="0.4789%" height="15" fill="rgb(236,103,26)" fg:x="920" fg:w="6"/><text x="73.6738%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="73.5036%" y="453" width="0.3990%" height="15" fill="rgb(243,162,8)" fg:x="921" fg:w="5"/><text x="73.7536%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.8228%" y="437" width="0.0798%" height="15" fill="rgb(237,225,11)" fg:x="925" fg:w="1"/><text x="74.0728%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.8228%" y="421" width="0.0798%" height="15" fill="rgb(247,186,32)" fg:x="925" fg:w="1"/><text x="74.0728%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="73.8228%" y="405" width="0.0798%" height="15" fill="rgb(215,26,28)" fg:x="925" fg:w="1"/><text x="74.0728%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.8228%" y="389" width="0.0798%" height="15" fill="rgb(208,121,6)" fg:x="925" fg:w="1"/><text x="74.0728%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.8228%" y="373" width="0.0798%" height="15" fill="rgb(225,91,3)" fg:x="925" fg:w="1"/><text x="74.0728%" y="383.50"></text></g><g><title>kernel::model::entity::Entity::from_value (7 samples, 0.56%)</title><rect x="73.4238%" y="533" width="0.5587%" height="15" fill="rgb(246,119,36)" fg:x="920" fg:w="7"/><text x="73.6738%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="73.4238%" y="517" width="0.5587%" height="15" fill="rgb(254,173,2)" fg:x="920" fg:w="7"/><text x="73.6738%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="73.4238%" y="501" width="0.5587%" height="15" fill="rgb(209,87,54)" fg:x="920" fg:w="7"/><text x="73.6738%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.9026%" y="485" width="0.0798%" height="15" fill="rgb(223,216,20)" fg:x="926" fg:w="1"/><text x="74.1526%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.9026%" y="469" width="0.0798%" height="15" fill="rgb(220,31,8)" fg:x="926" fg:w="1"/><text x="74.1526%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.9026%" y="453" width="0.0798%" height="15" fill="rgb(220,185,15)" fg:x="926" fg:w="1"/><text x="74.1526%" y="463.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="73.9824%" y="533" width="0.0798%" height="15" fill="rgb(247,190,50)" fg:x="927" fg:w="1"/><text x="74.2324%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="73.9824%" y="517" width="0.0798%" height="15" fill="rgb(239,173,47)" fg:x="927" fg:w="1"/><text x="74.2324%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="73.9824%" y="501" width="0.0798%" height="15" fill="rgb(218,190,42)" fg:x="927" fg:w="1"/><text x="74.2324%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.3815%" y="389" width="0.0798%" height="15" fill="rgb(251,207,16)" fg:x="932" fg:w="1"/><text x="74.6315%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.3815%" y="373" width="0.0798%" height="15" fill="rgb(222,199,47)" fg:x="932" fg:w="1"/><text x="74.6315%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="74.1421%" y="469" width="0.3990%" height="15" fill="rgb(245,190,7)" fg:x="929" fg:w="5"/><text x="74.3921%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="74.1421%" y="453" width="0.3990%" height="15" fill="rgb(239,85,38)" fg:x="929" fg:w="5"/><text x="74.3921%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="74.1421%" y="437" width="0.3990%" height="15" fill="rgb(229,69,51)" fg:x="929" fg:w="5"/><text x="74.3921%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="74.2219%" y="421" width="0.3192%" height="15" fill="rgb(231,104,51)" fg:x="930" fg:w="4"/><text x="74.4719%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="74.3815%" y="405" width="0.1596%" height="15" fill="rgb(235,49,4)" fg:x="932" fg:w="2"/><text x="74.6315%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.4613%" y="389" width="0.0798%" height="15" fill="rgb(246,166,20)" fg:x="933" fg:w="1"/><text x="74.7113%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.4613%" y="373" width="0.0798%" height="15" fill="rgb(230,119,37)" fg:x="933" fg:w="1"/><text x="74.7113%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.4613%" y="357" width="0.0798%" height="15" fill="rgb(234,77,34)" fg:x="933" fg:w="1"/><text x="74.7113%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="74.4613%" y="341" width="0.0798%" height="15" fill="rgb(211,222,33)" fg:x="933" fg:w="1"/><text x="74.7113%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="74.4613%" y="325" width="0.0798%" height="15" fill="rgb(226,45,42)" fg:x="933" fg:w="1"/><text x="74.7113%" y="335.50"></text></g><g><title>engine::session::Session::load_entity (52 samples, 4.15%)</title><rect x="70.4709%" y="565" width="4.1500%" height="15" fill="rgb(215,174,28)" fg:x="883" fg:w="52"/><text x="70.7209%" y="575.50">engin..</text></g><g><title>engine::session::internal::Entities::add_persisted (25 samples, 2.00%)</title><rect x="72.6257%" y="549" width="1.9952%" height="15" fill="rgb(254,173,49)" fg:x="910" fg:w="25"/><text x="72.8757%" y="559.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (7 samples, 0.56%)</title><rect x="74.0623%" y="533" width="0.5587%" height="15" fill="rgb(229,191,6)" fg:x="928" fg:w="7"/><text x="74.3123%" y="543.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.56%)</title><rect x="74.0623%" y="517" width="0.5587%" height="15" fill="rgb(212,145,22)" fg:x="928" fg:w="7"/><text x="74.3123%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="74.0623%" y="501" width="0.5587%" height="15" fill="rgb(226,6,51)" fg:x="928" fg:w="7"/><text x="74.3123%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="74.0623%" y="485" width="0.5587%" height="15" fill="rgb(227,128,8)" fg:x="928" fg:w="7"/><text x="74.3123%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.5411%" y="469" width="0.0798%" height="15" fill="rgb(205,24,10)" fg:x="934" fg:w="1"/><text x="74.7911%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.6209%" y="517" width="0.0798%" height="15" fill="rgb(217,147,27)" fg:x="935" fg:w="1"/><text x="74.8709%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.6209%" y="501" width="0.0798%" height="15" fill="rgb(250,82,42)" fg:x="935" fg:w="1"/><text x="74.8709%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.6209%" y="485" width="0.0798%" height="15" fill="rgb(248,93,17)" fg:x="935" fg:w="1"/><text x="74.8709%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.6209%" y="469" width="0.0798%" height="15" fill="rgb(254,212,40)" fg:x="935" fg:w="1"/><text x="74.8709%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.6209%" y="453" width="0.0798%" height="15" fill="rgb(229,209,2)" fg:x="935" fg:w="1"/><text x="74.8709%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.6209%" y="437" width="0.0798%" height="15" fill="rgb(211,50,43)" fg:x="935" fg:w="1"/><text x="74.8709%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.6209%" y="421" width="0.0798%" height="15" fill="rgb(245,196,29)" fg:x="935" fg:w="1"/><text x="74.8709%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.6209%" y="405" width="0.0798%" height="15" fill="rgb(216,132,13)" fg:x="935" fg:w="1"/><text x="74.8709%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.6209%" y="389" width="0.0798%" height="15" fill="rgb(251,108,21)" fg:x="935" fg:w="1"/><text x="74.8709%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.6209%" y="373" width="0.0798%" height="15" fill="rgb(229,174,54)" fg:x="935" fg:w="1"/><text x="74.8709%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.6209%" y="357" width="0.0798%" height="15" fill="rgb(211,175,47)" fg:x="935" fg:w="1"/><text x="74.8709%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.6209%" y="341" width="0.0798%" height="15" fill="rgb(234,5,37)" fg:x="935" fg:w="1"/><text x="74.8709%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.6209%" y="325" width="0.0798%" height="15" fill="rgb(244,150,43)" fg:x="935" fg:w="1"/><text x="74.8709%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.6209%" y="309" width="0.0798%" height="15" fill="rgb(242,172,38)" fg:x="935" fg:w="1"/><text x="74.8709%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.6209%" y="293" width="0.0798%" height="15" fill="rgb(205,27,8)" fg:x="935" fg:w="1"/><text x="74.8709%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.6209%" y="277" width="0.0798%" height="15" fill="rgb(217,57,3)" fg:x="935" fg:w="1"/><text x="74.8709%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.7805%" y="501" width="0.0798%" height="15" fill="rgb(242,21,38)" fg:x="937" fg:w="1"/><text x="75.0305%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.8603%" y="501" width="0.0798%" height="15" fill="rgb(209,64,43)" fg:x="938" fg:w="1"/><text x="75.1103%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.32%)</title><rect x="74.7007%" y="517" width="0.3192%" height="15" fill="rgb(222,2,46)" fg:x="936" fg:w="4"/><text x="74.9507%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.9401%" y="501" width="0.0798%" height="15" fill="rgb(218,19,44)" fg:x="939" fg:w="1"/><text x="75.1901%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.9401%" y="485" width="0.0798%" height="15" fill="rgb(240,203,42)" fg:x="939" fg:w="1"/><text x="75.1901%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.9401%" y="469" width="0.0798%" height="15" fill="rgb(229,23,45)" fg:x="939" fg:w="1"/><text x="75.1901%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.9401%" y="453" width="0.0798%" height="15" fill="rgb(205,228,51)" fg:x="939" fg:w="1"/><text x="75.1901%" y="463.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::de::Deserialize for burrow_bon::perms::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.0998%" y="469" width="0.0798%" height="15" fill="rgb(239,36,20)" fg:x="941" fg:w="1"/><text x="75.3498%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.0998%" y="453" width="0.0798%" height="15" fill="rgb(248,172,27)" fg:x="941" fg:w="1"/><text x="75.3498%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="75.0998%" y="437" width="0.0798%" height="15" fill="rgb(244,55,32)" fg:x="941" fg:w="1"/><text x="75.3498%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="75.0998%" y="421" width="0.0798%" height="15" fill="rgb(215,97,16)" fg:x="941" fg:w="1"/><text x="75.3498%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="75.0998%" y="405" width="0.0798%" height="15" fill="rgb(224,80,29)" fg:x="941" fg:w="1"/><text x="75.3498%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.1796%" y="437" width="0.0798%" height="15" fill="rgb(216,93,47)" fg:x="942" fg:w="1"/><text x="75.4296%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="75.2594%" y="437" width="0.1596%" height="15" fill="rgb(238,159,10)" fg:x="943" fg:w="2"/><text x="75.5094%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="75.2594%" y="421" width="0.1596%" height="15" fill="rgb(223,98,29)" fg:x="943" fg:w="2"/><text x="75.5094%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="75.2594%" y="405" width="0.1596%" height="15" fill="rgb(210,176,23)" fg:x="943" fg:w="2"/><text x="75.5094%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="75.4190%" y="421" width="0.1596%" height="15" fill="rgb(242,162,27)" fg:x="945" fg:w="2"/><text x="75.6690%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.4190%" y="405" width="0.1596%" height="15" fill="rgb(245,109,32)" fg:x="945" fg:w="2"/><text x="75.6690%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="75.4190%" y="389" width="0.1596%" height="15" fill="rgb(248,87,8)" fg:x="945" fg:w="2"/><text x="75.6690%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.4190%" y="373" width="0.1596%" height="15" fill="rgb(250,160,50)" fg:x="945" fg:w="2"/><text x="75.6690%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.4988%" y="357" width="0.0798%" height="15" fill="rgb(246,165,25)" fg:x="946" fg:w="1"/><text x="75.7488%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.4988%" y="341" width="0.0798%" height="15" fill="rgb(249,219,3)" fg:x="946" fg:w="1"/><text x="75.7488%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="75.1796%" y="469" width="0.4789%" height="15" fill="rgb(226,66,5)" fg:x="942" fg:w="6"/><text x="75.4296%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="75.1796%" y="453" width="0.4789%" height="15" fill="rgb(250,220,43)" fg:x="942" fg:w="6"/><text x="75.4296%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="75.4190%" y="437" width="0.2394%" height="15" fill="rgb(225,111,31)" fg:x="945" fg:w="3"/><text x="75.6690%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="75.5786%" y="421" width="0.0798%" height="15" fill="rgb(248,106,18)" fg:x="947" fg:w="1"/><text x="75.8286%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="75.5786%" y="405" width="0.0798%" height="15" fill="rgb(220,226,45)" fg:x="947" fg:w="1"/><text x="75.8286%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="75.5786%" y="389" width="0.0798%" height="15" fill="rgb(208,58,53)" fg:x="947" fg:w="1"/><text x="75.8286%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.5786%" y="373" width="0.0798%" height="15" fill="rgb(209,133,1)" fg:x="947" fg:w="1"/><text x="75.8286%" y="383.50"></text></g><g><title>kernel::model::entity::Entity::from_value (9 samples, 0.72%)</title><rect x="75.0200%" y="517" width="0.7183%" height="15" fill="rgb(228,216,27)" fg:x="940" fg:w="9"/><text x="75.2700%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="75.0200%" y="501" width="0.7183%" height="15" fill="rgb(238,155,2)" fg:x="940" fg:w="9"/><text x="75.2700%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="75.0200%" y="485" width="0.7183%" height="15" fill="rgb(244,99,37)" fg:x="940" fg:w="9"/><text x="75.2700%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="75.6584%" y="469" width="0.0798%" height="15" fill="rgb(254,32,3)" fg:x="948" fg:w="1"/><text x="75.9084%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.7382%" y="405" width="0.0798%" height="15" fill="rgb(234,46,50)" fg:x="949" fg:w="1"/><text x="75.9882%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.7382%" y="389" width="0.0798%" height="15" fill="rgb(232,118,51)" fg:x="949" fg:w="1"/><text x="75.9882%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.7382%" y="373" width="0.0798%" height="15" fill="rgb(207,24,32)" fg:x="949" fg:w="1"/><text x="75.9882%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.7382%" y="357" width="0.0798%" height="15" fill="rgb(208,107,43)" fg:x="949" fg:w="1"/><text x="75.9882%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.7382%" y="341" width="0.0798%" height="15" fill="rgb(231,28,9)" fg:x="949" fg:w="1"/><text x="75.9882%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.7382%" y="325" width="0.0798%" height="15" fill="rgb(241,204,15)" fg:x="949" fg:w="1"/><text x="75.9882%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="75.7382%" y="421" width="0.1596%" height="15" fill="rgb(214,54,15)" fg:x="949" fg:w="2"/><text x="75.9882%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.8180%" y="405" width="0.0798%" height="15" fill="rgb(230,12,28)" fg:x="950" fg:w="1"/><text x="76.0680%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.8978%" y="421" width="0.0798%" height="15" fill="rgb(221,171,5)" fg:x="951" fg:w="1"/><text x="76.1478%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.8978%" y="405" width="0.0798%" height="15" fill="rgb(207,72,25)" fg:x="951" fg:w="1"/><text x="76.1478%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="75.7382%" y="453" width="0.3192%" height="15" fill="rgb(249,79,37)" fg:x="949" fg:w="4"/><text x="75.9882%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="75.7382%" y="437" width="0.3192%" height="15" fill="rgb(209,98,49)" fg:x="949" fg:w="4"/><text x="75.9882%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.9777%" y="421" width="0.0798%" height="15" fill="rgb(221,62,13)" fg:x="952" fg:w="1"/><text x="76.2277%" y="431.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (195 samples, 15.56%)</title><rect x="60.5746%" y="597" width="15.5626%" height="15" fill="rgb(223,39,6)" fg:x="759" fg:w="195"/><text x="60.8246%" y="607.50">engine::session::Session..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (195 samples, 15.56%)</title><rect x="60.5746%" y="581" width="15.5626%" height="15" fill="rgb(246,163,20)" fg:x="759" fg:w="195"/><text x="60.8246%" y="591.50">engine::session::Session..</text></g><g><title>kernel::model::EntityPtrResolver::world (19 samples, 1.52%)</title><rect x="74.6209%" y="565" width="1.5164%" height="15" fill="rgb(211,111,29)" fg:x="935" fg:w="19"/><text x="74.8709%" y="575.50"></text></g><g><title>engine::session::Session::load_entity (19 samples, 1.52%)</title><rect x="74.6209%" y="549" width="1.5164%" height="15" fill="rgb(243,118,5)" fg:x="935" fg:w="19"/><text x="74.8709%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (19 samples, 1.52%)</title><rect x="74.6209%" y="533" width="1.5164%" height="15" fill="rgb(240,144,52)" fg:x="935" fg:w="19"/><text x="74.8709%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (5 samples, 0.40%)</title><rect x="75.7382%" y="517" width="0.3990%" height="15" fill="rgb(244,158,36)" fg:x="949" fg:w="5"/><text x="75.9882%" y="527.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="75.7382%" y="501" width="0.3990%" height="15" fill="rgb(241,109,37)" fg:x="949" fg:w="5"/><text x="75.9882%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="75.7382%" y="485" width="0.3990%" height="15" fill="rgb(213,95,32)" fg:x="949" fg:w="5"/><text x="75.9882%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="75.7382%" y="469" width="0.3990%" height="15" fill="rgb(252,193,9)" fg:x="949" fg:w="5"/><text x="75.9882%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.0575%" y="453" width="0.0798%" height="15" fill="rgb(225,213,21)" fg:x="953" fg:w="1"/><text x="76.3075%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.1373%" y="581" width="0.0798%" height="15" fill="rgb(220,172,46)" fg:x="954" fg:w="1"/><text x="76.3873%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (956 samples, 76.30%)</title><rect x="0.0000%" y="645" width="76.2969%" height="15" fill="rgb(235,75,41)" fg:x="0" fg:w="956"/><text x="0.2500%" y="655.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (956 samples, 76.30%)</title><rect x="0.0000%" y="629" width="76.2969%" height="15" fill="rgb(213,86,9)" fg:x="0" fg:w="956"/><text x="0.2500%" y="639.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (955 samples, 76.22%)</title><rect x="0.0798%" y="613" width="76.2171%" height="15" fill="rgb(238,127,51)" fg:x="1" fg:w="955"/><text x="0.3298%" y="623.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (2 samples, 0.16%)</title><rect x="76.1373%" y="597" width="0.1596%" height="15" fill="rgb(215,2,54)" fg:x="954" fg:w="2"/><text x="76.3873%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="76.2171%" y="581" width="0.0798%" height="15" fill="rgb(245,80,6)" fg:x="955" fg:w="1"/><text x="76.4671%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="76.2171%" y="565" width="0.0798%" height="15" fill="rgb(233,106,42)" fg:x="955" fg:w="1"/><text x="76.4671%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="76.2171%" y="549" width="0.0798%" height="15" fill="rgb(244,86,38)" fg:x="955" fg:w="1"/><text x="76.4671%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.2969%" y="581" width="0.0798%" height="15" fill="rgb(242,167,7)" fg:x="956" fg:w="1"/><text x="76.5469%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.3767%" y="517" width="0.0798%" height="15" fill="rgb(218,216,3)" fg:x="957" fg:w="1"/><text x="76.6267%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.24%)</title><rect x="76.3767%" y="581" width="0.2394%" height="15" fill="rgb(206,136,36)" fg:x="957" fg:w="3"/><text x="76.6267%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="76.3767%" y="565" width="0.2394%" height="15" fill="rgb(206,206,15)" fg:x="957" fg:w="3"/><text x="76.6267%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.24%)</title><rect x="76.3767%" y="549" width="0.2394%" height="15" fill="rgb(207,163,34)" fg:x="957" fg:w="3"/><text x="76.6267%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3 samples, 0.24%)</title><rect x="76.3767%" y="533" width="0.2394%" height="15" fill="rgb(240,127,22)" fg:x="957" fg:w="3"/><text x="76.6267%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (2 samples, 0.16%)</title><rect x="76.4565%" y="517" width="0.1596%" height="15" fill="rgb(227,49,5)" fg:x="958" fg:w="2"/><text x="76.7065%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.5363%" y="501" width="0.0798%" height="15" fill="rgb(231,8,6)" fg:x="959" fg:w="1"/><text x="76.7863%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.6161%" y="549" width="0.0798%" height="15" fill="rgb(223,21,24)" fg:x="960" fg:w="1"/><text x="76.8661%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.7757%" y="485" width="0.0798%" height="15" fill="rgb(244,44,52)" fg:x="962" fg:w="1"/><text x="77.0257%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.8555%" y="485" width="0.0798%" height="15" fill="rgb(207,73,28)" fg:x="963" fg:w="1"/><text x="77.1055%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.8555%" y="469" width="0.0798%" height="15" fill="rgb(234,215,10)" fg:x="963" fg:w="1"/><text x="77.1055%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="76.6959%" y="517" width="0.3192%" height="15" fill="rgb(236,85,3)" fg:x="961" fg:w="4"/><text x="76.9459%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="76.6959%" y="501" width="0.3192%" height="15" fill="rgb(236,102,39)" fg:x="961" fg:w="4"/><text x="76.9459%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.9354%" y="485" width="0.0798%" height="15" fill="rgb(243,50,8)" fg:x="964" fg:w="1"/><text x="77.1854%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.9354%" y="469" width="0.0798%" height="15" fill="rgb(207,111,4)" fg:x="964" fg:w="1"/><text x="77.1854%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.9354%" y="453" width="0.0798%" height="15" fill="rgb(230,52,42)" fg:x="964" fg:w="1"/><text x="77.1854%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.9354%" y="437" width="0.0798%" height="15" fill="rgb(252,178,50)" fg:x="964" fg:w="1"/><text x="77.1854%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.1748%" y="485" width="0.0798%" height="15" fill="rgb(234,46,35)" fg:x="967" fg:w="1"/><text x="77.4248%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.2546%" y="485" width="0.0798%" height="15" fill="rgb(228,69,37)" fg:x="968" fg:w="1"/><text x="77.5046%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.2546%" y="469" width="0.0798%" height="15" fill="rgb(221,21,11)" fg:x="968" fg:w="1"/><text x="77.5046%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.3344%" y="469" width="0.0798%" height="15" fill="rgb(223,56,9)" fg:x="969" fg:w="1"/><text x="77.5844%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="77.4142%" y="453" width="0.2394%" height="15" fill="rgb(234,30,19)" fg:x="970" fg:w="3"/><text x="77.6642%" y="463.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="77.4142%" y="437" width="0.2394%" height="15" fill="rgb(211,64,54)" fg:x="970" fg:w="3"/><text x="77.6642%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="77.1748%" y="501" width="0.5587%" height="15" fill="rgb(250,189,5)" fg:x="967" fg:w="7"/><text x="77.4248%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="77.3344%" y="485" width="0.3990%" height="15" fill="rgb(214,180,13)" fg:x="969" fg:w="5"/><text x="77.5844%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="77.4142%" y="469" width="0.3192%" height="15" fill="rgb(238,40,40)" fg:x="970" fg:w="4"/><text x="77.6642%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.6536%" y="453" width="0.0798%" height="15" fill="rgb(214,101,38)" fg:x="973" fg:w="1"/><text x="77.9036%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.52%)</title><rect x="76.2969%" y="597" width="1.5164%" height="15" fill="rgb(242,65,53)" fg:x="956" fg:w="19"/><text x="76.5469%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (15 samples, 1.20%)</title><rect x="76.6161%" y="581" width="1.1971%" height="15" fill="rgb(230,22,45)" fg:x="960" fg:w="15"/><text x="76.8661%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.20%)</title><rect x="76.6161%" y="565" width="1.1971%" height="15" fill="rgb(223,77,1)" fg:x="960" fg:w="15"/><text x="76.8661%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (14 samples, 1.12%)</title><rect x="76.6959%" y="549" width="1.1173%" height="15" fill="rgb(227,33,37)" fg:x="961" fg:w="14"/><text x="76.9459%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.12%)</title><rect x="76.6959%" y="533" width="1.1173%" height="15" fill="rgb(224,148,39)" fg:x="961" fg:w="14"/><text x="76.9459%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.80%)</title><rect x="77.0152%" y="517" width="0.7981%" height="15" fill="rgb(232,212,39)" fg:x="965" fg:w="10"/><text x="77.2652%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.7334%" y="501" width="0.0798%" height="15" fill="rgb(251,172,7)" fg:x="974" fg:w="1"/><text x="77.9834%" y="511.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="77.8931%" y="549" width="0.0798%" height="15" fill="rgb(219,39,9)" fg:x="976" fg:w="1"/><text x="78.1431%" y="559.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (2 samples, 0.16%)</title><rect x="77.9729%" y="517" width="0.1596%" height="15" fill="rgb(228,118,14)" fg:x="977" fg:w="2"/><text x="78.2229%" y="527.50"></text></g><g><title>std::sys::unix::fs::stat (2 samples, 0.16%)</title><rect x="77.9729%" y="501" width="0.1596%" height="15" fill="rgb(207,140,10)" fg:x="977" fg:w="2"/><text x="78.2229%" y="511.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (2 samples, 0.16%)</title><rect x="77.9729%" y="485" width="0.1596%" height="15" fill="rgb(227,111,53)" fg:x="977" fg:w="2"/><text x="78.2229%" y="495.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="77.9729%" y="469" width="0.1596%" height="15" fill="rgb(216,165,16)" fg:x="977" fg:w="2"/><text x="78.2229%" y="479.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (2 samples, 0.16%)</title><rect x="77.9729%" y="453" width="0.1596%" height="15" fill="rgb(226,111,18)" fg:x="977" fg:w="2"/><text x="78.2229%" y="463.50"></text></g><g><title>std::sys::unix::fs::try_statx (2 samples, 0.16%)</title><rect x="77.9729%" y="437" width="0.1596%" height="15" fill="rgb(251,27,17)" fg:x="977" fg:w="2"/><text x="78.2229%" y="447.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (2 samples, 0.16%)</title><rect x="77.9729%" y="421" width="0.1596%" height="15" fill="rgb(254,69,9)" fg:x="977" fg:w="2"/><text x="78.2229%" y="431.50"></text></g><g><title>statx (2 samples, 0.16%)</title><rect x="77.9729%" y="405" width="0.1596%" height="15" fill="rgb(234,140,37)" fg:x="977" fg:w="2"/><text x="78.2229%" y="415.50"></text></g><g><title>plugins_rune::runner::SharedRunners::initialize (3 samples, 0.24%)</title><rect x="78.1325%" y="501" width="0.2394%" height="15" fill="rgb(220,93,8)" fg:x="979" fg:w="3"/><text x="78.3825%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="78.1325%" y="485" width="0.2394%" height="15" fill="rgb(236,113,3)" fg:x="979" fg:w="3"/><text x="78.3825%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="78.1325%" y="469" width="0.2394%" height="15" fill="rgb(234,108,23)" fg:x="979" fg:w="3"/><text x="78.3825%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="78.2123%" y="453" width="0.1596%" height="15" fill="rgb(205,114,34)" fg:x="980" fg:w="2"/><text x="78.4623%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.2921%" y="437" width="0.0798%" height="15" fill="rgb(236,200,45)" fg:x="981" fg:w="1"/><text x="78.5421%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.2921%" y="421" width="0.0798%" height="15" fill="rgb(227,194,29)" fg:x="981" fg:w="1"/><text x="78.5421%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.2921%" y="405" width="0.0798%" height="15" fill="rgb(250,76,42)" fg:x="981" fg:w="1"/><text x="78.5421%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.2921%" y="389" width="0.0798%" height="15" fill="rgb(208,128,8)" fg:x="981" fg:w="1"/><text x="78.5421%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="78.2921%" y="373" width="0.0798%" height="15" fill="rgb(229,209,35)" fg:x="981" fg:w="1"/><text x="78.5421%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="78.2921%" y="357" width="0.0798%" height="15" fill="rgb(215,39,53)" fg:x="981" fg:w="1"/><text x="78.5421%" y="367.50"></text></g><g><title>glob::is_dir (3 samples, 0.24%)</title><rect x="78.3719%" y="453" width="0.2394%" height="15" fill="rgb(219,123,41)" fg:x="982" fg:w="3"/><text x="78.6219%" y="463.50"></text></g><g><title>std::sys::unix::fs::stat (3 samples, 0.24%)</title><rect x="78.3719%" y="437" width="0.2394%" height="15" fill="rgb(212,158,18)" fg:x="982" fg:w="3"/><text x="78.6219%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (3 samples, 0.24%)</title><rect x="78.3719%" y="421" width="0.2394%" height="15" fill="rgb(234,196,53)" fg:x="982" fg:w="3"/><text x="78.6219%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (3 samples, 0.24%)</title><rect x="78.3719%" y="405" width="0.2394%" height="15" fill="rgb(210,139,12)" fg:x="982" fg:w="3"/><text x="78.6219%" y="415.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (3 samples, 0.24%)</title><rect x="78.3719%" y="389" width="0.2394%" height="15" fill="rgb(220,116,54)" fg:x="982" fg:w="3"/><text x="78.6219%" y="399.50"></text></g><g><title>std::sys::unix::fs::try_statx (3 samples, 0.24%)</title><rect x="78.3719%" y="373" width="0.2394%" height="15" fill="rgb(247,103,28)" fg:x="982" fg:w="3"/><text x="78.6219%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (3 samples, 0.24%)</title><rect x="78.3719%" y="357" width="0.2394%" height="15" fill="rgb(253,156,45)" fg:x="982" fg:w="3"/><text x="78.6219%" y="367.50"></text></g><g><title>statx (3 samples, 0.24%)</title><rect x="78.3719%" y="341" width="0.2394%" height="15" fill="rgb(237,157,52)" fg:x="982" fg:w="3"/><text x="78.6219%" y="351.50"></text></g><g><title>std::path::Path::components (1 samples, 0.08%)</title><rect x="78.6113%" y="453" width="0.0798%" height="15" fill="rgb(253,112,16)" fg:x="985" fg:w="1"/><text x="78.8613%" y="463.50"></text></g><g><title>std::path::has_physical_root (1 samples, 0.08%)</title><rect x="78.6113%" y="437" width="0.0798%" height="15" fill="rgb(234,70,18)" fg:x="985" fg:w="1"/><text x="78.8613%" y="447.50"></text></g><g><title>std::sys::unix::path::is_sep_byte (1 samples, 0.08%)</title><rect x="78.6113%" y="421" width="0.0798%" height="15" fill="rgb(247,138,19)" fg:x="985" fg:w="1"/><text x="78.8613%" y="431.50"></text></g><g><title>&lt;glob::Paths as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.56%)</title><rect x="78.3719%" y="485" width="0.5587%" height="15" fill="rgb(207,171,1)" fg:x="982" fg:w="7"/><text x="78.6219%" y="495.50"></text></g><g><title>glob::fill_todo (7 samples, 0.56%)</title><rect x="78.3719%" y="469" width="0.5587%" height="15" fill="rgb(239,213,3)" fg:x="982" fg:w="7"/><text x="78.6219%" y="479.50"></text></g><g><title>std::sys::unix::fs::stat (3 samples, 0.24%)</title><rect x="78.6911%" y="453" width="0.2394%" height="15" fill="rgb(226,112,4)" fg:x="986" fg:w="3"/><text x="78.9411%" y="463.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (3 samples, 0.24%)</title><rect x="78.6911%" y="437" width="0.2394%" height="15" fill="rgb(252,170,12)" fg:x="986" fg:w="3"/><text x="78.9411%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (3 samples, 0.24%)</title><rect x="78.6911%" y="421" width="0.2394%" height="15" fill="rgb(241,106,13)" fg:x="986" fg:w="3"/><text x="78.9411%" y="431.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (3 samples, 0.24%)</title><rect x="78.6911%" y="405" width="0.2394%" height="15" fill="rgb(225,73,23)" fg:x="986" fg:w="3"/><text x="78.9411%" y="415.50"></text></g><g><title>std::sys::unix::fs::try_statx (3 samples, 0.24%)</title><rect x="78.6911%" y="389" width="0.2394%" height="15" fill="rgb(251,227,29)" fg:x="986" fg:w="3"/><text x="78.9411%" y="399.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (3 samples, 0.24%)</title><rect x="78.6911%" y="373" width="0.2394%" height="15" fill="rgb(237,144,13)" fg:x="986" fg:w="3"/><text x="78.9411%" y="383.50"></text></g><g><title>statx (3 samples, 0.24%)</title><rect x="78.6911%" y="357" width="0.2394%" height="15" fill="rgb(232,106,46)" fg:x="986" fg:w="3"/><text x="78.9411%" y="367.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="78.9306%" y="437" width="0.0798%" height="15" fill="rgb(245,154,53)" fg:x="989" fg:w="1"/><text x="79.1806%" y="447.50"></text></g><g><title>std::path::Components::parse_next_component (1 samples, 0.08%)</title><rect x="78.9306%" y="421" width="0.0798%" height="15" fill="rgb(212,119,47)" fg:x="989" fg:w="1"/><text x="79.1806%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1 samples, 0.08%)</title><rect x="78.9306%" y="405" width="0.0798%" height="15" fill="rgb(253,135,25)" fg:x="989" fg:w="1"/><text x="79.1806%" y="415.50"></text></g><g><title>std::path::Components::parse_next_component::{{closure}} (1 samples, 0.08%)</title><rect x="78.9306%" y="389" width="0.0798%" height="15" fill="rgb(253,208,39)" fg:x="989" fg:w="1"/><text x="79.1806%" y="399.50"></text></g><g><title>std::path::Components::is_sep_byte (1 samples, 0.08%)</title><rect x="78.9306%" y="373" width="0.0798%" height="15" fill="rgb(226,64,12)" fg:x="989" fg:w="1"/><text x="79.1806%" y="383.50"></text></g><g><title>&lt;std::path::PathBuf as core::iter::traits::collect::FromIterator&lt;P&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="78.9306%" y="453" width="0.1596%" height="15" fill="rgb(214,162,37)" fg:x="989" fg:w="2"/><text x="79.1806%" y="463.50"></text></g><g><title>std::path::PathBuf::_push (1 samples, 0.08%)</title><rect x="79.0104%" y="437" width="0.0798%" height="15" fill="rgb(250,104,5)" fg:x="990" fg:w="1"/><text x="79.2604%" y="447.50"></text></g><g><title>std::ffi::os_str::OsString::push (1 samples, 0.08%)</title><rect x="79.0104%" y="421" width="0.0798%" height="15" fill="rgb(220,202,50)" fg:x="990" fg:w="1"/><text x="79.2604%" y="431.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="79.0104%" y="405" width="0.0798%" height="15" fill="rgb(248,67,38)" fg:x="990" fg:w="1"/><text x="79.2604%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="79.0104%" y="389" width="0.0798%" height="15" fill="rgb(242,94,35)" fg:x="990" fg:w="1"/><text x="79.2604%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="79.0104%" y="373" width="0.0798%" height="15" fill="rgb(209,78,37)" fg:x="990" fg:w="1"/><text x="79.2604%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="79.0104%" y="357" width="0.0798%" height="15" fill="rgb(230,126,47)" fg:x="990" fg:w="1"/><text x="79.2604%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="79.0104%" y="341" width="0.0798%" height="15" fill="rgb(222,110,35)" fg:x="990" fg:w="1"/><text x="79.2604%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="79.0104%" y="325" width="0.0798%" height="15" fill="rgb(233,154,20)" fg:x="990" fg:w="1"/><text x="79.2604%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.0104%" y="309" width="0.0798%" height="15" fill="rgb(223,53,50)" fg:x="990" fg:w="1"/><text x="79.2604%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="79.0104%" y="293" width="0.0798%" height="15" fill="rgb(251,27,26)" fg:x="990" fg:w="1"/><text x="79.2604%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.0104%" y="277" width="0.0798%" height="15" fill="rgb(223,189,16)" fg:x="990" fg:w="1"/><text x="79.2604%" y="287.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="79.0104%" y="261" width="0.0798%" height="15" fill="rgb(207,5,54)" fg:x="990" fg:w="1"/><text x="79.2604%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="79.0104%" y="245" width="0.0798%" height="15" fill="rgb(254,124,50)" fg:x="990" fg:w="1"/><text x="79.2604%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="79.1700%" y="437" width="0.0798%" height="15" fill="rgb(253,193,24)" fg:x="992" fg:w="1"/><text x="79.4200%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.1700%" y="421" width="0.0798%" height="15" fill="rgb(235,170,24)" fg:x="992" fg:w="1"/><text x="79.4200%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.1700%" y="405" width="0.0798%" height="15" fill="rgb(222,212,52)" fg:x="992" fg:w="1"/><text x="79.4200%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.1700%" y="389" width="0.0798%" height="15" fill="rgb(223,17,45)" fg:x="992" fg:w="1"/><text x="79.4200%" y="399.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::initialize (15 samples, 1.20%)</title><rect x="78.1325%" y="517" width="1.1971%" height="15" fill="rgb(227,103,26)" fg:x="979" fg:w="15"/><text x="78.3825%" y="527.50"></text></g><g><title>plugins_rune::sources::load_directory_sources (12 samples, 0.96%)</title><rect x="78.3719%" y="501" width="0.9577%" height="15" fill="rgb(251,151,25)" fg:x="982" fg:w="12"/><text x="78.6219%" y="511.50"></text></g><g><title>glob::glob (5 samples, 0.40%)</title><rect x="78.9306%" y="485" width="0.3990%" height="15" fill="rgb(248,144,29)" fg:x="989" fg:w="5"/><text x="79.1806%" y="495.50"></text></g><g><title>glob::glob_with (5 samples, 0.40%)</title><rect x="78.9306%" y="469" width="0.3990%" height="15" fill="rgb(245,97,16)" fg:x="989" fg:w="5"/><text x="79.1806%" y="479.50"></text></g><g><title>glob::Pattern::new (3 samples, 0.24%)</title><rect x="79.0902%" y="453" width="0.2394%" height="15" fill="rgb(220,200,29)" fg:x="991" fg:w="3"/><text x="79.3402%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="79.2498%" y="437" width="0.0798%" height="15" fill="rgb(206,38,29)" fg:x="993" fg:w="1"/><text x="79.4998%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.2498%" y="421" width="0.0798%" height="15" fill="rgb(245,19,52)" fg:x="993" fg:w="1"/><text x="79.4998%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.2498%" y="405" width="0.0798%" height="15" fill="rgb(205,67,43)" fg:x="993" fg:w="1"/><text x="79.4998%" y="415.50"></text></g><g><title>&lt;plugins_core::building::actions::BidirectionalDigAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="79.3296%" y="453" width="0.0798%" height="15" fill="rgb(217,128,23)" fg:x="994" fg:w="1"/><text x="79.5796%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="79.3296%" y="437" width="0.0798%" height="15" fill="rgb(210,109,28)" fg:x="994" fg:w="1"/><text x="79.5796%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="79.3296%" y="421" width="0.0798%" height="15" fill="rgb(233,181,7)" fg:x="994" fg:w="1"/><text x="79.5796%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.3296%" y="405" width="0.0798%" height="15" fill="rgb(244,11,22)" fg:x="994" fg:w="1"/><text x="79.5796%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.3296%" y="389" width="0.0798%" height="15" fill="rgb(205,124,54)" fg:x="994" fg:w="1"/><text x="79.5796%" y="399.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.16%)</title><rect x="79.4094%" y="453" width="0.1596%" height="15" fill="rgb(218,21,27)" fg:x="995" fg:w="2"/><text x="79.6594%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="79.4892%" y="437" width="0.0798%" height="15" fill="rgb(224,153,33)" fg:x="996" fg:w="1"/><text x="79.7392%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.4892%" y="421" width="0.0798%" height="15" fill="rgb(240,219,28)" fg:x="996" fg:w="1"/><text x="79.7392%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.4892%" y="405" width="0.0798%" height="15" fill="rgb(214,80,29)" fg:x="996" fg:w="1"/><text x="79.7392%" y="415.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::schema (6 samples, 0.48%)</title><rect x="79.3296%" y="485" width="0.4789%" height="15" fill="rgb(247,148,44)" fg:x="994" fg:w="6"/><text x="79.5796%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (6 samples, 0.48%)</title><rect x="79.3296%" y="469" width="0.4789%" height="15" fill="rgb(243,110,30)" fg:x="994" fg:w="6"/><text x="79.5796%" y="479.50"></text></g><g><title>kernel::plugins::ActionSchema::new (3 samples, 0.24%)</title><rect x="79.5690%" y="453" width="0.2394%" height="15" fill="rgb(243,173,41)" fg:x="997" fg:w="3"/><text x="79.8190%" y="463.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="79.5690%" y="437" width="0.2394%" height="15" fill="rgb(225,160,47)" fg:x="997" fg:w="3"/><text x="79.8190%" y="447.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="79.8085%" y="485" width="0.0798%" height="15" fill="rgb(215,44,21)" fg:x="1000" fg:w="1"/><text x="80.0585%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="79.8085%" y="469" width="0.0798%" height="15" fill="rgb(248,90,3)" fg:x="1000" fg:w="1"/><text x="80.0585%" y="479.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="79.8085%" y="453" width="0.0798%" height="15" fill="rgb(220,196,49)" fg:x="1000" fg:w="1"/><text x="80.0585%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.8085%" y="437" width="0.0798%" height="15" fill="rgb(217,138,14)" fg:x="1000" fg:w="1"/><text x="80.0585%" y="447.50"></text></g><g><title>&lt;plugins_core::chat::ChatPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="79.8883%" y="485" width="0.0798%" height="15" fill="rgb(219,111,20)" fg:x="1001" fg:w="1"/><text x="80.1383%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="79.8883%" y="469" width="0.0798%" height="15" fill="rgb(218,114,4)" fg:x="1001" fg:w="1"/><text x="80.1383%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.8883%" y="453" width="0.0798%" height="15" fill="rgb(238,133,3)" fg:x="1001" fg:w="1"/><text x="80.1383%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.8883%" y="437" width="0.0798%" height="15" fill="rgb(224,95,0)" fg:x="1001" fg:w="1"/><text x="80.1383%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="79.9681%" y="453" width="0.0798%" height="15" fill="rgb(220,169,35)" fg:x="1002" fg:w="1"/><text x="80.2181%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.9681%" y="437" width="0.0798%" height="15" fill="rgb(242,116,47)" fg:x="1002" fg:w="1"/><text x="80.2181%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.9681%" y="421" width="0.0798%" height="15" fill="rgb(251,42,20)" fg:x="1002" fg:w="1"/><text x="80.2181%" y="431.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="80.0479%" y="453" width="0.0798%" height="15" fill="rgb(234,7,34)" fg:x="1003" fg:w="1"/><text x="80.2979%" y="463.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Plugin&gt;::schema (4 samples, 0.32%)</title><rect x="79.9681%" y="485" width="0.3192%" height="15" fill="rgb(243,208,13)" fg:x="1002" fg:w="4"/><text x="80.2181%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (4 samples, 0.32%)</title><rect x="79.9681%" y="469" width="0.3192%" height="15" fill="rgb(227,33,28)" fg:x="1002" fg:w="4"/><text x="80.2181%" y="479.50"></text></g><g><title>replies::identifier_to_key (2 samples, 0.16%)</title><rect x="80.1277%" y="453" width="0.1596%" height="15" fill="rgb(250,47,37)" fg:x="1004" fg:w="2"/><text x="80.3777%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="80.2075%" y="437" width="0.0798%" height="15" fill="rgb(235,111,52)" fg:x="1005" fg:w="1"/><text x="80.4575%" y="447.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="80.2873%" y="485" width="0.0798%" height="15" fill="rgb(223,64,28)" fg:x="1006" fg:w="1"/><text x="80.5373%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="80.2873%" y="469" width="0.0798%" height="15" fill="rgb(236,67,22)" fg:x="1006" fg:w="1"/><text x="80.5373%" y="479.50"></text></g><g><title>&lt;plugins_rune::actions::RuneAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="80.2873%" y="453" width="0.0798%" height="15" fill="rgb(243,79,24)" fg:x="1006" fg:w="1"/><text x="80.5373%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (14 samples, 1.12%)</title><rect x="79.3296%" y="517" width="1.1173%" height="15" fill="rgb(241,225,22)" fg:x="994" fg:w="14"/><text x="79.5796%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 1.12%)</title><rect x="79.3296%" y="501" width="1.1173%" height="15" fill="rgb(228,214,26)" fg:x="994" fg:w="14"/><text x="79.5796%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.3671%" y="485" width="0.0798%" height="15" fill="rgb(219,84,52)" fg:x="1007" fg:w="1"/><text x="80.6171%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.4469%" y="501" width="0.0798%" height="15" fill="rgb(220,12,22)" fg:x="1008" fg:w="1"/><text x="80.6969%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::plugins::Schema)&gt; (2 samples, 0.16%)</title><rect x="80.4469%" y="517" width="0.1596%" height="15" fill="rgb(219,9,49)" fg:x="1008" fg:w="2"/><text x="80.6969%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (1 samples, 0.08%)</title><rect x="80.5267%" y="501" width="0.0798%" height="15" fill="rgb(237,40,43)" fg:x="1009" fg:w="1"/><text x="80.7767%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.5267%" y="485" width="0.0798%" height="15" fill="rgb(212,189,32)" fg:x="1009" fg:w="1"/><text x="80.7767%" y="495.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (38 samples, 3.03%)</title><rect x="77.8132%" y="597" width="3.0327%" height="15" fill="rgb(247,48,9)" fg:x="975" fg:w="38"/><text x="78.0632%" y="607.50">&lt;en..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (38 samples, 3.03%)</title><rect x="77.8132%" y="581" width="3.0327%" height="15" fill="rgb(247,112,3)" fg:x="975" fg:w="38"/><text x="78.0632%" y="591.50">eng..</text></g><g><title>engine::session::Session::new (37 samples, 2.95%)</title><rect x="77.8931%" y="565" width="2.9529%" height="15" fill="rgb(243,110,18)" fg:x="976" fg:w="37"/><text x="78.1431%" y="575.50">eng..</text></g><g><title>engine::session::Session::initialize (36 samples, 2.87%)</title><rect x="77.9729%" y="549" width="2.8731%" height="15" fill="rgb(233,223,44)" fg:x="977" fg:w="36"/><text x="78.2229%" y="559.50">en..</text></g><g><title>kernel::plugins::SessionPlugins::initialize (36 samples, 2.87%)</title><rect x="77.9729%" y="533" width="2.8731%" height="15" fill="rgb(245,160,20)" fg:x="977" fg:w="36"/><text x="78.2229%" y="543.50">ke..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (3 samples, 0.24%)</title><rect x="80.6065%" y="517" width="0.2394%" height="15" fill="rgb(225,37,1)" fg:x="1010" fg:w="3"/><text x="80.8565%" y="527.50"></text></g><g><title>clock_gettime (3 samples, 0.24%)</title><rect x="80.6065%" y="501" width="0.2394%" height="15" fill="rgb(253,227,39)" fg:x="1010" fg:w="3"/><text x="80.8565%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="80.9258%" y="565" width="0.0798%" height="15" fill="rgb(240,179,26)" fg:x="1014" fg:w="1"/><text x="81.1758%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.9258%" y="549" width="0.0798%" height="15" fill="rgb(237,212,23)" fg:x="1014" fg:w="1"/><text x="81.1758%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="81.1652%" y="421" width="0.0798%" height="15" fill="rgb(221,38,11)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.1652%" y="405" width="0.0798%" height="15" fill="rgb(215,85,6)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="81.0854%" y="453" width="0.2394%" height="15" fill="rgb(239,64,14)" fg:x="1016" fg:w="3"/><text x="81.3354%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="81.0854%" y="437" width="0.2394%" height="15" fill="rgb(215,150,32)" fg:x="1016" fg:w="3"/><text x="81.3354%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.2450%" y="421" width="0.0798%" height="15" fill="rgb(238,15,13)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="81.0854%" y="469" width="0.3192%" height="15" fill="rgb(251,87,8)" fg:x="1016" fg:w="4"/><text x="81.3354%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.3248%" y="453" width="0.0798%" height="15" fill="rgb(206,86,1)" fg:x="1019" fg:w="1"/><text x="81.5748%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.3248%" y="437" width="0.0798%" height="15" fill="rgb(208,151,45)" fg:x="1019" fg:w="1"/><text x="81.5748%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="81.0056%" y="485" width="0.4789%" height="15" fill="rgb(231,181,24)" fg:x="1015" fg:w="6"/><text x="81.2556%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.4046%" y="469" width="0.0798%" height="15" fill="rgb(240,106,29)" fg:x="1020" fg:w="1"/><text x="81.6546%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="81.5642%" y="469" width="0.0798%" height="15" fill="rgb(227,166,11)" fg:x="1022" fg:w="1"/><text x="81.8142%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.5642%" y="453" width="0.0798%" height="15" fill="rgb(254,14,34)" fg:x="1022" fg:w="1"/><text x="81.8142%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.5642%" y="437" width="0.0798%" height="15" fill="rgb(223,222,6)" fg:x="1022" fg:w="1"/><text x="81.8142%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.5642%" y="421" width="0.0798%" height="15" fill="rgb(245,69,24)" fg:x="1022" fg:w="1"/><text x="81.8142%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.5642%" y="405" width="0.0798%" height="15" fill="rgb(213,193,7)" fg:x="1022" fg:w="1"/><text x="81.8142%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="81.6441%" y="437" width="0.1596%" height="15" fill="rgb(237,92,51)" fg:x="1023" fg:w="2"/><text x="81.8941%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="81.6441%" y="421" width="0.1596%" height="15" fill="rgb(225,194,6)" fg:x="1023" fg:w="2"/><text x="81.8941%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="81.6441%" y="405" width="0.1596%" height="15" fill="rgb(205,159,49)" fg:x="1023" fg:w="2"/><text x="81.8941%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="81.6441%" y="389" width="0.1596%" height="15" fill="rgb(219,69,2)" fg:x="1023" fg:w="2"/><text x="81.8941%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.7239%" y="373" width="0.0798%" height="15" fill="rgb(215,107,24)" fg:x="1024" fg:w="1"/><text x="81.9739%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.7239%" y="357" width="0.0798%" height="15" fill="rgb(249,208,29)" fg:x="1024" fg:w="1"/><text x="81.9739%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="81.8037%" y="437" width="0.1596%" height="15" fill="rgb(213,147,10)" fg:x="1025" fg:w="2"/><text x="82.0537%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.9633%" y="421" width="0.0798%" height="15" fill="rgb(254,140,42)" fg:x="1027" fg:w="1"/><text x="82.2133%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.9633%" y="405" width="0.0798%" height="15" fill="rgb(249,9,15)" fg:x="1027" fg:w="1"/><text x="82.2133%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.9633%" y="389" width="0.0798%" height="15" fill="rgb(210,19,33)" fg:x="1027" fg:w="1"/><text x="82.2133%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.9633%" y="373" width="0.0798%" height="15" fill="rgb(241,121,22)" fg:x="1027" fg:w="1"/><text x="82.2133%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.9633%" y="357" width="0.0798%" height="15" fill="rgb(244,69,52)" fg:x="1027" fg:w="1"/><text x="82.2133%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.9633%" y="341" width="0.0798%" height="15" fill="rgb(244,191,54)" fg:x="1027" fg:w="1"/><text x="82.2133%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="81.9633%" y="325" width="0.0798%" height="15" fill="rgb(250,3,53)" fg:x="1027" fg:w="1"/><text x="82.2133%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="82.0431%" y="405" width="0.1596%" height="15" fill="rgb(205,77,3)" fg:x="1028" fg:w="2"/><text x="82.2931%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="82.0431%" y="389" width="0.1596%" height="15" fill="rgb(207,155,3)" fg:x="1028" fg:w="2"/><text x="82.2931%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="82.0431%" y="373" width="0.1596%" height="15" fill="rgb(224,79,2)" fg:x="1028" fg:w="2"/><text x="82.2931%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.1229%" y="357" width="0.0798%" height="15" fill="rgb(243,172,5)" fg:x="1029" fg:w="1"/><text x="82.3729%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="82.1229%" y="341" width="0.0798%" height="15" fill="rgb(217,23,43)" fg:x="1029" fg:w="1"/><text x="82.3729%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="82.1229%" y="325" width="0.0798%" height="15" fill="rgb(223,109,20)" fg:x="1029" fg:w="1"/><text x="82.3729%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="82.1229%" y="309" width="0.0798%" height="15" fill="rgb(232,159,21)" fg:x="1029" fg:w="1"/><text x="82.3729%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.2027%" y="389" width="0.0798%" height="15" fill="rgb(219,58,2)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="82.0431%" y="421" width="0.3192%" height="15" fill="rgb(241,56,8)" fg:x="1028" fg:w="4"/><text x="82.2931%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="82.2027%" y="405" width="0.1596%" height="15" fill="rgb(249,10,27)" fg:x="1030" fg:w="2"/><text x="82.4527%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.2825%" y="389" width="0.0798%" height="15" fill="rgb(248,177,5)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.2825%" y="373" width="0.0798%" height="15" fill="rgb(239,12,30)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="81.6441%" y="453" width="0.7981%" height="15" fill="rgb(229,164,25)" fg:x="1023" fg:w="10"/><text x="81.8941%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="81.9633%" y="437" width="0.4789%" height="15" fill="rgb(231,217,50)" fg:x="1027" fg:w="6"/><text x="82.2133%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.3623%" y="421" width="0.0798%" height="15" fill="rgb(247,99,32)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.3623%" y="405" width="0.0798%" height="15" fill="rgb(240,74,50)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="82.3623%" y="389" width="0.0798%" height="15" fill="rgb(218,54,8)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="81.6441%" y="469" width="0.8779%" height="15" fill="rgb(227,132,20)" fg:x="1023" fg:w="11"/><text x="81.8941%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.4421%" y="453" width="0.0798%" height="15" fill="rgb(232,134,12)" fg:x="1033" fg:w="1"/><text x="82.6921%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.4421%" y="437" width="0.0798%" height="15" fill="rgb(250,129,18)" fg:x="1033" fg:w="1"/><text x="82.6921%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (14 samples, 1.12%)</title><rect x="81.4844%" y="485" width="1.1173%" height="15" fill="rgb(232,129,47)" fg:x="1021" fg:w="14"/><text x="81.7344%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.5219%" y="469" width="0.0798%" height="15" fill="rgb(230,31,40)" fg:x="1034" fg:w="1"/><text x="82.7719%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.6816%" y="437" width="0.0798%" height="15" fill="rgb(232,126,10)" fg:x="1036" fg:w="1"/><text x="82.9316%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="82.7614%" y="437" width="0.0798%" height="15" fill="rgb(205,46,31)" fg:x="1037" fg:w="1"/><text x="83.0114%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.7614%" y="421" width="0.0798%" height="15" fill="rgb(232,37,37)" fg:x="1037" fg:w="1"/><text x="83.0114%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="82.8412%" y="389" width="0.0798%" height="15" fill="rgb(240,91,16)" fg:x="1038" fg:w="1"/><text x="83.0912%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.8412%" y="373" width="0.0798%" height="15" fill="rgb(224,160,9)" fg:x="1038" fg:w="1"/><text x="83.0912%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.8412%" y="357" width="0.0798%" height="15" fill="rgb(215,116,14)" fg:x="1038" fg:w="1"/><text x="83.0912%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.8412%" y="341" width="0.0798%" height="15" fill="rgb(235,46,36)" fg:x="1038" fg:w="1"/><text x="83.0912%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.8412%" y="325" width="0.0798%" height="15" fill="rgb(238,39,28)" fg:x="1038" fg:w="1"/><text x="83.0912%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="82.9210%" y="373" width="0.0798%" height="15" fill="rgb(242,125,29)" fg:x="1039" fg:w="1"/><text x="83.1710%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="83.0008%" y="341" width="0.0798%" height="15" fill="rgb(238,211,30)" fg:x="1040" fg:w="1"/><text x="83.2508%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="83.0008%" y="325" width="0.0798%" height="15" fill="rgb(227,201,28)" fg:x="1040" fg:w="1"/><text x="83.2508%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="83.0008%" y="357" width="0.1596%" height="15" fill="rgb(238,77,29)" fg:x="1040" fg:w="2"/><text x="83.2508%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="83.0806%" y="341" width="0.0798%" height="15" fill="rgb(213,221,40)" fg:x="1041" fg:w="1"/><text x="83.3306%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="83.1604%" y="341" width="0.0798%" height="15" fill="rgb(226,220,44)" fg:x="1042" fg:w="1"/><text x="83.4104%" y="351.50"></text></g><g><title>engine::session::Session::flush (30 samples, 2.39%)</title><rect x="80.9258%" y="581" width="2.3943%" height="15" fill="rgb(228,90,23)" fg:x="1014" fg:w="30"/><text x="81.1758%" y="591.50">en..</text></g><g><title>engine::session::state::State::close (29 samples, 2.31%)</title><rect x="81.0056%" y="565" width="2.3144%" height="15" fill="rgb(235,72,29)" fg:x="1015" fg:w="29"/><text x="81.2556%" y="575.50">e..</text></g><g><title>engine::session::state::State::flush_entities (29 samples, 2.31%)</title><rect x="81.0056%" y="549" width="2.3144%" height="15" fill="rgb(248,117,39)" fg:x="1015" fg:w="29"/><text x="81.2556%" y="559.50">e..</text></g><g><title>core::iter::adapters::try_process (29 samples, 2.31%)</title><rect x="81.0056%" y="533" width="2.3144%" height="15" fill="rgb(225,43,28)" fg:x="1015" fg:w="29"/><text x="81.2556%" y="543.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (29 samples, 2.31%)</title><rect x="81.0056%" y="517" width="2.3144%" height="15" fill="rgb(240,93,4)" fg:x="1015" fg:w="29"/><text x="81.2556%" y="527.50">&lt;..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (29 samples, 2.31%)</title><rect x="81.0056%" y="501" width="2.3144%" height="15" fill="rgb(234,178,27)" fg:x="1015" fg:w="29"/><text x="81.2556%" y="511.50">e..</text></g><g><title>kernel::model::any_entity_changes (9 samples, 0.72%)</title><rect x="82.6018%" y="485" width="0.7183%" height="15" fill="rgb(254,88,22)" fg:x="1035" fg:w="9"/><text x="82.8518%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.72%)</title><rect x="82.6018%" y="469" width="0.7183%" height="15" fill="rgb(240,206,50)" fg:x="1035" fg:w="9"/><text x="82.8518%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.72%)</title><rect x="82.6018%" y="453" width="0.7183%" height="15" fill="rgb(249,103,8)" fg:x="1035" fg:w="9"/><text x="82.8518%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.48%)</title><rect x="82.8412%" y="437" width="0.4789%" height="15" fill="rgb(241,178,36)" fg:x="1038" fg:w="6"/><text x="83.0912%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.48%)</title><rect x="82.8412%" y="421" width="0.4789%" height="15" fill="rgb(246,110,15)" fg:x="1038" fg:w="6"/><text x="83.0912%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="82.8412%" y="405" width="0.4789%" height="15" fill="rgb(207,14,43)" fg:x="1038" fg:w="6"/><text x="83.0912%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="82.9210%" y="389" width="0.3990%" height="15" fill="rgb(253,219,19)" fg:x="1039" fg:w="5"/><text x="83.1710%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="83.0008%" y="373" width="0.3192%" height="15" fill="rgb(216,126,5)" fg:x="1040" fg:w="4"/><text x="83.2508%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="83.1604%" y="357" width="0.1596%" height="15" fill="rgb(218,78,42)" fg:x="1042" fg:w="2"/><text x="83.4104%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="83.2402%" y="341" width="0.0798%" height="15" fill="rgb(215,154,40)" fg:x="1043" fg:w="1"/><text x="83.4902%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="83.2402%" y="325" width="0.0798%" height="15" fill="rgb(235,129,32)" fg:x="1043" fg:w="1"/><text x="83.4902%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="83.3200%" y="549" width="0.0798%" height="15" fill="rgb(218,51,8)" fg:x="1044" fg:w="1"/><text x="83.5700%" y="559.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="83.3200%" y="565" width="0.1596%" height="15" fill="rgb(245,48,4)" fg:x="1044" fg:w="2"/><text x="83.5700%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.3998%" y="549" width="0.0798%" height="15" fill="rgb(250,175,12)" fg:x="1045" fg:w="1"/><text x="83.6498%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="83.4796%" y="549" width="0.1596%" height="15" fill="rgb(237,95,40)" fg:x="1046" fg:w="2"/><text x="83.7296%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.4796%" y="533" width="0.1596%" height="15" fill="rgb(244,120,0)" fg:x="1046" fg:w="2"/><text x="83.7296%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.4796%" y="517" width="0.1596%" height="15" fill="rgb(241,19,42)" fg:x="1046" fg:w="2"/><text x="83.7296%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="83.4796%" y="501" width="0.1596%" height="15" fill="rgb(217,174,48)" fg:x="1046" fg:w="2"/><text x="83.7296%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="83.4796%" y="485" width="0.1596%" height="15" fill="rgb(239,36,38)" fg:x="1046" fg:w="2"/><text x="83.7296%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="83.4796%" y="469" width="0.1596%" height="15" fill="rgb(220,63,49)" fg:x="1046" fg:w="2"/><text x="83.7296%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="83.4796%" y="453" width="0.1596%" height="15" fill="rgb(240,101,13)" fg:x="1046" fg:w="2"/><text x="83.7296%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="83.4796%" y="437" width="0.1596%" height="15" fill="rgb(209,184,51)" fg:x="1046" fg:w="2"/><text x="83.7296%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="83.4796%" y="421" width="0.1596%" height="15" fill="rgb(206,136,39)" fg:x="1046" fg:w="2"/><text x="83.7296%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="83.4796%" y="405" width="0.1596%" height="15" fill="rgb(254,47,45)" fg:x="1046" fg:w="2"/><text x="83.7296%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="83.4796%" y="389" width="0.1596%" height="15" fill="rgb(252,103,20)" fg:x="1046" fg:w="2"/><text x="83.7296%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="83.4796%" y="373" width="0.1596%" height="15" fill="rgb(230,69,12)" fg:x="1046" fg:w="2"/><text x="83.7296%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="83.4796%" y="357" width="0.1596%" height="15" fill="rgb(219,2,28)" fg:x="1046" fg:w="2"/><text x="83.7296%" y="367.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="83.4796%" y="341" width="0.1596%" height="15" fill="rgb(210,9,12)" fg:x="1046" fg:w="2"/><text x="83.7296%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="83.4796%" y="325" width="0.1596%" height="15" fill="rgb(235,99,33)" fg:x="1046" fg:w="2"/><text x="83.7296%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="83.4796%" y="565" width="0.2394%" height="15" fill="rgb(230,11,38)" fg:x="1046" fg:w="3"/><text x="83.7296%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="83.6393%" y="549" width="0.0798%" height="15" fill="rgb(217,129,0)" fg:x="1048" fg:w="1"/><text x="83.8893%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="83.6393%" y="533" width="0.0798%" height="15" fill="rgb(222,198,4)" fg:x="1048" fg:w="1"/><text x="83.8893%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.6393%" y="517" width="0.0798%" height="15" fill="rgb(246,170,27)" fg:x="1048" fg:w="1"/><text x="83.8893%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="83.6393%" y="501" width="0.0798%" height="15" fill="rgb(229,17,28)" fg:x="1048" fg:w="1"/><text x="83.8893%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="83.6393%" y="485" width="0.0798%" height="15" fill="rgb(233,198,48)" fg:x="1048" fg:w="1"/><text x="83.8893%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="83.6393%" y="469" width="0.0798%" height="15" fill="rgb(238,103,23)" fg:x="1048" fg:w="1"/><text x="83.8893%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="83.6393%" y="453" width="0.0798%" height="15" fill="rgb(206,91,41)" fg:x="1048" fg:w="1"/><text x="83.8893%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="83.6393%" y="437" width="0.0798%" height="15" fill="rgb(227,34,25)" fg:x="1048" fg:w="1"/><text x="83.8893%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="83.6393%" y="421" width="0.0798%" height="15" fill="rgb(210,110,44)" fg:x="1048" fg:w="1"/><text x="83.8893%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="83.6393%" y="405" width="0.0798%" height="15" fill="rgb(216,189,8)" fg:x="1048" fg:w="1"/><text x="83.8893%" y="415.50"></text></g><g><title>plugins_core::build::Build::save (6 samples, 0.48%)</title><rect x="83.3200%" y="581" width="0.4789%" height="15" fill="rgb(234,9,46)" fg:x="1044" fg:w="6"/><text x="83.5700%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.7191%" y="565" width="0.0798%" height="15" fill="rgb(251,200,5)" fg:x="1049" fg:w="1"/><text x="83.9691%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.7191%" y="549" width="0.0798%" height="15" fill="rgb(238,165,37)" fg:x="1049" fg:w="1"/><text x="83.9691%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.7191%" y="533" width="0.0798%" height="15" fill="rgb(232,77,38)" fg:x="1049" fg:w="1"/><text x="83.9691%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="83.7989%" y="501" width="0.0798%" height="15" fill="rgb(253,179,33)" fg:x="1050" fg:w="1"/><text x="84.0489%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.7989%" y="485" width="0.0798%" height="15" fill="rgb(240,13,35)" fg:x="1050" fg:w="1"/><text x="84.0489%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.7989%" y="469" width="0.0798%" height="15" fill="rgb(242,150,49)" fg:x="1050" fg:w="1"/><text x="84.0489%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.7989%" y="453" width="0.0798%" height="15" fill="rgb(237,176,28)" fg:x="1050" fg:w="1"/><text x="84.0489%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="83.7989%" y="517" width="0.2394%" height="15" fill="rgb(214,176,33)" fg:x="1050" fg:w="3"/><text x="84.0489%" y="527.50"></text></g><g><title>kernel::model::props::Props::u64_property (2 samples, 0.16%)</title><rect x="83.8787%" y="501" width="0.1596%" height="15" fill="rgb(214,25,12)" fg:x="1051" fg:w="2"/><text x="84.1287%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="83.8787%" y="485" width="0.1596%" height="15" fill="rgb(238,190,20)" fg:x="1051" fg:w="2"/><text x="84.1287%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.32%)</title><rect x="83.7989%" y="549" width="0.3192%" height="15" fill="rgb(208,11,19)" fg:x="1050" fg:w="4"/><text x="84.0489%" y="559.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="83.7989%" y="533" width="0.3192%" height="15" fill="rgb(239,90,4)" fg:x="1050" fg:w="4"/><text x="84.0489%" y="543.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="84.0383%" y="517" width="0.0798%" height="15" fill="rgb(248,110,3)" fg:x="1053" fg:w="1"/><text x="84.2883%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="84.0383%" y="501" width="0.0798%" height="15" fill="rgb(210,41,30)" fg:x="1053" fg:w="1"/><text x="84.2883%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.0383%" y="485" width="0.0798%" height="15" fill="rgb(239,36,8)" fg:x="1053" fg:w="1"/><text x="84.2883%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.0383%" y="469" width="0.0798%" height="15" fill="rgb(237,201,47)" fg:x="1053" fg:w="1"/><text x="84.2883%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.0383%" y="453" width="0.0798%" height="15" fill="rgb(224,140,29)" fg:x="1053" fg:w="1"/><text x="84.2883%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.0383%" y="437" width="0.0798%" height="15" fill="rgb(231,209,17)" fg:x="1053" fg:w="1"/><text x="84.2883%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.0383%" y="421" width="0.0798%" height="15" fill="rgb(249,196,1)" fg:x="1053" fg:w="1"/><text x="84.2883%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.0383%" y="405" width="0.0798%" height="15" fill="rgb(223,207,51)" fg:x="1053" fg:w="1"/><text x="84.2883%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.0383%" y="389" width="0.0798%" height="15" fill="rgb(210,14,40)" fg:x="1053" fg:w="1"/><text x="84.2883%" y="399.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="84.1181%" y="549" width="0.0798%" height="15" fill="rgb(250,20,52)" fg:x="1054" fg:w="1"/><text x="84.3681%" y="559.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="84.1181%" y="533" width="0.0798%" height="15" fill="rgb(241,46,11)" fg:x="1054" fg:w="1"/><text x="84.3681%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.1181%" y="517" width="0.0798%" height="15" fill="rgb(219,105,5)" fg:x="1054" fg:w="1"/><text x="84.3681%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.1181%" y="501" width="0.0798%" height="15" fill="rgb(252,77,35)" fg:x="1054" fg:w="1"/><text x="84.3681%" y="511.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="84.1181%" y="485" width="0.0798%" height="15" fill="rgb(243,119,2)" fg:x="1054" fg:w="1"/><text x="84.3681%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.1181%" y="469" width="0.0798%" height="15" fill="rgb(206,82,28)" fg:x="1054" fg:w="1"/><text x="84.3681%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="84.1979%" y="533" width="0.2394%" height="15" fill="rgb(227,120,12)" fg:x="1055" fg:w="3"/><text x="84.4479%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="84.1979%" y="517" width="0.2394%" height="15" fill="rgb(229,134,41)" fg:x="1055" fg:w="3"/><text x="84.4479%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="84.1979%" y="501" width="0.2394%" height="15" fill="rgb(239,96,32)" fg:x="1055" fg:w="3"/><text x="84.4479%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="84.2777%" y="485" width="0.1596%" height="15" fill="rgb(225,46,27)" fg:x="1056" fg:w="2"/><text x="84.5277%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.2777%" y="469" width="0.1596%" height="15" fill="rgb(215,168,2)" fg:x="1056" fg:w="2"/><text x="84.5277%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.3575%" y="453" width="0.0798%" height="15" fill="rgb(207,170,52)" fg:x="1057" fg:w="1"/><text x="84.6075%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3575%" y="437" width="0.0798%" height="15" fill="rgb(237,198,36)" fg:x="1057" fg:w="1"/><text x="84.6075%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.4374%" y="533" width="0.0798%" height="15" fill="rgb(213,27,14)" fg:x="1058" fg:w="1"/><text x="84.6874%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.5172%" y="469" width="0.0798%" height="15" fill="rgb(218,77,5)" fg:x="1059" fg:w="1"/><text x="84.7672%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.5172%" y="453" width="0.0798%" height="15" fill="rgb(230,219,39)" fg:x="1059" fg:w="1"/><text x="84.7672%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.5172%" y="437" width="0.0798%" height="15" fill="rgb(245,177,7)" fg:x="1059" fg:w="1"/><text x="84.7672%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.5172%" y="421" width="0.0798%" height="15" fill="rgb(246,44,46)" fg:x="1059" fg:w="1"/><text x="84.7672%" y="431.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.48%)</title><rect x="84.1979%" y="549" width="0.4789%" height="15" fill="rgb(207,173,15)" fg:x="1055" fg:w="6"/><text x="84.4479%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="84.5172%" y="533" width="0.1596%" height="15" fill="rgb(245,170,50)" fg:x="1059" fg:w="2"/><text x="84.7672%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="84.5172%" y="517" width="0.1596%" height="15" fill="rgb(233,156,21)" fg:x="1059" fg:w="2"/><text x="84.7672%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="84.5172%" y="501" width="0.1596%" height="15" fill="rgb(253,146,27)" fg:x="1059" fg:w="2"/><text x="84.7672%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="84.5172%" y="485" width="0.1596%" height="15" fill="rgb(247,66,29)" fg:x="1059" fg:w="2"/><text x="84.7672%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.5970%" y="469" width="0.0798%" height="15" fill="rgb(218,207,26)" fg:x="1060" fg:w="1"/><text x="84.8470%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5970%" y="453" width="0.0798%" height="15" fill="rgb(234,93,26)" fg:x="1060" fg:w="1"/><text x="84.8470%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.5970%" y="437" width="0.0798%" height="15" fill="rgb(214,75,48)" fg:x="1060" fg:w="1"/><text x="84.8470%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5970%" y="421" width="0.0798%" height="15" fill="rgb(229,119,22)" fg:x="1060" fg:w="1"/><text x="84.8470%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.5970%" y="405" width="0.0798%" height="15" fill="rgb(226,153,19)" fg:x="1060" fg:w="1"/><text x="84.8470%" y="415.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (12 samples, 0.96%)</title><rect x="83.7989%" y="581" width="0.9577%" height="15" fill="rgb(220,204,36)" fg:x="1050" fg:w="12"/><text x="84.0489%" y="591.50"></text></g><g><title>plugins_core::tools::set_container (12 samples, 0.96%)</title><rect x="83.7989%" y="565" width="0.9577%" height="15" fill="rgb(253,181,43)" fg:x="1050" fg:w="12"/><text x="84.0489%" y="575.50"></text></g><g><title>plugins_core::location::model::Location::set (1 samples, 0.08%)</title><rect x="84.6768%" y="549" width="0.0798%" height="15" fill="rgb(211,41,51)" fg:x="1061" fg:w="1"/><text x="84.9268%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="84.6768%" y="533" width="0.0798%" height="15" fill="rgb(207,215,0)" fg:x="1061" fg:w="1"/><text x="84.9268%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="84.6768%" y="517" width="0.0798%" height="15" fill="rgb(212,153,10)" fg:x="1061" fg:w="1"/><text x="84.9268%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.6768%" y="501" width="0.0798%" height="15" fill="rgb(251,171,36)" fg:x="1061" fg:w="1"/><text x="84.9268%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="84.6768%" y="485" width="0.0798%" height="15" fill="rgb(225,219,41)" fg:x="1061" fg:w="1"/><text x="84.9268%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="84.6768%" y="469" width="0.0798%" height="15" fill="rgb(208,200,1)" fg:x="1061" fg:w="1"/><text x="84.9268%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="84.7566%" y="565" width="0.0798%" height="15" fill="rgb(206,75,47)" fg:x="1062" fg:w="1"/><text x="85.0066%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.7566%" y="549" width="0.0798%" height="15" fill="rgb(248,3,16)" fg:x="1062" fg:w="1"/><text x="85.0066%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.7566%" y="533" width="0.0798%" height="15" fill="rgb(242,157,36)" fg:x="1062" fg:w="1"/><text x="85.0066%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.7566%" y="517" width="0.0798%" height="15" fill="rgb(215,175,11)" fg:x="1062" fg:w="1"/><text x="85.0066%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.7566%" y="501" width="0.0798%" height="15" fill="rgb(252,222,22)" fg:x="1062" fg:w="1"/><text x="85.0066%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="84.8364%" y="565" width="0.0798%" height="15" fill="rgb(250,121,35)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="84.8364%" y="549" width="0.0798%" height="15" fill="rgb(233,120,49)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="84.8364%" y="533" width="0.0798%" height="15" fill="rgb(205,201,14)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="84.8364%" y="517" width="0.0798%" height="15" fill="rgb(219,58,45)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="84.8364%" y="501" width="0.0798%" height="15" fill="rgb(251,65,12)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.8364%" y="485" width="0.0798%" height="15" fill="rgb(224,47,31)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="84.8364%" y="469" width="0.0798%" height="15" fill="rgb(233,74,26)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.8364%" y="453" width="0.0798%" height="15" fill="rgb(231,211,31)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.8364%" y="437" width="0.0798%" height="15" fill="rgb(239,167,5)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.8364%" y="421" width="0.0798%" height="15" fill="rgb(241,85,0)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.8364%" y="405" width="0.0798%" height="15" fill="rgb(229,130,21)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.8364%" y="389" width="0.0798%" height="15" fill="rgb(254,84,49)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.8364%" y="373" width="0.0798%" height="15" fill="rgb(235,85,21)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.8364%" y="357" width="0.0798%" height="15" fill="rgb(246,128,52)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.8364%" y="341" width="0.0798%" height="15" fill="rgb(243,114,49)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.8364%" y="325" width="0.0798%" height="15" fill="rgb(240,224,22)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.8364%" y="309" width="0.0798%" height="15" fill="rgb(247,201,52)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.8364%" y="293" width="0.0798%" height="15" fill="rgb(231,70,45)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.8364%" y="277" width="0.0798%" height="15" fill="rgb(217,215,20)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.8364%" y="261" width="0.0798%" height="15" fill="rgb(226,170,30)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.8364%" y="245" width="0.0798%" height="15" fill="rgb(220,190,43)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.8364%" y="229" width="0.0798%" height="15" fill="rgb(218,20,18)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="239.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="84.9162%" y="549" width="0.0798%" height="15" fill="rgb(245,37,26)" fg:x="1064" fg:w="1"/><text x="85.1662%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9162%" y="533" width="0.0798%" height="15" fill="rgb(241,127,29)" fg:x="1064" fg:w="1"/><text x="85.1662%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9162%" y="517" width="0.0798%" height="15" fill="rgb(241,33,26)" fg:x="1064" fg:w="1"/><text x="85.1662%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.9162%" y="501" width="0.0798%" height="15" fill="rgb(220,106,21)" fg:x="1064" fg:w="1"/><text x="85.1662%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.9162%" y="485" width="0.0798%" height="15" fill="rgb(225,125,35)" fg:x="1064" fg:w="1"/><text x="85.1662%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.9162%" y="469" width="0.0798%" height="15" fill="rgb(248,80,22)" fg:x="1064" fg:w="1"/><text x="85.1662%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="84.9162%" y="453" width="0.0798%" height="15" fill="rgb(231,117,39)" fg:x="1064" fg:w="1"/><text x="85.1662%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="84.9162%" y="437" width="0.0798%" height="15" fill="rgb(239,183,16)" fg:x="1064" fg:w="1"/><text x="85.1662%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="84.9960%" y="501" width="0.0798%" height="15" fill="rgb(221,61,19)" fg:x="1065" fg:w="1"/><text x="85.2460%" y="511.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="85.0758%" y="501" width="0.0798%" height="15" fill="rgb(239,196,44)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="85.0758%" y="485" width="0.0798%" height="15" fill="rgb(206,113,19)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="85.0758%" y="469" width="0.0798%" height="15" fill="rgb(245,114,12)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.0758%" y="453" width="0.0798%" height="15" fill="rgb(247,89,39)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.0758%" y="437" width="0.0798%" height="15" fill="rgb(213,85,14)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.0758%" y="421" width="0.0798%" height="15" fill="rgb(249,206,33)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.0758%" y="405" width="0.0798%" height="15" fill="rgb(235,167,47)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.0758%" y="389" width="0.0798%" height="15" fill="rgb(217,177,16)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="85.0758%" y="373" width="0.0798%" height="15" fill="rgb(250,228,29)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="85.0758%" y="357" width="0.0798%" height="15" fill="rgb(216,195,42)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.1556%" y="469" width="0.0798%" height="15" fill="rgb(232,192,32)" fg:x="1067" fg:w="1"/><text x="85.4056%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="85.2354%" y="469" width="0.0798%" height="15" fill="rgb(211,8,47)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="85.2354%" y="453" width="0.0798%" height="15" fill="rgb(251,201,9)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="85.2354%" y="437" width="0.0798%" height="15" fill="rgb(206,185,47)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="85.3152%" y="437" width="0.0798%" height="15" fill="rgb(245,54,32)" fg:x="1069" fg:w="1"/><text x="85.5652%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.3152%" y="421" width="0.0798%" height="15" fill="rgb(208,1,8)" fg:x="1069" fg:w="1"/><text x="85.5652%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="85.3152%" y="453" width="0.1596%" height="15" fill="rgb(228,57,24)" fg:x="1069" fg:w="2"/><text x="85.5652%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.3951%" y="437" width="0.0798%" height="15" fill="rgb(251,24,8)" fg:x="1070" fg:w="1"/><text x="85.6451%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="85.4749%" y="437" width="0.1596%" height="15" fill="rgb(236,196,50)" fg:x="1071" fg:w="2"/><text x="85.7249%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="85.4749%" y="421" width="0.1596%" height="15" fill="rgb(246,222,29)" fg:x="1071" fg:w="2"/><text x="85.7249%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="85.4749%" y="405" width="0.1596%" height="15" fill="rgb(211,34,40)" fg:x="1071" fg:w="2"/><text x="85.7249%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="85.4749%" y="389" width="0.1596%" height="15" fill="rgb(210,66,51)" fg:x="1071" fg:w="2"/><text x="85.7249%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="85.4749%" y="373" width="0.1596%" height="15" fill="rgb(250,56,43)" fg:x="1071" fg:w="2"/><text x="85.7249%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="85.5547%" y="357" width="0.0798%" height="15" fill="rgb(240,111,50)" fg:x="1072" fg:w="1"/><text x="85.8047%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="85.5547%" y="341" width="0.0798%" height="15" fill="rgb(209,117,13)" fg:x="1072" fg:w="1"/><text x="85.8047%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="85.5547%" y="325" width="0.0798%" height="15" fill="rgb(232,164,45)" fg:x="1072" fg:w="1"/><text x="85.8047%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="85.6345%" y="421" width="0.0798%" height="15" fill="rgb(205,69,32)" fg:x="1073" fg:w="1"/><text x="85.8845%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="85.7143%" y="389" width="0.0798%" height="15" fill="rgb(240,147,45)" fg:x="1074" fg:w="1"/><text x="85.9643%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="85.7143%" y="373" width="0.0798%" height="15" fill="rgb(221,94,48)" fg:x="1074" fg:w="1"/><text x="85.9643%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="85.7143%" y="357" width="0.0798%" height="15" fill="rgb(249,209,17)" fg:x="1074" fg:w="1"/><text x="85.9643%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="85.7143%" y="341" width="0.0798%" height="15" fill="rgb(228,57,28)" fg:x="1074" fg:w="1"/><text x="85.9643%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.7143%" y="325" width="0.0798%" height="15" fill="rgb(250,133,26)" fg:x="1074" fg:w="1"/><text x="85.9643%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.7143%" y="309" width="0.0798%" height="15" fill="rgb(254,15,16)" fg:x="1074" fg:w="1"/><text x="85.9643%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.7143%" y="293" width="0.0798%" height="15" fill="rgb(209,147,42)" fg:x="1074" fg:w="1"/><text x="85.9643%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="85.7143%" y="405" width="0.1596%" height="15" fill="rgb(208,5,29)" fg:x="1074" fg:w="2"/><text x="85.9643%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.7941%" y="389" width="0.0798%" height="15" fill="rgb(250,73,31)" fg:x="1075" fg:w="1"/><text x="86.0441%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.7941%" y="373" width="0.0798%" height="15" fill="rgb(238,45,10)" fg:x="1075" fg:w="1"/><text x="86.0441%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="85.8739%" y="405" width="0.1596%" height="15" fill="rgb(214,104,5)" fg:x="1076" fg:w="2"/><text x="86.1239%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="85.8739%" y="389" width="0.1596%" height="15" fill="rgb(242,217,19)" fg:x="1076" fg:w="2"/><text x="86.1239%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="85.8739%" y="373" width="0.1596%" height="15" fill="rgb(246,113,27)" fg:x="1076" fg:w="2"/><text x="86.1239%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.9537%" y="357" width="0.0798%" height="15" fill="rgb(221,34,27)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="86.0335%" y="389" width="0.1596%" height="15" fill="rgb(246,109,6)" fg:x="1078" fg:w="2"/><text x="86.2835%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="86.0335%" y="373" width="0.1596%" height="15" fill="rgb(217,12,25)" fg:x="1078" fg:w="2"/><text x="86.2835%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="86.2729%" y="373" width="0.2394%" height="15" fill="rgb(250,195,5)" fg:x="1081" fg:w="3"/><text x="86.5229%" y="383.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="86.2729%" y="357" width="0.2394%" height="15" fill="rgb(244,140,45)" fg:x="1081" fg:w="3"/><text x="86.5229%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="86.2729%" y="341" width="0.2394%" height="15" fill="rgb(230,64,14)" fg:x="1081" fg:w="3"/><text x="86.5229%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="86.2729%" y="325" width="0.2394%" height="15" fill="rgb(206,27,27)" fg:x="1081" fg:w="3"/><text x="86.5229%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="86.3528%" y="309" width="0.1596%" height="15" fill="rgb(230,14,50)" fg:x="1082" fg:w="2"/><text x="86.6028%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="86.3528%" y="293" width="0.1596%" height="15" fill="rgb(237,172,14)" fg:x="1082" fg:w="2"/><text x="86.6028%" y="303.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="86.3528%" y="277" width="0.1596%" height="15" fill="rgb(209,25,21)" fg:x="1082" fg:w="2"/><text x="86.6028%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="86.1931%" y="389" width="0.3990%" height="15" fill="rgb(248,148,22)" fg:x="1080" fg:w="5"/><text x="86.4431%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="86.5124%" y="373" width="0.0798%" height="15" fill="rgb(234,100,22)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.5124%" y="357" width="0.0798%" height="15" fill="rgb(210,20,30)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.6720%" y="357" width="0.0798%" height="15" fill="rgb(232,58,0)" fg:x="1086" fg:w="1"/><text x="86.9220%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="86.6720%" y="341" width="0.0798%" height="15" fill="rgb(221,68,13)" fg:x="1086" fg:w="1"/><text x="86.9220%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="86.6720%" y="325" width="0.0798%" height="15" fill="rgb(231,194,11)" fg:x="1086" fg:w="1"/><text x="86.9220%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="86.6720%" y="309" width="0.0798%" height="15" fill="rgb(235,51,41)" fg:x="1086" fg:w="1"/><text x="86.9220%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="86.0335%" y="405" width="0.7981%" height="15" fill="rgb(240,50,32)" fg:x="1078" fg:w="10"/><text x="86.2835%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="86.5922%" y="389" width="0.2394%" height="15" fill="rgb(240,185,36)" fg:x="1085" fg:w="3"/><text x="86.8422%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="86.6720%" y="373" width="0.1596%" height="15" fill="rgb(211,168,15)" fg:x="1086" fg:w="2"/><text x="86.9220%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="86.7518%" y="357" width="0.0798%" height="15" fill="rgb(221,70,0)" fg:x="1087" fg:w="1"/><text x="87.0018%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.28%)</title><rect x="85.6345%" y="437" width="1.2769%" height="15" fill="rgb(205,21,33)" fg:x="1073" fg:w="16"/><text x="85.8845%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="85.7143%" y="421" width="1.1971%" height="15" fill="rgb(225,106,10)" fg:x="1074" fg:w="15"/><text x="85.9643%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.8316%" y="405" width="0.0798%" height="15" fill="rgb(236,200,50)" fg:x="1088" fg:w="1"/><text x="87.0816%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.8316%" y="389" width="0.0798%" height="15" fill="rgb(249,93,23)" fg:x="1088" fg:w="1"/><text x="87.0816%" y="399.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (19 samples, 1.52%)</title><rect x="85.4749%" y="453" width="1.5164%" height="15" fill="rgb(244,115,35)" fg:x="1071" fg:w="19"/><text x="85.7249%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.9114%" y="437" width="0.0798%" height="15" fill="rgb(231,129,47)" fg:x="1089" fg:w="1"/><text x="87.1614%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.9912%" y="421" width="0.0798%" height="15" fill="rgb(225,160,50)" fg:x="1090" fg:w="1"/><text x="87.2412%" y="431.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="86.9912%" y="437" width="0.1596%" height="15" fill="rgb(218,135,23)" fg:x="1090" fg:w="2"/><text x="87.2412%" y="447.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (1 samples, 0.08%)</title><rect x="87.0710%" y="421" width="0.0798%" height="15" fill="rgb(227,119,14)" fg:x="1091" fg:w="1"/><text x="87.3210%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="87.0710%" y="405" width="0.0798%" height="15" fill="rgb(242,138,13)" fg:x="1091" fg:w="1"/><text x="87.3210%" y="415.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.0710%" y="389" width="0.0798%" height="15" fill="rgb(215,11,16)" fg:x="1091" fg:w="1"/><text x="87.3210%" y="399.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.08%)</title><rect x="87.0710%" y="373" width="0.0798%" height="15" fill="rgb(234,170,50)" fg:x="1091" fg:w="1"/><text x="87.3210%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="87.0710%" y="357" width="0.0798%" height="15" fill="rgb(233,34,20)" fg:x="1091" fg:w="1"/><text x="87.3210%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.0710%" y="341" width="0.0798%" height="15" fill="rgb(237,100,45)" fg:x="1091" fg:w="1"/><text x="87.3210%" y="351.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="87.1508%" y="405" width="0.2394%" height="15" fill="rgb(231,184,36)" fg:x="1092" fg:w="3"/><text x="87.4008%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="87.1508%" y="389" width="0.2394%" height="15" fill="rgb(252,93,2)" fg:x="1092" fg:w="3"/><text x="87.4008%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.3105%" y="373" width="0.0798%" height="15" fill="rgb(248,176,47)" fg:x="1094" fg:w="1"/><text x="87.5605%" y="383.50"></text></g><g><title>engine::session::Session::flush (34 samples, 2.71%)</title><rect x="84.9162%" y="565" width="2.7135%" height="15" fill="rgb(249,125,23)" fg:x="1064" fg:w="34"/><text x="85.1662%" y="575.50">en..</text></g><g><title>engine::session::Session::save_changes (33 samples, 2.63%)</title><rect x="84.9960%" y="549" width="2.6337%" height="15" fill="rgb(239,67,42)" fg:x="1065" fg:w="33"/><text x="85.2460%" y="559.50">en..</text></g><g><title>engine::session::state::State::close (33 samples, 2.63%)</title><rect x="84.9960%" y="533" width="2.6337%" height="15" fill="rgb(244,162,4)" fg:x="1065" fg:w="33"/><text x="85.2460%" y="543.50">en..</text></g><g><title>engine::session::state::State::flush_entities (33 samples, 2.63%)</title><rect x="84.9960%" y="517" width="2.6337%" height="15" fill="rgb(214,150,38)" fg:x="1065" fg:w="33"/><text x="85.2460%" y="527.50">en..</text></g><g><title>core::iter::adapters::try_process (31 samples, 2.47%)</title><rect x="85.1556%" y="501" width="2.4741%" height="15" fill="rgb(228,211,28)" fg:x="1067" fg:w="31"/><text x="85.4056%" y="511.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (31 samples, 2.47%)</title><rect x="85.1556%" y="485" width="2.4741%" height="15" fill="rgb(212,98,48)" fg:x="1067" fg:w="31"/><text x="85.4056%" y="495.50">&lt;a..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (29 samples, 2.31%)</title><rect x="85.3152%" y="469" width="2.3144%" height="15" fill="rgb(213,45,13)" fg:x="1069" fg:w="29"/><text x="85.5652%" y="479.50">e..</text></g><g><title>kernel::model::any_entity_changes (8 samples, 0.64%)</title><rect x="86.9912%" y="453" width="0.6385%" height="15" fill="rgb(218,35,29)" fg:x="1090" fg:w="8"/><text x="87.2412%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (6 samples, 0.48%)</title><rect x="87.1508%" y="437" width="0.4789%" height="15" fill="rgb(244,13,3)" fg:x="1092" fg:w="6"/><text x="87.4008%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="87.1508%" y="421" width="0.4789%" height="15" fill="rgb(235,170,19)" fg:x="1092" fg:w="6"/><text x="87.4008%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="87.3903%" y="405" width="0.2394%" height="15" fill="rgb(233,193,43)" fg:x="1095" fg:w="3"/><text x="87.6403%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="87.3903%" y="389" width="0.2394%" height="15" fill="rgb(228,223,20)" fg:x="1095" fg:w="3"/><text x="87.6403%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="87.4701%" y="373" width="0.1596%" height="15" fill="rgb(208,85,54)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="87.4701%" y="357" width="0.1596%" height="15" fill="rgb(254,14,45)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="87.4701%" y="341" width="0.1596%" height="15" fill="rgb(247,99,29)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="87.4701%" y="325" width="0.1596%" height="15" fill="rgb(225,180,54)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="87.4701%" y="309" width="0.1596%" height="15" fill="rgb(239,88,43)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="319.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="87.6297%" y="565" width="0.0798%" height="15" fill="rgb(209,47,11)" fg:x="1098" fg:w="1"/><text x="87.8797%" y="575.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="87.7095%" y="565" width="0.0798%" height="15" fill="rgb(219,179,23)" fg:x="1099" fg:w="1"/><text x="87.9595%" y="575.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="87.7095%" y="549" width="0.0798%" height="15" fill="rgb(213,183,19)" fg:x="1099" fg:w="1"/><text x="87.9595%" y="559.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="87.7095%" y="533" width="0.0798%" height="15" fill="rgb(210,11,9)" fg:x="1099" fg:w="1"/><text x="87.9595%" y="543.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="87.7893%" y="565" width="0.0798%" height="15" fill="rgb(239,194,16)" fg:x="1100" fg:w="1"/><text x="88.0393%" y="575.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="87.7893%" y="549" width="0.0798%" height="15" fill="rgb(246,23,50)" fg:x="1100" fg:w="1"/><text x="88.0393%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="87.7893%" y="533" width="0.0798%" height="15" fill="rgb(245,10,41)" fg:x="1100" fg:w="1"/><text x="88.0393%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.7893%" y="517" width="0.0798%" height="15" fill="rgb(228,43,24)" fg:x="1100" fg:w="1"/><text x="88.0393%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.8691%" y="549" width="0.0798%" height="15" fill="rgb(220,151,0)" fg:x="1101" fg:w="1"/><text x="88.1191%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.9489%" y="549" width="0.0798%" height="15" fill="rgb(232,219,10)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.9489%" y="533" width="0.0798%" height="15" fill="rgb(227,217,48)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.9489%" y="517" width="0.0798%" height="15" fill="rgb(210,66,35)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.9489%" y="501" width="0.0798%" height="15" fill="rgb(254,6,7)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.9489%" y="485" width="0.0798%" height="15" fill="rgb(235,222,42)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.9489%" y="469" width="0.0798%" height="15" fill="rgb(245,126,5)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.9489%" y="453" width="0.0798%" height="15" fill="rgb(215,73,17)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.9489%" y="437" width="0.0798%" height="15" fill="rgb(219,198,52)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.9489%" y="421" width="0.0798%" height="15" fill="rgb(217,159,18)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.9489%" y="405" width="0.0798%" height="15" fill="rgb(212,177,18)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.9489%" y="389" width="0.0798%" height="15" fill="rgb(241,10,11)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.9489%" y="373" width="0.0798%" height="15" fill="rgb(232,114,35)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="88.0287%" y="533" width="0.0798%" height="15" fill="rgb(238,222,8)" fg:x="1103" fg:w="1"/><text x="88.2787%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="88.0287%" y="517" width="0.0798%" height="15" fill="rgb(251,153,44)" fg:x="1103" fg:w="1"/><text x="88.2787%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.0287%" y="501" width="0.0798%" height="15" fill="rgb(210,140,51)" fg:x="1103" fg:w="1"/><text x="88.2787%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="88.1085%" y="485" width="0.0798%" height="15" fill="rgb(222,63,0)" fg:x="1104" fg:w="1"/><text x="88.3585%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="88.1085%" y="469" width="0.0798%" height="15" fill="rgb(240,18,40)" fg:x="1104" fg:w="1"/><text x="88.3585%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="88.1085%" y="453" width="0.0798%" height="15" fill="rgb(237,88,16)" fg:x="1104" fg:w="1"/><text x="88.3585%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.1085%" y="437" width="0.0798%" height="15" fill="rgb(251,117,13)" fg:x="1104" fg:w="1"/><text x="88.3585%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="88.1085%" y="517" width="0.1596%" height="15" fill="rgb(251,228,8)" fg:x="1104" fg:w="2"/><text x="88.3585%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (2 samples, 0.16%)</title><rect x="88.1085%" y="501" width="0.1596%" height="15" fill="rgb(205,107,49)" fg:x="1104" fg:w="2"/><text x="88.3585%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="88.1883%" y="485" width="0.0798%" height="15" fill="rgb(238,72,41)" fg:x="1105" fg:w="1"/><text x="88.4383%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.1883%" y="469" width="0.0798%" height="15" fill="rgb(248,183,52)" fg:x="1105" fg:w="1"/><text x="88.4383%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="88.1883%" y="453" width="0.0798%" height="15" fill="rgb(215,58,20)" fg:x="1105" fg:w="1"/><text x="88.4383%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="88.1883%" y="437" width="0.0798%" height="15" fill="rgb(209,49,13)" fg:x="1105" fg:w="1"/><text x="88.4383%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="88.2682%" y="485" width="0.0798%" height="15" fill="rgb(208,113,17)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="88.2682%" y="469" width="0.0798%" height="15" fill="rgb(208,14,22)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="88.2682%" y="453" width="0.0798%" height="15" fill="rgb(222,95,2)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="88.2682%" y="437" width="0.0798%" height="15" fill="rgb(253,180,37)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="88.0287%" y="549" width="0.3990%" height="15" fill="rgb(250,81,33)" fg:x="1103" fg:w="5"/><text x="88.2787%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="88.1085%" y="533" width="0.3192%" height="15" fill="rgb(251,151,41)" fg:x="1104" fg:w="4"/><text x="88.3585%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="88.2682%" y="517" width="0.1596%" height="15" fill="rgb(210,135,17)" fg:x="1106" fg:w="2"/><text x="88.5182%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="88.2682%" y="501" width="0.1596%" height="15" fill="rgb(239,21,29)" fg:x="1106" fg:w="2"/><text x="88.5182%" y="511.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="88.3480%" y="485" width="0.0798%" height="15" fill="rgb(231,215,16)" fg:x="1107" fg:w="1"/><text x="88.5980%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.3480%" y="469" width="0.0798%" height="15" fill="rgb(239,151,54)" fg:x="1107" fg:w="1"/><text x="88.5980%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.3480%" y="453" width="0.0798%" height="15" fill="rgb(222,122,38)" fg:x="1107" fg:w="1"/><text x="88.5980%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.3480%" y="437" width="0.0798%" height="15" fill="rgb(243,128,1)" fg:x="1107" fg:w="1"/><text x="88.5980%" y="447.50"></text></g><g><title>plugins_core::build::Build::save (8 samples, 0.64%)</title><rect x="87.8691%" y="565" width="0.6385%" height="15" fill="rgb(225,74,21)" fg:x="1101" fg:w="8"/><text x="88.1191%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.4278%" y="549" width="0.0798%" height="15" fill="rgb(216,210,10)" fg:x="1108" fg:w="1"/><text x="88.6778%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.4278%" y="533" width="0.0798%" height="15" fill="rgb(228,76,19)" fg:x="1108" fg:w="1"/><text x="88.6778%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.4278%" y="517" width="0.0798%" height="15" fill="rgb(236,80,34)" fg:x="1108" fg:w="1"/><text x="88.6778%" y="527.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="88.5076%" y="533" width="0.0798%" height="15" fill="rgb(225,173,23)" fg:x="1109" fg:w="1"/><text x="88.7576%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::new (1 samples, 0.08%)</title><rect x="88.5076%" y="517" width="0.0798%" height="15" fill="rgb(253,38,1)" fg:x="1109" fg:w="1"/><text x="88.7576%" y="527.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (3 samples, 0.24%)</title><rect x="88.5076%" y="565" width="0.2394%" height="15" fill="rgb(206,155,35)" fg:x="1109" fg:w="3"/><text x="88.7576%" y="575.50"></text></g><g><title>plugins_core::tools::set_occupying (3 samples, 0.24%)</title><rect x="88.5076%" y="549" width="0.2394%" height="15" fill="rgb(254,27,53)" fg:x="1109" fg:w="3"/><text x="88.7576%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="88.5874%" y="533" width="0.1596%" height="15" fill="rgb(225,52,41)" fg:x="1110" fg:w="2"/><text x="88.8374%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="88.5874%" y="517" width="0.1596%" height="15" fill="rgb(244,53,18)" fg:x="1110" fg:w="2"/><text x="88.8374%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="88.5874%" y="501" width="0.1596%" height="15" fill="rgb(254,206,48)" fg:x="1110" fg:w="2"/><text x="88.8374%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="88.5874%" y="485" width="0.1596%" height="15" fill="rgb(236,182,23)" fg:x="1110" fg:w="2"/><text x="88.8374%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="88.5874%" y="469" width="0.1596%" height="15" fill="rgb(236,191,37)" fg:x="1110" fg:w="2"/><text x="88.8374%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="88.5874%" y="453" width="0.1596%" height="15" fill="rgb(245,53,8)" fg:x="1110" fg:w="2"/><text x="88.8374%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="88.5874%" y="437" width="0.1596%" height="15" fill="rgb(245,147,9)" fg:x="1110" fg:w="2"/><text x="88.8374%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="88.5874%" y="421" width="0.1596%" height="15" fill="rgb(218,24,48)" fg:x="1110" fg:w="2"/><text x="88.8374%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="88.5874%" y="405" width="0.1596%" height="15" fill="rgb(254,23,9)" fg:x="1110" fg:w="2"/><text x="88.8374%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="88.5874%" y="389" width="0.1596%" height="15" fill="rgb(244,105,9)" fg:x="1110" fg:w="2"/><text x="88.8374%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="88.5874%" y="373" width="0.1596%" height="15" fill="rgb(212,142,22)" fg:x="1110" fg:w="2"/><text x="88.8374%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="88.5874%" y="357" width="0.1596%" height="15" fill="rgb(221,114,49)" fg:x="1110" fg:w="2"/><text x="88.8374%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="88.5874%" y="341" width="0.1596%" height="15" fill="rgb(223,210,25)" fg:x="1110" fg:w="2"/><text x="88.8374%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="88.5874%" y="325" width="0.1596%" height="15" fill="rgb(235,162,44)" fg:x="1110" fg:w="2"/><text x="88.8374%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="88.5874%" y="309" width="0.1596%" height="15" fill="rgb(237,65,45)" fg:x="1110" fg:w="2"/><text x="88.8374%" y="319.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="88.5874%" y="293" width="0.1596%" height="15" fill="rgb(208,79,9)" fg:x="1110" fg:w="2"/><text x="88.8374%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.6672%" y="277" width="0.0798%" height="15" fill="rgb(215,228,8)" fg:x="1111" fg:w="1"/><text x="88.9172%" y="287.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="88.7470%" y="549" width="0.0798%" height="15" fill="rgb(205,185,17)" fg:x="1112" fg:w="1"/><text x="88.9970%" y="559.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (3 samples, 0.24%)</title><rect x="88.7470%" y="565" width="0.2394%" height="15" fill="rgb(213,62,36)" fg:x="1112" fg:w="3"/><text x="88.9970%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::moving::model::Occupyable&gt; (2 samples, 0.16%)</title><rect x="88.8268%" y="549" width="0.1596%" height="15" fill="rgb(209,34,9)" fg:x="1113" fg:w="2"/><text x="89.0768%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="88.9066%" y="533" width="0.0798%" height="15" fill="rgb(246,151,27)" fg:x="1114" fg:w="1"/><text x="89.1566%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.9066%" y="517" width="0.0798%" height="15" fill="rgb(218,206,3)" fg:x="1114" fg:w="1"/><text x="89.1566%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="88.9864%" y="517" width="0.0798%" height="15" fill="rgb(242,202,1)" fg:x="1115" fg:w="1"/><text x="89.2364%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="88.9864%" y="501" width="0.0798%" height="15" fill="rgb(227,185,16)" fg:x="1115" fg:w="1"/><text x="89.2364%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.9864%" y="485" width="0.0798%" height="15" fill="rgb(241,1,14)" fg:x="1115" fg:w="1"/><text x="89.2364%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.9864%" y="469" width="0.0798%" height="15" fill="rgb(212,113,25)" fg:x="1115" fg:w="1"/><text x="89.2364%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.9864%" y="453" width="0.0798%" height="15" fill="rgb(247,37,43)" fg:x="1115" fg:w="1"/><text x="89.2364%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.9864%" y="437" width="0.0798%" height="15" fill="rgb(226,54,8)" fg:x="1115" fg:w="1"/><text x="89.2364%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="88.9864%" y="421" width="0.0798%" height="15" fill="rgb(251,205,25)" fg:x="1115" fg:w="1"/><text x="89.2364%" y="431.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="88.9864%" y="549" width="0.1596%" height="15" fill="rgb(246,87,35)" fg:x="1115" fg:w="2"/><text x="89.2364%" y="559.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="88.9864%" y="533" width="0.1596%" height="15" fill="rgb(251,145,46)" fg:x="1115" fg:w="2"/><text x="89.2364%" y="543.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="89.0662%" y="517" width="0.0798%" height="15" fill="rgb(210,210,33)" fg:x="1116" fg:w="1"/><text x="89.3162%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="89.0662%" y="501" width="0.0798%" height="15" fill="rgb(221,151,11)" fg:x="1116" fg:w="1"/><text x="89.3162%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.0662%" y="485" width="0.0798%" height="15" fill="rgb(208,160,28)" fg:x="1116" fg:w="1"/><text x="89.3162%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.0662%" y="469" width="0.0798%" height="15" fill="rgb(243,69,29)" fg:x="1116" fg:w="1"/><text x="89.3162%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.0662%" y="453" width="0.0798%" height="15" fill="rgb(224,144,4)" fg:x="1116" fg:w="1"/><text x="89.3162%" y="463.50"></text></g><g><title>plugins_core::tools::set_container (3 samples, 0.24%)</title><rect x="88.9864%" y="565" width="0.2394%" height="15" fill="rgb(211,140,38)" fg:x="1115" fg:w="3"/><text x="89.2364%" y="575.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="89.1460%" y="549" width="0.0798%" height="15" fill="rgb(252,189,15)" fg:x="1117" fg:w="1"/><text x="89.3960%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="89.1460%" y="533" width="0.0798%" height="15" fill="rgb(251,175,23)" fg:x="1117" fg:w="1"/><text x="89.3960%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="89.1460%" y="517" width="0.0798%" height="15" fill="rgb(212,184,11)" fg:x="1117" fg:w="1"/><text x="89.3960%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="89.1460%" y="501" width="0.0798%" height="15" fill="rgb(217,205,6)" fg:x="1117" fg:w="1"/><text x="89.3960%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="89.1460%" y="485" width="0.0798%" height="15" fill="rgb(235,45,45)" fg:x="1117" fg:w="1"/><text x="89.3960%" y="495.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (57 samples, 4.55%)</title><rect x="84.7566%" y="581" width="4.5491%" height="15" fill="rgb(211,157,53)" fg:x="1062" fg:w="57"/><text x="85.0066%" y="591.50">plugi..</text></g><g><title>plugins_core::tools::set_wearing (1 samples, 0.08%)</title><rect x="89.2259%" y="565" width="0.0798%" height="15" fill="rgb(212,13,8)" fg:x="1118" fg:w="1"/><text x="89.4759%" y="575.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="89.2259%" y="549" width="0.0798%" height="15" fill="rgb(218,80,36)" fg:x="1118" fg:w="1"/><text x="89.4759%" y="559.50"></text></g><g><title>plugins_core::fashion::model::_::&lt;impl serde::ser::Serialize for plugins_core::fashion::model::Wearing&gt;::serialize (1 samples, 0.08%)</title><rect x="89.2259%" y="533" width="0.0798%" height="15" fill="rgb(211,123,43)" fg:x="1118" fg:w="1"/><text x="89.4759%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="89.2259%" y="517" width="0.0798%" height="15" fill="rgb(206,165,2)" fg:x="1118" fg:w="1"/><text x="89.4759%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="89.3057%" y="549" width="0.0798%" height="15" fill="rgb(248,63,35)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="89.3057%" y="533" width="0.0798%" height="15" fill="rgb(219,133,41)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.3057%" y="517" width="0.0798%" height="15" fill="rgb(206,175,46)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="89.3057%" y="501" width="0.0798%" height="15" fill="rgb(224,41,35)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.3057%" y="485" width="0.0798%" height="15" fill="rgb(226,113,24)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="89.3855%" y="549" width="0.0798%" height="15" fill="rgb(219,51,41)" fg:x="1120" fg:w="1"/><text x="89.6355%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.3855%" y="533" width="0.0798%" height="15" fill="rgb(220,145,47)" fg:x="1120" fg:w="1"/><text x="89.6355%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.3855%" y="517" width="0.0798%" height="15" fill="rgb(239,121,47)" fg:x="1120" fg:w="1"/><text x="89.6355%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.3855%" y="501" width="0.0798%" height="15" fill="rgb(207,60,40)" fg:x="1120" fg:w="1"/><text x="89.6355%" y="511.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="89.4653%" y="517" width="0.0798%" height="15" fill="rgb(224,229,11)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="89.4653%" y="501" width="0.0798%" height="15" fill="rgb(252,28,32)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="89.4653%" y="485" width="0.0798%" height="15" fill="rgb(207,52,49)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.4653%" y="469" width="0.0798%" height="15" fill="rgb(243,51,50)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="479.50"></text></g><g><title>plugins_core::build::Build::save (2 samples, 0.16%)</title><rect x="89.4653%" y="549" width="0.1596%" height="15" fill="rgb(212,92,21)" fg:x="1121" fg:w="2"/><text x="89.7153%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="89.4653%" y="533" width="0.1596%" height="15" fill="rgb(230,183,50)" fg:x="1121" fg:w="2"/><text x="89.7153%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="89.5451%" y="517" width="0.0798%" height="15" fill="rgb(225,48,9)" fg:x="1122" fg:w="1"/><text x="89.7951%" y="527.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="89.5451%" y="501" width="0.0798%" height="15" fill="rgb(254,44,4)" fg:x="1122" fg:w="1"/><text x="89.7951%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="89.5451%" y="485" width="0.0798%" height="15" fill="rgb(252,128,37)" fg:x="1122" fg:w="1"/><text x="89.7951%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="89.5451%" y="469" width="0.0798%" height="15" fill="rgb(227,178,8)" fg:x="1122" fg:w="1"/><text x="89.7951%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.5451%" y="453" width="0.0798%" height="15" fill="rgb(205,206,32)" fg:x="1122" fg:w="1"/><text x="89.7951%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.5451%" y="437" width="0.0798%" height="15" fill="rgb(220,218,22)" fg:x="1122" fg:w="1"/><text x="89.7951%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (5 samples, 0.40%)</title><rect x="89.3057%" y="581" width="0.3990%" height="15" fill="rgb(236,41,28)" fg:x="1119" fg:w="5"/><text x="89.5557%" y="591.50"></text></g><g><title>plugins_core::build::QuickThing::make (5 samples, 0.40%)</title><rect x="89.3057%" y="565" width="0.3990%" height="15" fill="rgb(219,37,7)" fg:x="1119" fg:w="5"/><text x="89.5557%" y="575.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupyable (1 samples, 0.08%)</title><rect x="89.6249%" y="549" width="0.0798%" height="15" fill="rgb(206,160,15)" fg:x="1123" fg:w="1"/><text x="89.8749%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="89.6249%" y="533" width="0.0798%" height="15" fill="rgb(208,82,21)" fg:x="1123" fg:w="1"/><text x="89.8749%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="89.6249%" y="517" width="0.0798%" height="15" fill="rgb(226,130,25)" fg:x="1123" fg:w="1"/><text x="89.8749%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="89.6249%" y="501" width="0.0798%" height="15" fill="rgb(212,72,24)" fg:x="1123" fg:w="1"/><text x="89.8749%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="89.6249%" y="485" width="0.0798%" height="15" fill="rgb(206,28,16)" fg:x="1123" fg:w="1"/><text x="89.8749%" y="495.50"></text></g><g><title>plugins_core::build::Build::new_world (1 samples, 0.08%)</title><rect x="89.8643%" y="565" width="0.0798%" height="15" fill="rgb(249,41,5)" fg:x="1126" fg:w="1"/><text x="90.1143%" y="575.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="89.8643%" y="549" width="0.0798%" height="15" fill="rgb(233,96,48)" fg:x="1126" fg:w="1"/><text x="90.1143%" y="559.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="89.8643%" y="533" width="0.0798%" height="15" fill="rgb(240,198,11)" fg:x="1126" fg:w="1"/><text x="90.1143%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="89.8643%" y="517" width="0.0798%" height="15" fill="rgb(209,175,35)" fg:x="1126" fg:w="1"/><text x="90.1143%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.8643%" y="501" width="0.0798%" height="15" fill="rgb(214,40,51)" fg:x="1126" fg:w="1"/><text x="90.1143%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="89.9441%" y="453" width="0.0798%" height="15" fill="rgb(252,56,4)" fg:x="1127" fg:w="1"/><text x="90.1941%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="89.9441%" y="549" width="0.1596%" height="15" fill="rgb(219,131,5)" fg:x="1127" fg:w="2"/><text x="90.1941%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="89.9441%" y="533" width="0.1596%" height="15" fill="rgb(223,67,53)" fg:x="1127" fg:w="2"/><text x="90.1941%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="89.9441%" y="517" width="0.1596%" height="15" fill="rgb(227,154,8)" fg:x="1127" fg:w="2"/><text x="90.1941%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.9441%" y="501" width="0.1596%" height="15" fill="rgb(216,174,51)" fg:x="1127" fg:w="2"/><text x="90.1941%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="89.9441%" y="485" width="0.1596%" height="15" fill="rgb(239,60,34)" fg:x="1127" fg:w="2"/><text x="90.1941%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.9441%" y="469" width="0.1596%" height="15" fill="rgb(236,165,48)" fg:x="1127" fg:w="2"/><text x="90.1941%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.0239%" y="453" width="0.0798%" height="15" fill="rgb(210,37,26)" fg:x="1128" fg:w="1"/><text x="90.2739%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.0239%" y="437" width="0.0798%" height="15" fill="rgb(211,3,17)" fg:x="1128" fg:w="1"/><text x="90.2739%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="90.1836%" y="517" width="0.0798%" height="15" fill="rgb(234,88,49)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="90.1836%" y="501" width="0.0798%" height="15" fill="rgb(233,40,17)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="90.1836%" y="485" width="0.0798%" height="15" fill="rgb(235,127,31)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.1836%" y="469" width="0.0798%" height="15" fill="rgb(248,167,17)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="90.1836%" y="453" width="0.0798%" height="15" fill="rgb(218,179,8)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="90.1836%" y="437" width="0.0798%" height="15" fill="rgb(216,92,14)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.1836%" y="421" width="0.0798%" height="15" fill="rgb(221,198,46)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.1836%" y="405" width="0.0798%" height="15" fill="rgb(244,7,25)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.1836%" y="389" width="0.0798%" height="15" fill="rgb(233,75,6)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.1836%" y="373" width="0.0798%" height="15" fill="rgb(240,189,41)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="383.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (119 samples, 9.50%)</title><rect x="80.8460%" y="597" width="9.4972%" height="15" fill="rgb(237,157,21)" fg:x="1013" fg:w="119"/><text x="81.0960%" y="607.50">&lt;tests::Holdin..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (8 samples, 0.64%)</title><rect x="89.7047%" y="581" width="0.6385%" height="15" fill="rgb(210,136,49)" fg:x="1124" fg:w="8"/><text x="89.9547%" y="591.50"></text></g><g><title>plugins_core::build::Build::save (5 samples, 0.40%)</title><rect x="89.9441%" y="565" width="0.3990%" height="15" fill="rgb(210,68,29)" fg:x="1127" fg:w="5"/><text x="90.1941%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="90.1038%" y="549" width="0.2394%" height="15" fill="rgb(247,207,20)" fg:x="1129" fg:w="3"/><text x="90.3538%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="90.1836%" y="533" width="0.1596%" height="15" fill="rgb(224,73,48)" fg:x="1130" fg:w="2"/><text x="90.4336%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="90.2634%" y="517" width="0.0798%" height="15" fill="rgb(215,136,47)" fg:x="1131" fg:w="1"/><text x="90.5134%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.2634%" y="501" width="0.0798%" height="15" fill="rgb(232,222,16)" fg:x="1131" fg:w="1"/><text x="90.5134%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="90.2634%" y="485" width="0.0798%" height="15" fill="rgb(249,202,47)" fg:x="1131" fg:w="1"/><text x="90.5134%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="90.2634%" y="469" width="0.0798%" height="15" fill="rgb(236,56,8)" fg:x="1131" fg:w="1"/><text x="90.5134%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="90.2634%" y="453" width="0.0798%" height="15" fill="rgb(222,6,3)" fg:x="1131" fg:w="1"/><text x="90.5134%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="90.2634%" y="437" width="0.0798%" height="15" fill="rgb(254,222,28)" fg:x="1131" fg:w="1"/><text x="90.5134%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="90.2634%" y="421" width="0.0798%" height="15" fill="rgb(219,57,23)" fg:x="1131" fg:w="1"/><text x="90.5134%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.2634%" y="405" width="0.0798%" height="15" fill="rgb(251,106,48)" fg:x="1131" fg:w="1"/><text x="90.5134%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.2634%" y="389" width="0.0798%" height="15" fill="rgb(242,2,23)" fg:x="1131" fg:w="1"/><text x="90.5134%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="90.3432%" y="597" width="0.0798%" height="15" fill="rgb(212,109,31)" fg:x="1132" fg:w="1"/><text x="90.5932%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.3432%" y="581" width="0.0798%" height="15" fill="rgb(241,9,22)" fg:x="1132" fg:w="1"/><text x="90.5932%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="90.5028%" y="453" width="0.0798%" height="15" fill="rgb(209,64,27)" fg:x="1134" fg:w="1"/><text x="90.7528%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.5028%" y="437" width="0.0798%" height="15" fill="rgb(248,13,44)" fg:x="1134" fg:w="1"/><text x="90.7528%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.5028%" y="421" width="0.0798%" height="15" fill="rgb(213,86,6)" fg:x="1134" fg:w="1"/><text x="90.7528%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="90.4230%" y="469" width="0.2394%" height="15" fill="rgb(247,11,18)" fg:x="1133" fg:w="3"/><text x="90.6730%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="90.5826%" y="453" width="0.0798%" height="15" fill="rgb(252,31,11)" fg:x="1135" fg:w="1"/><text x="90.8326%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="90.5826%" y="437" width="0.0798%" height="15" fill="rgb(215,63,51)" fg:x="1135" fg:w="1"/><text x="90.8326%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.5826%" y="421" width="0.0798%" height="15" fill="rgb(222,180,4)" fg:x="1135" fg:w="1"/><text x="90.8326%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="90.4230%" y="485" width="0.3192%" height="15" fill="rgb(233,4,23)" fg:x="1133" fg:w="4"/><text x="90.6730%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.6624%" y="469" width="0.0798%" height="15" fill="rgb(230,116,22)" fg:x="1136" fg:w="1"/><text x="90.9124%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="90.4230%" y="501" width="0.3990%" height="15" fill="rgb(222,20,14)" fg:x="1133" fg:w="5"/><text x="90.6730%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.7422%" y="485" width="0.0798%" height="15" fill="rgb(210,176,43)" fg:x="1137" fg:w="1"/><text x="90.9922%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.7422%" y="469" width="0.0798%" height="15" fill="rgb(219,67,32)" fg:x="1137" fg:w="1"/><text x="90.9922%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="90.8220%" y="501" width="0.0798%" height="15" fill="rgb(228,91,39)" fg:x="1138" fg:w="1"/><text x="91.0720%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="90.8220%" y="485" width="0.0798%" height="15" fill="rgb(254,63,14)" fg:x="1138" fg:w="1"/><text x="91.0720%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="90.8220%" y="469" width="0.0798%" height="15" fill="rgb(216,171,39)" fg:x="1138" fg:w="1"/><text x="91.0720%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="90.8220%" y="453" width="0.0798%" height="15" fill="rgb(248,68,25)" fg:x="1138" fg:w="1"/><text x="91.0720%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.8220%" y="437" width="0.0798%" height="15" fill="rgb(239,63,16)" fg:x="1138" fg:w="1"/><text x="91.0720%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="90.8220%" y="421" width="0.0798%" height="15" fill="rgb(225,111,43)" fg:x="1138" fg:w="1"/><text x="91.0720%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="90.8220%" y="405" width="0.0798%" height="15" fill="rgb(246,165,17)" fg:x="1138" fg:w="1"/><text x="91.0720%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.8220%" y="389" width="0.0798%" height="15" fill="rgb(208,124,1)" fg:x="1138" fg:w="1"/><text x="91.0720%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="91.0615%" y="453" width="0.0798%" height="15" fill="rgb(234,147,33)" fg:x="1141" fg:w="1"/><text x="91.3115%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="91.0615%" y="437" width="0.0798%" height="15" fill="rgb(240,86,30)" fg:x="1141" fg:w="1"/><text x="91.3115%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="91.0615%" y="421" width="0.0798%" height="15" fill="rgb(237,34,51)" fg:x="1141" fg:w="1"/><text x="91.3115%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="91.0615%" y="405" width="0.0798%" height="15" fill="rgb(232,131,41)" fg:x="1141" fg:w="1"/><text x="91.3115%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="91.1413%" y="453" width="0.1596%" height="15" fill="rgb(227,129,53)" fg:x="1142" fg:w="2"/><text x="91.3913%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="91.1413%" y="437" width="0.1596%" height="15" fill="rgb(230,90,35)" fg:x="1142" fg:w="2"/><text x="91.3913%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="91.1413%" y="421" width="0.1596%" height="15" fill="rgb(248,88,27)" fg:x="1142" fg:w="2"/><text x="91.3913%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="91.2211%" y="405" width="0.0798%" height="15" fill="rgb(223,18,17)" fg:x="1143" fg:w="1"/><text x="91.4711%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="91.3807%" y="437" width="0.0798%" height="15" fill="rgb(241,11,10)" fg:x="1145" fg:w="1"/><text x="91.6307%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="91.4605%" y="437" width="0.1596%" height="15" fill="rgb(232,111,52)" fg:x="1146" fg:w="2"/><text x="91.7105%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="91.4605%" y="421" width="0.1596%" height="15" fill="rgb(228,67,8)" fg:x="1146" fg:w="2"/><text x="91.7105%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="91.5403%" y="405" width="0.0798%" height="15" fill="rgb(251,168,31)" fg:x="1147" fg:w="1"/><text x="91.7903%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="91.5403%" y="389" width="0.0798%" height="15" fill="rgb(249,164,11)" fg:x="1147" fg:w="1"/><text x="91.7903%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="91.5403%" y="373" width="0.0798%" height="15" fill="rgb(239,81,9)" fg:x="1147" fg:w="1"/><text x="91.7903%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="91.5403%" y="357" width="0.0798%" height="15" fill="rgb(222,145,38)" fg:x="1147" fg:w="1"/><text x="91.7903%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="91.5403%" y="341" width="0.0798%" height="15" fill="rgb(238,80,54)" fg:x="1147" fg:w="1"/><text x="91.7903%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="91.6201%" y="421" width="0.0798%" height="15" fill="rgb(237,116,16)" fg:x="1148" fg:w="1"/><text x="91.8701%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="91.6201%" y="437" width="0.1596%" height="15" fill="rgb(218,135,19)" fg:x="1148" fg:w="2"/><text x="91.8701%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="91.6999%" y="421" width="0.0798%" height="15" fill="rgb(216,207,44)" fg:x="1149" fg:w="1"/><text x="91.9499%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (13 samples, 1.04%)</title><rect x="90.9018%" y="501" width="1.0375%" height="15" fill="rgb(226,152,40)" fg:x="1139" fg:w="13"/><text x="91.1518%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="90.9018%" y="485" width="1.0375%" height="15" fill="rgb(219,98,35)" fg:x="1139" fg:w="13"/><text x="91.1518%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="91.0615%" y="469" width="0.8779%" height="15" fill="rgb(222,136,46)" fg:x="1141" fg:w="11"/><text x="91.3115%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="91.3009%" y="453" width="0.6385%" height="15" fill="rgb(222,71,8)" fg:x="1144" fg:w="8"/><text x="91.5509%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="91.7797%" y="437" width="0.1596%" height="15" fill="rgb(209,89,53)" fg:x="1150" fg:w="2"/><text x="92.0297%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="91.8595%" y="421" width="0.0798%" height="15" fill="rgb(210,97,51)" fg:x="1151" fg:w="1"/><text x="92.1095%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="91.8595%" y="405" width="0.0798%" height="15" fill="rgb(248,65,21)" fg:x="1151" fg:w="1"/><text x="92.1095%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="91.8595%" y="389" width="0.0798%" height="15" fill="rgb(222,5,31)" fg:x="1151" fg:w="1"/><text x="92.1095%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="91.8595%" y="373" width="0.0798%" height="15" fill="rgb(241,16,30)" fg:x="1151" fg:w="1"/><text x="92.1095%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="91.8595%" y="357" width="0.0798%" height="15" fill="rgb(215,86,30)" fg:x="1151" fg:w="1"/><text x="92.1095%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.0990%" y="437" width="0.0798%" height="15" fill="rgb(235,26,44)" fg:x="1154" fg:w="1"/><text x="92.3490%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="92.1788%" y="437" width="0.1596%" height="15" fill="rgb(228,147,14)" fg:x="1155" fg:w="2"/><text x="92.4288%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.2586%" y="421" width="0.0798%" height="15" fill="rgb(253,38,50)" fg:x="1156" fg:w="1"/><text x="92.5086%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="92.4182%" y="421" width="0.2394%" height="15" fill="rgb(251,151,16)" fg:x="1158" fg:w="3"/><text x="92.6682%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.5778%" y="405" width="0.0798%" height="15" fill="rgb(224,64,19)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="92.0192%" y="469" width="0.7183%" height="15" fill="rgb(235,214,47)" fg:x="1153" fg:w="9"/><text x="92.2692%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.72%)</title><rect x="92.0192%" y="453" width="0.7183%" height="15" fill="rgb(218,15,19)" fg:x="1153" fg:w="9"/><text x="92.2692%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="92.3384%" y="437" width="0.3990%" height="15" fill="rgb(247,209,3)" fg:x="1157" fg:w="5"/><text x="92.5884%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="92.6576%" y="421" width="0.0798%" height="15" fill="rgb(217,29,2)" fg:x="1161" fg:w="1"/><text x="92.9076%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.7374%" y="469" width="0.0798%" height="15" fill="rgb(234,9,9)" fg:x="1162" fg:w="1"/><text x="92.9874%" y="479.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (5 samples, 0.40%)</title><rect x="92.8172%" y="469" width="0.3990%" height="15" fill="rgb(207,43,14)" fg:x="1163" fg:w="5"/><text x="93.0672%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="92.9769%" y="453" width="0.2394%" height="15" fill="rgb(216,219,36)" fg:x="1165" fg:w="3"/><text x="93.2269%" y="463.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="93.0567%" y="437" width="0.1596%" height="15" fill="rgb(238,12,26)" fg:x="1166" fg:w="2"/><text x="93.3067%" y="447.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.16%)</title><rect x="93.0567%" y="421" width="0.1596%" height="15" fill="rgb(226,67,30)" fg:x="1166" fg:w="2"/><text x="93.3067%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="93.1365%" y="405" width="0.0798%" height="15" fill="rgb(229,154,7)" fg:x="1167" fg:w="1"/><text x="93.3865%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="93.2163%" y="453" width="0.0798%" height="15" fill="rgb(249,90,18)" fg:x="1168" fg:w="1"/><text x="93.4663%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="93.2163%" y="437" width="0.0798%" height="15" fill="rgb(223,53,15)" fg:x="1168" fg:w="1"/><text x="93.4663%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="93.2163%" y="421" width="0.0798%" height="15" fill="rgb(253,86,38)" fg:x="1168" fg:w="1"/><text x="93.4663%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="93.2163%" y="405" width="0.0798%" height="15" fill="rgb(222,198,9)" fg:x="1168" fg:w="1"/><text x="93.4663%" y="415.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (18 samples, 1.44%)</title><rect x="91.9393%" y="485" width="1.4366%" height="15" fill="rgb(240,146,25)" fg:x="1152" fg:w="18"/><text x="92.1893%" y="495.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="93.2163%" y="469" width="0.1596%" height="15" fill="rgb(225,38,10)" fg:x="1168" fg:w="2"/><text x="93.4663%" y="479.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="93.2961%" y="453" width="0.0798%" height="15" fill="rgb(246,93,4)" fg:x="1169" fg:w="1"/><text x="93.5461%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.2961%" y="437" width="0.0798%" height="15" fill="rgb(222,55,18)" fg:x="1169" fg:w="1"/><text x="93.5461%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.4557%" y="453" width="0.0798%" height="15" fill="rgb(233,137,48)" fg:x="1171" fg:w="1"/><text x="93.7057%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="93.5355%" y="453" width="0.0798%" height="15" fill="rgb(214,8,54)" fg:x="1172" fg:w="1"/><text x="93.7855%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="93.5355%" y="437" width="0.0798%" height="15" fill="rgb(206,75,4)" fg:x="1172" fg:w="1"/><text x="93.7855%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.5355%" y="421" width="0.0798%" height="15" fill="rgb(238,171,14)" fg:x="1172" fg:w="1"/><text x="93.7855%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="93.6153%" y="421" width="0.0798%" height="15" fill="rgb(233,70,41)" fg:x="1173" fg:w="1"/><text x="93.8653%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="93.7749%" y="405" width="0.0798%" height="15" fill="rgb(214,68,36)" fg:x="1175" fg:w="1"/><text x="94.0249%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="93.7749%" y="389" width="0.0798%" height="15" fill="rgb(223,29,5)" fg:x="1175" fg:w="1"/><text x="94.0249%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="93.7749%" y="373" width="0.0798%" height="15" fill="rgb(251,22,40)" fg:x="1175" fg:w="1"/><text x="94.0249%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.7749%" y="357" width="0.0798%" height="15" fill="rgb(210,67,41)" fg:x="1175" fg:w="1"/><text x="94.0249%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.7749%" y="341" width="0.0798%" height="15" fill="rgb(225,177,31)" fg:x="1175" fg:w="1"/><text x="94.0249%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="93.6951%" y="421" width="0.3192%" height="15" fill="rgb(221,229,11)" fg:x="1174" fg:w="4"/><text x="93.9451%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="93.8547%" y="405" width="0.1596%" height="15" fill="rgb(247,172,52)" fg:x="1176" fg:w="2"/><text x="94.1047%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="93.8547%" y="389" width="0.1596%" height="15" fill="rgb(212,73,19)" fg:x="1176" fg:w="2"/><text x="94.1047%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="93.8547%" y="373" width="0.1596%" height="15" fill="rgb(244,7,46)" fg:x="1176" fg:w="2"/><text x="94.1047%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="93.9346%" y="357" width="0.0798%" height="15" fill="rgb(230,113,20)" fg:x="1177" fg:w="1"/><text x="94.1846%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="93.9346%" y="341" width="0.0798%" height="15" fill="rgb(209,97,30)" fg:x="1177" fg:w="1"/><text x="94.1846%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.9346%" y="325" width="0.0798%" height="15" fill="rgb(243,89,12)" fg:x="1177" fg:w="1"/><text x="94.1846%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.56%)</title><rect x="93.6153%" y="437" width="0.5587%" height="15" fill="rgb(228,32,19)" fg:x="1173" fg:w="7"/><text x="93.8653%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="94.0144%" y="421" width="0.1596%" height="15" fill="rgb(248,25,17)" fg:x="1178" fg:w="2"/><text x="94.2644%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="94.0144%" y="405" width="0.1596%" height="15" fill="rgb(232,161,29)" fg:x="1178" fg:w="2"/><text x="94.2644%" y="415.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (11 samples, 0.88%)</title><rect x="93.3759%" y="485" width="0.8779%" height="15" fill="rgb(251,192,11)" fg:x="1170" fg:w="11"/><text x="93.6259%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.88%)</title><rect x="93.3759%" y="469" width="0.8779%" height="15" fill="rgb(240,47,32)" fg:x="1170" fg:w="11"/><text x="93.6259%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.64%)</title><rect x="93.6153%" y="453" width="0.6385%" height="15" fill="rgb(250,16,45)" fg:x="1173" fg:w="8"/><text x="93.8653%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.1740%" y="437" width="0.0798%" height="15" fill="rgb(227,217,42)" fg:x="1180" fg:w="1"/><text x="94.4240%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.4134%" y="293" width="0.0798%" height="15" fill="rgb(206,82,54)" fg:x="1183" fg:w="1"/><text x="94.6634%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.4932%" y="293" width="0.0798%" height="15" fill="rgb(243,145,25)" fg:x="1184" fg:w="1"/><text x="94.7432%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.4932%" y="277" width="0.0798%" height="15" fill="rgb(207,166,24)" fg:x="1184" fg:w="1"/><text x="94.7432%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="94.4134%" y="325" width="0.2394%" height="15" fill="rgb(215,191,44)" fg:x="1183" fg:w="3"/><text x="94.6634%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="94.4134%" y="309" width="0.2394%" height="15" fill="rgb(234,218,51)" fg:x="1183" fg:w="3"/><text x="94.6634%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.5730%" y="293" width="0.0798%" height="15" fill="rgb(245,133,21)" fg:x="1185" fg:w="1"/><text x="94.8230%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.5730%" y="277" width="0.0798%" height="15" fill="rgb(230,136,45)" fg:x="1185" fg:w="1"/><text x="94.8230%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.5730%" y="261" width="0.0798%" height="15" fill="rgb(247,63,43)" fg:x="1185" fg:w="1"/><text x="94.8230%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="94.3336%" y="389" width="0.4789%" height="15" fill="rgb(254,223,31)" fg:x="1182" fg:w="6"/><text x="94.5836%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="94.3336%" y="373" width="0.4789%" height="15" fill="rgb(236,185,0)" fg:x="1182" fg:w="6"/><text x="94.5836%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="94.4134%" y="357" width="0.3990%" height="15" fill="rgb(231,139,46)" fg:x="1183" fg:w="5"/><text x="94.6634%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="94.4134%" y="341" width="0.3990%" height="15" fill="rgb(236,147,31)" fg:x="1183" fg:w="5"/><text x="94.6634%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="94.6528%" y="325" width="0.1596%" height="15" fill="rgb(225,222,22)" fg:x="1186" fg:w="2"/><text x="94.9028%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.7326%" y="309" width="0.0798%" height="15" fill="rgb(225,193,14)" fg:x="1187" fg:w="1"/><text x="94.9826%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.7326%" y="293" width="0.0798%" height="15" fill="rgb(253,193,46)" fg:x="1187" fg:w="1"/><text x="94.9826%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="94.2538%" y="421" width="0.7183%" height="15" fill="rgb(218,187,39)" fg:x="1181" fg:w="9"/><text x="94.5038%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="94.3336%" y="405" width="0.6385%" height="15" fill="rgb(227,162,48)" fg:x="1182" fg:w="8"/><text x="94.5836%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="94.8125%" y="389" width="0.1596%" height="15" fill="rgb(222,25,5)" fg:x="1188" fg:w="2"/><text x="95.0625%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="94.8125%" y="373" width="0.1596%" height="15" fill="rgb(211,205,16)" fg:x="1188" fg:w="2"/><text x="95.0625%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.9721%" y="421" width="0.0798%" height="15" fill="rgb(244,191,2)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="94.9721%" y="405" width="0.0798%" height="15" fill="rgb(248,159,12)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="415.50"></text></g><g><title>engine::session::Session::close (60 samples, 4.79%)</title><rect x="90.4230%" y="597" width="4.7885%" height="15" fill="rgb(235,204,17)" fg:x="1133" fg:w="60"/><text x="90.6730%" y="607.50">engine..</text></g><g><title>engine::session::state::State::close (60 samples, 4.79%)</title><rect x="90.4230%" y="581" width="4.7885%" height="15" fill="rgb(240,21,27)" fg:x="1133" fg:w="60"/><text x="90.6730%" y="591.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (60 samples, 4.79%)</title><rect x="90.4230%" y="565" width="4.7885%" height="15" fill="rgb(224,170,31)" fg:x="1133" fg:w="60"/><text x="90.6730%" y="575.50">engine..</text></g><g><title>core::iter::adapters::try_process (60 samples, 4.79%)</title><rect x="90.4230%" y="549" width="4.7885%" height="15" fill="rgb(223,145,32)" fg:x="1133" fg:w="60"/><text x="90.6730%" y="559.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (60 samples, 4.79%)</title><rect x="90.4230%" y="533" width="4.7885%" height="15" fill="rgb(243,100,5)" fg:x="1133" fg:w="60"/><text x="90.6730%" y="543.50">&lt;alloc..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (60 samples, 4.79%)</title><rect x="90.4230%" y="517" width="4.7885%" height="15" fill="rgb(242,131,51)" fg:x="1133" fg:w="60"/><text x="90.6730%" y="527.50">engine..</text></g><g><title>kernel::model::any_entity_changes (41 samples, 3.27%)</title><rect x="91.9393%" y="501" width="3.2721%" height="15" fill="rgb(223,156,46)" fg:x="1152" fg:w="41"/><text x="92.1893%" y="511.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (12 samples, 0.96%)</title><rect x="94.2538%" y="485" width="0.9577%" height="15" fill="rgb(215,10,40)" fg:x="1181" fg:w="12"/><text x="94.5038%" y="495.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.96%)</title><rect x="94.2538%" y="469" width="0.9577%" height="15" fill="rgb(233,155,0)" fg:x="1181" fg:w="12"/><text x="94.5038%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.96%)</title><rect x="94.2538%" y="453" width="0.9577%" height="15" fill="rgb(247,78,6)" fg:x="1181" fg:w="12"/><text x="94.5038%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="94.2538%" y="437" width="0.9577%" height="15" fill="rgb(237,217,21)" fg:x="1181" fg:w="12"/><text x="94.5038%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.0519%" y="421" width="0.1596%" height="15" fill="rgb(212,1,21)" fg:x="1191" fg:w="2"/><text x="95.3019%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.1317%" y="405" width="0.0798%" height="15" fill="rgb(213,7,14)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="95.1317%" y="389" width="0.0798%" height="15" fill="rgb(225,84,14)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="95.2115%" y="549" width="0.0798%" height="15" fill="rgb(239,216,39)" fg:x="1193" fg:w="1"/><text x="95.4615%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.2115%" y="533" width="0.0798%" height="15" fill="rgb(253,29,23)" fg:x="1193" fg:w="1"/><text x="95.4615%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.2115%" y="517" width="0.0798%" height="15" fill="rgb(220,167,50)" fg:x="1193" fg:w="1"/><text x="95.4615%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="95.2115%" y="501" width="0.0798%" height="15" fill="rgb(232,141,1)" fg:x="1193" fg:w="1"/><text x="95.4615%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.2115%" y="485" width="0.0798%" height="15" fill="rgb(222,210,1)" fg:x="1193" fg:w="1"/><text x="95.4615%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.2115%" y="469" width="0.0798%" height="15" fill="rgb(219,84,10)" fg:x="1193" fg:w="1"/><text x="95.4615%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::find_name_key (2 samples, 0.16%)</title><rect x="95.2115%" y="565" width="0.1596%" height="15" fill="rgb(245,188,6)" fg:x="1193" fg:w="2"/><text x="95.4615%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="95.2913%" y="549" width="0.0798%" height="15" fill="rgb(252,139,39)" fg:x="1194" fg:w="1"/><text x="95.5413%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.2913%" y="533" width="0.0798%" height="15" fill="rgb(218,42,26)" fg:x="1194" fg:w="1"/><text x="95.5413%" y="543.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::sources (1 samples, 0.08%)</title><rect x="95.3711%" y="533" width="0.0798%" height="15" fill="rgb(237,226,51)" fg:x="1195" fg:w="1"/><text x="95.6211%" y="543.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="95.3711%" y="565" width="0.1596%" height="15" fill="rgb(246,15,17)" fg:x="1195" fg:w="2"/><text x="95.6211%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="95.3711%" y="549" width="0.1596%" height="15" fill="rgb(228,170,42)" fg:x="1195" fg:w="2"/><text x="95.6211%" y="559.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="95.4509%" y="533" width="0.0798%" height="15" fill="rgb(248,118,53)" fg:x="1196" fg:w="1"/><text x="95.7009%" y="543.50"></text></g><g><title>&lt;plugins_rune::parser::RegisterActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="95.4509%" y="517" width="0.0798%" height="15" fill="rgb(207,30,10)" fg:x="1196" fg:w="1"/><text x="95.7009%" y="527.50"></text></g><g><title>&lt;kernel::model::base::DomainError as core::convert::From&lt;anyhow::Error&gt;&gt;::from (1 samples, 0.08%)</title><rect x="95.4509%" y="501" width="0.0798%" height="15" fill="rgb(217,104,38)" fg:x="1196" fg:w="1"/><text x="95.7009%" y="511.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_num_days_from_ce_opt (1 samples, 0.08%)</title><rect x="95.5307%" y="517" width="0.0798%" height="15" fill="rgb(211,165,26)" fg:x="1197" fg:w="1"/><text x="95.7807%" y="527.50"></text></g><g><title>chrono::offset::utc::Utc::now (2 samples, 0.16%)</title><rect x="95.5307%" y="533" width="0.1596%" height="15" fill="rgb(247,38,9)" fg:x="1197" fg:w="2"/><text x="95.7807%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="95.6105%" y="517" width="0.0798%" height="15" fill="rgb(218,187,8)" fg:x="1198" fg:w="1"/><text x="95.8605%" y="527.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="95.6105%" y="501" width="0.0798%" height="15" fill="rgb(247,94,28)" fg:x="1198" fg:w="1"/><text x="95.8605%" y="511.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new (3 samples, 0.24%)</title><rect x="95.6903%" y="533" width="0.2394%" height="15" fill="rgb(218,173,30)" fg:x="1199" fg:w="3"/><text x="95.9403%" y="543.50"></text></g><g><title>tracing_core::callsite::register_dispatch (3 samples, 0.24%)</title><rect x="95.6903%" y="517" width="0.2394%" height="15" fill="rgb(245,45,36)" fg:x="1199" fg:w="3"/><text x="95.9403%" y="527.50"></text></g><g><title>tracing_core::callsite::Callsites::rebuild_interest (3 samples, 0.24%)</title><rect x="95.6903%" y="501" width="0.2394%" height="15" fill="rgb(221,172,44)" fg:x="1199" fg:w="3"/><text x="95.9403%" y="511.50"></text></g><g><title>tracing_core::callsite::dispatchers::Rebuilder::for_each (2 samples, 0.16%)</title><rect x="95.7702%" y="485" width="0.1596%" height="15" fill="rgb(222,45,12)" fg:x="1200" fg:w="2"/><text x="96.0202%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="96.0096%" y="421" width="0.0798%" height="15" fill="rgb(250,10,22)" fg:x="1203" fg:w="1"/><text x="96.2596%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.0096%" y="405" width="0.0798%" height="15" fill="rgb(239,27,0)" fg:x="1203" fg:w="1"/><text x="96.2596%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.0096%" y="389" width="0.0798%" height="15" fill="rgb(223,118,22)" fg:x="1203" fg:w="1"/><text x="96.2596%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.0096%" y="373" width="0.0798%" height="15" fill="rgb(251,81,25)" fg:x="1203" fg:w="1"/><text x="96.2596%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.0096%" y="357" width="0.0798%" height="15" fill="rgb(237,225,53)" fg:x="1203" fg:w="1"/><text x="96.2596%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.0096%" y="341" width="0.0798%" height="15" fill="rgb(237,186,51)" fg:x="1203" fg:w="1"/><text x="96.2596%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.0096%" y="325" width="0.0798%" height="15" fill="rgb(247,209,11)" fg:x="1203" fg:w="1"/><text x="96.2596%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.0096%" y="309" width="0.0798%" height="15" fill="rgb(223,109,27)" fg:x="1203" fg:w="1"/><text x="96.2596%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.0096%" y="293" width="0.0798%" height="15" fill="rgb(246,181,13)" fg:x="1203" fg:w="1"/><text x="96.2596%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.0096%" y="277" width="0.0798%" height="15" fill="rgb(234,57,44)" fg:x="1203" fg:w="1"/><text x="96.2596%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.0096%" y="261" width="0.0798%" height="15" fill="rgb(211,227,50)" fg:x="1203" fg:w="1"/><text x="96.2596%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.0096%" y="245" width="0.0798%" height="15" fill="rgb(254,57,34)" fg:x="1203" fg:w="1"/><text x="96.2596%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.0096%" y="229" width="0.0798%" height="15" fill="rgb(227,212,26)" fg:x="1203" fg:w="1"/><text x="96.2596%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.0096%" y="213" width="0.0798%" height="15" fill="rgb(244,169,44)" fg:x="1203" fg:w="1"/><text x="96.2596%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.0096%" y="197" width="0.0798%" height="15" fill="rgb(236,135,50)" fg:x="1203" fg:w="1"/><text x="96.2596%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.0894%" y="357" width="0.1596%" height="15" fill="rgb(241,89,30)" fg:x="1204" fg:w="2"/><text x="96.3394%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.1692%" y="341" width="0.0798%" height="15" fill="rgb(206,113,34)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.1692%" y="325" width="0.0798%" height="15" fill="rgb(218,104,52)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.1692%" y="309" width="0.0798%" height="15" fill="rgb(223,82,32)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.1692%" y="293" width="0.0798%" height="15" fill="rgb(249,219,30)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.1692%" y="277" width="0.0798%" height="15" fill="rgb(233,141,21)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="287.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="96.2490%" y="213" width="0.0798%" height="15" fill="rgb(252,87,44)" fg:x="1206" fg:w="1"/><text x="96.4990%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="96.2490%" y="197" width="0.0798%" height="15" fill="rgb(229,48,33)" fg:x="1206" fg:w="1"/><text x="96.4990%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.2490%" y="181" width="0.0798%" height="15" fill="rgb(229,23,22)" fg:x="1206" fg:w="1"/><text x="96.4990%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.2490%" y="165" width="0.0798%" height="15" fill="rgb(244,116,16)" fg:x="1206" fg:w="1"/><text x="96.4990%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.2490%" y="149" width="0.0798%" height="15" fill="rgb(247,45,10)" fg:x="1206" fg:w="1"/><text x="96.4990%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.2490%" y="133" width="0.0798%" height="15" fill="rgb(228,60,29)" fg:x="1206" fg:w="1"/><text x="96.4990%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.2490%" y="117" width="0.0798%" height="15" fill="rgb(205,129,15)" fg:x="1206" fg:w="1"/><text x="96.4990%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.2490%" y="101" width="0.0798%" height="15" fill="rgb(206,229,4)" fg:x="1206" fg:w="1"/><text x="96.4990%" y="111.50"></text></g><g><title>kernel::model::entity::Entity::from_value (2 samples, 0.16%)</title><rect x="96.2490%" y="357" width="0.1596%" height="15" fill="rgb(249,191,30)" fg:x="1206" fg:w="2"/><text x="96.4990%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.2490%" y="341" width="0.1596%" height="15" fill="rgb(250,84,54)" fg:x="1206" fg:w="2"/><text x="96.4990%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.2490%" y="325" width="0.1596%" height="15" fill="rgb(207,25,53)" fg:x="1206" fg:w="2"/><text x="96.4990%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="96.2490%" y="309" width="0.1596%" height="15" fill="rgb(235,40,8)" fg:x="1206" fg:w="2"/><text x="96.4990%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.2490%" y="293" width="0.1596%" height="15" fill="rgb(226,169,33)" fg:x="1206" fg:w="2"/><text x="96.4990%" y="303.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="96.2490%" y="277" width="0.1596%" height="15" fill="rgb(238,110,8)" fg:x="1206" fg:w="2"/><text x="96.4990%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.2490%" y="261" width="0.1596%" height="15" fill="rgb(251,206,12)" fg:x="1206" fg:w="2"/><text x="96.4990%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.2490%" y="245" width="0.1596%" height="15" fill="rgb(248,171,18)" fg:x="1206" fg:w="2"/><text x="96.4990%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="96.2490%" y="229" width="0.1596%" height="15" fill="rgb(213,65,46)" fg:x="1206" fg:w="2"/><text x="96.4990%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.3288%" y="213" width="0.0798%" height="15" fill="rgb(211,154,15)" fg:x="1207" fg:w="1"/><text x="96.5788%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.3288%" y="197" width="0.0798%" height="15" fill="rgb(217,75,43)" fg:x="1207" fg:w="1"/><text x="96.5788%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.3288%" y="181" width="0.0798%" height="15" fill="rgb(230,32,33)" fg:x="1207" fg:w="1"/><text x="96.5788%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.3288%" y="165" width="0.0798%" height="15" fill="rgb(221,100,16)" fg:x="1207" fg:w="1"/><text x="96.5788%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.3288%" y="149" width="0.0798%" height="15" fill="rgb(212,129,47)" fg:x="1207" fg:w="1"/><text x="96.5788%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.3288%" y="133" width="0.0798%" height="15" fill="rgb(239,217,47)" fg:x="1207" fg:w="1"/><text x="96.5788%" y="143.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.3288%" y="117" width="0.0798%" height="15" fill="rgb(230,84,24)" fg:x="1207" fg:w="1"/><text x="96.5788%" y="127.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (7 samples, 0.56%)</title><rect x="96.0894%" y="421" width="0.5587%" height="15" fill="rgb(214,153,51)" fg:x="1204" fg:w="7"/><text x="96.3394%" y="431.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (7 samples, 0.56%)</title><rect x="96.0894%" y="405" width="0.5587%" height="15" fill="rgb(231,6,35)" fg:x="1204" fg:w="7"/><text x="96.3394%" y="415.50"></text></g><g><title>engine::session::Session::load_entity (7 samples, 0.56%)</title><rect x="96.0894%" y="389" width="0.5587%" height="15" fill="rgb(229,122,30)" fg:x="1204" fg:w="7"/><text x="96.3394%" y="399.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (7 samples, 0.56%)</title><rect x="96.0894%" y="373" width="0.5587%" height="15" fill="rgb(234,71,10)" fg:x="1204" fg:w="7"/><text x="96.3394%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="96.4086%" y="357" width="0.2394%" height="15" fill="rgb(215,173,26)" fg:x="1208" fg:w="3"/><text x="96.6586%" y="367.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="96.4086%" y="341" width="0.2394%" height="15" fill="rgb(248,118,52)" fg:x="1208" fg:w="3"/><text x="96.6586%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="96.4086%" y="325" width="0.2394%" height="15" fill="rgb(237,55,46)" fg:x="1208" fg:w="3"/><text x="96.6586%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="96.4086%" y="309" width="0.2394%" height="15" fill="rgb(243,214,43)" fg:x="1208" fg:w="3"/><text x="96.6586%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="96.4086%" y="293" width="0.2394%" height="15" fill="rgb(252,123,30)" fg:x="1208" fg:w="3"/><text x="96.6586%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="96.4086%" y="277" width="0.2394%" height="15" fill="rgb(215,73,39)" fg:x="1208" fg:w="3"/><text x="96.6586%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="96.4086%" y="261" width="0.2394%" height="15" fill="rgb(251,194,29)" fg:x="1208" fg:w="3"/><text x="96.6586%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.4884%" y="245" width="0.1596%" height="15" fill="rgb(224,58,52)" fg:x="1209" fg:w="2"/><text x="96.7384%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.4884%" y="229" width="0.1596%" height="15" fill="rgb(248,106,46)" fg:x="1209" fg:w="2"/><text x="96.7384%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.4884%" y="213" width="0.1596%" height="15" fill="rgb(223,80,29)" fg:x="1209" fg:w="2"/><text x="96.7384%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.4884%" y="197" width="0.1596%" height="15" fill="rgb(243,137,9)" fg:x="1209" fg:w="2"/><text x="96.7384%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.4884%" y="181" width="0.1596%" height="15" fill="rgb(235,121,28)" fg:x="1209" fg:w="2"/><text x="96.7384%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.5682%" y="165" width="0.0798%" height="15" fill="rgb(219,121,41)" fg:x="1210" fg:w="1"/><text x="96.8182%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.5682%" y="149" width="0.0798%" height="15" fill="rgb(251,60,6)" fg:x="1210" fg:w="1"/><text x="96.8182%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.5682%" y="133" width="0.0798%" height="15" fill="rgb(208,12,30)" fg:x="1210" fg:w="1"/><text x="96.8182%" y="143.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (9 samples, 0.72%)</title><rect x="96.0096%" y="453" width="0.7183%" height="15" fill="rgb(207,176,36)" fg:x="1203" fg:w="9"/><text x="96.2596%" y="463.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_area (9 samples, 0.72%)</title><rect x="96.0096%" y="437" width="0.7183%" height="15" fill="rgb(211,188,29)" fg:x="1203" fg:w="9"/><text x="96.2596%" y="447.50"></text></g><g><title>plugins_core::finding::DefaultFinder::find_top_container (1 samples, 0.08%)</title><rect x="96.6480%" y="421" width="0.0798%" height="15" fill="rgb(220,184,37)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="96.6480%" y="405" width="0.0798%" height="15" fill="rgb(239,87,37)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="415.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="96.7279%" y="421" width="0.1596%" height="15" fill="rgb(232,113,44)" fg:x="1212" fg:w="2"/><text x="96.9779%" y="431.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (2 samples, 0.16%)</title><rect x="96.7279%" y="405" width="0.1596%" height="15" fill="rgb(246,25,39)" fg:x="1212" fg:w="2"/><text x="96.9779%" y="415.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="96.7279%" y="389" width="0.1596%" height="15" fill="rgb(247,30,13)" fg:x="1212" fg:w="2"/><text x="96.9779%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="96.7279%" y="373" width="0.1596%" height="15" fill="rgb(230,176,35)" fg:x="1212" fg:w="2"/><text x="96.9779%" y="383.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="96.7279%" y="357" width="0.1596%" height="15" fill="rgb(222,23,18)" fg:x="1212" fg:w="2"/><text x="96.9779%" y="367.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="96.7279%" y="341" width="0.1596%" height="15" fill="rgb(234,86,8)" fg:x="1212" fg:w="2"/><text x="96.9779%" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.16%)</title><rect x="96.7279%" y="325" width="0.1596%" height="15" fill="rgb(206,218,47)" fg:x="1212" fg:w="2"/><text x="96.9779%" y="335.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (2 samples, 0.16%)</title><rect x="96.7279%" y="309" width="0.1596%" height="15" fill="rgb(229,35,31)" fg:x="1212" fg:w="2"/><text x="96.9779%" y="319.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (2 samples, 0.16%)</title><rect x="96.7279%" y="293" width="0.1596%" height="15" fill="rgb(242,81,7)" fg:x="1212" fg:w="2"/><text x="96.9779%" y="303.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::SimpleReply&gt;&gt;::try_from (2 samples, 0.16%)</title><rect x="96.7279%" y="277" width="0.1596%" height="15" fill="rgb(231,11,35)" fg:x="1212" fg:w="2"/><text x="96.9779%" y="287.50"></text></g><g><title>&lt;replies::SimpleReply as replies::ToTaggedJson&gt;::to_tagged_json (2 samples, 0.16%)</title><rect x="96.7279%" y="261" width="0.1596%" height="15" fill="rgb(219,218,17)" fg:x="1212" fg:w="2"/><text x="96.9779%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.8875%" y="389" width="0.0798%" height="15" fill="rgb(221,83,32)" fg:x="1214" fg:w="1"/><text x="97.1375%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.8875%" y="373" width="0.0798%" height="15" fill="rgb(233,49,54)" fg:x="1214" fg:w="1"/><text x="97.1375%" y="383.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="96.9673%" y="389" width="0.0798%" height="15" fill="rgb(206,18,51)" fg:x="1215" fg:w="1"/><text x="97.2173%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.9673%" y="373" width="0.0798%" height="15" fill="rgb(249,193,15)" fg:x="1215" fg:w="1"/><text x="97.2173%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="97.0471%" y="373" width="0.0798%" height="15" fill="rgb(245,186,19)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.0471%" y="357" width="0.0798%" height="15" fill="rgb(230,4,24)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.0471%" y="341" width="0.0798%" height="15" fill="rgb(234,75,27)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="97.0471%" y="325" width="0.0798%" height="15" fill="rgb(244,187,35)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="335.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="97.0471%" y="309" width="0.0798%" height="15" fill="rgb(241,97,43)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2067%" y="309" width="0.0798%" height="15" fill="rgb(236,94,2)" fg:x="1218" fg:w="1"/><text x="97.4567%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2067%" y="293" width="0.0798%" height="15" fill="rgb(231,175,7)" fg:x="1218" fg:w="1"/><text x="97.4567%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.2067%" y="277" width="0.0798%" height="15" fill="rgb(236,89,47)" fg:x="1218" fg:w="1"/><text x="97.4567%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.2067%" y="261" width="0.0798%" height="15" fill="rgb(213,191,37)" fg:x="1218" fg:w="1"/><text x="97.4567%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.2067%" y="245" width="0.0798%" height="15" fill="rgb(252,0,34)" fg:x="1218" fg:w="1"/><text x="97.4567%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.2067%" y="229" width="0.0798%" height="15" fill="rgb(208,145,44)" fg:x="1218" fg:w="1"/><text x="97.4567%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.2067%" y="213" width="0.0798%" height="15" fill="rgb(227,95,50)" fg:x="1218" fg:w="1"/><text x="97.4567%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.2067%" y="197" width="0.0798%" height="15" fill="rgb(222,136,24)" fg:x="1218" fg:w="1"/><text x="97.4567%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.2067%" y="181" width="0.0798%" height="15" fill="rgb(218,105,10)" fg:x="1218" fg:w="1"/><text x="97.4567%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.2067%" y="165" width="0.0798%" height="15" fill="rgb(216,65,28)" fg:x="1218" fg:w="1"/><text x="97.4567%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.2067%" y="149" width="0.0798%" height="15" fill="rgb(229,6,28)" fg:x="1218" fg:w="1"/><text x="97.4567%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.2067%" y="133" width="0.0798%" height="15" fill="rgb(222,160,42)" fg:x="1218" fg:w="1"/><text x="97.4567%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.2067%" y="117" width="0.0798%" height="15" fill="rgb(235,83,49)" fg:x="1218" fg:w="1"/><text x="97.4567%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.2067%" y="101" width="0.0798%" height="15" fill="rgb(236,86,36)" fg:x="1218" fg:w="1"/><text x="97.4567%" y="111.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="97.2865%" y="309" width="0.0798%" height="15" fill="rgb(236,19,41)" fg:x="1219" fg:w="1"/><text x="97.5365%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.2865%" y="293" width="0.0798%" height="15" fill="rgb(217,71,31)" fg:x="1219" fg:w="1"/><text x="97.5365%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2865%" y="277" width="0.0798%" height="15" fill="rgb(236,209,25)" fg:x="1219" fg:w="1"/><text x="97.5365%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.2865%" y="261" width="0.0798%" height="15" fill="rgb(247,104,21)" fg:x="1219" fg:w="1"/><text x="97.5365%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.3663%" y="213" width="0.0798%" height="15" fill="rgb(243,80,38)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.3663%" y="197" width="0.0798%" height="15" fill="rgb(232,109,38)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="207.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="97.3663%" y="181" width="0.0798%" height="15" fill="rgb(212,177,53)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.3663%" y="165" width="0.0798%" height="15" fill="rgb(227,30,34)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.3663%" y="149" width="0.0798%" height="15" fill="rgb(205,175,25)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.3663%" y="133" width="0.0798%" height="15" fill="rgb(249,39,54)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="143.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="97.3663%" y="117" width="0.0798%" height="15" fill="rgb(215,54,37)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="97.3663%" y="101" width="0.0798%" height="15" fill="rgb(205,60,46)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.3663%" y="85" width="0.0798%" height="15" fill="rgb(238,89,29)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.4461%" y="181" width="0.0798%" height="15" fill="rgb(212,48,10)" fg:x="1221" fg:w="1"/><text x="97.6961%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.4461%" y="165" width="0.0798%" height="15" fill="rgb(237,186,28)" fg:x="1221" fg:w="1"/><text x="97.6961%" y="175.50"></text></g><g><title>kernel::model::entity::Entity::from_value (3 samples, 0.24%)</title><rect x="97.3663%" y="309" width="0.2394%" height="15" fill="rgb(237,204,4)" fg:x="1220" fg:w="3"/><text x="97.6163%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="97.3663%" y="293" width="0.2394%" height="15" fill="rgb(237,15,47)" fg:x="1220" fg:w="3"/><text x="97.6163%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="97.3663%" y="277" width="0.2394%" height="15" fill="rgb(244,110,25)" fg:x="1220" fg:w="3"/><text x="97.6163%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="97.3663%" y="261" width="0.2394%" height="15" fill="rgb(241,12,16)" fg:x="1220" fg:w="3"/><text x="97.6163%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="97.3663%" y="245" width="0.2394%" height="15" fill="rgb(235,25,9)" fg:x="1220" fg:w="3"/><text x="97.6163%" y="255.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.3663%" y="229" width="0.2394%" height="15" fill="rgb(245,159,19)" fg:x="1220" fg:w="3"/><text x="97.6163%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.4461%" y="213" width="0.1596%" height="15" fill="rgb(236,63,32)" fg:x="1221" fg:w="2"/><text x="97.6961%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.4461%" y="197" width="0.1596%" height="15" fill="rgb(235,32,52)" fg:x="1221" fg:w="2"/><text x="97.6961%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="97.5259%" y="181" width="0.0798%" height="15" fill="rgb(209,176,21)" fg:x="1222" fg:w="1"/><text x="97.7759%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.5259%" y="165" width="0.0798%" height="15" fill="rgb(205,90,42)" fg:x="1222" fg:w="1"/><text x="97.7759%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.5259%" y="149" width="0.0798%" height="15" fill="rgb(213,132,16)" fg:x="1222" fg:w="1"/><text x="97.7759%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="97.5259%" y="133" width="0.0798%" height="15" fill="rgb(232,11,22)" fg:x="1222" fg:w="1"/><text x="97.7759%" y="143.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.5259%" y="117" width="0.0798%" height="15" fill="rgb(248,167,41)" fg:x="1222" fg:w="1"/><text x="97.7759%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.5259%" y="101" width="0.0798%" height="15" fill="rgb(209,127,6)" fg:x="1222" fg:w="1"/><text x="97.7759%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.5259%" y="85" width="0.0798%" height="15" fill="rgb(246,210,34)" fg:x="1222" fg:w="1"/><text x="97.7759%" y="95.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.5259%" y="69" width="0.0798%" height="15" fill="rgb(238,165,13)" fg:x="1222" fg:w="1"/><text x="97.7759%" y="79.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.5259%" y="53" width="0.0798%" height="15" fill="rgb(233,98,15)" fg:x="1222" fg:w="1"/><text x="97.7759%" y="63.50"></text></g><g><title>plugins_core::tools::contained_by (8 samples, 0.64%)</title><rect x="97.0471%" y="389" width="0.6385%" height="15" fill="rgb(215,215,51)" fg:x="1216" fg:w="8"/><text x="97.2971%" y="399.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (7 samples, 0.56%)</title><rect x="97.1269%" y="373" width="0.5587%" height="15" fill="rgb(217,161,25)" fg:x="1217" fg:w="7"/><text x="97.3769%" y="383.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (6 samples, 0.48%)</title><rect x="97.2067%" y="357" width="0.4789%" height="15" fill="rgb(217,167,48)" fg:x="1218" fg:w="6"/><text x="97.4567%" y="367.50"></text></g><g><title>engine::session::Session::load_entity (6 samples, 0.48%)</title><rect x="97.2067%" y="341" width="0.4789%" height="15" fill="rgb(205,163,34)" fg:x="1218" fg:w="6"/><text x="97.4567%" y="351.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (6 samples, 0.48%)</title><rect x="97.2067%" y="325" width="0.4789%" height="15" fill="rgb(241,197,31)" fg:x="1218" fg:w="6"/><text x="97.4567%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (1 samples, 0.08%)</title><rect x="97.6057%" y="309" width="0.0798%" height="15" fill="rgb(225,123,11)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="319.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="97.6057%" y="293" width="0.0798%" height="15" fill="rgb(217,4,20)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.6057%" y="277" width="0.0798%" height="15" fill="rgb(215,55,9)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.6057%" y="261" width="0.0798%" height="15" fill="rgb(218,165,5)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.6057%" y="245" width="0.0798%" height="15" fill="rgb(222,175,15)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.6057%" y="229" width="0.0798%" height="15" fill="rgb(223,85,34)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.6057%" y="213" width="0.0798%" height="15" fill="rgb(234,228,29)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.6057%" y="197" width="0.0798%" height="15" fill="rgb(239,7,28)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.6057%" y="181" width="0.0798%" height="15" fill="rgb(252,222,53)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.6057%" y="165" width="0.0798%" height="15" fill="rgb(232,146,44)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.6057%" y="149" width="0.0798%" height="15" fill="rgb(243,223,53)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.6057%" y="133" width="0.0798%" height="15" fill="rgb(219,128,25)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.6057%" y="117" width="0.0798%" height="15" fill="rgb(223,56,32)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="127.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6856%" y="357" width="0.0798%" height="15" fill="rgb(237,41,3)" fg:x="1224" fg:w="1"/><text x="97.9356%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6856%" y="341" width="0.0798%" height="15" fill="rgb(235,138,9)" fg:x="1224" fg:w="1"/><text x="97.9356%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.7654%" y="261" width="0.0798%" height="15" fill="rgb(214,131,10)" fg:x="1225" fg:w="1"/><text x="98.0154%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.7654%" y="245" width="0.0798%" height="15" fill="rgb(229,89,7)" fg:x="1225" fg:w="1"/><text x="98.0154%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="97.7654%" y="325" width="0.2394%" height="15" fill="rgb(240,24,42)" fg:x="1225" fg:w="3"/><text x="98.0154%" y="335.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="97.7654%" y="309" width="0.2394%" height="15" fill="rgb(243,188,54)" fg:x="1225" fg:w="3"/><text x="98.0154%" y="319.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="97.7654%" y="293" width="0.2394%" height="15" fill="rgb(246,92,22)" fg:x="1225" fg:w="3"/><text x="98.0154%" y="303.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::de::Deserialize for plugins_core::moving::model::Route&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.7654%" y="277" width="0.2394%" height="15" fill="rgb(211,176,51)" fg:x="1225" fg:w="3"/><text x="98.0154%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.8452%" y="261" width="0.1596%" height="15" fill="rgb(246,207,34)" fg:x="1226" fg:w="2"/><text x="98.0952%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.8452%" y="245" width="0.1596%" height="15" fill="rgb(239,95,2)" fg:x="1226" fg:w="2"/><text x="98.0952%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.8452%" y="229" width="0.1596%" height="15" fill="rgb(211,124,25)" fg:x="1226" fg:w="2"/><text x="98.0952%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.8452%" y="213" width="0.1596%" height="15" fill="rgb(231,221,19)" fg:x="1226" fg:w="2"/><text x="98.0952%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.9250%" y="197" width="0.0798%" height="15" fill="rgb(239,183,19)" fg:x="1227" fg:w="1"/><text x="98.1750%" y="207.50"></text></g><g><title>plugins_core::tools::occupied_by (6 samples, 0.48%)</title><rect x="97.6856%" y="389" width="0.4789%" height="15" fill="rgb(221,130,29)" fg:x="1224" fg:w="6"/><text x="97.9356%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (6 samples, 0.48%)</title><rect x="97.6856%" y="373" width="0.4789%" height="15" fill="rgb(206,130,36)" fg:x="1224" fg:w="6"/><text x="97.9356%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="97.7654%" y="357" width="0.3990%" height="15" fill="rgb(215,70,19)" fg:x="1225" fg:w="5"/><text x="98.0154%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="97.7654%" y="341" width="0.3990%" height="15" fill="rgb(244,16,43)" fg:x="1225" fg:w="5"/><text x="98.0154%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.0048%" y="325" width="0.1596%" height="15" fill="rgb(222,115,32)" fg:x="1228" fg:w="2"/><text x="98.2548%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.0048%" y="309" width="0.1596%" height="15" fill="rgb(247,48,25)" fg:x="1228" fg:w="2"/><text x="98.2548%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.0846%" y="293" width="0.0798%" height="15" fill="rgb(226,180,51)" fg:x="1229" fg:w="1"/><text x="98.3346%" y="303.50"></text></g><g><title>engine::session::Session::captured (34 samples, 2.71%)</title><rect x="95.5307%" y="565" width="2.7135%" height="15" fill="rgb(217,142,42)" fg:x="1197" fg:w="34"/><text x="95.7807%" y="575.50">en..</text></g><g><title>engine::session::logs::capture (34 samples, 2.71%)</title><rect x="95.5307%" y="549" width="2.7135%" height="15" fill="rgb(220,178,3)" fg:x="1197" fg:w="34"/><text x="95.7807%" y="559.50">en..</text></g><g><title>tracing_core::dispatcher::with_default (29 samples, 2.31%)</title><rect x="95.9298%" y="533" width="2.3144%" height="15" fill="rgb(217,221,4)" fg:x="1202" fg:w="29"/><text x="96.1798%" y="543.50">t..</text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (29 samples, 2.31%)</title><rect x="95.9298%" y="517" width="2.3144%" height="15" fill="rgb(237,63,43)" fg:x="1202" fg:w="29"/><text x="96.1798%" y="527.50">&lt;..</text></g><g><title>kernel::plugins::mw::apply_middleware (29 samples, 2.31%)</title><rect x="95.9298%" y="501" width="2.3144%" height="15" fill="rgb(220,57,8)" fg:x="1202" fg:w="29"/><text x="96.1798%" y="511.50">k..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (28 samples, 2.23%)</title><rect x="96.0096%" y="485" width="2.2346%" height="15" fill="rgb(254,186,27)" fg:x="1203" fg:w="28"/><text x="96.2596%" y="495.50">k..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (28 samples, 2.23%)</title><rect x="96.0096%" y="469" width="2.2346%" height="15" fill="rgb(251,57,28)" fg:x="1203" fg:w="28"/><text x="96.2596%" y="479.50">&lt;..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (19 samples, 1.52%)</title><rect x="96.7279%" y="453" width="1.5164%" height="15" fill="rgb(215,228,0)" fg:x="1212" fg:w="19"/><text x="96.9779%" y="463.50"></text></g><g><title>&lt;plugins_rune::RuneMiddleware as kernel::plugins::mw::Middleware&gt;::handle (19 samples, 1.52%)</title><rect x="96.7279%" y="437" width="1.5164%" height="15" fill="rgb(237,218,39)" fg:x="1212" fg:w="19"/><text x="96.9779%" y="447.50"></text></g><g><title>plugins_rune::sources::load_sources_from_surroundings (17 samples, 1.36%)</title><rect x="96.8875%" y="421" width="1.3567%" height="15" fill="rgb(207,2,54)" fg:x="1214" fg:w="17"/><text x="97.1375%" y="431.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (17 samples, 1.36%)</title><rect x="96.8875%" y="405" width="1.3567%" height="15" fill="rgb(232,76,50)" fg:x="1214" fg:w="17"/><text x="97.1375%" y="415.50"></text></g><g><title>plugins_core::tools::worn_by (1 samples, 0.08%)</title><rect x="98.1644%" y="389" width="0.0798%" height="15" fill="rgb(211,85,31)" fg:x="1230" fg:w="1"/><text x="98.4144%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="98.1644%" y="373" width="0.0798%" height="15" fill="rgb(223,210,27)" fg:x="1230" fg:w="1"/><text x="98.4144%" y="383.50"></text></g><g><title>kernel::model::scopes::OpenedScope&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="98.1644%" y="357" width="0.0798%" height="15" fill="rgb(254,36,8)" fg:x="1230" fg:w="1"/><text x="98.4144%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.2442%" y="469" width="0.0798%" height="15" fill="rgb(213,4,25)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.2442%" y="453" width="0.0798%" height="15" fill="rgb(224,2,39)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.2442%" y="437" width="0.0798%" height="15" fill="rgb(208,8,39)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.2442%" y="421" width="0.0798%" height="15" fill="rgb(216,226,3)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.2442%" y="405" width="0.0798%" height="15" fill="rgb(249,139,31)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.2442%" y="389" width="0.0798%" height="15" fill="rgb(242,170,35)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.2442%" y="373" width="0.0798%" height="15" fill="rgb(238,14,9)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.2442%" y="357" width="0.0798%" height="15" fill="rgb(251,81,46)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.2442%" y="341" width="0.0798%" height="15" fill="rgb(230,23,4)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.2442%" y="325" width="0.0798%" height="15" fill="rgb(211,85,25)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.2442%" y="309" width="0.0798%" height="15" fill="rgb(252,23,31)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.2442%" y="293" width="0.0798%" height="15" fill="rgb(234,163,38)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.2442%" y="277" width="0.0798%" height="15" fill="rgb(210,190,50)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.2442%" y="261" width="0.0798%" height="15" fill="rgb(228,158,3)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.2442%" y="245" width="0.0798%" height="15" fill="rgb(216,130,0)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="98.3240%" y="421" width="0.1596%" height="15" fill="rgb(224,184,10)" fg:x="1232" fg:w="2"/><text x="98.5740%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="98.3240%" y="405" width="0.1596%" height="15" fill="rgb(214,202,18)" fg:x="1232" fg:w="2"/><text x="98.5740%" y="415.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="98.3240%" y="389" width="0.1596%" height="15" fill="rgb(213,229,54)" fg:x="1232" fg:w="2"/><text x="98.5740%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="98.3240%" y="373" width="0.1596%" height="15" fill="rgb(246,120,0)" fg:x="1232" fg:w="2"/><text x="98.5740%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="98.3240%" y="357" width="0.1596%" height="15" fill="rgb(237,6,15)" fg:x="1232" fg:w="2"/><text x="98.5740%" y="367.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="98.3240%" y="341" width="0.1596%" height="15" fill="rgb(252,156,15)" fg:x="1232" fg:w="2"/><text x="98.5740%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.3240%" y="325" width="0.1596%" height="15" fill="rgb(249,78,18)" fg:x="1232" fg:w="2"/><text x="98.5740%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.3240%" y="309" width="0.1596%" height="15" fill="rgb(230,223,44)" fg:x="1232" fg:w="2"/><text x="98.5740%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.4038%" y="293" width="0.0798%" height="15" fill="rgb(230,222,32)" fg:x="1233" fg:w="1"/><text x="98.6538%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="98.3240%" y="469" width="0.3192%" height="15" fill="rgb(247,54,6)" fg:x="1232" fg:w="4"/><text x="98.5740%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="98.3240%" y="453" width="0.3192%" height="15" fill="rgb(247,115,45)" fg:x="1232" fg:w="4"/><text x="98.5740%" y="463.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (4 samples, 0.32%)</title><rect x="98.3240%" y="437" width="0.3192%" height="15" fill="rgb(213,203,37)" fg:x="1232" fg:w="4"/><text x="98.5740%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.4836%" y="421" width="0.1596%" height="15" fill="rgb(248,188,18)" fg:x="1234" fg:w="2"/><text x="98.7336%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.4836%" y="405" width="0.1596%" height="15" fill="rgb(206,80,8)" fg:x="1234" fg:w="2"/><text x="98.7336%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.5634%" y="389" width="0.0798%" height="15" fill="rgb(245,217,31)" fg:x="1235" fg:w="1"/><text x="98.8134%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="98.2442%" y="517" width="0.5587%" height="15" fill="rgb(220,193,15)" fg:x="1231" fg:w="7"/><text x="98.4942%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.56%)</title><rect x="98.2442%" y="501" width="0.5587%" height="15" fill="rgb(226,7,19)" fg:x="1231" fg:w="7"/><text x="98.4942%" y="511.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (7 samples, 0.56%)</title><rect x="98.2442%" y="485" width="0.5587%" height="15" fill="rgb(222,145,31)" fg:x="1231" fg:w="7"/><text x="98.4942%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.6433%" y="469" width="0.1596%" height="15" fill="rgb(241,193,36)" fg:x="1236" fg:w="2"/><text x="98.8933%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.6433%" y="453" width="0.1596%" height="15" fill="rgb(225,123,33)" fg:x="1236" fg:w="2"/><text x="98.8933%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.7231%" y="437" width="0.0798%" height="15" fill="rgb(246,136,38)" fg:x="1237" fg:w="1"/><text x="98.9731%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.7231%" y="421" width="0.0798%" height="15" fill="rgb(243,56,24)" fg:x="1237" fg:w="1"/><text x="98.9731%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.7231%" y="405" width="0.0798%" height="15" fill="rgb(215,147,2)" fg:x="1237" fg:w="1"/><text x="98.9731%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.7231%" y="389" width="0.0798%" height="15" fill="rgb(209,155,27)" fg:x="1237" fg:w="1"/><text x="98.9731%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.7231%" y="373" width="0.0798%" height="15" fill="rgb(222,177,11)" fg:x="1237" fg:w="1"/><text x="98.9731%" y="383.50"></text></g><g><title>engine::session::internal::Added::find_refs (8 samples, 0.64%)</title><rect x="98.2442%" y="549" width="0.6385%" height="15" fill="rgb(212,227,15)" fg:x="1231" fg:w="8"/><text x="98.4942%" y="559.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (8 samples, 0.64%)</title><rect x="98.2442%" y="533" width="0.6385%" height="15" fill="rgb(214,138,20)" fg:x="1231" fg:w="8"/><text x="98.4942%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.8029%" y="517" width="0.0798%" height="15" fill="rgb(221,170,31)" fg:x="1238" fg:w="1"/><text x="99.0529%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8029%" y="501" width="0.0798%" height="15" fill="rgb(253,207,5)" fg:x="1238" fg:w="1"/><text x="99.0529%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.8029%" y="485" width="0.0798%" height="15" fill="rgb(212,64,37)" fg:x="1238" fg:w="1"/><text x="99.0529%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.8029%" y="469" width="0.0798%" height="15" fill="rgb(208,113,51)" fg:x="1238" fg:w="1"/><text x="99.0529%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.8029%" y="453" width="0.0798%" height="15" fill="rgb(237,15,5)" fg:x="1238" fg:w="1"/><text x="99.0529%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.8029%" y="437" width="0.0798%" height="15" fill="rgb(238,33,18)" fg:x="1238" fg:w="1"/><text x="99.0529%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.8029%" y="421" width="0.0798%" height="15" fill="rgb(253,206,50)" fg:x="1238" fg:w="1"/><text x="99.0529%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.8827%" y="485" width="0.0798%" height="15" fill="rgb(242,158,43)" fg:x="1239" fg:w="1"/><text x="99.1327%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.8827%" y="533" width="0.1596%" height="15" fill="rgb(213,125,27)" fg:x="1239" fg:w="2"/><text x="99.1327%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.8827%" y="517" width="0.1596%" height="15" fill="rgb(233,161,31)" fg:x="1239" fg:w="2"/><text x="99.1327%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.8827%" y="501" width="0.1596%" height="15" fill="rgb(218,135,6)" fg:x="1239" fg:w="2"/><text x="99.1327%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.9625%" y="485" width="0.0798%" height="15" fill="rgb(222,73,53)" fg:x="1240" fg:w="1"/><text x="99.2125%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.9625%" y="469" width="0.0798%" height="15" fill="rgb(229,66,53)" fg:x="1240" fg:w="1"/><text x="99.2125%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.9625%" y="453" width="0.0798%" height="15" fill="rgb(208,128,19)" fg:x="1240" fg:w="1"/><text x="99.2125%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.9625%" y="437" width="0.0798%" height="15" fill="rgb(235,70,27)" fg:x="1240" fg:w="1"/><text x="99.2125%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.9625%" y="421" width="0.0798%" height="15" fill="rgb(241,130,30)" fg:x="1240" fg:w="1"/><text x="99.2125%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.9625%" y="405" width="0.0798%" height="15" fill="rgb(222,57,48)" fg:x="1240" fg:w="1"/><text x="99.2125%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.9625%" y="389" width="0.0798%" height="15" fill="rgb(225,204,29)" fg:x="1240" fg:w="1"/><text x="99.2125%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="98.9625%" y="373" width="0.0798%" height="15" fill="rgb(240,196,35)" fg:x="1240" fg:w="1"/><text x="99.2125%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="98.9625%" y="357" width="0.0798%" height="15" fill="rgb(215,150,16)" fg:x="1240" fg:w="1"/><text x="99.2125%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.0423%" y="405" width="0.1596%" height="15" fill="rgb(209,170,13)" fg:x="1241" fg:w="2"/><text x="99.2923%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1221%" y="389" width="0.0798%" height="15" fill="rgb(235,75,31)" fg:x="1242" fg:w="1"/><text x="99.3721%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.1221%" y="373" width="0.0798%" height="15" fill="rgb(252,1,47)" fg:x="1242" fg:w="1"/><text x="99.3721%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="99.1221%" y="357" width="0.0798%" height="15" fill="rgb(241,2,36)" fg:x="1242" fg:w="1"/><text x="99.3721%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.1221%" y="341" width="0.0798%" height="15" fill="rgb(236,191,4)" fg:x="1242" fg:w="1"/><text x="99.3721%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="99.0423%" y="437" width="0.3192%" height="15" fill="rgb(212,65,35)" fg:x="1241" fg:w="4"/><text x="99.2923%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="99.0423%" y="421" width="0.3192%" height="15" fill="rgb(209,49,33)" fg:x="1241" fg:w="4"/><text x="99.2923%" y="431.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="99.2019%" y="405" width="0.1596%" height="15" fill="rgb(208,36,46)" fg:x="1243" fg:w="2"/><text x="99.4519%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.2019%" y="389" width="0.1596%" height="15" fill="rgb(210,125,2)" fg:x="1243" fg:w="2"/><text x="99.4519%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.2019%" y="373" width="0.1596%" height="15" fill="rgb(225,62,6)" fg:x="1243" fg:w="2"/><text x="99.4519%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.2019%" y="357" width="0.1596%" height="15" fill="rgb(210,54,27)" fg:x="1243" fg:w="2"/><text x="99.4519%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="99.2019%" y="341" width="0.1596%" height="15" fill="rgb(249,189,52)" fg:x="1243" fg:w="2"/><text x="99.4519%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.2817%" y="325" width="0.0798%" height="15" fill="rgb(225,134,40)" fg:x="1244" fg:w="1"/><text x="99.5317%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.2817%" y="309" width="0.0798%" height="15" fill="rgb(206,13,37)" fg:x="1244" fg:w="1"/><text x="99.5317%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.3615%" y="389" width="0.0798%" height="15" fill="rgb(232,114,28)" fg:x="1245" fg:w="1"/><text x="99.6115%" y="399.50"></text></g><g><title>engine::session::Session::load_entity (16 samples, 1.28%)</title><rect x="98.2442%" y="565" width="1.2769%" height="15" fill="rgb(253,215,8)" fg:x="1231" fg:w="16"/><text x="98.4942%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.64%)</title><rect x="98.8827%" y="549" width="0.6385%" height="15" fill="rgb(254,64,19)" fg:x="1239" fg:w="8"/><text x="99.1327%" y="559.50"></text></g><g><title>kernel::model::entity::Entity::from_value (6 samples, 0.48%)</title><rect x="99.0423%" y="533" width="0.4789%" height="15" fill="rgb(242,18,46)" fg:x="1241" fg:w="6"/><text x="99.2923%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="99.0423%" y="517" width="0.4789%" height="15" fill="rgb(239,192,30)" fg:x="1241" fg:w="6"/><text x="99.2923%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="99.0423%" y="501" width="0.4789%" height="15" fill="rgb(232,73,14)" fg:x="1241" fg:w="6"/><text x="99.2923%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="99.0423%" y="485" width="0.4789%" height="15" fill="rgb(225,51,9)" fg:x="1241" fg:w="6"/><text x="99.2923%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="99.0423%" y="469" width="0.4789%" height="15" fill="rgb(242,217,54)" fg:x="1241" fg:w="6"/><text x="99.2923%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.48%)</title><rect x="99.0423%" y="453" width="0.4789%" height="15" fill="rgb(216,93,3)" fg:x="1241" fg:w="6"/><text x="99.2923%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="99.3615%" y="437" width="0.1596%" height="15" fill="rgb(230,119,33)" fg:x="1245" fg:w="2"/><text x="99.6115%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="99.3615%" y="421" width="0.1596%" height="15" fill="rgb(238,170,27)" fg:x="1245" fg:w="2"/><text x="99.6115%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="99.3615%" y="405" width="0.1596%" height="15" fill="rgb(229,8,2)" fg:x="1245" fg:w="2"/><text x="99.6115%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.4413%" y="389" width="0.0798%" height="15" fill="rgb(205,214,42)" fg:x="1246" fg:w="1"/><text x="99.6913%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.5211%" y="501" width="0.0798%" height="15" fill="rgb(245,113,1)" fg:x="1247" fg:w="1"/><text x="99.7711%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.5211%" y="485" width="0.0798%" height="15" fill="rgb(252,50,2)" fg:x="1247" fg:w="1"/><text x="99.7711%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.5211%" y="517" width="0.1596%" height="15" fill="rgb(225,122,24)" fg:x="1247" fg:w="2"/><text x="99.7711%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.6010%" y="501" width="0.0798%" height="15" fill="rgb(234,129,31)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.6010%" y="485" width="0.0798%" height="15" fill="rgb(219,177,4)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.6010%" y="469" width="0.0798%" height="15" fill="rgb(225,142,27)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.6010%" y="453" width="0.0798%" height="15" fill="rgb(205,107,51)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.6010%" y="437" width="0.0798%" height="15" fill="rgb(236,223,15)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.6010%" y="421" width="0.0798%" height="15" fill="rgb(235,133,11)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.6010%" y="405" width="0.0798%" height="15" fill="rgb(247,172,13)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.6010%" y="389" width="0.0798%" height="15" fill="rgb(233,191,41)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.6010%" y="373" width="0.0798%" height="15" fill="rgb(250,65,16)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.6010%" y="357" width="0.0798%" height="15" fill="rgb(206,10,27)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.6010%" y="341" width="0.0798%" height="15" fill="rgb(212,96,22)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.6010%" y="325" width="0.0798%" height="15" fill="rgb(206,50,0)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.6808%" y="469" width="0.0798%" height="15" fill="rgb(249,105,52)" fg:x="1249" fg:w="1"/><text x="99.9308%" y="479.50"></text></g><g><title>kernel::model::entity::Entity::from_value (3 samples, 0.24%)</title><rect x="99.6808%" y="517" width="0.2394%" height="15" fill="rgb(216,93,51)" fg:x="1249" fg:w="3"/><text x="99.9308%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="99.6808%" y="501" width="0.2394%" height="15" fill="rgb(217,172,13)" fg:x="1249" fg:w="3"/><text x="99.9308%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.6808%" y="485" width="0.2394%" height="15" fill="rgb(235,199,38)" fg:x="1249" fg:w="3"/><text x="99.9308%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="99.7606%" y="469" width="0.1596%" height="15" fill="rgb(221,97,33)" fg:x="1250" fg:w="2"/><text x="100.0106%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.7606%" y="453" width="0.1596%" height="15" fill="rgb(205,156,50)" fg:x="1250" fg:w="2"/><text x="100.0106%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.8404%" y="437" width="0.0798%" height="15" fill="rgb(215,142,19)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.8404%" y="421" width="0.0798%" height="15" fill="rgb(232,170,7)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.8404%" y="405" width="0.0798%" height="15" fill="rgb(223,50,17)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.8404%" y="389" width="0.0798%" height="15" fill="rgb(230,103,46)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.8404%" y="373" width="0.0798%" height="15" fill="rgb(254,30,34)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.8404%" y="357" width="0.0798%" height="15" fill="rgb(235,198,1)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.8404%" y="341" width="0.0798%" height="15" fill="rgb(217,105,47)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="351.50"></text></g><g><title>all (1,253 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(231,18,12)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="959.50"></text></g><g><title>simple-9b79c65b (1,253 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(218,196,1)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="943.50">simple-9b79c65b</text></g><g><title>_start (1,253 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(210,32,3)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="927.50">_start</text></g><g><title>__libc_start_main (1,253 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(227,178,30)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="911.50">__libc_start_main</text></g><g><title>main (1,253 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(231,140,27)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (1,253 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(206,66,35)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,253 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(212,34,2)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,253 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(207,201,33)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,253 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(221,135,32)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="831.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,253 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(206,77,31)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="815.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,253 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(252,198,50)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,253 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(206,79,27)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,253 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(228,108,9)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="767.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,253 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(213,9,39)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="751.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,253 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(252,51,13)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="735.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,253 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(218,202,39)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="719.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,253 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(214,122,21)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="703.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,253 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(217,205,48)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="687.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,253 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(230,216,13)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="671.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (297 samples, 23.70%)</title><rect x="76.2969%" y="645" width="23.7031%" height="15" fill="rgb(249,118,4)" fg:x="956" fg:w="297"/><text x="76.5469%" y="655.50">&lt;criterion::routine::Function&lt;M,F,T&gt; a..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (297 samples, 23.70%)</title><rect x="76.2969%" y="629" width="23.7031%" height="15" fill="rgb(212,207,40)" fg:x="956" fg:w="297"/><text x="76.5469%" y="639.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (297 samples, 23.70%)</title><rect x="76.2969%" y="613" width="23.7031%" height="15" fill="rgb(217,156,26)" fg:x="956" fg:w="297"/><text x="76.5469%" y="623.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (60 samples, 4.79%)</title><rect x="95.2115%" y="597" width="4.7885%" height="15" fill="rgb(226,86,34)" fg:x="1193" fg:w="60"/><text x="95.4615%" y="607.50">engine..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (60 samples, 4.79%)</title><rect x="95.2115%" y="581" width="4.7885%" height="15" fill="rgb(217,111,30)" fg:x="1193" fg:w="60"/><text x="95.4615%" y="591.50">engine..</text></g><g><title>kernel::model::EntityPtrResolver::world (6 samples, 0.48%)</title><rect x="99.5211%" y="565" width="0.4789%" height="15" fill="rgb(228,64,18)" fg:x="1247" fg:w="6"/><text x="99.7711%" y="575.50"></text></g><g><title>engine::session::Session::load_entity (6 samples, 0.48%)</title><rect x="99.5211%" y="549" width="0.4789%" height="15" fill="rgb(254,217,48)" fg:x="1247" fg:w="6"/><text x="99.7711%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (6 samples, 0.48%)</title><rect x="99.5211%" y="533" width="0.4789%" height="15" fill="rgb(226,156,48)" fg:x="1247" fg:w="6"/><text x="99.7711%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (1 samples, 0.08%)</title><rect x="99.9202%" y="517" width="0.0798%" height="15" fill="rgb(236,168,20)" fg:x="1252" fg:w="1"/><text x="100.1702%" y="527.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="99.9202%" y="501" width="0.0798%" height="15" fill="rgb(239,210,33)" fg:x="1252" fg:w="1"/><text x="100.1702%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.9202%" y="485" width="0.0798%" height="15" fill="rgb(242,85,17)" fg:x="1252" fg:w="1"/><text x="100.1702%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.9202%" y="469" width="0.0798%" height="15" fill="rgb(221,196,15)" fg:x="1252" fg:w="1"/><text x="100.1702%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.9202%" y="453" width="0.0798%" height="15" fill="rgb(249,76,21)" fg:x="1252" fg:w="1"/><text x="100.1702%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.9202%" y="437" width="0.0798%" height="15" fill="rgb(243,67,29)" fg:x="1252" fg:w="1"/><text x="100.1702%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.9202%" y="421" width="0.0798%" height="15" fill="rgb(240,159,2)" fg:x="1252" fg:w="1"/><text x="100.1702%" y="431.50"></text></g></svg></svg>