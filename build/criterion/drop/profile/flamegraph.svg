<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1190" onload="init(evt)" viewBox="0 0 1200 1190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1190" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1173.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1173.00"> </text><svg id="frames" x="10" width="1180" total_samples="1277"><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="0.0783%" y="773" width="0.0783%" height="15" fill="rgb(219,137,21)" fg:x="1" fg:w="1"/><text x="0.3283%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.0783%" y="757" width="0.0783%" height="15" fill="rgb(242,206,5)" fg:x="1" fg:w="1"/><text x="0.3283%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.2349%" y="741" width="0.0783%" height="15" fill="rgb(217,114,22)" fg:x="3" fg:w="1"/><text x="0.4849%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.5482%" y="693" width="0.0783%" height="15" fill="rgb(253,206,42)" fg:x="7" fg:w="1"/><text x="0.7982%" y="703.50"></text></g><g><title>__libc_free (3 samples, 0.23%)</title><rect x="0.6265%" y="661" width="0.2349%" height="15" fill="rgb(236,102,18)" fg:x="8" fg:w="3"/><text x="0.8765%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.8614%" y="661" width="0.0783%" height="15" fill="rgb(208,59,49)" fg:x="11" fg:w="1"/><text x="1.1114%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.9397%" y="645" width="0.1566%" height="15" fill="rgb(215,194,28)" fg:x="12" fg:w="2"/><text x="1.1897%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="0.9397%" y="629" width="0.1566%" height="15" fill="rgb(243,207,11)" fg:x="12" fg:w="2"/><text x="1.1897%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="0.9397%" y="613" width="0.1566%" height="15" fill="rgb(254,179,35)" fg:x="12" fg:w="2"/><text x="1.1897%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.9397%" y="597" width="0.1566%" height="15" fill="rgb(235,97,3)" fg:x="12" fg:w="2"/><text x="1.1897%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.0963%" y="645" width="0.1566%" height="15" fill="rgb(215,155,33)" fg:x="14" fg:w="2"/><text x="1.3463%" y="655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.10%)</title><rect x="0.3915%" y="725" width="1.0963%" height="15" fill="rgb(223,128,12)" fg:x="5" fg:w="14"/><text x="0.6415%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.10%)</title><rect x="0.3915%" y="709" width="1.0963%" height="15" fill="rgb(208,157,18)" fg:x="5" fg:w="14"/><text x="0.6415%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.86%)</title><rect x="0.6265%" y="693" width="0.8614%" height="15" fill="rgb(249,70,54)" fg:x="8" fg:w="11"/><text x="0.8765%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.86%)</title><rect x="0.6265%" y="677" width="0.8614%" height="15" fill="rgb(244,118,24)" fg:x="8" fg:w="11"/><text x="0.8765%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.55%)</title><rect x="0.9397%" y="661" width="0.5482%" height="15" fill="rgb(211,54,0)" fg:x="12" fg:w="7"/><text x="1.1897%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.23%)</title><rect x="1.2529%" y="645" width="0.2349%" height="15" fill="rgb(245,137,45)" fg:x="16" fg:w="3"/><text x="1.5029%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.3312%" y="629" width="0.1566%" height="15" fill="rgb(232,154,31)" fg:x="17" fg:w="2"/><text x="1.5812%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.49%)</title><rect x="0.0783%" y="789" width="1.4879%" height="15" fill="rgb(253,6,39)" fg:x="1" fg:w="19"/><text x="0.3283%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (18 samples, 1.41%)</title><rect x="0.1566%" y="773" width="1.4096%" height="15" fill="rgb(234,183,24)" fg:x="2" fg:w="18"/><text x="0.4066%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 1.41%)</title><rect x="0.1566%" y="757" width="1.4096%" height="15" fill="rgb(252,84,40)" fg:x="2" fg:w="18"/><text x="0.4066%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (16 samples, 1.25%)</title><rect x="0.3132%" y="741" width="1.2529%" height="15" fill="rgb(224,65,2)" fg:x="4" fg:w="16"/><text x="0.5632%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.4879%" y="725" width="0.0783%" height="15" fill="rgb(229,38,24)" fg:x="19" fg:w="1"/><text x="1.7379%" y="735.50"></text></g><g><title>kernel::model::When::to_utc_time (1 samples, 0.08%)</title><rect x="1.5662%" y="709" width="0.0783%" height="15" fill="rgb(218,131,50)" fg:x="20" fg:w="1"/><text x="1.8162%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.8011%" y="629" width="0.0783%" height="15" fill="rgb(233,106,18)" fg:x="23" fg:w="1"/><text x="2.0511%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.8794%" y="597" width="0.0783%" height="15" fill="rgb(220,216,11)" fg:x="24" fg:w="1"/><text x="2.1294%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="1.9577%" y="581" width="0.1566%" height="15" fill="rgb(251,100,45)" fg:x="25" fg:w="2"/><text x="2.2077%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="1.9577%" y="565" width="0.1566%" height="15" fill="rgb(235,143,32)" fg:x="25" fg:w="2"/><text x="2.2077%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="1.9577%" y="549" width="0.1566%" height="15" fill="rgb(248,124,34)" fg:x="25" fg:w="2"/><text x="2.2077%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="2.0360%" y="533" width="0.0783%" height="15" fill="rgb(225,221,4)" fg:x="26" fg:w="1"/><text x="2.2860%" y="543.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (4 samples, 0.31%)</title><rect x="1.8794%" y="629" width="0.3132%" height="15" fill="rgb(242,27,43)" fg:x="24" fg:w="4"/><text x="2.1294%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="1.8794%" y="613" width="0.3132%" height="15" fill="rgb(227,54,8)" fg:x="24" fg:w="4"/><text x="2.1294%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (3 samples, 0.23%)</title><rect x="1.9577%" y="597" width="0.2349%" height="15" fill="rgb(253,139,49)" fg:x="25" fg:w="3"/><text x="2.2077%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="2.1143%" y="581" width="0.0783%" height="15" fill="rgb(231,26,43)" fg:x="27" fg:w="1"/><text x="2.3643%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="2.1143%" y="565" width="0.0783%" height="15" fill="rgb(207,121,39)" fg:x="27" fg:w="1"/><text x="2.3643%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="2.1143%" y="549" width="0.0783%" height="15" fill="rgb(223,101,35)" fg:x="27" fg:w="1"/><text x="2.3643%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="2.1143%" y="533" width="0.0783%" height="15" fill="rgb(232,87,23)" fg:x="27" fg:w="1"/><text x="2.3643%" y="543.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (9 samples, 0.70%)</title><rect x="1.6445%" y="693" width="0.7048%" height="15" fill="rgb(225,180,29)" fg:x="21" fg:w="9"/><text x="1.8945%" y="703.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (9 samples, 0.70%)</title><rect x="1.6445%" y="677" width="0.7048%" height="15" fill="rgb(225,25,17)" fg:x="21" fg:w="9"/><text x="1.8945%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.63%)</title><rect x="1.7228%" y="661" width="0.6265%" height="15" fill="rgb(223,8,52)" fg:x="22" fg:w="8"/><text x="1.9728%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.63%)</title><rect x="1.7228%" y="645" width="0.6265%" height="15" fill="rgb(246,42,21)" fg:x="22" fg:w="8"/><text x="1.9728%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="2.1926%" y="629" width="0.1566%" height="15" fill="rgb(205,64,43)" fg:x="28" fg:w="2"/><text x="2.4426%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="2.2709%" y="613" width="0.0783%" height="15" fill="rgb(221,160,13)" fg:x="29" fg:w="1"/><text x="2.5209%" y="623.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="2.3493%" y="629" width="0.1566%" height="15" fill="rgb(239,58,35)" fg:x="30" fg:w="2"/><text x="2.5993%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.23%)</title><rect x="2.3493%" y="645" width="0.2349%" height="15" fill="rgb(251,26,40)" fg:x="30" fg:w="3"/><text x="2.5993%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.5059%" y="629" width="0.0783%" height="15" fill="rgb(247,0,4)" fg:x="32" fg:w="1"/><text x="2.7559%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (17 samples, 1.33%)</title><rect x="1.5662%" y="741" width="1.3312%" height="15" fill="rgb(218,130,10)" fg:x="20" fg:w="17"/><text x="1.8162%" y="751.50"></text></g><g><title>engine::internal::Entities::add_persisted (17 samples, 1.33%)</title><rect x="1.5662%" y="725" width="1.3312%" height="15" fill="rgb(239,32,7)" fg:x="20" fg:w="17"/><text x="1.8162%" y="735.50"></text></g><g><title>kernel::model::deserialize_entity (16 samples, 1.25%)</title><rect x="1.6445%" y="709" width="1.2529%" height="15" fill="rgb(210,192,24)" fg:x="21" fg:w="16"/><text x="1.8945%" y="719.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.55%)</title><rect x="2.3493%" y="693" width="0.5482%" height="15" fill="rgb(226,212,17)" fg:x="30" fg:w="7"/><text x="2.5993%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.55%)</title><rect x="2.3493%" y="677" width="0.5482%" height="15" fill="rgb(219,201,28)" fg:x="30" fg:w="7"/><text x="2.5993%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.55%)</title><rect x="2.3493%" y="661" width="0.5482%" height="15" fill="rgb(235,207,41)" fg:x="30" fg:w="7"/><text x="2.5993%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.31%)</title><rect x="2.5842%" y="645" width="0.3132%" height="15" fill="rgb(241,95,54)" fg:x="33" fg:w="4"/><text x="2.8342%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="2.6625%" y="629" width="0.2349%" height="15" fill="rgb(248,12,23)" fg:x="34" fg:w="3"/><text x="2.9125%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.8191%" y="613" width="0.0783%" height="15" fill="rgb(228,173,4)" fg:x="36" fg:w="1"/><text x="3.0691%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.8191%" y="597" width="0.0783%" height="15" fill="rgb(254,99,5)" fg:x="36" fg:w="1"/><text x="3.0691%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.8191%" y="581" width="0.0783%" height="15" fill="rgb(212,184,17)" fg:x="36" fg:w="1"/><text x="3.0691%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.8974%" y="741" width="0.0783%" height="15" fill="rgb(252,174,1)" fg:x="37" fg:w="1"/><text x="3.1474%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (20 samples, 1.57%)</title><rect x="1.5662%" y="757" width="1.5662%" height="15" fill="rgb(241,118,51)" fg:x="20" fg:w="20"/><text x="1.8162%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="2.9757%" y="741" width="0.1566%" height="15" fill="rgb(227,94,47)" fg:x="38" fg:w="2"/><text x="3.2257%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="2.9757%" y="725" width="0.1566%" height="15" fill="rgb(229,104,2)" fg:x="38" fg:w="2"/><text x="3.2257%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="2.9757%" y="709" width="0.1566%" height="15" fill="rgb(219,28,31)" fg:x="38" fg:w="2"/><text x="3.2257%" y="719.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="2.9757%" y="693" width="0.1566%" height="15" fill="rgb(233,109,36)" fg:x="38" fg:w="2"/><text x="3.2257%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="2.9757%" y="677" width="0.1566%" height="15" fill="rgb(246,88,11)" fg:x="38" fg:w="2"/><text x="3.2257%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="2.9757%" y="661" width="0.1566%" height="15" fill="rgb(209,212,17)" fg:x="38" fg:w="2"/><text x="3.2257%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="2.9757%" y="645" width="0.1566%" height="15" fill="rgb(243,59,29)" fg:x="38" fg:w="2"/><text x="3.2257%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="2.9757%" y="629" width="0.1566%" height="15" fill="rgb(244,205,48)" fg:x="38" fg:w="2"/><text x="3.2257%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="2.9757%" y="613" width="0.1566%" height="15" fill="rgb(227,30,6)" fg:x="38" fg:w="2"/><text x="3.2257%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="2.9757%" y="597" width="0.1566%" height="15" fill="rgb(220,205,48)" fg:x="38" fg:w="2"/><text x="3.2257%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="2.9757%" y="581" width="0.1566%" height="15" fill="rgb(250,94,14)" fg:x="38" fg:w="2"/><text x="3.2257%" y="591.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="2.9757%" y="565" width="0.1566%" height="15" fill="rgb(216,119,42)" fg:x="38" fg:w="2"/><text x="3.2257%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="2.9757%" y="549" width="0.1566%" height="15" fill="rgb(232,155,0)" fg:x="38" fg:w="2"/><text x="3.2257%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="2.9757%" y="533" width="0.1566%" height="15" fill="rgb(212,24,32)" fg:x="38" fg:w="2"/><text x="3.2257%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="2.9757%" y="517" width="0.1566%" height="15" fill="rgb(216,69,20)" fg:x="38" fg:w="2"/><text x="3.2257%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="2.9757%" y="501" width="0.1566%" height="15" fill="rgb(229,73,31)" fg:x="38" fg:w="2"/><text x="3.2257%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="2.9757%" y="485" width="0.1566%" height="15" fill="rgb(224,219,20)" fg:x="38" fg:w="2"/><text x="3.2257%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="2.9757%" y="469" width="0.1566%" height="15" fill="rgb(215,146,41)" fg:x="38" fg:w="2"/><text x="3.2257%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="2.9757%" y="453" width="0.1566%" height="15" fill="rgb(244,71,31)" fg:x="38" fg:w="2"/><text x="3.2257%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="2.9757%" y="437" width="0.1566%" height="15" fill="rgb(224,24,11)" fg:x="38" fg:w="2"/><text x="3.2257%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="2.9757%" y="421" width="0.1566%" height="15" fill="rgb(229,76,15)" fg:x="38" fg:w="2"/><text x="3.2257%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="2.9757%" y="405" width="0.1566%" height="15" fill="rgb(209,93,2)" fg:x="38" fg:w="2"/><text x="3.2257%" y="415.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="2.9757%" y="389" width="0.1566%" height="15" fill="rgb(216,200,50)" fg:x="38" fg:w="2"/><text x="3.2257%" y="399.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="2.9757%" y="373" width="0.1566%" height="15" fill="rgb(211,67,34)" fg:x="38" fg:w="2"/><text x="3.2257%" y="383.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::begin (1 samples, 0.08%)</title><rect x="3.1323%" y="757" width="0.0783%" height="15" fill="rgb(225,87,47)" fg:x="40" fg:w="1"/><text x="3.3823%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="3.2106%" y="757" width="0.0783%" height="15" fill="rgb(217,185,16)" fg:x="41" fg:w="1"/><text x="3.4606%" y="767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="3.2106%" y="741" width="0.0783%" height="15" fill="rgb(205,0,0)" fg:x="41" fg:w="1"/><text x="3.4606%" y="751.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="3.2890%" y="709" width="0.0783%" height="15" fill="rgb(207,116,45)" fg:x="42" fg:w="1"/><text x="3.5390%" y="719.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="3.2890%" y="757" width="0.1566%" height="15" fill="rgb(221,156,26)" fg:x="42" fg:w="2"/><text x="3.5390%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="3.2890%" y="741" width="0.1566%" height="15" fill="rgb(213,140,4)" fg:x="42" fg:w="2"/><text x="3.5390%" y="751.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="3.2890%" y="725" width="0.1566%" height="15" fill="rgb(231,224,15)" fg:x="42" fg:w="2"/><text x="3.5390%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="3.3673%" y="709" width="0.0783%" height="15" fill="rgb(244,76,20)" fg:x="43" fg:w="1"/><text x="3.6173%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="3.3673%" y="693" width="0.0783%" height="15" fill="rgb(238,117,7)" fg:x="43" fg:w="1"/><text x="3.6173%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="3.3673%" y="677" width="0.0783%" height="15" fill="rgb(235,1,10)" fg:x="43" fg:w="1"/><text x="3.6173%" y="687.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (2 samples, 0.16%)</title><rect x="3.4456%" y="757" width="0.1566%" height="15" fill="rgb(216,165,6)" fg:x="44" fg:w="2"/><text x="3.6956%" y="767.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="3.4456%" y="741" width="0.1566%" height="15" fill="rgb(246,91,35)" fg:x="44" fg:w="2"/><text x="3.6956%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="3.4456%" y="725" width="0.1566%" height="15" fill="rgb(228,96,24)" fg:x="44" fg:w="2"/><text x="3.6956%" y="735.50"></text></g><g><title>_IO_default_xsputn (2 samples, 0.16%)</title><rect x="3.8371%" y="677" width="0.1566%" height="15" fill="rgb(254,217,53)" fg:x="49" fg:w="2"/><text x="4.0871%" y="687.50"></text></g><g><title>dlerror (4 samples, 0.31%)</title><rect x="3.7588%" y="709" width="0.3132%" height="15" fill="rgb(209,60,0)" fg:x="48" fg:w="4"/><text x="4.0088%" y="719.50"></text></g><g><title>__asprintf (4 samples, 0.31%)</title><rect x="3.7588%" y="693" width="0.3132%" height="15" fill="rgb(250,93,26)" fg:x="48" fg:w="4"/><text x="4.0088%" y="703.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="3.9937%" y="677" width="0.0783%" height="15" fill="rgb(211,9,40)" fg:x="51" fg:w="1"/><text x="4.2437%" y="687.50"></text></g><g><title>libloading::os::unix::Library::open (17 samples, 1.33%)</title><rect x="3.6805%" y="725" width="1.3312%" height="15" fill="rgb(242,57,20)" fg:x="47" fg:w="17"/><text x="3.9305%" y="735.50"></text></g><g><title>dlopen (12 samples, 0.94%)</title><rect x="4.0720%" y="709" width="0.9397%" height="15" fill="rgb(248,85,48)" fg:x="52" fg:w="12"/><text x="4.3220%" y="719.50"></text></g><g><title>_dl_catch_error (12 samples, 0.94%)</title><rect x="4.0720%" y="693" width="0.9397%" height="15" fill="rgb(212,117,2)" fg:x="52" fg:w="12"/><text x="4.3220%" y="703.50"></text></g><g><title>_dl_catch_exception (12 samples, 0.94%)</title><rect x="4.0720%" y="677" width="0.9397%" height="15" fill="rgb(243,19,3)" fg:x="52" fg:w="12"/><text x="4.3220%" y="687.50"></text></g><g><title>_dl_catch_exception (11 samples, 0.86%)</title><rect x="4.1504%" y="661" width="0.8614%" height="15" fill="rgb(232,217,24)" fg:x="53" fg:w="11"/><text x="4.4004%" y="671.50"></text></g><g><title>_dl_catch_exception (11 samples, 0.86%)</title><rect x="4.1504%" y="645" width="0.8614%" height="15" fill="rgb(224,175,40)" fg:x="53" fg:w="11"/><text x="4.4004%" y="655.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (18 samples, 1.41%)</title><rect x="3.6805%" y="741" width="1.4096%" height="15" fill="rgb(212,162,32)" fg:x="47" fg:w="18"/><text x="3.9305%" y="751.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="5.0117%" y="725" width="0.0783%" height="15" fill="rgb(215,9,4)" fg:x="64" fg:w="1"/><text x="5.2617%" y="735.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="5.0117%" y="709" width="0.0783%" height="15" fill="rgb(242,42,7)" fg:x="64" fg:w="1"/><text x="5.2617%" y="719.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (47 samples, 3.68%)</title><rect x="1.5662%" y="789" width="3.6805%" height="15" fill="rgb(242,184,45)" fg:x="20" fg:w="47"/><text x="1.8162%" y="799.50">&lt;eng..</text></g><g><title>engine::session::Session::new (47 samples, 3.68%)</title><rect x="1.5662%" y="773" width="3.6805%" height="15" fill="rgb(228,111,51)" fg:x="20" fg:w="47"/><text x="1.8162%" y="783.50">engi..</text></g><g><title>kernel::plugins::SessionPlugins::initialize (21 samples, 1.64%)</title><rect x="3.6022%" y="757" width="1.6445%" height="15" fill="rgb(236,147,17)" fg:x="46" fg:w="21"/><text x="3.8522%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="5.0901%" y="741" width="0.1566%" height="15" fill="rgb(210,75,22)" fg:x="65" fg:w="2"/><text x="5.3401%" y="751.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="5.0901%" y="725" width="0.1566%" height="15" fill="rgb(217,159,45)" fg:x="65" fg:w="2"/><text x="5.3401%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.2467%" y="677" width="0.0783%" height="15" fill="rgb(245,165,53)" fg:x="67" fg:w="1"/><text x="5.4967%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.2467%" y="661" width="0.0783%" height="15" fill="rgb(251,190,50)" fg:x="67" fg:w="1"/><text x="5.4967%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="5.2467%" y="645" width="0.0783%" height="15" fill="rgb(208,203,29)" fg:x="67" fg:w="1"/><text x="5.4967%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="5.2467%" y="629" width="0.0783%" height="15" fill="rgb(207,209,35)" fg:x="67" fg:w="1"/><text x="5.4967%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="5.2467%" y="613" width="0.0783%" height="15" fill="rgb(230,144,49)" fg:x="67" fg:w="1"/><text x="5.4967%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="5.2467%" y="597" width="0.0783%" height="15" fill="rgb(229,31,6)" fg:x="67" fg:w="1"/><text x="5.4967%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.2467%" y="581" width="0.0783%" height="15" fill="rgb(251,129,24)" fg:x="67" fg:w="1"/><text x="5.4967%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="5.2467%" y="773" width="0.1566%" height="15" fill="rgb(235,105,15)" fg:x="67" fg:w="2"/><text x="5.4967%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="5.2467%" y="757" width="0.1566%" height="15" fill="rgb(216,52,43)" fg:x="67" fg:w="2"/><text x="5.4967%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="5.2467%" y="741" width="0.1566%" height="15" fill="rgb(238,144,41)" fg:x="67" fg:w="2"/><text x="5.4967%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="5.2467%" y="725" width="0.1566%" height="15" fill="rgb(243,63,9)" fg:x="67" fg:w="2"/><text x="5.4967%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="5.2467%" y="709" width="0.1566%" height="15" fill="rgb(246,208,1)" fg:x="67" fg:w="2"/><text x="5.4967%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="5.2467%" y="693" width="0.1566%" height="15" fill="rgb(233,182,18)" fg:x="67" fg:w="2"/><text x="5.4967%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="5.3250%" y="677" width="0.0783%" height="15" fill="rgb(242,224,8)" fg:x="68" fg:w="1"/><text x="5.5750%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="5.3250%" y="661" width="0.0783%" height="15" fill="rgb(243,54,37)" fg:x="68" fg:w="1"/><text x="5.5750%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="5.4033%" y="773" width="0.0783%" height="15" fill="rgb(233,192,12)" fg:x="69" fg:w="1"/><text x="5.6533%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="5.4033%" y="757" width="0.0783%" height="15" fill="rgb(251,192,53)" fg:x="69" fg:w="1"/><text x="5.6533%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="5.4033%" y="741" width="0.0783%" height="15" fill="rgb(246,141,26)" fg:x="69" fg:w="1"/><text x="5.6533%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.4033%" y="725" width="0.0783%" height="15" fill="rgb(239,195,19)" fg:x="69" fg:w="1"/><text x="5.6533%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::surround::Surroundings&gt; (1 samples, 0.08%)</title><rect x="5.4816%" y="773" width="0.0783%" height="15" fill="rgb(241,16,39)" fg:x="70" fg:w="1"/><text x="5.7316%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="5.4816%" y="757" width="0.0783%" height="15" fill="rgb(223,13,53)" fg:x="70" fg:w="1"/><text x="5.7316%" y="767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="5.4816%" y="741" width="0.0783%" height="15" fill="rgb(214,227,0)" fg:x="70" fg:w="1"/><text x="5.7316%" y="751.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="5.5599%" y="741" width="0.0783%" height="15" fill="rgb(228,103,26)" fg:x="71" fg:w="1"/><text x="5.8099%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.5599%" y="725" width="0.0783%" height="15" fill="rgb(254,177,53)" fg:x="71" fg:w="1"/><text x="5.8099%" y="735.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="5.6382%" y="709" width="0.0783%" height="15" fill="rgb(208,201,34)" fg:x="72" fg:w="1"/><text x="5.8882%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.6382%" y="693" width="0.0783%" height="15" fill="rgb(212,39,5)" fg:x="72" fg:w="1"/><text x="5.8882%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.6382%" y="677" width="0.0783%" height="15" fill="rgb(246,117,3)" fg:x="72" fg:w="1"/><text x="5.8882%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="5.6382%" y="661" width="0.0783%" height="15" fill="rgb(244,118,39)" fg:x="72" fg:w="1"/><text x="5.8882%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="5.6382%" y="645" width="0.0783%" height="15" fill="rgb(241,64,10)" fg:x="72" fg:w="1"/><text x="5.8882%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="5.6382%" y="629" width="0.0783%" height="15" fill="rgb(229,39,44)" fg:x="72" fg:w="1"/><text x="5.8882%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.6382%" y="613" width="0.0783%" height="15" fill="rgb(230,226,3)" fg:x="72" fg:w="1"/><text x="5.8882%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.6382%" y="597" width="0.0783%" height="15" fill="rgb(222,13,42)" fg:x="72" fg:w="1"/><text x="5.8882%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="5.6382%" y="581" width="0.0783%" height="15" fill="rgb(247,180,54)" fg:x="72" fg:w="1"/><text x="5.8882%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="5.6382%" y="565" width="0.0783%" height="15" fill="rgb(205,96,16)" fg:x="72" fg:w="1"/><text x="5.8882%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="5.6382%" y="549" width="0.0783%" height="15" fill="rgb(205,100,21)" fg:x="72" fg:w="1"/><text x="5.8882%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="5.6382%" y="533" width="0.0783%" height="15" fill="rgb(248,51,4)" fg:x="72" fg:w="1"/><text x="5.8882%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.6382%" y="517" width="0.0783%" height="15" fill="rgb(217,197,30)" fg:x="72" fg:w="1"/><text x="5.8882%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.7165%" y="709" width="0.0783%" height="15" fill="rgb(240,179,40)" fg:x="73" fg:w="1"/><text x="5.9665%" y="719.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.23%)</title><rect x="5.6382%" y="741" width="0.2349%" height="15" fill="rgb(212,185,35)" fg:x="72" fg:w="3"/><text x="5.8882%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.23%)</title><rect x="5.6382%" y="725" width="0.2349%" height="15" fill="rgb(251,222,31)" fg:x="72" fg:w="3"/><text x="5.8882%" y="735.50"></text></g><g><title>engine::session::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="5.7948%" y="709" width="0.0783%" height="15" fill="rgb(208,140,36)" fg:x="74" fg:w="1"/><text x="6.0448%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="5.8731%" y="693" width="0.0783%" height="15" fill="rgb(220,148,1)" fg:x="75" fg:w="1"/><text x="6.1231%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="5.8731%" y="677" width="0.0783%" height="15" fill="rgb(254,4,28)" fg:x="75" fg:w="1"/><text x="6.1231%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.8731%" y="661" width="0.0783%" height="15" fill="rgb(222,185,44)" fg:x="75" fg:w="1"/><text x="6.1231%" y="671.50"></text></g><g><title>engine::identifiers::model::get_gid (3 samples, 0.23%)</title><rect x="5.8731%" y="741" width="0.2349%" height="15" fill="rgb(215,74,39)" fg:x="75" fg:w="3"/><text x="6.1231%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.23%)</title><rect x="5.8731%" y="725" width="0.2349%" height="15" fill="rgb(247,86,4)" fg:x="75" fg:w="3"/><text x="6.1231%" y="735.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.23%)</title><rect x="5.8731%" y="709" width="0.2349%" height="15" fill="rgb(231,105,32)" fg:x="75" fg:w="3"/><text x="6.1231%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="5.9514%" y="693" width="0.1566%" height="15" fill="rgb(222,65,35)" fg:x="76" fg:w="2"/><text x="6.2014%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="5.9514%" y="677" width="0.1566%" height="15" fill="rgb(218,145,35)" fg:x="76" fg:w="2"/><text x="6.2014%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="6.0298%" y="661" width="0.0783%" height="15" fill="rgb(208,7,15)" fg:x="77" fg:w="1"/><text x="6.2798%" y="671.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.63%)</title><rect x="6.1864%" y="693" width="0.6265%" height="15" fill="rgb(209,83,13)" fg:x="79" fg:w="8"/><text x="6.4364%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.63%)</title><rect x="6.1864%" y="677" width="0.6265%" height="15" fill="rgb(218,3,10)" fg:x="79" fg:w="8"/><text x="6.4364%" y="687.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.47%)</title><rect x="6.3430%" y="661" width="0.4699%" height="15" fill="rgb(211,219,4)" fg:x="81" fg:w="6"/><text x="6.5930%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.31%)</title><rect x="6.4996%" y="645" width="0.3132%" height="15" fill="rgb(228,194,12)" fg:x="83" fg:w="4"/><text x="6.7496%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.23%)</title><rect x="6.5779%" y="629" width="0.2349%" height="15" fill="rgb(210,175,7)" fg:x="84" fg:w="3"/><text x="6.8279%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="6.6562%" y="613" width="0.1566%" height="15" fill="rgb(243,132,6)" fg:x="85" fg:w="2"/><text x="6.9062%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="6.6562%" y="597" width="0.1566%" height="15" fill="rgb(207,72,18)" fg:x="85" fg:w="2"/><text x="6.9062%" y="607.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="6.6562%" y="581" width="0.1566%" height="15" fill="rgb(236,1,18)" fg:x="85" fg:w="2"/><text x="6.9062%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.8912%" y="677" width="0.0783%" height="15" fill="rgb(227,0,18)" fg:x="88" fg:w="1"/><text x="7.1412%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.47%)</title><rect x="6.9695%" y="677" width="0.4699%" height="15" fill="rgb(247,37,5)" fg:x="89" fg:w="6"/><text x="7.2195%" y="687.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.31%)</title><rect x="7.1261%" y="661" width="0.3132%" height="15" fill="rgb(237,179,24)" fg:x="91" fg:w="4"/><text x="7.3761%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="7.2827%" y="645" width="0.1566%" height="15" fill="rgb(226,53,20)" fg:x="93" fg:w="2"/><text x="7.5327%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.3610%" y="629" width="0.0783%" height="15" fill="rgb(247,75,7)" fg:x="94" fg:w="1"/><text x="7.6110%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="7.3610%" y="613" width="0.0783%" height="15" fill="rgb(233,96,12)" fg:x="94" fg:w="1"/><text x="7.6110%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.3610%" y="597" width="0.0783%" height="15" fill="rgb(224,125,0)" fg:x="94" fg:w="1"/><text x="7.6110%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="7.5176%" y="629" width="0.0783%" height="15" fill="rgb(224,92,25)" fg:x="96" fg:w="1"/><text x="7.7676%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.5176%" y="613" width="0.0783%" height="15" fill="rgb(224,42,24)" fg:x="96" fg:w="1"/><text x="7.7676%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.5176%" y="597" width="0.0783%" height="15" fill="rgb(234,132,49)" fg:x="96" fg:w="1"/><text x="7.7676%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="7.5176%" y="661" width="0.1566%" height="15" fill="rgb(248,100,35)" fg:x="96" fg:w="2"/><text x="7.7676%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="7.5176%" y="645" width="0.1566%" height="15" fill="rgb(239,94,40)" fg:x="96" fg:w="2"/><text x="7.7676%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="7.5959%" y="629" width="0.0783%" height="15" fill="rgb(235,139,28)" fg:x="97" fg:w="1"/><text x="7.8459%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="7.5959%" y="613" width="0.0783%" height="15" fill="rgb(217,144,7)" fg:x="97" fg:w="1"/><text x="7.8459%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.5959%" y="597" width="0.0783%" height="15" fill="rgb(227,55,4)" fg:x="97" fg:w="1"/><text x="7.8459%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="7.6742%" y="661" width="0.3132%" height="15" fill="rgb(252,82,54)" fg:x="98" fg:w="4"/><text x="7.9242%" y="671.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.31%)</title><rect x="7.6742%" y="645" width="0.3132%" height="15" fill="rgb(245,172,4)" fg:x="98" fg:w="4"/><text x="7.9242%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.9092%" y="629" width="0.0783%" height="15" fill="rgb(207,26,27)" fg:x="101" fg:w="1"/><text x="8.1592%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.9092%" y="613" width="0.0783%" height="15" fill="rgb(252,98,18)" fg:x="101" fg:w="1"/><text x="8.1592%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="7.9875%" y="645" width="0.2349%" height="15" fill="rgb(244,8,26)" fg:x="102" fg:w="3"/><text x="8.2375%" y="655.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="7.9875%" y="629" width="0.2349%" height="15" fill="rgb(237,173,45)" fg:x="102" fg:w="3"/><text x="8.2375%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.1441%" y="613" width="0.0783%" height="15" fill="rgb(208,213,49)" fg:x="104" fg:w="1"/><text x="8.3941%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.1441%" y="597" width="0.0783%" height="15" fill="rgb(212,122,37)" fg:x="104" fg:w="1"/><text x="8.3941%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.39%)</title><rect x="8.2224%" y="645" width="0.3915%" height="15" fill="rgb(213,80,17)" fg:x="105" fg:w="5"/><text x="8.4724%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="8.3007%" y="629" width="0.3132%" height="15" fill="rgb(206,210,43)" fg:x="106" fg:w="4"/><text x="8.5507%" y="639.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.31%)</title><rect x="8.3007%" y="613" width="0.3132%" height="15" fill="rgb(229,214,3)" fg:x="106" fg:w="4"/><text x="8.5507%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.31%)</title><rect x="8.3007%" y="597" width="0.3132%" height="15" fill="rgb(235,213,29)" fg:x="106" fg:w="4"/><text x="8.5507%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="8.4573%" y="581" width="0.1566%" height="15" fill="rgb(248,135,26)" fg:x="108" fg:w="2"/><text x="8.7073%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.78%)</title><rect x="7.9875%" y="661" width="0.7831%" height="15" fill="rgb(242,188,12)" fg:x="102" fg:w="10"/><text x="8.2375%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.6139%" y="645" width="0.1566%" height="15" fill="rgb(245,38,12)" fg:x="110" fg:w="2"/><text x="8.8639%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="8.6139%" y="629" width="0.1566%" height="15" fill="rgb(218,42,13)" fg:x="110" fg:w="2"/><text x="8.8639%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="8.6139%" y="613" width="0.1566%" height="15" fill="rgb(238,132,49)" fg:x="110" fg:w="2"/><text x="8.8639%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.49%)</title><rect x="7.4393%" y="677" width="1.4879%" height="15" fill="rgb(209,196,19)" fg:x="95" fg:w="19"/><text x="7.6893%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.7706%" y="661" width="0.1566%" height="15" fill="rgb(244,131,22)" fg:x="112" fg:w="2"/><text x="9.0206%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.8489%" y="645" width="0.0783%" height="15" fill="rgb(223,18,34)" fg:x="113" fg:w="1"/><text x="9.0989%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.8489%" y="629" width="0.0783%" height="15" fill="rgb(252,124,54)" fg:x="113" fg:w="1"/><text x="9.0989%" y="639.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (42 samples, 3.29%)</title><rect x="6.1081%" y="709" width="3.2890%" height="15" fill="rgb(229,106,42)" fg:x="78" fg:w="42"/><text x="6.3581%" y="719.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (33 samples, 2.58%)</title><rect x="6.8128%" y="693" width="2.5842%" height="15" fill="rgb(221,129,1)" fg:x="87" fg:w="33"/><text x="7.0628%" y="703.50">se..</text></g><g><title>std::io::Write::write_all (6 samples, 0.47%)</title><rect x="8.9272%" y="677" width="0.4699%" height="15" fill="rgb(229,74,15)" fg:x="114" fg:w="6"/><text x="9.1772%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.31%)</title><rect x="9.0838%" y="661" width="0.3132%" height="15" fill="rgb(210,206,50)" fg:x="116" fg:w="4"/><text x="9.3338%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.23%)</title><rect x="9.1621%" y="645" width="0.2349%" height="15" fill="rgb(251,114,31)" fg:x="117" fg:w="3"/><text x="9.4121%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="9.3187%" y="629" width="0.0783%" height="15" fill="rgb(215,225,28)" fg:x="119" fg:w="1"/><text x="9.5687%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.3187%" y="613" width="0.0783%" height="15" fill="rgb(237,109,14)" fg:x="119" fg:w="1"/><text x="9.5687%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="9.3187%" y="597" width="0.0783%" height="15" fill="rgb(230,13,37)" fg:x="119" fg:w="1"/><text x="9.5687%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.3970%" y="677" width="0.0783%" height="15" fill="rgb(231,40,28)" fg:x="120" fg:w="1"/><text x="9.6470%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.4753%" y="677" width="0.0783%" height="15" fill="rgb(231,202,18)" fg:x="121" fg:w="1"/><text x="9.7253%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="9.5536%" y="661" width="0.1566%" height="15" fill="rgb(225,33,18)" fg:x="122" fg:w="2"/><text x="9.8036%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.7103%" y="645" width="0.0783%" height="15" fill="rgb(223,64,47)" fg:x="124" fg:w="1"/><text x="9.9603%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="9.7886%" y="645" width="0.1566%" height="15" fill="rgb(234,114,13)" fg:x="125" fg:w="2"/><text x="10.0386%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="9.7886%" y="629" width="0.1566%" height="15" fill="rgb(248,56,40)" fg:x="125" fg:w="2"/><text x="10.0386%" y="639.50"></text></g><g><title>__libc_free (3 samples, 0.23%)</title><rect x="10.0235%" y="629" width="0.2349%" height="15" fill="rgb(221,194,21)" fg:x="128" fg:w="3"/><text x="10.2735%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.2584%" y="629" width="0.0783%" height="15" fill="rgb(242,108,46)" fg:x="131" fg:w="1"/><text x="10.5084%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.2584%" y="613" width="0.0783%" height="15" fill="rgb(220,106,10)" fg:x="131" fg:w="1"/><text x="10.5084%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="10.3367%" y="629" width="0.1566%" height="15" fill="rgb(211,88,4)" fg:x="132" fg:w="2"/><text x="10.5867%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="10.3367%" y="613" width="0.1566%" height="15" fill="rgb(214,95,34)" fg:x="132" fg:w="2"/><text x="10.5867%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="10.3367%" y="597" width="0.1566%" height="15" fill="rgb(250,160,33)" fg:x="132" fg:w="2"/><text x="10.5867%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.17%)</title><rect x="9.3970%" y="709" width="1.1746%" height="15" fill="rgb(225,29,10)" fg:x="120" fg:w="15"/><text x="9.6470%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.17%)</title><rect x="9.3970%" y="693" width="1.1746%" height="15" fill="rgb(224,28,30)" fg:x="120" fg:w="15"/><text x="9.6470%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.02%)</title><rect x="9.5536%" y="677" width="1.0180%" height="15" fill="rgb(231,77,4)" fg:x="122" fg:w="13"/><text x="9.8036%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.86%)</title><rect x="9.7103%" y="661" width="0.8614%" height="15" fill="rgb(209,63,21)" fg:x="124" fg:w="11"/><text x="9.9603%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.63%)</title><rect x="9.9452%" y="645" width="0.6265%" height="15" fill="rgb(226,22,11)" fg:x="127" fg:w="8"/><text x="10.1952%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.4933%" y="629" width="0.0783%" height="15" fill="rgb(216,82,30)" fg:x="134" fg:w="1"/><text x="10.7433%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.4933%" y="613" width="0.0783%" height="15" fill="rgb(246,227,38)" fg:x="134" fg:w="1"/><text x="10.7433%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="10.5717%" y="661" width="0.3132%" height="15" fill="rgb(251,203,53)" fg:x="135" fg:w="4"/><text x="10.8217%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="10.7283%" y="645" width="0.1566%" height="15" fill="rgb(254,101,1)" fg:x="137" fg:w="2"/><text x="10.9783%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="10.8066%" y="629" width="0.0783%" height="15" fill="rgb(241,180,5)" fg:x="138" fg:w="1"/><text x="11.0566%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="10.8849%" y="661" width="0.0783%" height="15" fill="rgb(218,168,4)" fg:x="139" fg:w="1"/><text x="11.1349%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="10.9632%" y="629" width="0.2349%" height="15" fill="rgb(224,223,32)" fg:x="140" fg:w="3"/><text x="11.2132%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="11.0415%" y="613" width="0.1566%" height="15" fill="rgb(236,106,22)" fg:x="141" fg:w="2"/><text x="11.2915%" y="623.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="11.0415%" y="597" width="0.1566%" height="15" fill="rgb(206,121,5)" fg:x="141" fg:w="2"/><text x="11.2915%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.1981%" y="613" width="0.0783%" height="15" fill="rgb(233,87,28)" fg:x="143" fg:w="1"/><text x="11.4481%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.1981%" y="597" width="0.0783%" height="15" fill="rgb(236,137,17)" fg:x="143" fg:w="1"/><text x="11.4481%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.1981%" y="581" width="0.0783%" height="15" fill="rgb(209,183,38)" fg:x="143" fg:w="1"/><text x="11.4481%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="11.2764%" y="597" width="0.1566%" height="15" fill="rgb(206,162,44)" fg:x="144" fg:w="2"/><text x="11.5264%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.3547%" y="581" width="0.0783%" height="15" fill="rgb(237,70,39)" fg:x="145" fg:w="1"/><text x="11.6047%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.3547%" y="565" width="0.0783%" height="15" fill="rgb(212,176,5)" fg:x="145" fg:w="1"/><text x="11.6047%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.4330%" y="581" width="0.0783%" height="15" fill="rgb(232,95,16)" fg:x="146" fg:w="1"/><text x="11.6830%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.4330%" y="565" width="0.0783%" height="15" fill="rgb(219,115,35)" fg:x="146" fg:w="1"/><text x="11.6830%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.4330%" y="549" width="0.0783%" height="15" fill="rgb(251,67,27)" fg:x="146" fg:w="1"/><text x="11.6830%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.5897%" y="549" width="0.0783%" height="15" fill="rgb(222,95,40)" fg:x="148" fg:w="1"/><text x="11.8397%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (10 samples, 0.78%)</title><rect x="10.9632%" y="661" width="0.7831%" height="15" fill="rgb(250,35,16)" fg:x="140" fg:w="10"/><text x="11.2132%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.78%)</title><rect x="10.9632%" y="645" width="0.7831%" height="15" fill="rgb(224,86,44)" fg:x="140" fg:w="10"/><text x="11.2132%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.55%)</title><rect x="11.1981%" y="629" width="0.5482%" height="15" fill="rgb(237,53,53)" fg:x="143" fg:w="7"/><text x="11.4481%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (6 samples, 0.47%)</title><rect x="11.2764%" y="613" width="0.4699%" height="15" fill="rgb(208,171,33)" fg:x="144" fg:w="6"/><text x="11.5264%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.31%)</title><rect x="11.4330%" y="597" width="0.3132%" height="15" fill="rgb(222,64,27)" fg:x="146" fg:w="4"/><text x="11.6830%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (3 samples, 0.23%)</title><rect x="11.5114%" y="581" width="0.2349%" height="15" fill="rgb(221,121,35)" fg:x="147" fg:w="3"/><text x="11.7614%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="11.5897%" y="565" width="0.1566%" height="15" fill="rgb(228,137,42)" fg:x="148" fg:w="2"/><text x="11.8397%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.6680%" y="549" width="0.0783%" height="15" fill="rgb(227,54,21)" fg:x="149" fg:w="1"/><text x="11.9180%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.8246%" y="645" width="0.0783%" height="15" fill="rgb(240,168,33)" fg:x="151" fg:w="1"/><text x="12.0746%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.8246%" y="629" width="0.0783%" height="15" fill="rgb(243,159,6)" fg:x="151" fg:w="1"/><text x="12.0746%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.8246%" y="613" width="0.0783%" height="15" fill="rgb(205,211,41)" fg:x="151" fg:w="1"/><text x="12.0746%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.9812%" y="565" width="0.0783%" height="15" fill="rgb(253,30,1)" fg:x="153" fg:w="1"/><text x="12.2312%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.23%)</title><rect x="11.9029%" y="613" width="0.2349%" height="15" fill="rgb(226,80,18)" fg:x="152" fg:w="3"/><text x="12.1529%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="11.9812%" y="597" width="0.1566%" height="15" fill="rgb(253,156,46)" fg:x="153" fg:w="2"/><text x="12.2312%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="11.9812%" y="581" width="0.1566%" height="15" fill="rgb(248,87,27)" fg:x="153" fg:w="2"/><text x="12.2312%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="12.0595%" y="565" width="0.0783%" height="15" fill="rgb(227,122,2)" fg:x="154" fg:w="1"/><text x="12.3095%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.0595%" y="549" width="0.0783%" height="15" fill="rgb(229,94,39)" fg:x="154" fg:w="1"/><text x="12.3095%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="12.1378%" y="581" width="0.1566%" height="15" fill="rgb(225,173,31)" fg:x="155" fg:w="2"/><text x="12.3878%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.2161%" y="565" width="0.0783%" height="15" fill="rgb(239,176,30)" fg:x="156" fg:w="1"/><text x="12.4661%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="12.2161%" y="549" width="0.0783%" height="15" fill="rgb(212,104,21)" fg:x="156" fg:w="1"/><text x="12.4661%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.23%)</title><rect x="12.1378%" y="597" width="0.2349%" height="15" fill="rgb(240,209,40)" fg:x="155" fg:w="3"/><text x="12.3878%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="12.2944%" y="581" width="0.0783%" height="15" fill="rgb(234,195,5)" fg:x="157" fg:w="1"/><text x="12.5444%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.70%)</title><rect x="11.7463%" y="661" width="0.7048%" height="15" fill="rgb(238,213,1)" fg:x="150" fg:w="9"/><text x="11.9963%" y="671.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (7 samples, 0.55%)</title><rect x="11.9029%" y="645" width="0.5482%" height="15" fill="rgb(235,182,54)" fg:x="152" fg:w="7"/><text x="12.1529%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.55%)</title><rect x="11.9029%" y="629" width="0.5482%" height="15" fill="rgb(229,50,46)" fg:x="152" fg:w="7"/><text x="12.1529%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.31%)</title><rect x="12.1378%" y="613" width="0.3132%" height="15" fill="rgb(219,145,13)" fg:x="155" fg:w="4"/><text x="12.3878%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.3727%" y="597" width="0.0783%" height="15" fill="rgb(220,226,10)" fg:x="158" fg:w="1"/><text x="12.6227%" y="607.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (82 samples, 6.42%)</title><rect x="6.1081%" y="741" width="6.4213%" height="15" fill="rgb(248,47,30)" fg:x="78" fg:w="82"/><text x="6.3581%" y="751.50">engine::..</text></g><g><title>engine::session::SavesEntities::check_for_changes (82 samples, 6.42%)</title><rect x="6.1081%" y="725" width="6.4213%" height="15" fill="rgb(231,209,44)" fg:x="78" fg:w="82"/><text x="6.3581%" y="735.50">engine::..</text></g><g><title>kernel::compare::any_entity_changes (25 samples, 1.96%)</title><rect x="10.5717%" y="709" width="1.9577%" height="15" fill="rgb(209,80,30)" fg:x="135" fg:w="25"/><text x="10.8217%" y="719.50">k..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (25 samples, 1.96%)</title><rect x="10.5717%" y="693" width="1.9577%" height="15" fill="rgb(232,9,14)" fg:x="135" fg:w="25"/><text x="10.8217%" y="703.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (25 samples, 1.96%)</title><rect x="10.5717%" y="677" width="1.9577%" height="15" fill="rgb(243,91,43)" fg:x="135" fg:w="25"/><text x="10.8217%" y="687.50">&lt;..</text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="12.4511%" y="661" width="0.0783%" height="15" fill="rgb(231,90,52)" fg:x="159" fg:w="1"/><text x="12.7011%" y="671.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="12.4511%" y="645" width="0.0783%" height="15" fill="rgb(253,192,44)" fg:x="159" fg:w="1"/><text x="12.7011%" y="655.50"></text></g><g><title>engine::session::Session::flush (90 samples, 7.05%)</title><rect x="5.5599%" y="773" width="7.0478%" height="15" fill="rgb(241,66,31)" fg:x="71" fg:w="90"/><text x="5.8099%" y="783.50">engine::s..</text></g><g><title>engine::session::Session::save_entity_changes (90 samples, 7.05%)</title><rect x="5.5599%" y="757" width="7.0478%" height="15" fill="rgb(235,81,37)" fg:x="71" fg:w="90"/><text x="5.8099%" y="767.50">engine::s..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="12.5294%" y="741" width="0.0783%" height="15" fill="rgb(223,221,9)" fg:x="160" fg:w="1"/><text x="12.7794%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="12.5294%" y="725" width="0.0783%" height="15" fill="rgb(242,180,7)" fg:x="160" fg:w="1"/><text x="12.7794%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="12.5294%" y="709" width="0.0783%" height="15" fill="rgb(243,78,19)" fg:x="160" fg:w="1"/><text x="12.7794%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="12.5294%" y="693" width="0.0783%" height="15" fill="rgb(233,23,17)" fg:x="160" fg:w="1"/><text x="12.7794%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="12.5294%" y="677" width="0.0783%" height="15" fill="rgb(252,122,45)" fg:x="160" fg:w="1"/><text x="12.7794%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="12.5294%" y="661" width="0.0783%" height="15" fill="rgb(247,108,20)" fg:x="160" fg:w="1"/><text x="12.7794%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="12.5294%" y="645" width="0.0783%" height="15" fill="rgb(235,84,21)" fg:x="160" fg:w="1"/><text x="12.7794%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="12.5294%" y="629" width="0.0783%" height="15" fill="rgb(247,129,10)" fg:x="160" fg:w="1"/><text x="12.7794%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="12.5294%" y="613" width="0.0783%" height="15" fill="rgb(208,173,14)" fg:x="160" fg:w="1"/><text x="12.7794%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="12.5294%" y="597" width="0.0783%" height="15" fill="rgb(236,31,38)" fg:x="160" fg:w="1"/><text x="12.7794%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.5294%" y="581" width="0.0783%" height="15" fill="rgb(232,65,17)" fg:x="160" fg:w="1"/><text x="12.7794%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.5294%" y="565" width="0.0783%" height="15" fill="rgb(224,45,49)" fg:x="160" fg:w="1"/><text x="12.7794%" y="575.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="12.5294%" y="549" width="0.0783%" height="15" fill="rgb(225,2,53)" fg:x="160" fg:w="1"/><text x="12.7794%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="12.5294%" y="533" width="0.0783%" height="15" fill="rgb(248,210,53)" fg:x="160" fg:w="1"/><text x="12.7794%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="12.5294%" y="517" width="0.0783%" height="15" fill="rgb(211,1,30)" fg:x="160" fg:w="1"/><text x="12.7794%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="12.5294%" y="501" width="0.0783%" height="15" fill="rgb(224,96,15)" fg:x="160" fg:w="1"/><text x="12.7794%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="12.5294%" y="485" width="0.0783%" height="15" fill="rgb(252,45,11)" fg:x="160" fg:w="1"/><text x="12.7794%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="12.5294%" y="469" width="0.0783%" height="15" fill="rgb(220,125,38)" fg:x="160" fg:w="1"/><text x="12.7794%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="12.5294%" y="453" width="0.0783%" height="15" fill="rgb(243,161,33)" fg:x="160" fg:w="1"/><text x="12.7794%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="12.5294%" y="437" width="0.0783%" height="15" fill="rgb(248,197,34)" fg:x="160" fg:w="1"/><text x="12.7794%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="12.5294%" y="421" width="0.0783%" height="15" fill="rgb(228,165,23)" fg:x="160" fg:w="1"/><text x="12.7794%" y="431.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="12.5294%" y="405" width="0.0783%" height="15" fill="rgb(236,94,38)" fg:x="160" fg:w="1"/><text x="12.7794%" y="415.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="12.5294%" y="389" width="0.0783%" height="15" fill="rgb(220,13,23)" fg:x="160" fg:w="1"/><text x="12.7794%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="12.6077%" y="741" width="0.1566%" height="15" fill="rgb(234,26,39)" fg:x="161" fg:w="2"/><text x="12.8577%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="12.6860%" y="725" width="0.0783%" height="15" fill="rgb(205,117,44)" fg:x="162" fg:w="1"/><text x="12.9360%" y="735.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="12.6860%" y="709" width="0.0783%" height="15" fill="rgb(250,42,2)" fg:x="162" fg:w="1"/><text x="12.9360%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.6860%" y="693" width="0.0783%" height="15" fill="rgb(223,83,14)" fg:x="162" fg:w="1"/><text x="12.9360%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.23%)</title><rect x="12.6077%" y="757" width="0.2349%" height="15" fill="rgb(241,147,50)" fg:x="161" fg:w="3"/><text x="12.8577%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="12.7643%" y="741" width="0.0783%" height="15" fill="rgb(218,90,6)" fg:x="163" fg:w="1"/><text x="13.0143%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.7643%" y="725" width="0.0783%" height="15" fill="rgb(210,191,5)" fg:x="163" fg:w="1"/><text x="13.0143%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.7643%" y="709" width="0.0783%" height="15" fill="rgb(225,139,19)" fg:x="163" fg:w="1"/><text x="13.0143%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.7643%" y="693" width="0.0783%" height="15" fill="rgb(210,1,33)" fg:x="163" fg:w="1"/><text x="13.0143%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.7643%" y="677" width="0.0783%" height="15" fill="rgb(213,50,3)" fg:x="163" fg:w="1"/><text x="13.0143%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.7643%" y="661" width="0.0783%" height="15" fill="rgb(234,227,4)" fg:x="163" fg:w="1"/><text x="13.0143%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.7643%" y="645" width="0.0783%" height="15" fill="rgb(246,63,5)" fg:x="163" fg:w="1"/><text x="13.0143%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.7643%" y="629" width="0.0783%" height="15" fill="rgb(245,136,27)" fg:x="163" fg:w="1"/><text x="13.0143%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.7643%" y="613" width="0.0783%" height="15" fill="rgb(247,199,27)" fg:x="163" fg:w="1"/><text x="13.0143%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.7643%" y="597" width="0.0783%" height="15" fill="rgb(252,158,49)" fg:x="163" fg:w="1"/><text x="13.0143%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.7643%" y="581" width="0.0783%" height="15" fill="rgb(254,73,1)" fg:x="163" fg:w="1"/><text x="13.0143%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.7643%" y="565" width="0.0783%" height="15" fill="rgb(248,93,19)" fg:x="163" fg:w="1"/><text x="13.0143%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.7643%" y="549" width="0.0783%" height="15" fill="rgb(206,67,5)" fg:x="163" fg:w="1"/><text x="13.0143%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="12.8426%" y="741" width="0.1566%" height="15" fill="rgb(209,210,4)" fg:x="164" fg:w="2"/><text x="13.0926%" y="751.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="12.8426%" y="725" width="0.1566%" height="15" fill="rgb(214,185,36)" fg:x="164" fg:w="2"/><text x="13.0926%" y="735.50"></text></g><g><title>kernel::model::Props::property_named (2 samples, 0.16%)</title><rect x="12.8426%" y="709" width="0.1566%" height="15" fill="rgb(233,191,26)" fg:x="164" fg:w="2"/><text x="13.0926%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="12.9209%" y="693" width="0.0783%" height="15" fill="rgb(248,94,17)" fg:x="165" fg:w="1"/><text x="13.1709%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.0775%" y="709" width="0.0783%" height="15" fill="rgb(250,64,4)" fg:x="167" fg:w="1"/><text x="13.3275%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.0775%" y="693" width="0.0783%" height="15" fill="rgb(218,41,53)" fg:x="167" fg:w="1"/><text x="13.3275%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="13.0775%" y="677" width="0.0783%" height="15" fill="rgb(251,176,28)" fg:x="167" fg:w="1"/><text x="13.3275%" y="687.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="13.0775%" y="661" width="0.0783%" height="15" fill="rgb(247,22,9)" fg:x="167" fg:w="1"/><text x="13.3275%" y="671.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="13.1558%" y="709" width="0.0783%" height="15" fill="rgb(218,201,14)" fg:x="168" fg:w="1"/><text x="13.4058%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.1558%" y="693" width="0.0783%" height="15" fill="rgb(218,94,10)" fg:x="168" fg:w="1"/><text x="13.4058%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="13.1558%" y="677" width="0.0783%" height="15" fill="rgb(222,183,52)" fg:x="168" fg:w="1"/><text x="13.4058%" y="687.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="13.1558%" y="661" width="0.0783%" height="15" fill="rgb(242,140,25)" fg:x="168" fg:w="1"/><text x="13.4058%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.1558%" y="645" width="0.0783%" height="15" fill="rgb(235,197,38)" fg:x="168" fg:w="1"/><text x="13.4058%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.1558%" y="629" width="0.0783%" height="15" fill="rgb(237,136,15)" fg:x="168" fg:w="1"/><text x="13.4058%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.1558%" y="613" width="0.0783%" height="15" fill="rgb(223,44,49)" fg:x="168" fg:w="1"/><text x="13.4058%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="13.1558%" y="597" width="0.0783%" height="15" fill="rgb(227,71,15)" fg:x="168" fg:w="1"/><text x="13.4058%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.2341%" y="645" width="0.0783%" height="15" fill="rgb(225,153,20)" fg:x="169" fg:w="1"/><text x="13.4841%" y="655.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (6 samples, 0.47%)</title><rect x="12.9992%" y="741" width="0.4699%" height="15" fill="rgb(210,190,26)" fg:x="166" fg:w="6"/><text x="13.2492%" y="751.50"></text></g><g><title>kernel::model::Entity::replace_scope (5 samples, 0.39%)</title><rect x="13.0775%" y="725" width="0.3915%" height="15" fill="rgb(223,147,5)" fg:x="167" fg:w="5"/><text x="13.3275%" y="735.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (3 samples, 0.23%)</title><rect x="13.2341%" y="709" width="0.2349%" height="15" fill="rgb(207,14,23)" fg:x="169" fg:w="3"/><text x="13.4841%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.23%)</title><rect x="13.2341%" y="693" width="0.2349%" height="15" fill="rgb(211,195,53)" fg:x="169" fg:w="3"/><text x="13.4841%" y="703.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (3 samples, 0.23%)</title><rect x="13.2341%" y="677" width="0.2349%" height="15" fill="rgb(237,75,46)" fg:x="169" fg:w="3"/><text x="13.4841%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.23%)</title><rect x="13.2341%" y="661" width="0.2349%" height="15" fill="rgb(254,55,14)" fg:x="169" fg:w="3"/><text x="13.4841%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="13.3125%" y="645" width="0.1566%" height="15" fill="rgb(230,185,30)" fg:x="170" fg:w="2"/><text x="13.5625%" y="655.50"></text></g><g><title>plugins_core::build::Build::holding (12 samples, 0.94%)</title><rect x="12.6077%" y="773" width="0.9397%" height="15" fill="rgb(220,14,11)" fg:x="161" fg:w="12"/><text x="12.8577%" y="783.50"></text></g><g><title>plugins_core::tools::set_container (9 samples, 0.70%)</title><rect x="12.8426%" y="757" width="0.7048%" height="15" fill="rgb(215,169,44)" fg:x="164" fg:w="9"/><text x="13.0926%" y="767.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="13.4691%" y="741" width="0.0783%" height="15" fill="rgb(253,203,20)" fg:x="172" fg:w="1"/><text x="13.7191%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="13.4691%" y="725" width="0.0783%" height="15" fill="rgb(229,225,17)" fg:x="172" fg:w="1"/><text x="13.7191%" y="735.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="13.4691%" y="709" width="0.0783%" height="15" fill="rgb(236,76,26)" fg:x="172" fg:w="1"/><text x="13.7191%" y="719.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="13.4691%" y="693" width="0.0783%" height="15" fill="rgb(234,15,30)" fg:x="172" fg:w="1"/><text x="13.7191%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="13.4691%" y="677" width="0.0783%" height="15" fill="rgb(211,113,48)" fg:x="172" fg:w="1"/><text x="13.7191%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="13.4691%" y="661" width="0.0783%" height="15" fill="rgb(221,31,36)" fg:x="172" fg:w="1"/><text x="13.7191%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="13.5474%" y="741" width="0.0783%" height="15" fill="rgb(215,118,52)" fg:x="173" fg:w="1"/><text x="13.7974%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="13.5474%" y="725" width="0.0783%" height="15" fill="rgb(241,151,27)" fg:x="173" fg:w="1"/><text x="13.7974%" y="735.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="13.5474%" y="709" width="0.0783%" height="15" fill="rgb(253,51,3)" fg:x="173" fg:w="1"/><text x="13.7974%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.5474%" y="693" width="0.0783%" height="15" fill="rgb(216,201,24)" fg:x="173" fg:w="1"/><text x="13.7974%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.5474%" y="677" width="0.0783%" height="15" fill="rgb(231,107,4)" fg:x="173" fg:w="1"/><text x="13.7974%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.5474%" y="661" width="0.0783%" height="15" fill="rgb(243,97,54)" fg:x="173" fg:w="1"/><text x="13.7974%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.5474%" y="645" width="0.0783%" height="15" fill="rgb(221,32,51)" fg:x="173" fg:w="1"/><text x="13.7974%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.5474%" y="629" width="0.0783%" height="15" fill="rgb(218,171,35)" fg:x="173" fg:w="1"/><text x="13.7974%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.5474%" y="613" width="0.0783%" height="15" fill="rgb(214,20,53)" fg:x="173" fg:w="1"/><text x="13.7974%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.5474%" y="597" width="0.0783%" height="15" fill="rgb(239,9,52)" fg:x="173" fg:w="1"/><text x="13.7974%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.5474%" y="581" width="0.0783%" height="15" fill="rgb(215,114,45)" fg:x="173" fg:w="1"/><text x="13.7974%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.5474%" y="565" width="0.0783%" height="15" fill="rgb(208,118,9)" fg:x="173" fg:w="1"/><text x="13.7974%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.5474%" y="549" width="0.0783%" height="15" fill="rgb(235,7,39)" fg:x="173" fg:w="1"/><text x="13.7974%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.5474%" y="533" width="0.0783%" height="15" fill="rgb(243,225,15)" fg:x="173" fg:w="1"/><text x="13.7974%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.5474%" y="517" width="0.0783%" height="15" fill="rgb(225,216,18)" fg:x="173" fg:w="1"/><text x="13.7974%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.5474%" y="501" width="0.0783%" height="15" fill="rgb(233,36,38)" fg:x="173" fg:w="1"/><text x="13.7974%" y="511.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="13.5474%" y="773" width="0.1566%" height="15" fill="rgb(239,88,23)" fg:x="173" fg:w="2"/><text x="13.7974%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="13.5474%" y="757" width="0.1566%" height="15" fill="rgb(219,181,35)" fg:x="173" fg:w="2"/><text x="13.7974%" y="767.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="13.6257%" y="741" width="0.0783%" height="15" fill="rgb(215,18,46)" fg:x="174" fg:w="1"/><text x="13.8757%" y="751.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="13.6257%" y="725" width="0.0783%" height="15" fill="rgb(241,38,11)" fg:x="174" fg:w="1"/><text x="13.8757%" y="735.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="13.7040%" y="741" width="0.0783%" height="15" fill="rgb(248,169,45)" fg:x="175" fg:w="1"/><text x="13.9540%" y="751.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="13.7040%" y="725" width="0.0783%" height="15" fill="rgb(239,50,49)" fg:x="175" fg:w="1"/><text x="13.9540%" y="735.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="13.7040%" y="773" width="0.1566%" height="15" fill="rgb(231,96,31)" fg:x="175" fg:w="2"/><text x="13.9540%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::set_name (2 samples, 0.16%)</title><rect x="13.7040%" y="757" width="0.1566%" height="15" fill="rgb(224,193,37)" fg:x="175" fg:w="2"/><text x="13.9540%" y="767.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="13.7823%" y="741" width="0.0783%" height="15" fill="rgb(227,153,50)" fg:x="176" fg:w="1"/><text x="14.0323%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.7823%" y="725" width="0.0783%" height="15" fill="rgb(249,228,3)" fg:x="176" fg:w="1"/><text x="14.0323%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="13.9389%" y="677" width="0.0783%" height="15" fill="rgb(219,164,43)" fg:x="178" fg:w="1"/><text x="14.1889%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="13.9389%" y="661" width="0.0783%" height="15" fill="rgb(216,45,41)" fg:x="178" fg:w="1"/><text x="14.1889%" y="671.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="13.9389%" y="645" width="0.0783%" height="15" fill="rgb(210,226,51)" fg:x="178" fg:w="1"/><text x="14.1889%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.9389%" y="629" width="0.0783%" height="15" fill="rgb(209,117,49)" fg:x="178" fg:w="1"/><text x="14.1889%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.9389%" y="613" width="0.0783%" height="15" fill="rgb(206,196,24)" fg:x="178" fg:w="1"/><text x="14.1889%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.9389%" y="597" width="0.0783%" height="15" fill="rgb(253,218,3)" fg:x="178" fg:w="1"/><text x="14.1889%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.9389%" y="581" width="0.0783%" height="15" fill="rgb(252,166,2)" fg:x="178" fg:w="1"/><text x="14.1889%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.9389%" y="565" width="0.0783%" height="15" fill="rgb(236,218,26)" fg:x="178" fg:w="1"/><text x="14.1889%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.9389%" y="549" width="0.0783%" height="15" fill="rgb(254,84,19)" fg:x="178" fg:w="1"/><text x="14.1889%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.9389%" y="533" width="0.0783%" height="15" fill="rgb(219,137,29)" fg:x="178" fg:w="1"/><text x="14.1889%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.9389%" y="517" width="0.0783%" height="15" fill="rgb(227,47,52)" fg:x="178" fg:w="1"/><text x="14.1889%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.9389%" y="501" width="0.0783%" height="15" fill="rgb(229,167,24)" fg:x="178" fg:w="1"/><text x="14.1889%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.9389%" y="485" width="0.0783%" height="15" fill="rgb(233,164,1)" fg:x="178" fg:w="1"/><text x="14.1889%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.9389%" y="469" width="0.0783%" height="15" fill="rgb(218,88,48)" fg:x="178" fg:w="1"/><text x="14.1889%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.9389%" y="453" width="0.0783%" height="15" fill="rgb(226,214,24)" fg:x="178" fg:w="1"/><text x="14.1889%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.9389%" y="437" width="0.0783%" height="15" fill="rgb(233,29,12)" fg:x="178" fg:w="1"/><text x="14.1889%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="13.9389%" y="693" width="0.1566%" height="15" fill="rgb(219,120,34)" fg:x="178" fg:w="2"/><text x="14.1889%" y="703.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="14.0172%" y="677" width="0.0783%" height="15" fill="rgb(226,78,44)" fg:x="179" fg:w="1"/><text x="14.2672%" y="687.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="14.0172%" y="661" width="0.0783%" height="15" fill="rgb(240,15,48)" fg:x="179" fg:w="1"/><text x="14.2672%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.0172%" y="645" width="0.0783%" height="15" fill="rgb(253,176,7)" fg:x="179" fg:w="1"/><text x="14.2672%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Exit&gt;&gt; (1 samples, 0.08%)</title><rect x="14.0955%" y="677" width="0.0783%" height="15" fill="rgb(206,166,28)" fg:x="180" fg:w="1"/><text x="14.3455%" y="687.50"></text></g><g><title>&lt;kernel::model::entry::OpenedScopeMut&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="14.0955%" y="661" width="0.0783%" height="15" fill="rgb(241,53,51)" fg:x="180" fg:w="1"/><text x="14.3455%" y="671.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="14.1738%" y="677" width="0.0783%" height="15" fill="rgb(249,112,30)" fg:x="181" fg:w="1"/><text x="14.4238%" y="687.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="14.1738%" y="661" width="0.0783%" height="15" fill="rgb(217,85,30)" fg:x="181" fg:w="1"/><text x="14.4238%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.1738%" y="645" width="0.0783%" height="15" fill="rgb(233,49,7)" fg:x="181" fg:w="1"/><text x="14.4238%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.1738%" y="629" width="0.0783%" height="15" fill="rgb(234,109,9)" fg:x="181" fg:w="1"/><text x="14.4238%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.1738%" y="613" width="0.0783%" height="15" fill="rgb(253,95,22)" fg:x="181" fg:w="1"/><text x="14.4238%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.1738%" y="597" width="0.0783%" height="15" fill="rgb(233,176,25)" fg:x="181" fg:w="1"/><text x="14.4238%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.1738%" y="581" width="0.0783%" height="15" fill="rgb(236,33,39)" fg:x="181" fg:w="1"/><text x="14.4238%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.1738%" y="565" width="0.0783%" height="15" fill="rgb(223,226,42)" fg:x="181" fg:w="1"/><text x="14.4238%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.1738%" y="549" width="0.0783%" height="15" fill="rgb(216,99,33)" fg:x="181" fg:w="1"/><text x="14.4238%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.1738%" y="533" width="0.0783%" height="15" fill="rgb(235,84,23)" fg:x="181" fg:w="1"/><text x="14.4238%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.1738%" y="517" width="0.0783%" height="15" fill="rgb(232,2,27)" fg:x="181" fg:w="1"/><text x="14.4238%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.1738%" y="501" width="0.0783%" height="15" fill="rgb(241,23,22)" fg:x="181" fg:w="1"/><text x="14.4238%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.1738%" y="485" width="0.0783%" height="15" fill="rgb(211,73,27)" fg:x="181" fg:w="1"/><text x="14.4238%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.1738%" y="469" width="0.0783%" height="15" fill="rgb(235,109,49)" fg:x="181" fg:w="1"/><text x="14.4238%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="14.2522%" y="677" width="0.0783%" height="15" fill="rgb(230,99,29)" fg:x="182" fg:w="1"/><text x="14.5022%" y="687.50"></text></g><g><title>core::iter::adapters::try_process (7 samples, 0.55%)</title><rect x="13.8606%" y="757" width="0.5482%" height="15" fill="rgb(245,199,7)" fg:x="177" fg:w="7"/><text x="14.1106%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.55%)</title><rect x="13.8606%" y="741" width="0.5482%" height="15" fill="rgb(217,179,10)" fg:x="177" fg:w="7"/><text x="14.1106%" y="751.50"></text></g><g><title>plugins_core::build::QuickThing::make (7 samples, 0.55%)</title><rect x="13.8606%" y="725" width="0.5482%" height="15" fill="rgb(254,99,47)" fg:x="177" fg:w="7"/><text x="14.1106%" y="735.50"></text></g><g><title>plugins_core::build::Build::leads_to (6 samples, 0.47%)</title><rect x="13.9389%" y="709" width="0.4699%" height="15" fill="rgb(251,121,7)" fg:x="178" fg:w="6"/><text x="14.1889%" y="719.50"></text></g><g><title>plugins_core::tools::leads_to (4 samples, 0.31%)</title><rect x="14.0955%" y="693" width="0.3132%" height="15" fill="rgb(250,177,26)" fg:x="180" fg:w="4"/><text x="14.3455%" y="703.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="14.3305%" y="677" width="0.0783%" height="15" fill="rgb(232,88,15)" fg:x="183" fg:w="1"/><text x="14.5805%" y="687.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="14.3305%" y="661" width="0.0783%" height="15" fill="rgb(251,54,54)" fg:x="183" fg:w="1"/><text x="14.5805%" y="671.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="14.3305%" y="645" width="0.0783%" height="15" fill="rgb(208,177,15)" fg:x="183" fg:w="1"/><text x="14.5805%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.3305%" y="629" width="0.0783%" height="15" fill="rgb(205,97,32)" fg:x="183" fg:w="1"/><text x="14.5805%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="14.3305%" y="613" width="0.0783%" height="15" fill="rgb(217,192,13)" fg:x="183" fg:w="1"/><text x="14.5805%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.3305%" y="597" width="0.0783%" height="15" fill="rgb(215,163,41)" fg:x="183" fg:w="1"/><text x="14.5805%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.3305%" y="581" width="0.0783%" height="15" fill="rgb(246,83,29)" fg:x="183" fg:w="1"/><text x="14.5805%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.3305%" y="565" width="0.0783%" height="15" fill="rgb(219,2,45)" fg:x="183" fg:w="1"/><text x="14.5805%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.3305%" y="549" width="0.0783%" height="15" fill="rgb(242,215,33)" fg:x="183" fg:w="1"/><text x="14.5805%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.5654%" y="709" width="0.0783%" height="15" fill="rgb(217,1,6)" fg:x="186" fg:w="1"/><text x="14.8154%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.5654%" y="693" width="0.0783%" height="15" fill="rgb(207,85,52)" fg:x="186" fg:w="1"/><text x="14.8154%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.5654%" y="677" width="0.0783%" height="15" fill="rgb(231,171,19)" fg:x="186" fg:w="1"/><text x="14.8154%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.5654%" y="661" width="0.0783%" height="15" fill="rgb(207,128,4)" fg:x="186" fg:w="1"/><text x="14.8154%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.5654%" y="645" width="0.0783%" height="15" fill="rgb(219,208,4)" fg:x="186" fg:w="1"/><text x="14.8154%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="14.5654%" y="629" width="0.0783%" height="15" fill="rgb(235,161,42)" fg:x="186" fg:w="1"/><text x="14.8154%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="14.5654%" y="613" width="0.0783%" height="15" fill="rgb(247,218,18)" fg:x="186" fg:w="1"/><text x="14.8154%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.6437%" y="709" width="0.0783%" height="15" fill="rgb(232,114,51)" fg:x="187" fg:w="1"/><text x="14.8937%" y="719.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.31%)</title><rect x="14.4871%" y="725" width="0.3132%" height="15" fill="rgb(222,95,3)" fg:x="185" fg:w="4"/><text x="14.7371%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.7220%" y="709" width="0.0783%" height="15" fill="rgb(240,65,29)" fg:x="188" fg:w="1"/><text x="14.9720%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.7220%" y="693" width="0.0783%" height="15" fill="rgb(249,209,20)" fg:x="188" fg:w="1"/><text x="14.9720%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="14.7220%" y="677" width="0.0783%" height="15" fill="rgb(241,48,37)" fg:x="188" fg:w="1"/><text x="14.9720%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.7220%" y="661" width="0.0783%" height="15" fill="rgb(230,140,42)" fg:x="188" fg:w="1"/><text x="14.9720%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="14.7220%" y="645" width="0.0783%" height="15" fill="rgb(230,176,45)" fg:x="188" fg:w="1"/><text x="14.9720%" y="655.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.23%)</title><rect x="14.8003%" y="725" width="0.2349%" height="15" fill="rgb(245,112,21)" fg:x="189" fg:w="3"/><text x="15.0503%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.23%)</title><rect x="14.8003%" y="709" width="0.2349%" height="15" fill="rgb(207,183,35)" fg:x="189" fg:w="3"/><text x="15.0503%" y="719.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="14.8786%" y="693" width="0.1566%" height="15" fill="rgb(227,44,33)" fg:x="190" fg:w="2"/><text x="15.1286%" y="703.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="15.0352%" y="725" width="0.0783%" height="15" fill="rgb(246,120,21)" fg:x="192" fg:w="1"/><text x="15.2852%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.0352%" y="709" width="0.0783%" height="15" fill="rgb(235,57,52)" fg:x="192" fg:w="1"/><text x="15.2852%" y="719.50"></text></g><g><title>engine::identifiers::model::set_gid (1 samples, 0.08%)</title><rect x="15.1135%" y="725" width="0.0783%" height="15" fill="rgb(238,84,10)" fg:x="193" fg:w="1"/><text x="15.3635%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="15.1135%" y="709" width="0.0783%" height="15" fill="rgb(251,200,32)" fg:x="193" fg:w="1"/><text x="15.3635%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.1135%" y="693" width="0.0783%" height="15" fill="rgb(247,159,13)" fg:x="193" fg:w="1"/><text x="15.3635%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="15.2702%" y="709" width="0.0783%" height="15" fill="rgb(238,64,4)" fg:x="195" fg:w="1"/><text x="15.5202%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="15.2702%" y="693" width="0.0783%" height="15" fill="rgb(221,131,51)" fg:x="195" fg:w="1"/><text x="15.5202%" y="703.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="15.2702%" y="677" width="0.0783%" height="15" fill="rgb(242,5,29)" fg:x="195" fg:w="1"/><text x="15.5202%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="15.3485%" y="661" width="0.3132%" height="15" fill="rgb(214,130,32)" fg:x="196" fg:w="4"/><text x="15.5985%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="15.5051%" y="645" width="0.1566%" height="15" fill="rgb(244,210,16)" fg:x="198" fg:w="2"/><text x="15.7551%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.5834%" y="629" width="0.0783%" height="15" fill="rgb(234,48,26)" fg:x="199" fg:w="1"/><text x="15.8334%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.39%)</title><rect x="15.3485%" y="677" width="0.3915%" height="15" fill="rgb(231,82,38)" fg:x="196" fg:w="5"/><text x="15.5985%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.6617%" y="661" width="0.0783%" height="15" fill="rgb(254,128,41)" fg:x="200" fg:w="1"/><text x="15.9117%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.6617%" y="645" width="0.0783%" height="15" fill="rgb(212,73,49)" fg:x="200" fg:w="1"/><text x="15.9117%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.6617%" y="629" width="0.0783%" height="15" fill="rgb(205,62,54)" fg:x="200" fg:w="1"/><text x="15.9117%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.55%)</title><rect x="15.8966%" y="661" width="0.5482%" height="15" fill="rgb(228,0,8)" fg:x="203" fg:w="7"/><text x="16.1466%" y="671.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.39%)</title><rect x="16.0532%" y="645" width="0.3915%" height="15" fill="rgb(251,28,17)" fg:x="205" fg:w="5"/><text x="16.3032%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.23%)</title><rect x="16.2099%" y="629" width="0.2349%" height="15" fill="rgb(238,105,27)" fg:x="207" fg:w="3"/><text x="16.4599%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.23%)</title><rect x="16.2099%" y="613" width="0.2349%" height="15" fill="rgb(237,216,33)" fg:x="207" fg:w="3"/><text x="16.4599%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="16.2882%" y="597" width="0.1566%" height="15" fill="rgb(229,228,25)" fg:x="208" fg:w="2"/><text x="16.5382%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="16.2882%" y="581" width="0.1566%" height="15" fill="rgb(233,75,23)" fg:x="208" fg:w="2"/><text x="16.5382%" y="591.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="16.2882%" y="565" width="0.1566%" height="15" fill="rgb(231,207,16)" fg:x="208" fg:w="2"/><text x="16.5382%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="16.4448%" y="613" width="0.1566%" height="15" fill="rgb(231,191,45)" fg:x="210" fg:w="2"/><text x="16.6948%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="16.4448%" y="597" width="0.1566%" height="15" fill="rgb(224,133,17)" fg:x="210" fg:w="2"/><text x="16.6948%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="16.4448%" y="581" width="0.1566%" height="15" fill="rgb(209,178,27)" fg:x="210" fg:w="2"/><text x="16.6948%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.5231%" y="565" width="0.0783%" height="15" fill="rgb(218,37,11)" fg:x="211" fg:w="1"/><text x="16.7731%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.23%)</title><rect x="16.4448%" y="645" width="0.2349%" height="15" fill="rgb(251,226,25)" fg:x="210" fg:w="3"/><text x="16.6948%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.23%)</title><rect x="16.4448%" y="629" width="0.2349%" height="15" fill="rgb(209,222,27)" fg:x="210" fg:w="3"/><text x="16.6948%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="16.6014%" y="613" width="0.0783%" height="15" fill="rgb(238,22,21)" fg:x="212" fg:w="1"/><text x="16.8514%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="16.6014%" y="597" width="0.0783%" height="15" fill="rgb(233,161,25)" fg:x="212" fg:w="1"/><text x="16.8514%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="16.6797%" y="645" width="0.3132%" height="15" fill="rgb(226,122,53)" fg:x="213" fg:w="4"/><text x="16.9297%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="16.8363%" y="629" width="0.1566%" height="15" fill="rgb(220,123,17)" fg:x="215" fg:w="2"/><text x="17.0863%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.9146%" y="613" width="0.0783%" height="15" fill="rgb(230,224,35)" fg:x="216" fg:w="1"/><text x="17.1646%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.9146%" y="597" width="0.0783%" height="15" fill="rgb(246,83,8)" fg:x="216" fg:w="1"/><text x="17.1646%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="16.9930%" y="629" width="0.1566%" height="15" fill="rgb(230,214,17)" fg:x="217" fg:w="2"/><text x="17.2430%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="16.9930%" y="613" width="0.1566%" height="15" fill="rgb(222,97,18)" fg:x="217" fg:w="2"/><text x="17.2430%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="17.3062%" y="613" width="0.0783%" height="15" fill="rgb(206,79,1)" fg:x="221" fg:w="1"/><text x="17.5562%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.39%)</title><rect x="17.1496%" y="629" width="0.3915%" height="15" fill="rgb(214,121,34)" fg:x="219" fg:w="5"/><text x="17.3996%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="17.3845%" y="613" width="0.1566%" height="15" fill="rgb(249,199,46)" fg:x="222" fg:w="2"/><text x="17.6345%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="17.3845%" y="597" width="0.1566%" height="15" fill="rgb(214,222,46)" fg:x="222" fg:w="2"/><text x="17.6345%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.4628%" y="581" width="0.0783%" height="15" fill="rgb(248,168,30)" fg:x="223" fg:w="1"/><text x="17.7128%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.4628%" y="565" width="0.0783%" height="15" fill="rgb(226,14,28)" fg:x="223" fg:w="1"/><text x="17.7128%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.94%)</title><rect x="16.9930%" y="645" width="0.9397%" height="15" fill="rgb(253,123,1)" fg:x="217" fg:w="12"/><text x="17.2430%" y="655.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.39%)</title><rect x="17.5411%" y="629" width="0.3915%" height="15" fill="rgb(225,24,42)" fg:x="224" fg:w="5"/><text x="17.7911%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.31%)</title><rect x="17.6194%" y="613" width="0.3132%" height="15" fill="rgb(216,161,37)" fg:x="225" fg:w="4"/><text x="17.8694%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.23%)</title><rect x="17.6977%" y="597" width="0.2349%" height="15" fill="rgb(251,164,26)" fg:x="226" fg:w="3"/><text x="17.9477%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.57%)</title><rect x="16.4448%" y="661" width="1.5662%" height="15" fill="rgb(219,177,3)" fg:x="210" fg:w="20"/><text x="16.6948%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.9327%" y="645" width="0.0783%" height="15" fill="rgb(222,65,0)" fg:x="229" fg:w="1"/><text x="18.1827%" y="655.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (38 samples, 2.98%)</title><rect x="15.3485%" y="693" width="2.9757%" height="15" fill="rgb(223,69,54)" fg:x="196" fg:w="38"/><text x="15.5985%" y="703.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (33 samples, 2.58%)</title><rect x="15.7400%" y="677" width="2.5842%" height="15" fill="rgb(235,30,27)" fg:x="201" fg:w="33"/><text x="15.9900%" y="687.50">se..</text></g><g><title>std::io::Write::write_all (4 samples, 0.31%)</title><rect x="18.0110%" y="661" width="0.3132%" height="15" fill="rgb(220,183,50)" fg:x="230" fg:w="4"/><text x="18.2610%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="18.1676%" y="645" width="0.1566%" height="15" fill="rgb(248,198,15)" fg:x="232" fg:w="2"/><text x="18.4176%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="18.1676%" y="629" width="0.1566%" height="15" fill="rgb(222,211,4)" fg:x="232" fg:w="2"/><text x="18.4176%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="18.2459%" y="613" width="0.0783%" height="15" fill="rgb(214,102,34)" fg:x="233" fg:w="1"/><text x="18.4959%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.2459%" y="597" width="0.0783%" height="15" fill="rgb(245,92,5)" fg:x="233" fg:w="1"/><text x="18.4959%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="18.2459%" y="581" width="0.0783%" height="15" fill="rgb(252,72,51)" fg:x="233" fg:w="1"/><text x="18.4959%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.4808%" y="645" width="0.0783%" height="15" fill="rgb(252,208,19)" fg:x="236" fg:w="1"/><text x="18.7308%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.39%)</title><rect x="18.5591%" y="645" width="0.3915%" height="15" fill="rgb(211,69,7)" fg:x="237" fg:w="5"/><text x="18.8091%" y="655.50"></text></g><g><title>__libc_free (3 samples, 0.23%)</title><rect x="18.7157%" y="629" width="0.2349%" height="15" fill="rgb(211,27,16)" fg:x="239" fg:w="3"/><text x="18.9657%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.0290%" y="629" width="0.0783%" height="15" fill="rgb(219,216,14)" fg:x="243" fg:w="1"/><text x="19.2790%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.1073%" y="629" width="0.0783%" height="15" fill="rgb(219,71,8)" fg:x="244" fg:w="1"/><text x="19.3573%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.1073%" y="613" width="0.0783%" height="15" fill="rgb(223,170,53)" fg:x="244" fg:w="1"/><text x="19.3573%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.1856%" y="597" width="0.0783%" height="15" fill="rgb(246,21,26)" fg:x="245" fg:w="1"/><text x="19.4356%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.02%)</title><rect x="18.3242%" y="693" width="1.0180%" height="15" fill="rgb(248,20,46)" fg:x="234" fg:w="13"/><text x="18.5742%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.02%)</title><rect x="18.3242%" y="677" width="1.0180%" height="15" fill="rgb(252,94,11)" fg:x="234" fg:w="13"/><text x="18.5742%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.02%)</title><rect x="18.3242%" y="661" width="1.0180%" height="15" fill="rgb(236,163,8)" fg:x="234" fg:w="13"/><text x="18.5742%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="18.9507%" y="645" width="0.3915%" height="15" fill="rgb(217,221,45)" fg:x="242" fg:w="5"/><text x="19.2007%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="19.1856%" y="629" width="0.1566%" height="15" fill="rgb(238,38,17)" fg:x="245" fg:w="2"/><text x="19.4356%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="19.1856%" y="613" width="0.1566%" height="15" fill="rgb(242,210,23)" fg:x="245" fg:w="2"/><text x="19.4356%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.2639%" y="597" width="0.0783%" height="15" fill="rgb(250,86,53)" fg:x="246" fg:w="1"/><text x="19.5139%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.4205%" y="645" width="0.0783%" height="15" fill="rgb(223,168,25)" fg:x="248" fg:w="1"/><text x="19.6705%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.4205%" y="629" width="0.0783%" height="15" fill="rgb(251,189,4)" fg:x="248" fg:w="1"/><text x="19.6705%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.4205%" y="613" width="0.0783%" height="15" fill="rgb(245,19,28)" fg:x="248" fg:w="1"/><text x="19.6705%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (3 samples, 0.23%)</title><rect x="19.4988%" y="645" width="0.2349%" height="15" fill="rgb(207,10,34)" fg:x="249" fg:w="3"/><text x="19.7488%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="19.5771%" y="629" width="0.1566%" height="15" fill="rgb(235,153,31)" fg:x="250" fg:w="2"/><text x="19.8271%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.6554%" y="613" width="0.0783%" height="15" fill="rgb(228,72,37)" fg:x="251" fg:w="1"/><text x="19.9054%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="19.7338%" y="613" width="0.1566%" height="15" fill="rgb(215,15,16)" fg:x="252" fg:w="2"/><text x="19.9838%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="19.7338%" y="597" width="0.1566%" height="15" fill="rgb(250,119,29)" fg:x="252" fg:w="2"/><text x="19.9838%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.8121%" y="581" width="0.0783%" height="15" fill="rgb(214,59,1)" fg:x="253" fg:w="1"/><text x="20.0621%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.8904%" y="597" width="0.0783%" height="15" fill="rgb(223,109,25)" fg:x="254" fg:w="1"/><text x="20.1404%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.8904%" y="581" width="0.0783%" height="15" fill="rgb(230,198,22)" fg:x="254" fg:w="1"/><text x="20.1404%" y="591.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="19.8904%" y="565" width="0.0783%" height="15" fill="rgb(245,184,46)" fg:x="254" fg:w="1"/><text x="20.1404%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="19.9687%" y="581" width="0.0783%" height="15" fill="rgb(253,73,16)" fg:x="255" fg:w="1"/><text x="20.2187%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.0470%" y="565" width="0.0783%" height="15" fill="rgb(206,94,45)" fg:x="256" fg:w="1"/><text x="20.2970%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.0470%" y="549" width="0.0783%" height="15" fill="rgb(236,83,27)" fg:x="256" fg:w="1"/><text x="20.2970%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (6 samples, 0.47%)</title><rect x="19.7338%" y="645" width="0.4699%" height="15" fill="rgb(220,196,8)" fg:x="252" fg:w="6"/><text x="19.9838%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.47%)</title><rect x="19.7338%" y="629" width="0.4699%" height="15" fill="rgb(254,185,14)" fg:x="252" fg:w="6"/><text x="19.9838%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.31%)</title><rect x="19.8904%" y="613" width="0.3132%" height="15" fill="rgb(226,50,22)" fg:x="254" fg:w="4"/><text x="20.1404%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (3 samples, 0.23%)</title><rect x="19.9687%" y="597" width="0.2349%" height="15" fill="rgb(253,147,0)" fg:x="255" fg:w="3"/><text x="20.2187%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="20.0470%" y="581" width="0.1566%" height="15" fill="rgb(252,46,33)" fg:x="256" fg:w="2"/><text x="20.2970%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="20.1253%" y="565" width="0.0783%" height="15" fill="rgb(242,22,54)" fg:x="257" fg:w="1"/><text x="20.3753%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.1253%" y="549" width="0.0783%" height="15" fill="rgb(223,178,32)" fg:x="257" fg:w="1"/><text x="20.3753%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="20.2036%" y="645" width="0.0783%" height="15" fill="rgb(214,106,53)" fg:x="258" fg:w="1"/><text x="20.4536%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.2819%" y="629" width="0.0783%" height="15" fill="rgb(232,65,50)" fg:x="259" fg:w="1"/><text x="20.5319%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.2819%" y="613" width="0.0783%" height="15" fill="rgb(231,110,28)" fg:x="259" fg:w="1"/><text x="20.5319%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.2819%" y="597" width="0.0783%" height="15" fill="rgb(216,71,40)" fg:x="259" fg:w="1"/><text x="20.5319%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="20.4385%" y="597" width="0.1566%" height="15" fill="rgb(229,89,53)" fg:x="261" fg:w="2"/><text x="20.6885%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.5168%" y="581" width="0.0783%" height="15" fill="rgb(210,124,14)" fg:x="262" fg:w="1"/><text x="20.7668%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.5168%" y="565" width="0.0783%" height="15" fill="rgb(236,213,6)" fg:x="262" fg:w="1"/><text x="20.7668%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.23%)</title><rect x="20.7518%" y="581" width="0.2349%" height="15" fill="rgb(228,41,5)" fg:x="265" fg:w="3"/><text x="21.0018%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="20.7518%" y="565" width="0.2349%" height="15" fill="rgb(221,167,25)" fg:x="265" fg:w="3"/><text x="21.0018%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="20.8301%" y="549" width="0.1566%" height="15" fill="rgb(228,144,37)" fg:x="266" fg:w="2"/><text x="21.0801%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="20.9084%" y="533" width="0.0783%" height="15" fill="rgb(227,189,38)" fg:x="267" fg:w="1"/><text x="21.1584%" y="543.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (75 samples, 5.87%)</title><rect x="15.1919%" y="725" width="5.8731%" height="15" fill="rgb(218,8,2)" fg:x="194" fg:w="75"/><text x="15.4419%" y="735.50">engine:..</text></g><g><title>engine::session::SavesEntities::check_for_changes (73 samples, 5.72%)</title><rect x="15.3485%" y="709" width="5.7165%" height="15" fill="rgb(209,61,28)" fg:x="196" fg:w="73"/><text x="15.5985%" y="719.50">engine:..</text></g><g><title>kernel::compare::any_entity_changes (22 samples, 1.72%)</title><rect x="19.3422%" y="693" width="1.7228%" height="15" fill="rgb(233,140,39)" fg:x="247" fg:w="22"/><text x="19.5922%" y="703.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (22 samples, 1.72%)</title><rect x="19.3422%" y="677" width="1.7228%" height="15" fill="rgb(251,66,48)" fg:x="247" fg:w="22"/><text x="19.5922%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 1.72%)</title><rect x="19.3422%" y="661" width="1.7228%" height="15" fill="rgb(210,44,45)" fg:x="247" fg:w="22"/><text x="19.5922%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.78%)</title><rect x="20.2819%" y="645" width="0.7831%" height="15" fill="rgb(214,136,46)" fg:x="259" fg:w="10"/><text x="20.5319%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (9 samples, 0.70%)</title><rect x="20.3602%" y="629" width="0.7048%" height="15" fill="rgb(207,130,50)" fg:x="260" fg:w="9"/><text x="20.6102%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.63%)</title><rect x="20.4385%" y="613" width="0.6265%" height="15" fill="rgb(228,102,49)" fg:x="261" fg:w="8"/><text x="20.6885%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.47%)</title><rect x="20.5951%" y="597" width="0.4699%" height="15" fill="rgb(253,55,1)" fg:x="263" fg:w="6"/><text x="20.8451%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.9867%" y="581" width="0.0783%" height="15" fill="rgb(238,222,9)" fg:x="268" fg:w="1"/><text x="21.2367%" y="591.50"></text></g><g><title>engine::session::Session::flush (86 samples, 6.73%)</title><rect x="14.4088%" y="757" width="6.7345%" height="15" fill="rgb(246,99,6)" fg:x="184" fg:w="86"/><text x="14.6588%" y="767.50">engine::s..</text></g><g><title>engine::session::Session::save_entity_changes (86 samples, 6.73%)</title><rect x="14.4088%" y="741" width="6.7345%" height="15" fill="rgb(219,110,26)" fg:x="184" fg:w="86"/><text x="14.6588%" y="751.50">engine::s..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="21.0650%" y="725" width="0.0783%" height="15" fill="rgb(239,160,33)" fg:x="269" fg:w="1"/><text x="21.3150%" y="735.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="21.0650%" y="709" width="0.0783%" height="15" fill="rgb(220,202,23)" fg:x="269" fg:w="1"/><text x="21.3150%" y="719.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="21.0650%" y="693" width="0.0783%" height="15" fill="rgb(208,80,26)" fg:x="269" fg:w="1"/><text x="21.3150%" y="703.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="21.0650%" y="677" width="0.0783%" height="15" fill="rgb(243,85,7)" fg:x="269" fg:w="1"/><text x="21.3150%" y="687.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="21.0650%" y="661" width="0.0783%" height="15" fill="rgb(228,77,47)" fg:x="269" fg:w="1"/><text x="21.3150%" y="671.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="21.0650%" y="645" width="0.0783%" height="15" fill="rgb(212,226,8)" fg:x="269" fg:w="1"/><text x="21.3150%" y="655.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="21.0650%" y="629" width="0.0783%" height="15" fill="rgb(241,120,54)" fg:x="269" fg:w="1"/><text x="21.3150%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="21.1433%" y="693" width="0.0783%" height="15" fill="rgb(226,80,16)" fg:x="270" fg:w="1"/><text x="21.3933%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.55%)</title><rect x="21.1433%" y="741" width="0.5482%" height="15" fill="rgb(240,76,13)" fg:x="270" fg:w="7"/><text x="21.3933%" y="751.50"></text></g><g><title>engine::internal::Entities::add_entity (7 samples, 0.55%)</title><rect x="21.1433%" y="725" width="0.5482%" height="15" fill="rgb(252,74,8)" fg:x="270" fg:w="7"/><text x="21.3933%" y="735.50"></text></g><g><title>engine::internal::EntityMap::add_entity (7 samples, 0.55%)</title><rect x="21.1433%" y="709" width="0.5482%" height="15" fill="rgb(244,155,2)" fg:x="270" fg:w="7"/><text x="21.3933%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.47%)</title><rect x="21.2216%" y="693" width="0.4699%" height="15" fill="rgb(215,81,35)" fg:x="271" fg:w="6"/><text x="21.4716%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.47%)</title><rect x="21.2216%" y="677" width="0.4699%" height="15" fill="rgb(206,55,2)" fg:x="271" fg:w="6"/><text x="21.4716%" y="687.50"></text></g><g><title>__libc_malloc (5 samples, 0.39%)</title><rect x="21.2999%" y="661" width="0.3915%" height="15" fill="rgb(231,2,34)" fg:x="272" fg:w="5"/><text x="21.5499%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (2 samples, 0.16%)</title><rect x="21.6915%" y="725" width="0.1566%" height="15" fill="rgb(242,176,48)" fg:x="277" fg:w="2"/><text x="21.9415%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="21.6915%" y="709" width="0.1566%" height="15" fill="rgb(249,31,36)" fg:x="277" fg:w="2"/><text x="21.9415%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (2 samples, 0.16%)</title><rect x="21.6915%" y="693" width="0.1566%" height="15" fill="rgb(205,18,17)" fg:x="277" fg:w="2"/><text x="21.9415%" y="703.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="21.6915%" y="677" width="0.1566%" height="15" fill="rgb(254,130,5)" fg:x="277" fg:w="2"/><text x="21.9415%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="21.8481%" y="725" width="0.0783%" height="15" fill="rgb(229,42,45)" fg:x="279" fg:w="1"/><text x="22.0981%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="21.8481%" y="709" width="0.0783%" height="15" fill="rgb(245,95,25)" fg:x="279" fg:w="1"/><text x="22.0981%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="21.9264%" y="725" width="0.0783%" height="15" fill="rgb(249,193,38)" fg:x="280" fg:w="1"/><text x="22.1764%" y="735.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="21.9264%" y="709" width="0.0783%" height="15" fill="rgb(241,140,43)" fg:x="280" fg:w="1"/><text x="22.1764%" y="719.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="21.9264%" y="693" width="0.0783%" height="15" fill="rgb(245,78,48)" fg:x="280" fg:w="1"/><text x="22.1764%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.0047%" y="693" width="0.0783%" height="15" fill="rgb(214,92,39)" fg:x="281" fg:w="1"/><text x="22.2547%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="22.0047%" y="725" width="0.1566%" height="15" fill="rgb(211,189,14)" fg:x="281" fg:w="2"/><text x="22.2547%" y="735.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="22.0047%" y="709" width="0.1566%" height="15" fill="rgb(218,7,24)" fg:x="281" fg:w="2"/><text x="22.2547%" y="719.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="22.0830%" y="693" width="0.0783%" height="15" fill="rgb(224,200,49)" fg:x="282" fg:w="1"/><text x="22.3330%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="22.0830%" y="677" width="0.0783%" height="15" fill="rgb(218,210,14)" fg:x="282" fg:w="1"/><text x="22.3330%" y="687.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (5 samples, 0.39%)</title><rect x="22.1613%" y="693" width="0.3915%" height="15" fill="rgb(234,142,31)" fg:x="283" fg:w="5"/><text x="22.4113%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.39%)</title><rect x="22.1613%" y="677" width="0.3915%" height="15" fill="rgb(227,165,2)" fg:x="283" fg:w="5"/><text x="22.4113%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.23%)</title><rect x="22.3179%" y="661" width="0.2349%" height="15" fill="rgb(232,44,46)" fg:x="285" fg:w="3"/><text x="22.5679%" y="671.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (3 samples, 0.23%)</title><rect x="22.3179%" y="645" width="0.2349%" height="15" fill="rgb(236,149,47)" fg:x="285" fg:w="3"/><text x="22.5679%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.23%)</title><rect x="22.3179%" y="629" width="0.2349%" height="15" fill="rgb(227,45,31)" fg:x="285" fg:w="3"/><text x="22.5679%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="22.3962%" y="613" width="0.1566%" height="15" fill="rgb(240,176,51)" fg:x="286" fg:w="2"/><text x="22.6462%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="22.3962%" y="597" width="0.1566%" height="15" fill="rgb(249,146,41)" fg:x="286" fg:w="2"/><text x="22.6462%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="22.3962%" y="581" width="0.1566%" height="15" fill="rgb(213,208,4)" fg:x="286" fg:w="2"/><text x="22.6462%" y="591.50"></text></g><g><title>plugins_core::build::Build::holding (21 samples, 1.64%)</title><rect x="21.1433%" y="757" width="1.6445%" height="15" fill="rgb(245,84,36)" fg:x="270" fg:w="21"/><text x="21.3933%" y="767.50"></text></g><g><title>plugins_core::tools::set_container (14 samples, 1.10%)</title><rect x="21.6915%" y="741" width="1.0963%" height="15" fill="rgb(254,84,18)" fg:x="277" fg:w="14"/><text x="21.9415%" y="751.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (8 samples, 0.63%)</title><rect x="22.1613%" y="725" width="0.6265%" height="15" fill="rgb(225,38,54)" fg:x="283" fg:w="8"/><text x="22.4113%" y="735.50"></text></g><g><title>kernel::model::Entity::replace_scope (8 samples, 0.63%)</title><rect x="22.1613%" y="709" width="0.6265%" height="15" fill="rgb(246,50,30)" fg:x="283" fg:w="8"/><text x="22.4113%" y="719.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (3 samples, 0.23%)</title><rect x="22.5529%" y="693" width="0.2349%" height="15" fill="rgb(246,148,9)" fg:x="288" fg:w="3"/><text x="22.8029%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.6312%" y="677" width="0.1566%" height="15" fill="rgb(223,75,4)" fg:x="289" fg:w="2"/><text x="22.8812%" y="687.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="22.6312%" y="661" width="0.1566%" height="15" fill="rgb(239,148,41)" fg:x="289" fg:w="2"/><text x="22.8812%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.6312%" y="645" width="0.1566%" height="15" fill="rgb(205,195,3)" fg:x="289" fg:w="2"/><text x="22.8812%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.7095%" y="629" width="0.0783%" height="15" fill="rgb(254,161,1)" fg:x="290" fg:w="1"/><text x="22.9595%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.7095%" y="613" width="0.0783%" height="15" fill="rgb(211,229,8)" fg:x="290" fg:w="1"/><text x="22.9595%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.7095%" y="597" width="0.0783%" height="15" fill="rgb(220,97,9)" fg:x="290" fg:w="1"/><text x="22.9595%" y="607.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="22.7878%" y="757" width="0.0783%" height="15" fill="rgb(240,218,8)" fg:x="291" fg:w="1"/><text x="23.0378%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="22.7878%" y="741" width="0.0783%" height="15" fill="rgb(250,44,0)" fg:x="291" fg:w="1"/><text x="23.0378%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="22.7878%" y="725" width="0.0783%" height="15" fill="rgb(236,41,53)" fg:x="291" fg:w="1"/><text x="23.0378%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="22.7878%" y="709" width="0.0783%" height="15" fill="rgb(218,227,13)" fg:x="291" fg:w="1"/><text x="23.0378%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="22.7878%" y="693" width="0.0783%" height="15" fill="rgb(217,94,32)" fg:x="291" fg:w="1"/><text x="23.0378%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="22.7878%" y="677" width="0.0783%" height="15" fill="rgb(213,217,12)" fg:x="291" fg:w="1"/><text x="23.0378%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="22.7878%" y="661" width="0.0783%" height="15" fill="rgb(229,13,46)" fg:x="291" fg:w="1"/><text x="23.0378%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="22.7878%" y="645" width="0.0783%" height="15" fill="rgb(243,139,5)" fg:x="291" fg:w="1"/><text x="23.0378%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="22.7878%" y="629" width="0.0783%" height="15" fill="rgb(249,38,45)" fg:x="291" fg:w="1"/><text x="23.0378%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="22.7878%" y="613" width="0.0783%" height="15" fill="rgb(216,70,11)" fg:x="291" fg:w="1"/><text x="23.0378%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="22.7878%" y="597" width="0.0783%" height="15" fill="rgb(253,101,25)" fg:x="291" fg:w="1"/><text x="23.0378%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="22.7878%" y="581" width="0.0783%" height="15" fill="rgb(207,197,30)" fg:x="291" fg:w="1"/><text x="23.0378%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.7878%" y="565" width="0.0783%" height="15" fill="rgb(238,87,13)" fg:x="291" fg:w="1"/><text x="23.0378%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.7878%" y="549" width="0.0783%" height="15" fill="rgb(215,155,8)" fg:x="291" fg:w="1"/><text x="23.0378%" y="559.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="22.7878%" y="533" width="0.0783%" height="15" fill="rgb(239,166,38)" fg:x="291" fg:w="1"/><text x="23.0378%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="22.7878%" y="517" width="0.0783%" height="15" fill="rgb(240,194,35)" fg:x="291" fg:w="1"/><text x="23.0378%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="22.7878%" y="501" width="0.0783%" height="15" fill="rgb(219,10,44)" fg:x="291" fg:w="1"/><text x="23.0378%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="22.7878%" y="485" width="0.0783%" height="15" fill="rgb(251,220,35)" fg:x="291" fg:w="1"/><text x="23.0378%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="22.7878%" y="469" width="0.0783%" height="15" fill="rgb(218,117,13)" fg:x="291" fg:w="1"/><text x="23.0378%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Occupying&gt;&gt; (1 samples, 0.08%)</title><rect x="22.9444%" y="725" width="0.0783%" height="15" fill="rgb(221,213,40)" fg:x="293" fg:w="1"/><text x="23.1944%" y="735.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="23.0227%" y="725" width="0.1566%" height="15" fill="rgb(251,224,35)" fg:x="294" fg:w="2"/><text x="23.2727%" y="735.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="23.0227%" y="709" width="0.1566%" height="15" fill="rgb(241,33,39)" fg:x="294" fg:w="2"/><text x="23.2727%" y="719.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="23.0227%" y="693" width="0.1566%" height="15" fill="rgb(222,74,17)" fg:x="294" fg:w="2"/><text x="23.2727%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="23.0227%" y="677" width="0.1566%" height="15" fill="rgb(225,103,0)" fg:x="294" fg:w="2"/><text x="23.2727%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="23.0227%" y="661" width="0.1566%" height="15" fill="rgb(240,0,12)" fg:x="294" fg:w="2"/><text x="23.2727%" y="671.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="23.0227%" y="645" width="0.1566%" height="15" fill="rgb(233,213,37)" fg:x="294" fg:w="2"/><text x="23.2727%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="23.0227%" y="629" width="0.1566%" height="15" fill="rgb(225,84,52)" fg:x="294" fg:w="2"/><text x="23.2727%" y="639.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="23.0227%" y="613" width="0.1566%" height="15" fill="rgb(247,160,51)" fg:x="294" fg:w="2"/><text x="23.2727%" y="623.50"></text></g><g><title>plugins_core::build::Build::occupying (5 samples, 0.39%)</title><rect x="22.8661%" y="757" width="0.3915%" height="15" fill="rgb(244,60,51)" fg:x="292" fg:w="5"/><text x="23.1161%" y="767.50"></text></g><g><title>plugins_core::tools::set_occupying (4 samples, 0.31%)</title><rect x="22.9444%" y="741" width="0.3132%" height="15" fill="rgb(233,114,7)" fg:x="293" fg:w="4"/><text x="23.1944%" y="751.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (1 samples, 0.08%)</title><rect x="23.1793%" y="725" width="0.0783%" height="15" fill="rgb(246,136,16)" fg:x="296" fg:w="1"/><text x="23.4293%" y="735.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="23.1793%" y="709" width="0.0783%" height="15" fill="rgb(243,114,45)" fg:x="296" fg:w="1"/><text x="23.4293%" y="719.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="23.1793%" y="693" width="0.0783%" height="15" fill="rgb(247,183,43)" fg:x="296" fg:w="1"/><text x="23.4293%" y="703.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="23.1793%" y="677" width="0.0783%" height="15" fill="rgb(251,210,42)" fg:x="296" fg:w="1"/><text x="23.4293%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="23.2576%" y="741" width="0.0783%" height="15" fill="rgb(221,88,35)" fg:x="297" fg:w="1"/><text x="23.5076%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="23.2576%" y="725" width="0.0783%" height="15" fill="rgb(242,21,20)" fg:x="297" fg:w="1"/><text x="23.5076%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="23.2576%" y="709" width="0.0783%" height="15" fill="rgb(233,226,36)" fg:x="297" fg:w="1"/><text x="23.5076%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::users::model::Usernames&gt;&gt; (1 samples, 0.08%)</title><rect x="23.3359%" y="709" width="0.0783%" height="15" fill="rgb(243,189,34)" fg:x="298" fg:w="1"/><text x="23.5859%" y="719.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (125 samples, 9.79%)</title><rect x="13.8606%" y="773" width="9.7886%" height="15" fill="rgb(207,145,50)" fg:x="177" fg:w="125"/><text x="14.1106%" y="783.50">plugins_core::..</text></g><g><title>plugins_core::build::Build::with_username (5 samples, 0.39%)</title><rect x="23.2576%" y="757" width="0.3915%" height="15" fill="rgb(242,1,50)" fg:x="297" fg:w="5"/><text x="23.5076%" y="767.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (4 samples, 0.31%)</title><rect x="23.3359%" y="741" width="0.3132%" height="15" fill="rgb(231,65,32)" fg:x="298" fg:w="4"/><text x="23.5859%" y="751.50"></text></g><g><title>engine::users::model::add_username_to_key (4 samples, 0.31%)</title><rect x="23.3359%" y="725" width="0.3132%" height="15" fill="rgb(208,68,49)" fg:x="298" fg:w="4"/><text x="23.5859%" y="735.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.23%)</title><rect x="23.4143%" y="709" width="0.2349%" height="15" fill="rgb(253,54,49)" fg:x="299" fg:w="3"/><text x="23.6643%" y="719.50"></text></g><g><title>kernel::model::Entity::replace_scope (3 samples, 0.23%)</title><rect x="23.4143%" y="693" width="0.2349%" height="15" fill="rgb(245,186,24)" fg:x="299" fg:w="3"/><text x="23.6643%" y="703.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (2 samples, 0.16%)</title><rect x="23.4926%" y="677" width="0.1566%" height="15" fill="rgb(209,2,41)" fg:x="300" fg:w="2"/><text x="23.7426%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="23.4926%" y="661" width="0.1566%" height="15" fill="rgb(242,208,54)" fg:x="300" fg:w="2"/><text x="23.7426%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="23.5709%" y="645" width="0.0783%" height="15" fill="rgb(225,9,51)" fg:x="301" fg:w="1"/><text x="23.8209%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.5709%" y="629" width="0.0783%" height="15" fill="rgb(207,207,25)" fg:x="301" fg:w="1"/><text x="23.8209%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.5709%" y="613" width="0.0783%" height="15" fill="rgb(253,96,18)" fg:x="301" fg:w="1"/><text x="23.8209%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="23.6492%" y="709" width="0.1566%" height="15" fill="rgb(252,215,20)" fg:x="302" fg:w="2"/><text x="23.8992%" y="719.50"></text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="23.6492%" y="693" width="0.1566%" height="15" fill="rgb(245,227,26)" fg:x="302" fg:w="2"/><text x="23.8992%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="23.6492%" y="677" width="0.1566%" height="15" fill="rgb(241,208,0)" fg:x="302" fg:w="2"/><text x="23.8992%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="23.6492%" y="661" width="0.1566%" height="15" fill="rgb(224,130,10)" fg:x="302" fg:w="2"/><text x="23.8992%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="23.6492%" y="645" width="0.1566%" height="15" fill="rgb(237,29,0)" fg:x="302" fg:w="2"/><text x="23.8992%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="23.6492%" y="629" width="0.1566%" height="15" fill="rgb(219,27,41)" fg:x="302" fg:w="2"/><text x="23.8992%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="23.6492%" y="613" width="0.1566%" height="15" fill="rgb(245,101,19)" fg:x="302" fg:w="2"/><text x="23.8992%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="23.6492%" y="597" width="0.1566%" height="15" fill="rgb(243,44,37)" fg:x="302" fg:w="2"/><text x="23.8992%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="23.7275%" y="581" width="0.0783%" height="15" fill="rgb(228,213,43)" fg:x="303" fg:w="1"/><text x="23.9775%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="23.7275%" y="565" width="0.0783%" height="15" fill="rgb(219,163,21)" fg:x="303" fg:w="1"/><text x="23.9775%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.23%)</title><rect x="23.6492%" y="725" width="0.2349%" height="15" fill="rgb(234,86,24)" fg:x="302" fg:w="3"/><text x="23.8992%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="23.8058%" y="709" width="0.0783%" height="15" fill="rgb(225,10,24)" fg:x="304" fg:w="1"/><text x="24.0558%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.31%)</title><rect x="23.6492%" y="741" width="0.3132%" height="15" fill="rgb(218,109,7)" fg:x="302" fg:w="4"/><text x="23.8992%" y="751.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="23.8841%" y="725" width="0.0783%" height="15" fill="rgb(210,20,26)" fg:x="305" fg:w="1"/><text x="24.1341%" y="735.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="23.8841%" y="709" width="0.0783%" height="15" fill="rgb(216,18,1)" fg:x="305" fg:w="1"/><text x="24.1341%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.9624%" y="677" width="0.0783%" height="15" fill="rgb(206,163,23)" fg:x="306" fg:w="1"/><text x="24.2124%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (2 samples, 0.16%)</title><rect x="23.9624%" y="709" width="0.1566%" height="15" fill="rgb(229,150,31)" fg:x="306" fg:w="2"/><text x="24.2124%" y="719.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::EntityKey&gt;&gt;::following (2 samples, 0.16%)</title><rect x="23.9624%" y="693" width="0.1566%" height="15" fill="rgb(231,10,5)" fg:x="306" fg:w="2"/><text x="24.2124%" y="703.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.08%)</title><rect x="24.0407%" y="677" width="0.0783%" height="15" fill="rgb(250,40,50)" fg:x="307" fg:w="1"/><text x="24.2907%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.0407%" y="661" width="0.0783%" height="15" fill="rgb(217,119,7)" fg:x="307" fg:w="1"/><text x="24.2907%" y="671.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (242 samples, 18.95%)</title><rect x="5.2467%" y="789" width="18.9507%" height="15" fill="rgb(245,214,40)" fg:x="67" fg:w="242"/><text x="5.4967%" y="799.50">&lt;tests::HoldingKeyInVessel as ..</text></g><g><title>plugins_core::build::BuildSurroundings::make (7 samples, 0.55%)</title><rect x="23.6492%" y="773" width="0.5482%" height="15" fill="rgb(216,187,1)" fg:x="302" fg:w="7"/><text x="23.8992%" y="783.50"></text></g><g><title>plugins_core::build::QuickThing::make (7 samples, 0.55%)</title><rect x="23.6492%" y="757" width="0.5482%" height="15" fill="rgb(237,146,21)" fg:x="302" fg:w="7"/><text x="23.8992%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.23%)</title><rect x="23.9624%" y="741" width="0.2349%" height="15" fill="rgb(210,174,47)" fg:x="306" fg:w="3"/><text x="24.2124%" y="751.50"></text></g><g><title>kernel::model::Entity::new_blank (3 samples, 0.23%)</title><rect x="23.9624%" y="725" width="0.2349%" height="15" fill="rgb(218,111,39)" fg:x="306" fg:w="3"/><text x="24.2124%" y="735.50"></text></g><g><title>kernel::model::Entity::new_with_key (1 samples, 0.08%)</title><rect x="24.1190%" y="709" width="0.0783%" height="15" fill="rgb(224,95,19)" fg:x="308" fg:w="1"/><text x="24.3690%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="24.1973%" y="773" width="0.0783%" height="15" fill="rgb(234,15,38)" fg:x="309" fg:w="1"/><text x="24.4473%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="24.1973%" y="757" width="0.0783%" height="15" fill="rgb(246,56,12)" fg:x="309" fg:w="1"/><text x="24.4473%" y="767.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="24.1973%" y="741" width="0.0783%" height="15" fill="rgb(247,16,17)" fg:x="309" fg:w="1"/><text x="24.4473%" y="751.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="24.1973%" y="725" width="0.0783%" height="15" fill="rgb(215,151,11)" fg:x="309" fg:w="1"/><text x="24.4473%" y="735.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="24.1973%" y="709" width="0.0783%" height="15" fill="rgb(225,16,24)" fg:x="309" fg:w="1"/><text x="24.4473%" y="719.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="24.1973%" y="693" width="0.0783%" height="15" fill="rgb(217,117,5)" fg:x="309" fg:w="1"/><text x="24.4473%" y="703.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="24.1973%" y="677" width="0.0783%" height="15" fill="rgb(246,187,53)" fg:x="309" fg:w="1"/><text x="24.4473%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="24.1973%" y="661" width="0.0783%" height="15" fill="rgb(241,71,40)" fg:x="309" fg:w="1"/><text x="24.4473%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="24.1973%" y="645" width="0.0783%" height="15" fill="rgb(231,67,39)" fg:x="309" fg:w="1"/><text x="24.4473%" y="655.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="24.1973%" y="629" width="0.0783%" height="15" fill="rgb(222,120,24)" fg:x="309" fg:w="1"/><text x="24.4473%" y="639.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="24.1973%" y="613" width="0.0783%" height="15" fill="rgb(248,3,3)" fg:x="309" fg:w="1"/><text x="24.4473%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="24.1973%" y="597" width="0.0783%" height="15" fill="rgb(228,218,5)" fg:x="309" fg:w="1"/><text x="24.4473%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="24.3540%" y="757" width="0.0783%" height="15" fill="rgb(212,202,43)" fg:x="311" fg:w="1"/><text x="24.6040%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="24.3540%" y="741" width="0.0783%" height="15" fill="rgb(235,183,2)" fg:x="311" fg:w="1"/><text x="24.6040%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.3540%" y="725" width="0.0783%" height="15" fill="rgb(230,165,10)" fg:x="311" fg:w="1"/><text x="24.6040%" y="735.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="24.4323%" y="725" width="0.0783%" height="15" fill="rgb(219,54,40)" fg:x="312" fg:w="1"/><text x="24.6823%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.4323%" y="709" width="0.0783%" height="15" fill="rgb(244,73,9)" fg:x="312" fg:w="1"/><text x="24.6823%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.4323%" y="693" width="0.0783%" height="15" fill="rgb(212,32,45)" fg:x="312" fg:w="1"/><text x="24.6823%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.4323%" y="677" width="0.0783%" height="15" fill="rgb(205,58,31)" fg:x="312" fg:w="1"/><text x="24.6823%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.4323%" y="661" width="0.0783%" height="15" fill="rgb(250,120,43)" fg:x="312" fg:w="1"/><text x="24.6823%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.4323%" y="645" width="0.0783%" height="15" fill="rgb(235,13,10)" fg:x="312" fg:w="1"/><text x="24.6823%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.4323%" y="629" width="0.0783%" height="15" fill="rgb(232,219,31)" fg:x="312" fg:w="1"/><text x="24.6823%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.4323%" y="613" width="0.0783%" height="15" fill="rgb(218,157,51)" fg:x="312" fg:w="1"/><text x="24.6823%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.4323%" y="597" width="0.0783%" height="15" fill="rgb(211,91,52)" fg:x="312" fg:w="1"/><text x="24.6823%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.4323%" y="581" width="0.0783%" height="15" fill="rgb(240,173,1)" fg:x="312" fg:w="1"/><text x="24.6823%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.4323%" y="565" width="0.0783%" height="15" fill="rgb(248,20,47)" fg:x="312" fg:w="1"/><text x="24.6823%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.4323%" y="549" width="0.0783%" height="15" fill="rgb(217,221,40)" fg:x="312" fg:w="1"/><text x="24.6823%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.4323%" y="533" width="0.0783%" height="15" fill="rgb(226,149,51)" fg:x="312" fg:w="1"/><text x="24.6823%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="24.4323%" y="757" width="0.1566%" height="15" fill="rgb(252,193,7)" fg:x="312" fg:w="2"/><text x="24.6823%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="24.4323%" y="741" width="0.1566%" height="15" fill="rgb(205,123,0)" fg:x="312" fg:w="2"/><text x="24.6823%" y="751.50"></text></g><g><title>engine::session::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="24.5106%" y="725" width="0.0783%" height="15" fill="rgb(233,173,25)" fg:x="313" fg:w="1"/><text x="24.7606%" y="735.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="24.5889%" y="757" width="0.1566%" height="15" fill="rgb(216,63,32)" fg:x="314" fg:w="2"/><text x="24.8389%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="24.5889%" y="741" width="0.1566%" height="15" fill="rgb(209,56,45)" fg:x="314" fg:w="2"/><text x="24.8389%" y="751.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="24.5889%" y="725" width="0.1566%" height="15" fill="rgb(226,111,49)" fg:x="314" fg:w="2"/><text x="24.8389%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.6672%" y="709" width="0.0783%" height="15" fill="rgb(244,181,21)" fg:x="315" fg:w="1"/><text x="24.9172%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.6672%" y="693" width="0.0783%" height="15" fill="rgb(222,126,15)" fg:x="315" fg:w="1"/><text x="24.9172%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.6672%" y="677" width="0.0783%" height="15" fill="rgb(222,95,17)" fg:x="315" fg:w="1"/><text x="24.9172%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.6672%" y="661" width="0.0783%" height="15" fill="rgb(254,46,5)" fg:x="315" fg:w="1"/><text x="24.9172%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.6672%" y="645" width="0.0783%" height="15" fill="rgb(236,216,35)" fg:x="315" fg:w="1"/><text x="24.9172%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.6672%" y="629" width="0.0783%" height="15" fill="rgb(217,187,26)" fg:x="315" fg:w="1"/><text x="24.9172%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.6672%" y="613" width="0.0783%" height="15" fill="rgb(207,192,25)" fg:x="315" fg:w="1"/><text x="24.9172%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="24.6672%" y="597" width="0.0783%" height="15" fill="rgb(253,135,27)" fg:x="315" fg:w="1"/><text x="24.9172%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="24.6672%" y="581" width="0.0783%" height="15" fill="rgb(211,122,29)" fg:x="315" fg:w="1"/><text x="24.9172%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="24.7455%" y="709" width="0.0783%" height="15" fill="rgb(233,162,40)" fg:x="316" fg:w="1"/><text x="24.9955%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.39%)</title><rect x="24.8238%" y="693" width="0.3915%" height="15" fill="rgb(222,184,47)" fg:x="317" fg:w="5"/><text x="25.0738%" y="703.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="24.9804%" y="677" width="0.2349%" height="15" fill="rgb(249,99,23)" fg:x="319" fg:w="3"/><text x="25.2304%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.23%)</title><rect x="24.9804%" y="661" width="0.2349%" height="15" fill="rgb(214,60,12)" fg:x="319" fg:w="3"/><text x="25.2304%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.23%)</title><rect x="24.9804%" y="645" width="0.2349%" height="15" fill="rgb(250,229,36)" fg:x="319" fg:w="3"/><text x="25.2304%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="25.1370%" y="629" width="0.0783%" height="15" fill="rgb(232,195,10)" fg:x="321" fg:w="1"/><text x="25.3870%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.1370%" y="613" width="0.0783%" height="15" fill="rgb(205,213,31)" fg:x="321" fg:w="1"/><text x="25.3870%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="25.1370%" y="597" width="0.0783%" height="15" fill="rgb(237,43,8)" fg:x="321" fg:w="1"/><text x="25.3870%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.55%)</title><rect x="24.8238%" y="709" width="0.5482%" height="15" fill="rgb(216,208,3)" fg:x="317" fg:w="7"/><text x="25.0738%" y="719.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="25.2153%" y="693" width="0.1566%" height="15" fill="rgb(228,179,44)" fg:x="322" fg:w="2"/><text x="25.4653%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.2937%" y="677" width="0.0783%" height="15" fill="rgb(230,192,27)" fg:x="323" fg:w="1"/><text x="25.5437%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.2937%" y="661" width="0.0783%" height="15" fill="rgb(251,30,38)" fg:x="323" fg:w="1"/><text x="25.5437%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="25.3720%" y="693" width="0.0783%" height="15" fill="rgb(246,55,52)" fg:x="324" fg:w="1"/><text x="25.6220%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="25.4503%" y="693" width="0.1566%" height="15" fill="rgb(249,79,26)" fg:x="325" fg:w="2"/><text x="25.7003%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.5286%" y="677" width="0.0783%" height="15" fill="rgb(220,202,16)" fg:x="326" fg:w="1"/><text x="25.7786%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.5286%" y="661" width="0.0783%" height="15" fill="rgb(250,170,23)" fg:x="326" fg:w="1"/><text x="25.7786%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.5286%" y="645" width="0.0783%" height="15" fill="rgb(230,7,37)" fg:x="326" fg:w="1"/><text x="25.7786%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.47%)</title><rect x="25.6069%" y="693" width="0.4699%" height="15" fill="rgb(213,71,1)" fg:x="327" fg:w="6"/><text x="25.8569%" y="703.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.47%)</title><rect x="25.6069%" y="677" width="0.4699%" height="15" fill="rgb(227,87,39)" fg:x="327" fg:w="6"/><text x="25.8569%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.23%)</title><rect x="25.8418%" y="661" width="0.2349%" height="15" fill="rgb(210,41,29)" fg:x="330" fg:w="3"/><text x="26.0918%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="25.9201%" y="645" width="0.1566%" height="15" fill="rgb(206,191,31)" fg:x="331" fg:w="2"/><text x="26.1701%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="26.0767%" y="677" width="0.1566%" height="15" fill="rgb(247,75,54)" fg:x="333" fg:w="2"/><text x="26.3267%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="26.0767%" y="661" width="0.1566%" height="15" fill="rgb(208,54,50)" fg:x="333" fg:w="2"/><text x="26.3267%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="26.0767%" y="645" width="0.1566%" height="15" fill="rgb(214,90,37)" fg:x="333" fg:w="2"/><text x="26.3267%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="26.0767%" y="629" width="0.1566%" height="15" fill="rgb(220,132,6)" fg:x="333" fg:w="2"/><text x="26.3267%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.1551%" y="613" width="0.0783%" height="15" fill="rgb(213,167,7)" fg:x="334" fg:w="1"/><text x="26.4051%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="26.2334%" y="677" width="0.0783%" height="15" fill="rgb(243,36,27)" fg:x="335" fg:w="1"/><text x="26.4834%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.2334%" y="661" width="0.0783%" height="15" fill="rgb(235,147,12)" fg:x="335" fg:w="1"/><text x="26.4834%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.2334%" y="645" width="0.0783%" height="15" fill="rgb(212,198,44)" fg:x="335" fg:w="1"/><text x="26.4834%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="26.3117%" y="661" width="0.2349%" height="15" fill="rgb(218,68,50)" fg:x="336" fg:w="3"/><text x="26.5617%" y="671.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="26.3117%" y="645" width="0.2349%" height="15" fill="rgb(224,79,48)" fg:x="336" fg:w="3"/><text x="26.5617%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="26.3900%" y="629" width="0.1566%" height="15" fill="rgb(213,191,50)" fg:x="337" fg:w="2"/><text x="26.6400%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="26.6249%" y="645" width="0.0783%" height="15" fill="rgb(254,146,10)" fg:x="340" fg:w="1"/><text x="26.8749%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.6249%" y="629" width="0.0783%" height="15" fill="rgb(215,175,11)" fg:x="340" fg:w="1"/><text x="26.8749%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.6249%" y="613" width="0.0783%" height="15" fill="rgb(207,49,7)" fg:x="340" fg:w="1"/><text x="26.8749%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.6249%" y="597" width="0.0783%" height="15" fill="rgb(234,144,29)" fg:x="340" fg:w="1"/><text x="26.8749%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="26.7032%" y="645" width="0.1566%" height="15" fill="rgb(213,222,48)" fg:x="341" fg:w="2"/><text x="26.9532%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="26.7032%" y="629" width="0.1566%" height="15" fill="rgb(222,8,6)" fg:x="341" fg:w="2"/><text x="26.9532%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="26.8598%" y="645" width="0.0783%" height="15" fill="rgb(221,114,49)" fg:x="343" fg:w="1"/><text x="27.1098%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.47%)</title><rect x="26.5466%" y="661" width="0.4699%" height="15" fill="rgb(250,140,42)" fg:x="339" fg:w="6"/><text x="26.7966%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.9381%" y="645" width="0.0783%" height="15" fill="rgb(250,150,27)" fg:x="344" fg:w="1"/><text x="27.1881%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.9381%" y="629" width="0.0783%" height="15" fill="rgb(252,159,3)" fg:x="344" fg:w="1"/><text x="27.1881%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.9381%" y="613" width="0.0783%" height="15" fill="rgb(241,182,3)" fg:x="344" fg:w="1"/><text x="27.1881%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.02%)</title><rect x="26.0767%" y="693" width="1.0180%" height="15" fill="rgb(236,3,9)" fg:x="333" fg:w="13"/><text x="26.3267%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.78%)</title><rect x="26.3117%" y="677" width="0.7831%" height="15" fill="rgb(223,227,51)" fg:x="336" fg:w="10"/><text x="26.5617%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.0164%" y="661" width="0.0783%" height="15" fill="rgb(232,133,30)" fg:x="345" fg:w="1"/><text x="27.2664%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.0164%" y="645" width="0.0783%" height="15" fill="rgb(209,93,27)" fg:x="345" fg:w="1"/><text x="27.2664%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.0164%" y="629" width="0.0783%" height="15" fill="rgb(208,108,34)" fg:x="345" fg:w="1"/><text x="27.2664%" y="639.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (35 samples, 2.74%)</title><rect x="24.7455%" y="725" width="2.7408%" height="15" fill="rgb(215,189,13)" fg:x="316" fg:w="35"/><text x="24.9955%" y="735.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.11%)</title><rect x="25.3720%" y="709" width="2.1143%" height="15" fill="rgb(206,88,23)" fg:x="324" fg:w="27"/><text x="25.6220%" y="719.50">s..</text></g><g><title>std::io::Write::write_all (5 samples, 0.39%)</title><rect x="27.0948%" y="693" width="0.3915%" height="15" fill="rgb(240,173,0)" fg:x="346" fg:w="5"/><text x="27.3448%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.31%)</title><rect x="27.1731%" y="677" width="0.3132%" height="15" fill="rgb(223,106,52)" fg:x="347" fg:w="4"/><text x="27.4231%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.31%)</title><rect x="27.1731%" y="661" width="0.3132%" height="15" fill="rgb(206,130,16)" fg:x="347" fg:w="4"/><text x="27.4231%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="27.4080%" y="645" width="0.0783%" height="15" fill="rgb(220,54,25)" fg:x="350" fg:w="1"/><text x="27.6580%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="27.4080%" y="629" width="0.0783%" height="15" fill="rgb(210,4,38)" fg:x="350" fg:w="1"/><text x="27.6580%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="27.4080%" y="613" width="0.0783%" height="15" fill="rgb(238,94,39)" fg:x="350" fg:w="1"/><text x="27.6580%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="27.4863%" y="693" width="0.1566%" height="15" fill="rgb(234,124,34)" fg:x="351" fg:w="2"/><text x="27.7363%" y="703.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="27.7212%" y="677" width="0.1566%" height="15" fill="rgb(221,91,40)" fg:x="354" fg:w="2"/><text x="27.9712%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="27.8778%" y="677" width="0.1566%" height="15" fill="rgb(246,53,28)" fg:x="356" fg:w="2"/><text x="28.1278%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.86%)</title><rect x="27.4863%" y="725" width="0.8614%" height="15" fill="rgb(229,109,7)" fg:x="351" fg:w="11"/><text x="27.7363%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.86%)</title><rect x="27.4863%" y="709" width="0.8614%" height="15" fill="rgb(249,117,8)" fg:x="351" fg:w="11"/><text x="27.7363%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.70%)</title><rect x="27.6429%" y="693" width="0.7048%" height="15" fill="rgb(210,181,1)" fg:x="353" fg:w="9"/><text x="27.8929%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="28.0345%" y="677" width="0.3132%" height="15" fill="rgb(211,66,1)" fg:x="358" fg:w="4"/><text x="28.2845%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="28.1128%" y="661" width="0.2349%" height="15" fill="rgb(221,90,14)" fg:x="359" fg:w="3"/><text x="28.3628%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="28.1911%" y="645" width="0.1566%" height="15" fill="rgb(219,222,44)" fg:x="360" fg:w="2"/><text x="28.4411%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="28.1911%" y="629" width="0.1566%" height="15" fill="rgb(246,34,33)" fg:x="360" fg:w="2"/><text x="28.4411%" y="639.50"></text></g><g><title>__libc_free (3 samples, 0.23%)</title><rect x="28.5826%" y="677" width="0.2349%" height="15" fill="rgb(227,135,41)" fg:x="365" fg:w="3"/><text x="28.8326%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.8175%" y="677" width="0.0783%" height="15" fill="rgb(226,15,14)" fg:x="368" fg:w="1"/><text x="29.0675%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.8175%" y="661" width="0.0783%" height="15" fill="rgb(236,148,47)" fg:x="368" fg:w="1"/><text x="29.0675%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.39%)</title><rect x="29.0525%" y="661" width="0.3915%" height="15" fill="rgb(233,162,52)" fg:x="371" fg:w="5"/><text x="29.3025%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="29.2874%" y="645" width="0.1566%" height="15" fill="rgb(244,35,28)" fg:x="374" fg:w="2"/><text x="29.5374%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="29.6006%" y="645" width="0.1566%" height="15" fill="rgb(205,121,10)" fg:x="378" fg:w="2"/><text x="29.8506%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="29.7572%" y="645" width="0.1566%" height="15" fill="rgb(250,58,18)" fg:x="380" fg:w="2"/><text x="30.0072%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.8356%" y="629" width="0.0783%" height="15" fill="rgb(216,37,13)" fg:x="381" fg:w="1"/><text x="30.0856%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.1488%" y="629" width="0.0783%" height="15" fill="rgb(221,215,42)" fg:x="385" fg:w="1"/><text x="30.3988%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.39%)</title><rect x="30.2271%" y="629" width="0.3915%" height="15" fill="rgb(217,214,19)" fg:x="386" fg:w="5"/><text x="30.4771%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.5403%" y="613" width="0.0783%" height="15" fill="rgb(233,139,13)" fg:x="390" fg:w="1"/><text x="30.7903%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (29 samples, 2.27%)</title><rect x="28.4260%" y="709" width="2.2709%" height="15" fill="rgb(247,168,23)" fg:x="363" fg:w="29"/><text x="28.6760%" y="719.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (29 samples, 2.27%)</title><rect x="28.4260%" y="693" width="2.2709%" height="15" fill="rgb(207,202,1)" fg:x="363" fg:w="29"/><text x="28.6760%" y="703.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (23 samples, 1.80%)</title><rect x="28.8958%" y="677" width="1.8011%" height="15" fill="rgb(220,155,48)" fg:x="369" fg:w="23"/><text x="29.1458%" y="687.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.25%)</title><rect x="29.4440%" y="661" width="1.2529%" height="15" fill="rgb(250,43,26)" fg:x="376" fg:w="16"/><text x="29.6940%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.78%)</title><rect x="29.9139%" y="645" width="0.7831%" height="15" fill="rgb(212,190,23)" fg:x="382" fg:w="10"/><text x="30.1639%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="30.6186%" y="629" width="0.0783%" height="15" fill="rgb(216,39,24)" fg:x="391" fg:w="1"/><text x="30.8686%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="30.6186%" y="613" width="0.0783%" height="15" fill="rgb(252,113,16)" fg:x="391" fg:w="1"/><text x="30.8686%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.6186%" y="597" width="0.0783%" height="15" fill="rgb(208,113,19)" fg:x="391" fg:w="1"/><text x="30.8686%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.8536%" y="677" width="0.0783%" height="15" fill="rgb(234,107,25)" fg:x="394" fg:w="1"/><text x="31.1036%" y="687.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="31.1668%" y="645" width="0.0783%" height="15" fill="rgb(234,217,51)" fg:x="398" fg:w="1"/><text x="31.4168%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="31.1668%" y="629" width="0.0783%" height="15" fill="rgb(251,29,42)" fg:x="398" fg:w="1"/><text x="31.4168%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.55%)</title><rect x="30.9319%" y="677" width="0.5482%" height="15" fill="rgb(221,62,51)" fg:x="395" fg:w="7"/><text x="31.1819%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.39%)</title><rect x="31.0885%" y="661" width="0.3915%" height="15" fill="rgb(240,192,43)" fg:x="397" fg:w="5"/><text x="31.3385%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.23%)</title><rect x="31.2451%" y="645" width="0.2349%" height="15" fill="rgb(224,157,47)" fg:x="399" fg:w="3"/><text x="31.4951%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="31.4800%" y="677" width="0.1566%" height="15" fill="rgb(226,84,45)" fg:x="402" fg:w="2"/><text x="31.7300%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="31.4800%" y="661" width="0.1566%" height="15" fill="rgb(208,207,23)" fg:x="402" fg:w="2"/><text x="31.7300%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="31.4800%" y="645" width="0.1566%" height="15" fill="rgb(253,34,51)" fg:x="402" fg:w="2"/><text x="31.7300%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="31.6366%" y="677" width="0.1566%" height="15" fill="rgb(227,26,34)" fg:x="404" fg:w="2"/><text x="31.8866%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="31.6366%" y="661" width="0.1566%" height="15" fill="rgb(245,75,19)" fg:x="404" fg:w="2"/><text x="31.8866%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.7150%" y="645" width="0.0783%" height="15" fill="rgb(250,191,31)" fg:x="405" fg:w="1"/><text x="31.9650%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (3 samples, 0.23%)</title><rect x="31.7933%" y="677" width="0.2349%" height="15" fill="rgb(224,11,50)" fg:x="406" fg:w="3"/><text x="32.0433%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.23%)</title><rect x="31.7933%" y="661" width="0.2349%" height="15" fill="rgb(231,171,7)" fg:x="406" fg:w="3"/><text x="32.0433%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="31.7933%" y="645" width="0.2349%" height="15" fill="rgb(252,214,10)" fg:x="406" fg:w="3"/><text x="32.0433%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="31.8716%" y="629" width="0.1566%" height="15" fill="rgb(249,45,46)" fg:x="407" fg:w="2"/><text x="32.1216%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.9499%" y="613" width="0.0783%" height="15" fill="rgb(240,173,7)" fg:x="408" fg:w="1"/><text x="32.1999%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.0282%" y="645" width="0.0783%" height="15" fill="rgb(235,214,13)" fg:x="409" fg:w="1"/><text x="32.2782%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.0282%" y="629" width="0.0783%" height="15" fill="rgb(245,156,8)" fg:x="409" fg:w="1"/><text x="32.2782%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.0282%" y="613" width="0.0783%" height="15" fill="rgb(235,46,12)" fg:x="409" fg:w="1"/><text x="32.2782%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.1848%" y="629" width="0.0783%" height="15" fill="rgb(221,81,14)" fg:x="411" fg:w="1"/><text x="32.4348%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.1848%" y="613" width="0.0783%" height="15" fill="rgb(238,207,9)" fg:x="411" fg:w="1"/><text x="32.4348%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.1848%" y="597" width="0.0783%" height="15" fill="rgb(224,129,35)" fg:x="411" fg:w="1"/><text x="32.4348%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.3414%" y="597" width="0.0783%" height="15" fill="rgb(243,218,34)" fg:x="413" fg:w="1"/><text x="32.5914%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.3414%" y="581" width="0.0783%" height="15" fill="rgb(220,166,13)" fg:x="413" fg:w="1"/><text x="32.5914%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.23%)</title><rect x="32.2631%" y="613" width="0.2349%" height="15" fill="rgb(227,167,49)" fg:x="412" fg:w="3"/><text x="32.5131%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="32.4197%" y="597" width="0.0783%" height="15" fill="rgb(234,142,12)" fg:x="414" fg:w="1"/><text x="32.6697%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.4980%" y="597" width="0.0783%" height="15" fill="rgb(207,100,48)" fg:x="415" fg:w="1"/><text x="32.7480%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.5764%" y="597" width="0.0783%" height="15" fill="rgb(210,25,14)" fg:x="416" fg:w="1"/><text x="32.8264%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.47%)</title><rect x="32.4980%" y="613" width="0.4699%" height="15" fill="rgb(246,116,27)" fg:x="415" fg:w="6"/><text x="32.7480%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (4 samples, 0.31%)</title><rect x="32.6547%" y="597" width="0.3132%" height="15" fill="rgb(214,193,42)" fg:x="417" fg:w="4"/><text x="32.9047%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.23%)</title><rect x="32.7330%" y="581" width="0.2349%" height="15" fill="rgb(214,122,8)" fg:x="418" fg:w="3"/><text x="32.9830%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="32.8896%" y="565" width="0.0783%" height="15" fill="rgb(244,173,18)" fg:x="420" fg:w="1"/><text x="33.1396%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="32.8896%" y="549" width="0.0783%" height="15" fill="rgb(232,68,19)" fg:x="420" fg:w="1"/><text x="33.1396%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (13 samples, 1.02%)</title><rect x="32.0282%" y="677" width="1.0180%" height="15" fill="rgb(236,224,1)" fg:x="409" fg:w="13"/><text x="32.2782%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (13 samples, 1.02%)</title><rect x="32.0282%" y="661" width="1.0180%" height="15" fill="rgb(240,11,8)" fg:x="409" fg:w="13"/><text x="32.2782%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.94%)</title><rect x="32.1065%" y="645" width="0.9397%" height="15" fill="rgb(244,159,20)" fg:x="410" fg:w="12"/><text x="32.3565%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (10 samples, 0.78%)</title><rect x="32.2631%" y="629" width="0.7831%" height="15" fill="rgb(240,223,54)" fg:x="412" fg:w="10"/><text x="32.5131%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.9679%" y="613" width="0.0783%" height="15" fill="rgb(237,146,5)" fg:x="421" fg:w="1"/><text x="33.2179%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.2028%" y="645" width="0.0783%" height="15" fill="rgb(218,221,32)" fg:x="424" fg:w="1"/><text x="33.4528%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="33.5161%" y="629" width="0.2349%" height="15" fill="rgb(244,96,26)" fg:x="428" fg:w="3"/><text x="33.7661%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.6727%" y="613" width="0.0783%" height="15" fill="rgb(245,184,37)" fg:x="430" fg:w="1"/><text x="33.9227%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.6727%" y="597" width="0.0783%" height="15" fill="rgb(248,91,47)" fg:x="430" fg:w="1"/><text x="33.9227%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.39%)</title><rect x="33.7510%" y="629" width="0.3915%" height="15" fill="rgb(243,199,8)" fg:x="431" fg:w="5"/><text x="34.0010%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.39%)</title><rect x="33.7510%" y="613" width="0.3915%" height="15" fill="rgb(249,12,15)" fg:x="431" fg:w="5"/><text x="34.0010%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.23%)</title><rect x="33.9076%" y="597" width="0.2349%" height="15" fill="rgb(245,97,12)" fg:x="433" fg:w="3"/><text x="34.1576%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.9859%" y="581" width="0.1566%" height="15" fill="rgb(244,61,1)" fg:x="434" fg:w="2"/><text x="34.2359%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (17 samples, 1.33%)</title><rect x="33.2811%" y="645" width="1.3312%" height="15" fill="rgb(222,194,10)" fg:x="425" fg:w="17"/><text x="33.5311%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.47%)</title><rect x="34.1425%" y="629" width="0.4699%" height="15" fill="rgb(226,178,8)" fg:x="436" fg:w="6"/><text x="34.3925%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="34.2991%" y="613" width="0.3132%" height="15" fill="rgb(241,32,34)" fg:x="438" fg:w="4"/><text x="34.5491%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.5341%" y="597" width="0.0783%" height="15" fill="rgb(254,26,6)" fg:x="441" fg:w="1"/><text x="34.7841%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.5341%" y="581" width="0.0783%" height="15" fill="rgb(249,71,11)" fg:x="441" fg:w="1"/><text x="34.7841%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.5341%" y="565" width="0.0783%" height="15" fill="rgb(232,170,27)" fg:x="441" fg:w="1"/><text x="34.7841%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="34.6124%" y="645" width="0.0783%" height="15" fill="rgb(214,223,17)" fg:x="442" fg:w="1"/><text x="34.8624%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (53 samples, 4.15%)</title><rect x="30.6969%" y="693" width="4.1504%" height="15" fill="rgb(250,18,15)" fg:x="392" fg:w="53"/><text x="30.9469%" y="703.50">&lt;serd..</text></g><g><title>serde::ser::Serializer::collect_map (23 samples, 1.80%)</title><rect x="33.0462%" y="677" width="1.8011%" height="15" fill="rgb(212,153,51)" fg:x="422" fg:w="23"/><text x="33.2962%" y="687.50">s..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (23 samples, 1.80%)</title><rect x="33.0462%" y="661" width="1.8011%" height="15" fill="rgb(219,194,12)" fg:x="422" fg:w="23"/><text x="33.2962%" y="671.50">k..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="34.6907%" y="645" width="0.1566%" height="15" fill="rgb(212,58,17)" fg:x="443" fg:w="2"/><text x="34.9407%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (54 samples, 4.23%)</title><rect x="30.6969%" y="709" width="4.2287%" height="15" fill="rgb(254,5,10)" fg:x="392" fg:w="54"/><text x="30.9469%" y="719.50">kerne..</text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="34.8473%" y="693" width="0.0783%" height="15" fill="rgb(246,91,7)" fg:x="445" fg:w="1"/><text x="35.0973%" y="703.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="35.1605%" y="629" width="0.0783%" height="15" fill="rgb(218,108,49)" fg:x="449" fg:w="1"/><text x="35.4105%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="35.7087%" y="565" width="0.0783%" height="15" fill="rgb(238,123,20)" fg:x="456" fg:w="1"/><text x="35.9587%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="35.7087%" y="549" width="0.0783%" height="15" fill="rgb(231,69,23)" fg:x="456" fg:w="1"/><text x="35.9587%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="35.7087%" y="533" width="0.0783%" height="15" fill="rgb(230,209,3)" fg:x="456" fg:w="1"/><text x="35.9587%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="35.7087%" y="517" width="0.0783%" height="15" fill="rgb(231,19,0)" fg:x="456" fg:w="1"/><text x="35.9587%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="36.0219%" y="533" width="0.0783%" height="15" fill="rgb(226,192,25)" fg:x="460" fg:w="1"/><text x="36.2719%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="36.1002%" y="517" width="0.0783%" height="15" fill="rgb(223,175,53)" fg:x="461" fg:w="1"/><text x="36.3502%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.1785%" y="501" width="0.0783%" height="15" fill="rgb(248,35,51)" fg:x="462" fg:w="1"/><text x="36.4285%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.31%)</title><rect x="36.0219%" y="549" width="0.3132%" height="15" fill="rgb(230,37,26)" fg:x="460" fg:w="4"/><text x="36.2719%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="36.1002%" y="533" width="0.2349%" height="15" fill="rgb(206,120,22)" fg:x="461" fg:w="3"/><text x="36.3502%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="36.1785%" y="517" width="0.1566%" height="15" fill="rgb(207,165,28)" fg:x="462" fg:w="2"/><text x="36.4285%" y="527.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="36.2569%" y="501" width="0.0783%" height="15" fill="rgb(226,23,46)" fg:x="463" fg:w="1"/><text x="36.5069%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="36.2569%" y="485" width="0.0783%" height="15" fill="rgb(208,130,44)" fg:x="463" fg:w="1"/><text x="36.5069%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="36.3352%" y="533" width="0.0783%" height="15" fill="rgb(231,67,8)" fg:x="464" fg:w="1"/><text x="36.5852%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.23%)</title><rect x="36.3352%" y="549" width="0.2349%" height="15" fill="rgb(205,183,22)" fg:x="464" fg:w="3"/><text x="36.5852%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="36.4135%" y="533" width="0.1566%" height="15" fill="rgb(224,47,9)" fg:x="465" fg:w="2"/><text x="36.6635%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.02%)</title><rect x="35.7087%" y="581" width="1.0180%" height="15" fill="rgb(250,183,49)" fg:x="456" fg:w="13"/><text x="35.9587%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.94%)</title><rect x="35.7870%" y="565" width="0.9397%" height="15" fill="rgb(220,151,39)" fg:x="457" fg:w="12"/><text x="36.0370%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="36.5701%" y="549" width="0.1566%" height="15" fill="rgb(220,118,20)" fg:x="467" fg:w="2"/><text x="36.8201%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="36.5701%" y="533" width="0.1566%" height="15" fill="rgb(231,65,51)" fg:x="467" fg:w="2"/><text x="36.8201%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.6484%" y="517" width="0.0783%" height="15" fill="rgb(253,125,37)" fg:x="468" fg:w="1"/><text x="36.8984%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="36.7267%" y="581" width="0.1566%" height="15" fill="rgb(232,102,6)" fg:x="469" fg:w="2"/><text x="36.9767%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="36.7267%" y="565" width="0.1566%" height="15" fill="rgb(251,105,13)" fg:x="469" fg:w="2"/><text x="36.9767%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (23 samples, 1.80%)</title><rect x="35.3955%" y="613" width="1.8011%" height="15" fill="rgb(222,179,29)" fg:x="452" fg:w="23"/><text x="35.6455%" y="623.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19 samples, 1.49%)</title><rect x="35.7087%" y="597" width="1.4879%" height="15" fill="rgb(229,180,53)" fg:x="456" fg:w="19"/><text x="35.9587%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="36.8833%" y="581" width="0.3132%" height="15" fill="rgb(238,104,13)" fg:x="471" fg:w="4"/><text x="37.1333%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="37.0399%" y="565" width="0.1566%" height="15" fill="rgb(210,130,5)" fg:x="473" fg:w="2"/><text x="37.2899%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="37.0399%" y="549" width="0.1566%" height="15" fill="rgb(233,87,49)" fg:x="473" fg:w="2"/><text x="37.2899%" y="559.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="37.1966%" y="597" width="0.0783%" height="15" fill="rgb(243,34,9)" fg:x="475" fg:w="1"/><text x="37.4466%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.23%)</title><rect x="37.1966%" y="613" width="0.2349%" height="15" fill="rgb(235,225,10)" fg:x="475" fg:w="3"/><text x="37.4466%" y="623.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="37.2749%" y="597" width="0.1566%" height="15" fill="rgb(212,0,30)" fg:x="476" fg:w="2"/><text x="37.5249%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (34 samples, 2.66%)</title><rect x="35.1605%" y="645" width="2.6625%" height="15" fill="rgb(211,177,0)" fg:x="449" fg:w="34"/><text x="35.4105%" y="655.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (33 samples, 2.58%)</title><rect x="35.2388%" y="629" width="2.5842%" height="15" fill="rgb(225,220,11)" fg:x="450" fg:w="33"/><text x="35.4888%" y="639.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.39%)</title><rect x="37.4315%" y="613" width="0.3915%" height="15" fill="rgb(215,10,13)" fg:x="478" fg:w="5"/><text x="37.6815%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="37.5098%" y="597" width="0.3132%" height="15" fill="rgb(240,177,14)" fg:x="479" fg:w="4"/><text x="37.7598%" y="607.50"></text></g><g><title>__libc_malloc (3 samples, 0.23%)</title><rect x="37.5881%" y="581" width="0.2349%" height="15" fill="rgb(243,7,39)" fg:x="480" fg:w="3"/><text x="37.8381%" y="591.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="37.8230%" y="629" width="0.0783%" height="15" fill="rgb(212,99,0)" fg:x="483" fg:w="1"/><text x="38.0730%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="37.8230%" y="645" width="0.1566%" height="15" fill="rgb(225,162,48)" fg:x="483" fg:w="2"/><text x="38.0730%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.9013%" y="629" width="0.0783%" height="15" fill="rgb(246,16,25)" fg:x="484" fg:w="1"/><text x="38.1513%" y="639.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="38.1363%" y="613" width="0.0783%" height="15" fill="rgb(220,150,2)" fg:x="487" fg:w="1"/><text x="38.3863%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="38.1363%" y="597" width="0.0783%" height="15" fill="rgb(237,113,11)" fg:x="487" fg:w="1"/><text x="38.3863%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (43 samples, 3.37%)</title><rect x="34.9256%" y="709" width="3.3673%" height="15" fill="rgb(236,70,20)" fg:x="446" fg:w="43"/><text x="35.1756%" y="719.50">ser..</text></g><g><title>serde_json::de::from_trait (43 samples, 3.37%)</title><rect x="34.9256%" y="693" width="3.3673%" height="15" fill="rgb(234,94,7)" fg:x="446" fg:w="43"/><text x="35.1756%" y="703.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (42 samples, 3.29%)</title><rect x="35.0039%" y="677" width="3.2890%" height="15" fill="rgb(250,221,0)" fg:x="447" fg:w="42"/><text x="35.2539%" y="687.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (42 samples, 3.29%)</title><rect x="35.0039%" y="661" width="3.2890%" height="15" fill="rgb(245,149,46)" fg:x="447" fg:w="42"/><text x="35.2539%" y="671.50">&lt;se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="37.9796%" y="645" width="0.3132%" height="15" fill="rgb(215,37,27)" fg:x="485" fg:w="4"/><text x="38.2296%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="38.0579%" y="629" width="0.2349%" height="15" fill="rgb(232,65,3)" fg:x="486" fg:w="3"/><text x="38.3079%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="38.2146%" y="613" width="0.0783%" height="15" fill="rgb(214,2,16)" fg:x="488" fg:w="1"/><text x="38.4646%" y="623.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="38.6061%" y="645" width="0.0783%" height="15" fill="rgb(227,131,50)" fg:x="493" fg:w="1"/><text x="38.8561%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="38.6061%" y="629" width="0.0783%" height="15" fill="rgb(247,131,45)" fg:x="493" fg:w="1"/><text x="38.8561%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="38.6061%" y="613" width="0.0783%" height="15" fill="rgb(215,97,47)" fg:x="493" fg:w="1"/><text x="38.8561%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="38.7627%" y="629" width="0.0783%" height="15" fill="rgb(233,143,12)" fg:x="495" fg:w="1"/><text x="39.0127%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.47%)</title><rect x="38.4495%" y="677" width="0.4699%" height="15" fill="rgb(222,57,17)" fg:x="491" fg:w="6"/><text x="38.6995%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.39%)</title><rect x="38.5278%" y="661" width="0.3915%" height="15" fill="rgb(214,119,38)" fg:x="492" fg:w="5"/><text x="38.7778%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.23%)</title><rect x="38.6844%" y="645" width="0.2349%" height="15" fill="rgb(217,28,47)" fg:x="494" fg:w="3"/><text x="38.9344%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="38.8410%" y="629" width="0.0783%" height="15" fill="rgb(231,14,52)" fg:x="496" fg:w="1"/><text x="39.0910%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (10 samples, 0.78%)</title><rect x="38.3712%" y="693" width="0.7831%" height="15" fill="rgb(220,158,18)" fg:x="490" fg:w="10"/><text x="38.6212%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.23%)</title><rect x="38.9193%" y="677" width="0.2349%" height="15" fill="rgb(222,143,46)" fg:x="497" fg:w="3"/><text x="39.1693%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.1543%" y="693" width="0.0783%" height="15" fill="rgb(227,165,5)" fg:x="500" fg:w="1"/><text x="39.4043%" y="703.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (186 samples, 14.57%)</title><rect x="24.7455%" y="757" width="14.5654%" height="15" fill="rgb(216,222,49)" fg:x="316" fg:w="186"/><text x="24.9955%" y="767.50">engine::internal::Enti..</text></g><g><title>engine::session::SavesEntities::check_for_changes (186 samples, 14.57%)</title><rect x="24.7455%" y="741" width="14.5654%" height="15" fill="rgb(238,73,39)" fg:x="316" fg:w="186"/><text x="24.9955%" y="751.50">engine::session::Saves..</text></g><g><title>kernel::compare::any_entity_changes (140 samples, 10.96%)</title><rect x="28.3477%" y="725" width="10.9632%" height="15" fill="rgb(252,115,9)" fg:x="362" fg:w="140"/><text x="28.5977%" y="735.50">kernel::compare:..</text></g><g><title>treediff::diff::diff (13 samples, 1.02%)</title><rect x="38.2929%" y="709" width="1.0180%" height="15" fill="rgb(238,202,4)" fg:x="489" fg:w="13"/><text x="38.5429%" y="719.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="39.2326%" y="693" width="0.0783%" height="15" fill="rgb(252,153,44)" fg:x="501" fg:w="1"/><text x="39.4826%" y="703.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="39.3892%" y="725" width="0.0783%" height="15" fill="rgb(235,128,27)" fg:x="503" fg:w="1"/><text x="39.6392%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.4675%" y="709" width="0.0783%" height="15" fill="rgb(221,121,47)" fg:x="504" fg:w="1"/><text x="39.7175%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.4675%" y="693" width="0.0783%" height="15" fill="rgb(247,211,47)" fg:x="504" fg:w="1"/><text x="39.7175%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.4675%" y="677" width="0.0783%" height="15" fill="rgb(252,47,49)" fg:x="504" fg:w="1"/><text x="39.7175%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.4675%" y="661" width="0.0783%" height="15" fill="rgb(219,119,53)" fg:x="504" fg:w="1"/><text x="39.7175%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.4675%" y="645" width="0.0783%" height="15" fill="rgb(243,165,53)" fg:x="504" fg:w="1"/><text x="39.7175%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.4675%" y="629" width="0.0783%" height="15" fill="rgb(230,12,35)" fg:x="504" fg:w="1"/><text x="39.7175%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.4675%" y="613" width="0.0783%" height="15" fill="rgb(239,57,49)" fg:x="504" fg:w="1"/><text x="39.7175%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.4675%" y="597" width="0.0783%" height="15" fill="rgb(231,154,7)" fg:x="504" fg:w="1"/><text x="39.7175%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.4675%" y="581" width="0.0783%" height="15" fill="rgb(248,81,34)" fg:x="504" fg:w="1"/><text x="39.7175%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.4675%" y="565" width="0.0783%" height="15" fill="rgb(247,9,5)" fg:x="504" fg:w="1"/><text x="39.7175%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.4675%" y="549" width="0.0783%" height="15" fill="rgb(228,172,27)" fg:x="504" fg:w="1"/><text x="39.7175%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.4675%" y="533" width="0.0783%" height="15" fill="rgb(230,57,44)" fg:x="504" fg:w="1"/><text x="39.7175%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.5458%" y="597" width="0.0783%" height="15" fill="rgb(249,35,22)" fg:x="505" fg:w="1"/><text x="39.7958%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.5458%" y="581" width="0.0783%" height="15" fill="rgb(250,137,27)" fg:x="505" fg:w="1"/><text x="39.7958%" y="591.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="39.5458%" y="565" width="0.0783%" height="15" fill="rgb(251,57,31)" fg:x="505" fg:w="1"/><text x="39.7958%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="39.5458%" y="549" width="0.0783%" height="15" fill="rgb(238,60,0)" fg:x="505" fg:w="1"/><text x="39.7958%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="39.5458%" y="533" width="0.0783%" height="15" fill="rgb(242,185,39)" fg:x="505" fg:w="1"/><text x="39.7958%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="39.5458%" y="517" width="0.0783%" height="15" fill="rgb(240,63,43)" fg:x="505" fg:w="1"/><text x="39.7958%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="39.5458%" y="501" width="0.0783%" height="15" fill="rgb(236,155,6)" fg:x="505" fg:w="1"/><text x="39.7958%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="39.5458%" y="485" width="0.0783%" height="15" fill="rgb(215,11,29)" fg:x="505" fg:w="1"/><text x="39.7958%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="39.5458%" y="469" width="0.0783%" height="15" fill="rgb(228,180,48)" fg:x="505" fg:w="1"/><text x="39.7958%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="39.5458%" y="453" width="0.0783%" height="15" fill="rgb(241,102,12)" fg:x="505" fg:w="1"/><text x="39.7958%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="39.5458%" y="437" width="0.0783%" height="15" fill="rgb(246,213,4)" fg:x="505" fg:w="1"/><text x="39.7958%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="39.5458%" y="421" width="0.0783%" height="15" fill="rgb(218,134,35)" fg:x="505" fg:w="1"/><text x="39.7958%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="39.5458%" y="405" width="0.0783%" height="15" fill="rgb(251,117,35)" fg:x="505" fg:w="1"/><text x="39.7958%" y="415.50"></text></g><g><title>engine::session::Session::save_entity_changes (197 samples, 15.43%)</title><rect x="24.2756%" y="773" width="15.4268%" height="15" fill="rgb(206,156,45)" fg:x="310" fg:w="197"/><text x="24.5256%" y="783.50">engine::session::Session..</text></g><g><title>engine::session::Session::world (5 samples, 0.39%)</title><rect x="39.3109%" y="757" width="0.3915%" height="15" fill="rgb(218,52,27)" fg:x="502" fg:w="5"/><text x="39.5609%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (4 samples, 0.31%)</title><rect x="39.3892%" y="741" width="0.3132%" height="15" fill="rgb(238,83,36)" fg:x="503" fg:w="4"/><text x="39.6392%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.23%)</title><rect x="39.4675%" y="725" width="0.2349%" height="15" fill="rgb(218,53,43)" fg:x="504" fg:w="3"/><text x="39.7175%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="39.5458%" y="709" width="0.1566%" height="15" fill="rgb(239,54,39)" fg:x="505" fg:w="2"/><text x="39.7958%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="39.5458%" y="693" width="0.1566%" height="15" fill="rgb(212,198,13)" fg:x="505" fg:w="2"/><text x="39.7958%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="39.5458%" y="677" width="0.1566%" height="15" fill="rgb(234,54,46)" fg:x="505" fg:w="2"/><text x="39.7958%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="39.5458%" y="661" width="0.1566%" height="15" fill="rgb(217,120,7)" fg:x="505" fg:w="2"/><text x="39.7958%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="39.5458%" y="645" width="0.1566%" height="15" fill="rgb(246,39,15)" fg:x="505" fg:w="2"/><text x="39.7958%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="39.5458%" y="629" width="0.1566%" height="15" fill="rgb(242,143,31)" fg:x="505" fg:w="2"/><text x="39.7958%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="39.5458%" y="613" width="0.1566%" height="15" fill="rgb(252,60,24)" fg:x="505" fg:w="2"/><text x="39.7958%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="39.6241%" y="597" width="0.0783%" height="15" fill="rgb(249,220,7)" fg:x="506" fg:w="1"/><text x="39.8741%" y="607.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="39.6241%" y="581" width="0.0783%" height="15" fill="rgb(236,67,13)" fg:x="506" fg:w="1"/><text x="39.8741%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="39.6241%" y="565" width="0.0783%" height="15" fill="rgb(210,62,39)" fg:x="506" fg:w="1"/><text x="39.8741%" y="575.50"></text></g><g><title>engine::session::Session::close (199 samples, 15.58%)</title><rect x="24.1973%" y="789" width="15.5834%" height="15" fill="rgb(219,122,53)" fg:x="309" fg:w="199"/><text x="24.4473%" y="799.50">engine::session::Session..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="39.7024%" y="773" width="0.0783%" height="15" fill="rgb(218,87,25)" fg:x="507" fg:w="1"/><text x="39.9524%" y="783.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="39.7024%" y="757" width="0.0783%" height="15" fill="rgb(234,179,48)" fg:x="507" fg:w="1"/><text x="39.9524%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="39.7024%" y="741" width="0.0783%" height="15" fill="rgb(248,90,0)" fg:x="507" fg:w="1"/><text x="39.9524%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="39.7024%" y="725" width="0.0783%" height="15" fill="rgb(207,228,37)" fg:x="507" fg:w="1"/><text x="39.9524%" y="735.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="39.7024%" y="709" width="0.0783%" height="15" fill="rgb(235,214,15)" fg:x="507" fg:w="1"/><text x="39.9524%" y="719.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (1 samples, 0.08%)</title><rect x="40.1723%" y="645" width="0.0783%" height="15" fill="rgb(210,144,39)" fg:x="513" fg:w="1"/><text x="40.4223%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="40.1723%" y="629" width="0.0783%" height="15" fill="rgb(222,67,41)" fg:x="513" fg:w="1"/><text x="40.4223%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="40.1723%" y="613" width="0.0783%" height="15" fill="rgb(205,35,37)" fg:x="513" fg:w="1"/><text x="40.4223%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.3289%" y="629" width="0.0783%" height="15" fill="rgb(216,125,40)" fg:x="515" fg:w="1"/><text x="40.5789%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.3289%" y="613" width="0.0783%" height="15" fill="rgb(228,227,20)" fg:x="515" fg:w="1"/><text x="40.5789%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.3289%" y="597" width="0.0783%" height="15" fill="rgb(242,173,45)" fg:x="515" fg:w="1"/><text x="40.5789%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.3289%" y="581" width="0.0783%" height="15" fill="rgb(215,79,24)" fg:x="515" fg:w="1"/><text x="40.5789%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.3289%" y="565" width="0.0783%" height="15" fill="rgb(238,164,38)" fg:x="515" fg:w="1"/><text x="40.5789%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.3289%" y="549" width="0.0783%" height="15" fill="rgb(245,196,38)" fg:x="515" fg:w="1"/><text x="40.5789%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.3289%" y="533" width="0.0783%" height="15" fill="rgb(231,217,29)" fg:x="515" fg:w="1"/><text x="40.5789%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.3289%" y="517" width="0.0783%" height="15" fill="rgb(245,6,4)" fg:x="515" fg:w="1"/><text x="40.5789%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.3289%" y="501" width="0.0783%" height="15" fill="rgb(214,76,49)" fg:x="515" fg:w="1"/><text x="40.5789%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.3289%" y="485" width="0.0783%" height="15" fill="rgb(205,96,12)" fg:x="515" fg:w="1"/><text x="40.5789%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.3289%" y="469" width="0.0783%" height="15" fill="rgb(243,131,4)" fg:x="515" fg:w="1"/><text x="40.5789%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.3289%" y="453" width="0.0783%" height="15" fill="rgb(214,114,4)" fg:x="515" fg:w="1"/><text x="40.5789%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.4072%" y="581" width="0.0783%" height="15" fill="rgb(234,215,15)" fg:x="516" fg:w="1"/><text x="40.6572%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.4072%" y="565" width="0.0783%" height="15" fill="rgb(250,216,45)" fg:x="516" fg:w="1"/><text x="40.6572%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.4072%" y="549" width="0.0783%" height="15" fill="rgb(236,128,4)" fg:x="516" fg:w="1"/><text x="40.6572%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.4072%" y="533" width="0.0783%" height="15" fill="rgb(234,50,33)" fg:x="516" fg:w="1"/><text x="40.6572%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.4072%" y="517" width="0.0783%" height="15" fill="rgb(253,131,37)" fg:x="516" fg:w="1"/><text x="40.6572%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.4072%" y="501" width="0.0783%" height="15" fill="rgb(218,55,27)" fg:x="516" fg:w="1"/><text x="40.6572%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.4072%" y="485" width="0.0783%" height="15" fill="rgb(241,220,28)" fg:x="516" fg:w="1"/><text x="40.6572%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.4072%" y="469" width="0.0783%" height="15" fill="rgb(241,90,48)" fg:x="516" fg:w="1"/><text x="40.6572%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.4072%" y="453" width="0.0783%" height="15" fill="rgb(216,43,37)" fg:x="516" fg:w="1"/><text x="40.6572%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.4072%" y="437" width="0.0783%" height="15" fill="rgb(207,173,9)" fg:x="516" fg:w="1"/><text x="40.6572%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.4072%" y="421" width="0.0783%" height="15" fill="rgb(240,126,30)" fg:x="516" fg:w="1"/><text x="40.6572%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.4072%" y="405" width="0.0783%" height="15" fill="rgb(228,178,53)" fg:x="516" fg:w="1"/><text x="40.6572%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.4072%" y="389" width="0.0783%" height="15" fill="rgb(217,33,4)" fg:x="516" fg:w="1"/><text x="40.6572%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.4072%" y="373" width="0.0783%" height="15" fill="rgb(206,124,34)" fg:x="516" fg:w="1"/><text x="40.6572%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (3 samples, 0.23%)</title><rect x="40.4855%" y="533" width="0.2349%" height="15" fill="rgb(208,122,53)" fg:x="517" fg:w="3"/><text x="40.7355%" y="543.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="40.5638%" y="517" width="0.1566%" height="15" fill="rgb(215,202,26)" fg:x="518" fg:w="2"/><text x="40.8138%" y="527.50"></text></g><g><title>kernel::model::Props::property_named (2 samples, 0.16%)</title><rect x="40.5638%" y="501" width="0.1566%" height="15" fill="rgb(232,198,31)" fg:x="518" fg:w="2"/><text x="40.8138%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.6421%" y="485" width="0.0783%" height="15" fill="rgb(222,23,35)" fg:x="519" fg:w="1"/><text x="40.8921%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="40.7204%" y="405" width="0.0783%" height="15" fill="rgb(242,27,53)" fg:x="520" fg:w="1"/><text x="40.9704%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="40.7204%" y="389" width="0.0783%" height="15" fill="rgb(210,216,42)" fg:x="520" fg:w="1"/><text x="40.9704%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="40.7204%" y="373" width="0.0783%" height="15" fill="rgb(234,39,38)" fg:x="520" fg:w="1"/><text x="40.9704%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="40.7204%" y="357" width="0.0783%" height="15" fill="rgb(235,126,54)" fg:x="520" fg:w="1"/><text x="40.9704%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="40.7204%" y="341" width="0.0783%" height="15" fill="rgb(235,150,33)" fg:x="520" fg:w="1"/><text x="40.9704%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="40.7204%" y="325" width="0.0783%" height="15" fill="rgb(249,49,53)" fg:x="520" fg:w="1"/><text x="40.9704%" y="335.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="40.7204%" y="309" width="0.0783%" height="15" fill="rgb(238,60,50)" fg:x="520" fg:w="1"/><text x="40.9704%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="40.7204%" y="293" width="0.0783%" height="15" fill="rgb(210,5,2)" fg:x="520" fg:w="1"/><text x="40.9704%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.7204%" y="277" width="0.0783%" height="15" fill="rgb(214,207,24)" fg:x="520" fg:w="1"/><text x="40.9704%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="40.7987%" y="405" width="0.0783%" height="15" fill="rgb(228,173,2)" fg:x="521" fg:w="1"/><text x="41.0487%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="40.7987%" y="389" width="0.0783%" height="15" fill="rgb(244,26,8)" fg:x="521" fg:w="1"/><text x="41.0487%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="40.7987%" y="373" width="0.0783%" height="15" fill="rgb(249,153,35)" fg:x="521" fg:w="1"/><text x="41.0487%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="40.7987%" y="357" width="0.0783%" height="15" fill="rgb(221,215,40)" fg:x="521" fg:w="1"/><text x="41.0487%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="40.7987%" y="341" width="0.0783%" height="15" fill="rgb(238,106,35)" fg:x="521" fg:w="1"/><text x="41.0487%" y="351.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (4 samples, 0.31%)</title><rect x="40.7204%" y="453" width="0.3132%" height="15" fill="rgb(207,195,21)" fg:x="520" fg:w="4"/><text x="40.9704%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="40.7204%" y="437" width="0.3132%" height="15" fill="rgb(205,43,29)" fg:x="520" fg:w="4"/><text x="40.9704%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (4 samples, 0.31%)</title><rect x="40.7204%" y="421" width="0.3132%" height="15" fill="rgb(236,35,21)" fg:x="520" fg:w="4"/><text x="40.9704%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.8771%" y="405" width="0.1566%" height="15" fill="rgb(244,74,8)" fg:x="522" fg:w="2"/><text x="41.1271%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="40.8771%" y="389" width="0.1566%" height="15" fill="rgb(241,229,7)" fg:x="522" fg:w="2"/><text x="41.1271%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="40.9554%" y="373" width="0.0783%" height="15" fill="rgb(212,223,25)" fg:x="523" fg:w="1"/><text x="41.2054%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="40.9554%" y="357" width="0.0783%" height="15" fill="rgb(234,58,53)" fg:x="523" fg:w="1"/><text x="41.2054%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="40.9554%" y="341" width="0.0783%" height="15" fill="rgb(244,36,1)" fg:x="523" fg:w="1"/><text x="41.2054%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.9554%" y="325" width="0.0783%" height="15" fill="rgb(222,40,54)" fg:x="523" fg:w="1"/><text x="41.2054%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="40.9554%" y="309" width="0.0783%" height="15" fill="rgb(210,207,39)" fg:x="523" fg:w="1"/><text x="41.2054%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="40.9554%" y="293" width="0.0783%" height="15" fill="rgb(234,52,14)" fg:x="523" fg:w="1"/><text x="41.2054%" y="303.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (7 samples, 0.55%)</title><rect x="40.7204%" y="517" width="0.5482%" height="15" fill="rgb(239,108,46)" fg:x="520" fg:w="7"/><text x="40.9704%" y="527.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (7 samples, 0.55%)</title><rect x="40.7204%" y="501" width="0.5482%" height="15" fill="rgb(252,223,5)" fg:x="520" fg:w="7"/><text x="40.9704%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.55%)</title><rect x="40.7204%" y="485" width="0.5482%" height="15" fill="rgb(227,181,11)" fg:x="520" fg:w="7"/><text x="40.9704%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.55%)</title><rect x="40.7204%" y="469" width="0.5482%" height="15" fill="rgb(248,126,40)" fg:x="520" fg:w="7"/><text x="40.9704%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="41.0337%" y="453" width="0.2349%" height="15" fill="rgb(243,1,18)" fg:x="524" fg:w="3"/><text x="41.2837%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="41.0337%" y="437" width="0.2349%" height="15" fill="rgb(214,145,23)" fg:x="524" fg:w="3"/><text x="41.2837%" y="447.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="41.1120%" y="421" width="0.1566%" height="15" fill="rgb(241,218,11)" fg:x="525" fg:w="2"/><text x="41.3620%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.1120%" y="405" width="0.1566%" height="15" fill="rgb(214,219,24)" fg:x="525" fg:w="2"/><text x="41.3620%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.1120%" y="389" width="0.1566%" height="15" fill="rgb(235,32,7)" fg:x="525" fg:w="2"/><text x="41.3620%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.1120%" y="373" width="0.1566%" height="15" fill="rgb(227,121,28)" fg:x="525" fg:w="2"/><text x="41.3620%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.1903%" y="357" width="0.0783%" height="15" fill="rgb(216,129,49)" fg:x="526" fg:w="1"/><text x="41.4403%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.1903%" y="341" width="0.0783%" height="15" fill="rgb(207,194,50)" fg:x="526" fg:w="1"/><text x="41.4403%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="41.3469%" y="437" width="0.0783%" height="15" fill="rgb(207,4,18)" fg:x="528" fg:w="1"/><text x="41.5969%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.3469%" y="421" width="0.0783%" height="15" fill="rgb(213,50,30)" fg:x="528" fg:w="1"/><text x="41.5969%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="41.4252%" y="405" width="0.0783%" height="15" fill="rgb(208,77,22)" fg:x="529" fg:w="1"/><text x="41.6752%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.4252%" y="389" width="0.0783%" height="15" fill="rgb(244,204,34)" fg:x="529" fg:w="1"/><text x="41.6752%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="41.5035%" y="405" width="0.1566%" height="15" fill="rgb(230,20,17)" fg:x="530" fg:w="2"/><text x="41.7535%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="41.5035%" y="389" width="0.1566%" height="15" fill="rgb(237,83,15)" fg:x="530" fg:w="2"/><text x="41.7535%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (16 samples, 1.25%)</title><rect x="40.4855%" y="581" width="1.2529%" height="15" fill="rgb(221,109,25)" fg:x="517" fg:w="16"/><text x="40.7355%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (16 samples, 1.25%)</title><rect x="40.4855%" y="565" width="1.2529%" height="15" fill="rgb(205,194,52)" fg:x="517" fg:w="16"/><text x="40.7355%" y="575.50"></text></g><g><title>engine::internal::Entities::add_persisted (16 samples, 1.25%)</title><rect x="40.4855%" y="549" width="1.2529%" height="15" fill="rgb(244,173,54)" fg:x="517" fg:w="16"/><text x="40.7355%" y="559.50"></text></g><g><title>kernel::model::deserialize_entity (13 samples, 1.02%)</title><rect x="40.7204%" y="533" width="1.0180%" height="15" fill="rgb(227,181,18)" fg:x="520" fg:w="13"/><text x="40.9704%" y="543.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.47%)</title><rect x="41.2686%" y="517" width="0.4699%" height="15" fill="rgb(238,36,30)" fg:x="527" fg:w="6"/><text x="41.5186%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.47%)</title><rect x="41.2686%" y="501" width="0.4699%" height="15" fill="rgb(254,85,0)" fg:x="527" fg:w="6"/><text x="41.5186%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.47%)</title><rect x="41.2686%" y="485" width="0.4699%" height="15" fill="rgb(247,63,33)" fg:x="527" fg:w="6"/><text x="41.5186%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.47%)</title><rect x="41.2686%" y="469" width="0.4699%" height="15" fill="rgb(220,7,54)" fg:x="527" fg:w="6"/><text x="41.5186%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="41.3469%" y="453" width="0.3915%" height="15" fill="rgb(238,227,21)" fg:x="528" fg:w="5"/><text x="41.5969%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.31%)</title><rect x="41.4252%" y="437" width="0.3132%" height="15" fill="rgb(237,29,31)" fg:x="529" fg:w="4"/><text x="41.6752%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="41.4252%" y="421" width="0.3132%" height="15" fill="rgb(211,21,50)" fg:x="529" fg:w="4"/><text x="41.6752%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="41.6601%" y="405" width="0.0783%" height="15" fill="rgb(239,119,2)" fg:x="532" fg:w="1"/><text x="41.9101%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="41.6601%" y="389" width="0.0783%" height="15" fill="rgb(250,2,39)" fg:x="532" fg:w="1"/><text x="41.9101%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="41.6601%" y="373" width="0.0783%" height="15" fill="rgb(244,46,53)" fg:x="532" fg:w="1"/><text x="41.9101%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="41.6601%" y="357" width="0.0783%" height="15" fill="rgb(209,21,19)" fg:x="532" fg:w="1"/><text x="41.9101%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="41.6601%" y="341" width="0.0783%" height="15" fill="rgb(236,145,4)" fg:x="532" fg:w="1"/><text x="41.9101%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="41.6601%" y="325" width="0.0783%" height="15" fill="rgb(220,133,36)" fg:x="532" fg:w="1"/><text x="41.9101%" y="335.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (18 samples, 1.41%)</title><rect x="40.4072%" y="629" width="1.4096%" height="15" fill="rgb(244,18,3)" fg:x="516" fg:w="18"/><text x="40.6572%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (18 samples, 1.41%)</title><rect x="40.4072%" y="613" width="1.4096%" height="15" fill="rgb(232,171,48)" fg:x="516" fg:w="18"/><text x="40.6572%" y="623.50"></text></g><g><title>kernel::model::Entity::load_scope (18 samples, 1.41%)</title><rect x="40.4072%" y="597" width="1.4096%" height="15" fill="rgb(223,223,53)" fg:x="516" fg:w="18"/><text x="40.6572%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.7384%" y="581" width="0.0783%" height="15" fill="rgb(246,92,13)" fg:x="533" fg:w="1"/><text x="41.9884%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.7384%" y="565" width="0.0783%" height="15" fill="rgb(229,171,10)" fg:x="533" fg:w="1"/><text x="41.9884%" y="575.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (21 samples, 1.64%)</title><rect x="40.2506%" y="645" width="1.6445%" height="15" fill="rgb(213,131,26)" fg:x="514" fg:w="21"/><text x="40.5006%" y="655.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="41.8168%" y="629" width="0.0783%" height="15" fill="rgb(242,87,54)" fg:x="534" fg:w="1"/><text x="42.0668%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="41.8168%" y="613" width="0.0783%" height="15" fill="rgb(237,21,35)" fg:x="534" fg:w="1"/><text x="42.0668%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="41.8168%" y="597" width="0.0783%" height="15" fill="rgb(253,13,47)" fg:x="534" fg:w="1"/><text x="42.0668%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="41.8168%" y="581" width="0.0783%" height="15" fill="rgb(215,122,49)" fg:x="534" fg:w="1"/><text x="42.0668%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="41.8168%" y="565" width="0.0783%" height="15" fill="rgb(209,179,30)" fg:x="534" fg:w="1"/><text x="42.0668%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.8168%" y="549" width="0.0783%" height="15" fill="rgb(235,100,24)" fg:x="534" fg:w="1"/><text x="42.0668%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.8168%" y="533" width="0.0783%" height="15" fill="rgb(209,67,24)" fg:x="534" fg:w="1"/><text x="42.0668%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="41.8168%" y="517" width="0.0783%" height="15" fill="rgb(206,74,32)" fg:x="534" fg:w="1"/><text x="42.0668%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="41.8168%" y="501" width="0.0783%" height="15" fill="rgb(212,45,25)" fg:x="534" fg:w="1"/><text x="42.0668%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.8168%" y="485" width="0.0783%" height="15" fill="rgb(239,26,3)" fg:x="534" fg:w="1"/><text x="42.0668%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.8168%" y="469" width="0.0783%" height="15" fill="rgb(218,36,15)" fg:x="534" fg:w="1"/><text x="42.0668%" y="479.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="41.8168%" y="453" width="0.0783%" height="15" fill="rgb(206,108,24)" fg:x="534" fg:w="1"/><text x="42.0668%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="41.8168%" y="437" width="0.0783%" height="15" fill="rgb(234,204,42)" fg:x="534" fg:w="1"/><text x="42.0668%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.8168%" y="421" width="0.0783%" height="15" fill="rgb(229,2,11)" fg:x="534" fg:w="1"/><text x="42.0668%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.8168%" y="405" width="0.0783%" height="15" fill="rgb(221,20,48)" fg:x="534" fg:w="1"/><text x="42.0668%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.8168%" y="389" width="0.0783%" height="15" fill="rgb(244,164,10)" fg:x="534" fg:w="1"/><text x="42.0668%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.8168%" y="373" width="0.0783%" height="15" fill="rgb(243,229,2)" fg:x="534" fg:w="1"/><text x="42.0668%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="41.8168%" y="357" width="0.0783%" height="15" fill="rgb(232,131,37)" fg:x="534" fg:w="1"/><text x="42.0668%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="41.8168%" y="341" width="0.0783%" height="15" fill="rgb(217,156,11)" fg:x="534" fg:w="1"/><text x="42.0668%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="41.8168%" y="325" width="0.0783%" height="15" fill="rgb(239,99,48)" fg:x="534" fg:w="1"/><text x="42.0668%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="41.8168%" y="309" width="0.0783%" height="15" fill="rgb(231,209,9)" fg:x="534" fg:w="1"/><text x="42.0668%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="41.8168%" y="293" width="0.0783%" height="15" fill="rgb(254,97,27)" fg:x="534" fg:w="1"/><text x="42.0668%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="41.8168%" y="277" width="0.0783%" height="15" fill="rgb(223,151,38)" fg:x="534" fg:w="1"/><text x="42.0668%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="41.8168%" y="261" width="0.0783%" height="15" fill="rgb(219,206,35)" fg:x="534" fg:w="1"/><text x="42.0668%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="41.8168%" y="245" width="0.0783%" height="15" fill="rgb(216,130,31)" fg:x="534" fg:w="1"/><text x="42.0668%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="41.8168%" y="229" width="0.0783%" height="15" fill="rgb(251,97,34)" fg:x="534" fg:w="1"/><text x="42.0668%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="41.8168%" y="213" width="0.0783%" height="15" fill="rgb(246,159,47)" fg:x="534" fg:w="1"/><text x="42.0668%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="41.8168%" y="197" width="0.0783%" height="15" fill="rgb(232,87,10)" fg:x="534" fg:w="1"/><text x="42.0668%" y="207.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="41.8168%" y="181" width="0.0783%" height="15" fill="rgb(249,1,37)" fg:x="534" fg:w="1"/><text x="42.0668%" y="191.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="41.8168%" y="165" width="0.0783%" height="15" fill="rgb(239,135,14)" fg:x="534" fg:w="1"/><text x="42.0668%" y="175.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="42.4432%" y="533" width="0.0783%" height="15" fill="rgb(253,116,46)" fg:x="542" fg:w="1"/><text x="42.6932%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.4432%" y="517" width="0.0783%" height="15" fill="rgb(222,217,37)" fg:x="542" fg:w="1"/><text x="42.6932%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.23%)</title><rect x="42.4432%" y="549" width="0.2349%" height="15" fill="rgb(252,96,8)" fg:x="542" fg:w="3"/><text x="42.6932%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="42.5215%" y="533" width="0.1566%" height="15" fill="rgb(254,103,41)" fg:x="543" fg:w="2"/><text x="42.7715%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.6782%" y="549" width="0.0783%" height="15" fill="rgb(218,213,19)" fg:x="545" fg:w="1"/><text x="42.9282%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.63%)</title><rect x="42.3649%" y="565" width="0.6265%" height="15" fill="rgb(253,95,21)" fg:x="541" fg:w="8"/><text x="42.6149%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (3 samples, 0.23%)</title><rect x="42.7565%" y="549" width="0.2349%" height="15" fill="rgb(229,26,28)" fg:x="546" fg:w="3"/><text x="43.0065%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="42.8348%" y="533" width="0.1566%" height="15" fill="rgb(230,129,16)" fg:x="547" fg:w="2"/><text x="43.0848%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="42.8348%" y="517" width="0.1566%" height="15" fill="rgb(236,126,17)" fg:x="547" fg:w="2"/><text x="43.0848%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="42.9914%" y="565" width="0.1566%" height="15" fill="rgb(209,33,33)" fg:x="549" fg:w="2"/><text x="43.2414%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.25%)</title><rect x="41.9734%" y="581" width="1.2529%" height="15" fill="rgb(227,85,29)" fg:x="536" fg:w="16"/><text x="42.2234%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="43.1480%" y="565" width="0.0783%" height="15" fill="rgb(241,53,46)" fg:x="551" fg:w="1"/><text x="43.3980%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.64%)</title><rect x="41.8951%" y="597" width="1.6445%" height="15" fill="rgb(228,167,53)" fg:x="535" fg:w="21"/><text x="42.1451%" y="607.50"></text></g><g><title>__libc_free (4 samples, 0.31%)</title><rect x="43.2263%" y="581" width="0.3132%" height="15" fill="rgb(238,195,45)" fg:x="552" fg:w="4"/><text x="43.4763%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (23 samples, 1.80%)</title><rect x="41.8951%" y="613" width="1.8011%" height="15" fill="rgb(252,124,45)" fg:x="535" fg:w="23"/><text x="42.1451%" y="623.50">c..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="43.5395%" y="597" width="0.1566%" height="15" fill="rgb(251,38,35)" fg:x="556" fg:w="2"/><text x="43.7895%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.23%)</title><rect x="43.7745%" y="565" width="0.2349%" height="15" fill="rgb(227,33,2)" fg:x="559" fg:w="3"/><text x="44.0245%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="44.0094%" y="565" width="0.1566%" height="15" fill="rgb(223,157,46)" fg:x="562" fg:w="2"/><text x="44.2594%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.55%)</title><rect x="43.7745%" y="581" width="0.5482%" height="15" fill="rgb(222,78,41)" fg:x="559" fg:w="7"/><text x="44.0245%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.16%)</title><rect x="44.1660%" y="565" width="0.1566%" height="15" fill="rgb(248,176,11)" fg:x="564" fg:w="2"/><text x="44.4160%" y="575.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (5 samples, 0.39%)</title><rect x="44.3226%" y="581" width="0.3915%" height="15" fill="rgb(241,221,18)" fg:x="566" fg:w="5"/><text x="44.5726%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.39%)</title><rect x="44.3226%" y="565" width="0.3915%" height="15" fill="rgb(218,85,22)" fg:x="566" fg:w="5"/><text x="44.5726%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="44.5576%" y="549" width="0.1566%" height="15" fill="rgb(222,223,7)" fg:x="569" fg:w="2"/><text x="44.8076%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="44.5576%" y="533" width="0.1566%" height="15" fill="rgb(254,59,39)" fg:x="569" fg:w="2"/><text x="44.8076%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.7142%" y="581" width="0.0783%" height="15" fill="rgb(247,100,27)" fg:x="571" fg:w="1"/><text x="44.9642%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="44.9491%" y="533" width="0.1566%" height="15" fill="rgb(237,207,10)" fg:x="574" fg:w="2"/><text x="45.1991%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (6 samples, 0.47%)</title><rect x="44.7925%" y="581" width="0.4699%" height="15" fill="rgb(220,121,28)" fg:x="572" fg:w="6"/><text x="45.0425%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.47%)</title><rect x="44.7925%" y="565" width="0.4699%" height="15" fill="rgb(213,223,20)" fg:x="572" fg:w="6"/><text x="45.0425%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (5 samples, 0.39%)</title><rect x="44.8708%" y="549" width="0.3915%" height="15" fill="rgb(205,121,27)" fg:x="573" fg:w="5"/><text x="45.1208%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (2 samples, 0.16%)</title><rect x="45.1057%" y="533" width="0.1566%" height="15" fill="rgb(253,24,53)" fg:x="576" fg:w="2"/><text x="45.3557%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="45.1057%" y="517" width="0.1566%" height="15" fill="rgb(224,224,47)" fg:x="576" fg:w="2"/><text x="45.3557%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="45.3406%" y="533" width="0.0783%" height="15" fill="rgb(250,125,36)" fg:x="579" fg:w="1"/><text x="45.5906%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="45.3406%" y="517" width="0.0783%" height="15" fill="rgb(240,144,38)" fg:x="579" fg:w="1"/><text x="45.5906%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="45.6539%" y="437" width="0.0783%" height="15" fill="rgb(250,15,50)" fg:x="583" fg:w="1"/><text x="45.9039%" y="447.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="45.6539%" y="421" width="0.0783%" height="15" fill="rgb(210,24,26)" fg:x="583" fg:w="1"/><text x="45.9039%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.6539%" y="405" width="0.0783%" height="15" fill="rgb(234,53,53)" fg:x="583" fg:w="1"/><text x="45.9039%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.6539%" y="389" width="0.0783%" height="15" fill="rgb(208,108,28)" fg:x="583" fg:w="1"/><text x="45.9039%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.6539%" y="373" width="0.0783%" height="15" fill="rgb(227,143,7)" fg:x="583" fg:w="1"/><text x="45.9039%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.6539%" y="357" width="0.0783%" height="15" fill="rgb(238,189,38)" fg:x="583" fg:w="1"/><text x="45.9039%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.6539%" y="341" width="0.0783%" height="15" fill="rgb(222,69,15)" fg:x="583" fg:w="1"/><text x="45.9039%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.6539%" y="325" width="0.0783%" height="15" fill="rgb(213,169,7)" fg:x="583" fg:w="1"/><text x="45.9039%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.6539%" y="309" width="0.0783%" height="15" fill="rgb(251,219,4)" fg:x="583" fg:w="1"/><text x="45.9039%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.6539%" y="293" width="0.0783%" height="15" fill="rgb(241,55,40)" fg:x="583" fg:w="1"/><text x="45.9039%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.6539%" y="277" width="0.0783%" height="15" fill="rgb(243,57,30)" fg:x="583" fg:w="1"/><text x="45.9039%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="45.6539%" y="261" width="0.0783%" height="15" fill="rgb(234,50,30)" fg:x="583" fg:w="1"/><text x="45.9039%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="45.6539%" y="245" width="0.0783%" height="15" fill="rgb(239,23,42)" fg:x="583" fg:w="1"/><text x="45.9039%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="45.6539%" y="229" width="0.0783%" height="15" fill="rgb(217,38,19)" fg:x="583" fg:w="1"/><text x="45.9039%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.6539%" y="213" width="0.0783%" height="15" fill="rgb(215,179,16)" fg:x="583" fg:w="1"/><text x="45.9039%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.31%)</title><rect x="45.4973%" y="501" width="0.3132%" height="15" fill="rgb(254,21,37)" fg:x="581" fg:w="4"/><text x="45.7473%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.31%)</title><rect x="45.4973%" y="485" width="0.3132%" height="15" fill="rgb(219,207,48)" fg:x="581" fg:w="4"/><text x="45.7473%" y="495.50"></text></g><g><title>kernel::model::EntityRef::into_entry (2 samples, 0.16%)</title><rect x="45.6539%" y="469" width="0.1566%" height="15" fill="rgb(227,225,41)" fg:x="583" fg:w="2"/><text x="45.9039%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="45.6539%" y="453" width="0.1566%" height="15" fill="rgb(223,130,1)" fg:x="583" fg:w="2"/><text x="45.9039%" y="463.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="45.7322%" y="437" width="0.0783%" height="15" fill="rgb(249,54,42)" fg:x="584" fg:w="1"/><text x="45.9822%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.7322%" y="421" width="0.0783%" height="15" fill="rgb(248,69,25)" fg:x="584" fg:w="1"/><text x="45.9822%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.7322%" y="405" width="0.0783%" height="15" fill="rgb(234,21,32)" fg:x="584" fg:w="1"/><text x="45.9822%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.7322%" y="389" width="0.0783%" height="15" fill="rgb(252,136,6)" fg:x="584" fg:w="1"/><text x="45.9822%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.7322%" y="373" width="0.0783%" height="15" fill="rgb(245,87,12)" fg:x="584" fg:w="1"/><text x="45.9822%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.7322%" y="357" width="0.0783%" height="15" fill="rgb(208,12,15)" fg:x="584" fg:w="1"/><text x="45.9822%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.7322%" y="341" width="0.0783%" height="15" fill="rgb(250,98,2)" fg:x="584" fg:w="1"/><text x="45.9822%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.7322%" y="325" width="0.0783%" height="15" fill="rgb(205,213,15)" fg:x="584" fg:w="1"/><text x="45.9822%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.7322%" y="309" width="0.0783%" height="15" fill="rgb(248,192,44)" fg:x="584" fg:w="1"/><text x="45.9822%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="45.7322%" y="293" width="0.0783%" height="15" fill="rgb(221,89,17)" fg:x="584" fg:w="1"/><text x="45.9822%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="45.7322%" y="277" width="0.0783%" height="15" fill="rgb(209,55,3)" fg:x="584" fg:w="1"/><text x="45.9822%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="45.7322%" y="261" width="0.0783%" height="15" fill="rgb(247,23,45)" fg:x="584" fg:w="1"/><text x="45.9822%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.7322%" y="245" width="0.0783%" height="15" fill="rgb(235,152,23)" fg:x="584" fg:w="1"/><text x="45.9822%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.8888%" y="485" width="0.0783%" height="15" fill="rgb(244,63,13)" fg:x="586" fg:w="1"/><text x="46.1388%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="45.9671%" y="485" width="0.0783%" height="15" fill="rgb(227,30,37)" fg:x="587" fg:w="1"/><text x="46.2171%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.0454%" y="469" width="0.0783%" height="15" fill="rgb(224,49,42)" fg:x="588" fg:w="1"/><text x="46.2954%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.0454%" y="453" width="0.0783%" height="15" fill="rgb(218,129,5)" fg:x="588" fg:w="1"/><text x="46.2954%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.0454%" y="437" width="0.0783%" height="15" fill="rgb(240,199,54)" fg:x="588" fg:w="1"/><text x="46.2954%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.0454%" y="421" width="0.0783%" height="15" fill="rgb(234,31,13)" fg:x="588" fg:w="1"/><text x="46.2954%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.0454%" y="405" width="0.0783%" height="15" fill="rgb(219,73,54)" fg:x="588" fg:w="1"/><text x="46.2954%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.0454%" y="389" width="0.0783%" height="15" fill="rgb(251,162,10)" fg:x="588" fg:w="1"/><text x="46.2954%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.0454%" y="373" width="0.0783%" height="15" fill="rgb(240,138,47)" fg:x="588" fg:w="1"/><text x="46.2954%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="46.0454%" y="357" width="0.0783%" height="15" fill="rgb(216,138,26)" fg:x="588" fg:w="1"/><text x="46.2954%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="46.0454%" y="341" width="0.0783%" height="15" fill="rgb(243,17,35)" fg:x="588" fg:w="1"/><text x="46.2954%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="46.0454%" y="325" width="0.0783%" height="15" fill="rgb(241,60,18)" fg:x="588" fg:w="1"/><text x="46.2954%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="46.0454%" y="309" width="0.0783%" height="15" fill="rgb(234,2,44)" fg:x="588" fg:w="1"/><text x="46.2954%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.0454%" y="293" width="0.0783%" height="15" fill="rgb(225,225,33)" fg:x="588" fg:w="1"/><text x="46.2954%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="46.1237%" y="469" width="0.0783%" height="15" fill="rgb(234,50,31)" fg:x="589" fg:w="1"/><text x="46.3737%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.1237%" y="453" width="0.0783%" height="15" fill="rgb(249,6,25)" fg:x="589" fg:w="1"/><text x="46.3737%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.2020%" y="309" width="0.0783%" height="15" fill="rgb(241,5,17)" fg:x="590" fg:w="1"/><text x="46.4520%" y="319.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (2 samples, 0.16%)</title><rect x="46.2020%" y="373" width="0.1566%" height="15" fill="rgb(207,116,10)" fg:x="590" fg:w="2"/><text x="46.4520%" y="383.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (2 samples, 0.16%)</title><rect x="46.2020%" y="357" width="0.1566%" height="15" fill="rgb(222,128,18)" fg:x="590" fg:w="2"/><text x="46.4520%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="46.2020%" y="341" width="0.1566%" height="15" fill="rgb(229,109,25)" fg:x="590" fg:w="2"/><text x="46.4520%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="46.2020%" y="325" width="0.1566%" height="15" fill="rgb(222,102,25)" fg:x="590" fg:w="2"/><text x="46.4520%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.2803%" y="309" width="0.0783%" height="15" fill="rgb(239,211,5)" fg:x="591" fg:w="1"/><text x="46.5303%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.2803%" y="293" width="0.0783%" height="15" fill="rgb(223,136,26)" fg:x="591" fg:w="1"/><text x="46.5303%" y="303.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="46.2803%" y="277" width="0.0783%" height="15" fill="rgb(227,30,15)" fg:x="591" fg:w="1"/><text x="46.5303%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.2803%" y="261" width="0.0783%" height="15" fill="rgb(247,76,4)" fg:x="591" fg:w="1"/><text x="46.5303%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.2803%" y="245" width="0.0783%" height="15" fill="rgb(245,38,48)" fg:x="591" fg:w="1"/><text x="46.5303%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.2803%" y="229" width="0.0783%" height="15" fill="rgb(210,220,14)" fg:x="591" fg:w="1"/><text x="46.5303%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.2803%" y="213" width="0.0783%" height="15" fill="rgb(224,60,51)" fg:x="591" fg:w="1"/><text x="46.5303%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.2803%" y="197" width="0.0783%" height="15" fill="rgb(212,133,49)" fg:x="591" fg:w="1"/><text x="46.5303%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="46.2803%" y="181" width="0.0783%" height="15" fill="rgb(231,39,22)" fg:x="591" fg:w="1"/><text x="46.5303%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="46.2803%" y="165" width="0.0783%" height="15" fill="rgb(236,173,22)" fg:x="591" fg:w="1"/><text x="46.5303%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.23%)</title><rect x="46.3587%" y="325" width="0.2349%" height="15" fill="rgb(210,70,0)" fg:x="592" fg:w="3"/><text x="46.6087%" y="335.50"></text></g><g><title>__libc_malloc (3 samples, 0.23%)</title><rect x="46.3587%" y="309" width="0.2349%" height="15" fill="rgb(215,170,11)" fg:x="592" fg:w="3"/><text x="46.6087%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.23%)</title><rect x="46.5936%" y="293" width="0.2349%" height="15" fill="rgb(220,154,28)" fg:x="595" fg:w="3"/><text x="46.8436%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.7502%" y="277" width="0.0783%" height="15" fill="rgb(240,160,41)" fg:x="597" fg:w="1"/><text x="47.0002%" y="287.50"></text></g><g><title>engine::internal::Entities::add_persisted (9 samples, 0.70%)</title><rect x="46.2020%" y="405" width="0.7048%" height="15" fill="rgb(243,215,41)" fg:x="590" fg:w="9"/><text x="46.4520%" y="415.50"></text></g><g><title>kernel::model::deserialize_entity (9 samples, 0.70%)</title><rect x="46.2020%" y="389" width="0.7048%" height="15" fill="rgb(214,208,31)" fg:x="590" fg:w="9"/><text x="46.4520%" y="399.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.55%)</title><rect x="46.3587%" y="373" width="0.5482%" height="15" fill="rgb(247,57,22)" fg:x="592" fg:w="7"/><text x="46.6087%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.55%)</title><rect x="46.3587%" y="357" width="0.5482%" height="15" fill="rgb(228,73,52)" fg:x="592" fg:w="7"/><text x="46.6087%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.55%)</title><rect x="46.3587%" y="341" width="0.5482%" height="15" fill="rgb(252,60,9)" fg:x="592" fg:w="7"/><text x="46.6087%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.31%)</title><rect x="46.5936%" y="325" width="0.3132%" height="15" fill="rgb(233,9,51)" fg:x="595" fg:w="4"/><text x="46.8436%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="46.5936%" y="309" width="0.3132%" height="15" fill="rgb(223,67,14)" fg:x="595" fg:w="4"/><text x="46.8436%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="46.8285%" y="293" width="0.0783%" height="15" fill="rgb(222,86,2)" fg:x="598" fg:w="1"/><text x="47.0785%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="46.8285%" y="277" width="0.0783%" height="15" fill="rgb(243,58,54)" fg:x="598" fg:w="1"/><text x="47.0785%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="46.8285%" y="261" width="0.0783%" height="15" fill="rgb(210,200,39)" fg:x="598" fg:w="1"/><text x="47.0785%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="46.8285%" y="245" width="0.0783%" height="15" fill="rgb(238,135,9)" fg:x="598" fg:w="1"/><text x="47.0785%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="46.8285%" y="229" width="0.0783%" height="15" fill="rgb(232,179,7)" fg:x="598" fg:w="1"/><text x="47.0785%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (10 samples, 0.78%)</title><rect x="46.2020%" y="437" width="0.7831%" height="15" fill="rgb(245,65,41)" fg:x="590" fg:w="10"/><text x="46.4520%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (10 samples, 0.78%)</title><rect x="46.2020%" y="421" width="0.7831%" height="15" fill="rgb(227,43,8)" fg:x="590" fg:w="10"/><text x="46.4520%" y="431.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="46.9068%" y="405" width="0.0783%" height="15" fill="rgb(235,91,14)" fg:x="599" fg:w="1"/><text x="47.1568%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.9068%" y="389" width="0.0783%" height="15" fill="rgb(235,219,31)" fg:x="599" fg:w="1"/><text x="47.1568%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.9068%" y="373" width="0.0783%" height="15" fill="rgb(227,121,25)" fg:x="599" fg:w="1"/><text x="47.1568%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.9068%" y="357" width="0.0783%" height="15" fill="rgb(254,129,24)" fg:x="599" fg:w="1"/><text x="47.1568%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.9068%" y="341" width="0.0783%" height="15" fill="rgb(226,144,49)" fg:x="599" fg:w="1"/><text x="47.1568%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.9068%" y="325" width="0.0783%" height="15" fill="rgb(214,187,32)" fg:x="599" fg:w="1"/><text x="47.1568%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.9068%" y="309" width="0.0783%" height="15" fill="rgb(243,129,46)" fg:x="599" fg:w="1"/><text x="47.1568%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.9068%" y="293" width="0.0783%" height="15" fill="rgb(221,185,35)" fg:x="599" fg:w="1"/><text x="47.1568%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.9068%" y="277" width="0.0783%" height="15" fill="rgb(205,0,32)" fg:x="599" fg:w="1"/><text x="47.1568%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="46.9068%" y="261" width="0.0783%" height="15" fill="rgb(229,179,12)" fg:x="599" fg:w="1"/><text x="47.1568%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="46.9068%" y="245" width="0.0783%" height="15" fill="rgb(252,107,19)" fg:x="599" fg:w="1"/><text x="47.1568%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="46.9068%" y="229" width="0.0783%" height="15" fill="rgb(220,95,27)" fg:x="599" fg:w="1"/><text x="47.1568%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="46.9068%" y="213" width="0.0783%" height="15" fill="rgb(240,113,40)" fg:x="599" fg:w="1"/><text x="47.1568%" y="223.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="46.9068%" y="197" width="0.0783%" height="15" fill="rgb(208,4,43)" fg:x="599" fg:w="1"/><text x="47.1568%" y="207.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="46.9068%" y="181" width="0.0783%" height="15" fill="rgb(247,189,30)" fg:x="599" fg:w="1"/><text x="47.1568%" y="191.50"></text></g><g><title>core::iter::adapters::try_process (20 samples, 1.57%)</title><rect x="45.4973%" y="517" width="1.5662%" height="15" fill="rgb(231,157,17)" fg:x="581" fg:w="20"/><text x="45.7473%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (16 samples, 1.25%)</title><rect x="45.8105%" y="501" width="1.2529%" height="15" fill="rgb(224,139,6)" fg:x="585" fg:w="16"/><text x="46.0605%" y="511.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (13 samples, 1.02%)</title><rect x="46.0454%" y="485" width="1.0180%" height="15" fill="rgb(223,83,16)" fg:x="588" fg:w="13"/><text x="46.2954%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (11 samples, 0.86%)</title><rect x="46.2020%" y="469" width="0.8614%" height="15" fill="rgb(232,211,20)" fg:x="590" fg:w="11"/><text x="46.4520%" y="479.50"></text></g><g><title>kernel::model::Entity::load_scope (11 samples, 0.86%)</title><rect x="46.2020%" y="453" width="0.8614%" height="15" fill="rgb(225,203,35)" fg:x="590" fg:w="11"/><text x="46.4520%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="46.9851%" y="437" width="0.0783%" height="15" fill="rgb(215,211,44)" fg:x="600" fg:w="1"/><text x="47.2351%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.9851%" y="421" width="0.0783%" height="15" fill="rgb(248,213,26)" fg:x="600" fg:w="1"/><text x="47.2351%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="47.0634%" y="501" width="0.0783%" height="15" fill="rgb(214,23,52)" fg:x="601" fg:w="1"/><text x="47.3134%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (2 samples, 0.16%)</title><rect x="47.0634%" y="517" width="0.1566%" height="15" fill="rgb(225,173,50)" fg:x="601" fg:w="2"/><text x="47.3134%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="47.1417%" y="501" width="0.0783%" height="15" fill="rgb(206,150,22)" fg:x="602" fg:w="1"/><text x="47.3917%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.1417%" y="485" width="0.0783%" height="15" fill="rgb(239,64,23)" fg:x="602" fg:w="1"/><text x="47.3917%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.2200%" y="469" width="0.0783%" height="15" fill="rgb(242,50,38)" fg:x="603" fg:w="1"/><text x="47.4700%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.2200%" y="453" width="0.0783%" height="15" fill="rgb(217,91,15)" fg:x="603" fg:w="1"/><text x="47.4700%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.2200%" y="437" width="0.0783%" height="15" fill="rgb(230,172,6)" fg:x="603" fg:w="1"/><text x="47.4700%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.2200%" y="421" width="0.0783%" height="15" fill="rgb(221,98,26)" fg:x="603" fg:w="1"/><text x="47.4700%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="47.2200%" y="405" width="0.0783%" height="15" fill="rgb(227,210,45)" fg:x="603" fg:w="1"/><text x="47.4700%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="47.2200%" y="389" width="0.0783%" height="15" fill="rgb(206,8,30)" fg:x="603" fg:w="1"/><text x="47.4700%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="47.2200%" y="373" width="0.0783%" height="15" fill="rgb(241,219,17)" fg:x="603" fg:w="1"/><text x="47.4700%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.2200%" y="357" width="0.0783%" height="15" fill="rgb(247,121,29)" fg:x="603" fg:w="1"/><text x="47.4700%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.2200%" y="341" width="0.0783%" height="15" fill="rgb(219,169,49)" fg:x="603" fg:w="1"/><text x="47.4700%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="47.2200%" y="325" width="0.0783%" height="15" fill="rgb(253,49,49)" fg:x="603" fg:w="1"/><text x="47.4700%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="47.2200%" y="309" width="0.0783%" height="15" fill="rgb(217,178,3)" fg:x="603" fg:w="1"/><text x="47.4700%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="47.2200%" y="293" width="0.0783%" height="15" fill="rgb(234,73,37)" fg:x="603" fg:w="1"/><text x="47.4700%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="47.2200%" y="277" width="0.0783%" height="15" fill="rgb(250,98,22)" fg:x="603" fg:w="1"/><text x="47.4700%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.2200%" y="261" width="0.0783%" height="15" fill="rgb(220,108,37)" fg:x="603" fg:w="1"/><text x="47.4700%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="47.2200%" y="485" width="0.1566%" height="15" fill="rgb(225,168,10)" fg:x="603" fg:w="2"/><text x="47.4700%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.2984%" y="469" width="0.0783%" height="15" fill="rgb(247,215,21)" fg:x="604" fg:w="1"/><text x="47.5484%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="47.5333%" y="373" width="0.1566%" height="15" fill="rgb(253,189,31)" fg:x="607" fg:w="2"/><text x="47.7833%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="47.5333%" y="357" width="0.1566%" height="15" fill="rgb(241,54,22)" fg:x="607" fg:w="2"/><text x="47.7833%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="47.5333%" y="341" width="0.1566%" height="15" fill="rgb(211,87,4)" fg:x="607" fg:w="2"/><text x="47.7833%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="47.5333%" y="325" width="0.1566%" height="15" fill="rgb(245,112,24)" fg:x="607" fg:w="2"/><text x="47.7833%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="47.5333%" y="309" width="0.1566%" height="15" fill="rgb(235,190,41)" fg:x="607" fg:w="2"/><text x="47.7833%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="47.5333%" y="293" width="0.1566%" height="15" fill="rgb(214,89,8)" fg:x="607" fg:w="2"/><text x="47.7833%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="47.5333%" y="277" width="0.1566%" height="15" fill="rgb(249,155,35)" fg:x="607" fg:w="2"/><text x="47.7833%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="47.5333%" y="261" width="0.1566%" height="15" fill="rgb(249,88,26)" fg:x="607" fg:w="2"/><text x="47.7833%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="47.5333%" y="245" width="0.1566%" height="15" fill="rgb(232,56,8)" fg:x="607" fg:w="2"/><text x="47.7833%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="47.5333%" y="229" width="0.1566%" height="15" fill="rgb(240,95,3)" fg:x="607" fg:w="2"/><text x="47.7833%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="47.5333%" y="213" width="0.1566%" height="15" fill="rgb(222,44,28)" fg:x="607" fg:w="2"/><text x="47.7833%" y="223.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="47.5333%" y="197" width="0.1566%" height="15" fill="rgb(234,16,30)" fg:x="607" fg:w="2"/><text x="47.7833%" y="207.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="47.5333%" y="181" width="0.1566%" height="15" fill="rgb(223,26,17)" fg:x="607" fg:w="2"/><text x="47.7833%" y="191.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (4 samples, 0.31%)</title><rect x="47.4550%" y="405" width="0.3132%" height="15" fill="rgb(239,187,47)" fg:x="606" fg:w="4"/><text x="47.7050%" y="415.50"></text></g><g><title>engine::internal::Maps::lookup_entity (3 samples, 0.23%)</title><rect x="47.5333%" y="389" width="0.2349%" height="15" fill="rgb(247,102,50)" fg:x="607" fg:w="3"/><text x="47.7833%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="47.6899%" y="373" width="0.0783%" height="15" fill="rgb(231,216,22)" fg:x="609" fg:w="1"/><text x="47.9399%" y="383.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (6 samples, 0.47%)</title><rect x="47.3767%" y="485" width="0.4699%" height="15" fill="rgb(216,201,26)" fg:x="605" fg:w="6"/><text x="47.6267%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (5 samples, 0.39%)</title><rect x="47.4550%" y="469" width="0.3915%" height="15" fill="rgb(214,186,23)" fg:x="606" fg:w="5"/><text x="47.7050%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.39%)</title><rect x="47.4550%" y="453" width="0.3915%" height="15" fill="rgb(235,184,4)" fg:x="606" fg:w="5"/><text x="47.7050%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.39%)</title><rect x="47.4550%" y="437" width="0.3915%" height="15" fill="rgb(244,46,17)" fg:x="606" fg:w="5"/><text x="47.7050%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (5 samples, 0.39%)</title><rect x="47.4550%" y="421" width="0.3915%" height="15" fill="rgb(248,74,46)" fg:x="606" fg:w="5"/><text x="47.7050%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="47.7682%" y="405" width="0.0783%" height="15" fill="rgb(243,79,5)" fg:x="610" fg:w="1"/><text x="48.0182%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.7682%" y="389" width="0.0783%" height="15" fill="rgb(213,148,1)" fg:x="610" fg:w="1"/><text x="48.0182%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.7682%" y="373" width="0.0783%" height="15" fill="rgb(221,30,0)" fg:x="610" fg:w="1"/><text x="48.0182%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="47.7682%" y="357" width="0.0783%" height="15" fill="rgb(207,85,29)" fg:x="610" fg:w="1"/><text x="48.0182%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="47.7682%" y="341" width="0.0783%" height="15" fill="rgb(239,31,46)" fg:x="610" fg:w="1"/><text x="48.0182%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="47.7682%" y="325" width="0.0783%" height="15" fill="rgb(219,6,1)" fg:x="610" fg:w="1"/><text x="48.0182%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.7682%" y="309" width="0.0783%" height="15" fill="rgb(229,90,29)" fg:x="610" fg:w="1"/><text x="48.0182%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.7682%" y="293" width="0.0783%" height="15" fill="rgb(242,201,42)" fg:x="610" fg:w="1"/><text x="48.0182%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="47.7682%" y="277" width="0.0783%" height="15" fill="rgb(243,80,54)" fg:x="610" fg:w="1"/><text x="48.0182%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="47.7682%" y="261" width="0.0783%" height="15" fill="rgb(223,166,15)" fg:x="610" fg:w="1"/><text x="48.0182%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="47.7682%" y="245" width="0.0783%" height="15" fill="rgb(238,78,27)" fg:x="610" fg:w="1"/><text x="48.0182%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="47.7682%" y="229" width="0.0783%" height="15" fill="rgb(235,28,43)" fg:x="610" fg:w="1"/><text x="48.0182%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.7682%" y="213" width="0.0783%" height="15" fill="rgb(240,210,28)" fg:x="610" fg:w="1"/><text x="48.0182%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.8465%" y="453" width="0.0783%" height="15" fill="rgb(253,6,46)" fg:x="611" fg:w="1"/><text x="48.0965%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="47.9248%" y="453" width="0.0783%" height="15" fill="rgb(250,159,47)" fg:x="612" fg:w="1"/><text x="48.1748%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="48.0031%" y="453" width="0.0783%" height="15" fill="rgb(216,139,2)" fg:x="613" fg:w="1"/><text x="48.2531%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.0031%" y="437" width="0.0783%" height="15" fill="rgb(221,124,44)" fg:x="613" fg:w="1"/><text x="48.2531%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="48.0031%" y="421" width="0.0783%" height="15" fill="rgb(205,37,22)" fg:x="613" fg:w="1"/><text x="48.2531%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.0031%" y="405" width="0.0783%" height="15" fill="rgb(250,55,8)" fg:x="613" fg:w="1"/><text x="48.2531%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.23%)</title><rect x="48.0814%" y="453" width="0.2349%" height="15" fill="rgb(215,83,48)" fg:x="614" fg:w="3"/><text x="48.3314%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.23%)</title><rect x="48.0814%" y="437" width="0.2349%" height="15" fill="rgb(253,2,32)" fg:x="614" fg:w="3"/><text x="48.3314%" y="447.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.23%)</title><rect x="48.0814%" y="421" width="0.2349%" height="15" fill="rgb(236,67,28)" fg:x="614" fg:w="3"/><text x="48.3314%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="48.0814%" y="405" width="0.2349%" height="15" fill="rgb(252,55,15)" fg:x="614" fg:w="3"/><text x="48.3314%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="48.0814%" y="389" width="0.2349%" height="15" fill="rgb(243,173,17)" fg:x="614" fg:w="3"/><text x="48.3314%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="48.1597%" y="373" width="0.1566%" height="15" fill="rgb(215,212,13)" fg:x="615" fg:w="2"/><text x="48.4097%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="48.1597%" y="357" width="0.1566%" height="15" fill="rgb(253,176,6)" fg:x="615" fg:w="2"/><text x="48.4097%" y="367.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (38 samples, 2.98%)</title><rect x="45.4190%" y="533" width="2.9757%" height="15" fill="rgb(236,105,26)" fg:x="580" fg:w="38"/><text x="45.6690%" y="543.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (15 samples, 1.17%)</title><rect x="47.2200%" y="517" width="1.1746%" height="15" fill="rgb(239,226,32)" fg:x="603" fg:w="15"/><text x="47.4700%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (15 samples, 1.17%)</title><rect x="47.2200%" y="501" width="1.1746%" height="15" fill="rgb(236,104,51)" fg:x="603" fg:w="15"/><text x="47.4700%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.55%)</title><rect x="47.8465%" y="485" width="0.5482%" height="15" fill="rgb(220,172,33)" fg:x="611" fg:w="7"/><text x="48.0965%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.55%)</title><rect x="47.8465%" y="469" width="0.5482%" height="15" fill="rgb(224,182,25)" fg:x="611" fg:w="7"/><text x="48.0965%" y="479.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="48.3164%" y="453" width="0.0783%" height="15" fill="rgb(236,184,24)" fg:x="617" fg:w="1"/><text x="48.5664%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.3947%" y="517" width="0.0783%" height="15" fill="rgb(241,221,14)" fg:x="618" fg:w="1"/><text x="48.6447%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.5513%" y="469" width="0.0783%" height="15" fill="rgb(227,146,5)" fg:x="620" fg:w="1"/><text x="48.8013%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.5513%" y="453" width="0.0783%" height="15" fill="rgb(214,15,23)" fg:x="620" fg:w="1"/><text x="48.8013%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="48.5513%" y="437" width="0.0783%" height="15" fill="rgb(233,157,31)" fg:x="620" fg:w="1"/><text x="48.8013%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="48.5513%" y="421" width="0.0783%" height="15" fill="rgb(211,27,52)" fg:x="620" fg:w="1"/><text x="48.8013%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="48.5513%" y="405" width="0.0783%" height="15" fill="rgb(212,223,15)" fg:x="620" fg:w="1"/><text x="48.8013%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.5513%" y="389" width="0.0783%" height="15" fill="rgb(254,211,0)" fg:x="620" fg:w="1"/><text x="48.8013%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.5513%" y="373" width="0.0783%" height="15" fill="rgb(205,43,38)" fg:x="620" fg:w="1"/><text x="48.8013%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="48.5513%" y="357" width="0.0783%" height="15" fill="rgb(242,206,46)" fg:x="620" fg:w="1"/><text x="48.8013%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="48.5513%" y="341" width="0.0783%" height="15" fill="rgb(220,221,12)" fg:x="620" fg:w="1"/><text x="48.8013%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="48.5513%" y="325" width="0.0783%" height="15" fill="rgb(217,156,35)" fg:x="620" fg:w="1"/><text x="48.8013%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="48.5513%" y="309" width="0.0783%" height="15" fill="rgb(207,181,49)" fg:x="620" fg:w="1"/><text x="48.8013%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.5513%" y="293" width="0.0783%" height="15" fill="rgb(235,103,47)" fg:x="620" fg:w="1"/><text x="48.8013%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="48.5513%" y="485" width="0.1566%" height="15" fill="rgb(222,63,28)" fg:x="620" fg:w="2"/><text x="48.8013%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.6296%" y="469" width="0.0783%" height="15" fill="rgb(244,137,21)" fg:x="621" fg:w="1"/><text x="48.8796%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.6296%" y="453" width="0.0783%" height="15" fill="rgb(228,35,27)" fg:x="621" fg:w="1"/><text x="48.8796%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="48.9428%" y="373" width="0.0783%" height="15" fill="rgb(226,191,41)" fg:x="625" fg:w="1"/><text x="49.1928%" y="383.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="48.9428%" y="357" width="0.0783%" height="15" fill="rgb(210,154,3)" fg:x="625" fg:w="1"/><text x="49.1928%" y="367.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="48.9428%" y="341" width="0.0783%" height="15" fill="rgb(216,60,49)" fg:x="625" fg:w="1"/><text x="49.1928%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.0995%" y="293" width="0.0783%" height="15" fill="rgb(226,17,20)" fg:x="627" fg:w="1"/><text x="49.3495%" y="303.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="49.2561%" y="181" width="0.0783%" height="15" fill="rgb(206,115,35)" fg:x="629" fg:w="1"/><text x="49.5061%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="49.2561%" y="245" width="0.1566%" height="15" fill="rgb(227,88,1)" fg:x="629" fg:w="2"/><text x="49.5061%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="49.2561%" y="229" width="0.1566%" height="15" fill="rgb(230,222,24)" fg:x="629" fg:w="2"/><text x="49.5061%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="49.2561%" y="213" width="0.1566%" height="15" fill="rgb(214,124,32)" fg:x="629" fg:w="2"/><text x="49.5061%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="49.2561%" y="197" width="0.1566%" height="15" fill="rgb(240,41,36)" fg:x="629" fg:w="2"/><text x="49.5061%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.3344%" y="181" width="0.0783%" height="15" fill="rgb(221,17,52)" fg:x="630" fg:w="1"/><text x="49.5844%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="49.4127%" y="245" width="0.1566%" height="15" fill="rgb(252,70,16)" fg:x="631" fg:w="2"/><text x="49.6627%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="49.4127%" y="229" width="0.1566%" height="15" fill="rgb(250,177,4)" fg:x="631" fg:w="2"/><text x="49.6627%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="49.4127%" y="213" width="0.1566%" height="15" fill="rgb(240,188,47)" fg:x="631" fg:w="2"/><text x="49.6627%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="49.4127%" y="197" width="0.1566%" height="15" fill="rgb(215,92,12)" fg:x="631" fg:w="2"/><text x="49.6627%" y="207.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="49.5693%" y="197" width="0.1566%" height="15" fill="rgb(242,110,29)" fg:x="633" fg:w="2"/><text x="49.8193%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="49.5693%" y="181" width="0.1566%" height="15" fill="rgb(208,211,26)" fg:x="633" fg:w="2"/><text x="49.8193%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="49.5693%" y="165" width="0.1566%" height="15" fill="rgb(244,147,6)" fg:x="633" fg:w="2"/><text x="49.8193%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="49.5693%" y="149" width="0.1566%" height="15" fill="rgb(211,130,42)" fg:x="633" fg:w="2"/><text x="49.8193%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (10 samples, 0.78%)</title><rect x="49.1778%" y="293" width="0.7831%" height="15" fill="rgb(220,63,1)" fg:x="628" fg:w="10"/><text x="49.4278%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.78%)</title><rect x="49.1778%" y="277" width="0.7831%" height="15" fill="rgb(241,212,30)" fg:x="628" fg:w="10"/><text x="49.4278%" y="287.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (10 samples, 0.78%)</title><rect x="49.1778%" y="261" width="0.7831%" height="15" fill="rgb(233,153,17)" fg:x="628" fg:w="10"/><text x="49.4278%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="49.5693%" y="245" width="0.3915%" height="15" fill="rgb(236,3,10)" fg:x="633" fg:w="5"/><text x="49.8193%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="49.5693%" y="229" width="0.3915%" height="15" fill="rgb(232,41,21)" fg:x="633" fg:w="5"/><text x="49.8193%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.39%)</title><rect x="49.5693%" y="213" width="0.3915%" height="15" fill="rgb(206,63,51)" fg:x="633" fg:w="5"/><text x="49.8193%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="49.7259%" y="197" width="0.2349%" height="15" fill="rgb(250,214,3)" fg:x="635" fg:w="3"/><text x="49.9759%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="49.7259%" y="181" width="0.2349%" height="15" fill="rgb(254,89,27)" fg:x="635" fg:w="3"/><text x="49.9759%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.8825%" y="165" width="0.0783%" height="15" fill="rgb(249,41,14)" fg:x="637" fg:w="1"/><text x="50.1325%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="50.1958%" y="261" width="0.1566%" height="15" fill="rgb(221,196,51)" fg:x="641" fg:w="2"/><text x="50.4458%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="50.3524%" y="229" width="0.0783%" height="15" fill="rgb(214,116,26)" fg:x="643" fg:w="1"/><text x="50.6024%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.4307%" y="229" width="0.0783%" height="15" fill="rgb(236,67,7)" fg:x="644" fg:w="1"/><text x="50.6807%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.4307%" y="213" width="0.0783%" height="15" fill="rgb(253,179,32)" fg:x="644" fg:w="1"/><text x="50.6807%" y="223.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (22 samples, 1.72%)</title><rect x="49.0211%" y="357" width="1.7228%" height="15" fill="rgb(218,33,15)" fg:x="626" fg:w="22"/><text x="49.2711%" y="367.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (22 samples, 1.72%)</title><rect x="49.0211%" y="341" width="1.7228%" height="15" fill="rgb(217,202,41)" fg:x="626" fg:w="22"/><text x="49.2711%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (22 samples, 1.72%)</title><rect x="49.0211%" y="325" width="1.7228%" height="15" fill="rgb(234,133,5)" fg:x="626" fg:w="22"/><text x="49.2711%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (22 samples, 1.72%)</title><rect x="49.0211%" y="309" width="1.7228%" height="15" fill="rgb(240,47,40)" fg:x="626" fg:w="22"/><text x="49.2711%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.78%)</title><rect x="49.9608%" y="293" width="0.7831%" height="15" fill="rgb(234,166,26)" fg:x="638" fg:w="10"/><text x="50.2108%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.70%)</title><rect x="50.0392%" y="277" width="0.7048%" height="15" fill="rgb(244,125,51)" fg:x="639" fg:w="9"/><text x="50.2892%" y="287.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (5 samples, 0.39%)</title><rect x="50.3524%" y="261" width="0.3915%" height="15" fill="rgb(229,171,11)" fg:x="643" fg:w="5"/><text x="50.6024%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="50.3524%" y="245" width="0.3915%" height="15" fill="rgb(224,38,45)" fg:x="643" fg:w="5"/><text x="50.6024%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="50.5090%" y="229" width="0.2349%" height="15" fill="rgb(237,27,7)" fg:x="645" fg:w="3"/><text x="50.7590%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="50.5090%" y="213" width="0.2349%" height="15" fill="rgb(216,52,7)" fg:x="645" fg:w="3"/><text x="50.7590%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.6656%" y="197" width="0.0783%" height="15" fill="rgb(243,11,11)" fg:x="647" fg:w="1"/><text x="50.9156%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="50.7439%" y="309" width="0.0783%" height="15" fill="rgb(253,167,20)" fg:x="648" fg:w="1"/><text x="50.9939%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.7439%" y="293" width="0.0783%" height="15" fill="rgb(215,207,5)" fg:x="648" fg:w="1"/><text x="50.9939%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.8222%" y="309" width="0.0783%" height="15" fill="rgb(252,127,31)" fg:x="649" fg:w="1"/><text x="51.0722%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.8222%" y="293" width="0.0783%" height="15" fill="rgb(209,106,27)" fg:x="649" fg:w="1"/><text x="51.0722%" y="303.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="50.8222%" y="277" width="0.0783%" height="15" fill="rgb(214,220,18)" fg:x="649" fg:w="1"/><text x="51.0722%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.23%)</title><rect x="50.9789%" y="277" width="0.2349%" height="15" fill="rgb(237,89,12)" fg:x="651" fg:w="3"/><text x="51.2289%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="51.0572%" y="261" width="0.1566%" height="15" fill="rgb(209,167,36)" fg:x="652" fg:w="2"/><text x="51.3072%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.2138%" y="277" width="0.0783%" height="15" fill="rgb(243,45,22)" fg:x="654" fg:w="1"/><text x="51.4638%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.2138%" y="261" width="0.0783%" height="15" fill="rgb(239,2,46)" fg:x="654" fg:w="1"/><text x="51.4638%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.2138%" y="245" width="0.0783%" height="15" fill="rgb(241,101,0)" fg:x="654" fg:w="1"/><text x="51.4638%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="51.6053%" y="245" width="0.1566%" height="15" fill="rgb(244,34,31)" fg:x="659" fg:w="2"/><text x="51.8553%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.6836%" y="229" width="0.0783%" height="15" fill="rgb(248,23,22)" fg:x="660" fg:w="1"/><text x="51.9336%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.7619%" y="245" width="0.0783%" height="15" fill="rgb(218,27,48)" fg:x="661" fg:w="1"/><text x="52.0119%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.7619%" y="229" width="0.0783%" height="15" fill="rgb(232,78,1)" fg:x="661" fg:w="1"/><text x="52.0119%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="51.8403%" y="197" width="0.1566%" height="15" fill="rgb(233,169,12)" fg:x="662" fg:w="2"/><text x="52.0903%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.23%)</title><rect x="51.8403%" y="213" width="0.2349%" height="15" fill="rgb(225,222,54)" fg:x="662" fg:w="3"/><text x="52.0903%" y="223.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="51.9969%" y="197" width="0.0783%" height="15" fill="rgb(245,126,29)" fg:x="664" fg:w="1"/><text x="52.2469%" y="207.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="51.9969%" y="181" width="0.0783%" height="15" fill="rgb(241,63,48)" fg:x="664" fg:w="1"/><text x="52.2469%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="52.0752%" y="213" width="0.1566%" height="15" fill="rgb(235,126,38)" fg:x="665" fg:w="2"/><text x="52.3252%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.1535%" y="197" width="0.0783%" height="15" fill="rgb(232,96,49)" fg:x="666" fg:w="1"/><text x="52.4035%" y="207.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="52.3101%" y="197" width="0.0783%" height="15" fill="rgb(211,146,40)" fg:x="668" fg:w="1"/><text x="52.5601%" y="207.50"></text></g><g><title>engine::internal::Entities::add_persisted (45 samples, 3.52%)</title><rect x="48.9428%" y="389" width="3.5239%" height="15" fill="rgb(247,93,44)" fg:x="625" fg:w="45"/><text x="49.1928%" y="399.50">eng..</text></g><g><title>kernel::model::deserialize_entity (44 samples, 3.45%)</title><rect x="49.0211%" y="373" width="3.4456%" height="15" fill="rgb(251,41,49)" fg:x="626" fg:w="44"/><text x="49.2711%" y="383.50">ker..</text></g><g><title>serde_json::de::from_trait (22 samples, 1.72%)</title><rect x="50.7439%" y="357" width="1.7228%" height="15" fill="rgb(218,155,12)" fg:x="648" fg:w="22"/><text x="50.9939%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (22 samples, 1.72%)</title><rect x="50.7439%" y="341" width="1.7228%" height="15" fill="rgb(221,161,30)" fg:x="648" fg:w="22"/><text x="50.9939%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (22 samples, 1.72%)</title><rect x="50.7439%" y="325" width="1.7228%" height="15" fill="rgb(221,179,11)" fg:x="648" fg:w="22"/><text x="50.9939%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (20 samples, 1.57%)</title><rect x="50.9005%" y="309" width="1.5662%" height="15" fill="rgb(224,170,48)" fg:x="650" fg:w="20"/><text x="51.1505%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (20 samples, 1.57%)</title><rect x="50.9005%" y="293" width="1.5662%" height="15" fill="rgb(223,117,5)" fg:x="650" fg:w="20"/><text x="51.1505%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15 samples, 1.17%)</title><rect x="51.2921%" y="277" width="1.1746%" height="15" fill="rgb(209,52,20)" fg:x="655" fg:w="15"/><text x="51.5421%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.94%)</title><rect x="51.5270%" y="261" width="0.9397%" height="15" fill="rgb(209,19,41)" fg:x="658" fg:w="12"/><text x="51.7770%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.63%)</title><rect x="51.8403%" y="245" width="0.6265%" height="15" fill="rgb(210,177,12)" fg:x="662" fg:w="8"/><text x="52.0903%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.63%)</title><rect x="51.8403%" y="229" width="0.6265%" height="15" fill="rgb(211,159,37)" fg:x="662" fg:w="8"/><text x="52.0903%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="52.2318%" y="213" width="0.2349%" height="15" fill="rgb(209,20,2)" fg:x="667" fg:w="3"/><text x="52.4818%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="52.3884%" y="197" width="0.0783%" height="15" fill="rgb(244,3,46)" fg:x="669" fg:w="1"/><text x="52.6384%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="52.3884%" y="181" width="0.0783%" height="15" fill="rgb(220,94,38)" fg:x="669" fg:w="1"/><text x="52.6384%" y="191.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (47 samples, 3.68%)</title><rect x="48.9428%" y="405" width="3.6805%" height="15" fill="rgb(253,14,31)" fg:x="625" fg:w="47"/><text x="49.1928%" y="415.50">&lt;eng..</text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="52.4667%" y="389" width="0.1566%" height="15" fill="rgb(234,176,13)" fg:x="670" fg:w="2"/><text x="52.7167%" y="399.50"></text></g><g><title>core::iter::adapters::try_process (51 samples, 3.99%)</title><rect x="48.7862%" y="469" width="3.9937%" height="15" fill="rgb(218,62,25)" fg:x="623" fg:w="51"/><text x="49.0362%" y="479.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (51 samples, 3.99%)</title><rect x="48.7862%" y="453" width="3.9937%" height="15" fill="rgb(216,124,40)" fg:x="623" fg:w="51"/><text x="49.0362%" y="463.50">&lt;all..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (51 samples, 3.99%)</title><rect x="48.7862%" y="437" width="3.9937%" height="15" fill="rgb(228,170,12)" fg:x="623" fg:w="51"/><text x="49.0362%" y="447.50">&lt;cor..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (49 samples, 3.84%)</title><rect x="48.9428%" y="421" width="3.8371%" height="15" fill="rgb(231,226,5)" fg:x="625" fg:w="49"/><text x="49.1928%" y="431.50">&lt;eng..</text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (2 samples, 0.16%)</title><rect x="52.6233%" y="405" width="0.1566%" height="15" fill="rgb(237,122,22)" fg:x="672" fg:w="2"/><text x="52.8733%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="52.6233%" y="389" width="0.1566%" height="15" fill="rgb(209,185,25)" fg:x="672" fg:w="2"/><text x="52.8733%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.7016%" y="373" width="0.0783%" height="15" fill="rgb(228,200,32)" fg:x="673" fg:w="1"/><text x="52.9516%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.7016%" y="357" width="0.0783%" height="15" fill="rgb(217,140,10)" fg:x="673" fg:w="1"/><text x="52.9516%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.7016%" y="341" width="0.0783%" height="15" fill="rgb(253,17,24)" fg:x="673" fg:w="1"/><text x="52.9516%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.7016%" y="325" width="0.0783%" height="15" fill="rgb(212,61,6)" fg:x="673" fg:w="1"/><text x="52.9516%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.7016%" y="309" width="0.0783%" height="15" fill="rgb(205,14,25)" fg:x="673" fg:w="1"/><text x="52.9516%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.7016%" y="293" width="0.0783%" height="15" fill="rgb(232,69,41)" fg:x="673" fg:w="1"/><text x="52.9516%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.7016%" y="277" width="0.0783%" height="15" fill="rgb(241,106,47)" fg:x="673" fg:w="1"/><text x="52.9516%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.7016%" y="261" width="0.0783%" height="15" fill="rgb(210,213,53)" fg:x="673" fg:w="1"/><text x="52.9516%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.7016%" y="245" width="0.0783%" height="15" fill="rgb(253,175,27)" fg:x="673" fg:w="1"/><text x="52.9516%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.7016%" y="229" width="0.0783%" height="15" fill="rgb(211,171,24)" fg:x="673" fg:w="1"/><text x="52.9516%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.7016%" y="213" width="0.0783%" height="15" fill="rgb(229,80,7)" fg:x="673" fg:w="1"/><text x="52.9516%" y="223.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (54 samples, 4.23%)</title><rect x="48.7079%" y="485" width="4.2287%" height="15" fill="rgb(212,46,39)" fg:x="622" fg:w="54"/><text x="48.9579%" y="495.50">&lt;plug..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (2 samples, 0.16%)</title><rect x="52.7800%" y="469" width="0.1566%" height="15" fill="rgb(240,80,45)" fg:x="674" fg:w="2"/><text x="53.0300%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="52.7800%" y="453" width="0.1566%" height="15" fill="rgb(253,177,40)" fg:x="674" fg:w="2"/><text x="53.0300%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="52.9366%" y="485" width="0.0783%" height="15" fill="rgb(249,200,15)" fg:x="676" fg:w="1"/><text x="53.1866%" y="495.50"></text></g><g><title>plugins_core::tools::get_contained_keys (61 samples, 4.78%)</title><rect x="48.3947%" y="533" width="4.7768%" height="15" fill="rgb(217,78,26)" fg:x="618" fg:w="61"/><text x="48.6447%" y="543.50">plugin..</text></g><g><title>kernel::model::entry::Entry::scope (60 samples, 4.70%)</title><rect x="48.4730%" y="517" width="4.6985%" height="15" fill="rgb(254,151,32)" fg:x="619" fg:w="60"/><text x="48.7230%" y="527.50">kerne..</text></g><g><title>kernel::model::Entity::load_scope (60 samples, 4.70%)</title><rect x="48.4730%" y="501" width="4.6985%" height="15" fill="rgb(226,165,27)" fg:x="619" fg:w="60"/><text x="48.7230%" y="511.50">kerne..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="53.0149%" y="485" width="0.1566%" height="15" fill="rgb(250,206,4)" fg:x="677" fg:w="2"/><text x="53.2649%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="53.0149%" y="469" width="0.1566%" height="15" fill="rgb(231,229,27)" fg:x="677" fg:w="2"/><text x="53.2649%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="53.0932%" y="453" width="0.0783%" height="15" fill="rgb(239,217,8)" fg:x="678" fg:w="1"/><text x="53.3432%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="53.0932%" y="437" width="0.0783%" height="15" fill="rgb(225,204,27)" fg:x="678" fg:w="1"/><text x="53.3432%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="53.2498%" y="517" width="0.0783%" height="15" fill="rgb(230,56,32)" fg:x="680" fg:w="1"/><text x="53.4998%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.4064%" y="485" width="0.0783%" height="15" fill="rgb(222,56,27)" fg:x="682" fg:w="1"/><text x="53.6564%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (105 samples, 8.22%)</title><rect x="45.3406%" y="565" width="8.2224%" height="15" fill="rgb(253,108,27)" fg:x="579" fg:w="105"/><text x="45.5906%" y="575.50">&lt;alloc::vec..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (105 samples, 8.22%)</title><rect x="45.3406%" y="549" width="8.2224%" height="15" fill="rgb(212,87,36)" fg:x="579" fg:w="105"/><text x="45.5906%" y="559.50">&lt;core::iter..</text></g><g><title>plugins_core::tools::get_occupant_keys (5 samples, 0.39%)</title><rect x="53.1715%" y="533" width="0.3915%" height="15" fill="rgb(247,82,36)" fg:x="679" fg:w="5"/><text x="53.4215%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.23%)</title><rect x="53.3281%" y="517" width="0.2349%" height="15" fill="rgb(222,143,9)" fg:x="681" fg:w="3"/><text x="53.5781%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.23%)</title><rect x="53.3281%" y="501" width="0.2349%" height="15" fill="rgb(238,162,48)" fg:x="681" fg:w="3"/><text x="53.5781%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="53.4847%" y="485" width="0.0783%" height="15" fill="rgb(221,59,43)" fg:x="683" fg:w="1"/><text x="53.7347%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.4847%" y="469" width="0.0783%" height="15" fill="rgb(205,166,41)" fg:x="683" fg:w="1"/><text x="53.7347%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="53.4847%" y="453" width="0.0783%" height="15" fill="rgb(241,186,40)" fg:x="683" fg:w="1"/><text x="53.7347%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.4847%" y="437" width="0.0783%" height="15" fill="rgb(216,119,35)" fg:x="683" fg:w="1"/><text x="53.7347%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.7980%" y="517" width="0.0783%" height="15" fill="rgb(208,68,38)" fg:x="687" fg:w="1"/><text x="54.0480%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.7980%" y="501" width="0.0783%" height="15" fill="rgb(217,113,1)" fg:x="687" fg:w="1"/><text x="54.0480%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.7980%" y="485" width="0.0783%" height="15" fill="rgb(242,153,3)" fg:x="687" fg:w="1"/><text x="54.0480%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.7980%" y="469" width="0.0783%" height="15" fill="rgb(229,76,35)" fg:x="687" fg:w="1"/><text x="54.0480%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.7980%" y="453" width="0.0783%" height="15" fill="rgb(229,125,34)" fg:x="687" fg:w="1"/><text x="54.0480%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="53.7980%" y="437" width="0.0783%" height="15" fill="rgb(238,179,36)" fg:x="687" fg:w="1"/><text x="54.0480%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="53.7980%" y="421" width="0.0783%" height="15" fill="rgb(244,183,19)" fg:x="687" fg:w="1"/><text x="54.0480%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="53.8763%" y="501" width="0.0783%" height="15" fill="rgb(216,85,49)" fg:x="688" fg:w="1"/><text x="54.1263%" y="511.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="53.8763%" y="485" width="0.0783%" height="15" fill="rgb(208,161,47)" fg:x="688" fg:w="1"/><text x="54.1263%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="54.1895%" y="277" width="0.0783%" height="15" fill="rgb(233,210,18)" fg:x="692" fg:w="1"/><text x="54.4395%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="54.1895%" y="261" width="0.0783%" height="15" fill="rgb(205,104,42)" fg:x="692" fg:w="1"/><text x="54.4395%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="54.1895%" y="245" width="0.0783%" height="15" fill="rgb(248,90,43)" fg:x="692" fg:w="1"/><text x="54.4395%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="54.1895%" y="229" width="0.0783%" height="15" fill="rgb(206,198,11)" fg:x="692" fg:w="1"/><text x="54.4395%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="54.1895%" y="213" width="0.0783%" height="15" fill="rgb(239,165,27)" fg:x="692" fg:w="1"/><text x="54.4395%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="54.1895%" y="197" width="0.0783%" height="15" fill="rgb(246,44,32)" fg:x="692" fg:w="1"/><text x="54.4395%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="54.1895%" y="181" width="0.0783%" height="15" fill="rgb(252,65,42)" fg:x="692" fg:w="1"/><text x="54.4395%" y="191.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="54.1895%" y="165" width="0.0783%" height="15" fill="rgb(246,197,18)" fg:x="692" fg:w="1"/><text x="54.4395%" y="175.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="54.1895%" y="149" width="0.0783%" height="15" fill="rgb(216,192,4)" fg:x="692" fg:w="1"/><text x="54.4395%" y="159.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="54.1895%" y="373" width="0.1566%" height="15" fill="rgb(208,117,10)" fg:x="692" fg:w="2"/><text x="54.4395%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="54.1895%" y="357" width="0.1566%" height="15" fill="rgb(240,61,47)" fg:x="692" fg:w="2"/><text x="54.4395%" y="367.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="54.1895%" y="341" width="0.1566%" height="15" fill="rgb(228,178,21)" fg:x="692" fg:w="2"/><text x="54.4395%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="54.1895%" y="325" width="0.1566%" height="15" fill="rgb(219,96,54)" fg:x="692" fg:w="2"/><text x="54.4395%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="54.1895%" y="309" width="0.1566%" height="15" fill="rgb(250,177,24)" fg:x="692" fg:w="2"/><text x="54.4395%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="54.1895%" y="293" width="0.1566%" height="15" fill="rgb(242,154,46)" fg:x="692" fg:w="2"/><text x="54.4395%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="54.2678%" y="277" width="0.0783%" height="15" fill="rgb(226,176,29)" fg:x="693" fg:w="1"/><text x="54.5178%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="54.4244%" y="293" width="0.0783%" height="15" fill="rgb(226,29,2)" fg:x="695" fg:w="1"/><text x="54.6744%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="54.4244%" y="277" width="0.0783%" height="15" fill="rgb(237,104,14)" fg:x="695" fg:w="1"/><text x="54.6744%" y="287.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="54.4244%" y="261" width="0.0783%" height="15" fill="rgb(245,207,31)" fg:x="695" fg:w="1"/><text x="54.6744%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="54.4244%" y="245" width="0.0783%" height="15" fill="rgb(229,211,45)" fg:x="695" fg:w="1"/><text x="54.6744%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="54.4244%" y="229" width="0.0783%" height="15" fill="rgb(229,113,15)" fg:x="695" fg:w="1"/><text x="54.6744%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="54.4244%" y="213" width="0.0783%" height="15" fill="rgb(237,147,15)" fg:x="695" fg:w="1"/><text x="54.6744%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="54.4244%" y="197" width="0.0783%" height="15" fill="rgb(244,120,12)" fg:x="695" fg:w="1"/><text x="54.6744%" y="207.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="54.5027%" y="261" width="0.0783%" height="15" fill="rgb(205,120,12)" fg:x="696" fg:w="1"/><text x="54.7527%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="54.5027%" y="245" width="0.0783%" height="15" fill="rgb(231,26,45)" fg:x="696" fg:w="1"/><text x="54.7527%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="54.5027%" y="229" width="0.0783%" height="15" fill="rgb(246,98,1)" fg:x="696" fg:w="1"/><text x="54.7527%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="54.5027%" y="213" width="0.0783%" height="15" fill="rgb(207,68,45)" fg:x="696" fg:w="1"/><text x="54.7527%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="54.5027%" y="197" width="0.0783%" height="15" fill="rgb(231,27,38)" fg:x="696" fg:w="1"/><text x="54.7527%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="54.5027%" y="181" width="0.0783%" height="15" fill="rgb(214,223,3)" fg:x="696" fg:w="1"/><text x="54.7527%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="54.5027%" y="165" width="0.0783%" height="15" fill="rgb(228,195,46)" fg:x="696" fg:w="1"/><text x="54.7527%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="54.5027%" y="149" width="0.0783%" height="15" fill="rgb(231,100,42)" fg:x="696" fg:w="1"/><text x="54.7527%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="54.5027%" y="133" width="0.0783%" height="15" fill="rgb(236,53,4)" fg:x="696" fg:w="1"/><text x="54.7527%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="54.5027%" y="117" width="0.0783%" height="15" fill="rgb(230,152,12)" fg:x="696" fg:w="1"/><text x="54.7527%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="54.5027%" y="101" width="0.0783%" height="15" fill="rgb(226,101,19)" fg:x="696" fg:w="1"/><text x="54.7527%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="54.5027%" y="85" width="0.0783%" height="15" fill="rgb(250,149,32)" fg:x="696" fg:w="1"/><text x="54.7527%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="54.5027%" y="69" width="0.0783%" height="15" fill="rgb(232,178,12)" fg:x="696" fg:w="1"/><text x="54.7527%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="54.5027%" y="53" width="0.0783%" height="15" fill="rgb(246,151,17)" fg:x="696" fg:w="1"/><text x="54.7527%" y="63.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="54.5027%" y="37" width="0.0783%" height="15" fill="rgb(252,17,51)" fg:x="696" fg:w="1"/><text x="54.7527%" y="47.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (4 samples, 0.31%)</title><rect x="54.3461%" y="357" width="0.3132%" height="15" fill="rgb(250,207,23)" fg:x="694" fg:w="4"/><text x="54.5961%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.31%)</title><rect x="54.3461%" y="341" width="0.3132%" height="15" fill="rgb(205,27,5)" fg:x="694" fg:w="4"/><text x="54.5961%" y="351.50"></text></g><g><title>core::fmt::write (3 samples, 0.23%)</title><rect x="54.4244%" y="325" width="0.2349%" height="15" fill="rgb(224,32,19)" fg:x="695" fg:w="3"/><text x="54.6744%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.23%)</title><rect x="54.4244%" y="309" width="0.2349%" height="15" fill="rgb(247,214,40)" fg:x="695" fg:w="3"/><text x="54.6744%" y="319.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.16%)</title><rect x="54.5027%" y="293" width="0.1566%" height="15" fill="rgb(239,199,17)" fg:x="696" fg:w="2"/><text x="54.7527%" y="303.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (2 samples, 0.16%)</title><rect x="54.5027%" y="277" width="0.1566%" height="15" fill="rgb(251,159,9)" fg:x="696" fg:w="2"/><text x="54.7527%" y="287.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="54.5810%" y="261" width="0.0783%" height="15" fill="rgb(225,78,32)" fg:x="697" fg:w="1"/><text x="54.8310%" y="271.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.08%)</title><rect x="54.5810%" y="245" width="0.0783%" height="15" fill="rgb(206,97,47)" fg:x="697" fg:w="1"/><text x="54.8310%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (11 samples, 0.86%)</title><rect x="53.8763%" y="517" width="0.8614%" height="15" fill="rgb(227,107,4)" fg:x="688" fg:w="11"/><text x="54.1263%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (10 samples, 0.78%)</title><rect x="53.9546%" y="501" width="0.7831%" height="15" fill="rgb(241,146,50)" fg:x="689" fg:w="10"/><text x="54.2046%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (10 samples, 0.78%)</title><rect x="53.9546%" y="485" width="0.7831%" height="15" fill="rgb(232,92,30)" fg:x="689" fg:w="10"/><text x="54.2046%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (10 samples, 0.78%)</title><rect x="53.9546%" y="469" width="0.7831%" height="15" fill="rgb(222,0,40)" fg:x="689" fg:w="10"/><text x="54.2046%" y="479.50"></text></g><g><title>core::fmt::write (10 samples, 0.78%)</title><rect x="53.9546%" y="453" width="0.7831%" height="15" fill="rgb(219,54,33)" fg:x="689" fg:w="10"/><text x="54.2046%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (10 samples, 0.78%)</title><rect x="53.9546%" y="437" width="0.7831%" height="15" fill="rgb(226,209,28)" fg:x="689" fg:w="10"/><text x="54.2046%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (10 samples, 0.78%)</title><rect x="53.9546%" y="421" width="0.7831%" height="15" fill="rgb(254,205,35)" fg:x="689" fg:w="10"/><text x="54.2046%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (10 samples, 0.78%)</title><rect x="53.9546%" y="405" width="0.7831%" height="15" fill="rgb(230,159,3)" fg:x="689" fg:w="10"/><text x="54.2046%" y="415.50"></text></g><g><title>core::fmt::write (9 samples, 0.70%)</title><rect x="54.0329%" y="389" width="0.7048%" height="15" fill="rgb(232,190,24)" fg:x="690" fg:w="9"/><text x="54.2829%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (5 samples, 0.39%)</title><rect x="54.3461%" y="373" width="0.3915%" height="15" fill="rgb(217,227,44)" fg:x="694" fg:w="5"/><text x="54.5961%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="54.6594%" y="357" width="0.0783%" height="15" fill="rgb(236,211,1)" fg:x="698" fg:w="1"/><text x="54.9094%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="54.6594%" y="341" width="0.0783%" height="15" fill="rgb(250,127,46)" fg:x="698" fg:w="1"/><text x="54.9094%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="54.6594%" y="325" width="0.0783%" height="15" fill="rgb(229,213,6)" fg:x="698" fg:w="1"/><text x="54.9094%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="54.6594%" y="309" width="0.0783%" height="15" fill="rgb(237,15,36)" fg:x="698" fg:w="1"/><text x="54.9094%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="54.6594%" y="293" width="0.0783%" height="15" fill="rgb(213,131,41)" fg:x="698" fg:w="1"/><text x="54.9094%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="54.6594%" y="277" width="0.0783%" height="15" fill="rgb(225,82,44)" fg:x="698" fg:w="1"/><text x="54.9094%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="54.6594%" y="261" width="0.0783%" height="15" fill="rgb(249,42,11)" fg:x="698" fg:w="1"/><text x="54.9094%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="54.6594%" y="245" width="0.0783%" height="15" fill="rgb(253,11,29)" fg:x="698" fg:w="1"/><text x="54.9094%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="54.6594%" y="229" width="0.0783%" height="15" fill="rgb(206,8,54)" fg:x="698" fg:w="1"/><text x="54.9094%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="54.6594%" y="213" width="0.0783%" height="15" fill="rgb(222,186,2)" fg:x="698" fg:w="1"/><text x="54.9094%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="54.6594%" y="197" width="0.0783%" height="15" fill="rgb(221,206,53)" fg:x="698" fg:w="1"/><text x="54.9094%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="54.6594%" y="181" width="0.0783%" height="15" fill="rgb(230,150,21)" fg:x="698" fg:w="1"/><text x="54.9094%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="54.6594%" y="165" width="0.0783%" height="15" fill="rgb(253,202,10)" fg:x="698" fg:w="1"/><text x="54.9094%" y="175.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="54.6594%" y="149" width="0.0783%" height="15" fill="rgb(238,109,40)" fg:x="698" fg:w="1"/><text x="54.9094%" y="159.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="54.6594%" y="133" width="0.0783%" height="15" fill="rgb(247,120,22)" fg:x="698" fg:w="1"/><text x="54.9094%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.23%)</title><rect x="55.9123%" y="405" width="0.2349%" height="15" fill="rgb(207,43,30)" fg:x="714" fg:w="3"/><text x="56.1623%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.0689%" y="389" width="0.0783%" height="15" fill="rgb(213,211,24)" fg:x="716" fg:w="1"/><text x="56.3189%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="57.0086%" y="277" width="0.0783%" height="15" fill="rgb(239,73,39)" fg:x="728" fg:w="1"/><text x="57.2586%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.0086%" y="261" width="0.0783%" height="15" fill="rgb(245,182,19)" fg:x="728" fg:w="1"/><text x="57.2586%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="57.0086%" y="245" width="0.0783%" height="15" fill="rgb(247,143,26)" fg:x="728" fg:w="1"/><text x="57.2586%" y="255.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (4 samples, 0.31%)</title><rect x="56.8520%" y="309" width="0.3132%" height="15" fill="rgb(228,191,23)" fg:x="726" fg:w="4"/><text x="57.1020%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="57.0086%" y="293" width="0.1566%" height="15" fill="rgb(253,165,31)" fg:x="728" fg:w="2"/><text x="57.2586%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="57.0869%" y="277" width="0.0783%" height="15" fill="rgb(234,138,20)" fg:x="729" fg:w="1"/><text x="57.3369%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="57.3218%" y="293" width="0.1566%" height="15" fill="rgb(218,191,29)" fg:x="732" fg:w="2"/><text x="57.5718%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.94%)</title><rect x="56.6171%" y="325" width="0.9397%" height="15" fill="rgb(221,157,19)" fg:x="723" fg:w="12"/><text x="56.8671%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.39%)</title><rect x="57.1652%" y="309" width="0.3915%" height="15" fill="rgb(237,26,42)" fg:x="730" fg:w="5"/><text x="57.4152%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.4785%" y="293" width="0.0783%" height="15" fill="rgb(220,163,24)" fg:x="734" fg:w="1"/><text x="57.7285%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (17 samples, 1.33%)</title><rect x="56.5388%" y="341" width="1.3312%" height="15" fill="rgb(242,115,20)" fg:x="722" fg:w="17"/><text x="56.7888%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.31%)</title><rect x="57.5568%" y="325" width="0.3132%" height="15" fill="rgb(210,206,9)" fg:x="735" fg:w="4"/><text x="57.8068%" y="335.50"></text></g><g><title>__libc_malloc (4 samples, 0.31%)</title><rect x="57.5568%" y="309" width="0.3132%" height="15" fill="rgb(208,71,17)" fg:x="735" fg:w="4"/><text x="57.8068%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="57.8700%" y="277" width="0.1566%" height="15" fill="rgb(233,7,5)" fg:x="739" fg:w="2"/><text x="58.1200%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.9483%" y="261" width="0.0783%" height="15" fill="rgb(207,92,33)" fg:x="740" fg:w="1"/><text x="58.1983%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="57.9483%" y="245" width="0.0783%" height="15" fill="rgb(218,87,9)" fg:x="740" fg:w="1"/><text x="58.1983%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="57.9483%" y="229" width="0.0783%" height="15" fill="rgb(219,47,37)" fg:x="740" fg:w="1"/><text x="58.1983%" y="239.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (23 samples, 1.80%)</title><rect x="56.3038%" y="357" width="1.8011%" height="15" fill="rgb(221,152,34)" fg:x="719" fg:w="23"/><text x="56.5538%" y="367.50">&lt;..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.23%)</title><rect x="57.8700%" y="341" width="0.2349%" height="15" fill="rgb(235,176,21)" fg:x="739" fg:w="3"/><text x="58.1200%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.23%)</title><rect x="57.8700%" y="325" width="0.2349%" height="15" fill="rgb(232,212,21)" fg:x="739" fg:w="3"/><text x="58.1200%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (3 samples, 0.23%)</title><rect x="57.8700%" y="309" width="0.2349%" height="15" fill="rgb(245,82,39)" fg:x="739" fg:w="3"/><text x="58.1200%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (3 samples, 0.23%)</title><rect x="57.8700%" y="293" width="0.2349%" height="15" fill="rgb(241,52,51)" fg:x="739" fg:w="3"/><text x="58.1200%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="58.0266%" y="277" width="0.0783%" height="15" fill="rgb(219,91,24)" fg:x="741" fg:w="1"/><text x="58.2766%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.0266%" y="261" width="0.0783%" height="15" fill="rgb(241,142,12)" fg:x="741" fg:w="1"/><text x="58.2766%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="58.1832%" y="341" width="0.0783%" height="15" fill="rgb(230,27,9)" fg:x="743" fg:w="1"/><text x="58.4332%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="58.1832%" y="325" width="0.0783%" height="15" fill="rgb(249,181,32)" fg:x="743" fg:w="1"/><text x="58.4332%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 2.19%)</title><rect x="56.2255%" y="373" width="2.1926%" height="15" fill="rgb(230,107,3)" fg:x="718" fg:w="28"/><text x="56.4755%" y="383.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.31%)</title><rect x="58.1049%" y="357" width="0.3132%" height="15" fill="rgb(246,204,14)" fg:x="742" fg:w="4"/><text x="58.3549%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.2616%" y="341" width="0.1566%" height="15" fill="rgb(213,192,47)" fg:x="744" fg:w="2"/><text x="58.5116%" y="351.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (33 samples, 2.58%)</title><rect x="56.1472%" y="405" width="2.5842%" height="15" fill="rgb(240,44,36)" fg:x="717" fg:w="33"/><text x="56.3972%" y="415.50">&lt;r..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (32 samples, 2.51%)</title><rect x="56.2255%" y="389" width="2.5059%" height="15" fill="rgb(244,209,38)" fg:x="718" fg:w="32"/><text x="56.4755%" y="399.50">&lt;s..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.31%)</title><rect x="58.4182%" y="373" width="0.3132%" height="15" fill="rgb(219,34,37)" fg:x="746" fg:w="4"/><text x="58.6682%" y="383.50"></text></g><g><title>__libc_malloc (3 samples, 0.23%)</title><rect x="58.4965%" y="357" width="0.2349%" height="15" fill="rgb(210,28,6)" fg:x="747" fg:w="3"/><text x="58.7465%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.23%)</title><rect x="58.7314%" y="405" width="0.2349%" height="15" fill="rgb(244,110,52)" fg:x="750" fg:w="3"/><text x="58.9814%" y="415.50"></text></g><g><title>__libc_free (3 samples, 0.23%)</title><rect x="58.7314%" y="389" width="0.2349%" height="15" fill="rgb(254,124,47)" fg:x="750" fg:w="3"/><text x="58.9814%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="59.3579%" y="389" width="0.0783%" height="15" fill="rgb(254,110,13)" fg:x="758" fg:w="1"/><text x="59.6079%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="59.3579%" y="373" width="0.0783%" height="15" fill="rgb(252,57,21)" fg:x="758" fg:w="1"/><text x="59.6079%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (56 samples, 4.39%)</title><rect x="55.2075%" y="421" width="4.3853%" height="15" fill="rgb(242,60,45)" fg:x="705" fg:w="56"/><text x="55.4575%" y="431.50">&lt;core..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.63%)</title><rect x="58.9663%" y="405" width="0.6265%" height="15" fill="rgb(234,49,30)" fg:x="753" fg:w="8"/><text x="59.2163%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="59.4362%" y="389" width="0.1566%" height="15" fill="rgb(218,98,6)" fg:x="759" fg:w="2"/><text x="59.6862%" y="399.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (68 samples, 5.32%)</title><rect x="54.9726%" y="453" width="5.3250%" height="15" fill="rgb(220,174,29)" fg:x="702" fg:w="68"/><text x="55.2226%" y="463.50">&lt;rpc_pr..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (67 samples, 5.25%)</title><rect x="55.0509%" y="437" width="5.2467%" height="15" fill="rgb(236,163,23)" fg:x="703" fg:w="67"/><text x="55.3009%" y="447.50">&lt;std::..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.70%)</title><rect x="59.5928%" y="421" width="0.7048%" height="15" fill="rgb(242,114,45)" fg:x="761" fg:w="9"/><text x="59.8428%" y="431.50"></text></g><g><title>__libc_malloc (9 samples, 0.70%)</title><rect x="59.5928%" y="405" width="0.7048%" height="15" fill="rgb(232,10,53)" fg:x="761" fg:w="9"/><text x="59.8428%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (74 samples, 5.79%)</title><rect x="54.7377%" y="469" width="5.7948%" height="15" fill="rgb(245,108,29)" fg:x="699" fg:w="74"/><text x="54.9877%" y="479.50">&lt;core::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.23%)</title><rect x="60.2976%" y="453" width="0.2349%" height="15" fill="rgb(240,89,53)" fg:x="770" fg:w="3"/><text x="60.5476%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.23%)</title><rect x="60.2976%" y="437" width="0.2349%" height="15" fill="rgb(226,60,45)" fg:x="770" fg:w="3"/><text x="60.5476%" y="447.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (94 samples, 7.36%)</title><rect x="54.7377%" y="501" width="7.3610%" height="15" fill="rgb(230,41,44)" fg:x="699" fg:w="94"/><text x="54.9877%" y="511.50">&lt;rpc_proto..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (94 samples, 7.36%)</title><rect x="54.7377%" y="485" width="7.3610%" height="15" fill="rgb(230,26,20)" fg:x="699" fg:w="94"/><text x="54.9877%" y="495.50">&lt;std::coll..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (20 samples, 1.57%)</title><rect x="60.5325%" y="469" width="1.5662%" height="15" fill="rgb(237,170,32)" fg:x="773" fg:w="20"/><text x="60.7825%" y="479.50"></text></g><g><title>__libc_malloc (18 samples, 1.41%)</title><rect x="60.6891%" y="453" width="1.4096%" height="15" fill="rgb(212,35,42)" fg:x="775" fg:w="18"/><text x="60.9391%" y="463.50"></text></g><g><title>__libc_malloc (3 samples, 0.23%)</title><rect x="62.2553%" y="453" width="0.2349%" height="15" fill="rgb(227,31,34)" fg:x="795" fg:w="3"/><text x="62.5053%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.4902%" y="453" width="0.0783%" height="15" fill="rgb(216,19,18)" fg:x="798" fg:w="1"/><text x="62.7402%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.7251%" y="421" width="0.0783%" height="15" fill="rgb(211,133,42)" fg:x="801" fg:w="1"/><text x="62.9751%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (4 samples, 0.31%)</title><rect x="62.5685%" y="453" width="0.3132%" height="15" fill="rgb(244,66,13)" fg:x="799" fg:w="4"/><text x="62.8185%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.23%)</title><rect x="62.6468%" y="437" width="0.2349%" height="15" fill="rgb(218,185,50)" fg:x="800" fg:w="3"/><text x="62.8968%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.8034%" y="421" width="0.0783%" height="15" fill="rgb(219,149,13)" fg:x="802" fg:w="1"/><text x="63.0534%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="62.8818%" y="421" width="0.2349%" height="15" fill="rgb(221,125,0)" fg:x="803" fg:w="3"/><text x="63.1318%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="62.8818%" y="405" width="0.2349%" height="15" fill="rgb(247,126,27)" fg:x="803" fg:w="3"/><text x="63.1318%" y="415.50"></text></g><g><title>__libc_malloc (3 samples, 0.23%)</title><rect x="62.8818%" y="389" width="0.2349%" height="15" fill="rgb(250,138,30)" fg:x="803" fg:w="3"/><text x="63.1318%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="63.1950%" y="405" width="0.2349%" height="15" fill="rgb(230,151,9)" fg:x="807" fg:w="3"/><text x="63.4450%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="63.1950%" y="389" width="0.2349%" height="15" fill="rgb(233,80,38)" fg:x="807" fg:w="3"/><text x="63.4450%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="63.2733%" y="373" width="0.1566%" height="15" fill="rgb(232,68,43)" fg:x="808" fg:w="2"/><text x="63.5233%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.4299%" y="373" width="0.0783%" height="15" fill="rgb(254,5,50)" fg:x="810" fg:w="1"/><text x="63.6799%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.4299%" y="357" width="0.0783%" height="15" fill="rgb(225,45,5)" fg:x="810" fg:w="1"/><text x="63.6799%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="63.4299%" y="341" width="0.0783%" height="15" fill="rgb(239,22,3)" fg:x="810" fg:w="1"/><text x="63.6799%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.5082%" y="357" width="0.0783%" height="15" fill="rgb(243,129,0)" fg:x="811" fg:w="1"/><text x="63.7582%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.23%)</title><rect x="63.4299%" y="389" width="0.2349%" height="15" fill="rgb(223,164,0)" fg:x="810" fg:w="3"/><text x="63.6799%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="63.5082%" y="373" width="0.1566%" height="15" fill="rgb(221,46,29)" fg:x="811" fg:w="2"/><text x="63.7582%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="63.5865%" y="357" width="0.0783%" height="15" fill="rgb(205,97,47)" fg:x="812" fg:w="1"/><text x="63.8365%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="63.5865%" y="341" width="0.0783%" height="15" fill="rgb(249,14,8)" fg:x="812" fg:w="1"/><text x="63.8365%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.6648%" y="373" width="0.0783%" height="15" fill="rgb(216,77,3)" fg:x="813" fg:w="1"/><text x="63.9148%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.7431%" y="373" width="0.0783%" height="15" fill="rgb(206,168,54)" fg:x="814" fg:w="1"/><text x="63.9931%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.9781%" y="341" width="0.0783%" height="15" fill="rgb(236,3,41)" fg:x="817" fg:w="1"/><text x="64.2281%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.9781%" y="325" width="0.0783%" height="15" fill="rgb(231,132,24)" fg:x="817" fg:w="1"/><text x="64.2281%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.9781%" y="309" width="0.0783%" height="15" fill="rgb(227,221,40)" fg:x="817" fg:w="1"/><text x="64.2281%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="64.0564%" y="325" width="0.0783%" height="15" fill="rgb(233,151,11)" fg:x="818" fg:w="1"/><text x="64.3064%" y="335.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (17 samples, 1.33%)</title><rect x="62.8818%" y="453" width="1.3312%" height="15" fill="rgb(247,81,35)" fg:x="803" fg:w="17"/><text x="63.1318%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 1.33%)</title><rect x="62.8818%" y="437" width="1.3312%" height="15" fill="rgb(243,128,48)" fg:x="803" fg:w="17"/><text x="63.1318%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (14 samples, 1.10%)</title><rect x="63.1167%" y="421" width="1.0963%" height="15" fill="rgb(253,16,10)" fg:x="806" fg:w="14"/><text x="63.3667%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (10 samples, 0.78%)</title><rect x="63.4299%" y="405" width="0.7831%" height="15" fill="rgb(228,67,27)" fg:x="810" fg:w="10"/><text x="63.6799%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.55%)</title><rect x="63.6648%" y="389" width="0.5482%" height="15" fill="rgb(231,105,25)" fg:x="813" fg:w="7"/><text x="63.9148%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (5 samples, 0.39%)</title><rect x="63.8215%" y="373" width="0.3915%" height="15" fill="rgb(213,166,47)" fg:x="815" fg:w="5"/><text x="64.0715%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.23%)</title><rect x="63.9781%" y="357" width="0.2349%" height="15" fill="rgb(209,27,10)" fg:x="817" fg:w="3"/><text x="64.2281%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="64.0564%" y="341" width="0.1566%" height="15" fill="rgb(241,44,30)" fg:x="818" fg:w="2"/><text x="64.3064%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="64.1347%" y="325" width="0.0783%" height="15" fill="rgb(223,216,15)" fg:x="819" fg:w="1"/><text x="64.3847%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.5262%" y="437" width="0.0783%" height="15" fill="rgb(227,14,7)" fg:x="824" fg:w="1"/><text x="64.7762%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="64.6045%" y="437" width="0.1566%" height="15" fill="rgb(237,14,5)" fg:x="825" fg:w="2"/><text x="64.8545%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="64.6045%" y="421" width="0.1566%" height="15" fill="rgb(232,14,36)" fg:x="825" fg:w="2"/><text x="64.8545%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="64.6045%" y="405" width="0.1566%" height="15" fill="rgb(234,0,38)" fg:x="825" fg:w="2"/><text x="64.8545%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.0744%" y="405" width="0.0783%" height="15" fill="rgb(207,170,14)" fg:x="831" fg:w="1"/><text x="65.3244%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.0744%" y="389" width="0.0783%" height="15" fill="rgb(252,45,13)" fg:x="831" fg:w="1"/><text x="65.3244%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.0744%" y="373" width="0.0783%" height="15" fill="rgb(213,142,7)" fg:x="831" fg:w="1"/><text x="65.3244%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.1527%" y="357" width="0.0783%" height="15" fill="rgb(216,157,23)" fg:x="832" fg:w="1"/><text x="65.4027%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.1527%" y="341" width="0.0783%" height="15" fill="rgb(212,145,33)" fg:x="832" fg:w="1"/><text x="65.4027%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="65.1527%" y="325" width="0.0783%" height="15" fill="rgb(233,26,13)" fg:x="832" fg:w="1"/><text x="65.4027%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="65.2310%" y="341" width="0.1566%" height="15" fill="rgb(219,196,19)" fg:x="833" fg:w="2"/><text x="65.4810%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.31%)</title><rect x="65.1527%" y="405" width="0.3132%" height="15" fill="rgb(246,56,21)" fg:x="832" fg:w="4"/><text x="65.4027%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.31%)</title><rect x="65.1527%" y="389" width="0.3132%" height="15" fill="rgb(222,28,53)" fg:x="832" fg:w="4"/><text x="65.4027%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="65.1527%" y="373" width="0.3132%" height="15" fill="rgb(224,5,27)" fg:x="832" fg:w="4"/><text x="65.4027%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.23%)</title><rect x="65.2310%" y="357" width="0.2349%" height="15" fill="rgb(220,153,33)" fg:x="833" fg:w="3"/><text x="65.4810%" y="367.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="65.3876%" y="341" width="0.0783%" height="15" fill="rgb(226,58,19)" fg:x="835" fg:w="1"/><text x="65.6376%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="65.6226%" y="389" width="0.0783%" height="15" fill="rgb(239,112,23)" fg:x="838" fg:w="1"/><text x="65.8726%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="65.7792%" y="373" width="0.1566%" height="15" fill="rgb(251,213,20)" fg:x="840" fg:w="2"/><text x="66.0292%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="65.7792%" y="357" width="0.1566%" height="15" fill="rgb(215,181,21)" fg:x="840" fg:w="2"/><text x="66.0292%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="65.7792%" y="341" width="0.1566%" height="15" fill="rgb(240,8,35)" fg:x="840" fg:w="2"/><text x="66.0292%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.39%)</title><rect x="65.7009%" y="389" width="0.3915%" height="15" fill="rgb(232,203,3)" fg:x="839" fg:w="5"/><text x="65.9509%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="65.9358%" y="373" width="0.1566%" height="15" fill="rgb(214,202,43)" fg:x="842" fg:w="2"/><text x="66.1858%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (18 samples, 1.41%)</title><rect x="64.8395%" y="421" width="1.4096%" height="15" fill="rgb(254,35,11)" fg:x="828" fg:w="18"/><text x="65.0895%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.78%)</title><rect x="65.4659%" y="405" width="0.7831%" height="15" fill="rgb(239,173,13)" fg:x="836" fg:w="10"/><text x="65.7159%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="66.0924%" y="389" width="0.1566%" height="15" fill="rgb(220,141,0)" fg:x="844" fg:w="2"/><text x="66.3424%" y="399.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (149 samples, 11.67%)</title><rect x="54.7377%" y="517" width="11.6680%" height="15" fill="rgb(210,98,12)" fg:x="699" fg:w="149"/><text x="54.9877%" y="527.50">&lt;rpc_proto::Json ..</text></g><g><title>kernel::model::EntityPtr::to_json_value (55 samples, 4.31%)</title><rect x="62.0987%" y="501" width="4.3070%" height="15" fill="rgb(254,153,22)" fg:x="793" fg:w="55"/><text x="62.3487%" y="511.50">kerne..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (55 samples, 4.31%)</title><rect x="62.0987%" y="485" width="4.3070%" height="15" fill="rgb(247,223,17)" fg:x="793" fg:w="55"/><text x="62.3487%" y="495.50">kerne..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (55 samples, 4.31%)</title><rect x="62.0987%" y="469" width="4.3070%" height="15" fill="rgb(246,56,7)" fg:x="793" fg:w="55"/><text x="62.3487%" y="479.50">&lt;serd..</text></g><g><title>serde::ser::Serializer::collect_map (28 samples, 2.19%)</title><rect x="64.2130%" y="453" width="2.1926%" height="15" fill="rgb(240,226,12)" fg:x="820" fg:w="28"/><text x="64.4630%" y="463.50">s..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (21 samples, 1.64%)</title><rect x="64.7612%" y="437" width="1.6445%" height="15" fill="rgb(205,87,46)" fg:x="827" fg:w="21"/><text x="65.0112%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="66.2490%" y="421" width="0.1566%" height="15" fill="rgb(245,214,51)" fg:x="846" fg:w="2"/><text x="66.4990%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.3273%" y="405" width="0.0783%" height="15" fill="rgb(223,172,33)" fg:x="847" fg:w="1"/><text x="66.5773%" y="415.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (291 samples, 22.79%)</title><rect x="43.7745%" y="597" width="22.7878%" height="15" fill="rgb(227,203,34)" fg:x="559" fg:w="291"/><text x="44.0245%" y="607.50">&lt;plugins_rpc::sessions::SessionServi..</text></g><g><title>core::iter::adapters::try_process (272 samples, 21.30%)</title><rect x="45.2623%" y="581" width="21.2999%" height="15" fill="rgb(248,143,44)" fg:x="578" fg:w="272"/><text x="45.5123%" y="591.50">core::iter::adapters::try_process</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (166 samples, 13.00%)</title><rect x="53.5630%" y="565" width="12.9992%" height="15" fill="rgb(226,162,5)" fg:x="684" fg:w="166"/><text x="53.8130%" y="575.50">alloc::vec::in_place..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (166 samples, 13.00%)</title><rect x="53.5630%" y="549" width="12.9992%" height="15" fill="rgb(211,143,1)" fg:x="684" fg:w="166"/><text x="53.8130%" y="559.50">&lt;core::iter::adapter..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (166 samples, 13.00%)</title><rect x="53.5630%" y="533" width="12.9992%" height="15" fill="rgb(224,96,15)" fg:x="684" fg:w="166"/><text x="53.8130%" y="543.50">plugins_rpc::session..</text></g><g><title>rpc_proto::&lt;impl core::convert::From&lt;&amp;rpc_proto::EntityKey&gt; for kernel::model::EntityKey&gt;::from (2 samples, 0.16%)</title><rect x="66.4056%" y="517" width="0.1566%" height="15" fill="rgb(222,4,38)" fg:x="848" fg:w="2"/><text x="66.6556%" y="527.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.08%)</title><rect x="66.4839%" y="501" width="0.0783%" height="15" fill="rgb(253,228,15)" fg:x="849" fg:w="1"/><text x="66.7339%" y="511.50"></text></g><g><title>__libc_free (3 samples, 0.23%)</title><rect x="66.5623%" y="597" width="0.2349%" height="15" fill="rgb(242,194,12)" fg:x="850" fg:w="3"/><text x="66.8123%" y="607.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (344 samples, 26.94%)</title><rect x="40.0157%" y="661" width="26.9381%" height="15" fill="rgb(214,177,31)" fg:x="511" fg:w="344"/><text x="40.2657%" y="671.50">&lt;engine::perform::StandardPerformer as kern..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (320 samples, 25.06%)</title><rect x="41.8951%" y="645" width="25.0587%" height="15" fill="rgb(226,58,51)" fg:x="535" fg:w="320"/><text x="42.1451%" y="655.50">kernel::plugins::SessionPlugins::have_su..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (320 samples, 25.06%)</title><rect x="41.8951%" y="629" width="25.0587%" height="15" fill="rgb(250,119,16)" fg:x="535" fg:w="320"/><text x="42.1451%" y="639.50">&lt;plugins_dynlib::DynamicPlugin as kernel..</text></g><g><title>plugins_rpc::querying::have_surroundings (297 samples, 23.26%)</title><rect x="43.6962%" y="613" width="23.2576%" height="15" fill="rgb(223,128,53)" fg:x="558" fg:w="297"/><text x="43.9462%" y="623.50">plugins_rpc::querying::have_surroundi..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="66.7972%" y="597" width="0.1566%" height="15" fill="rgb(251,199,15)" fg:x="853" fg:w="2"/><text x="67.0472%" y="607.50"></text></g><g><title>rpc_proto::&lt;impl core::convert::Into&lt;rpc_proto::EntityKey&gt; for kernel::model::EntityKey&gt;::into (2 samples, 0.16%)</title><rect x="66.7972%" y="581" width="0.1566%" height="15" fill="rgb(235,168,42)" fg:x="853" fg:w="2"/><text x="67.0472%" y="591.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;kernel::model::EntityKey&gt; for alloc::string::String&gt;::from (2 samples, 0.16%)</title><rect x="66.7972%" y="565" width="0.1566%" height="15" fill="rgb(250,210,17)" fg:x="853" fg:w="2"/><text x="67.0472%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="66.7972%" y="549" width="0.1566%" height="15" fill="rgb(226,36,41)" fg:x="853" fg:w="2"/><text x="67.0472%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="66.8755%" y="533" width="0.0783%" height="15" fill="rgb(225,87,10)" fg:x="854" fg:w="1"/><text x="67.1255%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.9538%" y="517" width="0.0783%" height="15" fill="rgb(228,83,9)" fg:x="855" fg:w="1"/><text x="67.2038%" y="527.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="67.0321%" y="517" width="0.0783%" height="15" fill="rgb(225,16,36)" fg:x="856" fg:w="1"/><text x="67.2821%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.0321%" y="501" width="0.0783%" height="15" fill="rgb(242,198,13)" fg:x="856" fg:w="1"/><text x="67.2821%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="67.0321%" y="485" width="0.0783%" height="15" fill="rgb(239,25,51)" fg:x="856" fg:w="1"/><text x="67.2821%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.0321%" y="469" width="0.0783%" height="15" fill="rgb(239,28,37)" fg:x="856" fg:w="1"/><text x="67.2821%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.0321%" y="453" width="0.0783%" height="15" fill="rgb(234,70,17)" fg:x="856" fg:w="1"/><text x="67.2821%" y="463.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="67.0321%" y="437" width="0.0783%" height="15" fill="rgb(231,215,53)" fg:x="856" fg:w="1"/><text x="67.2821%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.0321%" y="421" width="0.0783%" height="15" fill="rgb(218,140,42)" fg:x="856" fg:w="1"/><text x="67.2821%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.0321%" y="405" width="0.0783%" height="15" fill="rgb(233,227,45)" fg:x="856" fg:w="1"/><text x="67.2821%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.0321%" y="389" width="0.0783%" height="15" fill="rgb(225,189,21)" fg:x="856" fg:w="1"/><text x="67.2821%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="67.0321%" y="373" width="0.0783%" height="15" fill="rgb(237,176,54)" fg:x="856" fg:w="1"/><text x="67.2821%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.0321%" y="357" width="0.0783%" height="15" fill="rgb(215,131,46)" fg:x="856" fg:w="1"/><text x="67.2821%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.1887%" y="453" width="0.0783%" height="15" fill="rgb(218,95,20)" fg:x="858" fg:w="1"/><text x="67.4387%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.1887%" y="437" width="0.0783%" height="15" fill="rgb(208,198,12)" fg:x="858" fg:w="1"/><text x="67.4387%" y="447.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (7 samples, 0.55%)</title><rect x="66.9538%" y="581" width="0.5482%" height="15" fill="rgb(239,107,50)" fg:x="855" fg:w="7"/><text x="67.2038%" y="591.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (7 samples, 0.55%)</title><rect x="66.9538%" y="565" width="0.5482%" height="15" fill="rgb(240,217,37)" fg:x="855" fg:w="7"/><text x="67.2038%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.55%)</title><rect x="66.9538%" y="549" width="0.5482%" height="15" fill="rgb(242,197,49)" fg:x="855" fg:w="7"/><text x="67.2038%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.55%)</title><rect x="66.9538%" y="533" width="0.5482%" height="15" fill="rgb(219,171,17)" fg:x="855" fg:w="7"/><text x="67.2038%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.39%)</title><rect x="67.1104%" y="517" width="0.3915%" height="15" fill="rgb(209,81,40)" fg:x="857" fg:w="5"/><text x="67.3604%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="67.1104%" y="501" width="0.3915%" height="15" fill="rgb(237,156,30)" fg:x="857" fg:w="5"/><text x="67.3604%" y="511.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (4 samples, 0.31%)</title><rect x="67.1887%" y="485" width="0.3132%" height="15" fill="rgb(212,127,16)" fg:x="858" fg:w="4"/><text x="67.4387%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="67.1887%" y="469" width="0.3132%" height="15" fill="rgb(226,66,32)" fg:x="858" fg:w="4"/><text x="67.4387%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="67.2670%" y="453" width="0.2349%" height="15" fill="rgb(245,22,46)" fg:x="859" fg:w="3"/><text x="67.5170%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="67.2670%" y="437" width="0.2349%" height="15" fill="rgb(210,112,21)" fg:x="859" fg:w="3"/><text x="67.5170%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="67.3453%" y="421" width="0.1566%" height="15" fill="rgb(207,118,39)" fg:x="860" fg:w="2"/><text x="67.5953%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="67.3453%" y="405" width="0.1566%" height="15" fill="rgb(205,206,35)" fg:x="860" fg:w="2"/><text x="67.5953%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.5020%" y="533" width="0.0783%" height="15" fill="rgb(222,120,2)" fg:x="862" fg:w="1"/><text x="67.7520%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.5020%" y="517" width="0.0783%" height="15" fill="rgb(205,38,18)" fg:x="862" fg:w="1"/><text x="67.7520%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.5803%" y="533" width="0.0783%" height="15" fill="rgb(226,61,2)" fg:x="863" fg:w="1"/><text x="67.8303%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.5803%" y="517" width="0.0783%" height="15" fill="rgb(242,161,23)" fg:x="863" fg:w="1"/><text x="67.8303%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="67.5803%" y="501" width="0.0783%" height="15" fill="rgb(213,13,52)" fg:x="863" fg:w="1"/><text x="67.8303%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.6586%" y="469" width="0.0783%" height="15" fill="rgb(246,209,47)" fg:x="864" fg:w="1"/><text x="67.9086%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.6586%" y="453" width="0.0783%" height="15" fill="rgb(214,41,3)" fg:x="864" fg:w="1"/><text x="67.9086%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (12 samples, 0.94%)</title><rect x="66.9538%" y="645" width="0.9397%" height="15" fill="rgb(236,119,38)" fg:x="855" fg:w="12"/><text x="67.2038%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (12 samples, 0.94%)</title><rect x="66.9538%" y="629" width="0.9397%" height="15" fill="rgb(218,50,11)" fg:x="855" fg:w="12"/><text x="67.2038%" y="639.50"></text></g><g><title>engine::internal::Entities::add_persisted (12 samples, 0.94%)</title><rect x="66.9538%" y="613" width="0.9397%" height="15" fill="rgb(228,38,11)" fg:x="855" fg:w="12"/><text x="67.2038%" y="623.50"></text></g><g><title>kernel::model::deserialize_entity (12 samples, 0.94%)</title><rect x="66.9538%" y="597" width="0.9397%" height="15" fill="rgb(212,13,9)" fg:x="855" fg:w="12"/><text x="67.2038%" y="607.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.39%)</title><rect x="67.5020%" y="581" width="0.3915%" height="15" fill="rgb(208,211,9)" fg:x="862" fg:w="5"/><text x="67.7520%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.39%)</title><rect x="67.5020%" y="565" width="0.3915%" height="15" fill="rgb(239,39,32)" fg:x="862" fg:w="5"/><text x="67.7520%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="67.5020%" y="549" width="0.3915%" height="15" fill="rgb(254,179,26)" fg:x="862" fg:w="5"/><text x="67.7520%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="67.6586%" y="533" width="0.2349%" height="15" fill="rgb(249,165,28)" fg:x="864" fg:w="3"/><text x="67.9086%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="67.6586%" y="517" width="0.2349%" height="15" fill="rgb(225,59,50)" fg:x="864" fg:w="3"/><text x="67.9086%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="67.6586%" y="501" width="0.2349%" height="15" fill="rgb(209,122,5)" fg:x="864" fg:w="3"/><text x="67.9086%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="67.6586%" y="485" width="0.2349%" height="15" fill="rgb(214,65,34)" fg:x="864" fg:w="3"/><text x="67.9086%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="67.7369%" y="469" width="0.1566%" height="15" fill="rgb(249,183,32)" fg:x="865" fg:w="2"/><text x="67.9869%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.7369%" y="453" width="0.1566%" height="15" fill="rgb(218,122,24)" fg:x="865" fg:w="2"/><text x="67.9869%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="67.7369%" y="437" width="0.1566%" height="15" fill="rgb(224,109,18)" fg:x="865" fg:w="2"/><text x="67.9869%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.7369%" y="421" width="0.1566%" height="15" fill="rgb(210,68,50)" fg:x="865" fg:w="2"/><text x="67.9869%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.8152%" y="405" width="0.0783%" height="15" fill="rgb(212,184,34)" fg:x="866" fg:w="1"/><text x="68.0652%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.8152%" y="389" width="0.0783%" height="15" fill="rgb(238,105,48)" fg:x="866" fg:w="1"/><text x="68.0652%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.8152%" y="373" width="0.0783%" height="15" fill="rgb(222,134,54)" fg:x="866" fg:w="1"/><text x="68.0652%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.0501%" y="581" width="0.0783%" height="15" fill="rgb(246,24,43)" fg:x="869" fg:w="1"/><text x="68.3001%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.0501%" y="565" width="0.0783%" height="15" fill="rgb(227,169,22)" fg:x="869" fg:w="1"/><text x="68.3001%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="68.2067%" y="549" width="0.0783%" height="15" fill="rgb(253,152,4)" fg:x="871" fg:w="1"/><text x="68.4567%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.2067%" y="533" width="0.0783%" height="15" fill="rgb(219,158,36)" fg:x="871" fg:w="1"/><text x="68.4567%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (6 samples, 0.47%)</title><rect x="67.8935%" y="645" width="0.4699%" height="15" fill="rgb(251,128,40)" fg:x="867" fg:w="6"/><text x="68.1435%" y="655.50"></text></g><g><title>engine::users::model::username_to_key (6 samples, 0.47%)</title><rect x="67.8935%" y="629" width="0.4699%" height="15" fill="rgb(254,101,39)" fg:x="867" fg:w="6"/><text x="68.1435%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.47%)</title><rect x="67.8935%" y="613" width="0.4699%" height="15" fill="rgb(221,168,40)" fg:x="867" fg:w="6"/><text x="68.1435%" y="623.50"></text></g><g><title>kernel::model::Entity::load_scope (5 samples, 0.39%)</title><rect x="67.9718%" y="597" width="0.3915%" height="15" fill="rgb(221,14,27)" fg:x="868" fg:w="5"/><text x="68.2218%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="68.1284%" y="581" width="0.2349%" height="15" fill="rgb(207,36,43)" fg:x="870" fg:w="3"/><text x="68.3784%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="68.1284%" y="565" width="0.2349%" height="15" fill="rgb(240,172,53)" fg:x="870" fg:w="3"/><text x="68.3784%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="68.2850%" y="549" width="0.0783%" height="15" fill="rgb(241,138,43)" fg:x="872" fg:w="1"/><text x="68.5350%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.2850%" y="533" width="0.0783%" height="15" fill="rgb(227,78,19)" fg:x="872" fg:w="1"/><text x="68.5350%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::DomainError&gt; (1 samples, 0.08%)</title><rect x="68.3634%" y="645" width="0.0783%" height="15" fill="rgb(215,127,44)" fg:x="873" fg:w="1"/><text x="68.6134%" y="655.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (365 samples, 28.58%)</title><rect x="39.9374%" y="693" width="28.5826%" height="15" fill="rgb(227,13,10)" fg:x="510" fg:w="365"/><text x="40.1874%" y="703.50">&lt;plugins_core::carrying::CarryingPlugin as ker..</text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (364 samples, 28.50%)</title><rect x="40.0157%" y="677" width="28.5043%" height="15" fill="rgb(249,177,6)" fg:x="511" fg:w="364"/><text x="40.2657%" y="687.50">&lt;engine::perform::StandardPerformer as kernel:..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (20 samples, 1.57%)</title><rect x="66.9538%" y="661" width="1.5662%" height="15" fill="rgb(215,154,26)" fg:x="855" fg:w="20"/><text x="67.2038%" y="671.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="68.4417%" y="645" width="0.0783%" height="15" fill="rgb(250,168,20)" fg:x="874" fg:w="1"/><text x="68.6917%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="68.4417%" y="629" width="0.0783%" height="15" fill="rgb(222,53,38)" fg:x="874" fg:w="1"/><text x="68.6917%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="68.4417%" y="613" width="0.0783%" height="15" fill="rgb(245,154,5)" fg:x="874" fg:w="1"/><text x="68.6917%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="68.4417%" y="597" width="0.0783%" height="15" fill="rgb(214,89,50)" fg:x="874" fg:w="1"/><text x="68.6917%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="68.4417%" y="581" width="0.0783%" height="15" fill="rgb(232,73,14)" fg:x="874" fg:w="1"/><text x="68.6917%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="68.4417%" y="565" width="0.0783%" height="15" fill="rgb(230,101,20)" fg:x="874" fg:w="1"/><text x="68.6917%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="68.4417%" y="549" width="0.0783%" height="15" fill="rgb(208,56,28)" fg:x="874" fg:w="1"/><text x="68.6917%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="68.4417%" y="533" width="0.0783%" height="15" fill="rgb(247,205,22)" fg:x="874" fg:w="1"/><text x="68.6917%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="68.4417%" y="517" width="0.0783%" height="15" fill="rgb(252,109,51)" fg:x="874" fg:w="1"/><text x="68.6917%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="68.4417%" y="501" width="0.0783%" height="15" fill="rgb(220,40,24)" fg:x="874" fg:w="1"/><text x="68.6917%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="68.4417%" y="485" width="0.0783%" height="15" fill="rgb(251,108,7)" fg:x="874" fg:w="1"/><text x="68.6917%" y="495.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="68.4417%" y="469" width="0.0783%" height="15" fill="rgb(238,102,51)" fg:x="874" fg:w="1"/><text x="68.6917%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="68.4417%" y="453" width="0.0783%" height="15" fill="rgb(219,149,34)" fg:x="874" fg:w="1"/><text x="68.6917%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="68.4417%" y="437" width="0.0783%" height="15" fill="rgb(239,70,0)" fg:x="874" fg:w="1"/><text x="68.6917%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="68.4417%" y="421" width="0.0783%" height="15" fill="rgb(246,214,23)" fg:x="874" fg:w="1"/><text x="68.6917%" y="431.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="68.4417%" y="405" width="0.0783%" height="15" fill="rgb(239,221,51)" fg:x="874" fg:w="1"/><text x="68.6917%" y="415.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="68.4417%" y="389" width="0.0783%" height="15" fill="rgb(254,62,14)" fg:x="874" fg:w="1"/><text x="68.6917%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="68.4417%" y="373" width="0.0783%" height="15" fill="rgb(253,57,33)" fg:x="874" fg:w="1"/><text x="68.6917%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="68.4417%" y="357" width="0.0783%" height="15" fill="rgb(229,34,6)" fg:x="874" fg:w="1"/><text x="68.6917%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="68.4417%" y="341" width="0.0783%" height="15" fill="rgb(235,191,23)" fg:x="874" fg:w="1"/><text x="68.6917%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="68.4417%" y="325" width="0.0783%" height="15" fill="rgb(217,207,27)" fg:x="874" fg:w="1"/><text x="68.6917%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="68.4417%" y="309" width="0.0783%" height="15" fill="rgb(232,41,44)" fg:x="874" fg:w="1"/><text x="68.6917%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="68.4417%" y="293" width="0.0783%" height="15" fill="rgb(221,188,19)" fg:x="874" fg:w="1"/><text x="68.6917%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="68.4417%" y="277" width="0.0783%" height="15" fill="rgb(245,180,45)" fg:x="874" fg:w="1"/><text x="68.6917%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="68.4417%" y="261" width="0.0783%" height="15" fill="rgb(250,220,42)" fg:x="874" fg:w="1"/><text x="68.6917%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="68.4417%" y="245" width="0.0783%" height="15" fill="rgb(234,16,34)" fg:x="874" fg:w="1"/><text x="68.6917%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="68.4417%" y="229" width="0.0783%" height="15" fill="rgb(233,217,23)" fg:x="874" fg:w="1"/><text x="68.6917%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="68.4417%" y="213" width="0.0783%" height="15" fill="rgb(209,22,46)" fg:x="874" fg:w="1"/><text x="68.6917%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="68.4417%" y="197" width="0.0783%" height="15" fill="rgb(213,101,18)" fg:x="874" fg:w="1"/><text x="68.6917%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="68.4417%" y="181" width="0.0783%" height="15" fill="rgb(215,179,52)" fg:x="874" fg:w="1"/><text x="68.6917%" y="191.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="68.4417%" y="165" width="0.0783%" height="15" fill="rgb(223,50,25)" fg:x="874" fg:w="1"/><text x="68.6917%" y="175.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="68.4417%" y="149" width="0.0783%" height="15" fill="rgb(224,51,44)" fg:x="874" fg:w="1"/><text x="68.6917%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (876 samples, 68.60%)</title><rect x="0.0000%" y="837" width="68.5983%" height="15" fill="rgb(224,13,54)" fg:x="0" fg:w="876"/><text x="0.2500%" y="847.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (876 samples, 68.60%)</title><rect x="0.0000%" y="821" width="68.5983%" height="15" fill="rgb(219,58,47)" fg:x="0" fg:w="876"/><text x="0.2500%" y="831.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (876 samples, 68.60%)</title><rect x="0.0000%" y="805" width="68.5983%" height="15" fill="rgb(246,124,34)" fg:x="0" fg:w="876"/><text x="0.2500%" y="815.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (368 samples, 28.82%)</title><rect x="39.7807%" y="789" width="28.8175%" height="15" fill="rgb(245,109,25)" fg:x="508" fg:w="368"/><text x="40.0307%" y="799.50">engine::session::Session::evaluate_and_perform</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (367 samples, 28.74%)</title><rect x="39.8590%" y="773" width="28.7392%" height="15" fill="rgb(235,48,23)" fg:x="509" fg:w="367"/><text x="40.1090%" y="783.50">engine::perform::StandardPerformer::evaluate_a..</text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (367 samples, 28.74%)</title><rect x="39.8590%" y="757" width="28.7392%" height="15" fill="rgb(229,203,36)" fg:x="509" fg:w="367"/><text x="40.1090%" y="767.50">&lt;kernel::plugins::SessionPlugins as kernel::pl..</text></g><g><title>core::iter::adapters::try_process (367 samples, 28.74%)</title><rect x="39.8590%" y="741" width="28.7392%" height="15" fill="rgb(234,180,9)" fg:x="509" fg:w="367"/><text x="40.1090%" y="751.50">core::iter::adapters::try_process</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (367 samples, 28.74%)</title><rect x="39.8590%" y="725" width="28.7392%" height="15" fill="rgb(228,98,45)" fg:x="509" fg:w="367"/><text x="40.1090%" y="735.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_i..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (366 samples, 28.66%)</title><rect x="39.9374%" y="709" width="28.6609%" height="15" fill="rgb(240,24,36)" fg:x="510" fg:w="366"/><text x="40.1874%" y="719.50">&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as co..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="68.5200%" y="693" width="0.0783%" height="15" fill="rgb(227,154,19)" fg:x="875" fg:w="1"/><text x="68.7700%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.5983%" y="773" width="0.0783%" height="15" fill="rgb(231,2,48)" fg:x="876" fg:w="1"/><text x="68.8483%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.8332%" y="661" width="0.0783%" height="15" fill="rgb(219,216,0)" fg:x="879" fg:w="1"/><text x="69.0832%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.9898%" y="645" width="0.0783%" height="15" fill="rgb(251,88,0)" fg:x="881" fg:w="1"/><text x="69.2398%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.0681%" y="645" width="0.0783%" height="15" fill="rgb(242,45,45)" fg:x="882" fg:w="1"/><text x="69.3181%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.0681%" y="629" width="0.0783%" height="15" fill="rgb(218,149,45)" fg:x="882" fg:w="1"/><text x="69.3181%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.47%)</title><rect x="68.7549%" y="709" width="0.4699%" height="15" fill="rgb(247,194,10)" fg:x="878" fg:w="6"/><text x="69.0049%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="68.8332%" y="693" width="0.3915%" height="15" fill="rgb(234,33,37)" fg:x="879" fg:w="5"/><text x="69.0832%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.39%)</title><rect x="68.8332%" y="677" width="0.3915%" height="15" fill="rgb(218,61,13)" fg:x="879" fg:w="5"/><text x="69.0832%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="68.9115%" y="661" width="0.3132%" height="15" fill="rgb(210,80,52)" fg:x="880" fg:w="4"/><text x="69.1615%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.1464%" y="645" width="0.0783%" height="15" fill="rgb(218,203,27)" fg:x="883" fg:w="1"/><text x="69.3964%" y="655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.78%)</title><rect x="68.5983%" y="789" width="0.7831%" height="15" fill="rgb(209,126,33)" fg:x="876" fg:w="10"/><text x="68.8483%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (9 samples, 0.70%)</title><rect x="68.6766%" y="773" width="0.7048%" height="15" fill="rgb(234,173,41)" fg:x="877" fg:w="9"/><text x="68.9266%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.70%)</title><rect x="68.6766%" y="757" width="0.7048%" height="15" fill="rgb(228,166,9)" fg:x="877" fg:w="9"/><text x="68.9266%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (9 samples, 0.70%)</title><rect x="68.6766%" y="741" width="0.7048%" height="15" fill="rgb(208,124,43)" fg:x="877" fg:w="9"/><text x="68.9266%" y="751.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.70%)</title><rect x="68.6766%" y="725" width="0.7048%" height="15" fill="rgb(212,154,38)" fg:x="877" fg:w="9"/><text x="68.9266%" y="735.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="69.2247%" y="709" width="0.1566%" height="15" fill="rgb(246,179,35)" fg:x="884" fg:w="2"/><text x="69.4747%" y="719.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorageFactory as engine::storage::EntityStorageFactory&gt;::create_storage (1 samples, 0.08%)</title><rect x="69.3814%" y="773" width="0.0783%" height="15" fill="rgb(251,3,50)" fg:x="886" fg:w="1"/><text x="69.6314%" y="783.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.3814%" y="757" width="0.0783%" height="15" fill="rgb(219,96,8)" fg:x="886" fg:w="1"/><text x="69.6314%" y="767.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="69.5380%" y="725" width="0.0783%" height="15" fill="rgb(251,216,33)" fg:x="888" fg:w="1"/><text x="69.7880%" y="735.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.6946%" y="629" width="0.0783%" height="15" fill="rgb(243,145,29)" fg:x="890" fg:w="1"/><text x="69.9446%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.6946%" y="613" width="0.0783%" height="15" fill="rgb(210,75,20)" fg:x="890" fg:w="1"/><text x="69.9446%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.6946%" y="597" width="0.0783%" height="15" fill="rgb(235,56,8)" fg:x="890" fg:w="1"/><text x="69.9446%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="69.6946%" y="581" width="0.0783%" height="15" fill="rgb(226,175,49)" fg:x="890" fg:w="1"/><text x="69.9446%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.6946%" y="565" width="0.0783%" height="15" fill="rgb(242,204,23)" fg:x="890" fg:w="1"/><text x="69.9446%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.8512%" y="565" width="0.0783%" height="15" fill="rgb(225,104,24)" fg:x="892" fg:w="1"/><text x="70.1012%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.8512%" y="549" width="0.0783%" height="15" fill="rgb(253,34,1)" fg:x="892" fg:w="1"/><text x="70.1012%" y="559.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="69.8512%" y="597" width="0.1566%" height="15" fill="rgb(233,199,23)" fg:x="892" fg:w="2"/><text x="70.1012%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.8512%" y="581" width="0.1566%" height="15" fill="rgb(247,7,51)" fg:x="892" fg:w="2"/><text x="70.1012%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.9295%" y="565" width="0.0783%" height="15" fill="rgb(214,146,12)" fg:x="893" fg:w="1"/><text x="70.1795%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.9295%" y="549" width="0.0783%" height="15" fill="rgb(234,181,43)" fg:x="893" fg:w="1"/><text x="70.1795%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.9295%" y="533" width="0.0783%" height="15" fill="rgb(239,148,6)" fg:x="893" fg:w="1"/><text x="70.1795%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.9295%" y="517" width="0.0783%" height="15" fill="rgb(206,151,17)" fg:x="893" fg:w="1"/><text x="70.1795%" y="527.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (6 samples, 0.47%)</title><rect x="69.6163%" y="693" width="0.4699%" height="15" fill="rgb(213,215,10)" fg:x="889" fg:w="6"/><text x="69.8663%" y="703.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (6 samples, 0.47%)</title><rect x="69.6163%" y="677" width="0.4699%" height="15" fill="rgb(215,220,44)" fg:x="889" fg:w="6"/><text x="69.8663%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.47%)</title><rect x="69.6163%" y="661" width="0.4699%" height="15" fill="rgb(245,205,37)" fg:x="889" fg:w="6"/><text x="69.8663%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.47%)</title><rect x="69.6163%" y="645" width="0.4699%" height="15" fill="rgb(245,130,43)" fg:x="889" fg:w="6"/><text x="69.8663%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="69.7729%" y="629" width="0.3132%" height="15" fill="rgb(231,227,38)" fg:x="891" fg:w="4"/><text x="70.0229%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="69.7729%" y="613" width="0.3132%" height="15" fill="rgb(233,185,4)" fg:x="891" fg:w="4"/><text x="70.0229%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="70.0078%" y="597" width="0.0783%" height="15" fill="rgb(224,154,43)" fg:x="894" fg:w="1"/><text x="70.2578%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (10 samples, 0.78%)</title><rect x="69.4597%" y="757" width="0.7831%" height="15" fill="rgb(235,156,15)" fg:x="887" fg:w="10"/><text x="69.7097%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (10 samples, 0.78%)</title><rect x="69.4597%" y="741" width="0.7831%" height="15" fill="rgb(211,55,43)" fg:x="887" fg:w="10"/><text x="69.7097%" y="751.50"></text></g><g><title>engine::internal::Entities::add_persisted (8 samples, 0.63%)</title><rect x="69.6163%" y="725" width="0.6265%" height="15" fill="rgb(247,149,40)" fg:x="889" fg:w="8"/><text x="69.8663%" y="735.50"></text></g><g><title>kernel::model::deserialize_entity (8 samples, 0.63%)</title><rect x="69.6163%" y="709" width="0.6265%" height="15" fill="rgb(232,171,16)" fg:x="889" fg:w="8"/><text x="69.8663%" y="719.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="70.0861%" y="693" width="0.1566%" height="15" fill="rgb(215,117,49)" fg:x="895" fg:w="2"/><text x="70.3361%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="70.0861%" y="677" width="0.1566%" height="15" fill="rgb(246,194,11)" fg:x="895" fg:w="2"/><text x="70.3361%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="70.0861%" y="661" width="0.1566%" height="15" fill="rgb(242,101,44)" fg:x="895" fg:w="2"/><text x="70.3361%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="70.0861%" y="645" width="0.1566%" height="15" fill="rgb(226,174,6)" fg:x="895" fg:w="2"/><text x="70.3361%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.1644%" y="629" width="0.0783%" height="15" fill="rgb(213,150,20)" fg:x="896" fg:w="1"/><text x="70.4144%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.1644%" y="613" width="0.0783%" height="15" fill="rgb(222,124,42)" fg:x="896" fg:w="1"/><text x="70.4144%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.1644%" y="597" width="0.0783%" height="15" fill="rgb(250,19,47)" fg:x="896" fg:w="1"/><text x="70.4144%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.1644%" y="581" width="0.0783%" height="15" fill="rgb(241,217,19)" fg:x="896" fg:w="1"/><text x="70.4144%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="70.2428%" y="757" width="0.0783%" height="15" fill="rgb(207,210,34)" fg:x="897" fg:w="1"/><text x="70.4928%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="70.2428%" y="741" width="0.0783%" height="15" fill="rgb(244,45,4)" fg:x="897" fg:w="1"/><text x="70.4928%" y="751.50"></text></g><g><title>dlerror (3 samples, 0.23%)</title><rect x="70.3211%" y="709" width="0.2349%" height="15" fill="rgb(252,134,50)" fg:x="898" fg:w="3"/><text x="70.5711%" y="719.50"></text></g><g><title>__asprintf (2 samples, 0.16%)</title><rect x="70.3994%" y="693" width="0.1566%" height="15" fill="rgb(238,74,2)" fg:x="899" fg:w="2"/><text x="70.6494%" y="703.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="70.4777%" y="677" width="0.0783%" height="15" fill="rgb(226,58,46)" fg:x="900" fg:w="1"/><text x="70.7277%" y="687.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (18 samples, 1.41%)</title><rect x="69.3814%" y="789" width="1.4096%" height="15" fill="rgb(232,83,35)" fg:x="886" fg:w="18"/><text x="69.6314%" y="799.50"></text></g><g><title>engine::session::Session::new (17 samples, 1.33%)</title><rect x="69.4597%" y="773" width="1.3312%" height="15" fill="rgb(212,148,47)" fg:x="887" fg:w="17"/><text x="69.7097%" y="783.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (6 samples, 0.47%)</title><rect x="70.3211%" y="757" width="0.4699%" height="15" fill="rgb(235,29,1)" fg:x="898" fg:w="6"/><text x="70.5711%" y="767.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (6 samples, 0.47%)</title><rect x="70.3211%" y="741" width="0.4699%" height="15" fill="rgb(247,55,37)" fg:x="898" fg:w="6"/><text x="70.5711%" y="751.50"></text></g><g><title>libloading::os::unix::Library::open (6 samples, 0.47%)</title><rect x="70.3211%" y="725" width="0.4699%" height="15" fill="rgb(222,48,3)" fg:x="898" fg:w="6"/><text x="70.5711%" y="735.50"></text></g><g><title>dlopen (3 samples, 0.23%)</title><rect x="70.5560%" y="709" width="0.2349%" height="15" fill="rgb(234,21,33)" fg:x="901" fg:w="3"/><text x="70.8060%" y="719.50"></text></g><g><title>_dl_catch_error (3 samples, 0.23%)</title><rect x="70.5560%" y="693" width="0.2349%" height="15" fill="rgb(247,178,53)" fg:x="901" fg:w="3"/><text x="70.8060%" y="703.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.23%)</title><rect x="70.5560%" y="677" width="0.2349%" height="15" fill="rgb(225,75,7)" fg:x="901" fg:w="3"/><text x="70.8060%" y="687.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.23%)</title><rect x="70.5560%" y="661" width="0.2349%" height="15" fill="rgb(219,199,7)" fg:x="901" fg:w="3"/><text x="70.8060%" y="671.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.23%)</title><rect x="70.5560%" y="645" width="0.2349%" height="15" fill="rgb(209,93,42)" fg:x="901" fg:w="3"/><text x="70.8060%" y="655.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7909%" y="773" width="0.0783%" height="15" fill="rgb(240,175,17)" fg:x="904" fg:w="1"/><text x="71.0409%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7909%" y="757" width="0.0783%" height="15" fill="rgb(232,106,7)" fg:x="904" fg:w="1"/><text x="71.0409%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7909%" y="741" width="0.0783%" height="15" fill="rgb(242,106,43)" fg:x="904" fg:w="1"/><text x="71.0409%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.7909%" y="725" width="0.0783%" height="15" fill="rgb(242,61,37)" fg:x="904" fg:w="1"/><text x="71.0409%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.7909%" y="709" width="0.0783%" height="15" fill="rgb(205,72,10)" fg:x="904" fg:w="1"/><text x="71.0409%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.7909%" y="693" width="0.0783%" height="15" fill="rgb(214,184,36)" fg:x="904" fg:w="1"/><text x="71.0409%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.7909%" y="677" width="0.0783%" height="15" fill="rgb(206,107,18)" fg:x="904" fg:w="1"/><text x="71.0409%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.7909%" y="661" width="0.0783%" height="15" fill="rgb(210,75,5)" fg:x="904" fg:w="1"/><text x="71.0409%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.7909%" y="645" width="0.0783%" height="15" fill="rgb(205,3,19)" fg:x="904" fg:w="1"/><text x="71.0409%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.7909%" y="629" width="0.0783%" height="15" fill="rgb(207,181,42)" fg:x="904" fg:w="1"/><text x="71.0409%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.7909%" y="613" width="0.0783%" height="15" fill="rgb(229,179,43)" fg:x="904" fg:w="1"/><text x="71.0409%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.7909%" y="597" width="0.0783%" height="15" fill="rgb(246,95,30)" fg:x="904" fg:w="1"/><text x="71.0409%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.7909%" y="581" width="0.0783%" height="15" fill="rgb(234,144,45)" fg:x="904" fg:w="1"/><text x="71.0409%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="70.8692%" y="773" width="0.0783%" height="15" fill="rgb(250,54,25)" fg:x="905" fg:w="1"/><text x="71.1192%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.8692%" y="757" width="0.0783%" height="15" fill="rgb(215,195,40)" fg:x="905" fg:w="1"/><text x="71.1192%" y="767.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="70.9475%" y="741" width="0.0783%" height="15" fill="rgb(233,188,42)" fg:x="906" fg:w="1"/><text x="71.1975%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="70.9475%" y="725" width="0.0783%" height="15" fill="rgb(247,227,35)" fg:x="906" fg:w="1"/><text x="71.1975%" y="735.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="70.9475%" y="709" width="0.0783%" height="15" fill="rgb(249,124,27)" fg:x="906" fg:w="1"/><text x="71.1975%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="70.9475%" y="693" width="0.0783%" height="15" fill="rgb(219,207,25)" fg:x="906" fg:w="1"/><text x="71.1975%" y="703.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.23%)</title><rect x="71.0258%" y="693" width="0.2349%" height="15" fill="rgb(241,216,47)" fg:x="907" fg:w="3"/><text x="71.2758%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="71.0258%" y="677" width="0.2349%" height="15" fill="rgb(233,82,50)" fg:x="907" fg:w="3"/><text x="71.2758%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="71.1042%" y="661" width="0.1566%" height="15" fill="rgb(232,63,2)" fg:x="908" fg:w="2"/><text x="71.3542%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="71.1042%" y="645" width="0.1566%" height="15" fill="rgb(236,184,28)" fg:x="908" fg:w="2"/><text x="71.3542%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="71.1042%" y="629" width="0.1566%" height="15" fill="rgb(254,63,27)" fg:x="908" fg:w="2"/><text x="71.3542%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="71.1825%" y="613" width="0.0783%" height="15" fill="rgb(253,106,28)" fg:x="909" fg:w="1"/><text x="71.4325%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="71.1825%" y="597" width="0.0783%" height="15" fill="rgb(225,141,39)" fg:x="909" fg:w="1"/><text x="71.4325%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="71.1825%" y="581" width="0.0783%" height="15" fill="rgb(222,157,20)" fg:x="909" fg:w="1"/><text x="71.4325%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="71.3391%" y="677" width="0.0783%" height="15" fill="rgb(210,190,9)" fg:x="911" fg:w="1"/><text x="71.5891%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="71.4174%" y="677" width="0.1566%" height="15" fill="rgb(242,167,7)" fg:x="912" fg:w="2"/><text x="71.6674%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="71.4174%" y="661" width="0.1566%" height="15" fill="rgb(227,82,41)" fg:x="912" fg:w="2"/><text x="71.6674%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="71.4174%" y="645" width="0.1566%" height="15" fill="rgb(222,131,13)" fg:x="912" fg:w="2"/><text x="71.6674%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="71.4174%" y="629" width="0.1566%" height="15" fill="rgb(221,98,26)" fg:x="912" fg:w="2"/><text x="71.6674%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="71.4174%" y="613" width="0.1566%" height="15" fill="rgb(251,63,52)" fg:x="912" fg:w="2"/><text x="71.6674%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="71.4174%" y="597" width="0.1566%" height="15" fill="rgb(246,25,43)" fg:x="912" fg:w="2"/><text x="71.6674%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="71.4957%" y="581" width="0.0783%" height="15" fill="rgb(247,167,15)" fg:x="913" fg:w="1"/><text x="71.7457%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="71.5740%" y="661" width="0.0783%" height="15" fill="rgb(240,104,42)" fg:x="914" fg:w="1"/><text x="71.8240%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="71.5740%" y="645" width="0.0783%" height="15" fill="rgb(224,54,6)" fg:x="914" fg:w="1"/><text x="71.8240%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="71.5740%" y="629" width="0.0783%" height="15" fill="rgb(244,108,35)" fg:x="914" fg:w="1"/><text x="71.8240%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="71.5740%" y="613" width="0.0783%" height="15" fill="rgb(216,154,2)" fg:x="914" fg:w="1"/><text x="71.8240%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="71.5740%" y="597" width="0.0783%" height="15" fill="rgb(222,8,47)" fg:x="914" fg:w="1"/><text x="71.8240%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="71.5740%" y="581" width="0.0783%" height="15" fill="rgb(252,93,1)" fg:x="914" fg:w="1"/><text x="71.8240%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="71.6523%" y="661" width="0.1566%" height="15" fill="rgb(223,226,51)" fg:x="915" fg:w="2"/><text x="71.9023%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="71.7306%" y="645" width="0.0783%" height="15" fill="rgb(206,147,9)" fg:x="916" fg:w="1"/><text x="71.9806%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="71.7306%" y="629" width="0.0783%" height="15" fill="rgb(248,180,41)" fg:x="916" fg:w="1"/><text x="71.9806%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.7306%" y="613" width="0.0783%" height="15" fill="rgb(209,47,50)" fg:x="916" fg:w="1"/><text x="71.9806%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="71.8089%" y="645" width="0.0783%" height="15" fill="rgb(243,65,31)" fg:x="917" fg:w="1"/><text x="72.0589%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="71.8872%" y="629" width="0.0783%" height="15" fill="rgb(228,128,1)" fg:x="918" fg:w="1"/><text x="72.1372%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="71.8872%" y="613" width="0.0783%" height="15" fill="rgb(231,192,16)" fg:x="918" fg:w="1"/><text x="72.1372%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.23%)</title><rect x="71.8872%" y="645" width="0.2349%" height="15" fill="rgb(224,26,40)" fg:x="918" fg:w="3"/><text x="72.1372%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="71.9655%" y="629" width="0.1566%" height="15" fill="rgb(214,192,17)" fg:x="919" fg:w="2"/><text x="72.2155%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.0439%" y="613" width="0.0783%" height="15" fill="rgb(225,147,18)" fg:x="920" fg:w="1"/><text x="72.2939%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.0439%" y="597" width="0.0783%" height="15" fill="rgb(205,35,11)" fg:x="920" fg:w="1"/><text x="72.2939%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.0439%" y="581" width="0.0783%" height="15" fill="rgb(242,40,42)" fg:x="920" fg:w="1"/><text x="72.2939%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.39%)</title><rect x="71.8089%" y="661" width="0.3915%" height="15" fill="rgb(250,170,13)" fg:x="917" fg:w="5"/><text x="72.0589%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.1222%" y="645" width="0.0783%" height="15" fill="rgb(240,161,28)" fg:x="921" fg:w="1"/><text x="72.3722%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.1222%" y="629" width="0.0783%" height="15" fill="rgb(245,179,12)" fg:x="921" fg:w="1"/><text x="72.3722%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.1222%" y="613" width="0.0783%" height="15" fill="rgb(250,92,32)" fg:x="921" fg:w="1"/><text x="72.3722%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.78%)</title><rect x="71.5740%" y="677" width="0.7831%" height="15" fill="rgb(233,10,40)" fg:x="914" fg:w="10"/><text x="71.8240%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="72.2005%" y="661" width="0.1566%" height="15" fill="rgb(217,98,1)" fg:x="922" fg:w="2"/><text x="72.4505%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.2788%" y="645" width="0.0783%" height="15" fill="rgb(238,202,7)" fg:x="923" fg:w="1"/><text x="72.5288%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.2788%" y="629" width="0.0783%" height="15" fill="rgb(222,91,3)" fg:x="923" fg:w="1"/><text x="72.5288%" y="639.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (18 samples, 1.41%)</title><rect x="71.0258%" y="709" width="1.4096%" height="15" fill="rgb(211,170,49)" fg:x="907" fg:w="18"/><text x="71.2758%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.17%)</title><rect x="71.2608%" y="693" width="1.1746%" height="15" fill="rgb(253,139,18)" fg:x="910" fg:w="15"/><text x="71.5108%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.3571%" y="677" width="0.0783%" height="15" fill="rgb(222,4,43)" fg:x="924" fg:w="1"/><text x="72.6071%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.3571%" y="661" width="0.0783%" height="15" fill="rgb(207,205,12)" fg:x="924" fg:w="1"/><text x="72.6071%" y="671.50"></text></g><g><title>__libc_free (3 samples, 0.23%)</title><rect x="72.6703%" y="629" width="0.2349%" height="15" fill="rgb(216,159,46)" fg:x="928" fg:w="3"/><text x="72.9203%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.63%)</title><rect x="72.4354%" y="709" width="0.6265%" height="15" fill="rgb(236,115,1)" fg:x="925" fg:w="8"/><text x="72.6854%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.63%)</title><rect x="72.4354%" y="693" width="0.6265%" height="15" fill="rgb(251,35,33)" fg:x="925" fg:w="8"/><text x="72.6854%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.63%)</title><rect x="72.4354%" y="677" width="0.6265%" height="15" fill="rgb(248,62,51)" fg:x="925" fg:w="8"/><text x="72.6854%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.55%)</title><rect x="72.5137%" y="661" width="0.5482%" height="15" fill="rgb(254,180,19)" fg:x="926" fg:w="7"/><text x="72.7637%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="72.5920%" y="645" width="0.4699%" height="15" fill="rgb(217,100,32)" fg:x="927" fg:w="6"/><text x="72.8420%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="72.9052%" y="629" width="0.1566%" height="15" fill="rgb(224,71,22)" fg:x="931" fg:w="2"/><text x="73.1552%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.9836%" y="613" width="0.0783%" height="15" fill="rgb(251,185,33)" fg:x="932" fg:w="1"/><text x="73.2336%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.1402%" y="661" width="0.0783%" height="15" fill="rgb(209,75,48)" fg:x="934" fg:w="1"/><text x="73.3902%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.1402%" y="645" width="0.0783%" height="15" fill="rgb(253,190,16)" fg:x="934" fg:w="1"/><text x="73.3902%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="73.1402%" y="629" width="0.0783%" height="15" fill="rgb(226,140,1)" fg:x="934" fg:w="1"/><text x="73.3902%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="73.2185%" y="661" width="0.0783%" height="15" fill="rgb(206,75,30)" fg:x="935" fg:w="1"/><text x="73.4685%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="73.2185%" y="645" width="0.0783%" height="15" fill="rgb(231,208,37)" fg:x="935" fg:w="1"/><text x="73.4685%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="73.2185%" y="629" width="0.0783%" height="15" fill="rgb(238,136,40)" fg:x="935" fg:w="1"/><text x="73.4685%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="73.2185%" y="613" width="0.0783%" height="15" fill="rgb(247,137,17)" fg:x="935" fg:w="1"/><text x="73.4685%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="73.2185%" y="597" width="0.0783%" height="15" fill="rgb(240,60,40)" fg:x="935" fg:w="1"/><text x="73.4685%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="73.2185%" y="581" width="0.0783%" height="15" fill="rgb(236,68,50)" fg:x="935" fg:w="1"/><text x="73.4685%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="73.2185%" y="565" width="0.0783%" height="15" fill="rgb(230,42,12)" fg:x="935" fg:w="1"/><text x="73.4685%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="73.2185%" y="549" width="0.0783%" height="15" fill="rgb(219,16,16)" fg:x="935" fg:w="1"/><text x="73.4685%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="73.2968%" y="661" width="0.0783%" height="15" fill="rgb(220,38,35)" fg:x="936" fg:w="1"/><text x="73.5468%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.3751%" y="645" width="0.0783%" height="15" fill="rgb(228,33,1)" fg:x="937" fg:w="1"/><text x="73.6251%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.3751%" y="629" width="0.0783%" height="15" fill="rgb(241,46,31)" fg:x="937" fg:w="1"/><text x="73.6251%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.3751%" y="613" width="0.0783%" height="15" fill="rgb(232,58,20)" fg:x="937" fg:w="1"/><text x="73.6251%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="73.4534%" y="613" width="0.0783%" height="15" fill="rgb(206,228,53)" fg:x="938" fg:w="1"/><text x="73.7034%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="73.4534%" y="597" width="0.0783%" height="15" fill="rgb(206,88,33)" fg:x="938" fg:w="1"/><text x="73.7034%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.4534%" y="581" width="0.0783%" height="15" fill="rgb(238,69,7)" fg:x="938" fg:w="1"/><text x="73.7034%" y="591.50"></text></g><g><title>engine::session::Session::flush (36 samples, 2.82%)</title><rect x="70.9475%" y="773" width="2.8191%" height="15" fill="rgb(250,21,46)" fg:x="906" fg:w="36"/><text x="71.1975%" y="783.50">en..</text></g><g><title>engine::session::Session::save_entity_changes (36 samples, 2.82%)</title><rect x="70.9475%" y="757" width="2.8191%" height="15" fill="rgb(215,212,21)" fg:x="906" fg:w="36"/><text x="71.1975%" y="767.50">en..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (35 samples, 2.74%)</title><rect x="71.0258%" y="741" width="2.7408%" height="15" fill="rgb(211,35,12)" fg:x="907" fg:w="35"/><text x="71.2758%" y="751.50">en..</text></g><g><title>engine::session::SavesEntities::check_for_changes (35 samples, 2.74%)</title><rect x="71.0258%" y="725" width="2.7408%" height="15" fill="rgb(231,184,16)" fg:x="907" fg:w="35"/><text x="71.2758%" y="735.50">en..</text></g><g><title>kernel::compare::any_entity_changes (9 samples, 0.70%)</title><rect x="73.0619%" y="709" width="0.7048%" height="15" fill="rgb(242,140,15)" fg:x="933" fg:w="9"/><text x="73.3119%" y="719.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (9 samples, 0.70%)</title><rect x="73.0619%" y="693" width="0.7048%" height="15" fill="rgb(220,37,14)" fg:x="933" fg:w="9"/><text x="73.3119%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.70%)</title><rect x="73.0619%" y="677" width="0.7048%" height="15" fill="rgb(223,146,22)" fg:x="933" fg:w="9"/><text x="73.3119%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.39%)</title><rect x="73.3751%" y="661" width="0.3915%" height="15" fill="rgb(216,132,15)" fg:x="937" fg:w="5"/><text x="73.6251%" y="671.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (4 samples, 0.31%)</title><rect x="73.4534%" y="645" width="0.3132%" height="15" fill="rgb(248,83,5)" fg:x="938" fg:w="4"/><text x="73.7034%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="73.4534%" y="629" width="0.3132%" height="15" fill="rgb(231,206,48)" fg:x="938" fg:w="4"/><text x="73.7034%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.23%)</title><rect x="73.5317%" y="613" width="0.2349%" height="15" fill="rgb(253,185,37)" fg:x="939" fg:w="3"/><text x="73.7817%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.23%)</title><rect x="73.5317%" y="597" width="0.2349%" height="15" fill="rgb(208,21,44)" fg:x="939" fg:w="3"/><text x="73.7817%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="73.6100%" y="581" width="0.1566%" height="15" fill="rgb(236,125,4)" fg:x="940" fg:w="2"/><text x="73.8600%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="73.6100%" y="565" width="0.1566%" height="15" fill="rgb(226,134,25)" fg:x="940" fg:w="2"/><text x="73.8600%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.6883%" y="549" width="0.0783%" height="15" fill="rgb(250,201,12)" fg:x="941" fg:w="1"/><text x="73.9383%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="73.7666%" y="773" width="0.0783%" height="15" fill="rgb(225,92,18)" fg:x="942" fg:w="1"/><text x="74.0166%" y="783.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="73.8449%" y="773" width="0.0783%" height="15" fill="rgb(227,35,22)" fg:x="943" fg:w="1"/><text x="74.0949%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="73.8449%" y="757" width="0.0783%" height="15" fill="rgb(214,180,52)" fg:x="943" fg:w="1"/><text x="74.0949%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="73.8449%" y="741" width="0.0783%" height="15" fill="rgb(233,55,38)" fg:x="943" fg:w="1"/><text x="74.0949%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.8449%" y="725" width="0.0783%" height="15" fill="rgb(249,171,43)" fg:x="943" fg:w="1"/><text x="74.0949%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.8449%" y="709" width="0.0783%" height="15" fill="rgb(239,87,2)" fg:x="943" fg:w="1"/><text x="74.0949%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.8449%" y="693" width="0.0783%" height="15" fill="rgb(248,141,5)" fg:x="943" fg:w="1"/><text x="74.0949%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.8449%" y="677" width="0.0783%" height="15" fill="rgb(238,33,42)" fg:x="943" fg:w="1"/><text x="74.0949%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.8449%" y="661" width="0.0783%" height="15" fill="rgb(231,57,19)" fg:x="943" fg:w="1"/><text x="74.0949%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.8449%" y="645" width="0.0783%" height="15" fill="rgb(214,78,53)" fg:x="943" fg:w="1"/><text x="74.0949%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.8449%" y="629" width="0.0783%" height="15" fill="rgb(206,132,29)" fg:x="943" fg:w="1"/><text x="74.0949%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.8449%" y="613" width="0.0783%" height="15" fill="rgb(248,174,31)" fg:x="943" fg:w="1"/><text x="74.0949%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.8449%" y="597" width="0.0783%" height="15" fill="rgb(221,87,13)" fg:x="943" fg:w="1"/><text x="74.0949%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.8449%" y="581" width="0.0783%" height="15" fill="rgb(223,197,17)" fg:x="943" fg:w="1"/><text x="74.0949%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.8449%" y="565" width="0.0783%" height="15" fill="rgb(220,144,50)" fg:x="943" fg:w="1"/><text x="74.0949%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.8449%" y="549" width="0.0783%" height="15" fill="rgb(244,201,11)" fg:x="943" fg:w="1"/><text x="74.0949%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="74.0799%" y="757" width="0.0783%" height="15" fill="rgb(249,81,34)" fg:x="946" fg:w="1"/><text x="74.3299%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="74.0799%" y="741" width="0.0783%" height="15" fill="rgb(205,161,12)" fg:x="946" fg:w="1"/><text x="74.3299%" y="751.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="74.0799%" y="725" width="0.0783%" height="15" fill="rgb(252,139,50)" fg:x="946" fg:w="1"/><text x="74.3299%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="74.0799%" y="709" width="0.0783%" height="15" fill="rgb(205,169,14)" fg:x="946" fg:w="1"/><text x="74.3299%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="74.1582%" y="725" width="0.0783%" height="15" fill="rgb(248,198,33)" fg:x="947" fg:w="1"/><text x="74.4082%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="74.1582%" y="709" width="0.0783%" height="15" fill="rgb(236,23,21)" fg:x="947" fg:w="1"/><text x="74.4082%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="74.1582%" y="693" width="0.0783%" height="15" fill="rgb(231,13,38)" fg:x="947" fg:w="1"/><text x="74.4082%" y="703.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="74.1582%" y="677" width="0.0783%" height="15" fill="rgb(239,139,21)" fg:x="947" fg:w="1"/><text x="74.4082%" y="687.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.2365%" y="693" width="0.0783%" height="15" fill="rgb(222,164,45)" fg:x="948" fg:w="1"/><text x="74.4865%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.2365%" y="677" width="0.0783%" height="15" fill="rgb(230,52,27)" fg:x="948" fg:w="1"/><text x="74.4865%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.2365%" y="661" width="0.0783%" height="15" fill="rgb(227,143,42)" fg:x="948" fg:w="1"/><text x="74.4865%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.2365%" y="645" width="0.0783%" height="15" fill="rgb(249,127,1)" fg:x="948" fg:w="1"/><text x="74.4865%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.2365%" y="629" width="0.0783%" height="15" fill="rgb(243,107,26)" fg:x="948" fg:w="1"/><text x="74.4865%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.2365%" y="613" width="0.0783%" height="15" fill="rgb(225,7,45)" fg:x="948" fg:w="1"/><text x="74.4865%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.2365%" y="597" width="0.0783%" height="15" fill="rgb(241,88,38)" fg:x="948" fg:w="1"/><text x="74.4865%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.2365%" y="581" width="0.0783%" height="15" fill="rgb(226,121,9)" fg:x="948" fg:w="1"/><text x="74.4865%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.2365%" y="565" width="0.0783%" height="15" fill="rgb(253,60,29)" fg:x="948" fg:w="1"/><text x="74.4865%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.2365%" y="549" width="0.0783%" height="15" fill="rgb(244,181,39)" fg:x="948" fg:w="1"/><text x="74.4865%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.2365%" y="533" width="0.0783%" height="15" fill="rgb(252,203,31)" fg:x="948" fg:w="1"/><text x="74.4865%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.2365%" y="517" width="0.0783%" height="15" fill="rgb(224,120,8)" fg:x="948" fg:w="1"/><text x="74.4865%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.2365%" y="501" width="0.0783%" height="15" fill="rgb(205,171,54)" fg:x="948" fg:w="1"/><text x="74.4865%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="74.2365%" y="709" width="0.1566%" height="15" fill="rgb(235,89,11)" fg:x="948" fg:w="2"/><text x="74.4865%" y="719.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="74.3148%" y="693" width="0.0783%" height="15" fill="rgb(212,180,28)" fg:x="949" fg:w="1"/><text x="74.5648%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.3148%" y="677" width="0.0783%" height="15" fill="rgb(247,84,49)" fg:x="949" fg:w="1"/><text x="74.5648%" y="687.50"></text></g><g><title>engine::identifiers::model::set_gid (3 samples, 0.23%)</title><rect x="74.2365%" y="725" width="0.2349%" height="15" fill="rgb(236,187,52)" fg:x="948" fg:w="3"/><text x="74.4865%" y="735.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="74.3931%" y="709" width="0.0783%" height="15" fill="rgb(227,24,15)" fg:x="950" fg:w="1"/><text x="74.6431%" y="719.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="74.3931%" y="693" width="0.0783%" height="15" fill="rgb(227,211,13)" fg:x="950" fg:w="1"/><text x="74.6431%" y="703.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="74.3931%" y="677" width="0.0783%" height="15" fill="rgb(245,52,14)" fg:x="950" fg:w="1"/><text x="74.6431%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="74.3931%" y="661" width="0.0783%" height="15" fill="rgb(225,185,13)" fg:x="950" fg:w="1"/><text x="74.6431%" y="671.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="74.3931%" y="645" width="0.0783%" height="15" fill="rgb(217,160,29)" fg:x="950" fg:w="1"/><text x="74.6431%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="74.3931%" y="629" width="0.0783%" height="15" fill="rgb(216,115,53)" fg:x="950" fg:w="1"/><text x="74.6431%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="74.3931%" y="613" width="0.0783%" height="15" fill="rgb(236,99,5)" fg:x="950" fg:w="1"/><text x="74.6431%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="74.3931%" y="597" width="0.0783%" height="15" fill="rgb(222,60,38)" fg:x="950" fg:w="1"/><text x="74.6431%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="74.4714%" y="677" width="0.0783%" height="15" fill="rgb(212,82,22)" fg:x="951" fg:w="1"/><text x="74.7214%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="74.5497%" y="677" width="0.0783%" height="15" fill="rgb(214,48,28)" fg:x="952" fg:w="1"/><text x="74.7997%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="74.5497%" y="661" width="0.0783%" height="15" fill="rgb(245,196,50)" fg:x="952" fg:w="1"/><text x="74.7997%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.5497%" y="645" width="0.0783%" height="15" fill="rgb(225,159,46)" fg:x="952" fg:w="1"/><text x="74.7997%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.5497%" y="629" width="0.0783%" height="15" fill="rgb(207,195,48)" fg:x="952" fg:w="1"/><text x="74.7997%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.5497%" y="613" width="0.0783%" height="15" fill="rgb(240,73,3)" fg:x="952" fg:w="1"/><text x="74.7997%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="74.5497%" y="597" width="0.0783%" height="15" fill="rgb(245,57,23)" fg:x="952" fg:w="1"/><text x="74.7997%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="74.5497%" y="581" width="0.0783%" height="15" fill="rgb(240,75,18)" fg:x="952" fg:w="1"/><text x="74.7997%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="74.5497%" y="565" width="0.0783%" height="15" fill="rgb(238,168,12)" fg:x="952" fg:w="1"/><text x="74.7997%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="74.6280%" y="661" width="0.0783%" height="15" fill="rgb(226,20,40)" fg:x="953" fg:w="1"/><text x="74.8780%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="74.7063%" y="661" width="0.2349%" height="15" fill="rgb(224,130,35)" fg:x="954" fg:w="3"/><text x="74.9563%" y="671.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="74.7063%" y="645" width="0.2349%" height="15" fill="rgb(225,63,41)" fg:x="954" fg:w="3"/><text x="74.9563%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="74.7847%" y="629" width="0.1566%" height="15" fill="rgb(219,3,3)" fg:x="955" fg:w="2"/><text x="75.0347%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.8630%" y="613" width="0.0783%" height="15" fill="rgb(218,157,4)" fg:x="956" fg:w="1"/><text x="75.1130%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="74.9413%" y="645" width="0.0783%" height="15" fill="rgb(232,76,36)" fg:x="957" fg:w="1"/><text x="75.1913%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="74.9413%" y="629" width="0.0783%" height="15" fill="rgb(247,36,0)" fg:x="957" fg:w="1"/><text x="75.1913%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="74.9413%" y="613" width="0.0783%" height="15" fill="rgb(205,2,34)" fg:x="957" fg:w="1"/><text x="75.1913%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.0979%" y="629" width="0.0783%" height="15" fill="rgb(239,136,13)" fg:x="959" fg:w="1"/><text x="75.3479%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.0979%" y="613" width="0.0783%" height="15" fill="rgb(253,122,12)" fg:x="959" fg:w="1"/><text x="75.3479%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.0979%" y="597" width="0.0783%" height="15" fill="rgb(222,174,7)" fg:x="959" fg:w="1"/><text x="75.3479%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.4111%" y="613" width="0.0783%" height="15" fill="rgb(208,191,42)" fg:x="963" fg:w="1"/><text x="75.6611%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.4111%" y="597" width="0.0783%" height="15" fill="rgb(237,212,15)" fg:x="963" fg:w="1"/><text x="75.6611%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.4111%" y="581" width="0.0783%" height="15" fill="rgb(215,65,20)" fg:x="963" fg:w="1"/><text x="75.6611%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.63%)</title><rect x="74.9413%" y="661" width="0.6265%" height="15" fill="rgb(232,103,11)" fg:x="957" fg:w="8"/><text x="75.1913%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.55%)</title><rect x="75.0196%" y="645" width="0.5482%" height="15" fill="rgb(235,148,18)" fg:x="958" fg:w="7"/><text x="75.2696%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.39%)</title><rect x="75.1762%" y="629" width="0.3915%" height="15" fill="rgb(240,173,7)" fg:x="960" fg:w="5"/><text x="75.4262%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.4894%" y="613" width="0.0783%" height="15" fill="rgb(228,182,25)" fg:x="964" fg:w="1"/><text x="75.7394%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.4894%" y="597" width="0.0783%" height="15" fill="rgb(247,3,52)" fg:x="964" fg:w="1"/><text x="75.7394%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.4894%" y="581" width="0.0783%" height="15" fill="rgb(226,155,8)" fg:x="964" fg:w="1"/><text x="75.7394%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (15 samples, 1.17%)</title><rect x="74.4714%" y="693" width="1.1746%" height="15" fill="rgb(243,195,38)" fg:x="951" fg:w="15"/><text x="74.7214%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.02%)</title><rect x="74.6280%" y="677" width="1.0180%" height="15" fill="rgb(254,181,33)" fg:x="953" fg:w="13"/><text x="74.8780%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.5677%" y="661" width="0.0783%" height="15" fill="rgb(232,98,23)" fg:x="965" fg:w="1"/><text x="75.8177%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.6460%" y="645" width="0.0783%" height="15" fill="rgb(205,23,10)" fg:x="966" fg:w="1"/><text x="75.8960%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.8027%" y="629" width="0.0783%" height="15" fill="rgb(212,124,38)" fg:x="968" fg:w="1"/><text x="76.0527%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.8027%" y="613" width="0.0783%" height="15" fill="rgb(228,207,2)" fg:x="968" fg:w="1"/><text x="76.0527%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="75.6460%" y="693" width="0.3915%" height="15" fill="rgb(215,120,22)" fg:x="966" fg:w="5"/><text x="75.8960%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.39%)</title><rect x="75.6460%" y="677" width="0.3915%" height="15" fill="rgb(251,172,33)" fg:x="966" fg:w="5"/><text x="75.8960%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="75.6460%" y="661" width="0.3915%" height="15" fill="rgb(250,83,2)" fg:x="966" fg:w="5"/><text x="75.8960%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="75.7244%" y="645" width="0.3132%" height="15" fill="rgb(210,132,53)" fg:x="967" fg:w="4"/><text x="75.9744%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="75.8810%" y="629" width="0.1566%" height="15" fill="rgb(221,208,36)" fg:x="969" fg:w="2"/><text x="76.1310%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.0376%" y="645" width="0.0783%" height="15" fill="rgb(205,192,46)" fg:x="971" fg:w="1"/><text x="76.2876%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="76.1159%" y="645" width="0.0783%" height="15" fill="rgb(223,163,14)" fg:x="972" fg:w="1"/><text x="76.3659%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.1159%" y="629" width="0.0783%" height="15" fill="rgb(218,41,28)" fg:x="972" fg:w="1"/><text x="76.3659%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.1159%" y="613" width="0.0783%" height="15" fill="rgb(235,104,10)" fg:x="972" fg:w="1"/><text x="76.3659%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="76.1942%" y="645" width="0.0783%" height="15" fill="rgb(246,17,4)" fg:x="973" fg:w="1"/><text x="76.4442%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.2725%" y="613" width="0.0783%" height="15" fill="rgb(240,7,16)" fg:x="974" fg:w="1"/><text x="76.5225%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.2725%" y="597" width="0.0783%" height="15" fill="rgb(213,160,23)" fg:x="974" fg:w="1"/><text x="76.5225%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.2725%" y="581" width="0.0783%" height="15" fill="rgb(251,179,49)" fg:x="974" fg:w="1"/><text x="76.5225%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="76.2725%" y="645" width="0.1566%" height="15" fill="rgb(247,198,10)" fg:x="974" fg:w="2"/><text x="76.5225%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="76.2725%" y="629" width="0.1566%" height="15" fill="rgb(220,65,29)" fg:x="974" fg:w="2"/><text x="76.5225%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="76.3508%" y="613" width="0.0783%" height="15" fill="rgb(237,171,28)" fg:x="975" fg:w="1"/><text x="76.6008%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.3508%" y="597" width="0.0783%" height="15" fill="rgb(228,44,26)" fg:x="975" fg:w="1"/><text x="76.6008%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.4291%" y="629" width="0.0783%" height="15" fill="rgb(216,210,27)" fg:x="976" fg:w="1"/><text x="76.6791%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.5074%" y="629" width="0.0783%" height="15" fill="rgb(252,10,17)" fg:x="977" fg:w="1"/><text x="76.7574%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.5074%" y="613" width="0.0783%" height="15" fill="rgb(214,172,30)" fg:x="977" fg:w="1"/><text x="76.7574%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.5857%" y="597" width="0.0783%" height="15" fill="rgb(253,130,48)" fg:x="978" fg:w="1"/><text x="76.8357%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="76.5857%" y="613" width="0.1566%" height="15" fill="rgb(226,99,43)" fg:x="978" fg:w="2"/><text x="76.8357%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="76.6641%" y="597" width="0.0783%" height="15" fill="rgb(239,111,26)" fg:x="979" fg:w="1"/><text x="76.9141%" y="607.50"></text></g><g><title>kernel::compare::any_entity_changes (10 samples, 0.78%)</title><rect x="76.0376%" y="693" width="0.7831%" height="15" fill="rgb(240,27,53)" fg:x="971" fg:w="10"/><text x="76.2876%" y="703.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (10 samples, 0.78%)</title><rect x="76.0376%" y="677" width="0.7831%" height="15" fill="rgb(254,163,12)" fg:x="971" fg:w="10"/><text x="76.2876%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.78%)</title><rect x="76.0376%" y="661" width="0.7831%" height="15" fill="rgb(225,51,48)" fg:x="971" fg:w="10"/><text x="76.2876%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.39%)</title><rect x="76.4291%" y="645" width="0.3915%" height="15" fill="rgb(205,19,32)" fg:x="976" fg:w="5"/><text x="76.6791%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (3 samples, 0.23%)</title><rect x="76.5857%" y="629" width="0.2349%" height="15" fill="rgb(218,119,26)" fg:x="978" fg:w="3"/><text x="76.8357%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="76.7424%" y="613" width="0.0783%" height="15" fill="rgb(231,173,33)" fg:x="980" fg:w="1"/><text x="76.9924%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.7424%" y="597" width="0.0783%" height="15" fill="rgb(241,100,29)" fg:x="980" fg:w="1"/><text x="76.9924%" y="607.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (31 samples, 2.43%)</title><rect x="74.4714%" y="725" width="2.4276%" height="15" fill="rgb(250,194,34)" fg:x="951" fg:w="31"/><text x="74.7214%" y="735.50">en..</text></g><g><title>engine::session::SavesEntities::check_for_changes (31 samples, 2.43%)</title><rect x="74.4714%" y="709" width="2.4276%" height="15" fill="rgb(215,23,50)" fg:x="951" fg:w="31"/><text x="74.7214%" y="719.50">en..</text></g><g><title>kernel::model::Entity::set_gid (1 samples, 0.08%)</title><rect x="76.8207%" y="693" width="0.0783%" height="15" fill="rgb(206,49,37)" fg:x="981" fg:w="1"/><text x="77.0707%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.8207%" y="677" width="0.0783%" height="15" fill="rgb(247,39,21)" fg:x="981" fg:w="1"/><text x="77.0707%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.8207%" y="661" width="0.0783%" height="15" fill="rgb(209,220,15)" fg:x="981" fg:w="1"/><text x="77.0707%" y="671.50"></text></g><g><title>engine::session::Session::flush (36 samples, 2.82%)</title><rect x="74.1582%" y="757" width="2.8191%" height="15" fill="rgb(206,41,33)" fg:x="947" fg:w="36"/><text x="74.4082%" y="767.50">en..</text></g><g><title>engine::session::Session::save_entity_changes (36 samples, 2.82%)</title><rect x="74.1582%" y="741" width="2.8191%" height="15" fill="rgb(221,225,45)" fg:x="947" fg:w="36"/><text x="74.4082%" y="751.50">en..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="76.8990%" y="725" width="0.0783%" height="15" fill="rgb(216,27,18)" fg:x="982" fg:w="1"/><text x="77.1490%" y="735.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="76.8990%" y="709" width="0.0783%" height="15" fill="rgb(250,193,34)" fg:x="982" fg:w="1"/><text x="77.1490%" y="719.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="76.8990%" y="693" width="0.0783%" height="15" fill="rgb(227,215,20)" fg:x="982" fg:w="1"/><text x="77.1490%" y="703.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="76.8990%" y="677" width="0.0783%" height="15" fill="rgb(242,211,27)" fg:x="982" fg:w="1"/><text x="77.1490%" y="687.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="76.8990%" y="661" width="0.0783%" height="15" fill="rgb(229,190,30)" fg:x="982" fg:w="1"/><text x="77.1490%" y="671.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="76.8990%" y="645" width="0.0783%" height="15" fill="rgb(253,31,29)" fg:x="982" fg:w="1"/><text x="77.1490%" y="655.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="76.8990%" y="629" width="0.0783%" height="15" fill="rgb(229,177,52)" fg:x="982" fg:w="1"/><text x="77.1490%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.39%)</title><rect x="76.9773%" y="741" width="0.3915%" height="15" fill="rgb(226,88,8)" fg:x="983" fg:w="5"/><text x="77.2273%" y="751.50"></text></g><g><title>engine::internal::Entities::add_entity (5 samples, 0.39%)</title><rect x="76.9773%" y="725" width="0.3915%" height="15" fill="rgb(214,55,27)" fg:x="983" fg:w="5"/><text x="77.2273%" y="735.50"></text></g><g><title>engine::internal::EntityMap::add_entity (5 samples, 0.39%)</title><rect x="76.9773%" y="709" width="0.3915%" height="15" fill="rgb(233,202,5)" fg:x="983" fg:w="5"/><text x="77.2273%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.39%)</title><rect x="76.9773%" y="693" width="0.3915%" height="15" fill="rgb(251,49,30)" fg:x="983" fg:w="5"/><text x="77.2273%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.39%)</title><rect x="76.9773%" y="677" width="0.3915%" height="15" fill="rgb(235,18,52)" fg:x="983" fg:w="5"/><text x="77.2273%" y="687.50"></text></g><g><title>__libc_malloc (5 samples, 0.39%)</title><rect x="76.9773%" y="661" width="0.3915%" height="15" fill="rgb(250,111,51)" fg:x="983" fg:w="5"/><text x="77.2273%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.3688%" y="661" width="0.0783%" height="15" fill="rgb(218,13,25)" fg:x="988" fg:w="1"/><text x="77.6188%" y="671.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="77.3688%" y="693" width="0.1566%" height="15" fill="rgb(248,96,7)" fg:x="988" fg:w="2"/><text x="77.6188%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="77.3688%" y="677" width="0.1566%" height="15" fill="rgb(217,31,15)" fg:x="988" fg:w="2"/><text x="77.6188%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.4471%" y="661" width="0.0783%" height="15" fill="rgb(228,59,49)" fg:x="989" fg:w="1"/><text x="77.6971%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.4471%" y="645" width="0.0783%" height="15" fill="rgb(210,152,38)" fg:x="989" fg:w="1"/><text x="77.6971%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.4471%" y="629" width="0.0783%" height="15" fill="rgb(206,71,11)" fg:x="989" fg:w="1"/><text x="77.6971%" y="639.50"></text></g><g><title>plugins_core::build::Build::holding (8 samples, 0.63%)</title><rect x="76.9773%" y="757" width="0.6265%" height="15" fill="rgb(244,199,5)" fg:x="983" fg:w="8"/><text x="77.2273%" y="767.50"></text></g><g><title>plugins_core::tools::set_container (3 samples, 0.23%)</title><rect x="77.3688%" y="741" width="0.2349%" height="15" fill="rgb(253,49,1)" fg:x="988" fg:w="3"/><text x="77.6188%" y="751.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.23%)</title><rect x="77.3688%" y="725" width="0.2349%" height="15" fill="rgb(225,206,40)" fg:x="988" fg:w="3"/><text x="77.6188%" y="735.50"></text></g><g><title>kernel::model::Entity::replace_scope (3 samples, 0.23%)</title><rect x="77.3688%" y="709" width="0.2349%" height="15" fill="rgb(243,116,47)" fg:x="988" fg:w="3"/><text x="77.6188%" y="719.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="77.5255%" y="693" width="0.0783%" height="15" fill="rgb(219,225,16)" fg:x="990" fg:w="1"/><text x="77.7755%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.5255%" y="677" width="0.0783%" height="15" fill="rgb(233,29,47)" fg:x="990" fg:w="1"/><text x="77.7755%" y="687.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="77.5255%" y="661" width="0.0783%" height="15" fill="rgb(250,179,18)" fg:x="990" fg:w="1"/><text x="77.7755%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.5255%" y="645" width="0.0783%" height="15" fill="rgb(215,176,6)" fg:x="990" fg:w="1"/><text x="77.7755%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.5255%" y="629" width="0.0783%" height="15" fill="rgb(214,117,39)" fg:x="990" fg:w="1"/><text x="77.7755%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.5255%" y="613" width="0.0783%" height="15" fill="rgb(247,183,36)" fg:x="990" fg:w="1"/><text x="77.7755%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="77.5255%" y="597" width="0.0783%" height="15" fill="rgb(237,200,3)" fg:x="990" fg:w="1"/><text x="77.7755%" y="607.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="77.6038%" y="757" width="0.0783%" height="15" fill="rgb(212,220,24)" fg:x="991" fg:w="1"/><text x="77.8538%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="77.6038%" y="741" width="0.0783%" height="15" fill="rgb(245,216,20)" fg:x="991" fg:w="1"/><text x="77.8538%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="77.6038%" y="725" width="0.0783%" height="15" fill="rgb(219,124,7)" fg:x="991" fg:w="1"/><text x="77.8538%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="77.6038%" y="709" width="0.0783%" height="15" fill="rgb(227,167,8)" fg:x="991" fg:w="1"/><text x="77.8538%" y="719.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="77.6821%" y="757" width="0.0783%" height="15" fill="rgb(241,37,2)" fg:x="992" fg:w="1"/><text x="77.9321%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="77.6821%" y="741" width="0.0783%" height="15" fill="rgb(238,134,33)" fg:x="992" fg:w="1"/><text x="77.9321%" y="751.50"></text></g><g><title>kernel::model::Entity::new_blank (1 samples, 0.08%)</title><rect x="77.6821%" y="725" width="0.0783%" height="15" fill="rgb(248,48,27)" fg:x="992" fg:w="1"/><text x="77.9321%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="77.6821%" y="709" width="0.0783%" height="15" fill="rgb(212,14,16)" fg:x="992" fg:w="1"/><text x="77.9321%" y="719.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="77.6821%" y="693" width="0.0783%" height="15" fill="rgb(217,205,37)" fg:x="992" fg:w="1"/><text x="77.9321%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="77.6821%" y="677" width="0.0783%" height="15" fill="rgb(233,185,47)" fg:x="992" fg:w="1"/><text x="77.9321%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="77.6821%" y="661" width="0.0783%" height="15" fill="rgb(244,88,8)" fg:x="992" fg:w="1"/><text x="77.9321%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.6821%" y="645" width="0.0783%" height="15" fill="rgb(213,0,20)" fg:x="992" fg:w="1"/><text x="77.9321%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.6821%" y="629" width="0.0783%" height="15" fill="rgb(238,159,36)" fg:x="992" fg:w="1"/><text x="77.9321%" y="639.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="77.6821%" y="613" width="0.0783%" height="15" fill="rgb(253,173,17)" fg:x="992" fg:w="1"/><text x="77.9321%" y="623.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="77.6821%" y="597" width="0.0783%" height="15" fill="rgb(221,23,28)" fg:x="992" fg:w="1"/><text x="77.9321%" y="607.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="77.6821%" y="581" width="0.0783%" height="15" fill="rgb(218,113,15)" fg:x="992" fg:w="1"/><text x="77.9321%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="77.7604%" y="725" width="0.0783%" height="15" fill="rgb(233,58,3)" fg:x="993" fg:w="1"/><text x="78.0104%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="77.7604%" y="709" width="0.0783%" height="15" fill="rgb(250,46,35)" fg:x="993" fg:w="1"/><text x="78.0104%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.7604%" y="693" width="0.0783%" height="15" fill="rgb(210,169,11)" fg:x="993" fg:w="1"/><text x="78.0104%" y="703.50"></text></g><g><title>plugins_core::build::Build::occupying (2 samples, 0.16%)</title><rect x="77.7604%" y="757" width="0.1566%" height="15" fill="rgb(246,88,19)" fg:x="993" fg:w="2"/><text x="78.0104%" y="767.50"></text></g><g><title>plugins_core::tools::set_occupying (2 samples, 0.16%)</title><rect x="77.7604%" y="741" width="0.1566%" height="15" fill="rgb(206,81,49)" fg:x="993" fg:w="2"/><text x="78.0104%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="77.8387%" y="725" width="0.0783%" height="15" fill="rgb(232,144,18)" fg:x="994" fg:w="1"/><text x="78.0887%" y="735.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="77.8387%" y="709" width="0.0783%" height="15" fill="rgb(235,2,27)" fg:x="994" fg:w="1"/><text x="78.0887%" y="719.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="77.8387%" y="693" width="0.0783%" height="15" fill="rgb(239,157,39)" fg:x="994" fg:w="1"/><text x="78.0887%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="77.9953%" y="693" width="0.0783%" height="15" fill="rgb(220,11,17)" fg:x="996" fg:w="1"/><text x="78.2453%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.9953%" y="677" width="0.0783%" height="15" fill="rgb(243,94,50)" fg:x="996" fg:w="1"/><text x="78.2453%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::users::model::Usernames&gt;&gt; (3 samples, 0.23%)</title><rect x="77.9170%" y="709" width="0.2349%" height="15" fill="rgb(218,22,0)" fg:x="995" fg:w="3"/><text x="78.1670%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="78.0736%" y="693" width="0.0783%" height="15" fill="rgb(249,70,21)" fg:x="997" fg:w="1"/><text x="78.3236%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.0736%" y="677" width="0.0783%" height="15" fill="rgb(245,111,46)" fg:x="997" fg:w="1"/><text x="78.3236%" y="687.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (55 samples, 4.31%)</title><rect x="73.9233%" y="773" width="4.3070%" height="15" fill="rgb(244,183,12)" fg:x="944" fg:w="55"/><text x="74.1733%" y="783.50">plugi..</text></g><g><title>plugins_core::build::Build::with_username (4 samples, 0.31%)</title><rect x="77.9170%" y="757" width="0.3132%" height="15" fill="rgb(207,117,0)" fg:x="995" fg:w="4"/><text x="78.1670%" y="767.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (4 samples, 0.31%)</title><rect x="77.9170%" y="741" width="0.3132%" height="15" fill="rgb(206,20,43)" fg:x="995" fg:w="4"/><text x="78.1670%" y="751.50"></text></g><g><title>engine::users::model::add_username_to_key (4 samples, 0.31%)</title><rect x="77.9170%" y="725" width="0.3132%" height="15" fill="rgb(221,104,11)" fg:x="995" fg:w="4"/><text x="78.1670%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.1519%" y="709" width="0.0783%" height="15" fill="rgb(254,36,50)" fg:x="998" fg:w="1"/><text x="78.4019%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.1519%" y="693" width="0.0783%" height="15" fill="rgb(252,17,15)" fg:x="998" fg:w="1"/><text x="78.4019%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.2302%" y="741" width="0.0783%" height="15" fill="rgb(219,129,43)" fg:x="999" fg:w="1"/><text x="78.4802%" y="751.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (2 samples, 0.16%)</title><rect x="78.2302%" y="773" width="0.1566%" height="15" fill="rgb(205,34,45)" fg:x="999" fg:w="2"/><text x="78.4802%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="78.2302%" y="757" width="0.1566%" height="15" fill="rgb(251,201,32)" fg:x="999" fg:w="2"/><text x="78.4802%" y="767.50"></text></g><g><title>kernel::model::Entity::new_blank (1 samples, 0.08%)</title><rect x="78.3085%" y="741" width="0.0783%" height="15" fill="rgb(205,56,0)" fg:x="1000" fg:w="1"/><text x="78.5585%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.3868%" y="693" width="0.0783%" height="15" fill="rgb(211,193,27)" fg:x="1001" fg:w="1"/><text x="78.6368%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.3868%" y="677" width="0.0783%" height="15" fill="rgb(231,100,42)" fg:x="1001" fg:w="1"/><text x="78.6368%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.3868%" y="661" width="0.0783%" height="15" fill="rgb(245,85,27)" fg:x="1001" fg:w="1"/><text x="78.6368%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.3868%" y="645" width="0.0783%" height="15" fill="rgb(241,76,24)" fg:x="1001" fg:w="1"/><text x="78.6368%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.3868%" y="629" width="0.0783%" height="15" fill="rgb(249,157,15)" fg:x="1001" fg:w="1"/><text x="78.6368%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.3868%" y="613" width="0.0783%" height="15" fill="rgb(222,218,25)" fg:x="1001" fg:w="1"/><text x="78.6368%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.3868%" y="597" width="0.0783%" height="15" fill="rgb(252,156,52)" fg:x="1001" fg:w="1"/><text x="78.6368%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.3868%" y="581" width="0.0783%" height="15" fill="rgb(211,185,7)" fg:x="1001" fg:w="1"/><text x="78.6368%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.3868%" y="565" width="0.0783%" height="15" fill="rgb(234,108,24)" fg:x="1001" fg:w="1"/><text x="78.6368%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.3868%" y="549" width="0.0783%" height="15" fill="rgb(227,218,2)" fg:x="1001" fg:w="1"/><text x="78.6368%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.3868%" y="533" width="0.0783%" height="15" fill="rgb(224,0,36)" fg:x="1001" fg:w="1"/><text x="78.6368%" y="543.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (99 samples, 7.75%)</title><rect x="70.7909%" y="789" width="7.7525%" height="15" fill="rgb(233,201,10)" fg:x="904" fg:w="99"/><text x="71.0409%" y="799.50">&lt;tests::Hol..</text></g><g><title>plugins_core::build::BuildSurroundings::make (2 samples, 0.16%)</title><rect x="78.3868%" y="773" width="0.1566%" height="15" fill="rgb(252,209,14)" fg:x="1001" fg:w="2"/><text x="78.6368%" y="783.50"></text></g><g><title>plugins_core::build::QuickThing::make (2 samples, 0.16%)</title><rect x="78.3868%" y="757" width="0.1566%" height="15" fill="rgb(205,93,49)" fg:x="1001" fg:w="2"/><text x="78.6368%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="78.3868%" y="741" width="0.1566%" height="15" fill="rgb(234,116,45)" fg:x="1001" fg:w="2"/><text x="78.6368%" y="751.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="78.3868%" y="725" width="0.1566%" height="15" fill="rgb(248,89,35)" fg:x="1001" fg:w="2"/><text x="78.6368%" y="735.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="78.3868%" y="709" width="0.1566%" height="15" fill="rgb(233,167,45)" fg:x="1001" fg:w="2"/><text x="78.6368%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.4652%" y="693" width="0.0783%" height="15" fill="rgb(248,228,14)" fg:x="1002" fg:w="1"/><text x="78.7152%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="78.4652%" y="677" width="0.0783%" height="15" fill="rgb(246,91,14)" fg:x="1002" fg:w="1"/><text x="78.7152%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="78.5435%" y="757" width="0.0783%" height="15" fill="rgb(227,142,5)" fg:x="1003" fg:w="1"/><text x="78.7935%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.5435%" y="741" width="0.0783%" height="15" fill="rgb(221,63,33)" fg:x="1003" fg:w="1"/><text x="78.7935%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.5435%" y="725" width="0.0783%" height="15" fill="rgb(233,49,0)" fg:x="1003" fg:w="1"/><text x="78.7935%" y="735.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.5435%" y="709" width="0.0783%" height="15" fill="rgb(251,115,38)" fg:x="1003" fg:w="1"/><text x="78.7935%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.6218%" y="741" width="0.0783%" height="15" fill="rgb(231,214,32)" fg:x="1004" fg:w="1"/><text x="78.8718%" y="751.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="78.6218%" y="757" width="0.1566%" height="15" fill="rgb(248,73,46)" fg:x="1004" fg:w="2"/><text x="78.8718%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.7001%" y="741" width="0.0783%" height="15" fill="rgb(237,156,4)" fg:x="1005" fg:w="1"/><text x="78.9501%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.7001%" y="725" width="0.0783%" height="15" fill="rgb(227,132,2)" fg:x="1005" fg:w="1"/><text x="78.9501%" y="735.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.0133%" y="693" width="0.0783%" height="15" fill="rgb(248,161,9)" fg:x="1009" fg:w="1"/><text x="79.2633%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.0133%" y="677" width="0.0783%" height="15" fill="rgb(238,77,38)" fg:x="1009" fg:w="1"/><text x="79.2633%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="79.0133%" y="709" width="0.1566%" height="15" fill="rgb(222,166,40)" fg:x="1009" fg:w="2"/><text x="79.2633%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.0916%" y="693" width="0.0783%" height="15" fill="rgb(214,168,45)" fg:x="1010" fg:w="1"/><text x="79.3416%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.0916%" y="677" width="0.0783%" height="15" fill="rgb(226,64,37)" fg:x="1010" fg:w="1"/><text x="79.3416%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="79.1699%" y="693" width="0.3132%" height="15" fill="rgb(232,210,43)" fg:x="1011" fg:w="4"/><text x="79.4199%" y="703.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="79.2482%" y="677" width="0.2349%" height="15" fill="rgb(214,76,33)" fg:x="1012" fg:w="3"/><text x="79.4982%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.23%)</title><rect x="79.2482%" y="661" width="0.2349%" height="15" fill="rgb(210,78,5)" fg:x="1012" fg:w="3"/><text x="79.4982%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="79.3265%" y="645" width="0.1566%" height="15" fill="rgb(211,107,37)" fg:x="1013" fg:w="2"/><text x="79.5765%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.4049%" y="629" width="0.0783%" height="15" fill="rgb(249,67,16)" fg:x="1014" fg:w="1"/><text x="79.6549%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.4049%" y="613" width="0.0783%" height="15" fill="rgb(222,114,31)" fg:x="1014" fg:w="1"/><text x="79.6549%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.4049%" y="597" width="0.0783%" height="15" fill="rgb(242,118,19)" fg:x="1014" fg:w="1"/><text x="79.6549%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="79.7181%" y="661" width="0.1566%" height="15" fill="rgb(223,115,1)" fg:x="1018" fg:w="2"/><text x="79.9681%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="79.7181%" y="645" width="0.1566%" height="15" fill="rgb(241,182,54)" fg:x="1018" fg:w="2"/><text x="79.9681%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="79.7181%" y="629" width="0.1566%" height="15" fill="rgb(244,166,36)" fg:x="1018" fg:w="2"/><text x="79.9681%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="79.7181%" y="613" width="0.1566%" height="15" fill="rgb(241,52,43)" fg:x="1018" fg:w="2"/><text x="79.9681%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="80.0313%" y="645" width="0.0783%" height="15" fill="rgb(236,82,9)" fg:x="1022" fg:w="1"/><text x="80.2813%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="80.1096%" y="645" width="0.0783%" height="15" fill="rgb(241,119,0)" fg:x="1023" fg:w="1"/><text x="80.3596%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.1096%" y="629" width="0.0783%" height="15" fill="rgb(221,19,22)" fg:x="1023" fg:w="1"/><text x="80.3596%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.1096%" y="613" width="0.0783%" height="15" fill="rgb(254,144,35)" fg:x="1023" fg:w="1"/><text x="80.3596%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.1879%" y="645" width="0.0783%" height="15" fill="rgb(246,132,30)" fg:x="1024" fg:w="1"/><text x="80.4379%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.55%)</title><rect x="79.8747%" y="661" width="0.5482%" height="15" fill="rgb(234,69,28)" fg:x="1020" fg:w="7"/><text x="80.1247%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="80.2662%" y="645" width="0.1566%" height="15" fill="rgb(219,106,47)" fg:x="1025" fg:w="2"/><text x="80.5162%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="80.2662%" y="629" width="0.1566%" height="15" fill="rgb(218,79,24)" fg:x="1025" fg:w="2"/><text x="80.5162%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="80.3446%" y="613" width="0.0783%" height="15" fill="rgb(225,26,21)" fg:x="1026" fg:w="1"/><text x="80.5946%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.02%)</title><rect x="79.4832%" y="693" width="1.0180%" height="15" fill="rgb(217,68,49)" fg:x="1015" fg:w="13"/><text x="79.7332%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.94%)</title><rect x="79.5615%" y="677" width="0.9397%" height="15" fill="rgb(220,204,28)" fg:x="1016" fg:w="12"/><text x="79.8115%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.4229%" y="661" width="0.0783%" height="15" fill="rgb(237,208,43)" fg:x="1027" fg:w="1"/><text x="80.6729%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.4229%" y="645" width="0.0783%" height="15" fill="rgb(213,97,42)" fg:x="1027" fg:w="1"/><text x="80.6729%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.4229%" y="629" width="0.0783%" height="15" fill="rgb(238,96,52)" fg:x="1027" fg:w="1"/><text x="80.6729%" y="639.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (22 samples, 1.72%)</title><rect x="78.8567%" y="725" width="1.7228%" height="15" fill="rgb(228,14,13)" fg:x="1007" fg:w="22"/><text x="79.1067%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.41%)</title><rect x="79.1699%" y="709" width="1.4096%" height="15" fill="rgb(219,123,13)" fg:x="1011" fg:w="18"/><text x="79.4199%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.5012%" y="693" width="0.0783%" height="15" fill="rgb(216,144,17)" fg:x="1028" fg:w="1"/><text x="80.7512%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.5012%" y="677" width="0.0783%" height="15" fill="rgb(230,228,29)" fg:x="1028" fg:w="1"/><text x="80.7512%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.5012%" y="661" width="0.0783%" height="15" fill="rgb(233,18,5)" fg:x="1028" fg:w="1"/><text x="80.7512%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.7361%" y="677" width="0.0783%" height="15" fill="rgb(233,197,12)" fg:x="1031" fg:w="1"/><text x="80.9861%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.8927%" y="661" width="0.0783%" height="15" fill="rgb(234,140,29)" fg:x="1033" fg:w="1"/><text x="81.1427%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="80.9710%" y="645" width="0.1566%" height="15" fill="rgb(233,113,19)" fg:x="1034" fg:w="2"/><text x="81.2210%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.63%)</title><rect x="80.5795%" y="725" width="0.6265%" height="15" fill="rgb(246,209,13)" fg:x="1029" fg:w="8"/><text x="80.8295%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.63%)</title><rect x="80.5795%" y="709" width="0.6265%" height="15" fill="rgb(242,79,54)" fg:x="1029" fg:w="8"/><text x="80.8295%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.63%)</title><rect x="80.5795%" y="693" width="0.6265%" height="15" fill="rgb(219,73,16)" fg:x="1029" fg:w="8"/><text x="80.8295%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="80.8144%" y="677" width="0.3915%" height="15" fill="rgb(224,52,10)" fg:x="1032" fg:w="5"/><text x="81.0644%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="80.9710%" y="661" width="0.2349%" height="15" fill="rgb(237,179,5)" fg:x="1034" fg:w="3"/><text x="81.2210%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="81.1276%" y="645" width="0.0783%" height="15" fill="rgb(231,20,6)" fg:x="1036" fg:w="1"/><text x="81.3776%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="81.1276%" y="629" width="0.0783%" height="15" fill="rgb(253,171,45)" fg:x="1036" fg:w="1"/><text x="81.3776%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.1276%" y="613" width="0.0783%" height="15" fill="rgb(230,75,49)" fg:x="1036" fg:w="1"/><text x="81.3776%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.2843%" y="677" width="0.0783%" height="15" fill="rgb(216,83,46)" fg:x="1038" fg:w="1"/><text x="81.5343%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.3626%" y="677" width="0.0783%" height="15" fill="rgb(236,56,9)" fg:x="1039" fg:w="1"/><text x="81.6126%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.4409%" y="661" width="0.0783%" height="15" fill="rgb(215,28,34)" fg:x="1040" fg:w="1"/><text x="81.6909%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="81.5192%" y="661" width="0.1566%" height="15" fill="rgb(230,222,20)" fg:x="1041" fg:w="2"/><text x="81.7692%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.5975%" y="645" width="0.0783%" height="15" fill="rgb(235,209,51)" fg:x="1042" fg:w="1"/><text x="81.8475%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.6758%" y="645" width="0.0783%" height="15" fill="rgb(235,167,1)" fg:x="1043" fg:w="1"/><text x="81.9258%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="81.8324%" y="629" width="0.1566%" height="15" fill="rgb(248,220,0)" fg:x="1045" fg:w="2"/><text x="82.0824%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.9890%" y="629" width="0.0783%" height="15" fill="rgb(239,0,18)" fg:x="1047" fg:w="1"/><text x="82.2390%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.86%)</title><rect x="81.2843%" y="709" width="0.8614%" height="15" fill="rgb(229,179,11)" fg:x="1038" fg:w="11"/><text x="81.5343%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.86%)</title><rect x="81.2843%" y="693" width="0.8614%" height="15" fill="rgb(226,116,53)" fg:x="1038" fg:w="11"/><text x="81.5343%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.70%)</title><rect x="81.4409%" y="677" width="0.7048%" height="15" fill="rgb(218,1,49)" fg:x="1040" fg:w="9"/><text x="81.6909%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="81.6758%" y="661" width="0.4699%" height="15" fill="rgb(208,184,47)" fg:x="1043" fg:w="6"/><text x="81.9258%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="81.7541%" y="645" width="0.3915%" height="15" fill="rgb(238,174,3)" fg:x="1044" fg:w="5"/><text x="82.0041%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.0673%" y="629" width="0.0783%" height="15" fill="rgb(247,188,6)" fg:x="1048" fg:w="1"/><text x="82.3173%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.3806%" y="677" width="0.0783%" height="15" fill="rgb(211,165,46)" fg:x="1052" fg:w="1"/><text x="82.6306%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.47%)</title><rect x="82.4589%" y="677" width="0.4699%" height="15" fill="rgb(222,190,10)" fg:x="1053" fg:w="6"/><text x="82.7089%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="82.6938%" y="661" width="0.2349%" height="15" fill="rgb(206,185,3)" fg:x="1056" fg:w="3"/><text x="82.9438%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="82.7721%" y="645" width="0.1566%" height="15" fill="rgb(244,125,37)" fg:x="1057" fg:w="2"/><text x="83.0221%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (3 samples, 0.23%)</title><rect x="82.9287%" y="677" width="0.2349%" height="15" fill="rgb(211,43,7)" fg:x="1059" fg:w="3"/><text x="83.1787%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.0854%" y="661" width="0.0783%" height="15" fill="rgb(250,41,42)" fg:x="1061" fg:w="1"/><text x="83.3354%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.0854%" y="645" width="0.0783%" height="15" fill="rgb(254,54,42)" fg:x="1061" fg:w="1"/><text x="83.3354%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.1637%" y="645" width="0.0783%" height="15" fill="rgb(213,71,43)" fg:x="1062" fg:w="1"/><text x="83.4137%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.2420%" y="645" width="0.0783%" height="15" fill="rgb(249,3,44)" fg:x="1063" fg:w="1"/><text x="83.4920%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.2420%" y="629" width="0.0783%" height="15" fill="rgb(229,80,41)" fg:x="1063" fg:w="1"/><text x="83.4920%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.2420%" y="613" width="0.0783%" height="15" fill="rgb(231,25,28)" fg:x="1063" fg:w="1"/><text x="83.4920%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="83.4769%" y="629" width="0.2349%" height="15" fill="rgb(208,79,48)" fg:x="1066" fg:w="3"/><text x="83.7269%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="83.4769%" y="613" width="0.2349%" height="15" fill="rgb(207,196,38)" fg:x="1066" fg:w="3"/><text x="83.7269%" y="623.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="83.5552%" y="597" width="0.1566%" height="15" fill="rgb(228,105,49)" fg:x="1067" fg:w="2"/><text x="83.8052%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.7118%" y="597" width="0.0783%" height="15" fill="rgb(237,99,15)" fg:x="1069" fg:w="1"/><text x="83.9618%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.7118%" y="581" width="0.0783%" height="15" fill="rgb(224,207,46)" fg:x="1069" fg:w="1"/><text x="83.9618%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.7118%" y="565" width="0.0783%" height="15" fill="rgb(249,117,50)" fg:x="1069" fg:w="1"/><text x="83.9618%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="83.7118%" y="613" width="0.1566%" height="15" fill="rgb(248,17,13)" fg:x="1069" fg:w="2"/><text x="83.9618%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="83.7901%" y="597" width="0.0783%" height="15" fill="rgb(228,187,36)" fg:x="1070" fg:w="1"/><text x="84.0401%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.7901%" y="581" width="0.0783%" height="15" fill="rgb(234,132,20)" fg:x="1070" fg:w="1"/><text x="84.0401%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (10 samples, 0.78%)</title><rect x="83.1637%" y="677" width="0.7831%" height="15" fill="rgb(209,170,46)" fg:x="1062" fg:w="10"/><text x="83.4137%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.78%)</title><rect x="83.1637%" y="661" width="0.7831%" height="15" fill="rgb(237,23,19)" fg:x="1062" fg:w="10"/><text x="83.4137%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.63%)</title><rect x="83.3203%" y="645" width="0.6265%" height="15" fill="rgb(227,21,26)" fg:x="1064" fg:w="8"/><text x="83.5703%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (3 samples, 0.23%)</title><rect x="83.7118%" y="629" width="0.2349%" height="15" fill="rgb(222,220,48)" fg:x="1069" fg:w="3"/><text x="83.9618%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.8684%" y="613" width="0.0783%" height="15" fill="rgb(214,9,16)" fg:x="1071" fg:w="1"/><text x="84.1184%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="83.9468%" y="677" width="0.0783%" height="15" fill="rgb(209,73,30)" fg:x="1072" fg:w="1"/><text x="84.1968%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="83.9468%" y="661" width="0.0783%" height="15" fill="rgb(207,20,33)" fg:x="1072" fg:w="1"/><text x="84.1968%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.0251%" y="597" width="0.0783%" height="15" fill="rgb(219,153,12)" fg:x="1073" fg:w="1"/><text x="84.2751%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="84.0251%" y="629" width="0.2349%" height="15" fill="rgb(235,97,25)" fg:x="1073" fg:w="3"/><text x="84.2751%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="84.0251%" y="613" width="0.2349%" height="15" fill="rgb(244,30,34)" fg:x="1073" fg:w="3"/><text x="84.2751%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="84.1034%" y="597" width="0.1566%" height="15" fill="rgb(214,106,45)" fg:x="1074" fg:w="2"/><text x="84.3534%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.2600%" y="629" width="0.0783%" height="15" fill="rgb(226,41,9)" fg:x="1076" fg:w="1"/><text x="84.5100%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="84.2600%" y="613" width="0.0783%" height="15" fill="rgb(253,139,29)" fg:x="1076" fg:w="1"/><text x="84.5100%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.2600%" y="597" width="0.0783%" height="15" fill="rgb(213,205,39)" fg:x="1076" fg:w="1"/><text x="84.5100%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (31 samples, 2.43%)</title><rect x="82.1457%" y="709" width="2.4276%" height="15" fill="rgb(209,27,10)" fg:x="1049" fg:w="31"/><text x="82.3957%" y="719.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (31 samples, 2.43%)</title><rect x="82.1457%" y="693" width="2.4276%" height="15" fill="rgb(249,142,16)" fg:x="1049" fg:w="31"/><text x="82.3957%" y="703.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.55%)</title><rect x="84.0251%" y="677" width="0.5482%" height="15" fill="rgb(242,65,12)" fg:x="1073" fg:w="7"/><text x="84.2751%" y="687.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (7 samples, 0.55%)</title><rect x="84.0251%" y="661" width="0.5482%" height="15" fill="rgb(232,48,10)" fg:x="1073" fg:w="7"/><text x="84.2751%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.55%)</title><rect x="84.0251%" y="645" width="0.5482%" height="15" fill="rgb(253,67,19)" fg:x="1073" fg:w="7"/><text x="84.2751%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.23%)</title><rect x="84.3383%" y="629" width="0.2349%" height="15" fill="rgb(227,93,29)" fg:x="1077" fg:w="3"/><text x="84.5883%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="84.4166%" y="613" width="0.1566%" height="15" fill="rgb(226,189,53)" fg:x="1078" fg:w="2"/><text x="84.6666%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.4166%" y="597" width="0.1566%" height="15" fill="rgb(223,224,1)" fg:x="1078" fg:w="2"/><text x="84.6666%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.4949%" y="581" width="0.0783%" height="15" fill="rgb(221,84,32)" fg:x="1079" fg:w="1"/><text x="84.7449%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4949%" y="565" width="0.0783%" height="15" fill="rgb(214,189,28)" fg:x="1079" fg:w="1"/><text x="84.7449%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="84.6515%" y="533" width="0.0783%" height="15" fill="rgb(234,7,52)" fg:x="1081" fg:w="1"/><text x="84.9015%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="84.7298%" y="533" width="0.0783%" height="15" fill="rgb(249,73,31)" fg:x="1082" fg:w="1"/><text x="84.9798%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="84.7298%" y="517" width="0.0783%" height="15" fill="rgb(253,153,41)" fg:x="1082" fg:w="1"/><text x="84.9798%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.23%)</title><rect x="84.6515%" y="549" width="0.2349%" height="15" fill="rgb(249,52,34)" fg:x="1081" fg:w="3"/><text x="84.9015%" y="559.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="84.8081%" y="533" width="0.0783%" height="15" fill="rgb(236,177,47)" fg:x="1083" fg:w="1"/><text x="85.0581%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="84.8865%" y="549" width="0.0783%" height="15" fill="rgb(252,185,45)" fg:x="1084" fg:w="1"/><text x="85.1365%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.47%)</title><rect x="84.5732%" y="613" width="0.4699%" height="15" fill="rgb(251,15,30)" fg:x="1080" fg:w="6"/><text x="84.8232%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="84.6515%" y="597" width="0.3915%" height="15" fill="rgb(233,31,4)" fg:x="1081" fg:w="5"/><text x="84.9015%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.39%)</title><rect x="84.6515%" y="581" width="0.3915%" height="15" fill="rgb(254,44,24)" fg:x="1081" fg:w="5"/><text x="84.9015%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="84.6515%" y="565" width="0.3915%" height="15" fill="rgb(218,54,1)" fg:x="1081" fg:w="5"/><text x="84.9015%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.9648%" y="549" width="0.0783%" height="15" fill="rgb(243,209,39)" fg:x="1085" fg:w="1"/><text x="85.2148%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.9648%" y="533" width="0.0783%" height="15" fill="rgb(206,75,33)" fg:x="1085" fg:w="1"/><text x="85.2148%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.9648%" y="517" width="0.0783%" height="15" fill="rgb(223,108,18)" fg:x="1085" fg:w="1"/><text x="85.2148%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="85.0431%" y="613" width="0.1566%" height="15" fill="rgb(244,89,31)" fg:x="1086" fg:w="2"/><text x="85.2931%" y="623.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="85.0431%" y="597" width="0.1566%" height="15" fill="rgb(222,167,27)" fg:x="1086" fg:w="2"/><text x="85.2931%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.86%)</title><rect x="84.5732%" y="645" width="0.8614%" height="15" fill="rgb(247,41,16)" fg:x="1080" fg:w="11"/><text x="84.8232%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.86%)</title><rect x="84.5732%" y="629" width="0.8614%" height="15" fill="rgb(233,168,40)" fg:x="1080" fg:w="11"/><text x="84.8232%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="85.1997%" y="613" width="0.2349%" height="15" fill="rgb(205,211,8)" fg:x="1088" fg:w="3"/><text x="85.4497%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="85.1997%" y="597" width="0.2349%" height="15" fill="rgb(238,105,11)" fg:x="1088" fg:w="3"/><text x="85.4497%" y="607.50"></text></g><g><title>__libc_malloc (3 samples, 0.23%)</title><rect x="85.1997%" y="581" width="0.2349%" height="15" fill="rgb(223,142,52)" fg:x="1088" fg:w="3"/><text x="85.4497%" y="591.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="85.4346%" y="629" width="0.0783%" height="15" fill="rgb(238,51,33)" fg:x="1091" fg:w="1"/><text x="85.6846%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="85.4346%" y="645" width="0.1566%" height="15" fill="rgb(231,188,43)" fg:x="1091" fg:w="2"/><text x="85.6846%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.5129%" y="629" width="0.0783%" height="15" fill="rgb(216,92,17)" fg:x="1092" fg:w="1"/><text x="85.7629%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (14 samples, 1.10%)</title><rect x="84.5732%" y="709" width="1.0963%" height="15" fill="rgb(228,2,40)" fg:x="1080" fg:w="14"/><text x="84.8232%" y="719.50"></text></g><g><title>serde_json::de::from_trait (14 samples, 1.10%)</title><rect x="84.5732%" y="693" width="1.0963%" height="15" fill="rgb(226,73,15)" fg:x="1080" fg:w="14"/><text x="84.8232%" y="703.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.10%)</title><rect x="84.5732%" y="677" width="1.0963%" height="15" fill="rgb(227,66,46)" fg:x="1080" fg:w="14"/><text x="84.8232%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.10%)</title><rect x="84.5732%" y="661" width="1.0963%" height="15" fill="rgb(209,71,6)" fg:x="1080" fg:w="14"/><text x="84.8232%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.5912%" y="645" width="0.0783%" height="15" fill="rgb(246,100,25)" fg:x="1093" fg:w="1"/><text x="85.8412%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.23%)</title><rect x="85.9045%" y="661" width="0.2349%" height="15" fill="rgb(248,185,27)" fg:x="1097" fg:w="3"/><text x="86.1545%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="85.9828%" y="645" width="0.1566%" height="15" fill="rgb(225,118,47)" fg:x="1098" fg:w="2"/><text x="86.2328%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="86.0611%" y="629" width="0.0783%" height="15" fill="rgb(220,185,44)" fg:x="1099" fg:w="1"/><text x="86.3111%" y="639.50"></text></g><g><title>engine::session::Session::close (99 samples, 7.75%)</title><rect x="78.5435%" y="789" width="7.7525%" height="15" fill="rgb(227,95,24)" fg:x="1003" fg:w="99"/><text x="78.7935%" y="799.50">engine::ses..</text></g><g><title>engine::session::Session::save_entity_changes (99 samples, 7.75%)</title><rect x="78.5435%" y="773" width="7.7525%" height="15" fill="rgb(252,84,24)" fg:x="1003" fg:w="99"/><text x="78.7935%" y="783.50">engine::ses..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (96 samples, 7.52%)</title><rect x="78.7784%" y="757" width="7.5176%" height="15" fill="rgb(240,34,44)" fg:x="1006" fg:w="96"/><text x="79.0284%" y="767.50">engine::in..</text></g><g><title>engine::session::SavesEntities::check_for_changes (96 samples, 7.52%)</title><rect x="78.7784%" y="741" width="7.5176%" height="15" fill="rgb(209,72,54)" fg:x="1006" fg:w="96"/><text x="79.0284%" y="751.50">engine::se..</text></g><g><title>kernel::compare::any_entity_changes (65 samples, 5.09%)</title><rect x="81.2060%" y="725" width="5.0901%" height="15" fill="rgb(226,19,45)" fg:x="1037" fg:w="65"/><text x="81.4560%" y="735.50">kernel..</text></g><g><title>treediff::diff::diff (8 samples, 0.63%)</title><rect x="85.6695%" y="709" width="0.6265%" height="15" fill="rgb(246,7,45)" fg:x="1094" fg:w="8"/><text x="85.9195%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.63%)</title><rect x="85.6695%" y="693" width="0.6265%" height="15" fill="rgb(225,45,2)" fg:x="1094" fg:w="8"/><text x="85.9195%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.63%)</title><rect x="85.6695%" y="677" width="0.6265%" height="15" fill="rgb(221,80,29)" fg:x="1094" fg:w="8"/><text x="85.9195%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="86.1394%" y="661" width="0.1566%" height="15" fill="rgb(228,11,19)" fg:x="1100" fg:w="2"/><text x="86.3894%" y="671.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="86.2960%" y="693" width="0.0783%" height="15" fill="rgb(243,17,21)" fg:x="1102" fg:w="1"/><text x="86.5460%" y="703.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="86.2960%" y="677" width="0.0783%" height="15" fill="rgb(243,88,8)" fg:x="1102" fg:w="1"/><text x="86.5460%" y="687.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (1 samples, 0.08%)</title><rect x="86.3743%" y="645" width="0.0783%" height="15" fill="rgb(214,17,9)" fg:x="1103" fg:w="1"/><text x="86.6243%" y="655.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="86.3743%" y="629" width="0.0783%" height="15" fill="rgb(232,169,15)" fg:x="1103" fg:w="1"/><text x="86.6243%" y="639.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.3743%" y="613" width="0.0783%" height="15" fill="rgb(232,86,53)" fg:x="1103" fg:w="1"/><text x="86.6243%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.3743%" y="597" width="0.0783%" height="15" fill="rgb(222,100,4)" fg:x="1103" fg:w="1"/><text x="86.6243%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.3743%" y="581" width="0.0783%" height="15" fill="rgb(253,151,38)" fg:x="1103" fg:w="1"/><text x="86.6243%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.3743%" y="565" width="0.0783%" height="15" fill="rgb(238,215,29)" fg:x="1103" fg:w="1"/><text x="86.6243%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.3743%" y="549" width="0.0783%" height="15" fill="rgb(205,128,53)" fg:x="1103" fg:w="1"/><text x="86.6243%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.3743%" y="533" width="0.0783%" height="15" fill="rgb(248,183,14)" fg:x="1103" fg:w="1"/><text x="86.6243%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.3743%" y="517" width="0.0783%" height="15" fill="rgb(244,172,35)" fg:x="1103" fg:w="1"/><text x="86.6243%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.3743%" y="501" width="0.0783%" height="15" fill="rgb(234,93,19)" fg:x="1103" fg:w="1"/><text x="86.6243%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.3743%" y="485" width="0.0783%" height="15" fill="rgb(227,109,7)" fg:x="1103" fg:w="1"/><text x="86.6243%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.3743%" y="469" width="0.0783%" height="15" fill="rgb(233,136,54)" fg:x="1103" fg:w="1"/><text x="86.6243%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.3743%" y="453" width="0.0783%" height="15" fill="rgb(233,19,40)" fg:x="1103" fg:w="1"/><text x="86.6243%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.3743%" y="437" width="0.0783%" height="15" fill="rgb(247,41,18)" fg:x="1103" fg:w="1"/><text x="86.6243%" y="447.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="86.3743%" y="421" width="0.0783%" height="15" fill="rgb(220,34,34)" fg:x="1103" fg:w="1"/><text x="86.6243%" y="431.50"></text></g><g><title>&lt;kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="86.6092%" y="453" width="0.0783%" height="15" fill="rgb(222,135,32)" fg:x="1106" fg:w="1"/><text x="86.8592%" y="463.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.6875%" y="453" width="0.0783%" height="15" fill="rgb(214,80,19)" fg:x="1107" fg:w="1"/><text x="86.9375%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.6875%" y="437" width="0.0783%" height="15" fill="rgb(234,54,46)" fg:x="1107" fg:w="1"/><text x="86.9375%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.6875%" y="421" width="0.0783%" height="15" fill="rgb(251,48,23)" fg:x="1107" fg:w="1"/><text x="86.9375%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.6875%" y="405" width="0.0783%" height="15" fill="rgb(254,109,52)" fg:x="1107" fg:w="1"/><text x="86.9375%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="86.6875%" y="389" width="0.0783%" height="15" fill="rgb(240,186,19)" fg:x="1107" fg:w="1"/><text x="86.9375%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="86.6875%" y="373" width="0.0783%" height="15" fill="rgb(246,187,17)" fg:x="1107" fg:w="1"/><text x="86.9375%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="86.6875%" y="357" width="0.0783%" height="15" fill="rgb(212,21,5)" fg:x="1107" fg:w="1"/><text x="86.9375%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="86.6875%" y="341" width="0.0783%" height="15" fill="rgb(225,185,18)" fg:x="1107" fg:w="1"/><text x="86.9375%" y="351.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (3 samples, 0.23%)</title><rect x="86.6092%" y="517" width="0.2349%" height="15" fill="rgb(245,114,17)" fg:x="1106" fg:w="3"/><text x="86.8592%" y="527.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (3 samples, 0.23%)</title><rect x="86.6092%" y="501" width="0.2349%" height="15" fill="rgb(223,164,24)" fg:x="1106" fg:w="3"/><text x="86.8592%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="86.6092%" y="485" width="0.2349%" height="15" fill="rgb(211,228,3)" fg:x="1106" fg:w="3"/><text x="86.8592%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="86.6092%" y="469" width="0.2349%" height="15" fill="rgb(223,16,38)" fg:x="1106" fg:w="3"/><text x="86.8592%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.7659%" y="453" width="0.0783%" height="15" fill="rgb(207,31,54)" fg:x="1108" fg:w="1"/><text x="87.0159%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.7659%" y="437" width="0.0783%" height="15" fill="rgb(220,39,11)" fg:x="1108" fg:w="1"/><text x="87.0159%" y="447.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.7659%" y="421" width="0.0783%" height="15" fill="rgb(235,185,0)" fg:x="1108" fg:w="1"/><text x="87.0159%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.7659%" y="405" width="0.0783%" height="15" fill="rgb(249,39,18)" fg:x="1108" fg:w="1"/><text x="87.0159%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="86.7659%" y="389" width="0.0783%" height="15" fill="rgb(240,110,33)" fg:x="1108" fg:w="1"/><text x="87.0159%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="86.8442%" y="437" width="0.0783%" height="15" fill="rgb(210,92,42)" fg:x="1109" fg:w="1"/><text x="87.0942%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="86.8442%" y="421" width="0.0783%" height="15" fill="rgb(218,215,28)" fg:x="1109" fg:w="1"/><text x="87.0942%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="86.9225%" y="405" width="0.0783%" height="15" fill="rgb(238,215,36)" fg:x="1110" fg:w="1"/><text x="87.1725%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.9225%" y="389" width="0.0783%" height="15" fill="rgb(220,31,10)" fg:x="1110" fg:w="1"/><text x="87.1725%" y="399.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (8 samples, 0.63%)</title><rect x="86.4526%" y="629" width="0.6265%" height="15" fill="rgb(212,93,14)" fg:x="1104" fg:w="8"/><text x="86.7026%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.55%)</title><rect x="86.5309%" y="613" width="0.5482%" height="15" fill="rgb(254,207,2)" fg:x="1105" fg:w="7"/><text x="86.7809%" y="623.50"></text></g><g><title>kernel::model::Entity::load_scope (7 samples, 0.55%)</title><rect x="86.5309%" y="597" width="0.5482%" height="15" fill="rgb(205,57,44)" fg:x="1105" fg:w="7"/><text x="86.7809%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (6 samples, 0.47%)</title><rect x="86.6092%" y="581" width="0.4699%" height="15" fill="rgb(226,151,19)" fg:x="1106" fg:w="6"/><text x="86.8592%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (6 samples, 0.47%)</title><rect x="86.6092%" y="565" width="0.4699%" height="15" fill="rgb(230,72,30)" fg:x="1106" fg:w="6"/><text x="86.8592%" y="575.50"></text></g><g><title>engine::internal::Entities::add_persisted (6 samples, 0.47%)</title><rect x="86.6092%" y="549" width="0.4699%" height="15" fill="rgb(244,0,8)" fg:x="1106" fg:w="6"/><text x="86.8592%" y="559.50"></text></g><g><title>kernel::model::deserialize_entity (6 samples, 0.47%)</title><rect x="86.6092%" y="533" width="0.4699%" height="15" fill="rgb(230,192,6)" fg:x="1106" fg:w="6"/><text x="86.8592%" y="543.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.23%)</title><rect x="86.8442%" y="517" width="0.2349%" height="15" fill="rgb(233,207,13)" fg:x="1109" fg:w="3"/><text x="87.0942%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="86.8442%" y="501" width="0.2349%" height="15" fill="rgb(206,227,7)" fg:x="1109" fg:w="3"/><text x="87.0942%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="86.8442%" y="485" width="0.2349%" height="15" fill="rgb(213,217,25)" fg:x="1109" fg:w="3"/><text x="87.0942%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="86.8442%" y="469" width="0.2349%" height="15" fill="rgb(249,75,4)" fg:x="1109" fg:w="3"/><text x="87.0942%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="86.8442%" y="453" width="0.2349%" height="15" fill="rgb(225,114,18)" fg:x="1109" fg:w="3"/><text x="87.0942%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="86.9225%" y="437" width="0.1566%" height="15" fill="rgb(211,162,40)" fg:x="1110" fg:w="2"/><text x="87.1725%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="86.9225%" y="421" width="0.1566%" height="15" fill="rgb(206,49,29)" fg:x="1110" fg:w="2"/><text x="87.1725%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.0008%" y="405" width="0.0783%" height="15" fill="rgb(244,8,6)" fg:x="1111" fg:w="1"/><text x="87.2508%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.0008%" y="389" width="0.0783%" height="15" fill="rgb(231,194,28)" fg:x="1111" fg:w="1"/><text x="87.2508%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="87.0008%" y="373" width="0.0783%" height="15" fill="rgb(210,69,5)" fg:x="1111" fg:w="1"/><text x="87.2508%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="87.0008%" y="357" width="0.0783%" height="15" fill="rgb(216,186,12)" fg:x="1111" fg:w="1"/><text x="87.2508%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.0008%" y="341" width="0.0783%" height="15" fill="rgb(238,61,15)" fg:x="1111" fg:w="1"/><text x="87.2508%" y="351.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (9 samples, 0.70%)</title><rect x="86.4526%" y="645" width="0.7048%" height="15" fill="rgb(226,104,1)" fg:x="1104" fg:w="9"/><text x="86.7026%" y="655.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="87.0791%" y="629" width="0.0783%" height="15" fill="rgb(229,128,15)" fg:x="1112" fg:w="1"/><text x="87.3291%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="87.0791%" y="613" width="0.0783%" height="15" fill="rgb(247,110,15)" fg:x="1112" fg:w="1"/><text x="87.3291%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="87.0791%" y="597" width="0.0783%" height="15" fill="rgb(210,74,48)" fg:x="1112" fg:w="1"/><text x="87.3291%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.1574%" y="613" width="0.0783%" height="15" fill="rgb(246,121,10)" fg:x="1113" fg:w="1"/><text x="87.4074%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="87.3923%" y="533" width="0.0783%" height="15" fill="rgb(214,156,37)" fg:x="1116" fg:w="1"/><text x="87.6423%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.39%)</title><rect x="87.3923%" y="549" width="0.3915%" height="15" fill="rgb(214,210,34)" fg:x="1116" fg:w="5"/><text x="87.6423%" y="559.50"></text></g><g><title>__libc_free (4 samples, 0.31%)</title><rect x="87.4706%" y="533" width="0.3132%" height="15" fill="rgb(237,93,35)" fg:x="1117" fg:w="4"/><text x="87.7206%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.47%)</title><rect x="87.3923%" y="565" width="0.4699%" height="15" fill="rgb(206,36,8)" fg:x="1116" fg:w="6"/><text x="87.6423%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.7839%" y="549" width="0.0783%" height="15" fill="rgb(208,151,12)" fg:x="1121" fg:w="1"/><text x="88.0339%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.63%)</title><rect x="87.3140%" y="581" width="0.6265%" height="15" fill="rgb(225,133,52)" fg:x="1115" fg:w="8"/><text x="87.5640%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.8622%" y="565" width="0.0783%" height="15" fill="rgb(231,71,53)" fg:x="1122" fg:w="1"/><text x="88.1122%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.86%)</title><rect x="87.2357%" y="597" width="0.8614%" height="15" fill="rgb(243,76,21)" fg:x="1114" fg:w="11"/><text x="87.4857%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="87.9405%" y="581" width="0.1566%" height="15" fill="rgb(252,144,3)" fg:x="1123" fg:w="2"/><text x="88.1905%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (12 samples, 0.94%)</title><rect x="87.2357%" y="613" width="0.9397%" height="15" fill="rgb(231,199,10)" fg:x="1114" fg:w="12"/><text x="87.4857%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.0971%" y="597" width="0.0783%" height="15" fill="rgb(215,18,11)" fg:x="1125" fg:w="1"/><text x="88.3471%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="88.2537%" y="565" width="0.0783%" height="15" fill="rgb(241,65,24)" fg:x="1127" fg:w="1"/><text x="88.5037%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.23%)</title><rect x="88.2537%" y="581" width="0.2349%" height="15" fill="rgb(251,192,38)" fg:x="1127" fg:w="3"/><text x="88.5037%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="88.3320%" y="565" width="0.1566%" height="15" fill="rgb(205,9,35)" fg:x="1128" fg:w="2"/><text x="88.5820%" y="575.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.16%)</title><rect x="88.4886%" y="581" width="0.1566%" height="15" fill="rgb(229,225,49)" fg:x="1130" fg:w="2"/><text x="88.7386%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="88.4886%" y="565" width="0.1566%" height="15" fill="rgb(207,125,39)" fg:x="1130" fg:w="2"/><text x="88.7386%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.5670%" y="549" width="0.0783%" height="15" fill="rgb(222,78,19)" fg:x="1131" fg:w="1"/><text x="88.8170%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.6453%" y="581" width="0.0783%" height="15" fill="rgb(248,207,20)" fg:x="1132" fg:w="1"/><text x="88.8953%" y="591.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="88.7236%" y="581" width="0.0783%" height="15" fill="rgb(205,103,49)" fg:x="1133" fg:w="1"/><text x="88.9736%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="88.7236%" y="565" width="0.0783%" height="15" fill="rgb(216,42,28)" fg:x="1133" fg:w="1"/><text x="88.9736%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="88.8019%" y="517" width="0.1566%" height="15" fill="rgb(213,205,53)" fg:x="1134" fg:w="2"/><text x="89.0519%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.8802%" y="501" width="0.0783%" height="15" fill="rgb(239,140,53)" fg:x="1135" fg:w="1"/><text x="89.1302%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="88.9585%" y="501" width="0.0783%" height="15" fill="rgb(248,95,9)" fg:x="1136" fg:w="1"/><text x="89.2085%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="88.9585%" y="485" width="0.0783%" height="15" fill="rgb(254,58,47)" fg:x="1136" fg:w="1"/><text x="89.2085%" y="495.50"></text></g><g><title>kernel::model::EntityRef::into_entry (1 samples, 0.08%)</title><rect x="88.9585%" y="469" width="0.0783%" height="15" fill="rgb(234,227,14)" fg:x="1136" fg:w="1"/><text x="89.2085%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="88.9585%" y="453" width="0.0783%" height="15" fill="rgb(205,192,45)" fg:x="1136" fg:w="1"/><text x="89.2085%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="88.9585%" y="437" width="0.0783%" height="15" fill="rgb(253,187,31)" fg:x="1136" fg:w="1"/><text x="89.2085%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="89.0368%" y="485" width="0.0783%" height="15" fill="rgb(222,6,32)" fg:x="1137" fg:w="1"/><text x="89.2868%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="89.0368%" y="469" width="0.0783%" height="15" fill="rgb(249,190,19)" fg:x="1137" fg:w="1"/><text x="89.2868%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.0368%" y="453" width="0.0783%" height="15" fill="rgb(251,28,20)" fg:x="1137" fg:w="1"/><text x="89.2868%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.1151%" y="469" width="0.0783%" height="15" fill="rgb(210,223,40)" fg:x="1138" fg:w="1"/><text x="89.3651%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.1934%" y="437" width="0.0783%" height="15" fill="rgb(216,137,22)" fg:x="1139" fg:w="1"/><text x="89.4434%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.1934%" y="421" width="0.0783%" height="15" fill="rgb(247,39,34)" fg:x="1139" fg:w="1"/><text x="89.4434%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.1934%" y="405" width="0.0783%" height="15" fill="rgb(239,43,50)" fg:x="1139" fg:w="1"/><text x="89.4434%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.1934%" y="389" width="0.0783%" height="15" fill="rgb(241,212,9)" fg:x="1139" fg:w="1"/><text x="89.4434%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.1934%" y="373" width="0.0783%" height="15" fill="rgb(205,8,2)" fg:x="1139" fg:w="1"/><text x="89.4434%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.1934%" y="357" width="0.0783%" height="15" fill="rgb(217,173,54)" fg:x="1139" fg:w="1"/><text x="89.4434%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.1934%" y="341" width="0.0783%" height="15" fill="rgb(208,149,52)" fg:x="1139" fg:w="1"/><text x="89.4434%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.1934%" y="325" width="0.0783%" height="15" fill="rgb(239,99,40)" fg:x="1139" fg:w="1"/><text x="89.4434%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.1934%" y="309" width="0.0783%" height="15" fill="rgb(233,214,26)" fg:x="1139" fg:w="1"/><text x="89.4434%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.1934%" y="293" width="0.0783%" height="15" fill="rgb(231,225,37)" fg:x="1139" fg:w="1"/><text x="89.4434%" y="303.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (1 samples, 0.08%)</title><rect x="89.2717%" y="373" width="0.0783%" height="15" fill="rgb(252,55,35)" fg:x="1140" fg:w="1"/><text x="89.5217%" y="383.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (1 samples, 0.08%)</title><rect x="89.2717%" y="357" width="0.0783%" height="15" fill="rgb(239,43,18)" fg:x="1140" fg:w="1"/><text x="89.5217%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.2717%" y="341" width="0.0783%" height="15" fill="rgb(251,125,49)" fg:x="1140" fg:w="1"/><text x="89.5217%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.2717%" y="325" width="0.0783%" height="15" fill="rgb(212,83,54)" fg:x="1140" fg:w="1"/><text x="89.5217%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.2717%" y="309" width="0.0783%" height="15" fill="rgb(250,75,6)" fg:x="1140" fg:w="1"/><text x="89.5217%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.2717%" y="293" width="0.0783%" height="15" fill="rgb(252,36,40)" fg:x="1140" fg:w="1"/><text x="89.5217%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="89.2717%" y="277" width="0.0783%" height="15" fill="rgb(230,91,51)" fg:x="1140" fg:w="1"/><text x="89.5217%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="89.3500%" y="325" width="0.1566%" height="15" fill="rgb(212,92,28)" fg:x="1141" fg:w="2"/><text x="89.6000%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="89.3500%" y="309" width="0.1566%" height="15" fill="rgb(227,13,22)" fg:x="1141" fg:w="2"/><text x="89.6000%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="89.5067%" y="293" width="0.0783%" height="15" fill="rgb(239,204,32)" fg:x="1143" fg:w="1"/><text x="89.7567%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (5 samples, 0.39%)</title><rect x="89.2717%" y="437" width="0.3915%" height="15" fill="rgb(228,49,41)" fg:x="1140" fg:w="5"/><text x="89.5217%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (5 samples, 0.39%)</title><rect x="89.2717%" y="421" width="0.3915%" height="15" fill="rgb(206,95,6)" fg:x="1140" fg:w="5"/><text x="89.5217%" y="431.50"></text></g><g><title>engine::internal::Entities::add_persisted (5 samples, 0.39%)</title><rect x="89.2717%" y="405" width="0.3915%" height="15" fill="rgb(251,20,14)" fg:x="1140" fg:w="5"/><text x="89.5217%" y="415.50"></text></g><g><title>kernel::model::deserialize_entity (5 samples, 0.39%)</title><rect x="89.2717%" y="389" width="0.3915%" height="15" fill="rgb(214,99,28)" fg:x="1140" fg:w="5"/><text x="89.5217%" y="399.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.31%)</title><rect x="89.3500%" y="373" width="0.3132%" height="15" fill="rgb(239,122,54)" fg:x="1141" fg:w="4"/><text x="89.6000%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.31%)</title><rect x="89.3500%" y="357" width="0.3132%" height="15" fill="rgb(218,217,46)" fg:x="1141" fg:w="4"/><text x="89.6000%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="89.3500%" y="341" width="0.3132%" height="15" fill="rgb(249,106,28)" fg:x="1141" fg:w="4"/><text x="89.6000%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="89.5067%" y="325" width="0.1566%" height="15" fill="rgb(250,158,18)" fg:x="1143" fg:w="2"/><text x="89.7567%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="89.5067%" y="309" width="0.1566%" height="15" fill="rgb(226,137,29)" fg:x="1143" fg:w="2"/><text x="89.7567%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.5850%" y="293" width="0.0783%" height="15" fill="rgb(210,188,1)" fg:x="1144" fg:w="1"/><text x="89.8350%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="89.6633%" y="437" width="0.0783%" height="15" fill="rgb(227,84,42)" fg:x="1145" fg:w="1"/><text x="89.9133%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.6633%" y="421" width="0.0783%" height="15" fill="rgb(222,147,48)" fg:x="1145" fg:w="1"/><text x="89.9133%" y="431.50"></text></g><g><title>core::iter::adapters::try_process (11 samples, 0.86%)</title><rect x="88.9585%" y="517" width="0.8614%" height="15" fill="rgb(241,150,43)" fg:x="1136" fg:w="11"/><text x="89.2085%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (10 samples, 0.78%)</title><rect x="89.0368%" y="501" width="0.7831%" height="15" fill="rgb(206,139,52)" fg:x="1137" fg:w="10"/><text x="89.2868%" y="511.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (9 samples, 0.70%)</title><rect x="89.1151%" y="485" width="0.7048%" height="15" fill="rgb(230,63,14)" fg:x="1138" fg:w="9"/><text x="89.3651%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (8 samples, 0.63%)</title><rect x="89.1934%" y="469" width="0.6265%" height="15" fill="rgb(247,8,20)" fg:x="1139" fg:w="8"/><text x="89.4434%" y="479.50"></text></g><g><title>kernel::model::Entity::load_scope (8 samples, 0.63%)</title><rect x="89.1934%" y="453" width="0.6265%" height="15" fill="rgb(213,115,4)" fg:x="1139" fg:w="8"/><text x="89.4434%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.7416%" y="437" width="0.0783%" height="15" fill="rgb(241,79,49)" fg:x="1146" fg:w="1"/><text x="89.9916%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.7416%" y="421" width="0.0783%" height="15" fill="rgb(222,42,35)" fg:x="1146" fg:w="1"/><text x="89.9916%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.7416%" y="405" width="0.0783%" height="15" fill="rgb(247,59,23)" fg:x="1146" fg:w="1"/><text x="89.9916%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.7416%" y="389" width="0.0783%" height="15" fill="rgb(247,93,18)" fg:x="1146" fg:w="1"/><text x="89.9916%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="89.8199%" y="485" width="0.2349%" height="15" fill="rgb(249,107,47)" fg:x="1147" fg:w="3"/><text x="90.0699%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="89.8199%" y="469" width="0.2349%" height="15" fill="rgb(219,27,1)" fg:x="1147" fg:w="3"/><text x="90.0699%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="89.8199%" y="453" width="0.2349%" height="15" fill="rgb(217,82,32)" fg:x="1147" fg:w="3"/><text x="90.0699%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="89.8982%" y="437" width="0.1566%" height="15" fill="rgb(250,129,47)" fg:x="1148" fg:w="2"/><text x="90.1482%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="89.8982%" y="421" width="0.1566%" height="15" fill="rgb(253,88,35)" fg:x="1148" fg:w="2"/><text x="90.1482%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="89.8982%" y="405" width="0.1566%" height="15" fill="rgb(245,221,14)" fg:x="1148" fg:w="2"/><text x="90.1482%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="89.8982%" y="389" width="0.1566%" height="15" fill="rgb(217,119,54)" fg:x="1148" fg:w="2"/><text x="90.1482%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="89.8982%" y="373" width="0.1566%" height="15" fill="rgb(247,128,31)" fg:x="1148" fg:w="2"/><text x="90.1482%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="89.8982%" y="357" width="0.1566%" height="15" fill="rgb(211,99,22)" fg:x="1148" fg:w="2"/><text x="90.1482%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="89.8982%" y="341" width="0.1566%" height="15" fill="rgb(212,20,17)" fg:x="1148" fg:w="2"/><text x="90.1482%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="89.8982%" y="325" width="0.1566%" height="15" fill="rgb(209,159,29)" fg:x="1148" fg:w="2"/><text x="90.1482%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="89.8982%" y="309" width="0.1566%" height="15" fill="rgb(222,177,53)" fg:x="1148" fg:w="2"/><text x="90.1482%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="89.8982%" y="293" width="0.1566%" height="15" fill="rgb(234,46,43)" fg:x="1148" fg:w="2"/><text x="90.1482%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="89.8982%" y="277" width="0.1566%" height="15" fill="rgb(208,108,14)" fg:x="1148" fg:w="2"/><text x="90.1482%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="89.8982%" y="261" width="0.1566%" height="15" fill="rgb(226,78,53)" fg:x="1148" fg:w="2"/><text x="90.1482%" y="271.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="90.0548%" y="485" width="0.0783%" height="15" fill="rgb(230,20,41)" fg:x="1150" fg:w="1"/><text x="90.3048%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.1331%" y="453" width="0.0783%" height="15" fill="rgb(213,195,35)" fg:x="1151" fg:w="1"/><text x="90.3831%" y="463.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (19 samples, 1.49%)</title><rect x="88.8019%" y="533" width="1.4879%" height="15" fill="rgb(242,62,36)" fg:x="1134" fg:w="19"/><text x="89.0519%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.47%)</title><rect x="89.8199%" y="517" width="0.4699%" height="15" fill="rgb(222,210,37)" fg:x="1147" fg:w="6"/><text x="90.0699%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (6 samples, 0.47%)</title><rect x="89.8199%" y="501" width="0.4699%" height="15" fill="rgb(232,107,19)" fg:x="1147" fg:w="6"/><text x="90.0699%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="90.1331%" y="485" width="0.1566%" height="15" fill="rgb(235,85,17)" fg:x="1151" fg:w="2"/><text x="90.3831%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="90.1331%" y="469" width="0.1566%" height="15" fill="rgb(219,195,31)" fg:x="1151" fg:w="2"/><text x="90.3831%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="90.2114%" y="453" width="0.0783%" height="15" fill="rgb(231,183,30)" fg:x="1152" fg:w="1"/><text x="90.4614%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="90.2114%" y="437" width="0.0783%" height="15" fill="rgb(212,0,11)" fg:x="1152" fg:w="1"/><text x="90.4614%" y="447.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="90.2114%" y="421" width="0.0783%" height="15" fill="rgb(249,53,54)" fg:x="1152" fg:w="1"/><text x="90.4614%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.2114%" y="405" width="0.0783%" height="15" fill="rgb(211,118,13)" fg:x="1152" fg:w="1"/><text x="90.4614%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.2114%" y="389" width="0.0783%" height="15" fill="rgb(237,42,9)" fg:x="1152" fg:w="1"/><text x="90.4614%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.2114%" y="373" width="0.0783%" height="15" fill="rgb(227,68,32)" fg:x="1152" fg:w="1"/><text x="90.4614%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.4464%" y="469" width="0.0783%" height="15" fill="rgb(238,10,7)" fg:x="1155" fg:w="1"/><text x="90.6964%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.4464%" y="453" width="0.0783%" height="15" fill="rgb(224,42,12)" fg:x="1155" fg:w="1"/><text x="90.6964%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.4464%" y="437" width="0.0783%" height="15" fill="rgb(252,190,5)" fg:x="1155" fg:w="1"/><text x="90.6964%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.4464%" y="421" width="0.0783%" height="15" fill="rgb(220,214,39)" fg:x="1155" fg:w="1"/><text x="90.6964%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.4464%" y="405" width="0.0783%" height="15" fill="rgb(247,98,4)" fg:x="1155" fg:w="1"/><text x="90.6964%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="90.4464%" y="389" width="0.0783%" height="15" fill="rgb(211,60,12)" fg:x="1155" fg:w="1"/><text x="90.6964%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="90.4464%" y="373" width="0.0783%" height="15" fill="rgb(224,42,10)" fg:x="1155" fg:w="1"/><text x="90.6964%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="90.3681%" y="485" width="0.3132%" height="15" fill="rgb(217,167,4)" fg:x="1154" fg:w="4"/><text x="90.6181%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="90.5247%" y="469" width="0.1566%" height="15" fill="rgb(253,18,17)" fg:x="1156" fg:w="2"/><text x="90.7747%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.6030%" y="453" width="0.0783%" height="15" fill="rgb(249,186,44)" fg:x="1157" fg:w="1"/><text x="90.8530%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.6030%" y="437" width="0.0783%" height="15" fill="rgb(254,124,54)" fg:x="1157" fg:w="1"/><text x="90.8530%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.6030%" y="421" width="0.0783%" height="15" fill="rgb(220,124,39)" fg:x="1157" fg:w="1"/><text x="90.8530%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.6030%" y="405" width="0.0783%" height="15" fill="rgb(225,96,46)" fg:x="1157" fg:w="1"/><text x="90.8530%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.6030%" y="389" width="0.0783%" height="15" fill="rgb(221,106,12)" fg:x="1157" fg:w="1"/><text x="90.8530%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.6030%" y="373" width="0.0783%" height="15" fill="rgb(227,133,23)" fg:x="1157" fg:w="1"/><text x="90.8530%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="90.6030%" y="357" width="0.0783%" height="15" fill="rgb(216,44,52)" fg:x="1157" fg:w="1"/><text x="90.8530%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="90.6030%" y="341" width="0.0783%" height="15" fill="rgb(239,149,7)" fg:x="1157" fg:w="1"/><text x="90.8530%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="90.8379%" y="213" width="0.0783%" height="15" fill="rgb(211,157,31)" fg:x="1160" fg:w="1"/><text x="91.0879%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.8379%" y="197" width="0.0783%" height="15" fill="rgb(206,215,22)" fg:x="1160" fg:w="1"/><text x="91.0879%" y="207.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="90.8379%" y="181" width="0.0783%" height="15" fill="rgb(208,113,15)" fg:x="1160" fg:w="1"/><text x="91.0879%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="90.8379%" y="165" width="0.0783%" height="15" fill="rgb(207,189,15)" fg:x="1160" fg:w="1"/><text x="91.0879%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.8379%" y="149" width="0.0783%" height="15" fill="rgb(231,115,4)" fg:x="1160" fg:w="1"/><text x="91.0879%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="90.8379%" y="245" width="0.1566%" height="15" fill="rgb(253,117,2)" fg:x="1160" fg:w="2"/><text x="91.0879%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="90.8379%" y="229" width="0.1566%" height="15" fill="rgb(248,48,24)" fg:x="1160" fg:w="2"/><text x="91.0879%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="90.9162%" y="213" width="0.0783%" height="15" fill="rgb(241,28,46)" fg:x="1161" fg:w="1"/><text x="91.1662%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="90.9162%" y="197" width="0.0783%" height="15" fill="rgb(216,165,52)" fg:x="1161" fg:w="1"/><text x="91.1662%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="90.9945%" y="245" width="0.0783%" height="15" fill="rgb(220,222,34)" fg:x="1162" fg:w="1"/><text x="91.2445%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="90.9945%" y="229" width="0.0783%" height="15" fill="rgb(247,222,49)" fg:x="1162" fg:w="1"/><text x="91.2445%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="90.9945%" y="213" width="0.0783%" height="15" fill="rgb(240,10,31)" fg:x="1162" fg:w="1"/><text x="91.2445%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.9945%" y="197" width="0.0783%" height="15" fill="rgb(221,199,35)" fg:x="1162" fg:w="1"/><text x="91.2445%" y="207.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (4 samples, 0.31%)</title><rect x="90.8379%" y="293" width="0.3132%" height="15" fill="rgb(230,223,11)" fg:x="1160" fg:w="4"/><text x="91.0879%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="90.8379%" y="277" width="0.3132%" height="15" fill="rgb(218,82,45)" fg:x="1160" fg:w="4"/><text x="91.0879%" y="287.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (4 samples, 0.31%)</title><rect x="90.8379%" y="261" width="0.3132%" height="15" fill="rgb(233,213,33)" fg:x="1160" fg:w="4"/><text x="91.0879%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.0728%" y="245" width="0.0783%" height="15" fill="rgb(210,143,52)" fg:x="1163" fg:w="1"/><text x="91.3228%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.0728%" y="229" width="0.0783%" height="15" fill="rgb(206,95,4)" fg:x="1163" fg:w="1"/><text x="91.3228%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="91.0728%" y="213" width="0.0783%" height="15" fill="rgb(246,164,46)" fg:x="1163" fg:w="1"/><text x="91.3228%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.0728%" y="197" width="0.0783%" height="15" fill="rgb(213,210,47)" fg:x="1163" fg:w="1"/><text x="91.3228%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.0728%" y="181" width="0.0783%" height="15" fill="rgb(210,12,38)" fg:x="1163" fg:w="1"/><text x="91.3228%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.0728%" y="165" width="0.0783%" height="15" fill="rgb(252,192,54)" fg:x="1163" fg:w="1"/><text x="91.3228%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.0728%" y="149" width="0.0783%" height="15" fill="rgb(242,92,6)" fg:x="1163" fg:w="1"/><text x="91.3228%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.2294%" y="261" width="0.0783%" height="15" fill="rgb(253,154,15)" fg:x="1165" fg:w="1"/><text x="91.4794%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.2294%" y="245" width="0.0783%" height="15" fill="rgb(209,20,43)" fg:x="1165" fg:w="1"/><text x="91.4794%" y="255.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (7 samples, 0.55%)</title><rect x="90.8379%" y="357" width="0.5482%" height="15" fill="rgb(232,28,49)" fg:x="1160" fg:w="7"/><text x="91.0879%" y="367.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (7 samples, 0.55%)</title><rect x="90.8379%" y="341" width="0.5482%" height="15" fill="rgb(248,131,53)" fg:x="1160" fg:w="7"/><text x="91.0879%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.55%)</title><rect x="90.8379%" y="325" width="0.5482%" height="15" fill="rgb(214,16,30)" fg:x="1160" fg:w="7"/><text x="91.0879%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.55%)</title><rect x="90.8379%" y="309" width="0.5482%" height="15" fill="rgb(245,16,0)" fg:x="1160" fg:w="7"/><text x="91.0879%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="91.1511%" y="293" width="0.2349%" height="15" fill="rgb(245,17,35)" fg:x="1164" fg:w="3"/><text x="91.4011%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="91.1511%" y="277" width="0.2349%" height="15" fill="rgb(249,27,53)" fg:x="1164" fg:w="3"/><text x="91.4011%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="91.3078%" y="261" width="0.0783%" height="15" fill="rgb(214,73,24)" fg:x="1166" fg:w="1"/><text x="91.5578%" y="271.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="91.3078%" y="245" width="0.0783%" height="15" fill="rgb(223,84,37)" fg:x="1166" fg:w="1"/><text x="91.5578%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.5427%" y="309" width="0.0783%" height="15" fill="rgb(210,109,28)" fg:x="1169" fg:w="1"/><text x="91.7927%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.5427%" y="293" width="0.0783%" height="15" fill="rgb(208,186,6)" fg:x="1169" fg:w="1"/><text x="91.7927%" y="303.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="91.5427%" y="277" width="0.0783%" height="15" fill="rgb(235,201,30)" fg:x="1169" fg:w="1"/><text x="91.7927%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.6210%" y="277" width="0.0783%" height="15" fill="rgb(216,198,48)" fg:x="1170" fg:w="1"/><text x="91.8710%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.6210%" y="261" width="0.0783%" height="15" fill="rgb(254,186,25)" fg:x="1170" fg:w="1"/><text x="91.8710%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.6993%" y="245" width="0.0783%" height="15" fill="rgb(227,87,5)" fg:x="1171" fg:w="1"/><text x="91.9493%" y="255.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="91.6993%" y="229" width="0.0783%" height="15" fill="rgb(236,205,25)" fg:x="1171" fg:w="1"/><text x="91.9493%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.7776%" y="245" width="0.0783%" height="15" fill="rgb(229,99,32)" fg:x="1172" fg:w="1"/><text x="92.0276%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.7776%" y="229" width="0.0783%" height="15" fill="rgb(231,177,31)" fg:x="1172" fg:w="1"/><text x="92.0276%" y="239.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="91.7776%" y="213" width="0.0783%" height="15" fill="rgb(246,15,2)" fg:x="1172" fg:w="1"/><text x="92.0276%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="91.8559%" y="213" width="0.1566%" height="15" fill="rgb(207,39,15)" fg:x="1173" fg:w="2"/><text x="92.1059%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.9342%" y="197" width="0.0783%" height="15" fill="rgb(207,44,9)" fg:x="1174" fg:w="1"/><text x="92.1842%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.0125%" y="213" width="0.0783%" height="15" fill="rgb(225,224,33)" fg:x="1175" fg:w="1"/><text x="92.2625%" y="223.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="92.0908%" y="197" width="0.0783%" height="15" fill="rgb(252,151,3)" fg:x="1176" fg:w="1"/><text x="92.3408%" y="207.50"></text></g><g><title>engine::internal::Entities::add_persisted (19 samples, 1.49%)</title><rect x="90.7596%" y="389" width="1.4879%" height="15" fill="rgb(211,140,13)" fg:x="1159" fg:w="19"/><text x="91.0096%" y="399.50"></text></g><g><title>kernel::model::deserialize_entity (19 samples, 1.49%)</title><rect x="90.7596%" y="373" width="1.4879%" height="15" fill="rgb(239,225,17)" fg:x="1159" fg:w="19"/><text x="91.0096%" y="383.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.86%)</title><rect x="91.3861%" y="357" width="0.8614%" height="15" fill="rgb(223,170,52)" fg:x="1167" fg:w="11"/><text x="91.6361%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.86%)</title><rect x="91.3861%" y="341" width="0.8614%" height="15" fill="rgb(212,64,21)" fg:x="1167" fg:w="11"/><text x="91.6361%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.86%)</title><rect x="91.3861%" y="325" width="0.8614%" height="15" fill="rgb(236,126,48)" fg:x="1167" fg:w="11"/><text x="91.6361%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.63%)</title><rect x="91.6210%" y="309" width="0.6265%" height="15" fill="rgb(209,135,11)" fg:x="1170" fg:w="8"/><text x="91.8710%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.63%)</title><rect x="91.6210%" y="293" width="0.6265%" height="15" fill="rgb(228,126,40)" fg:x="1170" fg:w="8"/><text x="91.8710%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.55%)</title><rect x="91.6993%" y="277" width="0.5482%" height="15" fill="rgb(205,196,36)" fg:x="1171" fg:w="7"/><text x="91.9493%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.55%)</title><rect x="91.6993%" y="261" width="0.5482%" height="15" fill="rgb(243,160,33)" fg:x="1171" fg:w="7"/><text x="91.9493%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.39%)</title><rect x="91.8559%" y="245" width="0.3915%" height="15" fill="rgb(210,84,20)" fg:x="1173" fg:w="5"/><text x="92.1059%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="91.8559%" y="229" width="0.3915%" height="15" fill="rgb(228,213,30)" fg:x="1173" fg:w="5"/><text x="92.1059%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="92.0908%" y="213" width="0.1566%" height="15" fill="rgb(252,33,45)" fg:x="1176" fg:w="2"/><text x="92.3408%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.1691%" y="197" width="0.0783%" height="15" fill="rgb(254,227,20)" fg:x="1177" fg:w="1"/><text x="92.4191%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.1691%" y="181" width="0.0783%" height="15" fill="rgb(228,192,2)" fg:x="1177" fg:w="1"/><text x="92.4191%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.1691%" y="165" width="0.0783%" height="15" fill="rgb(233,32,8)" fg:x="1177" fg:w="1"/><text x="92.4191%" y="175.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (21 samples, 1.64%)</title><rect x="90.6813%" y="485" width="1.6445%" height="15" fill="rgb(220,146,47)" fg:x="1158" fg:w="21"/><text x="90.9313%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (20 samples, 1.57%)</title><rect x="90.7596%" y="469" width="1.5662%" height="15" fill="rgb(246,194,1)" fg:x="1159" fg:w="20"/><text x="91.0096%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 1.57%)</title><rect x="90.7596%" y="453" width="1.5662%" height="15" fill="rgb(218,203,9)" fg:x="1159" fg:w="20"/><text x="91.0096%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (20 samples, 1.57%)</title><rect x="90.7596%" y="437" width="1.5662%" height="15" fill="rgb(237,97,14)" fg:x="1159" fg:w="20"/><text x="91.0096%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (20 samples, 1.57%)</title><rect x="90.7596%" y="421" width="1.5662%" height="15" fill="rgb(239,76,15)" fg:x="1159" fg:w="20"/><text x="91.0096%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (20 samples, 1.57%)</title><rect x="90.7596%" y="405" width="1.5662%" height="15" fill="rgb(222,53,45)" fg:x="1159" fg:w="20"/><text x="91.0096%" y="415.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="92.2475%" y="389" width="0.0783%" height="15" fill="rgb(237,88,5)" fg:x="1178" fg:w="1"/><text x="92.4975%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="92.2475%" y="373" width="0.0783%" height="15" fill="rgb(218,223,35)" fg:x="1178" fg:w="1"/><text x="92.4975%" y="383.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="92.4041%" y="421" width="0.1566%" height="15" fill="rgb(243,229,38)" fg:x="1180" fg:w="2"/><text x="92.6541%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.4041%" y="405" width="0.1566%" height="15" fill="rgb(240,75,41)" fg:x="1180" fg:w="2"/><text x="92.6541%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.4041%" y="389" width="0.1566%" height="15" fill="rgb(209,110,37)" fg:x="1180" fg:w="2"/><text x="92.6541%" y="399.50"></text></g><g><title>plugins_core::tools::get_contained_keys (30 samples, 2.35%)</title><rect x="90.2897%" y="533" width="2.3493%" height="15" fill="rgb(221,130,46)" fg:x="1153" fg:w="30"/><text x="90.5397%" y="543.50">p..</text></g><g><title>kernel::model::entry::Entry::scope (29 samples, 2.27%)</title><rect x="90.3681%" y="517" width="2.2709%" height="15" fill="rgb(237,160,20)" fg:x="1154" fg:w="29"/><text x="90.6181%" y="527.50">k..</text></g><g><title>kernel::model::Entity::load_scope (29 samples, 2.27%)</title><rect x="90.3681%" y="501" width="2.2709%" height="15" fill="rgb(234,126,24)" fg:x="1154" fg:w="29"/><text x="90.6181%" y="511.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="92.3258%" y="485" width="0.3132%" height="15" fill="rgb(207,177,9)" fg:x="1179" fg:w="4"/><text x="92.5758%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="92.3258%" y="469" width="0.3132%" height="15" fill="rgb(231,191,33)" fg:x="1179" fg:w="4"/><text x="92.5758%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (4 samples, 0.31%)</title><rect x="92.3258%" y="453" width="0.3132%" height="15" fill="rgb(207,42,1)" fg:x="1179" fg:w="4"/><text x="92.5758%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.23%)</title><rect x="92.4041%" y="437" width="0.2349%" height="15" fill="rgb(218,34,50)" fg:x="1180" fg:w="3"/><text x="92.6541%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.5607%" y="421" width="0.0783%" height="15" fill="rgb(254,126,39)" fg:x="1182" fg:w="1"/><text x="92.8107%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="92.6390%" y="517" width="0.0783%" height="15" fill="rgb(251,17,26)" fg:x="1183" fg:w="1"/><text x="92.8890%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (51 samples, 3.99%)</title><rect x="88.8019%" y="565" width="3.9937%" height="15" fill="rgb(252,215,34)" fg:x="1134" fg:w="51"/><text x="89.0519%" y="575.50">&lt;all..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (51 samples, 3.99%)</title><rect x="88.8019%" y="549" width="3.9937%" height="15" fill="rgb(217,120,44)" fg:x="1134" fg:w="51"/><text x="89.0519%" y="559.50">&lt;cor..</text></g><g><title>plugins_core::tools::get_occupant_keys (2 samples, 0.16%)</title><rect x="92.6390%" y="533" width="0.1566%" height="15" fill="rgb(211,31,11)" fg:x="1183" fg:w="2"/><text x="92.8890%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="92.7173%" y="517" width="0.0783%" height="15" fill="rgb(222,69,51)" fg:x="1184" fg:w="1"/><text x="92.9673%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="92.7173%" y="501" width="0.0783%" height="15" fill="rgb(215,229,42)" fg:x="1184" fg:w="1"/><text x="92.9673%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="92.7173%" y="485" width="0.0783%" height="15" fill="rgb(212,102,15)" fg:x="1184" fg:w="1"/><text x="92.9673%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="92.7173%" y="469" width="0.0783%" height="15" fill="rgb(205,179,41)" fg:x="1184" fg:w="1"/><text x="92.9673%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="93.0305%" y="517" width="0.1566%" height="15" fill="rgb(219,148,46)" fg:x="1188" fg:w="2"/><text x="93.2805%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="93.0305%" y="501" width="0.1566%" height="15" fill="rgb(243,40,19)" fg:x="1188" fg:w="2"/><text x="93.2805%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="93.0305%" y="485" width="0.1566%" height="15" fill="rgb(208,206,34)" fg:x="1188" fg:w="2"/><text x="93.2805%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="93.0305%" y="469" width="0.1566%" height="15" fill="rgb(244,184,38)" fg:x="1188" fg:w="2"/><text x="93.2805%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="93.0305%" y="453" width="0.1566%" height="15" fill="rgb(244,151,47)" fg:x="1188" fg:w="2"/><text x="93.2805%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="93.0305%" y="437" width="0.1566%" height="15" fill="rgb(236,134,42)" fg:x="1188" fg:w="2"/><text x="93.2805%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="93.0305%" y="421" width="0.1566%" height="15" fill="rgb(233,93,22)" fg:x="1188" fg:w="2"/><text x="93.2805%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="93.0305%" y="405" width="0.1566%" height="15" fill="rgb(211,202,10)" fg:x="1188" fg:w="2"/><text x="93.2805%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="93.0305%" y="389" width="0.1566%" height="15" fill="rgb(240,63,8)" fg:x="1188" fg:w="2"/><text x="93.2805%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="93.0305%" y="373" width="0.1566%" height="15" fill="rgb(214,9,4)" fg:x="1188" fg:w="2"/><text x="93.2805%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="93.0305%" y="357" width="0.1566%" height="15" fill="rgb(243,66,45)" fg:x="1188" fg:w="2"/><text x="93.2805%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="93.0305%" y="341" width="0.1566%" height="15" fill="rgb(220,50,42)" fg:x="1188" fg:w="2"/><text x="93.2805%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="93.1872%" y="517" width="0.0783%" height="15" fill="rgb(220,134,27)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="93.1872%" y="501" width="0.0783%" height="15" fill="rgb(246,151,50)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="93.1872%" y="485" width="0.0783%" height="15" fill="rgb(238,216,27)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="93.1872%" y="469" width="0.0783%" height="15" fill="rgb(250,92,11)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="93.1872%" y="453" width="0.0783%" height="15" fill="rgb(248,183,6)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="93.1872%" y="437" width="0.0783%" height="15" fill="rgb(211,204,50)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="93.1872%" y="421" width="0.0783%" height="15" fill="rgb(252,55,47)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="93.1872%" y="405" width="0.0783%" height="15" fill="rgb(240,198,32)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="93.1872%" y="389" width="0.0783%" height="15" fill="rgb(224,203,19)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="93.1872%" y="373" width="0.0783%" height="15" fill="rgb(205,27,16)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="383.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="93.1872%" y="357" width="0.0783%" height="15" fill="rgb(224,226,17)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="93.1872%" y="341" width="0.0783%" height="15" fill="rgb(205,216,54)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="93.1872%" y="325" width="0.0783%" height="15" fill="rgb(248,168,46)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="93.1872%" y="309" width="0.0783%" height="15" fill="rgb(226,111,45)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.1872%" y="293" width="0.0783%" height="15" fill="rgb(231,15,9)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.1872%" y="277" width="0.0783%" height="15" fill="rgb(243,168,3)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="287.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="93.1872%" y="261" width="0.0783%" height="15" fill="rgb(221,220,54)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="93.1872%" y="245" width="0.0783%" height="15" fill="rgb(232,174,38)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="93.1872%" y="229" width="0.0783%" height="15" fill="rgb(205,14,38)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="93.1872%" y="213" width="0.0783%" height="15" fill="rgb(234,89,19)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="93.1872%" y="197" width="0.0783%" height="15" fill="rgb(216,68,51)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="93.1872%" y="181" width="0.0783%" height="15" fill="rgb(213,49,2)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="93.1872%" y="165" width="0.0783%" height="15" fill="rgb(242,146,30)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="93.1872%" y="149" width="0.0783%" height="15" fill="rgb(224,188,11)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="93.1872%" y="133" width="0.0783%" height="15" fill="rgb(213,159,11)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="93.1872%" y="117" width="0.0783%" height="15" fill="rgb(229,13,31)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="127.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="93.1872%" y="101" width="0.0783%" height="15" fill="rgb(209,103,11)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="111.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="93.1872%" y="85" width="0.0783%" height="15" fill="rgb(206,3,4)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="95.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="93.1872%" y="69" width="0.0783%" height="15" fill="rgb(252,10,49)" fg:x="1190" fg:w="1"/><text x="93.4372%" y="79.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="93.8919%" y="405" width="0.0783%" height="15" fill="rgb(217,160,32)" fg:x="1199" fg:w="1"/><text x="94.1419%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.3618%" y="261" width="0.0783%" height="15" fill="rgb(249,196,0)" fg:x="1205" fg:w="1"/><text x="94.6118%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.3618%" y="245" width="0.0783%" height="15" fill="rgb(213,17,48)" fg:x="1205" fg:w="1"/><text x="94.6118%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.31%)</title><rect x="94.2835%" y="277" width="0.3132%" height="15" fill="rgb(206,42,46)" fg:x="1204" fg:w="4"/><text x="94.5335%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="94.4401%" y="261" width="0.1566%" height="15" fill="rgb(212,105,24)" fg:x="1206" fg:w="2"/><text x="94.6901%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.5184%" y="245" width="0.0783%" height="15" fill="rgb(243,216,30)" fg:x="1207" fg:w="1"/><text x="94.7684%" y="255.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (6 samples, 0.47%)</title><rect x="94.2052%" y="309" width="0.4699%" height="15" fill="rgb(207,121,3)" fg:x="1203" fg:w="6"/><text x="94.4552%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (5 samples, 0.39%)</title><rect x="94.2835%" y="293" width="0.3915%" height="15" fill="rgb(249,78,0)" fg:x="1204" fg:w="5"/><text x="94.5335%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="94.5967%" y="277" width="0.0783%" height="15" fill="rgb(244,151,32)" fg:x="1208" fg:w="1"/><text x="94.8467%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.5967%" y="261" width="0.0783%" height="15" fill="rgb(228,63,25)" fg:x="1208" fg:w="1"/><text x="94.8467%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.63%)</title><rect x="94.1269%" y="325" width="0.6265%" height="15" fill="rgb(231,158,23)" fg:x="1202" fg:w="8"/><text x="94.3769%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.6750%" y="309" width="0.0783%" height="15" fill="rgb(248,107,23)" fg:x="1209" fg:w="1"/><text x="94.9250%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.6750%" y="293" width="0.0783%" height="15" fill="rgb(215,168,21)" fg:x="1209" fg:w="1"/><text x="94.9250%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (9 samples, 0.70%)</title><rect x="94.1269%" y="341" width="0.7048%" height="15" fill="rgb(227,83,22)" fg:x="1202" fg:w="9"/><text x="94.3769%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="94.7533%" y="325" width="0.0783%" height="15" fill="rgb(217,118,43)" fg:x="1210" fg:w="1"/><text x="95.0033%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.7533%" y="309" width="0.0783%" height="15" fill="rgb(229,220,41)" fg:x="1210" fg:w="1"/><text x="95.0033%" y="319.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="94.9099%" y="261" width="0.0783%" height="15" fill="rgb(254,146,46)" fg:x="1212" fg:w="1"/><text x="95.1599%" y="271.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (12 samples, 0.94%)</title><rect x="94.1269%" y="357" width="0.9397%" height="15" fill="rgb(233,208,31)" fg:x="1202" fg:w="12"/><text x="94.3769%" y="367.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.23%)</title><rect x="94.8316%" y="341" width="0.2349%" height="15" fill="rgb(222,162,7)" fg:x="1211" fg:w="3"/><text x="95.0816%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.23%)</title><rect x="94.8316%" y="325" width="0.2349%" height="15" fill="rgb(230,117,45)" fg:x="1211" fg:w="3"/><text x="95.0816%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (3 samples, 0.23%)</title><rect x="94.8316%" y="309" width="0.2349%" height="15" fill="rgb(239,163,6)" fg:x="1211" fg:w="3"/><text x="95.0816%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (3 samples, 0.23%)</title><rect x="94.8316%" y="293" width="0.2349%" height="15" fill="rgb(246,130,17)" fg:x="1211" fg:w="3"/><text x="95.0816%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.23%)</title><rect x="94.8316%" y="277" width="0.2349%" height="15" fill="rgb(216,84,5)" fg:x="1211" fg:w="3"/><text x="95.0816%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.9883%" y="261" width="0.0783%" height="15" fill="rgb(230,200,21)" fg:x="1213" fg:w="1"/><text x="95.2383%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="94.9883%" y="245" width="0.0783%" height="15" fill="rgb(224,2,8)" fg:x="1213" fg:w="1"/><text x="95.2383%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="94.9883%" y="229" width="0.0783%" height="15" fill="rgb(238,178,10)" fg:x="1213" fg:w="1"/><text x="95.2383%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 1.25%)</title><rect x="93.9702%" y="373" width="1.2529%" height="15" fill="rgb(242,153,24)" fg:x="1200" fg:w="16"/><text x="94.2202%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.0666%" y="357" width="0.1566%" height="15" fill="rgb(242,32,48)" fg:x="1214" fg:w="2"/><text x="95.3166%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.0666%" y="341" width="0.1566%" height="15" fill="rgb(227,36,0)" fg:x="1214" fg:w="2"/><text x="95.3166%" y="351.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (17 samples, 1.33%)</title><rect x="93.9702%" y="405" width="1.3312%" height="15" fill="rgb(251,33,35)" fg:x="1200" fg:w="17"/><text x="94.2202%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (17 samples, 1.33%)</title><rect x="93.9702%" y="389" width="1.3312%" height="15" fill="rgb(232,168,51)" fg:x="1200" fg:w="17"/><text x="94.2202%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="95.2232%" y="373" width="0.0783%" height="15" fill="rgb(228,56,10)" fg:x="1216" fg:w="1"/><text x="95.4732%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.2232%" y="357" width="0.0783%" height="15" fill="rgb(231,10,26)" fg:x="1216" fg:w="1"/><text x="95.4732%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 1.96%)</title><rect x="93.6570%" y="421" width="1.9577%" height="15" fill="rgb(226,202,12)" fg:x="1196" fg:w="25"/><text x="93.9070%" y="431.50">&lt;..</text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.31%)</title><rect x="95.3015%" y="405" width="0.3132%" height="15" fill="rgb(251,49,21)" fg:x="1217" fg:w="4"/><text x="95.5515%" y="415.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (32 samples, 2.51%)</title><rect x="93.4221%" y="453" width="2.5059%" height="15" fill="rgb(206,228,28)" fg:x="1193" fg:w="32"/><text x="93.6721%" y="463.50">&lt;r..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (30 samples, 2.35%)</title><rect x="93.5787%" y="437" width="2.3493%" height="15" fill="rgb(205,198,31)" fg:x="1195" fg:w="30"/><text x="93.8287%" y="447.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.31%)</title><rect x="95.6147%" y="421" width="0.3132%" height="15" fill="rgb(213,69,1)" fg:x="1221" fg:w="4"/><text x="95.8647%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.8496%" y="405" width="0.0783%" height="15" fill="rgb(209,177,9)" fg:x="1224" fg:w="1"/><text x="96.0996%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 2.90%)</title><rect x="93.2655%" y="469" width="2.8974%" height="15" fill="rgb(227,119,30)" fg:x="1191" fg:w="37"/><text x="93.5155%" y="479.50">&lt;c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.23%)</title><rect x="95.9280%" y="453" width="0.2349%" height="15" fill="rgb(234,106,41)" fg:x="1225" fg:w="3"/><text x="96.1780%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="96.0846%" y="437" width="0.0783%" height="15" fill="rgb(244,103,47)" fg:x="1227" fg:w="1"/><text x="96.3346%" y="447.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (42 samples, 3.29%)</title><rect x="93.2655%" y="501" width="3.2890%" height="15" fill="rgb(212,211,25)" fg:x="1191" fg:w="42"/><text x="93.5155%" y="511.50">&lt;rp..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (42 samples, 3.29%)</title><rect x="93.2655%" y="485" width="3.2890%" height="15" fill="rgb(208,63,53)" fg:x="1191" fg:w="42"/><text x="93.5155%" y="495.50">&lt;st..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.39%)</title><rect x="96.1629%" y="469" width="0.3915%" height="15" fill="rgb(213,176,21)" fg:x="1228" fg:w="5"/><text x="96.4129%" y="479.50"></text></g><g><title>__libc_malloc (5 samples, 0.39%)</title><rect x="96.1629%" y="453" width="0.3915%" height="15" fill="rgb(243,124,12)" fg:x="1228" fg:w="5"/><text x="96.4129%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.7110%" y="453" width="0.0783%" height="15" fill="rgb(239,2,35)" fg:x="1235" fg:w="1"/><text x="96.9610%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.39%)</title><rect x="96.7894%" y="453" width="0.3915%" height="15" fill="rgb(253,169,22)" fg:x="1236" fg:w="5"/><text x="97.0394%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="96.8677%" y="437" width="0.3132%" height="15" fill="rgb(254,51,12)" fg:x="1237" fg:w="4"/><text x="97.1177%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.23%)</title><rect x="96.9460%" y="421" width="0.2349%" height="15" fill="rgb(244,17,47)" fg:x="1238" fg:w="3"/><text x="97.1960%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="97.1809%" y="437" width="0.0783%" height="15" fill="rgb(251,45,46)" fg:x="1241" fg:w="1"/><text x="97.4309%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="97.1809%" y="453" width="0.1566%" height="15" fill="rgb(223,87,43)" fg:x="1241" fg:w="2"/><text x="97.4309%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="97.2592%" y="437" width="0.0783%" height="15" fill="rgb(230,132,31)" fg:x="1242" fg:w="1"/><text x="97.5092%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.2592%" y="421" width="0.0783%" height="15" fill="rgb(206,99,1)" fg:x="1242" fg:w="1"/><text x="97.5092%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.2592%" y="405" width="0.0783%" height="15" fill="rgb(227,110,25)" fg:x="1242" fg:w="1"/><text x="97.5092%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.2592%" y="389" width="0.0783%" height="15" fill="rgb(217,182,7)" fg:x="1242" fg:w="1"/><text x="97.5092%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="97.3375%" y="453" width="0.0783%" height="15" fill="rgb(250,176,4)" fg:x="1243" fg:w="1"/><text x="97.5875%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="97.3375%" y="437" width="0.0783%" height="15" fill="rgb(244,98,30)" fg:x="1243" fg:w="1"/><text x="97.5875%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="97.3375%" y="421" width="0.0783%" height="15" fill="rgb(228,150,42)" fg:x="1243" fg:w="1"/><text x="97.5875%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="97.3375%" y="405" width="0.0783%" height="15" fill="rgb(231,91,46)" fg:x="1243" fg:w="1"/><text x="97.5875%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.4941%" y="405" width="0.0783%" height="15" fill="rgb(252,161,32)" fg:x="1245" fg:w="1"/><text x="97.7441%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.5724%" y="405" width="0.0783%" height="15" fill="rgb(236,69,41)" fg:x="1246" fg:w="1"/><text x="97.8224%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.5724%" y="389" width="0.0783%" height="15" fill="rgb(212,160,3)" fg:x="1246" fg:w="1"/><text x="97.8224%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.5724%" y="373" width="0.0783%" height="15" fill="rgb(216,5,50)" fg:x="1246" fg:w="1"/><text x="97.8224%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.8074%" y="373" width="0.1566%" height="15" fill="rgb(241,138,25)" fg:x="1249" fg:w="2"/><text x="98.0574%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.8074%" y="357" width="0.1566%" height="15" fill="rgb(239,42,18)" fg:x="1249" fg:w="2"/><text x="98.0574%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="97.8857%" y="341" width="0.0783%" height="15" fill="rgb(239,40,7)" fg:x="1250" fg:w="1"/><text x="98.1357%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.23%)</title><rect x="97.8074%" y="389" width="0.2349%" height="15" fill="rgb(239,11,31)" fg:x="1249" fg:w="3"/><text x="98.0574%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="97.9640%" y="373" width="0.0783%" height="15" fill="rgb(224,77,40)" fg:x="1251" fg:w="1"/><text x="98.2140%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.9640%" y="357" width="0.0783%" height="15" fill="rgb(226,15,5)" fg:x="1251" fg:w="1"/><text x="98.2140%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (10 samples, 0.78%)</title><rect x="97.4158%" y="453" width="0.7831%" height="15" fill="rgb(254,188,5)" fg:x="1244" fg:w="10"/><text x="97.6658%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.78%)</title><rect x="97.4158%" y="437" width="0.7831%" height="15" fill="rgb(241,148,52)" fg:x="1244" fg:w="10"/><text x="97.6658%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.78%)</title><rect x="97.4158%" y="421" width="0.7831%" height="15" fill="rgb(251,48,36)" fg:x="1244" fg:w="10"/><text x="97.6658%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (7 samples, 0.55%)</title><rect x="97.6507%" y="405" width="0.5482%" height="15" fill="rgb(243,83,13)" fg:x="1247" fg:w="7"/><text x="97.9007%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="98.0423%" y="389" width="0.1566%" height="15" fill="rgb(210,105,0)" fg:x="1252" fg:w="2"/><text x="98.2923%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="98.0423%" y="373" width="0.1566%" height="15" fill="rgb(239,60,36)" fg:x="1252" fg:w="2"/><text x="98.2923%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="98.0423%" y="357" width="0.1566%" height="15" fill="rgb(210,20,0)" fg:x="1252" fg:w="2"/><text x="98.2923%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.1206%" y="341" width="0.0783%" height="15" fill="rgb(244,26,53)" fg:x="1253" fg:w="1"/><text x="98.3706%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.5121%" y="373" width="0.0783%" height="15" fill="rgb(240,100,49)" fg:x="1258" fg:w="1"/><text x="98.7621%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="98.3555%" y="421" width="0.3132%" height="15" fill="rgb(250,46,45)" fg:x="1256" fg:w="4"/><text x="98.6055%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.31%)</title><rect x="98.3555%" y="405" width="0.3132%" height="15" fill="rgb(220,181,29)" fg:x="1256" fg:w="4"/><text x="98.6055%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="98.5121%" y="389" width="0.1566%" height="15" fill="rgb(213,137,33)" fg:x="1258" fg:w="2"/><text x="98.7621%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="98.5904%" y="373" width="0.0783%" height="15" fill="rgb(213,27,48)" fg:x="1259" fg:w="1"/><text x="98.8404%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.5904%" y="357" width="0.0783%" height="15" fill="rgb(245,180,39)" fg:x="1259" fg:w="1"/><text x="98.8404%" y="367.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (70 samples, 5.48%)</title><rect x="93.2655%" y="517" width="5.4816%" height="15" fill="rgb(212,158,42)" fg:x="1191" fg:w="70"/><text x="93.5155%" y="527.50">&lt;rpc_pr..</text></g><g><title>kernel::model::EntityPtr::to_json_value (28 samples, 2.19%)</title><rect x="96.5544%" y="501" width="2.1926%" height="15" fill="rgb(228,193,18)" fg:x="1233" fg:w="28"/><text x="96.8044%" y="511.50">k..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (28 samples, 2.19%)</title><rect x="96.5544%" y="485" width="2.1926%" height="15" fill="rgb(245,172,29)" fg:x="1233" fg:w="28"/><text x="96.8044%" y="495.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (28 samples, 2.19%)</title><rect x="96.5544%" y="469" width="2.1926%" height="15" fill="rgb(207,98,24)" fg:x="1233" fg:w="28"/><text x="96.8044%" y="479.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.55%)</title><rect x="98.1989%" y="453" width="0.5482%" height="15" fill="rgb(249,92,26)" fg:x="1254" fg:w="7"/><text x="98.4489%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (6 samples, 0.47%)</title><rect x="98.2772%" y="437" width="0.4699%" height="15" fill="rgb(217,176,26)" fg:x="1255" fg:w="6"/><text x="98.5272%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="98.6688%" y="421" width="0.0783%" height="15" fill="rgb(221,8,39)" fg:x="1260" fg:w="1"/><text x="98.9188%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.7471%" y="501" width="0.0783%" height="15" fill="rgb(208,90,18)" fg:x="1261" fg:w="1"/><text x="98.9971%" y="511.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (137 samples, 10.73%)</title><rect x="88.1754%" y="597" width="10.7283%" height="15" fill="rgb(207,202,30)" fg:x="1126" fg:w="137"/><text x="88.4254%" y="607.50">&lt;plugins_rpc::se..</text></g><g><title>core::iter::adapters::try_process (129 samples, 10.10%)</title><rect x="88.8019%" y="581" width="10.1018%" height="15" fill="rgb(231,124,22)" fg:x="1134" fg:w="129"/><text x="89.0519%" y="591.50">core::iter::ada..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (78 samples, 6.11%)</title><rect x="92.7956%" y="565" width="6.1081%" height="15" fill="rgb(206,15,5)" fg:x="1185" fg:w="78"/><text x="93.0456%" y="575.50">alloc::v..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (76 samples, 5.95%)</title><rect x="92.9522%" y="549" width="5.9514%" height="15" fill="rgb(239,16,52)" fg:x="1187" fg:w="76"/><text x="93.2022%" y="559.50">&lt;core::i..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (76 samples, 5.95%)</title><rect x="92.9522%" y="533" width="5.9514%" height="15" fill="rgb(245,213,29)" fg:x="1187" fg:w="76"/><text x="93.2022%" y="543.50">plugins_..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="98.7471%" y="517" width="0.1566%" height="15" fill="rgb(213,203,36)" fg:x="1261" fg:w="2"/><text x="98.9971%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.8254%" y="501" width="0.0783%" height="15" fill="rgb(209,55,18)" fg:x="1262" fg:w="1"/><text x="99.0754%" y="511.50"></text></g><g><title>&lt;rpc_proto::Surroundings as core::convert::TryFrom&lt;&amp;kernel::surround::Surroundings&gt;&gt;::try_from (1 samples, 0.08%)</title><rect x="98.9037%" y="597" width="0.0783%" height="15" fill="rgb(207,133,49)" fg:x="1263" fg:w="1"/><text x="99.1537%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="98.9037%" y="581" width="0.0783%" height="15" fill="rgb(240,33,46)" fg:x="1263" fg:w="1"/><text x="99.1537%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="98.9037%" y="565" width="0.0783%" height="15" fill="rgb(212,35,2)" fg:x="1263" fg:w="1"/><text x="99.1537%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="98.9037%" y="549" width="0.0783%" height="15" fill="rgb(231,119,28)" fg:x="1263" fg:w="1"/><text x="99.1537%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="98.9037%" y="533" width="0.0783%" height="15" fill="rgb(252,178,7)" fg:x="1263" fg:w="1"/><text x="99.1537%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="98.9037%" y="517" width="0.0783%" height="15" fill="rgb(251,91,4)" fg:x="1263" fg:w="1"/><text x="99.1537%" y="527.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (162 samples, 12.69%)</title><rect x="86.3743%" y="661" width="12.6860%" height="15" fill="rgb(233,122,19)" fg:x="1103" fg:w="162"/><text x="86.6243%" y="671.50">&lt;engine::perform::S..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (152 samples, 11.90%)</title><rect x="87.1574%" y="645" width="11.9029%" height="15" fill="rgb(231,208,46)" fg:x="1113" fg:w="152"/><text x="87.4074%" y="655.50">kernel::plugins::S..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (152 samples, 11.90%)</title><rect x="87.1574%" y="629" width="11.9029%" height="15" fill="rgb(243,15,41)" fg:x="1113" fg:w="152"/><text x="87.4074%" y="639.50">&lt;plugins_dynlib::D..</text></g><g><title>plugins_rpc::querying::have_surroundings (139 samples, 10.88%)</title><rect x="88.1754%" y="613" width="10.8849%" height="15" fill="rgb(210,32,43)" fg:x="1126" fg:w="139"/><text x="88.4254%" y="623.50">plugins_rpc::que..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.9820%" y="597" width="0.0783%" height="15" fill="rgb(222,177,15)" fg:x="1264" fg:w="1"/><text x="99.2320%" y="607.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.08%)</title><rect x="99.0603%" y="597" width="0.0783%" height="15" fill="rgb(244,121,34)" fg:x="1265" fg:w="1"/><text x="99.3103%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.1386%" y="469" width="0.1566%" height="15" fill="rgb(234,138,4)" fg:x="1266" fg:w="2"/><text x="99.3886%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.1386%" y="453" width="0.1566%" height="15" fill="rgb(240,97,48)" fg:x="1266" fg:w="2"/><text x="99.3886%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.1386%" y="437" width="0.1566%" height="15" fill="rgb(237,65,54)" fg:x="1266" fg:w="2"/><text x="99.3886%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.1386%" y="421" width="0.1566%" height="15" fill="rgb(214,25,24)" fg:x="1266" fg:w="2"/><text x="99.3886%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="99.1386%" y="405" width="0.1566%" height="15" fill="rgb(213,5,3)" fg:x="1266" fg:w="2"/><text x="99.3886%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.2169%" y="389" width="0.0783%" height="15" fill="rgb(219,81,29)" fg:x="1267" fg:w="1"/><text x="99.4669%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.2952%" y="469" width="0.0783%" height="15" fill="rgb(220,43,48)" fg:x="1268" fg:w="1"/><text x="99.5452%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.2952%" y="453" width="0.0783%" height="15" fill="rgb(239,157,2)" fg:x="1268" fg:w="1"/><text x="99.5452%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.2952%" y="437" width="0.0783%" height="15" fill="rgb(213,104,43)" fg:x="1268" fg:w="1"/><text x="99.5452%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.2952%" y="421" width="0.0783%" height="15" fill="rgb(237,84,9)" fg:x="1268" fg:w="1"/><text x="99.5452%" y="431.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (4 samples, 0.31%)</title><rect x="99.1386%" y="581" width="0.3132%" height="15" fill="rgb(252,6,33)" fg:x="1266" fg:w="4"/><text x="99.3886%" y="591.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (4 samples, 0.31%)</title><rect x="99.1386%" y="565" width="0.3132%" height="15" fill="rgb(251,172,22)" fg:x="1266" fg:w="4"/><text x="99.3886%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="99.1386%" y="549" width="0.3132%" height="15" fill="rgb(244,91,53)" fg:x="1266" fg:w="4"/><text x="99.3886%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="99.1386%" y="533" width="0.3132%" height="15" fill="rgb(219,29,30)" fg:x="1266" fg:w="4"/><text x="99.3886%" y="543.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (4 samples, 0.31%)</title><rect x="99.1386%" y="517" width="0.3132%" height="15" fill="rgb(213,3,15)" fg:x="1266" fg:w="4"/><text x="99.3886%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="99.1386%" y="501" width="0.3132%" height="15" fill="rgb(208,25,28)" fg:x="1266" fg:w="4"/><text x="99.3886%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (4 samples, 0.31%)</title><rect x="99.1386%" y="485" width="0.3132%" height="15" fill="rgb(252,144,25)" fg:x="1266" fg:w="4"/><text x="99.3886%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3735%" y="469" width="0.0783%" height="15" fill="rgb(226,220,25)" fg:x="1269" fg:w="1"/><text x="99.6235%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3735%" y="453" width="0.0783%" height="15" fill="rgb(212,131,28)" fg:x="1269" fg:w="1"/><text x="99.6235%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.3735%" y="437" width="0.0783%" height="15" fill="rgb(219,143,52)" fg:x="1269" fg:w="1"/><text x="99.6235%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.3735%" y="421" width="0.0783%" height="15" fill="rgb(215,56,7)" fg:x="1269" fg:w="1"/><text x="99.6235%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.3735%" y="405" width="0.0783%" height="15" fill="rgb(239,59,51)" fg:x="1269" fg:w="1"/><text x="99.6235%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.4518%" y="469" width="0.0783%" height="15" fill="rgb(209,215,4)" fg:x="1270" fg:w="1"/><text x="99.7018%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="99.5301%" y="453" width="0.2349%" height="15" fill="rgb(221,118,39)" fg:x="1271" fg:w="3"/><text x="99.7801%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="99.5301%" y="437" width="0.2349%" height="15" fill="rgb(236,6,44)" fg:x="1271" fg:w="3"/><text x="99.7801%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.6085%" y="421" width="0.1566%" height="15" fill="rgb(216,122,9)" fg:x="1272" fg:w="2"/><text x="99.8585%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="99.6085%" y="405" width="0.1566%" height="15" fill="rgb(244,134,42)" fg:x="1272" fg:w="2"/><text x="99.8585%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="99.6085%" y="389" width="0.1566%" height="15" fill="rgb(209,189,35)" fg:x="1272" fg:w="2"/><text x="99.8585%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="99.6085%" y="373" width="0.1566%" height="15" fill="rgb(250,47,36)" fg:x="1272" fg:w="2"/><text x="99.8585%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.7651%" y="421" width="0.0783%" height="15" fill="rgb(252,112,4)" fg:x="1274" fg:w="1"/><text x="100.0151%" y="431.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (174 samples, 13.63%)</title><rect x="86.2960%" y="757" width="13.6257%" height="15" fill="rgb(221,79,51)" fg:x="1102" fg:w="174"/><text x="86.5460%" y="767.50">&lt;kernel::plugins::Ses..</text></g><g><title>core::iter::adapters::try_process (174 samples, 13.63%)</title><rect x="86.2960%" y="741" width="13.6257%" height="15" fill="rgb(232,65,53)" fg:x="1102" fg:w="174"/><text x="86.5460%" y="751.50">core::iter::adapters:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (174 samples, 13.63%)</title><rect x="86.2960%" y="725" width="13.6257%" height="15" fill="rgb(211,37,7)" fg:x="1102" fg:w="174"/><text x="86.5460%" y="735.50">&lt;alloc::vec::Vec&lt;T&gt; a..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (174 samples, 13.63%)</title><rect x="86.2960%" y="709" width="13.6257%" height="15" fill="rgb(234,221,18)" fg:x="1102" fg:w="174"/><text x="86.5460%" y="719.50">&lt;core::iter::adapters..</text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (173 samples, 13.55%)</title><rect x="86.3743%" y="693" width="13.5474%" height="15" fill="rgb(220,158,26)" fg:x="1103" fg:w="173"/><text x="86.6243%" y="703.50">&lt;plugins_core::carry..</text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (173 samples, 13.55%)</title><rect x="86.3743%" y="677" width="13.5474%" height="15" fill="rgb(220,70,6)" fg:x="1103" fg:w="173"/><text x="86.6243%" y="687.50">&lt;engine::perform::St..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (11 samples, 0.86%)</title><rect x="99.0603%" y="661" width="0.8614%" height="15" fill="rgb(250,39,48)" fg:x="1265" fg:w="11"/><text x="99.3103%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (11 samples, 0.86%)</title><rect x="99.0603%" y="645" width="0.8614%" height="15" fill="rgb(206,40,27)" fg:x="1265" fg:w="11"/><text x="99.3103%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (11 samples, 0.86%)</title><rect x="99.0603%" y="629" width="0.8614%" height="15" fill="rgb(247,80,36)" fg:x="1265" fg:w="11"/><text x="99.3103%" y="639.50"></text></g><g><title>engine::internal::Entities::add_persisted (11 samples, 0.86%)</title><rect x="99.0603%" y="613" width="0.8614%" height="15" fill="rgb(222,9,20)" fg:x="1265" fg:w="11"/><text x="99.3103%" y="623.50"></text></g><g><title>kernel::model::deserialize_entity (10 samples, 0.78%)</title><rect x="99.1386%" y="597" width="0.7831%" height="15" fill="rgb(217,26,45)" fg:x="1266" fg:w="10"/><text x="99.3886%" y="607.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.47%)</title><rect x="99.4518%" y="581" width="0.4699%" height="15" fill="rgb(221,67,14)" fg:x="1270" fg:w="6"/><text x="99.7018%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.47%)</title><rect x="99.4518%" y="565" width="0.4699%" height="15" fill="rgb(248,100,24)" fg:x="1270" fg:w="6"/><text x="99.7018%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.47%)</title><rect x="99.4518%" y="549" width="0.4699%" height="15" fill="rgb(230,187,16)" fg:x="1270" fg:w="6"/><text x="99.7018%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.47%)</title><rect x="99.4518%" y="533" width="0.4699%" height="15" fill="rgb(205,108,13)" fg:x="1270" fg:w="6"/><text x="99.7018%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.47%)</title><rect x="99.4518%" y="517" width="0.4699%" height="15" fill="rgb(235,71,51)" fg:x="1270" fg:w="6"/><text x="99.7018%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.47%)</title><rect x="99.4518%" y="501" width="0.4699%" height="15" fill="rgb(251,172,48)" fg:x="1270" fg:w="6"/><text x="99.7018%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.47%)</title><rect x="99.4518%" y="485" width="0.4699%" height="15" fill="rgb(240,96,49)" fg:x="1270" fg:w="6"/><text x="99.7018%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.39%)</title><rect x="99.5301%" y="469" width="0.3915%" height="15" fill="rgb(235,46,36)" fg:x="1271" fg:w="5"/><text x="99.7801%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.7651%" y="453" width="0.1566%" height="15" fill="rgb(244,3,49)" fg:x="1274" fg:w="2"/><text x="100.0151%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.7651%" y="437" width="0.1566%" height="15" fill="rgb(206,78,54)" fg:x="1274" fg:w="2"/><text x="100.0151%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.8434%" y="421" width="0.0783%" height="15" fill="rgb(208,85,42)" fg:x="1275" fg:w="1"/><text x="100.0934%" y="431.50"></text></g><g><title>all (1,277 samples, 100%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(219,196,21)" fg:x="0" fg:w="1277"/><text x="0.2500%" y="1151.50"></text></g><g><title>simple-bd24e590 (1,277 samples, 100.00%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(238,19,9)" fg:x="0" fg:w="1277"/><text x="0.2500%" y="1135.50">simple-bd24e590</text></g><g><title>_start (1,277 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(206,86,13)" fg:x="0" fg:w="1277"/><text x="0.2500%" y="1119.50">_start</text></g><g><title>__libc_start_main (1,277 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(214,123,40)" fg:x="0" fg:w="1277"/><text x="0.2500%" y="1103.50">__libc_start_main</text></g><g><title>main (1,277 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(243,53,5)" fg:x="0" fg:w="1277"/><text x="0.2500%" y="1087.50">main</text></g><g><title>std::rt::lang_start_internal (1,277 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(254,186,31)" fg:x="0" fg:w="1277"/><text x="0.2500%" y="1071.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,277 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(221,216,25)" fg:x="0" fg:w="1277"/><text x="0.2500%" y="1055.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,277 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(248,107,42)" fg:x="0" fg:w="1277"/><text x="0.2500%" y="1039.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,277 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(221,85,43)" fg:x="0" fg:w="1277"/><text x="0.2500%" y="1023.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,277 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(225,34,24)" fg:x="0" fg:w="1277"/><text x="0.2500%" y="1007.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,277 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(211,119,1)" fg:x="0" fg:w="1277"/><text x="0.2500%" y="991.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,277 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(254,216,46)" fg:x="0" fg:w="1277"/><text x="0.2500%" y="975.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,277 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(238,11,38)" fg:x="0" fg:w="1277"/><text x="0.2500%" y="959.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,277 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(233,50,15)" fg:x="0" fg:w="1277"/><text x="0.2500%" y="943.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,277 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(217,181,29)" fg:x="0" fg:w="1277"/><text x="0.2500%" y="927.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,277 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(214,56,3)" fg:x="0" fg:w="1277"/><text x="0.2500%" y="911.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,277 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(230,69,45)" fg:x="0" fg:w="1277"/><text x="0.2500%" y="895.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,277 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(224,201,50)" fg:x="0" fg:w="1277"/><text x="0.2500%" y="879.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,277 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(217,228,18)" fg:x="0" fg:w="1277"/><text x="0.2500%" y="863.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (401 samples, 31.40%)</title><rect x="68.5983%" y="837" width="31.4017%" height="15" fill="rgb(239,33,44)" fg:x="876" fg:w="401"/><text x="68.8483%" y="847.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (401 samples, 31.40%)</title><rect x="68.5983%" y="821" width="31.4017%" height="15" fill="rgb(248,210,23)" fg:x="876" fg:w="401"/><text x="68.8483%" y="831.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (401 samples, 31.40%)</title><rect x="68.5983%" y="805" width="31.4017%" height="15" fill="rgb(253,135,8)" fg:x="876" fg:w="401"/><text x="68.8483%" y="815.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (175 samples, 13.70%)</title><rect x="86.2960%" y="789" width="13.7040%" height="15" fill="rgb(217,98,21)" fg:x="1102" fg:w="175"/><text x="86.5460%" y="799.50">engine::session::Sess..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (175 samples, 13.70%)</title><rect x="86.2960%" y="773" width="13.7040%" height="15" fill="rgb(253,130,21)" fg:x="1102" fg:w="175"/><text x="86.5460%" y="783.50">engine::perform::Stan..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="99.9217%" y="757" width="0.0783%" height="15" fill="rgb(207,81,54)" fg:x="1276" fg:w="1"/><text x="100.1717%" y="767.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="99.9217%" y="741" width="0.0783%" height="15" fill="rgb(232,48,33)" fg:x="1276" fg:w="1"/><text x="100.1717%" y="751.50"></text></g></svg></svg>