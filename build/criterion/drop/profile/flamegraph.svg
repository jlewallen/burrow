<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1062" onload="init(evt)" viewBox="0 0 1200 1062" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1062" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1045.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1045.00"> </text><svg id="frames" x="10" width="1180" total_samples="1249"><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.0000%" y="645" width="0.0801%" height="15" fill="rgb(214,102,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="655.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.2402%" y="533" width="0.2402%" height="15" fill="rgb(245,92,5)" fg:x="3" fg:w="3"/><text x="0.4902%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="0.4804%" y="533" width="0.2402%" height="15" fill="rgb(252,72,51)" fg:x="6" fg:w="3"/><text x="0.7304%" y="543.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.4804%" y="517" width="0.2402%" height="15" fill="rgb(252,208,19)" fg:x="6" fg:w="3"/><text x="0.7304%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.8807%" y="485" width="0.0801%" height="15" fill="rgb(211,69,7)" fg:x="11" fg:w="1"/><text x="1.1307%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.8807%" y="469" width="0.0801%" height="15" fill="rgb(211,27,16)" fg:x="11" fg:w="1"/><text x="1.1307%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="0.8006%" y="517" width="0.2402%" height="15" fill="rgb(219,216,14)" fg:x="10" fg:w="3"/><text x="1.0506%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="0.8006%" y="501" width="0.2402%" height="15" fill="rgb(219,71,8)" fg:x="10" fg:w="3"/><text x="1.0506%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="0.9608%" y="485" width="0.0801%" height="15" fill="rgb(223,170,53)" fg:x="12" fg:w="1"/><text x="1.2108%" y="495.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="1.0408%" y="517" width="0.2402%" height="15" fill="rgb(246,21,26)" fg:x="13" fg:w="3"/><text x="1.2908%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="1.2810%" y="517" width="0.3203%" height="15" fill="rgb(248,20,46)" fg:x="16" fg:w="4"/><text x="1.5310%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.5212%" y="501" width="0.0801%" height="15" fill="rgb(252,94,11)" fg:x="19" fg:w="1"/><text x="1.7712%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.6013%" y="501" width="0.0801%" height="15" fill="rgb(236,163,8)" fg:x="20" fg:w="1"/><text x="1.8513%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.6813%" y="485" width="0.1601%" height="15" fill="rgb(217,221,45)" fg:x="21" fg:w="2"/><text x="1.9313%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.8415%" y="485" width="0.0801%" height="15" fill="rgb(238,38,17)" fg:x="23" fg:w="1"/><text x="2.0915%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 2.00%)</title><rect x="0.0801%" y="581" width="2.0016%" height="15" fill="rgb(242,210,23)" fg:x="1" fg:w="25"/><text x="0.3301%" y="591.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (24 samples, 1.92%)</title><rect x="0.1601%" y="565" width="1.9215%" height="15" fill="rgb(250,86,53)" fg:x="2" fg:w="24"/><text x="0.4101%" y="575.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (23 samples, 1.84%)</title><rect x="0.2402%" y="549" width="1.8415%" height="15" fill="rgb(223,168,25)" fg:x="3" fg:w="23"/><text x="0.4902%" y="559.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.36%)</title><rect x="0.7206%" y="533" width="1.3611%" height="15" fill="rgb(251,189,4)" fg:x="9" fg:w="17"/><text x="0.9706%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="1.6013%" y="517" width="0.4804%" height="15" fill="rgb(245,19,28)" fg:x="20" fg:w="6"/><text x="1.8513%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="1.6813%" y="501" width="0.4003%" height="15" fill="rgb(207,10,34)" fg:x="21" fg:w="5"/><text x="1.9313%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="1.9215%" y="485" width="0.1601%" height="15" fill="rgb(235,153,31)" fg:x="24" fg:w="2"/><text x="2.1715%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 2.08%)</title><rect x="0.0801%" y="629" width="2.0817%" height="15" fill="rgb(228,72,37)" fg:x="1" fg:w="26"/><text x="0.3301%" y="639.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (26 samples, 2.08%)</title><rect x="0.0801%" y="613" width="2.0817%" height="15" fill="rgb(215,15,16)" fg:x="1" fg:w="26"/><text x="0.3301%" y="623.50">c..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 2.08%)</title><rect x="0.0801%" y="597" width="2.0817%" height="15" fill="rgb(250,119,29)" fg:x="1" fg:w="26"/><text x="0.3301%" y="607.50">&lt;..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.0817%" y="581" width="0.0801%" height="15" fill="rgb(214,59,1)" fg:x="26" fg:w="1"/><text x="2.3317%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::State&gt; (28 samples, 2.24%)</title><rect x="0.0801%" y="645" width="2.2418%" height="15" fill="rgb(223,109,25)" fg:x="1" fg:w="28"/><text x="0.3301%" y="655.50">c..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.1617%" y="629" width="0.1601%" height="15" fill="rgb(230,198,22)" fg:x="27" fg:w="2"/><text x="2.4117%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 2.48%)</title><rect x="0.0000%" y="661" width="2.4820%" height="15" fill="rgb(245,184,46)" fg:x="0" fg:w="31"/><text x="0.2500%" y="671.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryEntityStorage&gt; (2 samples, 0.16%)</title><rect x="2.3219%" y="645" width="0.1601%" height="15" fill="rgb(253,73,16)" fg:x="29" fg:w="2"/><text x="2.5719%" y="655.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="2.5620%" y="597" width="0.0801%" height="15" fill="rgb(206,94,45)" fg:x="32" fg:w="1"/><text x="2.8120%" y="607.50"></text></g><g><title>kernel::model::base::EntityKey::key_to_string (1 samples, 0.08%)</title><rect x="2.5620%" y="581" width="0.0801%" height="15" fill="rgb(236,83,27)" fg:x="32" fg:w="1"/><text x="2.8120%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="2.8022%" y="485" width="0.1601%" height="15" fill="rgb(220,196,8)" fg:x="35" fg:w="2"/><text x="3.0522%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="2.8022%" y="469" width="0.1601%" height="15" fill="rgb(254,185,14)" fg:x="35" fg:w="2"/><text x="3.0522%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="2.8022%" y="453" width="0.1601%" height="15" fill="rgb(226,50,22)" fg:x="35" fg:w="2"/><text x="3.0522%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="2.8823%" y="437" width="0.0801%" height="15" fill="rgb(253,147,0)" fg:x="36" fg:w="1"/><text x="3.1323%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="2.8823%" y="421" width="0.0801%" height="15" fill="rgb(252,46,33)" fg:x="36" fg:w="1"/><text x="3.1323%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="2.8823%" y="405" width="0.0801%" height="15" fill="rgb(242,22,54)" fg:x="36" fg:w="1"/><text x="3.1323%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="2.8823%" y="389" width="0.0801%" height="15" fill="rgb(223,178,32)" fg:x="36" fg:w="1"/><text x="3.1323%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="2.8823%" y="373" width="0.0801%" height="15" fill="rgb(214,106,53)" fg:x="36" fg:w="1"/><text x="3.1323%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="2.8823%" y="357" width="0.0801%" height="15" fill="rgb(232,65,50)" fg:x="36" fg:w="1"/><text x="3.1323%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="2.8823%" y="341" width="0.0801%" height="15" fill="rgb(231,110,28)" fg:x="36" fg:w="1"/><text x="3.1323%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="2.8823%" y="325" width="0.0801%" height="15" fill="rgb(216,71,40)" fg:x="36" fg:w="1"/><text x="3.1323%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="2.8823%" y="309" width="0.0801%" height="15" fill="rgb(229,89,53)" fg:x="36" fg:w="1"/><text x="3.1323%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="2.8823%" y="293" width="0.0801%" height="15" fill="rgb(210,124,14)" fg:x="36" fg:w="1"/><text x="3.1323%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="2.8823%" y="277" width="0.0801%" height="15" fill="rgb(236,213,6)" fg:x="36" fg:w="1"/><text x="3.1323%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.8823%" y="261" width="0.0801%" height="15" fill="rgb(228,41,5)" fg:x="36" fg:w="1"/><text x="3.1323%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="2.8022%" y="501" width="0.2402%" height="15" fill="rgb(221,167,25)" fg:x="35" fg:w="3"/><text x="3.0522%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="2.9624%" y="485" width="0.0801%" height="15" fill="rgb(228,144,37)" fg:x="37" fg:w="1"/><text x="3.2124%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="2.9624%" y="469" width="0.0801%" height="15" fill="rgb(227,189,38)" fg:x="37" fg:w="1"/><text x="3.2124%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="2.9624%" y="453" width="0.0801%" height="15" fill="rgb(218,8,2)" fg:x="37" fg:w="1"/><text x="3.2124%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="2.9624%" y="437" width="0.0801%" height="15" fill="rgb(209,61,28)" fg:x="37" fg:w="1"/><text x="3.2124%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="2.9624%" y="421" width="0.0801%" height="15" fill="rgb(233,140,39)" fg:x="37" fg:w="1"/><text x="3.2124%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="2.9624%" y="405" width="0.0801%" height="15" fill="rgb(251,66,48)" fg:x="37" fg:w="1"/><text x="3.2124%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="2.9624%" y="389" width="0.0801%" height="15" fill="rgb(210,44,45)" fg:x="37" fg:w="1"/><text x="3.2124%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="3.0424%" y="501" width="0.1601%" height="15" fill="rgb(214,136,46)" fg:x="38" fg:w="2"/><text x="3.2924%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="3.1225%" y="485" width="0.0801%" height="15" fill="rgb(207,130,50)" fg:x="39" fg:w="1"/><text x="3.3725%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="2.8022%" y="549" width="0.4804%" height="15" fill="rgb(228,102,49)" fg:x="35" fg:w="6"/><text x="3.0522%" y="559.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="2.8022%" y="533" width="0.4804%" height="15" fill="rgb(253,55,1)" fg:x="35" fg:w="6"/><text x="3.0522%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="2.8022%" y="517" width="0.4804%" height="15" fill="rgb(238,222,9)" fg:x="35" fg:w="6"/><text x="3.0522%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="3.2026%" y="501" width="0.0801%" height="15" fill="rgb(246,99,6)" fg:x="40" fg:w="1"/><text x="3.4526%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="3.2026%" y="485" width="0.0801%" height="15" fill="rgb(219,110,26)" fg:x="40" fg:w="1"/><text x="3.4526%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="3.2026%" y="469" width="0.0801%" height="15" fill="rgb(239,160,33)" fg:x="40" fg:w="1"/><text x="3.4526%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="3.2026%" y="453" width="0.0801%" height="15" fill="rgb(220,202,23)" fg:x="40" fg:w="1"/><text x="3.4526%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="3.2026%" y="437" width="0.0801%" height="15" fill="rgb(208,80,26)" fg:x="40" fg:w="1"/><text x="3.4526%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="3.2026%" y="421" width="0.0801%" height="15" fill="rgb(243,85,7)" fg:x="40" fg:w="1"/><text x="3.4526%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="3.2026%" y="405" width="0.0801%" height="15" fill="rgb(228,77,47)" fg:x="40" fg:w="1"/><text x="3.4526%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="3.2026%" y="389" width="0.0801%" height="15" fill="rgb(212,226,8)" fg:x="40" fg:w="1"/><text x="3.4526%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="3.2826%" y="501" width="0.0801%" height="15" fill="rgb(241,120,54)" fg:x="41" fg:w="1"/><text x="3.5326%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (10 samples, 0.80%)</title><rect x="2.6421%" y="581" width="0.8006%" height="15" fill="rgb(226,80,16)" fg:x="33" fg:w="10"/><text x="2.8921%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (10 samples, 0.80%)</title><rect x="2.6421%" y="565" width="0.8006%" height="15" fill="rgb(240,76,13)" fg:x="33" fg:w="10"/><text x="2.8921%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="3.2826%" y="549" width="0.1601%" height="15" fill="rgb(252,74,8)" fg:x="41" fg:w="2"/><text x="3.5326%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="3.2826%" y="533" width="0.1601%" height="15" fill="rgb(244,155,2)" fg:x="41" fg:w="2"/><text x="3.5326%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="3.2826%" y="517" width="0.1601%" height="15" fill="rgb(215,81,35)" fg:x="41" fg:w="2"/><text x="3.5326%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="3.3627%" y="501" width="0.0801%" height="15" fill="rgb(206,55,2)" fg:x="42" fg:w="1"/><text x="3.6127%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="3.3627%" y="485" width="0.0801%" height="15" fill="rgb(231,2,34)" fg:x="42" fg:w="1"/><text x="3.6127%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.3627%" y="469" width="0.0801%" height="15" fill="rgb(242,176,48)" fg:x="42" fg:w="1"/><text x="3.6127%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.3627%" y="453" width="0.0801%" height="15" fill="rgb(249,31,36)" fg:x="42" fg:w="1"/><text x="3.6127%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="3.4428%" y="533" width="0.0801%" height="15" fill="rgb(205,18,17)" fg:x="43" fg:w="1"/><text x="3.6928%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.5228%" y="501" width="0.0801%" height="15" fill="rgb(254,130,5)" fg:x="44" fg:w="1"/><text x="3.7728%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.5228%" y="485" width="0.0801%" height="15" fill="rgb(229,42,45)" fg:x="44" fg:w="1"/><text x="3.7728%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="3.4428%" y="581" width="0.3203%" height="15" fill="rgb(245,95,25)" fg:x="43" fg:w="4"/><text x="3.6928%" y="591.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="3.4428%" y="565" width="0.3203%" height="15" fill="rgb(249,193,38)" fg:x="43" fg:w="4"/><text x="3.6928%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="3.4428%" y="549" width="0.3203%" height="15" fill="rgb(241,140,43)" fg:x="43" fg:w="4"/><text x="3.6928%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="3.5228%" y="533" width="0.2402%" height="15" fill="rgb(245,78,48)" fg:x="44" fg:w="3"/><text x="3.7728%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="3.5228%" y="517" width="0.2402%" height="15" fill="rgb(214,92,39)" fg:x="44" fg:w="3"/><text x="3.7728%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="3.6029%" y="501" width="0.1601%" height="15" fill="rgb(211,189,14)" fg:x="45" fg:w="2"/><text x="3.8529%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="3.6029%" y="485" width="0.1601%" height="15" fill="rgb(218,7,24)" fg:x="45" fg:w="2"/><text x="3.8529%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="3.6829%" y="469" width="0.0801%" height="15" fill="rgb(224,200,49)" fg:x="46" fg:w="1"/><text x="3.9329%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="3.6829%" y="453" width="0.0801%" height="15" fill="rgb(218,210,14)" fg:x="46" fg:w="1"/><text x="3.9329%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.7630%" y="565" width="0.0801%" height="15" fill="rgb(234,142,31)" fg:x="47" fg:w="1"/><text x="4.0130%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.7630%" y="549" width="0.0801%" height="15" fill="rgb(227,165,2)" fg:x="47" fg:w="1"/><text x="4.0130%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="3.7630%" y="533" width="0.0801%" height="15" fill="rgb(232,44,46)" fg:x="47" fg:w="1"/><text x="4.0130%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="3.7630%" y="517" width="0.0801%" height="15" fill="rgb(236,149,47)" fg:x="47" fg:w="1"/><text x="4.0130%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="3.7630%" y="501" width="0.0801%" height="15" fill="rgb(227,45,31)" fg:x="47" fg:w="1"/><text x="4.0130%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="3.7630%" y="485" width="0.0801%" height="15" fill="rgb(240,176,51)" fg:x="47" fg:w="1"/><text x="4.0130%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="3.7630%" y="469" width="0.0801%" height="15" fill="rgb(249,146,41)" fg:x="47" fg:w="1"/><text x="4.0130%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="3.7630%" y="453" width="0.0801%" height="15" fill="rgb(213,208,4)" fg:x="47" fg:w="1"/><text x="4.0130%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="3.7630%" y="437" width="0.0801%" height="15" fill="rgb(245,84,36)" fg:x="47" fg:w="1"/><text x="4.0130%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="3.7630%" y="421" width="0.0801%" height="15" fill="rgb(254,84,18)" fg:x="47" fg:w="1"/><text x="4.0130%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="3.7630%" y="405" width="0.0801%" height="15" fill="rgb(225,38,54)" fg:x="47" fg:w="1"/><text x="4.0130%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.7630%" y="389" width="0.0801%" height="15" fill="rgb(246,50,30)" fg:x="47" fg:w="1"/><text x="4.0130%" y="399.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="3.7630%" y="581" width="0.1601%" height="15" fill="rgb(246,148,9)" fg:x="47" fg:w="2"/><text x="4.0130%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="3.8431%" y="565" width="0.0801%" height="15" fill="rgb(223,75,4)" fg:x="48" fg:w="1"/><text x="4.0931%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="3.8431%" y="549" width="0.0801%" height="15" fill="rgb(239,148,41)" fg:x="48" fg:w="1"/><text x="4.0931%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.1633%" y="469" width="0.0801%" height="15" fill="rgb(205,195,3)" fg:x="52" fg:w="1"/><text x="4.4133%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="4.1633%" y="453" width="0.0801%" height="15" fill="rgb(254,161,1)" fg:x="52" fg:w="1"/><text x="4.4133%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="4.2434%" y="453" width="0.0801%" height="15" fill="rgb(211,229,8)" fg:x="53" fg:w="1"/><text x="4.4934%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="4.2434%" y="437" width="0.0801%" height="15" fill="rgb(220,97,9)" fg:x="53" fg:w="1"/><text x="4.4934%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="4.2434%" y="421" width="0.0801%" height="15" fill="rgb(240,218,8)" fg:x="53" fg:w="1"/><text x="4.4934%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="4.2434%" y="405" width="0.0801%" height="15" fill="rgb(250,44,0)" fg:x="53" fg:w="1"/><text x="4.4934%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="4.2434%" y="389" width="0.0801%" height="15" fill="rgb(236,41,53)" fg:x="53" fg:w="1"/><text x="4.4934%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="4.2434%" y="373" width="0.0801%" height="15" fill="rgb(218,227,13)" fg:x="53" fg:w="1"/><text x="4.4934%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="4.2434%" y="357" width="0.0801%" height="15" fill="rgb(217,94,32)" fg:x="53" fg:w="1"/><text x="4.4934%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="4.2434%" y="341" width="0.0801%" height="15" fill="rgb(213,217,12)" fg:x="53" fg:w="1"/><text x="4.4934%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="4.2434%" y="325" width="0.0801%" height="15" fill="rgb(229,13,46)" fg:x="53" fg:w="1"/><text x="4.4934%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="4.2434%" y="309" width="0.0801%" height="15" fill="rgb(243,139,5)" fg:x="53" fg:w="1"/><text x="4.4934%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="4.2434%" y="293" width="0.0801%" height="15" fill="rgb(249,38,45)" fg:x="53" fg:w="1"/><text x="4.4934%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="4.3235%" y="453" width="0.0801%" height="15" fill="rgb(216,70,11)" fg:x="54" fg:w="1"/><text x="4.5735%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="4.3235%" y="437" width="0.0801%" height="15" fill="rgb(253,101,25)" fg:x="54" fg:w="1"/><text x="4.5735%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="4.3235%" y="421" width="0.0801%" height="15" fill="rgb(207,197,30)" fg:x="54" fg:w="1"/><text x="4.5735%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="4.3235%" y="405" width="0.0801%" height="15" fill="rgb(238,87,13)" fg:x="54" fg:w="1"/><text x="4.5735%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="4.3235%" y="389" width="0.0801%" height="15" fill="rgb(215,155,8)" fg:x="54" fg:w="1"/><text x="4.5735%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.3235%" y="373" width="0.0801%" height="15" fill="rgb(239,166,38)" fg:x="54" fg:w="1"/><text x="4.5735%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="4.4836%" y="357" width="0.0801%" height="15" fill="rgb(240,194,35)" fg:x="56" fg:w="1"/><text x="4.7336%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="4.4836%" y="341" width="0.0801%" height="15" fill="rgb(219,10,44)" fg:x="56" fg:w="1"/><text x="4.7336%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="4.1633%" y="501" width="0.4804%" height="15" fill="rgb(251,220,35)" fg:x="52" fg:w="6"/><text x="4.4133%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="4.1633%" y="485" width="0.4804%" height="15" fill="rgb(218,117,13)" fg:x="52" fg:w="6"/><text x="4.4133%" y="495.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="4.2434%" y="469" width="0.4003%" height="15" fill="rgb(221,213,40)" fg:x="53" fg:w="5"/><text x="4.4934%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="4.4035%" y="453" width="0.2402%" height="15" fill="rgb(251,224,35)" fg:x="55" fg:w="3"/><text x="4.6535%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="4.4035%" y="437" width="0.2402%" height="15" fill="rgb(241,33,39)" fg:x="55" fg:w="3"/><text x="4.6535%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="4.4836%" y="421" width="0.1601%" height="15" fill="rgb(222,74,17)" fg:x="56" fg:w="2"/><text x="4.7336%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="4.4836%" y="405" width="0.1601%" height="15" fill="rgb(225,103,0)" fg:x="56" fg:w="2"/><text x="4.7336%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="4.4836%" y="389" width="0.1601%" height="15" fill="rgb(240,0,12)" fg:x="56" fg:w="2"/><text x="4.7336%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="4.4836%" y="373" width="0.1601%" height="15" fill="rgb(233,213,37)" fg:x="56" fg:w="2"/><text x="4.7336%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="4.5637%" y="357" width="0.0801%" height="15" fill="rgb(225,84,52)" fg:x="57" fg:w="1"/><text x="4.8137%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="4.5637%" y="341" width="0.0801%" height="15" fill="rgb(247,160,51)" fg:x="57" fg:w="1"/><text x="4.8137%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="4.5637%" y="325" width="0.0801%" height="15" fill="rgb(244,60,51)" fg:x="57" fg:w="1"/><text x="4.8137%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="4.5637%" y="309" width="0.0801%" height="15" fill="rgb(233,114,7)" fg:x="57" fg:w="1"/><text x="4.8137%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="4.5637%" y="293" width="0.0801%" height="15" fill="rgb(246,136,16)" fg:x="57" fg:w="1"/><text x="4.8137%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="4.5637%" y="277" width="0.0801%" height="15" fill="rgb(243,114,45)" fg:x="57" fg:w="1"/><text x="4.8137%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="4.5637%" y="261" width="0.0801%" height="15" fill="rgb(247,183,43)" fg:x="57" fg:w="1"/><text x="4.8137%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="4.5637%" y="245" width="0.0801%" height="15" fill="rgb(251,210,42)" fg:x="57" fg:w="1"/><text x="4.8137%" y="255.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (12 samples, 0.96%)</title><rect x="3.9231%" y="565" width="0.9608%" height="15" fill="rgb(221,88,35)" fg:x="49" fg:w="12"/><text x="4.1731%" y="575.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (12 samples, 0.96%)</title><rect x="3.9231%" y="549" width="0.9608%" height="15" fill="rgb(242,21,20)" fg:x="49" fg:w="12"/><text x="4.1731%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (12 samples, 0.96%)</title><rect x="3.9231%" y="533" width="0.9608%" height="15" fill="rgb(233,226,36)" fg:x="49" fg:w="12"/><text x="4.1731%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.96%)</title><rect x="3.9231%" y="517" width="0.9608%" height="15" fill="rgb(243,189,34)" fg:x="49" fg:w="12"/><text x="4.1731%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="4.6437%" y="501" width="0.2402%" height="15" fill="rgb(207,145,50)" fg:x="58" fg:w="3"/><text x="4.8937%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="4.6437%" y="485" width="0.2402%" height="15" fill="rgb(242,1,50)" fg:x="58" fg:w="3"/><text x="4.8937%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="4.8038%" y="469" width="0.0801%" height="15" fill="rgb(231,65,32)" fg:x="60" fg:w="1"/><text x="5.0538%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="5.0440%" y="421" width="0.0801%" height="15" fill="rgb(208,68,49)" fg:x="63" fg:w="1"/><text x="5.2940%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="5.0440%" y="405" width="0.0801%" height="15" fill="rgb(253,54,49)" fg:x="63" fg:w="1"/><text x="5.2940%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="5.1241%" y="357" width="0.0801%" height="15" fill="rgb(245,186,24)" fg:x="64" fg:w="1"/><text x="5.3741%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="4.9640%" y="501" width="0.3203%" height="15" fill="rgb(209,2,41)" fg:x="62" fg:w="4"/><text x="5.2140%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="4.9640%" y="485" width="0.3203%" height="15" fill="rgb(242,208,54)" fg:x="62" fg:w="4"/><text x="5.2140%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="5.0440%" y="469" width="0.2402%" height="15" fill="rgb(225,9,51)" fg:x="63" fg:w="3"/><text x="5.2940%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="5.0440%" y="453" width="0.2402%" height="15" fill="rgb(207,207,25)" fg:x="63" fg:w="3"/><text x="5.2940%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="5.0440%" y="437" width="0.2402%" height="15" fill="rgb(253,96,18)" fg:x="63" fg:w="3"/><text x="5.2940%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="5.1241%" y="421" width="0.1601%" height="15" fill="rgb(252,215,20)" fg:x="64" fg:w="2"/><text x="5.3741%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="5.1241%" y="405" width="0.1601%" height="15" fill="rgb(245,227,26)" fg:x="64" fg:w="2"/><text x="5.3741%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="5.1241%" y="389" width="0.1601%" height="15" fill="rgb(241,208,0)" fg:x="64" fg:w="2"/><text x="5.3741%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="5.1241%" y="373" width="0.1601%" height="15" fill="rgb(224,130,10)" fg:x="64" fg:w="2"/><text x="5.3741%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="5.2042%" y="357" width="0.0801%" height="15" fill="rgb(237,29,0)" fg:x="65" fg:w="1"/><text x="5.4542%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="5.2042%" y="341" width="0.0801%" height="15" fill="rgb(219,27,41)" fg:x="65" fg:w="1"/><text x="5.4542%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (35 samples, 2.80%)</title><rect x="2.5620%" y="613" width="2.8022%" height="15" fill="rgb(245,101,19)" fg:x="32" fg:w="35"/><text x="2.8120%" y="623.50">&lt;e..</text></g><g><title>engine::internal::Entities::add_persisted (34 samples, 2.72%)</title><rect x="2.6421%" y="597" width="2.7222%" height="15" fill="rgb(243,44,37)" fg:x="33" fg:w="34"/><text x="2.8921%" y="607.50">en..</text></g><g><title>kernel::model::deserialize_entity (18 samples, 1.44%)</title><rect x="3.9231%" y="581" width="1.4412%" height="15" fill="rgb(228,213,43)" fg:x="49" fg:w="18"/><text x="4.1731%" y="591.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="4.8839%" y="565" width="0.4804%" height="15" fill="rgb(219,163,21)" fg:x="61" fg:w="6"/><text x="5.1339%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="4.8839%" y="549" width="0.4804%" height="15" fill="rgb(234,86,24)" fg:x="61" fg:w="6"/><text x="5.1339%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="4.8839%" y="533" width="0.4804%" height="15" fill="rgb(225,10,24)" fg:x="61" fg:w="6"/><text x="5.1339%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="4.8839%" y="517" width="0.4804%" height="15" fill="rgb(218,109,7)" fg:x="61" fg:w="6"/><text x="5.1339%" y="527.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="5.2842%" y="501" width="0.0801%" height="15" fill="rgb(210,20,26)" fg:x="66" fg:w="1"/><text x="5.5342%" y="511.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="5.2842%" y="485" width="0.0801%" height="15" fill="rgb(216,18,1)" fg:x="66" fg:w="1"/><text x="5.5342%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (36 samples, 2.88%)</title><rect x="2.5620%" y="629" width="2.8823%" height="15" fill="rgb(206,163,23)" fg:x="32" fg:w="36"/><text x="2.8120%" y="639.50">&lt;e..</text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="5.3643%" y="613" width="0.0801%" height="15" fill="rgb(229,150,31)" fg:x="67" fg:w="1"/><text x="5.6143%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="5.3643%" y="597" width="0.0801%" height="15" fill="rgb(231,10,5)" fg:x="67" fg:w="1"/><text x="5.6143%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="5.3643%" y="581" width="0.0801%" height="15" fill="rgb(250,40,50)" fg:x="67" fg:w="1"/><text x="5.6143%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="5.3643%" y="565" width="0.0801%" height="15" fill="rgb(217,119,7)" fg:x="67" fg:w="1"/><text x="5.6143%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="5.3643%" y="549" width="0.0801%" height="15" fill="rgb(245,214,40)" fg:x="67" fg:w="1"/><text x="5.6143%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="5.3643%" y="533" width="0.0801%" height="15" fill="rgb(216,187,1)" fg:x="67" fg:w="1"/><text x="5.6143%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="5.3643%" y="517" width="0.0801%" height="15" fill="rgb(237,146,21)" fg:x="67" fg:w="1"/><text x="5.6143%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="5.3643%" y="501" width="0.0801%" height="15" fill="rgb(210,174,47)" fg:x="67" fg:w="1"/><text x="5.6143%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="5.3643%" y="485" width="0.0801%" height="15" fill="rgb(218,111,39)" fg:x="67" fg:w="1"/><text x="5.6143%" y="495.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="5.3643%" y="469" width="0.0801%" height="15" fill="rgb(224,95,19)" fg:x="67" fg:w="1"/><text x="5.6143%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="5.3643%" y="453" width="0.0801%" height="15" fill="rgb(234,15,38)" fg:x="67" fg:w="1"/><text x="5.6143%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="5.4444%" y="581" width="0.0801%" height="15" fill="rgb(246,56,12)" fg:x="68" fg:w="1"/><text x="5.6944%" y="591.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="5.4444%" y="629" width="0.1601%" height="15" fill="rgb(247,16,17)" fg:x="68" fg:w="2"/><text x="5.6944%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="5.4444%" y="613" width="0.1601%" height="15" fill="rgb(215,151,11)" fg:x="68" fg:w="2"/><text x="5.6944%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="5.4444%" y="597" width="0.1601%" height="15" fill="rgb(225,16,24)" fg:x="68" fg:w="2"/><text x="5.6944%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="5.5244%" y="581" width="0.0801%" height="15" fill="rgb(217,117,5)" fg:x="69" fg:w="1"/><text x="5.7744%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="5.5244%" y="565" width="0.0801%" height="15" fill="rgb(246,187,53)" fg:x="69" fg:w="1"/><text x="5.7744%" y="575.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="5.6045%" y="629" width="0.0801%" height="15" fill="rgb(241,71,40)" fg:x="70" fg:w="1"/><text x="5.8545%" y="639.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="5.6045%" y="613" width="0.0801%" height="15" fill="rgb(231,67,39)" fg:x="70" fg:w="1"/><text x="5.8545%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="5.6045%" y="597" width="0.0801%" height="15" fill="rgb(222,120,24)" fg:x="70" fg:w="1"/><text x="5.8545%" y="607.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="5.6845%" y="597" width="0.0801%" height="15" fill="rgb(248,3,3)" fg:x="71" fg:w="1"/><text x="5.9345%" y="607.50"></text></g><g><title>dlerror (5 samples, 0.40%)</title><rect x="5.8447%" y="581" width="0.4003%" height="15" fill="rgb(228,218,5)" fg:x="73" fg:w="5"/><text x="6.0947%" y="591.50"></text></g><g><title>__asprintf (3 samples, 0.24%)</title><rect x="6.0048%" y="565" width="0.2402%" height="15" fill="rgb(212,202,43)" fg:x="75" fg:w="3"/><text x="6.2548%" y="575.50"></text></g><g><title>libloading::os::unix::Library::open (18 samples, 1.44%)</title><rect x="5.7646%" y="597" width="1.4412%" height="15" fill="rgb(235,183,2)" fg:x="72" fg:w="18"/><text x="6.0146%" y="607.50"></text></g><g><title>dlopen (12 samples, 0.96%)</title><rect x="6.2450%" y="581" width="0.9608%" height="15" fill="rgb(230,165,10)" fg:x="78" fg:w="12"/><text x="6.4950%" y="591.50"></text></g><g><title>_dl_catch_error (12 samples, 0.96%)</title><rect x="6.2450%" y="565" width="0.9608%" height="15" fill="rgb(219,54,40)" fg:x="78" fg:w="12"/><text x="6.4950%" y="575.50"></text></g><g><title>_dl_catch_exception (12 samples, 0.96%)</title><rect x="6.2450%" y="549" width="0.9608%" height="15" fill="rgb(244,73,9)" fg:x="78" fg:w="12"/><text x="6.4950%" y="559.50"></text></g><g><title>_dl_catch_exception (11 samples, 0.88%)</title><rect x="6.3251%" y="533" width="0.8807%" height="15" fill="rgb(212,32,45)" fg:x="79" fg:w="11"/><text x="6.5751%" y="543.50"></text></g><g><title>_dl_catch_exception (9 samples, 0.72%)</title><rect x="6.4852%" y="517" width="0.7206%" height="15" fill="rgb(205,58,31)" fg:x="81" fg:w="9"/><text x="6.7352%" y="527.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (20 samples, 1.60%)</title><rect x="5.6845%" y="613" width="1.6013%" height="15" fill="rgb(250,120,43)" fg:x="71" fg:w="20"/><text x="5.9345%" y="623.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="7.2058%" y="597" width="0.0801%" height="15" fill="rgb(235,13,10)" fg:x="90" fg:w="1"/><text x="7.4558%" y="607.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="7.2058%" y="581" width="0.0801%" height="15" fill="rgb(232,219,31)" fg:x="90" fg:w="1"/><text x="7.4558%" y="591.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (21 samples, 1.68%)</title><rect x="5.6845%" y="629" width="1.6813%" height="15" fill="rgb(218,157,51)" fg:x="71" fg:w="21"/><text x="5.9345%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="7.2858%" y="613" width="0.0801%" height="15" fill="rgb(211,91,52)" fg:x="91" fg:w="1"/><text x="7.5358%" y="623.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="7.2858%" y="597" width="0.0801%" height="15" fill="rgb(240,173,1)" fg:x="91" fg:w="1"/><text x="7.5358%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="7.3659%" y="613" width="0.2402%" height="15" fill="rgb(248,20,47)" fg:x="92" fg:w="3"/><text x="7.6159%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="7.3659%" y="597" width="0.2402%" height="15" fill="rgb(217,221,40)" fg:x="92" fg:w="3"/><text x="7.6159%" y="607.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="7.4460%" y="581" width="0.1601%" height="15" fill="rgb(226,149,51)" fg:x="93" fg:w="2"/><text x="7.6960%" y="591.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="7.6061%" y="581" width="0.0801%" height="15" fill="rgb(252,193,7)" fg:x="95" fg:w="1"/><text x="7.8561%" y="591.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (66 samples, 5.28%)</title><rect x="2.4820%" y="661" width="5.2842%" height="15" fill="rgb(205,123,0)" fg:x="31" fg:w="66"/><text x="2.7320%" y="671.50">&lt;engin..</text></g><g><title>engine::session::Session::new (65 samples, 5.20%)</title><rect x="2.5620%" y="645" width="5.2042%" height="15" fill="rgb(233,173,25)" fg:x="32" fg:w="65"/><text x="2.8120%" y="655.50">engine..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (5 samples, 0.40%)</title><rect x="7.3659%" y="629" width="0.4003%" height="15" fill="rgb(216,63,32)" fg:x="92" fg:w="5"/><text x="7.6159%" y="639.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="7.6061%" y="613" width="0.1601%" height="15" fill="rgb(209,56,45)" fg:x="95" fg:w="2"/><text x="7.8561%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="7.6061%" y="597" width="0.1601%" height="15" fill="rgb(226,111,49)" fg:x="95" fg:w="2"/><text x="7.8561%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="7.6861%" y="581" width="0.0801%" height="15" fill="rgb(244,181,21)" fg:x="96" fg:w="1"/><text x="7.9361%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.08%)</title><rect x="7.7662%" y="645" width="0.0801%" height="15" fill="rgb(222,126,15)" fg:x="97" fg:w="1"/><text x="8.0162%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="7.8463%" y="645" width="0.0801%" height="15" fill="rgb(222,95,17)" fg:x="98" fg:w="1"/><text x="8.0963%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.8463%" y="629" width="0.0801%" height="15" fill="rgb(254,46,5)" fg:x="98" fg:w="1"/><text x="8.0963%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::surround::Surroundings&gt; (1 samples, 0.08%)</title><rect x="7.9263%" y="645" width="0.0801%" height="15" fill="rgb(236,216,35)" fg:x="99" fg:w="1"/><text x="8.1763%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="7.9263%" y="629" width="0.0801%" height="15" fill="rgb(217,187,26)" fg:x="99" fg:w="1"/><text x="8.1763%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="7.9263%" y="613" width="0.0801%" height="15" fill="rgb(207,192,25)" fg:x="99" fg:w="1"/><text x="8.1763%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.9263%" y="597" width="0.0801%" height="15" fill="rgb(253,135,27)" fg:x="99" fg:w="1"/><text x="8.1763%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.2466%" y="597" width="0.0801%" height="15" fill="rgb(211,122,29)" fg:x="103" fg:w="1"/><text x="8.4966%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.2466%" y="581" width="0.0801%" height="15" fill="rgb(233,162,40)" fg:x="103" fg:w="1"/><text x="8.4966%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="8.2466%" y="565" width="0.0801%" height="15" fill="rgb(222,184,47)" fg:x="103" fg:w="1"/><text x="8.4966%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="8.2466%" y="549" width="0.0801%" height="15" fill="rgb(249,99,23)" fg:x="103" fg:w="1"/><text x="8.4966%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="8.2466%" y="533" width="0.0801%" height="15" fill="rgb(214,60,12)" fg:x="103" fg:w="1"/><text x="8.4966%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.2466%" y="517" width="0.0801%" height="15" fill="rgb(250,229,36)" fg:x="103" fg:w="1"/><text x="8.4966%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.2466%" y="501" width="0.0801%" height="15" fill="rgb(232,195,10)" fg:x="103" fg:w="1"/><text x="8.4966%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="8.2466%" y="485" width="0.0801%" height="15" fill="rgb(205,213,31)" fg:x="103" fg:w="1"/><text x="8.4966%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="8.2466%" y="469" width="0.0801%" height="15" fill="rgb(237,43,8)" fg:x="103" fg:w="1"/><text x="8.4966%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="8.2466%" y="453" width="0.0801%" height="15" fill="rgb(216,208,3)" fg:x="103" fg:w="1"/><text x="8.4966%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="8.2466%" y="437" width="0.0801%" height="15" fill="rgb(228,179,44)" fg:x="103" fg:w="1"/><text x="8.4966%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.2466%" y="421" width="0.0801%" height="15" fill="rgb(230,192,27)" fg:x="103" fg:w="1"/><text x="8.4966%" y="431.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (6 samples, 0.48%)</title><rect x="8.0865%" y="613" width="0.4804%" height="15" fill="rgb(251,30,38)" fg:x="101" fg:w="6"/><text x="8.3365%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="8.3267%" y="597" width="0.2402%" height="15" fill="rgb(246,55,52)" fg:x="104" fg:w="3"/><text x="8.5767%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="8.4868%" y="581" width="0.0801%" height="15" fill="rgb(249,79,26)" fg:x="106" fg:w="1"/><text x="8.7368%" y="591.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="8.5669%" y="613" width="0.0801%" height="15" fill="rgb(220,202,16)" fg:x="107" fg:w="1"/><text x="8.8169%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="8.5669%" y="597" width="0.0801%" height="15" fill="rgb(250,170,23)" fg:x="107" fg:w="1"/><text x="8.8169%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="8.5669%" y="581" width="0.0801%" height="15" fill="rgb(230,7,37)" fg:x="107" fg:w="1"/><text x="8.8169%" y="591.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="8.6469%" y="613" width="0.0801%" height="15" fill="rgb(213,71,1)" fg:x="108" fg:w="1"/><text x="8.8969%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="8.6469%" y="597" width="0.0801%" height="15" fill="rgb(227,87,39)" fg:x="108" fg:w="1"/><text x="8.8969%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="8.6469%" y="581" width="0.0801%" height="15" fill="rgb(210,41,29)" fg:x="108" fg:w="1"/><text x="8.8969%" y="591.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="8.6469%" y="565" width="0.0801%" height="15" fill="rgb(206,191,31)" fg:x="108" fg:w="1"/><text x="8.8969%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="8.7270%" y="597" width="0.0801%" height="15" fill="rgb(247,75,54)" fg:x="109" fg:w="1"/><text x="8.9770%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.7270%" y="581" width="0.0801%" height="15" fill="rgb(208,54,50)" fg:x="109" fg:w="1"/><text x="8.9770%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.7270%" y="565" width="0.0801%" height="15" fill="rgb(214,90,37)" fg:x="109" fg:w="1"/><text x="8.9770%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="8.8871%" y="581" width="0.0801%" height="15" fill="rgb(220,132,6)" fg:x="111" fg:w="1"/><text x="9.1371%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="8.8871%" y="565" width="0.0801%" height="15" fill="rgb(213,167,7)" fg:x="111" fg:w="1"/><text x="9.1371%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="8.8871%" y="549" width="0.0801%" height="15" fill="rgb(243,36,27)" fg:x="111" fg:w="1"/><text x="9.1371%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="8.8871%" y="533" width="0.0801%" height="15" fill="rgb(235,147,12)" fg:x="111" fg:w="1"/><text x="9.1371%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.8871%" y="517" width="0.0801%" height="15" fill="rgb(212,198,44)" fg:x="111" fg:w="1"/><text x="9.1371%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="9.0472%" y="549" width="0.2402%" height="15" fill="rgb(218,68,50)" fg:x="113" fg:w="3"/><text x="9.2972%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.2074%" y="533" width="0.0801%" height="15" fill="rgb(224,79,48)" fg:x="115" fg:w="1"/><text x="9.4574%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="9.3675%" y="517" width="0.2402%" height="15" fill="rgb(213,191,50)" fg:x="117" fg:w="3"/><text x="9.6175%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.64%)</title><rect x="9.0472%" y="565" width="0.6405%" height="15" fill="rgb(254,146,10)" fg:x="113" fg:w="8"/><text x="9.2972%" y="575.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="9.2874%" y="549" width="0.4003%" height="15" fill="rgb(215,175,11)" fg:x="116" fg:w="5"/><text x="9.5374%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="9.3675%" y="533" width="0.3203%" height="15" fill="rgb(207,49,7)" fg:x="117" fg:w="4"/><text x="9.6175%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="9.6077%" y="517" width="0.0801%" height="15" fill="rgb(234,144,29)" fg:x="120" fg:w="1"/><text x="9.8577%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="9.9279%" y="549" width="0.1601%" height="15" fill="rgb(213,222,48)" fg:x="124" fg:w="2"/><text x="10.1779%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.64%)</title><rect x="10.0881%" y="549" width="0.6405%" height="15" fill="rgb(222,8,6)" fg:x="126" fg:w="8"/><text x="10.3381%" y="559.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="10.3283%" y="533" width="0.4003%" height="15" fill="rgb(221,114,49)" fg:x="129" fg:w="5"/><text x="10.5783%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="10.4884%" y="517" width="0.2402%" height="15" fill="rgb(250,140,42)" fg:x="131" fg:w="3"/><text x="10.7384%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="10.4884%" y="501" width="0.2402%" height="15" fill="rgb(250,150,27)" fg:x="131" fg:w="3"/><text x="10.7384%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="10.6485%" y="485" width="0.0801%" height="15" fill="rgb(252,159,3)" fg:x="133" fg:w="1"/><text x="10.8985%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="10.6485%" y="469" width="0.0801%" height="15" fill="rgb(241,182,3)" fg:x="133" fg:w="1"/><text x="10.8985%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="10.6485%" y="453" width="0.0801%" height="15" fill="rgb(236,3,9)" fg:x="133" fg:w="1"/><text x="10.8985%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="10.9688%" y="533" width="0.0801%" height="15" fill="rgb(223,227,51)" fg:x="137" fg:w="1"/><text x="11.2188%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="11.0488%" y="533" width="0.0801%" height="15" fill="rgb(232,133,30)" fg:x="138" fg:w="1"/><text x="11.2988%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="11.0488%" y="517" width="0.0801%" height="15" fill="rgb(209,93,27)" fg:x="138" fg:w="1"/><text x="11.2988%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="11.0488%" y="501" width="0.0801%" height="15" fill="rgb(208,108,34)" fg:x="138" fg:w="1"/><text x="11.2988%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="11.0488%" y="485" width="0.0801%" height="15" fill="rgb(215,189,13)" fg:x="138" fg:w="1"/><text x="11.2988%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="11.0488%" y="469" width="0.0801%" height="15" fill="rgb(206,88,23)" fg:x="138" fg:w="1"/><text x="11.2988%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="11.0488%" y="453" width="0.0801%" height="15" fill="rgb(240,173,0)" fg:x="138" fg:w="1"/><text x="11.2988%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.0488%" y="437" width="0.0801%" height="15" fill="rgb(223,106,52)" fg:x="138" fg:w="1"/><text x="11.2988%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="11.1289%" y="533" width="0.0801%" height="15" fill="rgb(206,130,16)" fg:x="139" fg:w="1"/><text x="11.3789%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="11.1289%" y="517" width="0.0801%" height="15" fill="rgb(220,54,25)" fg:x="139" fg:w="1"/><text x="11.3789%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="11.1289%" y="501" width="0.0801%" height="15" fill="rgb(210,4,38)" fg:x="139" fg:w="1"/><text x="11.3789%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.1289%" y="485" width="0.0801%" height="15" fill="rgb(238,94,39)" fg:x="139" fg:w="1"/><text x="11.3789%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="11.2090%" y="517" width="0.0801%" height="15" fill="rgb(234,124,34)" fg:x="140" fg:w="1"/><text x="11.4590%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="11.2890%" y="501" width="0.1601%" height="15" fill="rgb(221,91,40)" fg:x="141" fg:w="2"/><text x="11.5390%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="11.2890%" y="485" width="0.1601%" height="15" fill="rgb(246,53,28)" fg:x="141" fg:w="2"/><text x="11.5390%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="11.3691%" y="469" width="0.0801%" height="15" fill="rgb(229,109,7)" fg:x="142" fg:w="1"/><text x="11.6191%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.3691%" y="453" width="0.0801%" height="15" fill="rgb(249,117,8)" fg:x="142" fg:w="1"/><text x="11.6191%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="11.4492%" y="485" width="0.0801%" height="15" fill="rgb(210,181,1)" fg:x="143" fg:w="1"/><text x="11.6992%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="11.4492%" y="469" width="0.0801%" height="15" fill="rgb(211,66,1)" fg:x="143" fg:w="1"/><text x="11.6992%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="11.4492%" y="453" width="0.0801%" height="15" fill="rgb(221,90,14)" fg:x="143" fg:w="1"/><text x="11.6992%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.4492%" y="437" width="0.0801%" height="15" fill="rgb(219,222,44)" fg:x="143" fg:w="1"/><text x="11.6992%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="11.6093%" y="469" width="0.1601%" height="15" fill="rgb(246,34,33)" fg:x="145" fg:w="2"/><text x="11.8593%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="11.6894%" y="453" width="0.0801%" height="15" fill="rgb(227,135,41)" fg:x="146" fg:w="1"/><text x="11.9394%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="11.6894%" y="437" width="0.0801%" height="15" fill="rgb(226,15,14)" fg:x="146" fg:w="1"/><text x="11.9394%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="11.5292%" y="485" width="0.4003%" height="15" fill="rgb(236,148,47)" fg:x="144" fg:w="5"/><text x="11.7792%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="11.7694%" y="469" width="0.1601%" height="15" fill="rgb(233,162,52)" fg:x="147" fg:w="2"/><text x="12.0194%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="11.8495%" y="453" width="0.0801%" height="15" fill="rgb(244,35,28)" fg:x="148" fg:w="1"/><text x="12.0995%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="11.2890%" y="517" width="0.8807%" height="15" fill="rgb(205,121,10)" fg:x="141" fg:w="11"/><text x="11.5390%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="11.4492%" y="501" width="0.7206%" height="15" fill="rgb(250,58,18)" fg:x="143" fg:w="9"/><text x="11.6992%" y="511.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="11.9295%" y="485" width="0.2402%" height="15" fill="rgb(216,37,13)" fg:x="149" fg:w="3"/><text x="12.1795%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="12.0096%" y="469" width="0.1601%" height="15" fill="rgb(221,215,42)" fg:x="150" fg:w="2"/><text x="12.2596%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.0897%" y="453" width="0.0801%" height="15" fill="rgb(217,214,19)" fg:x="151" fg:w="1"/><text x="12.3397%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="11.2090%" y="533" width="1.2010%" height="15" fill="rgb(233,139,13)" fg:x="140" fg:w="15"/><text x="11.4590%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="12.1697%" y="517" width="0.2402%" height="15" fill="rgb(247,168,23)" fg:x="152" fg:w="3"/><text x="12.4197%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="12.3299%" y="501" width="0.0801%" height="15" fill="rgb(207,202,1)" fg:x="154" fg:w="1"/><text x="12.5799%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.3299%" y="485" width="0.0801%" height="15" fill="rgb(220,155,48)" fg:x="154" fg:w="1"/><text x="12.5799%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="12.5701%" y="501" width="0.1601%" height="15" fill="rgb(250,43,26)" fg:x="157" fg:w="2"/><text x="12.8201%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (26 samples, 2.08%)</title><rect x="10.7286%" y="549" width="2.0817%" height="15" fill="rgb(212,190,23)" fg:x="134" fg:w="26"/><text x="10.9786%" y="559.50">s..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="12.4099%" y="533" width="0.4003%" height="15" fill="rgb(216,39,24)" fg:x="155" fg:w="5"/><text x="12.6599%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="12.5701%" y="517" width="0.2402%" height="15" fill="rgb(252,113,16)" fg:x="157" fg:w="3"/><text x="12.8201%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="12.7302%" y="501" width="0.0801%" height="15" fill="rgb(208,113,19)" fg:x="159" fg:w="1"/><text x="12.9802%" y="511.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="12.9704%" y="469" width="0.0801%" height="15" fill="rgb(234,107,25)" fg:x="162" fg:w="1"/><text x="13.2204%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (45 samples, 3.60%)</title><rect x="9.6878%" y="565" width="3.6029%" height="15" fill="rgb(234,217,51)" fg:x="121" fg:w="45"/><text x="9.9378%" y="575.50">serd..</text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="12.8102%" y="549" width="0.4804%" height="15" fill="rgb(251,29,42)" fg:x="160" fg:w="6"/><text x="13.0602%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="12.8903%" y="533" width="0.4003%" height="15" fill="rgb(221,62,51)" fg:x="161" fg:w="5"/><text x="13.1403%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="12.9704%" y="517" width="0.3203%" height="15" fill="rgb(240,192,43)" fg:x="162" fg:w="4"/><text x="13.2204%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="12.9704%" y="501" width="0.3203%" height="15" fill="rgb(224,157,47)" fg:x="162" fg:w="4"/><text x="13.2204%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="12.9704%" y="485" width="0.3203%" height="15" fill="rgb(226,84,45)" fg:x="162" fg:w="4"/><text x="13.2204%" y="495.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="13.0504%" y="469" width="0.2402%" height="15" fill="rgb(208,207,23)" fg:x="163" fg:w="3"/><text x="13.3004%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (55 samples, 4.40%)</title><rect x="8.9672%" y="581" width="4.4035%" height="15" fill="rgb(253,34,51)" fg:x="112" fg:w="55"/><text x="9.2172%" y="591.50">&lt;serd..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.2906%" y="565" width="0.0801%" height="15" fill="rgb(227,26,34)" fg:x="166" fg:w="1"/><text x="13.5406%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.4508%" y="549" width="0.0801%" height="15" fill="rgb(245,75,19)" fg:x="168" fg:w="1"/><text x="13.7008%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.5308%" y="549" width="0.0801%" height="15" fill="rgb(250,191,31)" fg:x="169" fg:w="1"/><text x="13.7808%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="13.6109%" y="533" width="0.1601%" height="15" fill="rgb(224,11,50)" fg:x="170" fg:w="2"/><text x="13.8609%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.6910%" y="517" width="0.0801%" height="15" fill="rgb(231,171,7)" fg:x="171" fg:w="1"/><text x="13.9410%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.0112%" y="517" width="0.0801%" height="15" fill="rgb(252,214,10)" fg:x="175" fg:w="1"/><text x="14.2612%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="14.0913%" y="501" width="0.0801%" height="15" fill="rgb(249,45,46)" fg:x="176" fg:w="1"/><text x="14.3413%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.0913%" y="485" width="0.0801%" height="15" fill="rgb(240,173,7)" fg:x="176" fg:w="1"/><text x="14.3413%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.0913%" y="469" width="0.0801%" height="15" fill="rgb(235,214,13)" fg:x="176" fg:w="1"/><text x="14.3413%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.1713%" y="485" width="0.0801%" height="15" fill="rgb(245,156,8)" fg:x="177" fg:w="1"/><text x="14.4213%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.2514%" y="469" width="0.0801%" height="15" fill="rgb(235,46,12)" fg:x="178" fg:w="1"/><text x="14.5014%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.12%)</title><rect x="13.3707%" y="581" width="1.1209%" height="15" fill="rgb(221,81,14)" fg:x="167" fg:w="14"/><text x="13.6207%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.12%)</title><rect x="13.3707%" y="565" width="1.1209%" height="15" fill="rgb(238,207,9)" fg:x="167" fg:w="14"/><text x="13.6207%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="13.6109%" y="549" width="0.8807%" height="15" fill="rgb(224,129,35)" fg:x="170" fg:w="11"/><text x="13.8609%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="13.7710%" y="533" width="0.7206%" height="15" fill="rgb(243,218,34)" fg:x="172" fg:w="9"/><text x="14.0210%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="14.0913%" y="517" width="0.4003%" height="15" fill="rgb(220,166,13)" fg:x="176" fg:w="5"/><text x="14.3413%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="14.1713%" y="501" width="0.3203%" height="15" fill="rgb(227,167,49)" fg:x="177" fg:w="4"/><text x="14.4213%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="14.2514%" y="485" width="0.2402%" height="15" fill="rgb(234,142,12)" fg:x="178" fg:w="3"/><text x="14.5014%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="14.3315%" y="469" width="0.1601%" height="15" fill="rgb(207,100,48)" fg:x="179" fg:w="2"/><text x="14.5815%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="14.3315%" y="453" width="0.1601%" height="15" fill="rgb(210,25,14)" fg:x="179" fg:w="2"/><text x="14.5815%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="14.4916%" y="549" width="0.1601%" height="15" fill="rgb(246,116,27)" fg:x="181" fg:w="2"/><text x="14.7416%" y="559.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (3 samples, 0.24%)</title><rect x="14.4916%" y="565" width="0.2402%" height="15" fill="rgb(214,193,42)" fg:x="181" fg:w="3"/><text x="14.7416%" y="575.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="14.6517%" y="549" width="0.0801%" height="15" fill="rgb(214,122,8)" fg:x="183" fg:w="1"/><text x="14.9017%" y="559.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="14.6517%" y="533" width="0.0801%" height="15" fill="rgb(244,173,18)" fg:x="183" fg:w="1"/><text x="14.9017%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="14.9720%" y="533" width="0.3203%" height="15" fill="rgb(232,68,19)" fg:x="187" fg:w="4"/><text x="15.2220%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="15.1321%" y="517" width="0.1601%" height="15" fill="rgb(236,224,1)" fg:x="189" fg:w="2"/><text x="15.3821%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="15.2122%" y="501" width="0.0801%" height="15" fill="rgb(240,11,8)" fg:x="190" fg:w="1"/><text x="15.4622%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (3 samples, 0.24%)</title><rect x="15.2922%" y="533" width="0.2402%" height="15" fill="rgb(244,159,20)" fg:x="191" fg:w="3"/><text x="15.5422%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="15.8527%" y="485" width="0.2402%" height="15" fill="rgb(240,223,54)" fg:x="198" fg:w="3"/><text x="16.1027%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.0128%" y="469" width="0.0801%" height="15" fill="rgb(237,146,5)" fg:x="200" fg:w="1"/><text x="16.2628%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.0128%" y="453" width="0.0801%" height="15" fill="rgb(218,221,32)" fg:x="200" fg:w="1"/><text x="16.2628%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="16.0929%" y="485" width="0.2402%" height="15" fill="rgb(244,96,26)" fg:x="201" fg:w="3"/><text x="16.3429%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="16.1729%" y="469" width="0.1601%" height="15" fill="rgb(245,184,37)" fg:x="202" fg:w="2"/><text x="16.4229%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="16.2530%" y="453" width="0.0801%" height="15" fill="rgb(248,91,47)" fg:x="203" fg:w="1"/><text x="16.5030%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="16.2530%" y="437" width="0.0801%" height="15" fill="rgb(243,199,8)" fg:x="203" fg:w="1"/><text x="16.5030%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.2530%" y="421" width="0.0801%" height="15" fill="rgb(249,12,15)" fg:x="203" fg:w="1"/><text x="16.5030%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.5733%" y="453" width="0.0801%" height="15" fill="rgb(245,97,12)" fg:x="207" fg:w="1"/><text x="16.8233%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.5733%" y="437" width="0.0801%" height="15" fill="rgb(244,61,1)" fg:x="207" fg:w="1"/><text x="16.8233%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.5733%" y="421" width="0.0801%" height="15" fill="rgb(222,194,10)" fg:x="207" fg:w="1"/><text x="16.8233%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="16.8935%" y="389" width="0.1601%" height="15" fill="rgb(226,178,8)" fg:x="211" fg:w="2"/><text x="17.1435%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.9736%" y="373" width="0.0801%" height="15" fill="rgb(241,32,34)" fg:x="212" fg:w="1"/><text x="17.2236%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="17.2138%" y="373" width="0.0801%" height="15" fill="rgb(254,26,6)" fg:x="215" fg:w="1"/><text x="17.4638%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.2138%" y="357" width="0.0801%" height="15" fill="rgb(249,71,11)" fg:x="215" fg:w="1"/><text x="17.4638%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.2138%" y="341" width="0.0801%" height="15" fill="rgb(232,170,27)" fg:x="215" fg:w="1"/><text x="17.4638%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.2138%" y="325" width="0.0801%" height="15" fill="rgb(214,223,17)" fg:x="215" fg:w="1"/><text x="17.4638%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="16.6533%" y="405" width="0.8006%" height="15" fill="rgb(250,18,15)" fg:x="208" fg:w="10"/><text x="16.9033%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="17.0536%" y="389" width="0.4003%" height="15" fill="rgb(212,153,51)" fg:x="213" fg:w="5"/><text x="17.3036%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="17.2938%" y="373" width="0.1601%" height="15" fill="rgb(219,194,12)" fg:x="216" fg:w="2"/><text x="17.5438%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.4540%" y="405" width="0.0801%" height="15" fill="rgb(212,58,17)" fg:x="218" fg:w="1"/><text x="17.7040%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.96%)</title><rect x="16.6533%" y="437" width="0.9608%" height="15" fill="rgb(254,5,10)" fg:x="208" fg:w="12"/><text x="16.9033%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.96%)</title><rect x="16.6533%" y="421" width="0.9608%" height="15" fill="rgb(246,91,7)" fg:x="208" fg:w="12"/><text x="16.9033%" y="431.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="17.5340%" y="405" width="0.0801%" height="15" fill="rgb(218,108,49)" fg:x="219" fg:w="1"/><text x="17.7840%" y="415.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="17.5340%" y="389" width="0.0801%" height="15" fill="rgb(238,123,20)" fg:x="219" fg:w="1"/><text x="17.7840%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (23 samples, 1.84%)</title><rect x="15.8527%" y="501" width="1.8415%" height="15" fill="rgb(231,69,23)" fg:x="198" fg:w="23"/><text x="16.1027%" y="511.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (17 samples, 1.36%)</title><rect x="16.3331%" y="485" width="1.3611%" height="15" fill="rgb(230,209,3)" fg:x="204" fg:w="17"/><text x="16.5831%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (17 samples, 1.36%)</title><rect x="16.3331%" y="469" width="1.3611%" height="15" fill="rgb(231,19,0)" fg:x="204" fg:w="17"/><text x="16.5831%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.04%)</title><rect x="16.6533%" y="453" width="1.0408%" height="15" fill="rgb(226,192,25)" fg:x="208" fg:w="13"/><text x="16.9033%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.6141%" y="437" width="0.0801%" height="15" fill="rgb(223,175,53)" fg:x="220" fg:w="1"/><text x="17.8641%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (26 samples, 2.08%)</title><rect x="15.6926%" y="517" width="2.0817%" height="15" fill="rgb(248,35,51)" fg:x="196" fg:w="26"/><text x="15.9426%" y="527.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="17.6942%" y="501" width="0.0801%" height="15" fill="rgb(230,37,26)" fg:x="221" fg:w="1"/><text x="17.9442%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.6942%" y="485" width="0.0801%" height="15" fill="rgb(206,120,22)" fg:x="221" fg:w="1"/><text x="17.9442%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.7742%" y="517" width="0.0801%" height="15" fill="rgb(207,165,28)" fg:x="222" fg:w="1"/><text x="18.0242%" y="527.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (115 samples, 9.21%)</title><rect x="8.7270%" y="613" width="9.2074%" height="15" fill="rgb(226,23,46)" fg:x="109" fg:w="115"/><text x="8.9770%" y="623.50">engine::inter..</text></g><g><title>engine::session::SavesEntities::check_for_changes (114 samples, 9.13%)</title><rect x="8.8070%" y="597" width="9.1273%" height="15" fill="rgb(208,130,44)" fg:x="110" fg:w="114"/><text x="9.0570%" y="607.50">engine::sessi..</text></g><g><title>kernel::model::any_entity_changes (43 samples, 3.44%)</title><rect x="14.4916%" y="581" width="3.4428%" height="15" fill="rgb(231,67,8)" fg:x="181" fg:w="43"/><text x="14.7416%" y="591.50">ker..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (40 samples, 3.20%)</title><rect x="14.7318%" y="565" width="3.2026%" height="15" fill="rgb(205,183,22)" fg:x="184" fg:w="40"/><text x="14.9818%" y="575.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (40 samples, 3.20%)</title><rect x="14.7318%" y="549" width="3.2026%" height="15" fill="rgb(224,47,9)" fg:x="184" fg:w="40"/><text x="14.9818%" y="559.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (30 samples, 2.40%)</title><rect x="15.5324%" y="533" width="2.4019%" height="15" fill="rgb(250,183,49)" fg:x="194" fg:w="30"/><text x="15.7824%" y="543.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.8543%" y="517" width="0.0801%" height="15" fill="rgb(220,151,39)" fg:x="223" fg:w="1"/><text x="18.1043%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.8543%" y="501" width="0.0801%" height="15" fill="rgb(220,118,20)" fg:x="223" fg:w="1"/><text x="18.1043%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="17.8543%" y="485" width="0.0801%" height="15" fill="rgb(231,65,51)" fg:x="223" fg:w="1"/><text x="18.1043%" y="495.50"></text></g><g><title>engine::session::Session::flush (126 samples, 10.09%)</title><rect x="8.0064%" y="645" width="10.0881%" height="15" fill="rgb(253,125,37)" fg:x="100" fg:w="126"/><text x="8.2564%" y="655.50">engine::session..</text></g><g><title>engine::session::Session::save_entity_changes (126 samples, 10.09%)</title><rect x="8.0064%" y="629" width="10.0881%" height="15" fill="rgb(232,102,6)" fg:x="100" fg:w="126"/><text x="8.2564%" y="639.50">engine::session..</text></g><g><title>engine::session::Session::world (2 samples, 0.16%)</title><rect x="17.9343%" y="613" width="0.1601%" height="15" fill="rgb(251,105,13)" fg:x="224" fg:w="2"/><text x="18.1843%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="17.9343%" y="597" width="0.1601%" height="15" fill="rgb(222,179,29)" fg:x="224" fg:w="2"/><text x="18.1843%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="17.9343%" y="581" width="0.1601%" height="15" fill="rgb(229,180,53)" fg:x="224" fg:w="2"/><text x="18.1843%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="18.0945%" y="581" width="0.0801%" height="15" fill="rgb(238,104,13)" fg:x="226" fg:w="1"/><text x="18.3445%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="18.0945%" y="565" width="0.0801%" height="15" fill="rgb(210,130,5)" fg:x="226" fg:w="1"/><text x="18.3445%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.0945%" y="549" width="0.0801%" height="15" fill="rgb(233,87,49)" fg:x="226" fg:w="1"/><text x="18.3445%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="18.0945%" y="533" width="0.0801%" height="15" fill="rgb(243,34,9)" fg:x="226" fg:w="1"/><text x="18.3445%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.0945%" y="517" width="0.0801%" height="15" fill="rgb(235,225,10)" fg:x="226" fg:w="1"/><text x="18.3445%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="18.0945%" y="501" width="0.0801%" height="15" fill="rgb(212,0,30)" fg:x="226" fg:w="1"/><text x="18.3445%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.0945%" y="485" width="0.0801%" height="15" fill="rgb(211,177,0)" fg:x="226" fg:w="1"/><text x="18.3445%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.0945%" y="469" width="0.0801%" height="15" fill="rgb(225,220,11)" fg:x="226" fg:w="1"/><text x="18.3445%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.0945%" y="453" width="0.0801%" height="15" fill="rgb(215,10,13)" fg:x="226" fg:w="1"/><text x="18.3445%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="18.0945%" y="437" width="0.0801%" height="15" fill="rgb(240,177,14)" fg:x="226" fg:w="1"/><text x="18.3445%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.0945%" y="421" width="0.0801%" height="15" fill="rgb(243,7,39)" fg:x="226" fg:w="1"/><text x="18.3445%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.0945%" y="405" width="0.0801%" height="15" fill="rgb(212,99,0)" fg:x="226" fg:w="1"/><text x="18.3445%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.0945%" y="389" width="0.0801%" height="15" fill="rgb(225,162,48)" fg:x="226" fg:w="1"/><text x="18.3445%" y="399.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="18.1745%" y="565" width="0.0801%" height="15" fill="rgb(246,16,25)" fg:x="227" fg:w="1"/><text x="18.4245%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.1745%" y="549" width="0.0801%" height="15" fill="rgb(220,150,2)" fg:x="227" fg:w="1"/><text x="18.4245%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.1745%" y="533" width="0.0801%" height="15" fill="rgb(237,113,11)" fg:x="227" fg:w="1"/><text x="18.4245%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.1745%" y="517" width="0.0801%" height="15" fill="rgb(236,70,20)" fg:x="227" fg:w="1"/><text x="18.4245%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.1745%" y="501" width="0.0801%" height="15" fill="rgb(234,94,7)" fg:x="227" fg:w="1"/><text x="18.4245%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.1745%" y="485" width="0.0801%" height="15" fill="rgb(250,221,0)" fg:x="227" fg:w="1"/><text x="18.4245%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.1745%" y="469" width="0.0801%" height="15" fill="rgb(245,149,46)" fg:x="227" fg:w="1"/><text x="18.4245%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.1745%" y="453" width="0.0801%" height="15" fill="rgb(215,37,27)" fg:x="227" fg:w="1"/><text x="18.4245%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.1745%" y="437" width="0.0801%" height="15" fill="rgb(232,65,3)" fg:x="227" fg:w="1"/><text x="18.4245%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.1745%" y="421" width="0.0801%" height="15" fill="rgb(214,2,16)" fg:x="227" fg:w="1"/><text x="18.4245%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.1745%" y="405" width="0.0801%" height="15" fill="rgb(227,131,50)" fg:x="227" fg:w="1"/><text x="18.4245%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.1745%" y="389" width="0.0801%" height="15" fill="rgb(247,131,45)" fg:x="227" fg:w="1"/><text x="18.4245%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.1745%" y="373" width="0.0801%" height="15" fill="rgb(215,97,47)" fg:x="227" fg:w="1"/><text x="18.4245%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.1745%" y="357" width="0.0801%" height="15" fill="rgb(233,143,12)" fg:x="227" fg:w="1"/><text x="18.4245%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.1745%" y="341" width="0.0801%" height="15" fill="rgb(222,57,17)" fg:x="227" fg:w="1"/><text x="18.4245%" y="351.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="18.0945%" y="597" width="0.2402%" height="15" fill="rgb(214,119,38)" fg:x="226" fg:w="3"/><text x="18.3445%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="18.1745%" y="581" width="0.1601%" height="15" fill="rgb(217,28,47)" fg:x="227" fg:w="2"/><text x="18.4245%" y="591.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="18.2546%" y="565" width="0.0801%" height="15" fill="rgb(231,14,52)" fg:x="228" fg:w="1"/><text x="18.5046%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="18.2546%" y="549" width="0.0801%" height="15" fill="rgb(220,158,18)" fg:x="228" fg:w="1"/><text x="18.5046%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.2546%" y="533" width="0.0801%" height="15" fill="rgb(222,143,46)" fg:x="228" fg:w="1"/><text x="18.5046%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="18.2546%" y="517" width="0.0801%" height="15" fill="rgb(227,165,5)" fg:x="228" fg:w="1"/><text x="18.5046%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.2546%" y="501" width="0.0801%" height="15" fill="rgb(216,222,49)" fg:x="228" fg:w="1"/><text x="18.5046%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.2546%" y="485" width="0.0801%" height="15" fill="rgb(238,73,39)" fg:x="228" fg:w="1"/><text x="18.5046%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.2546%" y="469" width="0.0801%" height="15" fill="rgb(252,115,9)" fg:x="228" fg:w="1"/><text x="18.5046%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.3347%" y="597" width="0.0801%" height="15" fill="rgb(238,202,4)" fg:x="229" fg:w="1"/><text x="18.5847%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.3347%" y="581" width="0.0801%" height="15" fill="rgb(252,153,44)" fg:x="229" fg:w="1"/><text x="18.5847%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.3347%" y="565" width="0.0801%" height="15" fill="rgb(235,128,27)" fg:x="229" fg:w="1"/><text x="18.5847%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.3347%" y="549" width="0.0801%" height="15" fill="rgb(221,121,47)" fg:x="229" fg:w="1"/><text x="18.5847%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.3347%" y="533" width="0.0801%" height="15" fill="rgb(247,211,47)" fg:x="229" fg:w="1"/><text x="18.5847%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.3347%" y="517" width="0.0801%" height="15" fill="rgb(252,47,49)" fg:x="229" fg:w="1"/><text x="18.5847%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.3347%" y="501" width="0.0801%" height="15" fill="rgb(219,119,53)" fg:x="229" fg:w="1"/><text x="18.5847%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.3347%" y="485" width="0.0801%" height="15" fill="rgb(243,165,53)" fg:x="229" fg:w="1"/><text x="18.5847%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.3347%" y="469" width="0.0801%" height="15" fill="rgb(230,12,35)" fg:x="229" fg:w="1"/><text x="18.5847%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.3347%" y="453" width="0.0801%" height="15" fill="rgb(239,57,49)" fg:x="229" fg:w="1"/><text x="18.5847%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.3347%" y="437" width="0.0801%" height="15" fill="rgb(231,154,7)" fg:x="229" fg:w="1"/><text x="18.5847%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.3347%" y="421" width="0.0801%" height="15" fill="rgb(248,81,34)" fg:x="229" fg:w="1"/><text x="18.5847%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.3347%" y="405" width="0.0801%" height="15" fill="rgb(247,9,5)" fg:x="229" fg:w="1"/><text x="18.5847%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="18.0945%" y="629" width="0.4003%" height="15" fill="rgb(228,172,27)" fg:x="226" fg:w="5"/><text x="18.3445%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="18.0945%" y="613" width="0.4003%" height="15" fill="rgb(230,57,44)" fg:x="226" fg:w="5"/><text x="18.3445%" y="623.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="18.4147%" y="597" width="0.0801%" height="15" fill="rgb(249,35,22)" fg:x="230" fg:w="1"/><text x="18.6647%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.4147%" y="581" width="0.0801%" height="15" fill="rgb(250,137,27)" fg:x="230" fg:w="1"/><text x="18.6647%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.4147%" y="565" width="0.0801%" height="15" fill="rgb(251,57,31)" fg:x="230" fg:w="1"/><text x="18.6647%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="18.4948%" y="613" width="0.0801%" height="15" fill="rgb(238,60,0)" fg:x="231" fg:w="1"/><text x="18.7448%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="18.4948%" y="597" width="0.0801%" height="15" fill="rgb(242,185,39)" fg:x="231" fg:w="1"/><text x="18.7448%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.4948%" y="581" width="0.0801%" height="15" fill="rgb(240,63,43)" fg:x="231" fg:w="1"/><text x="18.7448%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="18.5749%" y="613" width="0.0801%" height="15" fill="rgb(236,155,6)" fg:x="232" fg:w="1"/><text x="18.8249%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="18.5749%" y="597" width="0.0801%" height="15" fill="rgb(215,11,29)" fg:x="232" fg:w="1"/><text x="18.8249%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.6549%" y="533" width="0.0801%" height="15" fill="rgb(228,180,48)" fg:x="233" fg:w="1"/><text x="18.9049%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.6549%" y="517" width="0.0801%" height="15" fill="rgb(241,102,12)" fg:x="233" fg:w="1"/><text x="18.9049%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.6549%" y="501" width="0.0801%" height="15" fill="rgb(246,213,4)" fg:x="233" fg:w="1"/><text x="18.9049%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.6549%" y="485" width="0.0801%" height="15" fill="rgb(218,134,35)" fg:x="233" fg:w="1"/><text x="18.9049%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.6549%" y="469" width="0.0801%" height="15" fill="rgb(251,117,35)" fg:x="233" fg:w="1"/><text x="18.9049%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="18.6549%" y="581" width="0.1601%" height="15" fill="rgb(206,156,45)" fg:x="233" fg:w="2"/><text x="18.9049%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="18.6549%" y="565" width="0.1601%" height="15" fill="rgb(218,52,27)" fg:x="233" fg:w="2"/><text x="18.9049%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="18.6549%" y="549" width="0.1601%" height="15" fill="rgb(238,83,36)" fg:x="233" fg:w="2"/><text x="18.9049%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="18.7350%" y="533" width="0.0801%" height="15" fill="rgb(218,53,43)" fg:x="234" fg:w="1"/><text x="18.9850%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.7350%" y="517" width="0.0801%" height="15" fill="rgb(239,54,39)" fg:x="234" fg:w="1"/><text x="18.9850%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="18.7350%" y="501" width="0.0801%" height="15" fill="rgb(212,198,13)" fg:x="234" fg:w="1"/><text x="18.9850%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.7350%" y="485" width="0.0801%" height="15" fill="rgb(234,54,46)" fg:x="234" fg:w="1"/><text x="18.9850%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.7350%" y="469" width="0.0801%" height="15" fill="rgb(217,120,7)" fg:x="234" fg:w="1"/><text x="18.9850%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.7350%" y="453" width="0.0801%" height="15" fill="rgb(246,39,15)" fg:x="234" fg:w="1"/><text x="18.9850%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="18.7350%" y="437" width="0.0801%" height="15" fill="rgb(242,143,31)" fg:x="234" fg:w="1"/><text x="18.9850%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.7350%" y="421" width="0.0801%" height="15" fill="rgb(252,60,24)" fg:x="234" fg:w="1"/><text x="18.9850%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.7350%" y="405" width="0.0801%" height="15" fill="rgb(249,220,7)" fg:x="234" fg:w="1"/><text x="18.9850%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.7350%" y="389" width="0.0801%" height="15" fill="rgb(236,67,13)" fg:x="234" fg:w="1"/><text x="18.9850%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.7350%" y="373" width="0.0801%" height="15" fill="rgb(210,62,39)" fg:x="234" fg:w="1"/><text x="18.9850%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.8151%" y="501" width="0.0801%" height="15" fill="rgb(219,122,53)" fg:x="235" fg:w="1"/><text x="19.0651%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.8151%" y="485" width="0.0801%" height="15" fill="rgb(218,87,25)" fg:x="235" fg:w="1"/><text x="19.0651%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.8151%" y="469" width="0.0801%" height="15" fill="rgb(234,179,48)" fg:x="235" fg:w="1"/><text x="19.0651%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.8151%" y="453" width="0.0801%" height="15" fill="rgb(248,90,0)" fg:x="235" fg:w="1"/><text x="19.0651%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.8151%" y="437" width="0.0801%" height="15" fill="rgb(207,228,37)" fg:x="235" fg:w="1"/><text x="19.0651%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.8151%" y="421" width="0.0801%" height="15" fill="rgb(235,214,15)" fg:x="235" fg:w="1"/><text x="19.0651%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.8151%" y="405" width="0.0801%" height="15" fill="rgb(210,144,39)" fg:x="235" fg:w="1"/><text x="19.0651%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.8151%" y="389" width="0.0801%" height="15" fill="rgb(222,67,41)" fg:x="235" fg:w="1"/><text x="19.0651%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.8151%" y="373" width="0.0801%" height="15" fill="rgb(205,35,37)" fg:x="235" fg:w="1"/><text x="19.0651%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.8151%" y="357" width="0.0801%" height="15" fill="rgb(216,125,40)" fg:x="235" fg:w="1"/><text x="19.0651%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.8151%" y="341" width="0.0801%" height="15" fill="rgb(228,227,20)" fg:x="235" fg:w="1"/><text x="19.0651%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.8151%" y="325" width="0.0801%" height="15" fill="rgb(242,173,45)" fg:x="235" fg:w="1"/><text x="19.0651%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.8151%" y="309" width="0.0801%" height="15" fill="rgb(215,79,24)" fg:x="235" fg:w="1"/><text x="19.0651%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.8151%" y="293" width="0.0801%" height="15" fill="rgb(238,164,38)" fg:x="235" fg:w="1"/><text x="19.0651%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.8151%" y="517" width="0.1601%" height="15" fill="rgb(245,196,38)" fg:x="235" fg:w="2"/><text x="19.0651%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.8951%" y="501" width="0.0801%" height="15" fill="rgb(231,217,29)" fg:x="236" fg:w="1"/><text x="19.1451%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.8951%" y="485" width="0.0801%" height="15" fill="rgb(245,6,4)" fg:x="236" fg:w="1"/><text x="19.1451%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.8951%" y="469" width="0.0801%" height="15" fill="rgb(214,76,49)" fg:x="236" fg:w="1"/><text x="19.1451%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.8951%" y="453" width="0.0801%" height="15" fill="rgb(205,96,12)" fg:x="236" fg:w="1"/><text x="19.1451%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.8951%" y="437" width="0.0801%" height="15" fill="rgb(243,131,4)" fg:x="236" fg:w="1"/><text x="19.1451%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="18.8951%" y="421" width="0.0801%" height="15" fill="rgb(214,114,4)" fg:x="236" fg:w="1"/><text x="19.1451%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="18.8951%" y="405" width="0.0801%" height="15" fill="rgb(234,215,15)" fg:x="236" fg:w="1"/><text x="19.1451%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="18.8151%" y="533" width="0.2402%" height="15" fill="rgb(250,216,45)" fg:x="235" fg:w="3"/><text x="19.0651%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.9752%" y="517" width="0.0801%" height="15" fill="rgb(236,128,4)" fg:x="237" fg:w="1"/><text x="19.2252%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.9752%" y="501" width="0.0801%" height="15" fill="rgb(234,50,33)" fg:x="237" fg:w="1"/><text x="19.2252%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.9752%" y="485" width="0.0801%" height="15" fill="rgb(253,131,37)" fg:x="237" fg:w="1"/><text x="19.2252%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.9752%" y="469" width="0.0801%" height="15" fill="rgb(218,55,27)" fg:x="237" fg:w="1"/><text x="19.2252%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.9752%" y="453" width="0.0801%" height="15" fill="rgb(241,220,28)" fg:x="237" fg:w="1"/><text x="19.2252%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.9752%" y="437" width="0.0801%" height="15" fill="rgb(241,90,48)" fg:x="237" fg:w="1"/><text x="19.2252%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.9752%" y="421" width="0.0801%" height="15" fill="rgb(216,43,37)" fg:x="237" fg:w="1"/><text x="19.2252%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.9752%" y="405" width="0.0801%" height="15" fill="rgb(207,173,9)" fg:x="237" fg:w="1"/><text x="19.2252%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.9752%" y="389" width="0.0801%" height="15" fill="rgb(240,126,30)" fg:x="237" fg:w="1"/><text x="19.2252%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.9752%" y="373" width="0.0801%" height="15" fill="rgb(228,178,53)" fg:x="237" fg:w="1"/><text x="19.2252%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.9752%" y="357" width="0.0801%" height="15" fill="rgb(217,33,4)" fg:x="237" fg:w="1"/><text x="19.2252%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.9752%" y="341" width="0.0801%" height="15" fill="rgb(206,124,34)" fg:x="237" fg:w="1"/><text x="19.2252%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.0552%" y="469" width="0.0801%" height="15" fill="rgb(208,122,53)" fg:x="238" fg:w="1"/><text x="19.3052%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.0552%" y="453" width="0.0801%" height="15" fill="rgb(215,202,26)" fg:x="238" fg:w="1"/><text x="19.3052%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="19.0552%" y="533" width="0.1601%" height="15" fill="rgb(232,198,31)" fg:x="238" fg:w="2"/><text x="19.3052%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="19.0552%" y="517" width="0.1601%" height="15" fill="rgb(222,23,35)" fg:x="238" fg:w="2"/><text x="19.3052%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="19.0552%" y="501" width="0.1601%" height="15" fill="rgb(242,27,53)" fg:x="238" fg:w="2"/><text x="19.3052%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="19.0552%" y="485" width="0.1601%" height="15" fill="rgb(210,216,42)" fg:x="238" fg:w="2"/><text x="19.3052%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.1353%" y="469" width="0.0801%" height="15" fill="rgb(234,39,38)" fg:x="239" fg:w="1"/><text x="19.3853%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.1353%" y="453" width="0.0801%" height="15" fill="rgb(235,126,54)" fg:x="239" fg:w="1"/><text x="19.3853%" y="463.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="18.6549%" y="613" width="0.6405%" height="15" fill="rgb(235,150,33)" fg:x="233" fg:w="8"/><text x="18.9049%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (8 samples, 0.64%)</title><rect x="18.6549%" y="597" width="0.6405%" height="15" fill="rgb(249,49,53)" fg:x="233" fg:w="8"/><text x="18.9049%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="18.8151%" y="581" width="0.4804%" height="15" fill="rgb(238,60,50)" fg:x="235" fg:w="6"/><text x="19.0651%" y="591.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="18.8151%" y="565" width="0.4804%" height="15" fill="rgb(210,5,2)" fg:x="235" fg:w="6"/><text x="19.0651%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="18.8151%" y="549" width="0.4804%" height="15" fill="rgb(214,207,24)" fg:x="235" fg:w="6"/><text x="19.0651%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.2154%" y="533" width="0.0801%" height="15" fill="rgb(228,173,2)" fg:x="240" fg:w="1"/><text x="19.4654%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.2154%" y="517" width="0.0801%" height="15" fill="rgb(244,26,8)" fg:x="240" fg:w="1"/><text x="19.4654%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.2154%" y="501" width="0.0801%" height="15" fill="rgb(249,153,35)" fg:x="240" fg:w="1"/><text x="19.4654%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.2154%" y="485" width="0.0801%" height="15" fill="rgb(221,215,40)" fg:x="240" fg:w="1"/><text x="19.4654%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.2154%" y="469" width="0.0801%" height="15" fill="rgb(238,106,35)" fg:x="240" fg:w="1"/><text x="19.4654%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.2154%" y="453" width="0.0801%" height="15" fill="rgb(207,195,21)" fg:x="240" fg:w="1"/><text x="19.4654%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="19.2954%" y="613" width="0.0801%" height="15" fill="rgb(205,43,29)" fg:x="241" fg:w="1"/><text x="19.5454%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="19.2954%" y="597" width="0.0801%" height="15" fill="rgb(236,35,21)" fg:x="241" fg:w="1"/><text x="19.5454%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.3755%" y="597" width="0.0801%" height="15" fill="rgb(244,74,8)" fg:x="242" fg:w="1"/><text x="19.6255%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.5356%" y="517" width="0.0801%" height="15" fill="rgb(241,229,7)" fg:x="244" fg:w="1"/><text x="19.7856%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="19.3755%" y="613" width="0.3203%" height="15" fill="rgb(212,223,25)" fg:x="242" fg:w="4"/><text x="19.6255%" y="623.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.24%)</title><rect x="19.4556%" y="597" width="0.2402%" height="15" fill="rgb(234,58,53)" fg:x="243" fg:w="3"/><text x="19.7056%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="19.4556%" y="581" width="0.2402%" height="15" fill="rgb(244,36,1)" fg:x="243" fg:w="3"/><text x="19.7056%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="19.4556%" y="565" width="0.2402%" height="15" fill="rgb(222,40,54)" fg:x="243" fg:w="3"/><text x="19.7056%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="19.4556%" y="549" width="0.2402%" height="15" fill="rgb(210,207,39)" fg:x="243" fg:w="3"/><text x="19.7056%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="19.4556%" y="533" width="0.2402%" height="15" fill="rgb(234,52,14)" fg:x="243" fg:w="3"/><text x="19.7056%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.6157%" y="517" width="0.0801%" height="15" fill="rgb(239,108,46)" fg:x="245" fg:w="1"/><text x="19.8657%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.6958%" y="597" width="0.0801%" height="15" fill="rgb(252,223,5)" fg:x="246" fg:w="1"/><text x="19.9458%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.7758%" y="549" width="0.0801%" height="15" fill="rgb(227,181,11)" fg:x="247" fg:w="1"/><text x="20.0258%" y="559.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="19.8559%" y="549" width="0.0801%" height="15" fill="rgb(248,126,40)" fg:x="248" fg:w="1"/><text x="20.1059%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="19.8559%" y="533" width="0.0801%" height="15" fill="rgb(243,1,18)" fg:x="248" fg:w="1"/><text x="20.1059%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="19.8559%" y="517" width="0.0801%" height="15" fill="rgb(214,145,23)" fg:x="248" fg:w="1"/><text x="20.1059%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="19.7758%" y="565" width="0.3203%" height="15" fill="rgb(241,218,11)" fg:x="247" fg:w="4"/><text x="20.0258%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="19.9359%" y="549" width="0.1601%" height="15" fill="rgb(214,219,24)" fg:x="249" fg:w="2"/><text x="20.1859%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="19.9359%" y="533" width="0.1601%" height="15" fill="rgb(235,32,7)" fg:x="249" fg:w="2"/><text x="20.1859%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="19.9359%" y="517" width="0.1601%" height="15" fill="rgb(227,121,28)" fg:x="249" fg:w="2"/><text x="20.1859%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.9359%" y="501" width="0.1601%" height="15" fill="rgb(216,129,49)" fg:x="249" fg:w="2"/><text x="20.1859%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="19.9359%" y="485" width="0.1601%" height="15" fill="rgb(207,194,50)" fg:x="249" fg:w="2"/><text x="20.1859%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.9359%" y="469" width="0.1601%" height="15" fill="rgb(207,4,18)" fg:x="249" fg:w="2"/><text x="20.1859%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="19.9359%" y="453" width="0.1601%" height="15" fill="rgb(213,50,30)" fg:x="249" fg:w="2"/><text x="20.1859%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.9359%" y="437" width="0.1601%" height="15" fill="rgb(208,77,22)" fg:x="249" fg:w="2"/><text x="20.1859%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="19.9359%" y="421" width="0.1601%" height="15" fill="rgb(244,204,34)" fg:x="249" fg:w="2"/><text x="20.1859%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.0160%" y="405" width="0.0801%" height="15" fill="rgb(230,20,17)" fg:x="250" fg:w="1"/><text x="20.2660%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="20.0961%" y="549" width="0.0801%" height="15" fill="rgb(237,83,15)" fg:x="251" fg:w="1"/><text x="20.3461%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.0961%" y="533" width="0.0801%" height="15" fill="rgb(221,109,25)" fg:x="251" fg:w="1"/><text x="20.3461%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.1761%" y="517" width="0.0801%" height="15" fill="rgb(205,194,52)" fg:x="252" fg:w="1"/><text x="20.4261%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.1761%" y="501" width="0.0801%" height="15" fill="rgb(244,173,54)" fg:x="252" fg:w="1"/><text x="20.4261%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.1761%" y="485" width="0.0801%" height="15" fill="rgb(227,181,18)" fg:x="252" fg:w="1"/><text x="20.4261%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.2562%" y="485" width="0.0801%" height="15" fill="rgb(238,36,30)" fg:x="253" fg:w="1"/><text x="20.5062%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.2562%" y="469" width="0.0801%" height="15" fill="rgb(254,85,0)" fg:x="253" fg:w="1"/><text x="20.5062%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="20.2562%" y="517" width="0.1601%" height="15" fill="rgb(247,63,33)" fg:x="253" fg:w="2"/><text x="20.5062%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="20.2562%" y="501" width="0.1601%" height="15" fill="rgb(220,7,54)" fg:x="253" fg:w="2"/><text x="20.5062%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.3363%" y="485" width="0.0801%" height="15" fill="rgb(238,227,21)" fg:x="254" fg:w="1"/><text x="20.5863%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.3363%" y="469" width="0.0801%" height="15" fill="rgb(237,29,31)" fg:x="254" fg:w="1"/><text x="20.5863%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.72%)</title><rect x="19.7758%" y="597" width="0.7206%" height="15" fill="rgb(211,21,50)" fg:x="247" fg:w="9"/><text x="20.0258%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (9 samples, 0.72%)</title><rect x="19.7758%" y="581" width="0.7206%" height="15" fill="rgb(239,119,2)" fg:x="247" fg:w="9"/><text x="20.0258%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="20.0961%" y="565" width="0.4003%" height="15" fill="rgb(250,2,39)" fg:x="251" fg:w="5"/><text x="20.3461%" y="575.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="20.1761%" y="549" width="0.3203%" height="15" fill="rgb(244,46,53)" fg:x="252" fg:w="4"/><text x="20.4261%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="20.1761%" y="533" width="0.3203%" height="15" fill="rgb(209,21,19)" fg:x="252" fg:w="4"/><text x="20.4261%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="20.4163%" y="517" width="0.0801%" height="15" fill="rgb(236,145,4)" fg:x="255" fg:w="1"/><text x="20.6663%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.4163%" y="501" width="0.0801%" height="15" fill="rgb(220,133,36)" fg:x="255" fg:w="1"/><text x="20.6663%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="20.4163%" y="485" width="0.0801%" height="15" fill="rgb(244,18,3)" fg:x="255" fg:w="1"/><text x="20.6663%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.4163%" y="469" width="0.0801%" height="15" fill="rgb(232,171,48)" fg:x="255" fg:w="1"/><text x="20.6663%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="20.4163%" y="453" width="0.0801%" height="15" fill="rgb(223,223,53)" fg:x="255" fg:w="1"/><text x="20.6663%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.4163%" y="437" width="0.0801%" height="15" fill="rgb(246,92,13)" fg:x="255" fg:w="1"/><text x="20.6663%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="20.4163%" y="421" width="0.0801%" height="15" fill="rgb(229,171,10)" fg:x="255" fg:w="1"/><text x="20.6663%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.4163%" y="405" width="0.0801%" height="15" fill="rgb(213,131,26)" fg:x="255" fg:w="1"/><text x="20.6663%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.4163%" y="389" width="0.0801%" height="15" fill="rgb(242,87,54)" fg:x="255" fg:w="1"/><text x="20.6663%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.4163%" y="373" width="0.0801%" height="15" fill="rgb(237,21,35)" fg:x="255" fg:w="1"/><text x="20.6663%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="20.4163%" y="357" width="0.0801%" height="15" fill="rgb(253,13,47)" fg:x="255" fg:w="1"/><text x="20.6663%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="20.4163%" y="341" width="0.0801%" height="15" fill="rgb(215,122,49)" fg:x="255" fg:w="1"/><text x="20.6663%" y="351.50"></text></g><g><title>plugins_core::build::Build::holding (31 samples, 2.48%)</title><rect x="18.0945%" y="645" width="2.4820%" height="15" fill="rgb(209,179,30)" fg:x="226" fg:w="31"/><text x="18.3445%" y="655.50">pl..</text></g><g><title>plugins_core::tools::set_container (26 samples, 2.08%)</title><rect x="18.4948%" y="629" width="2.0817%" height="15" fill="rgb(235,100,24)" fg:x="231" fg:w="26"/><text x="18.7448%" y="639.50">p..</text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (11 samples, 0.88%)</title><rect x="19.6958%" y="613" width="0.8807%" height="15" fill="rgb(209,67,24)" fg:x="246" fg:w="11"/><text x="19.9458%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="20.4964%" y="597" width="0.0801%" height="15" fill="rgb(206,74,32)" fg:x="256" fg:w="1"/><text x="20.7464%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="20.4964%" y="581" width="0.0801%" height="15" fill="rgb(212,45,25)" fg:x="256" fg:w="1"/><text x="20.7464%" y="591.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="20.4964%" y="565" width="0.0801%" height="15" fill="rgb(239,26,3)" fg:x="256" fg:w="1"/><text x="20.7464%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="20.4964%" y="549" width="0.0801%" height="15" fill="rgb(218,36,15)" fg:x="256" fg:w="1"/><text x="20.7464%" y="559.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="20.4964%" y="533" width="0.0801%" height="15" fill="rgb(206,108,24)" fg:x="256" fg:w="1"/><text x="20.7464%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="20.4964%" y="517" width="0.0801%" height="15" fill="rgb(234,204,42)" fg:x="256" fg:w="1"/><text x="20.7464%" y="527.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="20.4964%" y="501" width="0.0801%" height="15" fill="rgb(229,2,11)" fg:x="256" fg:w="1"/><text x="20.7464%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="20.4964%" y="485" width="0.0801%" height="15" fill="rgb(221,20,48)" fg:x="256" fg:w="1"/><text x="20.7464%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.4964%" y="469" width="0.0801%" height="15" fill="rgb(244,164,10)" fg:x="256" fg:w="1"/><text x="20.7464%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.4964%" y="453" width="0.0801%" height="15" fill="rgb(243,229,2)" fg:x="256" fg:w="1"/><text x="20.7464%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.4964%" y="437" width="0.0801%" height="15" fill="rgb(232,131,37)" fg:x="256" fg:w="1"/><text x="20.7464%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.4964%" y="421" width="0.0801%" height="15" fill="rgb(217,156,11)" fg:x="256" fg:w="1"/><text x="20.7464%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.4964%" y="405" width="0.0801%" height="15" fill="rgb(239,99,48)" fg:x="256" fg:w="1"/><text x="20.7464%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.4964%" y="389" width="0.0801%" height="15" fill="rgb(231,209,9)" fg:x="256" fg:w="1"/><text x="20.7464%" y="399.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="20.4964%" y="373" width="0.0801%" height="15" fill="rgb(254,97,27)" fg:x="256" fg:w="1"/><text x="20.7464%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.5765%" y="533" width="0.1601%" height="15" fill="rgb(223,151,38)" fg:x="257" fg:w="2"/><text x="20.8265%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.5765%" y="517" width="0.1601%" height="15" fill="rgb(219,206,35)" fg:x="257" fg:w="2"/><text x="20.8265%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.5765%" y="501" width="0.1601%" height="15" fill="rgb(216,130,31)" fg:x="257" fg:w="2"/><text x="20.8265%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="20.5765%" y="485" width="0.1601%" height="15" fill="rgb(251,97,34)" fg:x="257" fg:w="2"/><text x="20.8265%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.7366%" y="533" width="0.0801%" height="15" fill="rgb(246,159,47)" fg:x="259" fg:w="1"/><text x="20.9866%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="20.7366%" y="517" width="0.0801%" height="15" fill="rgb(232,87,10)" fg:x="259" fg:w="1"/><text x="20.9866%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.7366%" y="501" width="0.0801%" height="15" fill="rgb(249,1,37)" fg:x="259" fg:w="1"/><text x="20.9866%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.7366%" y="485" width="0.0801%" height="15" fill="rgb(239,135,14)" fg:x="259" fg:w="1"/><text x="20.9866%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.7366%" y="469" width="0.0801%" height="15" fill="rgb(253,116,46)" fg:x="259" fg:w="1"/><text x="20.9866%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.7366%" y="453" width="0.0801%" height="15" fill="rgb(222,217,37)" fg:x="259" fg:w="1"/><text x="20.9866%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="20.5765%" y="581" width="0.3203%" height="15" fill="rgb(252,96,8)" fg:x="257" fg:w="4"/><text x="20.8265%" y="591.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="20.5765%" y="565" width="0.3203%" height="15" fill="rgb(254,103,41)" fg:x="257" fg:w="4"/><text x="20.8265%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="20.5765%" y="549" width="0.3203%" height="15" fill="rgb(218,213,19)" fg:x="257" fg:w="4"/><text x="20.8265%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="20.8167%" y="533" width="0.0801%" height="15" fill="rgb(253,95,21)" fg:x="260" fg:w="1"/><text x="21.0667%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.8167%" y="517" width="0.0801%" height="15" fill="rgb(229,26,28)" fg:x="260" fg:w="1"/><text x="21.0667%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="20.8167%" y="501" width="0.0801%" height="15" fill="rgb(230,129,16)" fg:x="260" fg:w="1"/><text x="21.0667%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.8167%" y="485" width="0.0801%" height="15" fill="rgb(236,126,17)" fg:x="260" fg:w="1"/><text x="21.0667%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.8967%" y="469" width="0.0801%" height="15" fill="rgb(209,33,33)" fg:x="261" fg:w="1"/><text x="21.1467%" y="479.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="20.8967%" y="565" width="0.1601%" height="15" fill="rgb(227,85,29)" fg:x="261" fg:w="2"/><text x="21.1467%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="20.8967%" y="549" width="0.1601%" height="15" fill="rgb(241,53,46)" fg:x="261" fg:w="2"/><text x="21.1467%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="20.8967%" y="533" width="0.1601%" height="15" fill="rgb(228,167,53)" fg:x="261" fg:w="2"/><text x="21.1467%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.8967%" y="517" width="0.1601%" height="15" fill="rgb(238,195,45)" fg:x="261" fg:w="2"/><text x="21.1467%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="20.8967%" y="501" width="0.1601%" height="15" fill="rgb(252,124,45)" fg:x="261" fg:w="2"/><text x="21.1467%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.8967%" y="485" width="0.1601%" height="15" fill="rgb(251,38,35)" fg:x="261" fg:w="2"/><text x="21.1467%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="20.9768%" y="469" width="0.0801%" height="15" fill="rgb(227,33,2)" fg:x="262" fg:w="1"/><text x="21.2268%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.9768%" y="453" width="0.0801%" height="15" fill="rgb(223,157,46)" fg:x="262" fg:w="1"/><text x="21.2268%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="20.9768%" y="437" width="0.0801%" height="15" fill="rgb(222,78,41)" fg:x="262" fg:w="1"/><text x="21.2268%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.9768%" y="421" width="0.0801%" height="15" fill="rgb(248,176,11)" fg:x="262" fg:w="1"/><text x="21.2268%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.9768%" y="405" width="0.0801%" height="15" fill="rgb(241,221,18)" fg:x="262" fg:w="1"/><text x="21.2268%" y="415.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (7 samples, 0.56%)</title><rect x="20.5765%" y="597" width="0.5604%" height="15" fill="rgb(218,85,22)" fg:x="257" fg:w="7"/><text x="20.8265%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="20.8967%" y="581" width="0.2402%" height="15" fill="rgb(222,223,7)" fg:x="261" fg:w="3"/><text x="21.1467%" y="591.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="21.0568%" y="565" width="0.0801%" height="15" fill="rgb(254,59,39)" fg:x="263" fg:w="1"/><text x="21.3068%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="21.0568%" y="549" width="0.0801%" height="15" fill="rgb(247,100,27)" fg:x="263" fg:w="1"/><text x="21.3068%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.0568%" y="533" width="0.0801%" height="15" fill="rgb(237,207,10)" fg:x="263" fg:w="1"/><text x="21.3068%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.0568%" y="517" width="0.0801%" height="15" fill="rgb(220,121,28)" fg:x="263" fg:w="1"/><text x="21.3068%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.0568%" y="501" width="0.0801%" height="15" fill="rgb(213,223,20)" fg:x="263" fg:w="1"/><text x="21.3068%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.0568%" y="485" width="0.0801%" height="15" fill="rgb(205,121,27)" fg:x="263" fg:w="1"/><text x="21.3068%" y="495.50"></text></g><g><title>plugins_core::build::Build::into_entry (8 samples, 0.64%)</title><rect x="20.5765%" y="645" width="0.6405%" height="15" fill="rgb(253,24,53)" fg:x="257" fg:w="8"/><text x="20.8265%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="20.5765%" y="629" width="0.6405%" height="15" fill="rgb(224,224,47)" fg:x="257" fg:w="8"/><text x="20.8265%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (8 samples, 0.64%)</title><rect x="20.5765%" y="613" width="0.6405%" height="15" fill="rgb(250,125,36)" fg:x="257" fg:w="8"/><text x="20.8265%" y="623.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="21.1369%" y="597" width="0.0801%" height="15" fill="rgb(240,144,38)" fg:x="264" fg:w="1"/><text x="21.3869%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.1369%" y="581" width="0.0801%" height="15" fill="rgb(250,15,50)" fg:x="264" fg:w="1"/><text x="21.3869%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.2170%" y="597" width="0.0801%" height="15" fill="rgb(210,24,26)" fg:x="265" fg:w="1"/><text x="21.4670%" y="607.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="21.2170%" y="645" width="0.1601%" height="15" fill="rgb(234,53,53)" fg:x="265" fg:w="2"/><text x="21.4670%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="21.2170%" y="629" width="0.1601%" height="15" fill="rgb(208,108,28)" fg:x="265" fg:w="2"/><text x="21.4670%" y="639.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="21.2170%" y="613" width="0.1601%" height="15" fill="rgb(227,143,7)" fg:x="265" fg:w="2"/><text x="21.4670%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="21.2970%" y="597" width="0.0801%" height="15" fill="rgb(238,189,38)" fg:x="266" fg:w="1"/><text x="21.5470%" y="607.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="21.2970%" y="581" width="0.0801%" height="15" fill="rgb(222,69,15)" fg:x="266" fg:w="1"/><text x="21.5470%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.2970%" y="565" width="0.0801%" height="15" fill="rgb(213,169,7)" fg:x="266" fg:w="1"/><text x="21.5470%" y="575.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="21.2970%" y="549" width="0.0801%" height="15" fill="rgb(251,219,4)" fg:x="266" fg:w="1"/><text x="21.5470%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.2970%" y="533" width="0.0801%" height="15" fill="rgb(241,55,40)" fg:x="266" fg:w="1"/><text x="21.5470%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="21.2970%" y="517" width="0.0801%" height="15" fill="rgb(243,57,30)" fg:x="266" fg:w="1"/><text x="21.5470%" y="527.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="21.6173%" y="565" width="0.0801%" height="15" fill="rgb(234,50,30)" fg:x="270" fg:w="1"/><text x="21.8673%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="21.6173%" y="549" width="0.0801%" height="15" fill="rgb(239,23,42)" fg:x="270" fg:w="1"/><text x="21.8673%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.6974%" y="533" width="0.1601%" height="15" fill="rgb(217,38,19)" fg:x="271" fg:w="2"/><text x="21.9474%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.6974%" y="517" width="0.1601%" height="15" fill="rgb(215,179,16)" fg:x="271" fg:w="2"/><text x="21.9474%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.6974%" y="501" width="0.1601%" height="15" fill="rgb(254,21,37)" fg:x="271" fg:w="2"/><text x="21.9474%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.6974%" y="485" width="0.1601%" height="15" fill="rgb(219,207,48)" fg:x="271" fg:w="2"/><text x="21.9474%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.7774%" y="469" width="0.0801%" height="15" fill="rgb(227,225,41)" fg:x="272" fg:w="1"/><text x="22.0274%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="21.8575%" y="437" width="0.0801%" height="15" fill="rgb(223,130,1)" fg:x="273" fg:w="1"/><text x="22.1075%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.8575%" y="421" width="0.0801%" height="15" fill="rgb(249,54,42)" fg:x="273" fg:w="1"/><text x="22.1075%" y="431.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="21.6173%" y="597" width="0.4003%" height="15" fill="rgb(248,69,25)" fg:x="270" fg:w="5"/><text x="21.8673%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="21.6173%" y="581" width="0.4003%" height="15" fill="rgb(234,21,32)" fg:x="270" fg:w="5"/><text x="21.8673%" y="591.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="21.6974%" y="565" width="0.3203%" height="15" fill="rgb(252,136,6)" fg:x="271" fg:w="4"/><text x="21.9474%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="21.6974%" y="549" width="0.3203%" height="15" fill="rgb(245,87,12)" fg:x="271" fg:w="4"/><text x="21.9474%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="21.8575%" y="533" width="0.1601%" height="15" fill="rgb(208,12,15)" fg:x="273" fg:w="2"/><text x="22.1075%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.8575%" y="517" width="0.1601%" height="15" fill="rgb(250,98,2)" fg:x="273" fg:w="2"/><text x="22.1075%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="21.8575%" y="501" width="0.1601%" height="15" fill="rgb(205,213,15)" fg:x="273" fg:w="2"/><text x="22.1075%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.8575%" y="485" width="0.1601%" height="15" fill="rgb(248,192,44)" fg:x="273" fg:w="2"/><text x="22.1075%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="21.8575%" y="469" width="0.1601%" height="15" fill="rgb(221,89,17)" fg:x="273" fg:w="2"/><text x="22.1075%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.8575%" y="453" width="0.1601%" height="15" fill="rgb(209,55,3)" fg:x="273" fg:w="2"/><text x="22.1075%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="21.9376%" y="437" width="0.0801%" height="15" fill="rgb(247,23,45)" fg:x="274" fg:w="1"/><text x="22.1876%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.9376%" y="421" width="0.0801%" height="15" fill="rgb(235,152,23)" fg:x="274" fg:w="1"/><text x="22.1876%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.9376%" y="405" width="0.0801%" height="15" fill="rgb(244,63,13)" fg:x="274" fg:w="1"/><text x="22.1876%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.9376%" y="389" width="0.0801%" height="15" fill="rgb(227,30,37)" fg:x="274" fg:w="1"/><text x="22.1876%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.0176%" y="597" width="0.0801%" height="15" fill="rgb(224,49,42)" fg:x="275" fg:w="1"/><text x="22.2676%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.0176%" y="581" width="0.0801%" height="15" fill="rgb(218,129,5)" fg:x="275" fg:w="1"/><text x="22.2676%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="21.5372%" y="629" width="0.6405%" height="15" fill="rgb(240,199,54)" fg:x="269" fg:w="8"/><text x="21.7872%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="21.6173%" y="613" width="0.5604%" height="15" fill="rgb(234,31,13)" fg:x="270" fg:w="7"/><text x="21.8673%" y="623.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="22.0977%" y="597" width="0.0801%" height="15" fill="rgb(219,73,54)" fg:x="276" fg:w="1"/><text x="22.3477%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (1 samples, 0.08%)</title><rect x="22.0977%" y="581" width="0.0801%" height="15" fill="rgb(251,162,10)" fg:x="276" fg:w="1"/><text x="22.3477%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="22.0977%" y="565" width="0.0801%" height="15" fill="rgb(240,138,47)" fg:x="276" fg:w="1"/><text x="22.3477%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.0977%" y="549" width="0.0801%" height="15" fill="rgb(216,138,26)" fg:x="276" fg:w="1"/><text x="22.3477%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.6581%" y="405" width="0.0801%" height="15" fill="rgb(243,17,35)" fg:x="283" fg:w="1"/><text x="22.9081%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.6581%" y="389" width="0.0801%" height="15" fill="rgb(241,60,18)" fg:x="283" fg:w="1"/><text x="22.9081%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="22.5781%" y="469" width="0.2402%" height="15" fill="rgb(234,2,44)" fg:x="282" fg:w="3"/><text x="22.8281%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="22.5781%" y="453" width="0.2402%" height="15" fill="rgb(225,225,33)" fg:x="282" fg:w="3"/><text x="22.8281%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="22.5781%" y="437" width="0.2402%" height="15" fill="rgb(234,50,31)" fg:x="282" fg:w="3"/><text x="22.8281%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="22.5781%" y="421" width="0.2402%" height="15" fill="rgb(249,6,25)" fg:x="282" fg:w="3"/><text x="22.8281%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.7382%" y="405" width="0.0801%" height="15" fill="rgb(241,5,17)" fg:x="284" fg:w="1"/><text x="22.9882%" y="415.50"></text></g><g><title>plugins_core::build::Build::into_entry (6 samples, 0.48%)</title><rect x="22.4179%" y="581" width="0.4804%" height="15" fill="rgb(207,116,10)" fg:x="280" fg:w="6"/><text x="22.6679%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="22.4179%" y="565" width="0.4804%" height="15" fill="rgb(222,128,18)" fg:x="280" fg:w="6"/><text x="22.6679%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="22.4179%" y="549" width="0.4804%" height="15" fill="rgb(229,109,25)" fg:x="280" fg:w="6"/><text x="22.6679%" y="559.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="22.4179%" y="533" width="0.4804%" height="15" fill="rgb(222,102,25)" fg:x="280" fg:w="6"/><text x="22.6679%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="22.4980%" y="517" width="0.4003%" height="15" fill="rgb(239,211,5)" fg:x="281" fg:w="5"/><text x="22.7480%" y="527.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="22.4980%" y="501" width="0.4003%" height="15" fill="rgb(223,136,26)" fg:x="281" fg:w="5"/><text x="22.7480%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="22.4980%" y="485" width="0.4003%" height="15" fill="rgb(227,30,15)" fg:x="281" fg:w="5"/><text x="22.7480%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="22.8183%" y="469" width="0.0801%" height="15" fill="rgb(247,76,4)" fg:x="285" fg:w="1"/><text x="23.0683%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.8183%" y="453" width="0.0801%" height="15" fill="rgb(245,38,48)" fg:x="285" fg:w="1"/><text x="23.0683%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="22.8183%" y="437" width="0.0801%" height="15" fill="rgb(210,220,14)" fg:x="285" fg:w="1"/><text x="23.0683%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.8183%" y="421" width="0.0801%" height="15" fill="rgb(224,60,51)" fg:x="285" fg:w="1"/><text x="23.0683%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.8183%" y="405" width="0.0801%" height="15" fill="rgb(212,133,49)" fg:x="285" fg:w="1"/><text x="23.0683%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.8983%" y="469" width="0.0801%" height="15" fill="rgb(231,39,22)" fg:x="286" fg:w="1"/><text x="23.1483%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.8983%" y="453" width="0.0801%" height="15" fill="rgb(236,173,22)" fg:x="286" fg:w="1"/><text x="23.1483%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.8983%" y="437" width="0.0801%" height="15" fill="rgb(210,70,0)" fg:x="286" fg:w="1"/><text x="23.1483%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.8983%" y="421" width="0.0801%" height="15" fill="rgb(215,170,11)" fg:x="286" fg:w="1"/><text x="23.1483%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="22.8983%" y="517" width="0.2402%" height="15" fill="rgb(220,154,28)" fg:x="286" fg:w="3"/><text x="23.1483%" y="527.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="22.8983%" y="501" width="0.2402%" height="15" fill="rgb(240,160,41)" fg:x="286" fg:w="3"/><text x="23.1483%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="22.8983%" y="485" width="0.2402%" height="15" fill="rgb(243,215,41)" fg:x="286" fg:w="3"/><text x="23.1483%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="22.9784%" y="469" width="0.1601%" height="15" fill="rgb(214,208,31)" fg:x="287" fg:w="2"/><text x="23.2284%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.9784%" y="453" width="0.1601%" height="15" fill="rgb(247,57,22)" fg:x="287" fg:w="2"/><text x="23.2284%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="23.0584%" y="437" width="0.0801%" height="15" fill="rgb(228,73,52)" fg:x="288" fg:w="1"/><text x="23.3084%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.0584%" y="421" width="0.0801%" height="15" fill="rgb(252,60,9)" fg:x="288" fg:w="1"/><text x="23.3084%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="23.0584%" y="405" width="0.0801%" height="15" fill="rgb(233,9,51)" fg:x="288" fg:w="1"/><text x="23.3084%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.0584%" y="389" width="0.0801%" height="15" fill="rgb(223,67,14)" fg:x="288" fg:w="1"/><text x="23.3084%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.0584%" y="373" width="0.0801%" height="15" fill="rgb(222,86,2)" fg:x="288" fg:w="1"/><text x="23.3084%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="23.0584%" y="357" width="0.0801%" height="15" fill="rgb(243,58,54)" fg:x="288" fg:w="1"/><text x="23.3084%" y="367.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="23.1385%" y="501" width="0.0801%" height="15" fill="rgb(210,200,39)" fg:x="289" fg:w="1"/><text x="23.3885%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.1385%" y="485" width="0.0801%" height="15" fill="rgb(238,135,9)" fg:x="289" fg:w="1"/><text x="23.3885%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="23.1385%" y="469" width="0.0801%" height="15" fill="rgb(232,179,7)" fg:x="289" fg:w="1"/><text x="23.3885%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.1385%" y="453" width="0.0801%" height="15" fill="rgb(245,65,41)" fg:x="289" fg:w="1"/><text x="23.3885%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="23.1385%" y="437" width="0.0801%" height="15" fill="rgb(227,43,8)" fg:x="289" fg:w="1"/><text x="23.3885%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.1385%" y="421" width="0.0801%" height="15" fill="rgb(235,91,14)" fg:x="289" fg:w="1"/><text x="23.3885%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="23.1385%" y="405" width="0.0801%" height="15" fill="rgb(235,219,31)" fg:x="289" fg:w="1"/><text x="23.3885%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.1385%" y="389" width="0.0801%" height="15" fill="rgb(227,121,25)" fg:x="289" fg:w="1"/><text x="23.3885%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="23.1385%" y="373" width="0.0801%" height="15" fill="rgb(254,129,24)" fg:x="289" fg:w="1"/><text x="23.3885%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.1385%" y="357" width="0.0801%" height="15" fill="rgb(226,144,49)" fg:x="289" fg:w="1"/><text x="23.3885%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.1385%" y="341" width="0.0801%" height="15" fill="rgb(214,187,32)" fg:x="289" fg:w="1"/><text x="23.3885%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.1385%" y="325" width="0.0801%" height="15" fill="rgb(243,129,46)" fg:x="289" fg:w="1"/><text x="23.3885%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.2186%" y="469" width="0.0801%" height="15" fill="rgb(221,185,35)" fg:x="290" fg:w="1"/><text x="23.4686%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.2186%" y="453" width="0.0801%" height="15" fill="rgb(205,0,32)" fg:x="290" fg:w="1"/><text x="23.4686%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.2186%" y="437" width="0.0801%" height="15" fill="rgb(229,179,12)" fg:x="290" fg:w="1"/><text x="23.4686%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.2186%" y="421" width="0.0801%" height="15" fill="rgb(252,107,19)" fg:x="290" fg:w="1"/><text x="23.4686%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.3787%" y="405" width="0.0801%" height="15" fill="rgb(220,95,27)" fg:x="292" fg:w="1"/><text x="23.6287%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.3787%" y="389" width="0.0801%" height="15" fill="rgb(240,113,40)" fg:x="292" fg:w="1"/><text x="23.6287%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.3787%" y="373" width="0.0801%" height="15" fill="rgb(208,4,43)" fg:x="292" fg:w="1"/><text x="23.6287%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="23.4588%" y="373" width="0.0801%" height="15" fill="rgb(247,189,30)" fg:x="293" fg:w="1"/><text x="23.7088%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="22.8983%" y="565" width="0.7206%" height="15" fill="rgb(231,157,17)" fg:x="286" fg:w="9"/><text x="23.1483%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (9 samples, 0.72%)</title><rect x="22.8983%" y="549" width="0.7206%" height="15" fill="rgb(224,139,6)" fg:x="286" fg:w="9"/><text x="23.1483%" y="559.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (9 samples, 0.72%)</title><rect x="22.8983%" y="533" width="0.7206%" height="15" fill="rgb(223,83,16)" fg:x="286" fg:w="9"/><text x="23.1483%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (6 samples, 0.48%)</title><rect x="23.1385%" y="517" width="0.4804%" height="15" fill="rgb(232,211,20)" fg:x="289" fg:w="6"/><text x="23.3885%" y="527.50"></text></g><g><title>kernel::model::props::save_props (5 samples, 0.40%)</title><rect x="23.2186%" y="501" width="0.4003%" height="15" fill="rgb(225,203,35)" fg:x="290" fg:w="5"/><text x="23.4686%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="23.2186%" y="485" width="0.4003%" height="15" fill="rgb(215,211,44)" fg:x="290" fg:w="5"/><text x="23.4686%" y="495.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (4 samples, 0.32%)</title><rect x="23.2986%" y="469" width="0.3203%" height="15" fill="rgb(248,213,26)" fg:x="291" fg:w="4"/><text x="23.5486%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="23.3787%" y="453" width="0.2402%" height="15" fill="rgb(214,23,52)" fg:x="292" fg:w="3"/><text x="23.6287%" y="463.50"></text></g><g><title>serde_json::value::to_value (3 samples, 0.24%)</title><rect x="23.3787%" y="437" width="0.2402%" height="15" fill="rgb(225,173,50)" fg:x="292" fg:w="3"/><text x="23.6287%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="23.3787%" y="421" width="0.2402%" height="15" fill="rgb(206,150,22)" fg:x="292" fg:w="3"/><text x="23.6287%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="23.4588%" y="405" width="0.1601%" height="15" fill="rgb(239,64,23)" fg:x="293" fg:w="2"/><text x="23.7088%" y="415.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="23.4588%" y="389" width="0.1601%" height="15" fill="rgb(242,50,38)" fg:x="293" fg:w="2"/><text x="23.7088%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.5388%" y="373" width="0.0801%" height="15" fill="rgb(217,91,15)" fg:x="294" fg:w="1"/><text x="23.7888%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="23.5388%" y="357" width="0.0801%" height="15" fill="rgb(230,172,6)" fg:x="294" fg:w="1"/><text x="23.7888%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.5388%" y="341" width="0.0801%" height="15" fill="rgb(221,98,26)" fg:x="294" fg:w="1"/><text x="23.7888%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.5388%" y="325" width="0.0801%" height="15" fill="rgb(227,210,45)" fg:x="294" fg:w="1"/><text x="23.7888%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6990%" y="405" width="0.0801%" height="15" fill="rgb(206,8,30)" fg:x="296" fg:w="1"/><text x="23.9490%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.6990%" y="389" width="0.0801%" height="15" fill="rgb(241,219,17)" fg:x="296" fg:w="1"/><text x="23.9490%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.6990%" y="373" width="0.0801%" height="15" fill="rgb(247,121,29)" fg:x="296" fg:w="1"/><text x="23.9490%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.6990%" y="357" width="0.0801%" height="15" fill="rgb(219,169,49)" fg:x="296" fg:w="1"/><text x="23.9490%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.6990%" y="341" width="0.0801%" height="15" fill="rgb(253,49,49)" fg:x="296" fg:w="1"/><text x="23.9490%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.6990%" y="325" width="0.0801%" height="15" fill="rgb(217,178,3)" fg:x="296" fg:w="1"/><text x="23.9490%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="23.6990%" y="309" width="0.0801%" height="15" fill="rgb(234,73,37)" fg:x="296" fg:w="1"/><text x="23.9490%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="23.6990%" y="293" width="0.0801%" height="15" fill="rgb(250,98,22)" fg:x="296" fg:w="1"/><text x="23.9490%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.6990%" y="453" width="0.1601%" height="15" fill="rgb(220,108,37)" fg:x="296" fg:w="2"/><text x="23.9490%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.6990%" y="437" width="0.1601%" height="15" fill="rgb(225,168,10)" fg:x="296" fg:w="2"/><text x="23.9490%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.6990%" y="421" width="0.1601%" height="15" fill="rgb(247,215,21)" fg:x="296" fg:w="2"/><text x="23.9490%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.7790%" y="405" width="0.0801%" height="15" fill="rgb(253,189,31)" fg:x="297" fg:w="1"/><text x="24.0290%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="23.6990%" y="469" width="0.3203%" height="15" fill="rgb(241,54,22)" fg:x="296" fg:w="4"/><text x="23.9490%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="23.8591%" y="453" width="0.1601%" height="15" fill="rgb(211,87,4)" fg:x="298" fg:w="2"/><text x="24.1091%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="23.6189%" y="517" width="0.4804%" height="15" fill="rgb(245,112,24)" fg:x="295" fg:w="6"/><text x="23.8689%" y="527.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="23.6990%" y="501" width="0.4003%" height="15" fill="rgb(235,190,41)" fg:x="296" fg:w="5"/><text x="23.9490%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="23.6990%" y="485" width="0.4003%" height="15" fill="rgb(214,89,8)" fg:x="296" fg:w="5"/><text x="23.9490%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="24.0192%" y="469" width="0.0801%" height="15" fill="rgb(249,155,35)" fg:x="300" fg:w="1"/><text x="24.2692%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.0192%" y="453" width="0.0801%" height="15" fill="rgb(249,88,26)" fg:x="300" fg:w="1"/><text x="24.2692%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="24.0192%" y="437" width="0.0801%" height="15" fill="rgb(232,56,8)" fg:x="300" fg:w="1"/><text x="24.2692%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.0192%" y="421" width="0.0801%" height="15" fill="rgb(240,95,3)" fg:x="300" fg:w="1"/><text x="24.2692%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="24.0192%" y="405" width="0.0801%" height="15" fill="rgb(222,44,28)" fg:x="300" fg:w="1"/><text x="24.2692%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.0192%" y="389" width="0.0801%" height="15" fill="rgb(234,16,30)" fg:x="300" fg:w="1"/><text x="24.2692%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="24.0192%" y="373" width="0.0801%" height="15" fill="rgb(223,26,17)" fg:x="300" fg:w="1"/><text x="24.2692%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.0192%" y="357" width="0.0801%" height="15" fill="rgb(239,187,47)" fg:x="300" fg:w="1"/><text x="24.2692%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.0192%" y="341" width="0.0801%" height="15" fill="rgb(247,102,50)" fg:x="300" fg:w="1"/><text x="24.2692%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.0192%" y="325" width="0.0801%" height="15" fill="rgb(231,216,22)" fg:x="300" fg:w="1"/><text x="24.2692%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="24.0192%" y="309" width="0.0801%" height="15" fill="rgb(216,201,26)" fg:x="300" fg:w="1"/><text x="24.2692%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.1793%" y="469" width="0.0801%" height="15" fill="rgb(214,186,23)" fg:x="302" fg:w="1"/><text x="24.4293%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.1793%" y="453" width="0.0801%" height="15" fill="rgb(235,184,4)" fg:x="302" fg:w="1"/><text x="24.4293%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.1793%" y="437" width="0.0801%" height="15" fill="rgb(244,46,17)" fg:x="302" fg:w="1"/><text x="24.4293%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.1793%" y="421" width="0.0801%" height="15" fill="rgb(248,74,46)" fg:x="302" fg:w="1"/><text x="24.4293%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.2594%" y="469" width="0.0801%" height="15" fill="rgb(243,79,5)" fg:x="303" fg:w="1"/><text x="24.5094%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="24.2594%" y="453" width="0.0801%" height="15" fill="rgb(213,148,1)" fg:x="303" fg:w="1"/><text x="24.5094%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.2594%" y="437" width="0.0801%" height="15" fill="rgb(221,30,0)" fg:x="303" fg:w="1"/><text x="24.5094%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.2594%" y="421" width="0.0801%" height="15" fill="rgb(207,85,29)" fg:x="303" fg:w="1"/><text x="24.5094%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.2594%" y="405" width="0.0801%" height="15" fill="rgb(239,31,46)" fg:x="303" fg:w="1"/><text x="24.5094%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.2594%" y="389" width="0.0801%" height="15" fill="rgb(219,6,1)" fg:x="303" fg:w="1"/><text x="24.5094%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.2594%" y="373" width="0.0801%" height="15" fill="rgb(229,90,29)" fg:x="303" fg:w="1"/><text x="24.5094%" y="383.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (10 samples, 0.80%)</title><rect x="23.6189%" y="549" width="0.8006%" height="15" fill="rgb(242,201,42)" fg:x="295" fg:w="10"/><text x="23.8689%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (10 samples, 0.80%)</title><rect x="23.6189%" y="533" width="0.8006%" height="15" fill="rgb(243,80,54)" fg:x="295" fg:w="10"/><text x="23.8689%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="24.0993%" y="517" width="0.3203%" height="15" fill="rgb(223,166,15)" fg:x="301" fg:w="4"/><text x="24.3493%" y="527.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="24.0993%" y="501" width="0.3203%" height="15" fill="rgb(238,78,27)" fg:x="301" fg:w="4"/><text x="24.3493%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="24.0993%" y="485" width="0.3203%" height="15" fill="rgb(235,28,43)" fg:x="301" fg:w="4"/><text x="24.3493%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="24.3395%" y="469" width="0.0801%" height="15" fill="rgb(240,210,28)" fg:x="304" fg:w="1"/><text x="24.5895%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.3395%" y="453" width="0.0801%" height="15" fill="rgb(253,6,46)" fg:x="304" fg:w="1"/><text x="24.5895%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.4195%" y="533" width="0.0801%" height="15" fill="rgb(250,159,47)" fg:x="305" fg:w="1"/><text x="24.6695%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.4195%" y="517" width="0.0801%" height="15" fill="rgb(216,139,2)" fg:x="305" fg:w="1"/><text x="24.6695%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="24.4195%" y="549" width="0.1601%" height="15" fill="rgb(221,124,44)" fg:x="305" fg:w="2"/><text x="24.6695%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::entity (1 samples, 0.08%)</title><rect x="24.4996%" y="533" width="0.0801%" height="15" fill="rgb(205,37,22)" fg:x="306" fg:w="1"/><text x="24.7496%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="24.5797%" y="485" width="0.0801%" height="15" fill="rgb(250,55,8)" fg:x="307" fg:w="1"/><text x="24.8297%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (32 samples, 2.56%)</title><rect x="22.1777%" y="629" width="2.5620%" height="15" fill="rgb(215,83,48)" fg:x="277" fg:w="32"/><text x="22.4277%" y="639.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (31 samples, 2.48%)</title><rect x="22.2578%" y="613" width="2.4820%" height="15" fill="rgb(253,2,32)" fg:x="278" fg:w="31"/><text x="22.5078%" y="623.50">&lt;a..</text></g><g><title>plugins_core::build::QuickThing::make (31 samples, 2.48%)</title><rect x="22.2578%" y="597" width="2.4820%" height="15" fill="rgb(236,67,28)" fg:x="278" fg:w="31"/><text x="22.5078%" y="607.50">pl..</text></g><g><title>plugins_core::build::Build::leads_to (23 samples, 1.84%)</title><rect x="22.8983%" y="581" width="1.8415%" height="15" fill="rgb(252,55,15)" fg:x="286" fg:w="23"/><text x="23.1483%" y="591.50">p..</text></g><g><title>plugins_core::tools::leads_to (14 samples, 1.12%)</title><rect x="23.6189%" y="565" width="1.1209%" height="15" fill="rgb(243,173,17)" fg:x="295" fg:w="14"/><text x="23.8689%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="24.5797%" y="549" width="0.1601%" height="15" fill="rgb(215,212,13)" fg:x="307" fg:w="2"/><text x="24.8297%" y="559.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (2 samples, 0.16%)</title><rect x="24.5797%" y="533" width="0.1601%" height="15" fill="rgb(253,176,6)" fg:x="307" fg:w="2"/><text x="24.8297%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="24.5797%" y="517" width="0.1601%" height="15" fill="rgb(236,105,26)" fg:x="307" fg:w="2"/><text x="24.8297%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="24.5797%" y="501" width="0.1601%" height="15" fill="rgb(239,226,32)" fg:x="307" fg:w="2"/><text x="24.8297%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.6597%" y="485" width="0.0801%" height="15" fill="rgb(236,104,51)" fg:x="308" fg:w="1"/><text x="24.9097%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.6597%" y="469" width="0.0801%" height="15" fill="rgb(220,172,33)" fg:x="308" fg:w="1"/><text x="24.9097%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.6597%" y="453" width="0.0801%" height="15" fill="rgb(224,182,25)" fg:x="308" fg:w="1"/><text x="24.9097%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="24.7398%" y="597" width="0.0801%" height="15" fill="rgb(236,184,24)" fg:x="309" fg:w="1"/><text x="24.9898%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="24.7398%" y="581" width="0.0801%" height="15" fill="rgb(241,221,14)" fg:x="309" fg:w="1"/><text x="24.9898%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="24.8199%" y="597" width="0.2402%" height="15" fill="rgb(227,146,5)" fg:x="310" fg:w="3"/><text x="25.0699%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="24.8999%" y="581" width="0.1601%" height="15" fill="rgb(214,15,23)" fg:x="311" fg:w="2"/><text x="25.1499%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.1401%" y="549" width="0.0801%" height="15" fill="rgb(233,157,31)" fg:x="314" fg:w="1"/><text x="25.3901%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.1401%" y="533" width="0.0801%" height="15" fill="rgb(211,27,52)" fg:x="314" fg:w="1"/><text x="25.3901%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.1401%" y="517" width="0.0801%" height="15" fill="rgb(212,223,15)" fg:x="314" fg:w="1"/><text x="25.3901%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.1401%" y="501" width="0.0801%" height="15" fill="rgb(254,211,0)" fg:x="314" fg:w="1"/><text x="25.3901%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.1401%" y="485" width="0.0801%" height="15" fill="rgb(205,43,38)" fg:x="314" fg:w="1"/><text x="25.3901%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.1401%" y="469" width="0.0801%" height="15" fill="rgb(242,206,46)" fg:x="314" fg:w="1"/><text x="25.3901%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.1401%" y="453" width="0.0801%" height="15" fill="rgb(220,221,12)" fg:x="314" fg:w="1"/><text x="25.3901%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="25.1401%" y="437" width="0.0801%" height="15" fill="rgb(217,156,35)" fg:x="314" fg:w="1"/><text x="25.3901%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="25.1401%" y="421" width="0.0801%" height="15" fill="rgb(207,181,49)" fg:x="314" fg:w="1"/><text x="25.3901%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="25.1401%" y="405" width="0.0801%" height="15" fill="rgb(235,103,47)" fg:x="314" fg:w="1"/><text x="25.3901%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="25.1401%" y="389" width="0.0801%" height="15" fill="rgb(222,63,28)" fg:x="314" fg:w="1"/><text x="25.3901%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.1401%" y="373" width="0.0801%" height="15" fill="rgb(244,137,21)" fg:x="314" fg:w="1"/><text x="25.3901%" y="383.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (3 samples, 0.24%)</title><rect x="25.0600%" y="565" width="0.2402%" height="15" fill="rgb(228,35,27)" fg:x="313" fg:w="3"/><text x="25.3100%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="25.2202%" y="549" width="0.0801%" height="15" fill="rgb(226,191,41)" fg:x="315" fg:w="1"/><text x="25.4702%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.2202%" y="533" width="0.0801%" height="15" fill="rgb(210,154,3)" fg:x="315" fg:w="1"/><text x="25.4702%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.32%)</title><rect x="25.0600%" y="581" width="0.3203%" height="15" fill="rgb(216,60,49)" fg:x="313" fg:w="4"/><text x="25.3100%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.3002%" y="565" width="0.0801%" height="15" fill="rgb(226,17,20)" fg:x="316" fg:w="1"/><text x="25.5502%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="25.0600%" y="597" width="0.4003%" height="15" fill="rgb(206,115,35)" fg:x="313" fg:w="5"/><text x="25.3100%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.3803%" y="581" width="0.0801%" height="15" fill="rgb(227,88,1)" fg:x="317" fg:w="1"/><text x="25.6303%" y="591.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="25.5404%" y="565" width="0.0801%" height="15" fill="rgb(230,222,24)" fg:x="319" fg:w="1"/><text x="25.7904%" y="575.50"></text></g><g><title>engine::identifiers::model::set_gid (3 samples, 0.24%)</title><rect x="25.4604%" y="597" width="0.2402%" height="15" fill="rgb(214,124,32)" fg:x="318" fg:w="3"/><text x="25.7104%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="25.5404%" y="581" width="0.1601%" height="15" fill="rgb(240,41,36)" fg:x="319" fg:w="2"/><text x="25.7904%" y="591.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="25.6205%" y="565" width="0.0801%" height="15" fill="rgb(221,17,52)" fg:x="320" fg:w="1"/><text x="25.8705%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.6205%" y="549" width="0.0801%" height="15" fill="rgb(252,70,16)" fg:x="320" fg:w="1"/><text x="25.8705%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="25.7806%" y="581" width="0.0801%" height="15" fill="rgb(250,177,4)" fg:x="322" fg:w="1"/><text x="26.0306%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.7806%" y="565" width="0.0801%" height="15" fill="rgb(240,188,47)" fg:x="322" fg:w="1"/><text x="26.0306%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="25.7806%" y="549" width="0.0801%" height="15" fill="rgb(215,92,12)" fg:x="322" fg:w="1"/><text x="26.0306%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="25.8607%" y="565" width="0.0801%" height="15" fill="rgb(242,110,29)" fg:x="323" fg:w="1"/><text x="26.1107%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="25.8607%" y="549" width="0.0801%" height="15" fill="rgb(208,211,26)" fg:x="323" fg:w="1"/><text x="26.1107%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.8607%" y="533" width="0.0801%" height="15" fill="rgb(244,147,6)" fg:x="323" fg:w="1"/><text x="26.1107%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="25.8607%" y="517" width="0.0801%" height="15" fill="rgb(211,130,42)" fg:x="323" fg:w="1"/><text x="26.1107%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.8607%" y="501" width="0.0801%" height="15" fill="rgb(220,63,1)" fg:x="323" fg:w="1"/><text x="26.1107%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="25.8607%" y="485" width="0.0801%" height="15" fill="rgb(241,212,30)" fg:x="323" fg:w="1"/><text x="26.1107%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.8607%" y="469" width="0.0801%" height="15" fill="rgb(233,153,17)" fg:x="323" fg:w="1"/><text x="26.1107%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.8607%" y="453" width="0.0801%" height="15" fill="rgb(236,3,10)" fg:x="323" fg:w="1"/><text x="26.1107%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="25.9408%" y="533" width="0.4003%" height="15" fill="rgb(232,41,21)" fg:x="324" fg:w="5"/><text x="26.1908%" y="543.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="26.0208%" y="517" width="0.3203%" height="15" fill="rgb(206,63,51)" fg:x="325" fg:w="4"/><text x="26.2708%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.2610%" y="501" width="0.0801%" height="15" fill="rgb(250,214,3)" fg:x="328" fg:w="1"/><text x="26.5110%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.2610%" y="485" width="0.0801%" height="15" fill="rgb(254,89,27)" fg:x="328" fg:w="1"/><text x="26.5110%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.2610%" y="469" width="0.0801%" height="15" fill="rgb(249,41,14)" fg:x="328" fg:w="1"/><text x="26.5110%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.2610%" y="453" width="0.0801%" height="15" fill="rgb(221,196,51)" fg:x="328" fg:w="1"/><text x="26.5110%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="26.2610%" y="437" width="0.0801%" height="15" fill="rgb(214,116,26)" fg:x="328" fg:w="1"/><text x="26.5110%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.56%)</title><rect x="25.9408%" y="549" width="0.5604%" height="15" fill="rgb(236,67,7)" fg:x="324" fg:w="7"/><text x="26.1908%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="26.3411%" y="533" width="0.1601%" height="15" fill="rgb(253,179,32)" fg:x="329" fg:w="2"/><text x="26.5911%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.4211%" y="517" width="0.0801%" height="15" fill="rgb(218,33,15)" fg:x="330" fg:w="1"/><text x="26.6711%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.4211%" y="501" width="0.0801%" height="15" fill="rgb(217,202,41)" fg:x="330" fg:w="1"/><text x="26.6711%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.9015%" y="485" width="0.0801%" height="15" fill="rgb(234,133,5)" fg:x="336" fg:w="1"/><text x="27.1515%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="26.5813%" y="533" width="0.4804%" height="15" fill="rgb(240,47,40)" fg:x="332" fg:w="6"/><text x="26.8313%" y="543.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="26.7414%" y="517" width="0.3203%" height="15" fill="rgb(234,166,26)" fg:x="334" fg:w="4"/><text x="26.9914%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="26.7414%" y="501" width="0.3203%" height="15" fill="rgb(244,125,51)" fg:x="334" fg:w="4"/><text x="26.9914%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="26.9816%" y="485" width="0.0801%" height="15" fill="rgb(229,171,11)" fg:x="337" fg:w="1"/><text x="27.2316%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.0616%" y="517" width="0.0801%" height="15" fill="rgb(224,38,45)" fg:x="338" fg:w="1"/><text x="27.3116%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.1417%" y="485" width="0.0801%" height="15" fill="rgb(237,27,7)" fg:x="339" fg:w="1"/><text x="27.3917%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="27.2218%" y="485" width="0.1601%" height="15" fill="rgb(216,52,7)" fg:x="340" fg:w="2"/><text x="27.4718%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="27.3018%" y="469" width="0.0801%" height="15" fill="rgb(243,11,11)" fg:x="341" fg:w="1"/><text x="27.5518%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.3018%" y="453" width="0.0801%" height="15" fill="rgb(253,167,20)" fg:x="341" fg:w="1"/><text x="27.5518%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.3018%" y="437" width="0.0801%" height="15" fill="rgb(215,207,5)" fg:x="341" fg:w="1"/><text x="27.5518%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.3018%" y="421" width="0.0801%" height="15" fill="rgb(252,127,31)" fg:x="341" fg:w="1"/><text x="27.5518%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="27.1417%" y="517" width="0.3203%" height="15" fill="rgb(209,106,27)" fg:x="339" fg:w="4"/><text x="27.3917%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="27.1417%" y="501" width="0.3203%" height="15" fill="rgb(214,220,18)" fg:x="339" fg:w="4"/><text x="27.3917%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.3819%" y="485" width="0.0801%" height="15" fill="rgb(237,89,12)" fg:x="342" fg:w="1"/><text x="27.6319%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.64%)</title><rect x="27.4620%" y="517" width="0.6405%" height="15" fill="rgb(209,167,36)" fg:x="343" fg:w="8"/><text x="27.7120%" y="527.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="27.6221%" y="501" width="0.4804%" height="15" fill="rgb(243,45,22)" fg:x="345" fg:w="6"/><text x="27.8721%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="27.8623%" y="485" width="0.2402%" height="15" fill="rgb(239,2,46)" fg:x="348" fg:w="3"/><text x="28.1123%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="27.9424%" y="469" width="0.1601%" height="15" fill="rgb(241,101,0)" fg:x="349" fg:w="2"/><text x="28.1924%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="28.3427%" y="501" width="0.0801%" height="15" fill="rgb(244,34,31)" fg:x="354" fg:w="1"/><text x="28.5927%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.3427%" y="485" width="0.0801%" height="15" fill="rgb(248,23,22)" fg:x="354" fg:w="1"/><text x="28.5927%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="28.4227%" y="501" width="0.1601%" height="15" fill="rgb(218,27,48)" fg:x="355" fg:w="2"/><text x="28.6727%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.5028%" y="485" width="0.0801%" height="15" fill="rgb(232,78,1)" fg:x="356" fg:w="1"/><text x="28.7528%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="28.5829%" y="485" width="0.0801%" height="15" fill="rgb(233,169,12)" fg:x="357" fg:w="1"/><text x="28.8329%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="28.6629%" y="485" width="0.2402%" height="15" fill="rgb(225,222,54)" fg:x="358" fg:w="3"/><text x="28.9129%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.8231%" y="469" width="0.0801%" height="15" fill="rgb(245,126,29)" fg:x="360" fg:w="1"/><text x="29.0731%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.8231%" y="453" width="0.0801%" height="15" fill="rgb(241,63,48)" fg:x="360" fg:w="1"/><text x="29.0731%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.8231%" y="437" width="0.0801%" height="15" fill="rgb(235,126,38)" fg:x="360" fg:w="1"/><text x="29.0731%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="28.9031%" y="469" width="0.3203%" height="15" fill="rgb(232,96,49)" fg:x="361" fg:w="4"/><text x="29.1531%" y="479.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="28.9031%" y="453" width="0.3203%" height="15" fill="rgb(211,146,40)" fg:x="361" fg:w="4"/><text x="29.1531%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="28.9832%" y="437" width="0.2402%" height="15" fill="rgb(247,93,44)" fg:x="362" fg:w="3"/><text x="29.2332%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="28.9832%" y="421" width="0.2402%" height="15" fill="rgb(251,41,49)" fg:x="362" fg:w="3"/><text x="29.2332%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="29.2234%" y="469" width="0.1601%" height="15" fill="rgb(218,155,12)" fg:x="365" fg:w="2"/><text x="29.4734%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="29.2234%" y="453" width="0.1601%" height="15" fill="rgb(221,161,30)" fg:x="365" fg:w="2"/><text x="29.4734%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.3034%" y="437" width="0.0801%" height="15" fill="rgb(221,179,11)" fg:x="366" fg:w="1"/><text x="29.5534%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.3034%" y="421" width="0.0801%" height="15" fill="rgb(224,170,48)" fg:x="366" fg:w="1"/><text x="29.5534%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.3034%" y="405" width="0.0801%" height="15" fill="rgb(223,117,5)" fg:x="366" fg:w="1"/><text x="29.5534%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.5436%" y="437" width="0.0801%" height="15" fill="rgb(209,52,20)" fg:x="369" fg:w="1"/><text x="29.7936%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.68%)</title><rect x="28.1025%" y="517" width="1.6813%" height="15" fill="rgb(209,19,41)" fg:x="351" fg:w="21"/><text x="28.3525%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="28.5829%" y="501" width="1.2010%" height="15" fill="rgb(210,177,12)" fg:x="357" fg:w="15"/><text x="28.8329%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="28.9031%" y="485" width="0.8807%" height="15" fill="rgb(211,159,37)" fg:x="361" fg:w="11"/><text x="29.1531%" y="495.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="29.3835%" y="469" width="0.4003%" height="15" fill="rgb(209,20,2)" fg:x="367" fg:w="5"/><text x="29.6335%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="29.4636%" y="453" width="0.3203%" height="15" fill="rgb(244,3,46)" fg:x="368" fg:w="4"/><text x="29.7136%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.16%)</title><rect x="29.6237%" y="437" width="0.1601%" height="15" fill="rgb(220,94,38)" fg:x="370" fg:w="2"/><text x="29.8737%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (35 samples, 2.80%)</title><rect x="27.0616%" y="533" width="2.8022%" height="15" fill="rgb(253,14,31)" fg:x="338" fg:w="35"/><text x="27.3116%" y="543.50">se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.7838%" y="517" width="0.0801%" height="15" fill="rgb(234,176,13)" fg:x="372" fg:w="1"/><text x="30.0338%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.7838%" y="501" width="0.0801%" height="15" fill="rgb(218,62,25)" fg:x="372" fg:w="1"/><text x="30.0338%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.7838%" y="485" width="0.0801%" height="15" fill="rgb(216,124,40)" fg:x="372" fg:w="1"/><text x="30.0338%" y="495.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (57 samples, 4.56%)</title><rect x="25.9408%" y="565" width="4.5637%" height="15" fill="rgb(228,170,12)" fg:x="324" fg:w="57"/><text x="26.1908%" y="575.50">&lt;serd..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (50 samples, 4.00%)</title><rect x="26.5012%" y="549" width="4.0032%" height="15" fill="rgb(231,226,5)" fg:x="331" fg:w="50"/><text x="26.7512%" y="559.50">serd..</text></g><g><title>std::io::Write::write_all (8 samples, 0.64%)</title><rect x="29.8639%" y="533" width="0.6405%" height="15" fill="rgb(237,122,22)" fg:x="373" fg:w="8"/><text x="30.1139%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (8 samples, 0.64%)</title><rect x="29.8639%" y="517" width="0.6405%" height="15" fill="rgb(209,185,25)" fg:x="373" fg:w="8"/><text x="30.1139%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.48%)</title><rect x="30.0240%" y="501" width="0.4804%" height="15" fill="rgb(228,200,32)" fg:x="375" fg:w="6"/><text x="30.2740%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="30.1841%" y="485" width="0.3203%" height="15" fill="rgb(217,140,10)" fg:x="377" fg:w="4"/><text x="30.4341%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="30.2642%" y="469" width="0.2402%" height="15" fill="rgb(253,17,24)" fg:x="378" fg:w="3"/><text x="30.5142%" y="479.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="30.2642%" y="453" width="0.2402%" height="15" fill="rgb(212,61,6)" fg:x="378" fg:w="3"/><text x="30.5142%" y="463.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.08%)</title><rect x="30.5044%" y="565" width="0.0801%" height="15" fill="rgb(205,14,25)" fg:x="381" fg:w="1"/><text x="30.7544%" y="575.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="30.5845%" y="533" width="0.2402%" height="15" fill="rgb(232,69,41)" fg:x="382" fg:w="3"/><text x="30.8345%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="30.8247%" y="533" width="0.1601%" height="15" fill="rgb(241,106,47)" fg:x="385" fg:w="2"/><text x="31.0747%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="31.1449%" y="517" width="0.2402%" height="15" fill="rgb(210,213,53)" fg:x="389" fg:w="3"/><text x="31.3949%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="31.4652%" y="485" width="0.1601%" height="15" fill="rgb(253,175,27)" fg:x="393" fg:w="2"/><text x="31.7152%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="31.6253%" y="485" width="0.0801%" height="15" fill="rgb(211,171,24)" fg:x="395" fg:w="1"/><text x="31.8753%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="31.6253%" y="469" width="0.0801%" height="15" fill="rgb(229,80,7)" fg:x="395" fg:w="1"/><text x="31.8753%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.6253%" y="453" width="0.0801%" height="15" fill="rgb(212,46,39)" fg:x="395" fg:w="1"/><text x="31.8753%" y="463.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="31.7054%" y="453" width="0.2402%" height="15" fill="rgb(240,80,45)" fg:x="396" fg:w="3"/><text x="31.9554%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (19 samples, 1.52%)</title><rect x="30.5845%" y="565" width="1.5212%" height="15" fill="rgb(253,177,40)" fg:x="382" fg:w="19"/><text x="30.8345%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (19 samples, 1.52%)</title><rect x="30.5845%" y="549" width="1.5212%" height="15" fill="rgb(249,200,15)" fg:x="382" fg:w="19"/><text x="30.8345%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.12%)</title><rect x="30.9848%" y="533" width="1.1209%" height="15" fill="rgb(217,78,26)" fg:x="387" fg:w="14"/><text x="31.2348%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="31.3851%" y="517" width="0.7206%" height="15" fill="rgb(254,151,32)" fg:x="392" fg:w="9"/><text x="31.6351%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="31.4652%" y="501" width="0.6405%" height="15" fill="rgb(226,165,27)" fg:x="393" fg:w="8"/><text x="31.7152%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="31.7054%" y="485" width="0.4003%" height="15" fill="rgb(250,206,4)" fg:x="396" fg:w="5"/><text x="31.9554%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="31.7054%" y="469" width="0.4003%" height="15" fill="rgb(231,229,27)" fg:x="396" fg:w="5"/><text x="31.9554%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="31.9456%" y="453" width="0.1601%" height="15" fill="rgb(239,217,8)" fg:x="399" fg:w="2"/><text x="32.1956%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="31.9456%" y="437" width="0.1601%" height="15" fill="rgb(225,204,27)" fg:x="399" fg:w="2"/><text x="32.1956%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.0256%" y="421" width="0.0801%" height="15" fill="rgb(230,56,32)" fg:x="400" fg:w="1"/><text x="32.2756%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="32.1857%" y="517" width="0.0801%" height="15" fill="rgb(222,56,27)" fg:x="402" fg:w="1"/><text x="32.4357%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="32.1857%" y="501" width="0.0801%" height="15" fill="rgb(253,108,27)" fg:x="402" fg:w="1"/><text x="32.4357%" y="511.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="32.1857%" y="549" width="0.1601%" height="15" fill="rgb(212,87,36)" fg:x="402" fg:w="2"/><text x="32.4357%" y="559.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="32.1857%" y="533" width="0.1601%" height="15" fill="rgb(247,82,36)" fg:x="402" fg:w="2"/><text x="32.4357%" y="543.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="32.2658%" y="517" width="0.0801%" height="15" fill="rgb(222,143,9)" fg:x="403" fg:w="1"/><text x="32.5158%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="32.3459%" y="549" width="0.0801%" height="15" fill="rgb(238,162,48)" fg:x="404" fg:w="1"/><text x="32.5959%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.6661%" y="517" width="0.0801%" height="15" fill="rgb(221,59,43)" fg:x="408" fg:w="1"/><text x="32.9161%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.6661%" y="501" width="0.0801%" height="15" fill="rgb(205,166,41)" fg:x="408" fg:w="1"/><text x="32.9161%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="32.6661%" y="485" width="0.0801%" height="15" fill="rgb(241,186,40)" fg:x="408" fg:w="1"/><text x="32.9161%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="32.9063%" y="485" width="0.1601%" height="15" fill="rgb(216,119,35)" fg:x="411" fg:w="2"/><text x="33.1563%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (6 samples, 0.48%)</title><rect x="32.7462%" y="517" width="0.4804%" height="15" fill="rgb(208,68,38)" fg:x="409" fg:w="6"/><text x="32.9962%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="32.8263%" y="501" width="0.4003%" height="15" fill="rgb(217,113,1)" fg:x="410" fg:w="5"/><text x="33.0763%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.0665%" y="485" width="0.1601%" height="15" fill="rgb(242,153,3)" fg:x="413" fg:w="2"/><text x="33.3165%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.1465%" y="469" width="0.0801%" height="15" fill="rgb(229,76,35)" fg:x="414" fg:w="1"/><text x="33.3965%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="33.1465%" y="453" width="0.0801%" height="15" fill="rgb(229,125,34)" fg:x="414" fg:w="1"/><text x="33.3965%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="33.3066%" y="469" width="0.0801%" height="15" fill="rgb(238,179,36)" fg:x="416" fg:w="1"/><text x="33.5566%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="33.3066%" y="453" width="0.0801%" height="15" fill="rgb(244,183,19)" fg:x="416" fg:w="1"/><text x="33.5566%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.3066%" y="437" width="0.0801%" height="15" fill="rgb(216,85,49)" fg:x="416" fg:w="1"/><text x="33.5566%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.5468%" y="453" width="0.0801%" height="15" fill="rgb(208,161,47)" fg:x="419" fg:w="1"/><text x="33.7968%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="33.6269%" y="453" width="0.0801%" height="15" fill="rgb(233,210,18)" fg:x="420" fg:w="1"/><text x="33.8769%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="33.7070%" y="437" width="0.2402%" height="15" fill="rgb(205,104,42)" fg:x="421" fg:w="3"/><text x="33.9570%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="33.7070%" y="421" width="0.2402%" height="15" fill="rgb(248,90,43)" fg:x="421" fg:w="3"/><text x="33.9570%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="33.8671%" y="405" width="0.0801%" height="15" fill="rgb(206,198,11)" fg:x="423" fg:w="1"/><text x="34.1171%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="34.1073%" y="389" width="0.0801%" height="15" fill="rgb(239,165,27)" fg:x="426" fg:w="1"/><text x="34.3573%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="34.1873%" y="373" width="0.1601%" height="15" fill="rgb(246,44,32)" fg:x="427" fg:w="2"/><text x="34.4373%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.2674%" y="357" width="0.0801%" height="15" fill="rgb(252,65,42)" fg:x="428" fg:w="1"/><text x="34.5174%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.2674%" y="341" width="0.0801%" height="15" fill="rgb(246,197,18)" fg:x="428" fg:w="1"/><text x="34.5174%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="34.3475%" y="357" width="0.1601%" height="15" fill="rgb(216,192,4)" fg:x="429" fg:w="2"/><text x="34.5975%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.4275%" y="341" width="0.0801%" height="15" fill="rgb(208,117,10)" fg:x="430" fg:w="1"/><text x="34.6775%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.4275%" y="325" width="0.0801%" height="15" fill="rgb(240,61,47)" fg:x="430" fg:w="1"/><text x="34.6775%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.4275%" y="309" width="0.0801%" height="15" fill="rgb(228,178,21)" fg:x="430" fg:w="1"/><text x="34.6775%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (16 samples, 1.28%)</title><rect x="33.3066%" y="485" width="1.2810%" height="15" fill="rgb(219,96,54)" fg:x="416" fg:w="16"/><text x="33.5566%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 1.20%)</title><rect x="33.3867%" y="469" width="1.2010%" height="15" fill="rgb(250,177,24)" fg:x="417" fg:w="15"/><text x="33.6367%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.88%)</title><rect x="33.7070%" y="453" width="0.8807%" height="15" fill="rgb(242,154,46)" fg:x="421" fg:w="11"/><text x="33.9570%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="33.9472%" y="437" width="0.6405%" height="15" fill="rgb(226,176,29)" fg:x="424" fg:w="8"/><text x="34.1972%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="34.0272%" y="421" width="0.5604%" height="15" fill="rgb(226,29,2)" fg:x="425" fg:w="7"/><text x="34.2772%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="34.0272%" y="405" width="0.5604%" height="15" fill="rgb(237,104,14)" fg:x="425" fg:w="7"/><text x="34.2772%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="34.1873%" y="389" width="0.4003%" height="15" fill="rgb(245,207,31)" fg:x="427" fg:w="5"/><text x="34.4373%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="34.3475%" y="373" width="0.2402%" height="15" fill="rgb(229,211,45)" fg:x="429" fg:w="3"/><text x="34.5975%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.5076%" y="357" width="0.0801%" height="15" fill="rgb(229,113,15)" fg:x="431" fg:w="1"/><text x="34.7576%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (21 samples, 1.68%)</title><rect x="33.2266%" y="501" width="1.6813%" height="15" fill="rgb(237,147,15)" fg:x="415" fg:w="21"/><text x="33.4766%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="34.5877%" y="485" width="0.3203%" height="15" fill="rgb(244,120,12)" fg:x="432" fg:w="4"/><text x="34.8377%" y="495.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="34.5877%" y="469" width="0.3203%" height="15" fill="rgb(205,120,12)" fg:x="432" fg:w="4"/><text x="34.8377%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (22 samples, 1.76%)</title><rect x="33.2266%" y="517" width="1.7614%" height="15" fill="rgb(231,26,45)" fg:x="415" fg:w="22"/><text x="33.4766%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.9079%" y="501" width="0.0801%" height="15" fill="rgb(246,98,1)" fg:x="436" fg:w="1"/><text x="35.1579%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.9079%" y="485" width="0.0801%" height="15" fill="rgb(207,68,45)" fg:x="436" fg:w="1"/><text x="35.1579%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.9079%" y="469" width="0.0801%" height="15" fill="rgb(231,27,38)" fg:x="436" fg:w="1"/><text x="35.1579%" y="479.50"></text></g><g><title>engine::session::Session::flush (129 samples, 10.33%)</title><rect x="24.7398%" y="629" width="10.3283%" height="15" fill="rgb(214,223,3)" fg:x="309" fg:w="129"/><text x="24.9898%" y="639.50">engine::session..</text></g><g><title>engine::session::Session::save_entity_changes (129 samples, 10.33%)</title><rect x="24.7398%" y="613" width="10.3283%" height="15" fill="rgb(228,195,46)" fg:x="309" fg:w="129"/><text x="24.9898%" y="623.50">engine::session..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (117 samples, 9.37%)</title><rect x="25.7006%" y="597" width="9.3675%" height="15" fill="rgb(231,100,42)" fg:x="321" fg:w="117"/><text x="25.9506%" y="607.50">engine::inter..</text></g><g><title>engine::session::SavesEntities::check_for_changes (115 samples, 9.21%)</title><rect x="25.8607%" y="581" width="9.2074%" height="15" fill="rgb(236,53,4)" fg:x="323" fg:w="115"/><text x="26.1107%" y="591.50">engine::sessi..</text></g><g><title>kernel::model::any_entity_changes (37 samples, 2.96%)</title><rect x="32.1057%" y="565" width="2.9624%" height="15" fill="rgb(230,152,12)" fg:x="401" fg:w="37"/><text x="32.3557%" y="575.50">ker..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (33 samples, 2.64%)</title><rect x="32.4259%" y="549" width="2.6421%" height="15" fill="rgb(226,101,19)" fg:x="405" fg:w="33"/><text x="32.6759%" y="559.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (33 samples, 2.64%)</title><rect x="32.4259%" y="533" width="2.6421%" height="15" fill="rgb(250,149,32)" fg:x="405" fg:w="33"/><text x="32.6759%" y="543.50">&lt;s..</text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="34.9880%" y="517" width="0.0801%" height="15" fill="rgb(232,178,12)" fg:x="437" fg:w="1"/><text x="35.2380%" y="527.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="34.9880%" y="501" width="0.0801%" height="15" fill="rgb(246,151,17)" fg:x="437" fg:w="1"/><text x="35.2380%" y="511.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="35.0681%" y="629" width="0.0801%" height="15" fill="rgb(252,17,51)" fg:x="438" fg:w="1"/><text x="35.3181%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="35.0681%" y="613" width="0.0801%" height="15" fill="rgb(250,207,23)" fg:x="438" fg:w="1"/><text x="35.3181%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.0681%" y="597" width="0.0801%" height="15" fill="rgb(205,27,5)" fg:x="438" fg:w="1"/><text x="35.3181%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.0681%" y="581" width="0.0801%" height="15" fill="rgb(224,32,19)" fg:x="438" fg:w="1"/><text x="35.3181%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.0681%" y="565" width="0.0801%" height="15" fill="rgb(247,214,40)" fg:x="438" fg:w="1"/><text x="35.3181%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.0681%" y="549" width="0.0801%" height="15" fill="rgb(239,199,17)" fg:x="438" fg:w="1"/><text x="35.3181%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.0681%" y="533" width="0.0801%" height="15" fill="rgb(251,159,9)" fg:x="438" fg:w="1"/><text x="35.3181%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="35.1481%" y="549" width="0.0801%" height="15" fill="rgb(225,78,32)" fg:x="439" fg:w="1"/><text x="35.3981%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.1481%" y="533" width="0.0801%" height="15" fill="rgb(206,97,47)" fg:x="439" fg:w="1"/><text x="35.3981%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.3082%" y="485" width="0.0801%" height="15" fill="rgb(227,107,4)" fg:x="441" fg:w="1"/><text x="35.5582%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.3082%" y="469" width="0.0801%" height="15" fill="rgb(241,146,50)" fg:x="441" fg:w="1"/><text x="35.5582%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.3082%" y="453" width="0.0801%" height="15" fill="rgb(232,92,30)" fg:x="441" fg:w="1"/><text x="35.5582%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.3082%" y="437" width="0.0801%" height="15" fill="rgb(222,0,40)" fg:x="441" fg:w="1"/><text x="35.5582%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.3082%" y="421" width="0.0801%" height="15" fill="rgb(219,54,33)" fg:x="441" fg:w="1"/><text x="35.5582%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.3082%" y="405" width="0.0801%" height="15" fill="rgb(226,209,28)" fg:x="441" fg:w="1"/><text x="35.5582%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.3082%" y="389" width="0.0801%" height="15" fill="rgb(254,205,35)" fg:x="441" fg:w="1"/><text x="35.5582%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.3082%" y="373" width="0.0801%" height="15" fill="rgb(230,159,3)" fg:x="441" fg:w="1"/><text x="35.5582%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.3082%" y="357" width="0.0801%" height="15" fill="rgb(232,190,24)" fg:x="441" fg:w="1"/><text x="35.5582%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.3082%" y="341" width="0.0801%" height="15" fill="rgb(217,227,44)" fg:x="441" fg:w="1"/><text x="35.5582%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.3082%" y="325" width="0.0801%" height="15" fill="rgb(236,211,1)" fg:x="441" fg:w="1"/><text x="35.5582%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.3082%" y="309" width="0.0801%" height="15" fill="rgb(250,127,46)" fg:x="441" fg:w="1"/><text x="35.5582%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.3082%" y="293" width="0.0801%" height="15" fill="rgb(229,213,6)" fg:x="441" fg:w="1"/><text x="35.5582%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="35.3082%" y="517" width="0.2402%" height="15" fill="rgb(237,15,36)" fg:x="441" fg:w="3"/><text x="35.5582%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="35.3082%" y="501" width="0.2402%" height="15" fill="rgb(213,131,41)" fg:x="441" fg:w="3"/><text x="35.5582%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="35.3883%" y="485" width="0.1601%" height="15" fill="rgb(225,82,44)" fg:x="442" fg:w="2"/><text x="35.6383%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="35.3883%" y="469" width="0.1601%" height="15" fill="rgb(249,42,11)" fg:x="442" fg:w="2"/><text x="35.6383%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="35.3883%" y="453" width="0.1601%" height="15" fill="rgb(253,11,29)" fg:x="442" fg:w="2"/><text x="35.6383%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="35.3883%" y="437" width="0.1601%" height="15" fill="rgb(206,8,54)" fg:x="442" fg:w="2"/><text x="35.6383%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="35.3883%" y="421" width="0.1601%" height="15" fill="rgb(222,186,2)" fg:x="442" fg:w="2"/><text x="35.6383%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="35.3883%" y="405" width="0.1601%" height="15" fill="rgb(221,206,53)" fg:x="442" fg:w="2"/><text x="35.6383%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="35.3883%" y="389" width="0.1601%" height="15" fill="rgb(230,150,21)" fg:x="442" fg:w="2"/><text x="35.6383%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="35.3883%" y="373" width="0.1601%" height="15" fill="rgb(253,202,10)" fg:x="442" fg:w="2"/><text x="35.6383%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="35.3883%" y="357" width="0.1601%" height="15" fill="rgb(238,109,40)" fg:x="442" fg:w="2"/><text x="35.6383%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="35.3883%" y="341" width="0.1601%" height="15" fill="rgb(247,120,22)" fg:x="442" fg:w="2"/><text x="35.6383%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="35.3883%" y="325" width="0.1601%" height="15" fill="rgb(207,43,30)" fg:x="442" fg:w="2"/><text x="35.6383%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="35.3883%" y="309" width="0.1601%" height="15" fill="rgb(213,211,24)" fg:x="442" fg:w="2"/><text x="35.6383%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.5484%" y="517" width="0.0801%" height="15" fill="rgb(239,73,39)" fg:x="444" fg:w="1"/><text x="35.7984%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="35.5484%" y="501" width="0.0801%" height="15" fill="rgb(245,182,19)" fg:x="444" fg:w="1"/><text x="35.7984%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.5484%" y="485" width="0.0801%" height="15" fill="rgb(247,143,26)" fg:x="444" fg:w="1"/><text x="35.7984%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.5484%" y="469" width="0.0801%" height="15" fill="rgb(228,191,23)" fg:x="444" fg:w="1"/><text x="35.7984%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.6285%" y="485" width="0.0801%" height="15" fill="rgb(253,165,31)" fg:x="445" fg:w="1"/><text x="35.8785%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.6285%" y="469" width="0.0801%" height="15" fill="rgb(234,138,20)" fg:x="445" fg:w="1"/><text x="35.8785%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="35.7886%" y="421" width="0.0801%" height="15" fill="rgb(218,191,29)" fg:x="447" fg:w="1"/><text x="36.0386%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (10 samples, 0.80%)</title><rect x="35.1481%" y="565" width="0.8006%" height="15" fill="rgb(221,157,19)" fg:x="439" fg:w="10"/><text x="35.3981%" y="575.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.72%)</title><rect x="35.2282%" y="549" width="0.7206%" height="15" fill="rgb(237,26,42)" fg:x="440" fg:w="9"/><text x="35.4782%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="35.3082%" y="533" width="0.6405%" height="15" fill="rgb(220,163,24)" fg:x="441" fg:w="8"/><text x="35.5582%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (4 samples, 0.32%)</title><rect x="35.6285%" y="517" width="0.3203%" height="15" fill="rgb(242,115,20)" fg:x="445" fg:w="4"/><text x="35.8785%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="35.6285%" y="501" width="0.3203%" height="15" fill="rgb(210,206,9)" fg:x="445" fg:w="4"/><text x="35.8785%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="35.7086%" y="485" width="0.2402%" height="15" fill="rgb(208,71,17)" fg:x="446" fg:w="3"/><text x="35.9586%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="35.7086%" y="469" width="0.2402%" height="15" fill="rgb(233,7,5)" fg:x="446" fg:w="3"/><text x="35.9586%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="35.7086%" y="453" width="0.2402%" height="15" fill="rgb(207,92,33)" fg:x="446" fg:w="3"/><text x="35.9586%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="35.7086%" y="437" width="0.2402%" height="15" fill="rgb(218,87,9)" fg:x="446" fg:w="3"/><text x="35.9586%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="35.8687%" y="421" width="0.0801%" height="15" fill="rgb(219,47,37)" fg:x="448" fg:w="1"/><text x="36.1187%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.8687%" y="405" width="0.0801%" height="15" fill="rgb(221,152,34)" fg:x="448" fg:w="1"/><text x="36.1187%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.8687%" y="389" width="0.0801%" height="15" fill="rgb(235,176,21)" fg:x="448" fg:w="1"/><text x="36.1187%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.8687%" y="373" width="0.0801%" height="15" fill="rgb(232,212,21)" fg:x="448" fg:w="1"/><text x="36.1187%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="35.8687%" y="357" width="0.0801%" height="15" fill="rgb(245,82,39)" fg:x="448" fg:w="1"/><text x="36.1187%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="35.8687%" y="341" width="0.0801%" height="15" fill="rgb(241,52,51)" fg:x="448" fg:w="1"/><text x="36.1187%" y="351.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="35.8687%" y="325" width="0.0801%" height="15" fill="rgb(219,91,24)" fg:x="448" fg:w="1"/><text x="36.1187%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.9488%" y="517" width="0.0801%" height="15" fill="rgb(241,142,12)" fg:x="449" fg:w="1"/><text x="36.1988%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.9488%" y="501" width="0.0801%" height="15" fill="rgb(230,27,9)" fg:x="449" fg:w="1"/><text x="36.1988%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.9488%" y="485" width="0.0801%" height="15" fill="rgb(249,181,32)" fg:x="449" fg:w="1"/><text x="36.1988%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.9488%" y="469" width="0.0801%" height="15" fill="rgb(230,107,3)" fg:x="449" fg:w="1"/><text x="36.1988%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.9488%" y="453" width="0.0801%" height="15" fill="rgb(246,204,14)" fg:x="449" fg:w="1"/><text x="36.1988%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.9488%" y="437" width="0.0801%" height="15" fill="rgb(213,192,47)" fg:x="449" fg:w="1"/><text x="36.1988%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.9488%" y="421" width="0.0801%" height="15" fill="rgb(240,44,36)" fg:x="449" fg:w="1"/><text x="36.1988%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.9488%" y="405" width="0.0801%" height="15" fill="rgb(244,209,38)" fg:x="449" fg:w="1"/><text x="36.1988%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.9488%" y="389" width="0.0801%" height="15" fill="rgb(219,34,37)" fg:x="449" fg:w="1"/><text x="36.1988%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.9488%" y="373" width="0.0801%" height="15" fill="rgb(210,28,6)" fg:x="449" fg:w="1"/><text x="36.1988%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.9488%" y="357" width="0.0801%" height="15" fill="rgb(244,110,52)" fg:x="449" fg:w="1"/><text x="36.1988%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.9488%" y="341" width="0.0801%" height="15" fill="rgb(254,124,47)" fg:x="449" fg:w="1"/><text x="36.1988%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.9488%" y="325" width="0.0801%" height="15" fill="rgb(254,110,13)" fg:x="449" fg:w="1"/><text x="36.1988%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.9488%" y="309" width="0.0801%" height="15" fill="rgb(252,57,21)" fg:x="449" fg:w="1"/><text x="36.1988%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.9488%" y="293" width="0.0801%" height="15" fill="rgb(242,60,45)" fg:x="449" fg:w="1"/><text x="36.1988%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.9488%" y="277" width="0.0801%" height="15" fill="rgb(234,49,30)" fg:x="449" fg:w="1"/><text x="36.1988%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.9488%" y="261" width="0.0801%" height="15" fill="rgb(218,98,6)" fg:x="449" fg:w="1"/><text x="36.1988%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="36.0288%" y="517" width="0.0801%" height="15" fill="rgb(220,174,29)" fg:x="450" fg:w="1"/><text x="36.2788%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.1089%" y="389" width="0.0801%" height="15" fill="rgb(236,163,23)" fg:x="451" fg:w="1"/><text x="36.3589%" y="399.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="35.9488%" y="549" width="0.3203%" height="15" fill="rgb(242,114,45)" fg:x="449" fg:w="4"/><text x="36.1988%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="35.9488%" y="533" width="0.3203%" height="15" fill="rgb(232,10,53)" fg:x="449" fg:w="4"/><text x="36.1988%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="36.1089%" y="517" width="0.1601%" height="15" fill="rgb(245,108,29)" fg:x="451" fg:w="2"/><text x="36.3589%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.1089%" y="501" width="0.1601%" height="15" fill="rgb(240,89,53)" fg:x="451" fg:w="2"/><text x="36.3589%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="36.1089%" y="485" width="0.1601%" height="15" fill="rgb(226,60,45)" fg:x="451" fg:w="2"/><text x="36.3589%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.1089%" y="469" width="0.1601%" height="15" fill="rgb(230,41,44)" fg:x="451" fg:w="2"/><text x="36.3589%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="36.1089%" y="453" width="0.1601%" height="15" fill="rgb(230,26,20)" fg:x="451" fg:w="2"/><text x="36.3589%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.1089%" y="437" width="0.1601%" height="15" fill="rgb(237,170,32)" fg:x="451" fg:w="2"/><text x="36.3589%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="36.1089%" y="421" width="0.1601%" height="15" fill="rgb(212,35,42)" fg:x="451" fg:w="2"/><text x="36.3589%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.1089%" y="405" width="0.1601%" height="15" fill="rgb(227,31,34)" fg:x="451" fg:w="2"/><text x="36.3589%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.1890%" y="389" width="0.0801%" height="15" fill="rgb(216,19,18)" fg:x="452" fg:w="1"/><text x="36.4390%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.1890%" y="373" width="0.0801%" height="15" fill="rgb(211,133,42)" fg:x="452" fg:w="1"/><text x="36.4390%" y="383.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (15 samples, 1.20%)</title><rect x="35.1481%" y="581" width="1.2010%" height="15" fill="rgb(244,66,13)" fg:x="439" fg:w="15"/><text x="35.3981%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="35.9488%" y="565" width="0.4003%" height="15" fill="rgb(218,185,50)" fg:x="449" fg:w="5"/><text x="36.1988%" y="575.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="36.2690%" y="549" width="0.0801%" height="15" fill="rgb(219,149,13)" fg:x="453" fg:w="1"/><text x="36.5190%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="36.2690%" y="533" width="0.0801%" height="15" fill="rgb(221,125,0)" fg:x="453" fg:w="1"/><text x="36.5190%" y="543.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="36.2690%" y="517" width="0.0801%" height="15" fill="rgb(247,126,27)" fg:x="453" fg:w="1"/><text x="36.5190%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.2690%" y="501" width="0.0801%" height="15" fill="rgb(250,138,30)" fg:x="453" fg:w="1"/><text x="36.5190%" y="511.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="36.2690%" y="485" width="0.0801%" height="15" fill="rgb(230,151,9)" fg:x="453" fg:w="1"/><text x="36.5190%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.2690%" y="469" width="0.0801%" height="15" fill="rgb(233,80,38)" fg:x="453" fg:w="1"/><text x="36.5190%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.2690%" y="453" width="0.0801%" height="15" fill="rgb(232,68,43)" fg:x="453" fg:w="1"/><text x="36.5190%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.2690%" y="437" width="0.0801%" height="15" fill="rgb(254,5,50)" fg:x="453" fg:w="1"/><text x="36.5190%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.3491%" y="517" width="0.0801%" height="15" fill="rgb(225,45,5)" fg:x="454" fg:w="1"/><text x="36.5991%" y="527.50"></text></g><g><title>__libc_malloc (26 samples, 2.08%)</title><rect x="36.4291%" y="517" width="2.0817%" height="15" fill="rgb(239,22,3)" fg:x="455" fg:w="26"/><text x="36.6791%" y="527.50">_..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (43 samples, 3.44%)</title><rect x="35.1481%" y="613" width="3.4428%" height="15" fill="rgb(243,129,0)" fg:x="439" fg:w="43"/><text x="35.3981%" y="623.50">&lt;en..</text></g><g><title>engine::internal::Entities::add_entity (43 samples, 3.44%)</title><rect x="35.1481%" y="597" width="3.4428%" height="15" fill="rgb(223,164,0)" fg:x="439" fg:w="43"/><text x="35.3981%" y="607.50">eng..</text></g><g><title>engine::internal::EntityMap::add_entity (28 samples, 2.24%)</title><rect x="36.3491%" y="581" width="2.2418%" height="15" fill="rgb(221,46,29)" fg:x="454" fg:w="28"/><text x="36.5991%" y="591.50">e..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (28 samples, 2.24%)</title><rect x="36.3491%" y="565" width="2.2418%" height="15" fill="rgb(205,97,47)" fg:x="454" fg:w="28"/><text x="36.5991%" y="575.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (28 samples, 2.24%)</title><rect x="36.3491%" y="549" width="2.2418%" height="15" fill="rgb(249,14,8)" fg:x="454" fg:w="28"/><text x="36.5991%" y="559.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (28 samples, 2.24%)</title><rect x="36.3491%" y="533" width="2.2418%" height="15" fill="rgb(216,77,3)" fg:x="454" fg:w="28"/><text x="36.5991%" y="543.50">h..</text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="38.5108%" y="517" width="0.0801%" height="15" fill="rgb(206,168,54)" fg:x="481" fg:w="1"/><text x="38.7608%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="38.5909%" y="565" width="0.1601%" height="15" fill="rgb(236,3,41)" fg:x="482" fg:w="2"/><text x="38.8409%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.6709%" y="549" width="0.0801%" height="15" fill="rgb(231,132,24)" fg:x="483" fg:w="1"/><text x="38.9209%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.6709%" y="533" width="0.0801%" height="15" fill="rgb(227,221,40)" fg:x="483" fg:w="1"/><text x="38.9209%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.6709%" y="517" width="0.0801%" height="15" fill="rgb(233,151,11)" fg:x="483" fg:w="1"/><text x="38.9209%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.6709%" y="501" width="0.0801%" height="15" fill="rgb(247,81,35)" fg:x="483" fg:w="1"/><text x="38.9209%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.6709%" y="485" width="0.0801%" height="15" fill="rgb(243,128,48)" fg:x="483" fg:w="1"/><text x="38.9209%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.6709%" y="469" width="0.0801%" height="15" fill="rgb(253,16,10)" fg:x="483" fg:w="1"/><text x="38.9209%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.6709%" y="453" width="0.0801%" height="15" fill="rgb(228,67,27)" fg:x="483" fg:w="1"/><text x="38.9209%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.6709%" y="437" width="0.0801%" height="15" fill="rgb(231,105,25)" fg:x="483" fg:w="1"/><text x="38.9209%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.6709%" y="421" width="0.0801%" height="15" fill="rgb(213,166,47)" fg:x="483" fg:w="1"/><text x="38.9209%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.6709%" y="405" width="0.0801%" height="15" fill="rgb(209,27,10)" fg:x="483" fg:w="1"/><text x="38.9209%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.6709%" y="389" width="0.0801%" height="15" fill="rgb(241,44,30)" fg:x="483" fg:w="1"/><text x="38.9209%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.8311%" y="501" width="0.0801%" height="15" fill="rgb(223,216,15)" fg:x="485" fg:w="1"/><text x="39.0811%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.8311%" y="485" width="0.0801%" height="15" fill="rgb(227,14,7)" fg:x="485" fg:w="1"/><text x="39.0811%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.8311%" y="469" width="0.0801%" height="15" fill="rgb(237,14,5)" fg:x="485" fg:w="1"/><text x="39.0811%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.8311%" y="453" width="0.0801%" height="15" fill="rgb(232,14,36)" fg:x="485" fg:w="1"/><text x="39.0811%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.8311%" y="437" width="0.0801%" height="15" fill="rgb(234,0,38)" fg:x="485" fg:w="1"/><text x="39.0811%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.8311%" y="421" width="0.0801%" height="15" fill="rgb(207,170,14)" fg:x="485" fg:w="1"/><text x="39.0811%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.8311%" y="405" width="0.0801%" height="15" fill="rgb(252,45,13)" fg:x="485" fg:w="1"/><text x="39.0811%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.8311%" y="389" width="0.0801%" height="15" fill="rgb(213,142,7)" fg:x="485" fg:w="1"/><text x="39.0811%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.8311%" y="373" width="0.0801%" height="15" fill="rgb(216,157,23)" fg:x="485" fg:w="1"/><text x="39.0811%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.8311%" y="357" width="0.0801%" height="15" fill="rgb(212,145,33)" fg:x="485" fg:w="1"/><text x="39.0811%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.8311%" y="341" width="0.0801%" height="15" fill="rgb(233,26,13)" fg:x="485" fg:w="1"/><text x="39.0811%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.8311%" y="325" width="0.0801%" height="15" fill="rgb(219,196,19)" fg:x="485" fg:w="1"/><text x="39.0811%" y="335.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="38.8311%" y="309" width="0.0801%" height="15" fill="rgb(246,56,21)" fg:x="485" fg:w="1"/><text x="39.0811%" y="319.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="38.8311%" y="293" width="0.0801%" height="15" fill="rgb(222,28,53)" fg:x="485" fg:w="1"/><text x="39.0811%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="38.7510%" y="517" width="0.3203%" height="15" fill="rgb(224,5,27)" fg:x="484" fg:w="4"/><text x="39.0010%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="38.9111%" y="501" width="0.1601%" height="15" fill="rgb(220,153,33)" fg:x="486" fg:w="2"/><text x="39.1611%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.0713%" y="485" width="0.0801%" height="15" fill="rgb(226,58,19)" fg:x="488" fg:w="1"/><text x="39.3213%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="39.0713%" y="517" width="0.1601%" height="15" fill="rgb(239,112,23)" fg:x="488" fg:w="2"/><text x="39.3213%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="39.0713%" y="501" width="0.1601%" height="15" fill="rgb(251,213,20)" fg:x="488" fg:w="2"/><text x="39.3213%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.1513%" y="485" width="0.0801%" height="15" fill="rgb(215,181,21)" fg:x="489" fg:w="1"/><text x="39.4013%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.1513%" y="469" width="0.0801%" height="15" fill="rgb(240,8,35)" fg:x="489" fg:w="1"/><text x="39.4013%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.1513%" y="453" width="0.0801%" height="15" fill="rgb(232,203,3)" fg:x="489" fg:w="1"/><text x="39.4013%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.1513%" y="437" width="0.0801%" height="15" fill="rgb(214,202,43)" fg:x="489" fg:w="1"/><text x="39.4013%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.1513%" y="421" width="0.0801%" height="15" fill="rgb(254,35,11)" fg:x="489" fg:w="1"/><text x="39.4013%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.2314%" y="453" width="0.0801%" height="15" fill="rgb(239,173,13)" fg:x="490" fg:w="1"/><text x="39.4814%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="39.3915%" y="421" width="0.0801%" height="15" fill="rgb(220,141,0)" fg:x="492" fg:w="1"/><text x="39.6415%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (10 samples, 0.80%)</title><rect x="38.7510%" y="565" width="0.8006%" height="15" fill="rgb(210,98,12)" fg:x="484" fg:w="10"/><text x="39.0010%" y="575.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.80%)</title><rect x="38.7510%" y="549" width="0.8006%" height="15" fill="rgb(254,153,22)" fg:x="484" fg:w="10"/><text x="39.0010%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.80%)</title><rect x="38.7510%" y="533" width="0.8006%" height="15" fill="rgb(247,223,17)" fg:x="484" fg:w="10"/><text x="39.0010%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (4 samples, 0.32%)</title><rect x="39.2314%" y="517" width="0.3203%" height="15" fill="rgb(246,56,7)" fg:x="490" fg:w="4"/><text x="39.4814%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="39.2314%" y="501" width="0.3203%" height="15" fill="rgb(240,226,12)" fg:x="490" fg:w="4"/><text x="39.4814%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (4 samples, 0.32%)</title><rect x="39.2314%" y="485" width="0.3203%" height="15" fill="rgb(205,87,46)" fg:x="490" fg:w="4"/><text x="39.4814%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="39.2314%" y="469" width="0.3203%" height="15" fill="rgb(245,214,51)" fg:x="490" fg:w="4"/><text x="39.4814%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="39.3114%" y="453" width="0.2402%" height="15" fill="rgb(223,172,33)" fg:x="491" fg:w="3"/><text x="39.5614%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="39.3114%" y="437" width="0.2402%" height="15" fill="rgb(227,203,34)" fg:x="491" fg:w="3"/><text x="39.5614%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="39.4716%" y="421" width="0.0801%" height="15" fill="rgb(248,143,44)" fg:x="493" fg:w="1"/><text x="39.7216%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.4716%" y="405" width="0.0801%" height="15" fill="rgb(226,162,5)" fg:x="493" fg:w="1"/><text x="39.7216%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.4716%" y="389" width="0.0801%" height="15" fill="rgb(211,143,1)" fg:x="493" fg:w="1"/><text x="39.7216%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.6317%" y="517" width="0.0801%" height="15" fill="rgb(224,96,15)" fg:x="495" fg:w="1"/><text x="39.8817%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.6317%" y="501" width="0.0801%" height="15" fill="rgb(222,4,38)" fg:x="495" fg:w="1"/><text x="39.8817%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.7118%" y="517" width="0.0801%" height="15" fill="rgb(253,228,15)" fg:x="496" fg:w="1"/><text x="39.9618%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="39.7118%" y="501" width="0.0801%" height="15" fill="rgb(242,194,12)" fg:x="496" fg:w="1"/><text x="39.9618%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.7118%" y="485" width="0.0801%" height="15" fill="rgb(214,177,31)" fg:x="496" fg:w="1"/><text x="39.9618%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="39.7918%" y="421" width="0.0801%" height="15" fill="rgb(226,58,51)" fg:x="497" fg:w="1"/><text x="40.0418%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (19 samples, 1.52%)</title><rect x="38.5909%" y="597" width="1.5212%" height="15" fill="rgb(250,119,16)" fg:x="482" fg:w="19"/><text x="38.8409%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (19 samples, 1.52%)</title><rect x="38.5909%" y="581" width="1.5212%" height="15" fill="rgb(223,128,53)" fg:x="482" fg:w="19"/><text x="38.8409%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="39.5516%" y="565" width="0.5604%" height="15" fill="rgb(251,199,15)" fg:x="494" fg:w="7"/><text x="39.8016%" y="575.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="39.5516%" y="549" width="0.5604%" height="15" fill="rgb(235,168,42)" fg:x="494" fg:w="7"/><text x="39.8016%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="39.5516%" y="533" width="0.5604%" height="15" fill="rgb(250,210,17)" fg:x="494" fg:w="7"/><text x="39.8016%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (4 samples, 0.32%)</title><rect x="39.7918%" y="517" width="0.3203%" height="15" fill="rgb(226,36,41)" fg:x="497" fg:w="4"/><text x="40.0418%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="39.7918%" y="501" width="0.3203%" height="15" fill="rgb(225,87,10)" fg:x="497" fg:w="4"/><text x="40.0418%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (4 samples, 0.32%)</title><rect x="39.7918%" y="485" width="0.3203%" height="15" fill="rgb(228,83,9)" fg:x="497" fg:w="4"/><text x="40.0418%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="39.7918%" y="469" width="0.3203%" height="15" fill="rgb(225,16,36)" fg:x="497" fg:w="4"/><text x="40.0418%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="39.7918%" y="453" width="0.3203%" height="15" fill="rgb(242,198,13)" fg:x="497" fg:w="4"/><text x="40.0418%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="39.7918%" y="437" width="0.3203%" height="15" fill="rgb(239,25,51)" fg:x="497" fg:w="4"/><text x="40.0418%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (3 samples, 0.24%)</title><rect x="39.8719%" y="421" width="0.2402%" height="15" fill="rgb(239,28,37)" fg:x="498" fg:w="3"/><text x="40.1219%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.9520%" y="405" width="0.1601%" height="15" fill="rgb(234,70,17)" fg:x="499" fg:w="2"/><text x="40.2020%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.9520%" y="389" width="0.1601%" height="15" fill="rgb(231,215,53)" fg:x="499" fg:w="2"/><text x="40.2020%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.9520%" y="373" width="0.1601%" height="15" fill="rgb(218,140,42)" fg:x="499" fg:w="2"/><text x="40.2020%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="39.9520%" y="357" width="0.1601%" height="15" fill="rgb(233,227,45)" fg:x="499" fg:w="2"/><text x="40.2020%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="39.9520%" y="341" width="0.1601%" height="15" fill="rgb(225,189,21)" fg:x="499" fg:w="2"/><text x="40.2020%" y="351.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="40.0320%" y="325" width="0.0801%" height="15" fill="rgb(237,176,54)" fg:x="500" fg:w="1"/><text x="40.2820%" y="335.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="40.1121%" y="597" width="0.0801%" height="15" fill="rgb(215,131,46)" fg:x="501" fg:w="1"/><text x="40.3621%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.1121%" y="581" width="0.0801%" height="15" fill="rgb(218,95,20)" fg:x="501" fg:w="1"/><text x="40.3621%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.1121%" y="565" width="0.0801%" height="15" fill="rgb(208,198,12)" fg:x="501" fg:w="1"/><text x="40.3621%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="40.2722%" y="581" width="0.0801%" height="15" fill="rgb(239,107,50)" fg:x="503" fg:w="1"/><text x="40.5222%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.2722%" y="565" width="0.0801%" height="15" fill="rgb(240,217,37)" fg:x="503" fg:w="1"/><text x="40.5222%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="40.2722%" y="549" width="0.0801%" height="15" fill="rgb(242,197,49)" fg:x="503" fg:w="1"/><text x="40.5222%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="40.2722%" y="533" width="0.0801%" height="15" fill="rgb(219,171,17)" fg:x="503" fg:w="1"/><text x="40.5222%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.2722%" y="517" width="0.0801%" height="15" fill="rgb(209,81,40)" fg:x="503" fg:w="1"/><text x="40.5222%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="40.1922%" y="597" width="0.3203%" height="15" fill="rgb(237,156,30)" fg:x="502" fg:w="4"/><text x="40.4422%" y="607.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="40.3523%" y="581" width="0.1601%" height="15" fill="rgb(212,127,16)" fg:x="504" fg:w="2"/><text x="40.6023%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="40.3523%" y="565" width="0.1601%" height="15" fill="rgb(226,66,32)" fg:x="504" fg:w="2"/><text x="40.6023%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="40.4323%" y="549" width="0.0801%" height="15" fill="rgb(245,22,46)" fg:x="505" fg:w="1"/><text x="40.6823%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.4323%" y="533" width="0.0801%" height="15" fill="rgb(210,112,21)" fg:x="505" fg:w="1"/><text x="40.6823%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.4323%" y="517" width="0.0801%" height="15" fill="rgb(207,118,39)" fg:x="505" fg:w="1"/><text x="40.6823%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.4323%" y="501" width="0.0801%" height="15" fill="rgb(205,206,35)" fg:x="505" fg:w="1"/><text x="40.6823%" y="511.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="40.5124%" y="533" width="0.0801%" height="15" fill="rgb(222,120,2)" fg:x="506" fg:w="1"/><text x="40.7624%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.5124%" y="517" width="0.0801%" height="15" fill="rgb(205,38,18)" fg:x="506" fg:w="1"/><text x="40.7624%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="40.5124%" y="549" width="0.2402%" height="15" fill="rgb(226,61,2)" fg:x="506" fg:w="3"/><text x="40.7624%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="40.5925%" y="533" width="0.1601%" height="15" fill="rgb(242,161,23)" fg:x="507" fg:w="2"/><text x="40.8425%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="40.5925%" y="517" width="0.1601%" height="15" fill="rgb(213,13,52)" fg:x="507" fg:w="2"/><text x="40.8425%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.5925%" y="501" width="0.1601%" height="15" fill="rgb(246,209,47)" fg:x="507" fg:w="2"/><text x="40.8425%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.5925%" y="485" width="0.1601%" height="15" fill="rgb(214,41,3)" fg:x="507" fg:w="2"/><text x="40.8425%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.6725%" y="469" width="0.0801%" height="15" fill="rgb(236,119,38)" fg:x="508" fg:w="1"/><text x="40.9225%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.6725%" y="453" width="0.0801%" height="15" fill="rgb(218,50,11)" fg:x="508" fg:w="1"/><text x="40.9225%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.6725%" y="437" width="0.0801%" height="15" fill="rgb(228,38,11)" fg:x="508" fg:w="1"/><text x="40.9225%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.6725%" y="421" width="0.0801%" height="15" fill="rgb(212,13,9)" fg:x="508" fg:w="1"/><text x="40.9225%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.6725%" y="405" width="0.0801%" height="15" fill="rgb(208,211,9)" fg:x="508" fg:w="1"/><text x="40.9225%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.6725%" y="389" width="0.0801%" height="15" fill="rgb(239,39,32)" fg:x="508" fg:w="1"/><text x="40.9225%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.6725%" y="373" width="0.0801%" height="15" fill="rgb(254,179,26)" fg:x="508" fg:w="1"/><text x="40.9225%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.6725%" y="357" width="0.0801%" height="15" fill="rgb(249,165,28)" fg:x="508" fg:w="1"/><text x="40.9225%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.6725%" y="341" width="0.0801%" height="15" fill="rgb(225,59,50)" fg:x="508" fg:w="1"/><text x="40.9225%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.6725%" y="325" width="0.0801%" height="15" fill="rgb(209,122,5)" fg:x="508" fg:w="1"/><text x="40.9225%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.6725%" y="309" width="0.0801%" height="15" fill="rgb(214,65,34)" fg:x="508" fg:w="1"/><text x="40.9225%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.6725%" y="293" width="0.0801%" height="15" fill="rgb(249,183,32)" fg:x="508" fg:w="1"/><text x="40.9225%" y="303.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="40.7526%" y="533" width="0.0801%" height="15" fill="rgb(218,122,24)" fg:x="509" fg:w="1"/><text x="41.0026%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.9928%" y="437" width="0.0801%" height="15" fill="rgb(224,109,18)" fg:x="512" fg:w="1"/><text x="41.2428%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.9928%" y="421" width="0.0801%" height="15" fill="rgb(210,68,50)" fg:x="512" fg:w="1"/><text x="41.2428%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.9928%" y="405" width="0.0801%" height="15" fill="rgb(212,184,34)" fg:x="512" fg:w="1"/><text x="41.2428%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.9928%" y="389" width="0.0801%" height="15" fill="rgb(238,105,48)" fg:x="512" fg:w="1"/><text x="41.2428%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.9928%" y="373" width="0.0801%" height="15" fill="rgb(222,134,54)" fg:x="512" fg:w="1"/><text x="41.2428%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.9928%" y="357" width="0.0801%" height="15" fill="rgb(246,24,43)" fg:x="512" fg:w="1"/><text x="41.2428%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.9928%" y="341" width="0.0801%" height="15" fill="rgb(227,169,22)" fg:x="512" fg:w="1"/><text x="41.2428%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.9928%" y="325" width="0.0801%" height="15" fill="rgb(253,152,4)" fg:x="512" fg:w="1"/><text x="41.2428%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.9928%" y="309" width="0.0801%" height="15" fill="rgb(219,158,36)" fg:x="512" fg:w="1"/><text x="41.2428%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.9928%" y="293" width="0.0801%" height="15" fill="rgb(251,128,40)" fg:x="512" fg:w="1"/><text x="41.2428%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.9928%" y="277" width="0.0801%" height="15" fill="rgb(254,101,39)" fg:x="512" fg:w="1"/><text x="41.2428%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.9928%" y="261" width="0.0801%" height="15" fill="rgb(221,168,40)" fg:x="512" fg:w="1"/><text x="41.2428%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="40.8327%" y="453" width="0.3203%" height="15" fill="rgb(221,14,27)" fg:x="510" fg:w="4"/><text x="41.0827%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.0729%" y="437" width="0.0801%" height="15" fill="rgb(207,36,43)" fg:x="513" fg:w="1"/><text x="41.3229%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="40.8327%" y="501" width="0.4003%" height="15" fill="rgb(240,172,53)" fg:x="510" fg:w="5"/><text x="41.0827%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="40.8327%" y="485" width="0.4003%" height="15" fill="rgb(241,138,43)" fg:x="510" fg:w="5"/><text x="41.0827%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="40.8327%" y="469" width="0.4003%" height="15" fill="rgb(227,78,19)" fg:x="510" fg:w="5"/><text x="41.0827%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.1529%" y="453" width="0.0801%" height="15" fill="rgb(215,127,44)" fg:x="514" fg:w="1"/><text x="41.4029%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.1529%" y="437" width="0.0801%" height="15" fill="rgb(227,13,10)" fg:x="514" fg:w="1"/><text x="41.4029%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.1529%" y="421" width="0.0801%" height="15" fill="rgb(249,177,6)" fg:x="514" fg:w="1"/><text x="41.4029%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.1529%" y="405" width="0.0801%" height="15" fill="rgb(215,154,26)" fg:x="514" fg:w="1"/><text x="41.4029%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.1529%" y="389" width="0.0801%" height="15" fill="rgb(250,168,20)" fg:x="514" fg:w="1"/><text x="41.4029%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.1529%" y="373" width="0.0801%" height="15" fill="rgb(222,53,38)" fg:x="514" fg:w="1"/><text x="41.4029%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.1529%" y="357" width="0.0801%" height="15" fill="rgb(245,154,5)" fg:x="514" fg:w="1"/><text x="41.4029%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.1529%" y="341" width="0.0801%" height="15" fill="rgb(214,89,50)" fg:x="514" fg:w="1"/><text x="41.4029%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.1529%" y="325" width="0.0801%" height="15" fill="rgb(232,73,14)" fg:x="514" fg:w="1"/><text x="41.4029%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.1529%" y="309" width="0.0801%" height="15" fill="rgb(230,101,20)" fg:x="514" fg:w="1"/><text x="41.4029%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.1529%" y="293" width="0.0801%" height="15" fill="rgb(208,56,28)" fg:x="514" fg:w="1"/><text x="41.4029%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.1529%" y="277" width="0.0801%" height="15" fill="rgb(247,205,22)" fg:x="514" fg:w="1"/><text x="41.4029%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.2330%" y="437" width="0.0801%" height="15" fill="rgb(252,109,51)" fg:x="515" fg:w="1"/><text x="41.4830%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="41.2330%" y="501" width="0.1601%" height="15" fill="rgb(220,40,24)" fg:x="515" fg:w="2"/><text x="41.4830%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="41.2330%" y="485" width="0.1601%" height="15" fill="rgb(251,108,7)" fg:x="515" fg:w="2"/><text x="41.4830%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="41.2330%" y="469" width="0.1601%" height="15" fill="rgb(238,102,51)" fg:x="515" fg:w="2"/><text x="41.4830%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="41.2330%" y="453" width="0.1601%" height="15" fill="rgb(219,149,34)" fg:x="515" fg:w="2"/><text x="41.4830%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.3131%" y="437" width="0.0801%" height="15" fill="rgb(239,70,0)" fg:x="516" fg:w="1"/><text x="41.5631%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.3131%" y="421" width="0.0801%" height="15" fill="rgb(246,214,23)" fg:x="516" fg:w="1"/><text x="41.5631%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.3131%" y="405" width="0.0801%" height="15" fill="rgb(239,221,51)" fg:x="516" fg:w="1"/><text x="41.5631%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.3131%" y="389" width="0.0801%" height="15" fill="rgb(254,62,14)" fg:x="516" fg:w="1"/><text x="41.5631%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="41.3931%" y="405" width="0.0801%" height="15" fill="rgb(253,57,33)" fg:x="517" fg:w="1"/><text x="41.6431%" y="415.50"></text></g><g><title>plugins_core::build::Build::holding (80 samples, 6.41%)</title><rect x="35.1481%" y="629" width="6.4051%" height="15" fill="rgb(229,34,6)" fg:x="439" fg:w="80"/><text x="35.3981%" y="639.50">plugins_..</text></g><g><title>plugins_core::tools::set_container (37 samples, 2.96%)</title><rect x="38.5909%" y="613" width="2.9624%" height="15" fill="rgb(235,191,23)" fg:x="482" fg:w="37"/><text x="38.8409%" y="623.50">plu..</text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (13 samples, 1.04%)</title><rect x="40.5124%" y="597" width="1.0408%" height="15" fill="rgb(217,207,27)" fg:x="506" fg:w="13"/><text x="40.7624%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (13 samples, 1.04%)</title><rect x="40.5124%" y="581" width="1.0408%" height="15" fill="rgb(232,41,44)" fg:x="506" fg:w="13"/><text x="40.7624%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (13 samples, 1.04%)</title><rect x="40.5124%" y="565" width="1.0408%" height="15" fill="rgb(221,188,19)" fg:x="506" fg:w="13"/><text x="40.7624%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (10 samples, 0.80%)</title><rect x="40.7526%" y="549" width="0.8006%" height="15" fill="rgb(245,180,45)" fg:x="509" fg:w="10"/><text x="41.0026%" y="559.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.72%)</title><rect x="40.8327%" y="533" width="0.7206%" height="15" fill="rgb(250,220,42)" fg:x="510" fg:w="9"/><text x="41.0827%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="40.8327%" y="517" width="0.7206%" height="15" fill="rgb(234,16,34)" fg:x="510" fg:w="9"/><text x="41.0827%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="41.3931%" y="501" width="0.1601%" height="15" fill="rgb(233,217,23)" fg:x="517" fg:w="2"/><text x="41.6431%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.3931%" y="485" width="0.1601%" height="15" fill="rgb(209,22,46)" fg:x="517" fg:w="2"/><text x="41.6431%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="41.3931%" y="469" width="0.1601%" height="15" fill="rgb(213,101,18)" fg:x="517" fg:w="2"/><text x="41.6431%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.3931%" y="453" width="0.1601%" height="15" fill="rgb(215,179,52)" fg:x="517" fg:w="2"/><text x="41.6431%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="41.3931%" y="437" width="0.1601%" height="15" fill="rgb(223,50,25)" fg:x="517" fg:w="2"/><text x="41.6431%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.3931%" y="421" width="0.1601%" height="15" fill="rgb(224,51,44)" fg:x="517" fg:w="2"/><text x="41.6431%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="41.4732%" y="405" width="0.0801%" height="15" fill="rgb(224,13,54)" fg:x="518" fg:w="1"/><text x="41.7232%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.4732%" y="389" width="0.0801%" height="15" fill="rgb(219,58,47)" fg:x="518" fg:w="1"/><text x="41.7232%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.4732%" y="373" width="0.0801%" height="15" fill="rgb(246,124,34)" fg:x="518" fg:w="1"/><text x="41.7232%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="41.5532%" y="597" width="0.0801%" height="15" fill="rgb(245,109,25)" fg:x="519" fg:w="1"/><text x="41.8032%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="41.5532%" y="581" width="0.0801%" height="15" fill="rgb(235,48,23)" fg:x="519" fg:w="1"/><text x="41.8032%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="41.5532%" y="565" width="0.0801%" height="15" fill="rgb(229,203,36)" fg:x="519" fg:w="1"/><text x="41.8032%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="41.5532%" y="549" width="0.0801%" height="15" fill="rgb(234,180,9)" fg:x="519" fg:w="1"/><text x="41.8032%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.5532%" y="533" width="0.0801%" height="15" fill="rgb(228,98,45)" fg:x="519" fg:w="1"/><text x="41.8032%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.5532%" y="517" width="0.0801%" height="15" fill="rgb(240,24,36)" fg:x="519" fg:w="1"/><text x="41.8032%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="41.5532%" y="501" width="0.0801%" height="15" fill="rgb(227,154,19)" fg:x="519" fg:w="1"/><text x="41.8032%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="41.5532%" y="485" width="0.0801%" height="15" fill="rgb(231,2,48)" fg:x="519" fg:w="1"/><text x="41.8032%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.5532%" y="469" width="0.0801%" height="15" fill="rgb(219,216,0)" fg:x="519" fg:w="1"/><text x="41.8032%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.5532%" y="453" width="0.0801%" height="15" fill="rgb(251,88,0)" fg:x="519" fg:w="1"/><text x="41.8032%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.5532%" y="437" width="0.0801%" height="15" fill="rgb(242,45,45)" fg:x="519" fg:w="1"/><text x="41.8032%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="41.5532%" y="421" width="0.0801%" height="15" fill="rgb(218,149,45)" fg:x="519" fg:w="1"/><text x="41.8032%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="41.5532%" y="405" width="0.0801%" height="15" fill="rgb(247,194,10)" fg:x="519" fg:w="1"/><text x="41.8032%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="41.5532%" y="389" width="0.0801%" height="15" fill="rgb(234,33,37)" fg:x="519" fg:w="1"/><text x="41.8032%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="41.5532%" y="373" width="0.0801%" height="15" fill="rgb(218,61,13)" fg:x="519" fg:w="1"/><text x="41.8032%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="41.5532%" y="357" width="0.0801%" height="15" fill="rgb(210,80,52)" fg:x="519" fg:w="1"/><text x="41.8032%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="41.5532%" y="341" width="0.0801%" height="15" fill="rgb(218,203,27)" fg:x="519" fg:w="1"/><text x="41.8032%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="41.5532%" y="325" width="0.0801%" height="15" fill="rgb(209,126,33)" fg:x="519" fg:w="1"/><text x="41.8032%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="41.5532%" y="309" width="0.0801%" height="15" fill="rgb(234,173,41)" fg:x="519" fg:w="1"/><text x="41.8032%" y="319.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.08%)</title><rect x="41.5532%" y="293" width="0.0801%" height="15" fill="rgb(228,166,9)" fg:x="519" fg:w="1"/><text x="41.8032%" y="303.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="41.6333%" y="549" width="0.0801%" height="15" fill="rgb(208,124,43)" fg:x="520" fg:w="1"/><text x="41.8833%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="41.6333%" y="533" width="0.0801%" height="15" fill="rgb(212,154,38)" fg:x="520" fg:w="1"/><text x="41.8833%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="41.6333%" y="517" width="0.0801%" height="15" fill="rgb(246,179,35)" fg:x="520" fg:w="1"/><text x="41.8833%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.7934%" y="437" width="0.0801%" height="15" fill="rgb(251,3,50)" fg:x="522" fg:w="1"/><text x="42.0434%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.7934%" y="421" width="0.0801%" height="15" fill="rgb(219,96,8)" fg:x="522" fg:w="1"/><text x="42.0434%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.7934%" y="405" width="0.0801%" height="15" fill="rgb(251,216,33)" fg:x="522" fg:w="1"/><text x="42.0434%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.7934%" y="389" width="0.0801%" height="15" fill="rgb(243,145,29)" fg:x="522" fg:w="1"/><text x="42.0434%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.7934%" y="373" width="0.0801%" height="15" fill="rgb(210,75,20)" fg:x="522" fg:w="1"/><text x="42.0434%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.7934%" y="357" width="0.0801%" height="15" fill="rgb(235,56,8)" fg:x="522" fg:w="1"/><text x="42.0434%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.7934%" y="341" width="0.0801%" height="15" fill="rgb(226,175,49)" fg:x="522" fg:w="1"/><text x="42.0434%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.7934%" y="325" width="0.0801%" height="15" fill="rgb(242,204,23)" fg:x="522" fg:w="1"/><text x="42.0434%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.7934%" y="309" width="0.0801%" height="15" fill="rgb(225,104,24)" fg:x="522" fg:w="1"/><text x="42.0434%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.7934%" y="293" width="0.0801%" height="15" fill="rgb(253,34,1)" fg:x="522" fg:w="1"/><text x="42.0434%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.7934%" y="277" width="0.0801%" height="15" fill="rgb(233,199,23)" fg:x="522" fg:w="1"/><text x="42.0434%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.7934%" y="261" width="0.0801%" height="15" fill="rgb(247,7,51)" fg:x="522" fg:w="1"/><text x="42.0434%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="41.7934%" y="453" width="0.1601%" height="15" fill="rgb(214,146,12)" fg:x="522" fg:w="2"/><text x="42.0434%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.8735%" y="437" width="0.0801%" height="15" fill="rgb(234,181,43)" fg:x="523" fg:w="1"/><text x="42.1235%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="41.7134%" y="469" width="0.3203%" height="15" fill="rgb(239,148,6)" fg:x="521" fg:w="4"/><text x="41.9634%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.9536%" y="453" width="0.0801%" height="15" fill="rgb(206,151,17)" fg:x="524" fg:w="1"/><text x="42.2036%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.9536%" y="437" width="0.0801%" height="15" fill="rgb(213,215,10)" fg:x="524" fg:w="1"/><text x="42.2036%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.9536%" y="421" width="0.0801%" height="15" fill="rgb(215,220,44)" fg:x="524" fg:w="1"/><text x="42.2036%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.9536%" y="405" width="0.0801%" height="15" fill="rgb(245,205,37)" fg:x="524" fg:w="1"/><text x="42.2036%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.9536%" y="389" width="0.0801%" height="15" fill="rgb(245,130,43)" fg:x="524" fg:w="1"/><text x="42.2036%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.9536%" y="373" width="0.0801%" height="15" fill="rgb(231,227,38)" fg:x="524" fg:w="1"/><text x="42.2036%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.9536%" y="357" width="0.0801%" height="15" fill="rgb(233,185,4)" fg:x="524" fg:w="1"/><text x="42.2036%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.9536%" y="341" width="0.0801%" height="15" fill="rgb(224,154,43)" fg:x="524" fg:w="1"/><text x="42.2036%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.9536%" y="325" width="0.0801%" height="15" fill="rgb(235,156,15)" fg:x="524" fg:w="1"/><text x="42.2036%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.9536%" y="309" width="0.0801%" height="15" fill="rgb(211,55,43)" fg:x="524" fg:w="1"/><text x="42.2036%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.9536%" y="293" width="0.0801%" height="15" fill="rgb(247,149,40)" fg:x="524" fg:w="1"/><text x="42.2036%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.9536%" y="277" width="0.0801%" height="15" fill="rgb(232,171,16)" fg:x="524" fg:w="1"/><text x="42.2036%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="41.7134%" y="485" width="0.4003%" height="15" fill="rgb(215,117,49)" fg:x="521" fg:w="5"/><text x="41.9634%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.0336%" y="469" width="0.0801%" height="15" fill="rgb(246,194,11)" fg:x="525" fg:w="1"/><text x="42.2836%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="41.7134%" y="517" width="0.4804%" height="15" fill="rgb(242,101,44)" fg:x="521" fg:w="6"/><text x="41.9634%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="41.7134%" y="501" width="0.4804%" height="15" fill="rgb(226,174,6)" fg:x="521" fg:w="6"/><text x="41.9634%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.1137%" y="485" width="0.0801%" height="15" fill="rgb(213,150,20)" fg:x="526" fg:w="1"/><text x="42.3637%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.1938%" y="517" width="0.0801%" height="15" fill="rgb(222,124,42)" fg:x="527" fg:w="1"/><text x="42.4438%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="42.1938%" y="501" width="0.0801%" height="15" fill="rgb(250,19,47)" fg:x="527" fg:w="1"/><text x="42.4438%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.1938%" y="485" width="0.0801%" height="15" fill="rgb(241,217,19)" fg:x="527" fg:w="1"/><text x="42.4438%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.1938%" y="469" width="0.0801%" height="15" fill="rgb(207,210,34)" fg:x="527" fg:w="1"/><text x="42.4438%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.1938%" y="453" width="0.0801%" height="15" fill="rgb(244,45,4)" fg:x="527" fg:w="1"/><text x="42.4438%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.1938%" y="437" width="0.0801%" height="15" fill="rgb(252,134,50)" fg:x="527" fg:w="1"/><text x="42.4438%" y="447.50"></text></g><g><title>plugins_core::build::Build::into_entry (10 samples, 0.80%)</title><rect x="41.5532%" y="629" width="0.8006%" height="15" fill="rgb(238,74,2)" fg:x="519" fg:w="10"/><text x="41.8032%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.80%)</title><rect x="41.5532%" y="613" width="0.8006%" height="15" fill="rgb(226,58,46)" fg:x="519" fg:w="10"/><text x="41.8032%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (9 samples, 0.72%)</title><rect x="41.6333%" y="597" width="0.7206%" height="15" fill="rgb(232,83,35)" fg:x="520" fg:w="9"/><text x="41.8833%" y="607.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (9 samples, 0.72%)</title><rect x="41.6333%" y="581" width="0.7206%" height="15" fill="rgb(212,148,47)" fg:x="520" fg:w="9"/><text x="41.8833%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (9 samples, 0.72%)</title><rect x="41.6333%" y="565" width="0.7206%" height="15" fill="rgb(235,29,1)" fg:x="520" fg:w="9"/><text x="41.8833%" y="575.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.64%)</title><rect x="41.7134%" y="549" width="0.6405%" height="15" fill="rgb(247,55,37)" fg:x="521" fg:w="8"/><text x="41.9634%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="41.7134%" y="533" width="0.6405%" height="15" fill="rgb(222,48,3)" fg:x="521" fg:w="8"/><text x="41.9634%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="42.2738%" y="517" width="0.0801%" height="15" fill="rgb(234,21,33)" fg:x="528" fg:w="1"/><text x="42.5238%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.2738%" y="501" width="0.0801%" height="15" fill="rgb(247,178,53)" fg:x="528" fg:w="1"/><text x="42.5238%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="42.2738%" y="485" width="0.0801%" height="15" fill="rgb(225,75,7)" fg:x="528" fg:w="1"/><text x="42.5238%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.2738%" y="469" width="0.0801%" height="15" fill="rgb(219,199,7)" fg:x="528" fg:w="1"/><text x="42.5238%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="42.2738%" y="453" width="0.0801%" height="15" fill="rgb(209,93,42)" fg:x="528" fg:w="1"/><text x="42.5238%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.2738%" y="437" width="0.0801%" height="15" fill="rgb(240,175,17)" fg:x="528" fg:w="1"/><text x="42.5238%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="42.2738%" y="421" width="0.0801%" height="15" fill="rgb(232,106,7)" fg:x="528" fg:w="1"/><text x="42.5238%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.2738%" y="405" width="0.0801%" height="15" fill="rgb(242,106,43)" fg:x="528" fg:w="1"/><text x="42.5238%" y="415.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="42.3539%" y="597" width="0.0801%" height="15" fill="rgb(242,61,37)" fg:x="529" fg:w="1"/><text x="42.6039%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.3539%" y="581" width="0.0801%" height="15" fill="rgb(205,72,10)" fg:x="529" fg:w="1"/><text x="42.6039%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.3539%" y="565" width="0.0801%" height="15" fill="rgb(214,184,36)" fg:x="529" fg:w="1"/><text x="42.6039%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="42.3539%" y="549" width="0.0801%" height="15" fill="rgb(206,107,18)" fg:x="529" fg:w="1"/><text x="42.6039%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="42.4339%" y="581" width="0.0801%" height="15" fill="rgb(210,75,5)" fg:x="530" fg:w="1"/><text x="42.6839%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.4339%" y="565" width="0.0801%" height="15" fill="rgb(205,3,19)" fg:x="530" fg:w="1"/><text x="42.6839%" y="575.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="42.5140%" y="565" width="0.0801%" height="15" fill="rgb(207,181,42)" fg:x="531" fg:w="1"/><text x="42.7640%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.5140%" y="549" width="0.0801%" height="15" fill="rgb(229,179,43)" fg:x="531" fg:w="1"/><text x="42.7640%" y="559.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="42.5140%" y="533" width="0.0801%" height="15" fill="rgb(246,95,30)" fg:x="531" fg:w="1"/><text x="42.7640%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.5140%" y="517" width="0.0801%" height="15" fill="rgb(234,144,45)" fg:x="531" fg:w="1"/><text x="42.7640%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="42.5140%" y="501" width="0.0801%" height="15" fill="rgb(250,54,25)" fg:x="531" fg:w="1"/><text x="42.7640%" y="511.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="42.5140%" y="485" width="0.0801%" height="15" fill="rgb(215,195,40)" fg:x="531" fg:w="1"/><text x="42.7640%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="42.5140%" y="469" width="0.0801%" height="15" fill="rgb(233,188,42)" fg:x="531" fg:w="1"/><text x="42.7640%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.5140%" y="453" width="0.0801%" height="15" fill="rgb(247,227,35)" fg:x="531" fg:w="1"/><text x="42.7640%" y="463.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="42.3539%" y="629" width="0.3203%" height="15" fill="rgb(249,124,27)" fg:x="529" fg:w="4"/><text x="42.6039%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="42.3539%" y="613" width="0.3203%" height="15" fill="rgb(219,207,25)" fg:x="529" fg:w="4"/><text x="42.6039%" y="623.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="42.4339%" y="597" width="0.2402%" height="15" fill="rgb(241,216,47)" fg:x="530" fg:w="3"/><text x="42.6839%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="42.5140%" y="581" width="0.1601%" height="15" fill="rgb(233,82,50)" fg:x="531" fg:w="2"/><text x="42.7640%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.5941%" y="565" width="0.0801%" height="15" fill="rgb(232,63,2)" fg:x="532" fg:w="1"/><text x="42.8441%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.5941%" y="549" width="0.0801%" height="15" fill="rgb(236,184,28)" fg:x="532" fg:w="1"/><text x="42.8441%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.6741%" y="517" width="0.1601%" height="15" fill="rgb(254,63,27)" fg:x="533" fg:w="2"/><text x="42.9241%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.6741%" y="501" width="0.1601%" height="15" fill="rgb(253,106,28)" fg:x="533" fg:w="2"/><text x="42.9241%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.7542%" y="485" width="0.0801%" height="15" fill="rgb(225,141,39)" fg:x="534" fg:w="1"/><text x="43.0042%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.7542%" y="469" width="0.0801%" height="15" fill="rgb(222,157,20)" fg:x="534" fg:w="1"/><text x="43.0042%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.7542%" y="453" width="0.0801%" height="15" fill="rgb(210,190,9)" fg:x="534" fg:w="1"/><text x="43.0042%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.7542%" y="437" width="0.0801%" height="15" fill="rgb(242,167,7)" fg:x="534" fg:w="1"/><text x="43.0042%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.7542%" y="421" width="0.0801%" height="15" fill="rgb(227,82,41)" fg:x="534" fg:w="1"/><text x="43.0042%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.7542%" y="405" width="0.0801%" height="15" fill="rgb(222,131,13)" fg:x="534" fg:w="1"/><text x="43.0042%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.7542%" y="389" width="0.0801%" height="15" fill="rgb(221,98,26)" fg:x="534" fg:w="1"/><text x="43.0042%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.7542%" y="373" width="0.0801%" height="15" fill="rgb(251,63,52)" fg:x="534" fg:w="1"/><text x="43.0042%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.7542%" y="357" width="0.0801%" height="15" fill="rgb(246,25,43)" fg:x="534" fg:w="1"/><text x="43.0042%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.7542%" y="341" width="0.0801%" height="15" fill="rgb(247,167,15)" fg:x="534" fg:w="1"/><text x="43.0042%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.7542%" y="325" width="0.0801%" height="15" fill="rgb(240,104,42)" fg:x="534" fg:w="1"/><text x="43.0042%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.7542%" y="309" width="0.0801%" height="15" fill="rgb(224,54,6)" fg:x="534" fg:w="1"/><text x="43.0042%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.7542%" y="293" width="0.0801%" height="15" fill="rgb(244,108,35)" fg:x="534" fg:w="1"/><text x="43.0042%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.7542%" y="277" width="0.0801%" height="15" fill="rgb(216,154,2)" fg:x="534" fg:w="1"/><text x="43.0042%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="42.6741%" y="565" width="0.2402%" height="15" fill="rgb(222,8,47)" fg:x="533" fg:w="3"/><text x="42.9241%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="42.6741%" y="549" width="0.2402%" height="15" fill="rgb(252,93,1)" fg:x="533" fg:w="3"/><text x="42.9241%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="42.6741%" y="533" width="0.2402%" height="15" fill="rgb(223,226,51)" fg:x="533" fg:w="3"/><text x="42.9241%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="42.8343%" y="517" width="0.0801%" height="15" fill="rgb(206,147,9)" fg:x="535" fg:w="1"/><text x="43.0843%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.8343%" y="501" width="0.0801%" height="15" fill="rgb(248,180,41)" fg:x="535" fg:w="1"/><text x="43.0843%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.8343%" y="485" width="0.0801%" height="15" fill="rgb(209,47,50)" fg:x="535" fg:w="1"/><text x="43.0843%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.9944%" y="517" width="0.0801%" height="15" fill="rgb(243,65,31)" fg:x="537" fg:w="1"/><text x="43.2444%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.9944%" y="501" width="0.0801%" height="15" fill="rgb(228,128,1)" fg:x="537" fg:w="1"/><text x="43.2444%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.9944%" y="485" width="0.0801%" height="15" fill="rgb(231,192,16)" fg:x="537" fg:w="1"/><text x="43.2444%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.9944%" y="469" width="0.0801%" height="15" fill="rgb(224,26,40)" fg:x="537" fg:w="1"/><text x="43.2444%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.9944%" y="453" width="0.0801%" height="15" fill="rgb(214,192,17)" fg:x="537" fg:w="1"/><text x="43.2444%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.9944%" y="437" width="0.0801%" height="15" fill="rgb(225,147,18)" fg:x="537" fg:w="1"/><text x="43.2444%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.9944%" y="421" width="0.0801%" height="15" fill="rgb(205,35,11)" fg:x="537" fg:w="1"/><text x="43.2444%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="42.9944%" y="405" width="0.0801%" height="15" fill="rgb(242,40,42)" fg:x="537" fg:w="1"/><text x="43.2444%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="42.9944%" y="389" width="0.0801%" height="15" fill="rgb(250,170,13)" fg:x="537" fg:w="1"/><text x="43.2444%" y="399.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="43.0745%" y="517" width="0.0801%" height="15" fill="rgb(240,161,28)" fg:x="538" fg:w="1"/><text x="43.3245%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.0745%" y="501" width="0.0801%" height="15" fill="rgb(245,179,12)" fg:x="538" fg:w="1"/><text x="43.3245%" y="511.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="43.0745%" y="485" width="0.0801%" height="15" fill="rgb(250,92,32)" fg:x="538" fg:w="1"/><text x="43.3245%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.0745%" y="469" width="0.0801%" height="15" fill="rgb(233,10,40)" fg:x="538" fg:w="1"/><text x="43.3245%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="43.0745%" y="453" width="0.0801%" height="15" fill="rgb(217,98,1)" fg:x="538" fg:w="1"/><text x="43.3245%" y="463.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="43.0745%" y="437" width="0.0801%" height="15" fill="rgb(238,202,7)" fg:x="538" fg:w="1"/><text x="43.3245%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.0745%" y="421" width="0.0801%" height="15" fill="rgb(222,91,3)" fg:x="538" fg:w="1"/><text x="43.3245%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="43.0745%" y="405" width="0.0801%" height="15" fill="rgb(211,170,49)" fg:x="538" fg:w="1"/><text x="43.3245%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.0745%" y="389" width="0.0801%" height="15" fill="rgb(253,139,18)" fg:x="538" fg:w="1"/><text x="43.3245%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.0745%" y="373" width="0.0801%" height="15" fill="rgb(222,4,43)" fg:x="538" fg:w="1"/><text x="43.3245%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="42.6741%" y="613" width="0.5604%" height="15" fill="rgb(207,205,12)" fg:x="533" fg:w="7"/><text x="42.9241%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="42.6741%" y="597" width="0.5604%" height="15" fill="rgb(216,159,46)" fg:x="533" fg:w="7"/><text x="42.9241%" y="607.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (7 samples, 0.56%)</title><rect x="42.6741%" y="581" width="0.5604%" height="15" fill="rgb(236,115,1)" fg:x="533" fg:w="7"/><text x="42.9241%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="42.9143%" y="565" width="0.3203%" height="15" fill="rgb(251,35,33)" fg:x="536" fg:w="4"/><text x="43.1643%" y="575.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="42.9944%" y="549" width="0.2402%" height="15" fill="rgb(248,62,51)" fg:x="537" fg:w="3"/><text x="43.2444%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="42.9944%" y="533" width="0.2402%" height="15" fill="rgb(254,180,19)" fg:x="537" fg:w="3"/><text x="43.2444%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.1545%" y="517" width="0.0801%" height="15" fill="rgb(217,100,32)" fg:x="539" fg:w="1"/><text x="43.4045%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="43.1545%" y="501" width="0.0801%" height="15" fill="rgb(224,71,22)" fg:x="539" fg:w="1"/><text x="43.4045%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.1545%" y="485" width="0.0801%" height="15" fill="rgb(251,185,33)" fg:x="539" fg:w="1"/><text x="43.4045%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.1545%" y="469" width="0.0801%" height="15" fill="rgb(209,75,48)" fg:x="539" fg:w="1"/><text x="43.4045%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="43.2346%" y="597" width="0.0801%" height="15" fill="rgb(253,190,16)" fg:x="540" fg:w="1"/><text x="43.4846%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="43.2346%" y="581" width="0.0801%" height="15" fill="rgb(226,140,1)" fg:x="540" fg:w="1"/><text x="43.4846%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.2346%" y="565" width="0.0801%" height="15" fill="rgb(206,75,30)" fg:x="540" fg:w="1"/><text x="43.4846%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="43.3147%" y="565" width="0.0801%" height="15" fill="rgb(231,208,37)" fg:x="541" fg:w="1"/><text x="43.5647%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="43.3147%" y="549" width="0.0801%" height="15" fill="rgb(238,136,40)" fg:x="541" fg:w="1"/><text x="43.5647%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="43.3147%" y="533" width="0.0801%" height="15" fill="rgb(247,137,17)" fg:x="541" fg:w="1"/><text x="43.5647%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.3147%" y="517" width="0.0801%" height="15" fill="rgb(240,60,40)" fg:x="541" fg:w="1"/><text x="43.5647%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.3147%" y="501" width="0.0801%" height="15" fill="rgb(236,68,50)" fg:x="541" fg:w="1"/><text x="43.5647%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.3147%" y="485" width="0.0801%" height="15" fill="rgb(230,42,12)" fg:x="541" fg:w="1"/><text x="43.5647%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.3147%" y="469" width="0.0801%" height="15" fill="rgb(219,16,16)" fg:x="541" fg:w="1"/><text x="43.5647%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.3147%" y="453" width="0.0801%" height="15" fill="rgb(220,38,35)" fg:x="541" fg:w="1"/><text x="43.5647%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.4748%" y="453" width="0.0801%" height="15" fill="rgb(228,33,1)" fg:x="543" fg:w="1"/><text x="43.7248%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.4748%" y="437" width="0.0801%" height="15" fill="rgb(241,46,31)" fg:x="543" fg:w="1"/><text x="43.7248%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="43.3947%" y="517" width="0.2402%" height="15" fill="rgb(232,58,20)" fg:x="542" fg:w="3"/><text x="43.6447%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="43.3947%" y="501" width="0.2402%" height="15" fill="rgb(206,228,53)" fg:x="542" fg:w="3"/><text x="43.6447%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="43.3947%" y="485" width="0.2402%" height="15" fill="rgb(206,88,33)" fg:x="542" fg:w="3"/><text x="43.6447%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="43.4748%" y="469" width="0.1601%" height="15" fill="rgb(238,69,7)" fg:x="543" fg:w="2"/><text x="43.7248%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.5548%" y="453" width="0.0801%" height="15" fill="rgb(250,21,46)" fg:x="544" fg:w="1"/><text x="43.8048%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.5548%" y="437" width="0.0801%" height="15" fill="rgb(215,212,21)" fg:x="544" fg:w="1"/><text x="43.8048%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.5548%" y="421" width="0.0801%" height="15" fill="rgb(211,35,12)" fg:x="544" fg:w="1"/><text x="43.8048%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.5548%" y="405" width="0.0801%" height="15" fill="rgb(231,184,16)" fg:x="544" fg:w="1"/><text x="43.8048%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.5548%" y="389" width="0.0801%" height="15" fill="rgb(242,140,15)" fg:x="544" fg:w="1"/><text x="43.8048%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.5548%" y="373" width="0.0801%" height="15" fill="rgb(220,37,14)" fg:x="544" fg:w="1"/><text x="43.8048%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.5548%" y="357" width="0.0801%" height="15" fill="rgb(223,146,22)" fg:x="544" fg:w="1"/><text x="43.8048%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.5548%" y="341" width="0.0801%" height="15" fill="rgb(216,132,15)" fg:x="544" fg:w="1"/><text x="43.8048%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.5548%" y="325" width="0.0801%" height="15" fill="rgb(248,83,5)" fg:x="544" fg:w="1"/><text x="43.8048%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.5548%" y="309" width="0.0801%" height="15" fill="rgb(231,206,48)" fg:x="544" fg:w="1"/><text x="43.8048%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.5548%" y="293" width="0.0801%" height="15" fill="rgb(253,185,37)" fg:x="544" fg:w="1"/><text x="43.8048%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.5548%" y="277" width="0.0801%" height="15" fill="rgb(208,21,44)" fg:x="544" fg:w="1"/><text x="43.8048%" y="287.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="43.3147%" y="597" width="0.4003%" height="15" fill="rgb(236,125,4)" fg:x="541" fg:w="5"/><text x="43.5647%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.40%)</title><rect x="43.3147%" y="581" width="0.4003%" height="15" fill="rgb(226,134,25)" fg:x="541" fg:w="5"/><text x="43.5647%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="43.3947%" y="565" width="0.3203%" height="15" fill="rgb(250,201,12)" fg:x="542" fg:w="4"/><text x="43.6447%" y="575.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="43.3947%" y="549" width="0.3203%" height="15" fill="rgb(225,92,18)" fg:x="542" fg:w="4"/><text x="43.6447%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="43.3947%" y="533" width="0.3203%" height="15" fill="rgb(227,35,22)" fg:x="542" fg:w="4"/><text x="43.6447%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.6349%" y="517" width="0.0801%" height="15" fill="rgb(214,180,52)" fg:x="545" fg:w="1"/><text x="43.8849%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="43.6349%" y="501" width="0.0801%" height="15" fill="rgb(233,55,38)" fg:x="545" fg:w="1"/><text x="43.8849%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.6349%" y="485" width="0.0801%" height="15" fill="rgb(249,171,43)" fg:x="545" fg:w="1"/><text x="43.8849%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.6349%" y="469" width="0.0801%" height="15" fill="rgb(239,87,2)" fg:x="545" fg:w="1"/><text x="43.8849%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.6349%" y="453" width="0.0801%" height="15" fill="rgb(248,141,5)" fg:x="545" fg:w="1"/><text x="43.8849%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.6349%" y="437" width="0.0801%" height="15" fill="rgb(238,33,42)" fg:x="545" fg:w="1"/><text x="43.8849%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.7150%" y="549" width="0.0801%" height="15" fill="rgb(231,57,19)" fg:x="546" fg:w="1"/><text x="43.9650%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.7150%" y="533" width="0.0801%" height="15" fill="rgb(214,78,53)" fg:x="546" fg:w="1"/><text x="43.9650%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="43.7150%" y="517" width="0.0801%" height="15" fill="rgb(206,132,29)" fg:x="546" fg:w="1"/><text x="43.9650%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (3 samples, 0.24%)</title><rect x="43.7150%" y="581" width="0.2402%" height="15" fill="rgb(248,174,31)" fg:x="546" fg:w="3"/><text x="43.9650%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="43.7150%" y="565" width="0.2402%" height="15" fill="rgb(221,87,13)" fg:x="546" fg:w="3"/><text x="43.9650%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="43.7950%" y="549" width="0.1601%" height="15" fill="rgb(223,197,17)" fg:x="547" fg:w="2"/><text x="44.0450%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="43.7950%" y="533" width="0.1601%" height="15" fill="rgb(220,144,50)" fg:x="547" fg:w="2"/><text x="44.0450%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="43.7950%" y="517" width="0.1601%" height="15" fill="rgb(244,201,11)" fg:x="547" fg:w="2"/><text x="44.0450%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="43.7950%" y="501" width="0.1601%" height="15" fill="rgb(249,81,34)" fg:x="547" fg:w="2"/><text x="44.0450%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.8751%" y="485" width="0.0801%" height="15" fill="rgb(205,161,12)" fg:x="548" fg:w="1"/><text x="44.1251%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.8751%" y="469" width="0.0801%" height="15" fill="rgb(252,139,50)" fg:x="548" fg:w="1"/><text x="44.1251%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="43.7150%" y="597" width="0.3203%" height="15" fill="rgb(205,169,14)" fg:x="546" fg:w="4"/><text x="43.9650%" y="607.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="43.9552%" y="581" width="0.0801%" height="15" fill="rgb(248,198,33)" fg:x="549" fg:w="1"/><text x="44.2052%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.9552%" y="565" width="0.0801%" height="15" fill="rgb(236,23,21)" fg:x="549" fg:w="1"/><text x="44.2052%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="43.9552%" y="549" width="0.0801%" height="15" fill="rgb(231,13,38)" fg:x="549" fg:w="1"/><text x="44.2052%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.9552%" y="533" width="0.0801%" height="15" fill="rgb(239,139,21)" fg:x="549" fg:w="1"/><text x="44.2052%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.9552%" y="517" width="0.0801%" height="15" fill="rgb(222,164,45)" fg:x="549" fg:w="1"/><text x="44.2052%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.9552%" y="501" width="0.0801%" height="15" fill="rgb(230,52,27)" fg:x="549" fg:w="1"/><text x="44.2052%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="43.9552%" y="485" width="0.0801%" height="15" fill="rgb(227,143,42)" fg:x="549" fg:w="1"/><text x="44.2052%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.1153%" y="453" width="0.0801%" height="15" fill="rgb(249,127,1)" fg:x="551" fg:w="1"/><text x="44.3653%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.1153%" y="437" width="0.0801%" height="15" fill="rgb(243,107,26)" fg:x="551" fg:w="1"/><text x="44.3653%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.1153%" y="421" width="0.0801%" height="15" fill="rgb(225,7,45)" fg:x="551" fg:w="1"/><text x="44.3653%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.1153%" y="405" width="0.0801%" height="15" fill="rgb(241,88,38)" fg:x="551" fg:w="1"/><text x="44.3653%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.1153%" y="389" width="0.0801%" height="15" fill="rgb(226,121,9)" fg:x="551" fg:w="1"/><text x="44.3653%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.1153%" y="373" width="0.0801%" height="15" fill="rgb(253,60,29)" fg:x="551" fg:w="1"/><text x="44.3653%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.1153%" y="357" width="0.0801%" height="15" fill="rgb(244,181,39)" fg:x="551" fg:w="1"/><text x="44.3653%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.1153%" y="341" width="0.0801%" height="15" fill="rgb(252,203,31)" fg:x="551" fg:w="1"/><text x="44.3653%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.1153%" y="325" width="0.0801%" height="15" fill="rgb(224,120,8)" fg:x="551" fg:w="1"/><text x="44.3653%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.1153%" y="309" width="0.0801%" height="15" fill="rgb(205,171,54)" fg:x="551" fg:w="1"/><text x="44.3653%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.1153%" y="293" width="0.0801%" height="15" fill="rgb(235,89,11)" fg:x="551" fg:w="1"/><text x="44.3653%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.1153%" y="277" width="0.0801%" height="15" fill="rgb(212,180,28)" fg:x="551" fg:w="1"/><text x="44.3653%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.1153%" y="261" width="0.0801%" height="15" fill="rgb(247,84,49)" fg:x="551" fg:w="1"/><text x="44.3653%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.1153%" y="245" width="0.0801%" height="15" fill="rgb(236,187,52)" fg:x="551" fg:w="1"/><text x="44.3653%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="44.1153%" y="501" width="0.1601%" height="15" fill="rgb(227,24,15)" fg:x="551" fg:w="2"/><text x="44.3653%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="44.1153%" y="485" width="0.1601%" height="15" fill="rgb(227,211,13)" fg:x="551" fg:w="2"/><text x="44.3653%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="44.1153%" y="469" width="0.1601%" height="15" fill="rgb(245,52,14)" fg:x="551" fg:w="2"/><text x="44.3653%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.1954%" y="453" width="0.0801%" height="15" fill="rgb(225,185,13)" fg:x="552" fg:w="1"/><text x="44.4454%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.2754%" y="437" width="0.0801%" height="15" fill="rgb(217,160,29)" fg:x="553" fg:w="1"/><text x="44.5254%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="44.1153%" y="549" width="0.4003%" height="15" fill="rgb(216,115,53)" fg:x="551" fg:w="5"/><text x="44.3653%" y="559.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="44.1153%" y="533" width="0.4003%" height="15" fill="rgb(236,99,5)" fg:x="551" fg:w="5"/><text x="44.3653%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="44.1153%" y="517" width="0.4003%" height="15" fill="rgb(222,60,38)" fg:x="551" fg:w="5"/><text x="44.3653%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="44.2754%" y="501" width="0.2402%" height="15" fill="rgb(212,82,22)" fg:x="553" fg:w="3"/><text x="44.5254%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="44.2754%" y="485" width="0.2402%" height="15" fill="rgb(214,48,28)" fg:x="553" fg:w="3"/><text x="44.5254%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="44.2754%" y="469" width="0.2402%" height="15" fill="rgb(245,196,50)" fg:x="553" fg:w="3"/><text x="44.5254%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="44.2754%" y="453" width="0.2402%" height="15" fill="rgb(225,159,46)" fg:x="553" fg:w="3"/><text x="44.5254%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="44.3555%" y="437" width="0.1601%" height="15" fill="rgb(207,195,48)" fg:x="554" fg:w="2"/><text x="44.6055%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.3555%" y="421" width="0.1601%" height="15" fill="rgb(240,73,3)" fg:x="554" fg:w="2"/><text x="44.6055%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="44.3555%" y="405" width="0.1601%" height="15" fill="rgb(245,57,23)" fg:x="554" fg:w="2"/><text x="44.6055%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.3555%" y="389" width="0.1601%" height="15" fill="rgb(240,75,18)" fg:x="554" fg:w="2"/><text x="44.6055%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.4355%" y="373" width="0.0801%" height="15" fill="rgb(238,168,12)" fg:x="555" fg:w="1"/><text x="44.6855%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.4355%" y="357" width="0.0801%" height="15" fill="rgb(226,20,40)" fg:x="555" fg:w="1"/><text x="44.6855%" y="367.50"></text></g><g><title>plugins_core::build::Build::occupying (25 samples, 2.00%)</title><rect x="42.6741%" y="629" width="2.0016%" height="15" fill="rgb(224,130,35)" fg:x="533" fg:w="25"/><text x="42.9241%" y="639.50">p..</text></g><g><title>plugins_core::tools::set_occupying (18 samples, 1.44%)</title><rect x="43.2346%" y="613" width="1.4412%" height="15" fill="rgb(225,63,41)" fg:x="540" fg:w="18"/><text x="43.4846%" y="623.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (8 samples, 0.64%)</title><rect x="44.0352%" y="597" width="0.6405%" height="15" fill="rgb(219,3,3)" fg:x="550" fg:w="8"/><text x="44.2852%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="44.0352%" y="581" width="0.6405%" height="15" fill="rgb(218,157,4)" fg:x="550" fg:w="8"/><text x="44.2852%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (8 samples, 0.64%)</title><rect x="44.0352%" y="565" width="0.6405%" height="15" fill="rgb(232,76,36)" fg:x="550" fg:w="8"/><text x="44.2852%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="44.5156%" y="549" width="0.1601%" height="15" fill="rgb(247,36,0)" fg:x="556" fg:w="2"/><text x="44.7656%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="44.5156%" y="533" width="0.1601%" height="15" fill="rgb(205,2,34)" fg:x="556" fg:w="2"/><text x="44.7656%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="44.5156%" y="517" width="0.1601%" height="15" fill="rgb(239,136,13)" fg:x="556" fg:w="2"/><text x="44.7656%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="44.5156%" y="501" width="0.1601%" height="15" fill="rgb(253,122,12)" fg:x="556" fg:w="2"/><text x="44.7656%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.5156%" y="485" width="0.1601%" height="15" fill="rgb(222,174,7)" fg:x="556" fg:w="2"/><text x="44.7656%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="44.5156%" y="469" width="0.1601%" height="15" fill="rgb(208,191,42)" fg:x="556" fg:w="2"/><text x="44.7656%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.5156%" y="453" width="0.1601%" height="15" fill="rgb(237,212,15)" fg:x="556" fg:w="2"/><text x="44.7656%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="44.5156%" y="437" width="0.1601%" height="15" fill="rgb(215,65,20)" fg:x="556" fg:w="2"/><text x="44.7656%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.5156%" y="421" width="0.1601%" height="15" fill="rgb(232,103,11)" fg:x="556" fg:w="2"/><text x="44.7656%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="44.5957%" y="405" width="0.0801%" height="15" fill="rgb(235,148,18)" fg:x="557" fg:w="1"/><text x="44.8457%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.5957%" y="389" width="0.0801%" height="15" fill="rgb(240,173,7)" fg:x="557" fg:w="1"/><text x="44.8457%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.5957%" y="373" width="0.0801%" height="15" fill="rgb(228,182,25)" fg:x="557" fg:w="1"/><text x="44.8457%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="44.6757%" y="597" width="0.0801%" height="15" fill="rgb(247,3,52)" fg:x="558" fg:w="1"/><text x="44.9257%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="44.6757%" y="581" width="0.0801%" height="15" fill="rgb(226,155,8)" fg:x="558" fg:w="1"/><text x="44.9257%" y="591.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="44.6757%" y="565" width="0.0801%" height="15" fill="rgb(243,195,38)" fg:x="558" fg:w="1"/><text x="44.9257%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="44.6757%" y="549" width="0.0801%" height="15" fill="rgb(254,181,33)" fg:x="558" fg:w="1"/><text x="44.9257%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="44.7558%" y="565" width="0.0801%" height="15" fill="rgb(232,98,23)" fg:x="559" fg:w="1"/><text x="45.0058%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="44.7558%" y="549" width="0.0801%" height="15" fill="rgb(205,23,10)" fg:x="559" fg:w="1"/><text x="45.0058%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="44.7558%" y="533" width="0.0801%" height="15" fill="rgb(212,124,38)" fg:x="559" fg:w="1"/><text x="45.0058%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="44.7558%" y="517" width="0.0801%" height="15" fill="rgb(228,207,2)" fg:x="559" fg:w="1"/><text x="45.0058%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="44.7558%" y="501" width="0.0801%" height="15" fill="rgb(215,120,22)" fg:x="559" fg:w="1"/><text x="45.0058%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="44.6757%" y="613" width="0.2402%" height="15" fill="rgb(251,172,33)" fg:x="558" fg:w="3"/><text x="44.9257%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="44.7558%" y="597" width="0.1601%" height="15" fill="rgb(250,83,2)" fg:x="559" fg:w="2"/><text x="45.0058%" y="607.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="44.7558%" y="581" width="0.1601%" height="15" fill="rgb(210,132,53)" fg:x="559" fg:w="2"/><text x="45.0058%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="44.8359%" y="565" width="0.0801%" height="15" fill="rgb(221,208,36)" fg:x="560" fg:w="1"/><text x="45.0859%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.9159%" y="581" width="0.0801%" height="15" fill="rgb(205,192,46)" fg:x="561" fg:w="1"/><text x="45.1659%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.9159%" y="565" width="0.0801%" height="15" fill="rgb(223,163,14)" fg:x="561" fg:w="1"/><text x="45.1659%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.9159%" y="549" width="0.0801%" height="15" fill="rgb(218,41,28)" fg:x="561" fg:w="1"/><text x="45.1659%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.9159%" y="533" width="0.0801%" height="15" fill="rgb(235,104,10)" fg:x="561" fg:w="1"/><text x="45.1659%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.9159%" y="517" width="0.0801%" height="15" fill="rgb(246,17,4)" fg:x="561" fg:w="1"/><text x="45.1659%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.9159%" y="501" width="0.0801%" height="15" fill="rgb(240,7,16)" fg:x="561" fg:w="1"/><text x="45.1659%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.9159%" y="485" width="0.0801%" height="15" fill="rgb(213,160,23)" fg:x="561" fg:w="1"/><text x="45.1659%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.9159%" y="469" width="0.0801%" height="15" fill="rgb(251,179,49)" fg:x="561" fg:w="1"/><text x="45.1659%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.9159%" y="453" width="0.0801%" height="15" fill="rgb(247,198,10)" fg:x="561" fg:w="1"/><text x="45.1659%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.9159%" y="437" width="0.0801%" height="15" fill="rgb(220,65,29)" fg:x="561" fg:w="1"/><text x="45.1659%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.9159%" y="421" width="0.0801%" height="15" fill="rgb(237,171,28)" fg:x="561" fg:w="1"/><text x="45.1659%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.9159%" y="405" width="0.0801%" height="15" fill="rgb(228,44,26)" fg:x="561" fg:w="1"/><text x="45.1659%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.9960%" y="581" width="0.0801%" height="15" fill="rgb(216,210,27)" fg:x="562" fg:w="1"/><text x="45.2460%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.9960%" y="565" width="0.0801%" height="15" fill="rgb(252,10,17)" fg:x="562" fg:w="1"/><text x="45.2460%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="44.9960%" y="549" width="0.0801%" height="15" fill="rgb(214,172,30)" fg:x="562" fg:w="1"/><text x="45.2460%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.0761%" y="565" width="0.0801%" height="15" fill="rgb(253,130,48)" fg:x="563" fg:w="1"/><text x="45.3261%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.0761%" y="549" width="0.0801%" height="15" fill="rgb(226,99,43)" fg:x="563" fg:w="1"/><text x="45.3261%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.0761%" y="533" width="0.0801%" height="15" fill="rgb(239,111,26)" fg:x="563" fg:w="1"/><text x="45.3261%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.0761%" y="517" width="0.0801%" height="15" fill="rgb(240,27,53)" fg:x="563" fg:w="1"/><text x="45.3261%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.0761%" y="501" width="0.0801%" height="15" fill="rgb(254,163,12)" fg:x="563" fg:w="1"/><text x="45.3261%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.0761%" y="485" width="0.0801%" height="15" fill="rgb(225,51,48)" fg:x="563" fg:w="1"/><text x="45.3261%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.0761%" y="469" width="0.0801%" height="15" fill="rgb(205,19,32)" fg:x="563" fg:w="1"/><text x="45.3261%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.0761%" y="453" width="0.0801%" height="15" fill="rgb(218,119,26)" fg:x="563" fg:w="1"/><text x="45.3261%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.0761%" y="437" width="0.0801%" height="15" fill="rgb(231,173,33)" fg:x="563" fg:w="1"/><text x="45.3261%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="45.0761%" y="421" width="0.0801%" height="15" fill="rgb(241,100,29)" fg:x="563" fg:w="1"/><text x="45.3261%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="45.0761%" y="405" width="0.0801%" height="15" fill="rgb(250,194,34)" fg:x="563" fg:w="1"/><text x="45.3261%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="45.0761%" y="389" width="0.0801%" height="15" fill="rgb(215,23,50)" fg:x="563" fg:w="1"/><text x="45.3261%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.0761%" y="373" width="0.0801%" height="15" fill="rgb(206,49,37)" fg:x="563" fg:w="1"/><text x="45.3261%" y="383.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (298 samples, 23.86%)</title><rect x="21.3771%" y="645" width="23.8591%" height="15" fill="rgb(247,39,21)" fg:x="267" fg:w="298"/><text x="21.6271%" y="655.50">plugins_core::build::BuildSurroundings..</text></g><g><title>plugins_core::build::Build::with_username (7 samples, 0.56%)</title><rect x="44.6757%" y="629" width="0.5604%" height="15" fill="rgb(209,220,15)" fg:x="558" fg:w="7"/><text x="44.9257%" y="639.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (4 samples, 0.32%)</title><rect x="44.9159%" y="613" width="0.3203%" height="15" fill="rgb(206,41,33)" fg:x="561" fg:w="4"/><text x="45.1659%" y="623.50"></text></g><g><title>engine::users::model::add_username_to_key (4 samples, 0.32%)</title><rect x="44.9159%" y="597" width="0.3203%" height="15" fill="rgb(221,225,45)" fg:x="561" fg:w="4"/><text x="45.1659%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="45.0761%" y="581" width="0.1601%" height="15" fill="rgb(216,27,18)" fg:x="563" fg:w="2"/><text x="45.3261%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="45.1561%" y="565" width="0.0801%" height="15" fill="rgb(250,193,34)" fg:x="564" fg:w="1"/><text x="45.4061%" y="575.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (2 samples, 0.16%)</title><rect x="45.2362%" y="645" width="0.1601%" height="15" fill="rgb(227,215,20)" fg:x="565" fg:w="2"/><text x="45.4862%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="45.2362%" y="629" width="0.1601%" height="15" fill="rgb(242,211,27)" fg:x="565" fg:w="2"/><text x="45.4862%" y="639.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="45.3163%" y="613" width="0.0801%" height="15" fill="rgb(229,190,30)" fg:x="566" fg:w="1"/><text x="45.5663%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="45.3163%" y="597" width="0.0801%" height="15" fill="rgb(253,31,29)" fg:x="566" fg:w="1"/><text x="45.5663%" y="607.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="45.3163%" y="581" width="0.0801%" height="15" fill="rgb(229,177,52)" fg:x="566" fg:w="1"/><text x="45.5663%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="45.3163%" y="565" width="0.0801%" height="15" fill="rgb(226,88,8)" fg:x="566" fg:w="1"/><text x="45.5663%" y="575.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="45.3163%" y="549" width="0.0801%" height="15" fill="rgb(214,55,27)" fg:x="566" fg:w="1"/><text x="45.5663%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="45.3163%" y="533" width="0.0801%" height="15" fill="rgb(233,202,5)" fg:x="566" fg:w="1"/><text x="45.5663%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.3163%" y="517" width="0.0801%" height="15" fill="rgb(251,49,30)" fg:x="566" fg:w="1"/><text x="45.5663%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.3163%" y="501" width="0.0801%" height="15" fill="rgb(235,18,52)" fg:x="566" fg:w="1"/><text x="45.5663%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.3163%" y="485" width="0.0801%" height="15" fill="rgb(250,111,51)" fg:x="566" fg:w="1"/><text x="45.5663%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="45.3163%" y="469" width="0.0801%" height="15" fill="rgb(218,13,25)" fg:x="566" fg:w="1"/><text x="45.5663%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="45.3163%" y="453" width="0.0801%" height="15" fill="rgb(248,96,7)" fg:x="566" fg:w="1"/><text x="45.5663%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="45.3163%" y="437" width="0.0801%" height="15" fill="rgb(217,31,15)" fg:x="566" fg:w="1"/><text x="45.5663%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.3163%" y="421" width="0.0801%" height="15" fill="rgb(228,59,49)" fg:x="566" fg:w="1"/><text x="45.5663%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="45.3963%" y="565" width="0.0801%" height="15" fill="rgb(210,152,38)" fg:x="567" fg:w="1"/><text x="45.6463%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="45.3963%" y="549" width="0.0801%" height="15" fill="rgb(206,71,11)" fg:x="567" fg:w="1"/><text x="45.6463%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="45.3963%" y="533" width="0.0801%" height="15" fill="rgb(244,199,5)" fg:x="567" fg:w="1"/><text x="45.6463%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="45.3963%" y="517" width="0.0801%" height="15" fill="rgb(253,49,1)" fg:x="567" fg:w="1"/><text x="45.6463%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="45.3963%" y="501" width="0.0801%" height="15" fill="rgb(225,206,40)" fg:x="567" fg:w="1"/><text x="45.6463%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="45.4764%" y="549" width="0.0801%" height="15" fill="rgb(243,116,47)" fg:x="568" fg:w="1"/><text x="45.7264%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="45.4764%" y="533" width="0.0801%" height="15" fill="rgb(219,225,16)" fg:x="568" fg:w="1"/><text x="45.7264%" y="543.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="45.5564%" y="485" width="0.0801%" height="15" fill="rgb(233,29,47)" fg:x="569" fg:w="1"/><text x="45.8064%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="45.5564%" y="469" width="0.0801%" height="15" fill="rgb(250,179,18)" fg:x="569" fg:w="1"/><text x="45.8064%" y="479.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="45.3963%" y="581" width="0.3203%" height="15" fill="rgb(215,176,6)" fg:x="567" fg:w="4"/><text x="45.6463%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="45.4764%" y="565" width="0.2402%" height="15" fill="rgb(214,117,39)" fg:x="568" fg:w="3"/><text x="45.7264%" y="575.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="45.5564%" y="549" width="0.1601%" height="15" fill="rgb(247,183,36)" fg:x="569" fg:w="2"/><text x="45.8064%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="45.5564%" y="533" width="0.1601%" height="15" fill="rgb(237,200,3)" fg:x="569" fg:w="2"/><text x="45.8064%" y="543.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="45.5564%" y="517" width="0.1601%" height="15" fill="rgb(212,220,24)" fg:x="569" fg:w="2"/><text x="45.8064%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="45.5564%" y="501" width="0.1601%" height="15" fill="rgb(245,216,20)" fg:x="569" fg:w="2"/><text x="45.8064%" y="511.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="45.6365%" y="485" width="0.0801%" height="15" fill="rgb(219,124,7)" fg:x="570" fg:w="1"/><text x="45.8865%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="45.3963%" y="613" width="0.4003%" height="15" fill="rgb(227,167,8)" fg:x="567" fg:w="5"/><text x="45.6463%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="45.3963%" y="597" width="0.4003%" height="15" fill="rgb(241,37,2)" fg:x="567" fg:w="5"/><text x="45.6463%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.7166%" y="581" width="0.0801%" height="15" fill="rgb(238,134,33)" fg:x="571" fg:w="1"/><text x="45.9666%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="45.7966%" y="613" width="0.0801%" height="15" fill="rgb(248,48,27)" fg:x="572" fg:w="1"/><text x="46.0466%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="45.7966%" y="597" width="0.0801%" height="15" fill="rgb(212,14,16)" fg:x="572" fg:w="1"/><text x="46.0466%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="45.7966%" y="581" width="0.0801%" height="15" fill="rgb(217,205,37)" fg:x="572" fg:w="1"/><text x="46.0466%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="45.7966%" y="565" width="0.0801%" height="15" fill="rgb(233,185,47)" fg:x="572" fg:w="1"/><text x="46.0466%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="45.7966%" y="549" width="0.0801%" height="15" fill="rgb(244,88,8)" fg:x="572" fg:w="1"/><text x="46.0466%" y="559.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (8 samples, 0.64%)</title><rect x="45.3963%" y="645" width="0.6405%" height="15" fill="rgb(213,0,20)" fg:x="567" fg:w="8"/><text x="45.6463%" y="655.50"></text></g><g><title>plugins_core::build::QuickThing::make (8 samples, 0.64%)</title><rect x="45.3963%" y="629" width="0.6405%" height="15" fill="rgb(238,159,36)" fg:x="567" fg:w="8"/><text x="45.6463%" y="639.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="45.8767%" y="613" width="0.1601%" height="15" fill="rgb(253,173,17)" fg:x="573" fg:w="2"/><text x="46.1267%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="45.8767%" y="597" width="0.1601%" height="15" fill="rgb(221,23,28)" fg:x="573" fg:w="2"/><text x="46.1267%" y="607.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="45.8767%" y="581" width="0.1601%" height="15" fill="rgb(218,113,15)" fg:x="573" fg:w="2"/><text x="46.1267%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="45.8767%" y="565" width="0.1601%" height="15" fill="rgb(233,58,3)" fg:x="573" fg:w="2"/><text x="46.1267%" y="575.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="45.8767%" y="549" width="0.1601%" height="15" fill="rgb(250,46,35)" fg:x="573" fg:w="2"/><text x="46.1267%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="45.8767%" y="533" width="0.1601%" height="15" fill="rgb(210,169,11)" fg:x="573" fg:w="2"/><text x="46.1267%" y="543.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="45.9568%" y="517" width="0.0801%" height="15" fill="rgb(246,88,19)" fg:x="574" fg:w="1"/><text x="46.2068%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="45.9568%" y="501" width="0.0801%" height="15" fill="rgb(206,81,49)" fg:x="574" fg:w="1"/><text x="46.2068%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="45.9568%" y="485" width="0.0801%" height="15" fill="rgb(232,144,18)" fg:x="574" fg:w="1"/><text x="46.2068%" y="495.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (479 samples, 38.35%)</title><rect x="7.7662%" y="661" width="38.3507%" height="15" fill="rgb(235,2,27)" fg:x="97" fg:w="479"/><text x="8.0162%" y="671.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare</text></g><g><title>plugins_core::build::BuildSurroundings::route (1 samples, 0.08%)</title><rect x="46.0368%" y="645" width="0.0801%" height="15" fill="rgb(239,157,39)" fg:x="575" fg:w="1"/><text x="46.2868%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.1169%" y="661" width="0.0801%" height="15" fill="rgb(220,11,17)" fg:x="576" fg:w="1"/><text x="46.3669%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="46.1970%" y="661" width="0.0801%" height="15" fill="rgb(243,94,50)" fg:x="577" fg:w="1"/><text x="46.4470%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="46.1970%" y="645" width="0.0801%" height="15" fill="rgb(218,22,0)" fg:x="577" fg:w="1"/><text x="46.4470%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="46.1970%" y="629" width="0.0801%" height="15" fill="rgb(249,70,21)" fg:x="577" fg:w="1"/><text x="46.4470%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="46.1970%" y="613" width="0.0801%" height="15" fill="rgb(245,111,46)" fg:x="577" fg:w="1"/><text x="46.4470%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.1970%" y="597" width="0.0801%" height="15" fill="rgb(244,183,12)" fg:x="577" fg:w="1"/><text x="46.4470%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.32%)</title><rect x="46.2770%" y="645" width="0.3203%" height="15" fill="rgb(207,117,0)" fg:x="578" fg:w="4"/><text x="46.5270%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.32%)</title><rect x="46.2770%" y="629" width="0.3203%" height="15" fill="rgb(206,20,43)" fg:x="578" fg:w="4"/><text x="46.5270%" y="639.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="46.2770%" y="613" width="0.3203%" height="15" fill="rgb(221,104,11)" fg:x="578" fg:w="4"/><text x="46.5270%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="46.2770%" y="597" width="0.3203%" height="15" fill="rgb(254,36,50)" fg:x="578" fg:w="4"/><text x="46.5270%" y="607.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="46.2770%" y="581" width="0.3203%" height="15" fill="rgb(252,17,15)" fg:x="578" fg:w="4"/><text x="46.5270%" y="591.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (4 samples, 0.32%)</title><rect x="46.2770%" y="565" width="0.3203%" height="15" fill="rgb(219,129,43)" fg:x="578" fg:w="4"/><text x="46.5270%" y="575.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.16%)</title><rect x="46.4371%" y="549" width="0.1601%" height="15" fill="rgb(205,34,45)" fg:x="580" fg:w="2"/><text x="46.6871%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="46.5172%" y="533" width="0.0801%" height="15" fill="rgb(251,201,32)" fg:x="581" fg:w="1"/><text x="46.7672%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="46.5172%" y="517" width="0.0801%" height="15" fill="rgb(205,56,0)" fg:x="581" fg:w="1"/><text x="46.7672%" y="527.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="46.5172%" y="501" width="0.0801%" height="15" fill="rgb(211,193,27)" fg:x="581" fg:w="1"/><text x="46.7672%" y="511.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="46.5172%" y="485" width="0.0801%" height="15" fill="rgb(231,100,42)" fg:x="581" fg:w="1"/><text x="46.7672%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="46.5172%" y="469" width="0.0801%" height="15" fill="rgb(245,85,27)" fg:x="581" fg:w="1"/><text x="46.7672%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="46.5172%" y="453" width="0.0801%" height="15" fill="rgb(241,76,24)" fg:x="581" fg:w="1"/><text x="46.7672%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="46.5172%" y="437" width="0.0801%" height="15" fill="rgb(249,157,15)" fg:x="581" fg:w="1"/><text x="46.7672%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="46.5172%" y="421" width="0.0801%" height="15" fill="rgb(222,218,25)" fg:x="581" fg:w="1"/><text x="46.7672%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="46.5172%" y="405" width="0.0801%" height="15" fill="rgb(252,156,52)" fg:x="581" fg:w="1"/><text x="46.7672%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="46.5172%" y="389" width="0.0801%" height="15" fill="rgb(211,185,7)" fg:x="581" fg:w="1"/><text x="46.7672%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="46.5172%" y="373" width="0.0801%" height="15" fill="rgb(234,108,24)" fg:x="581" fg:w="1"/><text x="46.7672%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="46.5973%" y="629" width="0.1601%" height="15" fill="rgb(227,218,2)" fg:x="582" fg:w="2"/><text x="46.8473%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.6773%" y="613" width="0.0801%" height="15" fill="rgb(224,0,36)" fg:x="583" fg:w="1"/><text x="46.9273%" y="623.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="46.7574%" y="629" width="0.0801%" height="15" fill="rgb(233,201,10)" fg:x="584" fg:w="1"/><text x="47.0074%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="46.7574%" y="613" width="0.0801%" height="15" fill="rgb(252,209,14)" fg:x="584" fg:w="1"/><text x="47.0074%" y="623.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="46.7574%" y="597" width="0.0801%" height="15" fill="rgb(205,93,49)" fg:x="584" fg:w="1"/><text x="47.0074%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.7574%" y="581" width="0.0801%" height="15" fill="rgb(234,116,45)" fg:x="584" fg:w="1"/><text x="47.0074%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.7574%" y="565" width="0.0801%" height="15" fill="rgb(248,89,35)" fg:x="584" fg:w="1"/><text x="47.0074%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.7574%" y="549" width="0.0801%" height="15" fill="rgb(233,167,45)" fg:x="584" fg:w="1"/><text x="47.0074%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.7574%" y="533" width="0.0801%" height="15" fill="rgb(248,228,14)" fg:x="584" fg:w="1"/><text x="47.0074%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.7574%" y="517" width="0.0801%" height="15" fill="rgb(246,91,14)" fg:x="584" fg:w="1"/><text x="47.0074%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.7574%" y="501" width="0.0801%" height="15" fill="rgb(227,142,5)" fg:x="584" fg:w="1"/><text x="47.0074%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.7574%" y="485" width="0.0801%" height="15" fill="rgb(221,63,33)" fg:x="584" fg:w="1"/><text x="47.0074%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="46.7574%" y="469" width="0.0801%" height="15" fill="rgb(233,49,0)" fg:x="584" fg:w="1"/><text x="47.0074%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="46.7574%" y="453" width="0.0801%" height="15" fill="rgb(251,115,38)" fg:x="584" fg:w="1"/><text x="47.0074%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="46.7574%" y="437" width="0.0801%" height="15" fill="rgb(231,214,32)" fg:x="584" fg:w="1"/><text x="47.0074%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="46.7574%" y="421" width="0.0801%" height="15" fill="rgb(248,73,46)" fg:x="584" fg:w="1"/><text x="47.0074%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="46.8375%" y="629" width="0.0801%" height="15" fill="rgb(237,156,4)" fg:x="585" fg:w="1"/><text x="47.0875%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.8375%" y="613" width="0.0801%" height="15" fill="rgb(227,132,2)" fg:x="585" fg:w="1"/><text x="47.0875%" y="623.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="46.9175%" y="629" width="0.1601%" height="15" fill="rgb(248,161,9)" fg:x="586" fg:w="2"/><text x="47.1675%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="46.9175%" y="613" width="0.1601%" height="15" fill="rgb(238,77,38)" fg:x="586" fg:w="2"/><text x="47.1675%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="46.9175%" y="597" width="0.1601%" height="15" fill="rgb(222,166,40)" fg:x="586" fg:w="2"/><text x="47.1675%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="46.9175%" y="581" width="0.1601%" height="15" fill="rgb(214,168,45)" fg:x="586" fg:w="2"/><text x="47.1675%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.9976%" y="565" width="0.0801%" height="15" fill="rgb(226,64,37)" fg:x="587" fg:w="1"/><text x="47.2476%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="46.9976%" y="549" width="0.0801%" height="15" fill="rgb(232,210,43)" fg:x="587" fg:w="1"/><text x="47.2476%" y="559.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="46.9976%" y="533" width="0.0801%" height="15" fill="rgb(214,76,33)" fg:x="587" fg:w="1"/><text x="47.2476%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.1577%" y="597" width="0.0801%" height="15" fill="rgb(210,78,5)" fg:x="589" fg:w="1"/><text x="47.4077%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="47.3179%" y="581" width="0.0801%" height="15" fill="rgb(211,107,37)" fg:x="591" fg:w="1"/><text x="47.5679%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.56%)</title><rect x="47.3979%" y="581" width="0.5604%" height="15" fill="rgb(249,67,16)" fg:x="592" fg:w="7"/><text x="47.6479%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="47.4780%" y="565" width="0.4804%" height="15" fill="rgb(222,114,31)" fg:x="593" fg:w="6"/><text x="47.7280%" y="575.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="47.6381%" y="549" width="0.3203%" height="15" fill="rgb(242,118,19)" fg:x="595" fg:w="4"/><text x="47.8881%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="47.7182%" y="533" width="0.2402%" height="15" fill="rgb(223,115,1)" fg:x="596" fg:w="3"/><text x="47.9682%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="47.7182%" y="517" width="0.2402%" height="15" fill="rgb(241,182,54)" fg:x="596" fg:w="3"/><text x="47.9682%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="47.8783%" y="501" width="0.0801%" height="15" fill="rgb(244,166,36)" fg:x="598" fg:w="1"/><text x="48.1283%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="47.8783%" y="485" width="0.0801%" height="15" fill="rgb(241,52,43)" fg:x="598" fg:w="1"/><text x="48.1283%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="47.8783%" y="469" width="0.0801%" height="15" fill="rgb(236,82,9)" fg:x="598" fg:w="1"/><text x="48.1283%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (9 samples, 0.72%)</title><rect x="48.0384%" y="565" width="0.7206%" height="15" fill="rgb(241,119,0)" fg:x="600" fg:w="9"/><text x="48.2884%" y="575.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="48.1986%" y="549" width="0.5604%" height="15" fill="rgb(221,19,22)" fg:x="602" fg:w="7"/><text x="48.4486%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="48.4388%" y="533" width="0.3203%" height="15" fill="rgb(254,144,35)" fg:x="605" fg:w="4"/><text x="48.6888%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="48.4388%" y="517" width="0.3203%" height="15" fill="rgb(246,132,30)" fg:x="605" fg:w="4"/><text x="48.6888%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="48.5989%" y="501" width="0.1601%" height="15" fill="rgb(234,69,28)" fg:x="607" fg:w="2"/><text x="48.8489%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="48.5989%" y="485" width="0.1601%" height="15" fill="rgb(219,106,47)" fg:x="607" fg:w="2"/><text x="48.8489%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="48.6789%" y="469" width="0.0801%" height="15" fill="rgb(218,79,24)" fg:x="608" fg:w="1"/><text x="48.9289%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="48.7590%" y="549" width="0.2402%" height="15" fill="rgb(225,26,21)" fg:x="609" fg:w="3"/><text x="49.0090%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="48.7590%" y="533" width="0.2402%" height="15" fill="rgb(217,68,49)" fg:x="609" fg:w="3"/><text x="49.0090%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="48.8391%" y="517" width="0.1601%" height="15" fill="rgb(220,204,28)" fg:x="610" fg:w="2"/><text x="49.0891%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="48.9191%" y="501" width="0.0801%" height="15" fill="rgb(237,208,43)" fg:x="611" fg:w="1"/><text x="49.1691%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="48.9191%" y="485" width="0.0801%" height="15" fill="rgb(213,97,42)" fg:x="611" fg:w="1"/><text x="49.1691%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="48.9992%" y="549" width="0.2402%" height="15" fill="rgb(238,96,52)" fg:x="612" fg:w="3"/><text x="49.2492%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="49.0793%" y="533" width="0.1601%" height="15" fill="rgb(228,14,13)" fg:x="613" fg:w="2"/><text x="49.3293%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="49.0793%" y="517" width="0.1601%" height="15" fill="rgb(219,123,13)" fg:x="613" fg:w="2"/><text x="49.3293%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.1593%" y="501" width="0.0801%" height="15" fill="rgb(216,144,17)" fg:x="614" fg:w="1"/><text x="49.4093%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="49.2394%" y="533" width="0.1601%" height="15" fill="rgb(230,228,29)" fg:x="615" fg:w="2"/><text x="49.4894%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="49.3195%" y="517" width="0.0801%" height="15" fill="rgb(233,18,5)" fg:x="616" fg:w="1"/><text x="49.5695%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="49.3195%" y="501" width="0.0801%" height="15" fill="rgb(233,197,12)" fg:x="616" fg:w="1"/><text x="49.5695%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="49.3995%" y="517" width="0.1601%" height="15" fill="rgb(234,140,29)" fg:x="617" fg:w="2"/><text x="49.6495%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="49.4796%" y="501" width="0.0801%" height="15" fill="rgb(233,113,19)" fg:x="618" fg:w="1"/><text x="49.7296%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.5596%" y="501" width="0.0801%" height="15" fill="rgb(246,209,13)" fg:x="619" fg:w="1"/><text x="49.8096%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="49.6397%" y="501" width="0.1601%" height="15" fill="rgb(242,79,54)" fg:x="620" fg:w="2"/><text x="49.8897%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="49.7198%" y="485" width="0.0801%" height="15" fill="rgb(219,73,16)" fg:x="621" fg:w="1"/><text x="49.9698%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="49.7198%" y="469" width="0.0801%" height="15" fill="rgb(224,52,10)" fg:x="621" fg:w="1"/><text x="49.9698%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.7198%" y="453" width="0.0801%" height="15" fill="rgb(237,179,5)" fg:x="621" fg:w="1"/><text x="49.9698%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="49.3995%" y="533" width="0.5604%" height="15" fill="rgb(231,20,6)" fg:x="617" fg:w="7"/><text x="49.6495%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="49.5596%" y="517" width="0.4003%" height="15" fill="rgb(253,171,45)" fg:x="619" fg:w="5"/><text x="49.8096%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="49.7998%" y="501" width="0.1601%" height="15" fill="rgb(230,75,49)" fg:x="622" fg:w="2"/><text x="50.0498%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="49.7998%" y="485" width="0.1601%" height="15" fill="rgb(216,83,46)" fg:x="622" fg:w="2"/><text x="50.0498%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="49.8799%" y="469" width="0.0801%" height="15" fill="rgb(236,56,9)" fg:x="623" fg:w="1"/><text x="50.1299%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.8799%" y="453" width="0.0801%" height="15" fill="rgb(215,28,34)" fg:x="623" fg:w="1"/><text x="50.1299%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.36%)</title><rect x="48.7590%" y="565" width="1.3611%" height="15" fill="rgb(230,222,20)" fg:x="609" fg:w="17"/><text x="49.0090%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="49.2394%" y="549" width="0.8807%" height="15" fill="rgb(235,209,51)" fg:x="615" fg:w="11"/><text x="49.4894%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="49.9600%" y="533" width="0.1601%" height="15" fill="rgb(235,167,1)" fg:x="624" fg:w="2"/><text x="50.2100%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="49.9600%" y="517" width="0.1601%" height="15" fill="rgb(248,220,0)" fg:x="624" fg:w="2"/><text x="50.2100%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="49.9600%" y="501" width="0.1601%" height="15" fill="rgb(239,0,18)" fg:x="624" fg:w="2"/><text x="50.2100%" y="511.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="50.2002%" y="485" width="0.0801%" height="15" fill="rgb(229,179,11)" fg:x="627" fg:w="1"/><text x="50.4502%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="50.2002%" y="533" width="0.3203%" height="15" fill="rgb(226,116,53)" fg:x="627" fg:w="4"/><text x="50.4502%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="50.2002%" y="517" width="0.3203%" height="15" fill="rgb(218,1,49)" fg:x="627" fg:w="4"/><text x="50.4502%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="50.2002%" y="501" width="0.3203%" height="15" fill="rgb(208,184,47)" fg:x="627" fg:w="4"/><text x="50.4502%" y="511.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="50.2802%" y="485" width="0.2402%" height="15" fill="rgb(238,174,3)" fg:x="628" fg:w="3"/><text x="50.5302%" y="495.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (42 samples, 3.36%)</title><rect x="47.2378%" y="597" width="3.3627%" height="15" fill="rgb(247,188,6)" fg:x="590" fg:w="42"/><text x="47.4878%" y="607.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (33 samples, 2.64%)</title><rect x="47.9584%" y="581" width="2.6421%" height="15" fill="rgb(211,165,46)" fg:x="599" fg:w="33"/><text x="48.2084%" y="591.50">se..</text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="50.1201%" y="565" width="0.4804%" height="15" fill="rgb(222,190,10)" fg:x="626" fg:w="6"/><text x="50.3701%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="50.2002%" y="549" width="0.4003%" height="15" fill="rgb(206,185,3)" fg:x="627" fg:w="5"/><text x="50.4502%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="50.5204%" y="533" width="0.0801%" height="15" fill="rgb(244,125,37)" fg:x="631" fg:w="1"/><text x="50.7704%" y="543.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="50.6005%" y="565" width="0.2402%" height="15" fill="rgb(211,43,7)" fg:x="632" fg:w="3"/><text x="50.8505%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="50.8407%" y="565" width="0.1601%" height="15" fill="rgb(250,41,42)" fg:x="635" fg:w="2"/><text x="51.0907%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="51.2410%" y="549" width="0.1601%" height="15" fill="rgb(254,54,42)" fg:x="640" fg:w="2"/><text x="51.4910%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.40%)</title><rect x="51.4011%" y="549" width="0.4003%" height="15" fill="rgb(213,71,43)" fg:x="642" fg:w="5"/><text x="51.6511%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="51.6413%" y="533" width="0.1601%" height="15" fill="rgb(249,3,44)" fg:x="645" fg:w="2"/><text x="51.8913%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="51.8014%" y="533" width="0.1601%" height="15" fill="rgb(229,80,41)" fg:x="647" fg:w="2"/><text x="52.0514%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.9616%" y="517" width="0.0801%" height="15" fill="rgb(231,25,28)" fg:x="649" fg:w="1"/><text x="52.2116%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.0416%" y="517" width="0.0801%" height="15" fill="rgb(208,79,48)" fg:x="650" fg:w="1"/><text x="52.2916%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.0416%" y="501" width="0.0801%" height="15" fill="rgb(207,196,38)" fg:x="650" fg:w="1"/><text x="52.2916%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="52.1217%" y="517" width="0.1601%" height="15" fill="rgb(228,105,49)" fg:x="651" fg:w="2"/><text x="52.3717%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="52.1217%" y="501" width="0.1601%" height="15" fill="rgb(237,99,15)" fg:x="651" fg:w="2"/><text x="52.3717%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.2018%" y="485" width="0.0801%" height="15" fill="rgb(224,207,46)" fg:x="652" fg:w="1"/><text x="52.4518%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.3619%" y="501" width="0.0801%" height="15" fill="rgb(249,117,50)" fg:x="654" fg:w="1"/><text x="52.6119%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.3619%" y="485" width="0.0801%" height="15" fill="rgb(248,17,13)" fg:x="654" fg:w="1"/><text x="52.6119%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.5220%" y="485" width="0.0801%" height="15" fill="rgb(228,187,36)" fg:x="656" fg:w="1"/><text x="52.7720%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.5220%" y="469" width="0.0801%" height="15" fill="rgb(234,132,20)" fg:x="656" fg:w="1"/><text x="52.7720%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.6021%" y="469" width="0.0801%" height="15" fill="rgb(209,170,46)" fg:x="657" fg:w="1"/><text x="52.8521%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (27 samples, 2.16%)</title><rect x="50.6005%" y="597" width="2.1617%" height="15" fill="rgb(237,23,19)" fg:x="632" fg:w="27"/><text x="50.8505%" y="607.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (27 samples, 2.16%)</title><rect x="50.6005%" y="581" width="2.1617%" height="15" fill="rgb(227,21,26)" fg:x="632" fg:w="27"/><text x="50.8505%" y="591.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (22 samples, 1.76%)</title><rect x="51.0008%" y="565" width="1.7614%" height="15" fill="rgb(222,220,48)" fg:x="637" fg:w="22"/><text x="51.2508%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="51.8014%" y="549" width="0.9608%" height="15" fill="rgb(214,9,16)" fg:x="647" fg:w="12"/><text x="52.0514%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="51.9616%" y="533" width="0.8006%" height="15" fill="rgb(209,73,30)" fg:x="649" fg:w="10"/><text x="52.2116%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="52.2818%" y="517" width="0.4804%" height="15" fill="rgb(207,20,33)" fg:x="653" fg:w="6"/><text x="52.5318%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="52.4420%" y="501" width="0.3203%" height="15" fill="rgb(219,153,12)" fg:x="655" fg:w="4"/><text x="52.6920%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="52.6021%" y="485" width="0.1601%" height="15" fill="rgb(235,97,25)" fg:x="657" fg:w="2"/><text x="52.8521%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.6821%" y="469" width="0.0801%" height="15" fill="rgb(244,30,34)" fg:x="658" fg:w="1"/><text x="52.9321%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.6821%" y="453" width="0.0801%" height="15" fill="rgb(214,106,45)" fg:x="658" fg:w="1"/><text x="52.9321%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="52.7622%" y="533" width="0.1601%" height="15" fill="rgb(226,41,9)" fg:x="659" fg:w="2"/><text x="53.0122%" y="543.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="53.1625%" y="517" width="0.3203%" height="15" fill="rgb(253,139,29)" fg:x="664" fg:w="4"/><text x="53.4125%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.4828%" y="517" width="0.0801%" height="15" fill="rgb(213,205,39)" fg:x="668" fg:w="1"/><text x="53.7328%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.4828%" y="501" width="0.0801%" height="15" fill="rgb(209,27,10)" fg:x="668" fg:w="1"/><text x="53.7328%" y="511.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="53.5629%" y="501" width="0.2402%" height="15" fill="rgb(249,142,16)" fg:x="669" fg:w="3"/><text x="53.8129%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="53.8831%" y="485" width="0.1601%" height="15" fill="rgb(242,65,12)" fg:x="673" fg:w="2"/><text x="54.1331%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.1233%" y="453" width="0.0801%" height="15" fill="rgb(232,48,10)" fg:x="676" fg:w="1"/><text x="54.3733%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.24%)</title><rect x="54.0432%" y="485" width="0.2402%" height="15" fill="rgb(253,67,19)" fg:x="675" fg:w="3"/><text x="54.2932%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="54.0432%" y="469" width="0.2402%" height="15" fill="rgb(227,93,29)" fg:x="675" fg:w="3"/><text x="54.2932%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.2034%" y="453" width="0.0801%" height="15" fill="rgb(226,189,53)" fg:x="677" fg:w="1"/><text x="54.4534%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="54.2834%" y="469" width="0.1601%" height="15" fill="rgb(223,224,1)" fg:x="678" fg:w="2"/><text x="54.5334%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.3635%" y="453" width="0.0801%" height="15" fill="rgb(221,84,32)" fg:x="679" fg:w="1"/><text x="54.6135%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.4436%" y="453" width="0.0801%" height="15" fill="rgb(214,189,28)" fg:x="680" fg:w="1"/><text x="54.6936%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (23 samples, 1.84%)</title><rect x="52.7622%" y="565" width="1.8415%" height="15" fill="rgb(234,7,52)" fg:x="659" fg:w="23"/><text x="53.0122%" y="575.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (23 samples, 1.84%)</title><rect x="52.7622%" y="549" width="1.8415%" height="15" fill="rgb(249,73,31)" fg:x="659" fg:w="23"/><text x="53.0122%" y="559.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (21 samples, 1.68%)</title><rect x="52.9223%" y="533" width="1.6813%" height="15" fill="rgb(253,153,41)" fg:x="661" fg:w="21"/><text x="53.1723%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="53.5629%" y="517" width="1.0408%" height="15" fill="rgb(249,52,34)" fg:x="669" fg:w="13"/><text x="53.8129%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="53.8030%" y="501" width="0.8006%" height="15" fill="rgb(236,177,47)" fg:x="672" fg:w="10"/><text x="54.0530%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="54.2834%" y="485" width="0.3203%" height="15" fill="rgb(252,185,45)" fg:x="678" fg:w="4"/><text x="54.5334%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="54.4436%" y="469" width="0.1601%" height="15" fill="rgb(251,15,30)" fg:x="680" fg:w="2"/><text x="54.6936%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="54.5236%" y="453" width="0.0801%" height="15" fill="rgb(233,31,4)" fg:x="681" fg:w="1"/><text x="54.7736%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.5236%" y="437" width="0.0801%" height="15" fill="rgb(254,44,24)" fg:x="681" fg:w="1"/><text x="54.7736%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.5236%" y="421" width="0.0801%" height="15" fill="rgb(218,54,1)" fg:x="681" fg:w="1"/><text x="54.7736%" y="431.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (25 samples, 2.00%)</title><rect x="52.7622%" y="581" width="2.0016%" height="15" fill="rgb(243,209,39)" fg:x="659" fg:w="25"/><text x="53.0122%" y="591.50">&lt;..</text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="54.6037%" y="565" width="0.1601%" height="15" fill="rgb(206,75,33)" fg:x="682" fg:w="2"/><text x="54.8537%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.1641%" y="549" width="0.0801%" height="15" fill="rgb(223,108,18)" fg:x="689" fg:w="1"/><text x="55.4141%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.5645%" y="517" width="0.0801%" height="15" fill="rgb(244,89,31)" fg:x="694" fg:w="1"/><text x="55.8145%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.56%)</title><rect x="55.2442%" y="549" width="0.5604%" height="15" fill="rgb(222,167,27)" fg:x="690" fg:w="7"/><text x="55.4942%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="55.4844%" y="533" width="0.3203%" height="15" fill="rgb(247,41,16)" fg:x="693" fg:w="4"/><text x="55.7344%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="55.6445%" y="517" width="0.1601%" height="15" fill="rgb(233,168,40)" fg:x="695" fg:w="2"/><text x="55.8945%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="55.8046%" y="549" width="0.1601%" height="15" fill="rgb(205,211,8)" fg:x="697" fg:w="2"/><text x="56.0546%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="55.8847%" y="533" width="0.0801%" height="15" fill="rgb(238,105,11)" fg:x="698" fg:w="1"/><text x="56.1347%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="55.9648%" y="533" width="0.0801%" height="15" fill="rgb(223,142,52)" fg:x="699" fg:w="1"/><text x="56.2148%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="55.9648%" y="549" width="0.1601%" height="15" fill="rgb(238,51,33)" fg:x="699" fg:w="2"/><text x="56.2148%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="56.0448%" y="533" width="0.0801%" height="15" fill="rgb(231,188,43)" fg:x="700" fg:w="1"/><text x="56.2948%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.0448%" y="517" width="0.0801%" height="15" fill="rgb(216,92,17)" fg:x="700" fg:w="1"/><text x="56.2948%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.2050%" y="517" width="0.1601%" height="15" fill="rgb(228,2,40)" fg:x="702" fg:w="2"/><text x="56.4550%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (6 samples, 0.48%)</title><rect x="56.1249%" y="549" width="0.4804%" height="15" fill="rgb(226,73,15)" fg:x="701" fg:w="6"/><text x="56.3749%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="56.1249%" y="533" width="0.4804%" height="15" fill="rgb(227,66,46)" fg:x="701" fg:w="6"/><text x="56.3749%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="56.3651%" y="517" width="0.2402%" height="15" fill="rgb(209,71,6)" fg:x="704" fg:w="3"/><text x="56.6151%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.5252%" y="501" width="0.0801%" height="15" fill="rgb(246,100,25)" fg:x="706" fg:w="1"/><text x="56.7752%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="56.5252%" y="485" width="0.0801%" height="15" fill="rgb(248,185,27)" fg:x="706" fg:w="1"/><text x="56.7752%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="57.0056%" y="517" width="0.1601%" height="15" fill="rgb(225,118,47)" fg:x="712" fg:w="2"/><text x="57.2556%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="57.2458%" y="501" width="0.2402%" height="15" fill="rgb(220,185,44)" fg:x="715" fg:w="3"/><text x="57.4958%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="57.2458%" y="485" width="0.2402%" height="15" fill="rgb(227,95,24)" fg:x="715" fg:w="3"/><text x="57.4958%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.3259%" y="469" width="0.1601%" height="15" fill="rgb(252,84,24)" fg:x="716" fg:w="2"/><text x="57.5759%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="57.4860%" y="485" width="0.0801%" height="15" fill="rgb(240,34,44)" fg:x="718" fg:w="1"/><text x="57.7360%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (7 samples, 0.56%)</title><rect x="57.4860%" y="501" width="0.5604%" height="15" fill="rgb(209,72,54)" fg:x="718" fg:w="7"/><text x="57.7360%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="57.5661%" y="485" width="0.4804%" height="15" fill="rgb(226,19,45)" fg:x="719" fg:w="6"/><text x="57.8161%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="57.7262%" y="469" width="0.3203%" height="15" fill="rgb(246,7,45)" fg:x="721" fg:w="4"/><text x="57.9762%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.8863%" y="453" width="0.1601%" height="15" fill="rgb(225,45,2)" fg:x="723" fg:w="2"/><text x="58.1363%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.8863%" y="437" width="0.1601%" height="15" fill="rgb(221,80,29)" fg:x="723" fg:w="2"/><text x="58.1363%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.2066%" y="469" width="0.1601%" height="15" fill="rgb(228,11,19)" fg:x="727" fg:w="2"/><text x="58.4566%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.2866%" y="453" width="0.0801%" height="15" fill="rgb(243,17,21)" fg:x="728" fg:w="1"/><text x="58.5366%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.2866%" y="437" width="0.0801%" height="15" fill="rgb(243,88,8)" fg:x="728" fg:w="1"/><text x="58.5366%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.5268%" y="437" width="0.0801%" height="15" fill="rgb(214,17,9)" fg:x="731" fg:w="1"/><text x="58.7768%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.6069%" y="405" width="0.1601%" height="15" fill="rgb(232,169,15)" fg:x="732" fg:w="2"/><text x="58.8569%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="58.8471%" y="373" width="0.4003%" height="15" fill="rgb(232,86,53)" fg:x="735" fg:w="5"/><text x="59.0971%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="58.8471%" y="357" width="0.4003%" height="15" fill="rgb(222,100,4)" fg:x="735" fg:w="5"/><text x="59.0971%" y="367.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="58.9271%" y="341" width="0.3203%" height="15" fill="rgb(253,151,38)" fg:x="736" fg:w="4"/><text x="59.1771%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="58.8471%" y="389" width="0.5604%" height="15" fill="rgb(238,215,29)" fg:x="735" fg:w="7"/><text x="59.0971%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="59.2474%" y="373" width="0.1601%" height="15" fill="rgb(205,128,53)" fg:x="740" fg:w="2"/><text x="59.4974%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="59.3275%" y="357" width="0.0801%" height="15" fill="rgb(248,183,14)" fg:x="741" fg:w="1"/><text x="59.5775%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.96%)</title><rect x="58.6069%" y="421" width="0.9608%" height="15" fill="rgb(244,172,35)" fg:x="732" fg:w="12"/><text x="58.8569%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="58.7670%" y="405" width="0.8006%" height="15" fill="rgb(234,93,19)" fg:x="734" fg:w="10"/><text x="59.0170%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="59.4075%" y="389" width="0.1601%" height="15" fill="rgb(227,109,7)" fg:x="742" fg:w="2"/><text x="59.6575%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (19 samples, 1.52%)</title><rect x="58.1265%" y="485" width="1.5212%" height="15" fill="rgb(233,136,54)" fg:x="726" fg:w="19"/><text x="58.3765%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 1.28%)</title><rect x="58.3667%" y="469" width="1.2810%" height="15" fill="rgb(233,19,40)" fg:x="729" fg:w="16"/><text x="58.6167%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.12%)</title><rect x="58.5268%" y="453" width="1.1209%" height="15" fill="rgb(247,41,18)" fg:x="731" fg:w="14"/><text x="58.7768%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.04%)</title><rect x="58.6069%" y="437" width="1.0408%" height="15" fill="rgb(220,34,34)" fg:x="732" fg:w="13"/><text x="58.8569%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.5677%" y="421" width="0.0801%" height="15" fill="rgb(222,135,32)" fg:x="744" fg:w="1"/><text x="59.8177%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (32 samples, 2.56%)</title><rect x="57.1657%" y="517" width="2.5620%" height="15" fill="rgb(214,80,19)" fg:x="714" fg:w="32"/><text x="57.4157%" y="527.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (21 samples, 1.68%)</title><rect x="58.0464%" y="501" width="1.6813%" height="15" fill="rgb(234,54,46)" fg:x="725" fg:w="21"/><text x="58.2964%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.6477%" y="485" width="0.0801%" height="15" fill="rgb(251,48,23)" fg:x="745" fg:w="1"/><text x="59.8977%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (38 samples, 3.04%)</title><rect x="56.8455%" y="533" width="3.0424%" height="15" fill="rgb(254,109,52)" fg:x="710" fg:w="38"/><text x="57.0955%" y="543.50">&lt;se..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="59.7278%" y="517" width="0.1601%" height="15" fill="rgb(240,186,19)" fg:x="746" fg:w="2"/><text x="59.9778%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="59.7278%" y="501" width="0.1601%" height="15" fill="rgb(246,187,17)" fg:x="746" fg:w="2"/><text x="59.9778%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (63 samples, 5.04%)</title><rect x="54.9239%" y="565" width="5.0440%" height="15" fill="rgb(212,21,5)" fg:x="686" fg:w="63"/><text x="55.1739%" y="575.50">&lt;serde..</text></g><g><title>serde::ser::Serializer::collect_map (42 samples, 3.36%)</title><rect x="56.6053%" y="549" width="3.3627%" height="15" fill="rgb(225,185,18)" fg:x="707" fg:w="42"/><text x="56.8553%" y="559.50">ser..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.8879%" y="533" width="0.0801%" height="15" fill="rgb(245,114,17)" fg:x="748" fg:w="1"/><text x="60.1379%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.8879%" y="517" width="0.0801%" height="15" fill="rgb(223,164,24)" fg:x="748" fg:w="1"/><text x="60.1379%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="59.8879%" y="501" width="0.0801%" height="15" fill="rgb(211,228,3)" fg:x="748" fg:w="1"/><text x="60.1379%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (66 samples, 5.28%)</title><rect x="54.7638%" y="581" width="5.2842%" height="15" fill="rgb(223,16,38)" fg:x="684" fg:w="66"/><text x="55.0138%" y="591.50">kernel..</text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="59.9680%" y="565" width="0.0801%" height="15" fill="rgb(207,31,54)" fg:x="749" fg:w="1"/><text x="60.2180%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.6085%" y="405" width="0.0801%" height="15" fill="rgb(220,39,11)" fg:x="757" fg:w="1"/><text x="60.8585%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="60.6085%" y="389" width="0.0801%" height="15" fill="rgb(235,185,0)" fg:x="757" fg:w="1"/><text x="60.8585%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="60.5284%" y="437" width="0.2402%" height="15" fill="rgb(249,39,18)" fg:x="756" fg:w="3"/><text x="60.7784%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="60.5284%" y="421" width="0.2402%" height="15" fill="rgb(240,110,33)" fg:x="756" fg:w="3"/><text x="60.7784%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.6886%" y="405" width="0.0801%" height="15" fill="rgb(210,92,42)" fg:x="758" fg:w="1"/><text x="60.9386%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="60.6886%" y="389" width="0.0801%" height="15" fill="rgb(218,215,28)" fg:x="758" fg:w="1"/><text x="60.9386%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="60.6886%" y="373" width="0.0801%" height="15" fill="rgb(238,215,36)" fg:x="758" fg:w="1"/><text x="60.9386%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="60.9287%" y="405" width="0.0801%" height="15" fill="rgb(220,31,10)" fg:x="761" fg:w="1"/><text x="61.1787%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="61.0889%" y="341" width="0.0801%" height="15" fill="rgb(212,93,14)" fg:x="763" fg:w="1"/><text x="61.3389%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="61.0889%" y="357" width="0.1601%" height="15" fill="rgb(254,207,2)" fg:x="763" fg:w="2"/><text x="61.3389%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.1689%" y="341" width="0.0801%" height="15" fill="rgb(205,57,44)" fg:x="764" fg:w="1"/><text x="61.4189%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="61.2490%" y="357" width="0.1601%" height="15" fill="rgb(226,151,19)" fg:x="765" fg:w="2"/><text x="61.4990%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.3291%" y="341" width="0.0801%" height="15" fill="rgb(230,72,30)" fg:x="766" fg:w="1"/><text x="61.5791%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="60.7686%" y="421" width="0.8006%" height="15" fill="rgb(244,0,8)" fg:x="759" fg:w="10"/><text x="61.0186%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="61.0088%" y="405" width="0.5604%" height="15" fill="rgb(230,192,6)" fg:x="762" fg:w="7"/><text x="61.2588%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="61.0889%" y="389" width="0.4804%" height="15" fill="rgb(233,207,13)" fg:x="763" fg:w="6"/><text x="61.3389%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="61.0889%" y="373" width="0.4804%" height="15" fill="rgb(206,227,7)" fg:x="763" fg:w="6"/><text x="61.3389%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="61.4091%" y="357" width="0.1601%" height="15" fill="rgb(213,217,25)" fg:x="767" fg:w="2"/><text x="61.6591%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="61.4091%" y="341" width="0.1601%" height="15" fill="rgb(249,75,4)" fg:x="767" fg:w="2"/><text x="61.6591%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.4892%" y="325" width="0.0801%" height="15" fill="rgb(225,114,18)" fg:x="768" fg:w="1"/><text x="61.7392%" y="335.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="61.5693%" y="405" width="0.0801%" height="15" fill="rgb(211,162,40)" fg:x="769" fg:w="1"/><text x="61.8193%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 1.28%)</title><rect x="60.4484%" y="453" width="1.2810%" height="15" fill="rgb(206,49,29)" fg:x="755" fg:w="16"/><text x="60.6984%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="60.7686%" y="437" width="0.9608%" height="15" fill="rgb(244,8,6)" fg:x="759" fg:w="12"/><text x="61.0186%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="61.5693%" y="421" width="0.1601%" height="15" fill="rgb(231,194,28)" fg:x="769" fg:w="2"/><text x="61.8193%" y="431.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="61.6493%" y="405" width="0.0801%" height="15" fill="rgb(210,69,5)" fg:x="770" fg:w="1"/><text x="61.8993%" y="415.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="61.6493%" y="389" width="0.0801%" height="15" fill="rgb(216,186,12)" fg:x="770" fg:w="1"/><text x="61.8993%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.44%)</title><rect x="60.3683%" y="485" width="1.4412%" height="15" fill="rgb(238,61,15)" fg:x="754" fg:w="18"/><text x="60.6183%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 1.36%)</title><rect x="60.4484%" y="469" width="1.3611%" height="15" fill="rgb(226,104,1)" fg:x="755" fg:w="17"/><text x="60.6984%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.7294%" y="453" width="0.0801%" height="15" fill="rgb(229,128,15)" fg:x="771" fg:w="1"/><text x="61.9794%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.7294%" y="437" width="0.0801%" height="15" fill="rgb(247,110,15)" fg:x="771" fg:w="1"/><text x="61.9794%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.7294%" y="421" width="0.0801%" height="15" fill="rgb(210,74,48)" fg:x="771" fg:w="1"/><text x="61.9794%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.8094%" y="485" width="0.0801%" height="15" fill="rgb(246,121,10)" fg:x="772" fg:w="1"/><text x="62.0594%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="61.8094%" y="469" width="0.0801%" height="15" fill="rgb(214,156,37)" fg:x="772" fg:w="1"/><text x="62.0594%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (25 samples, 2.00%)</title><rect x="60.0480%" y="517" width="2.0016%" height="15" fill="rgb(214,210,34)" fg:x="750" fg:w="25"/><text x="60.2980%" y="527.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (25 samples, 2.00%)</title><rect x="60.0480%" y="501" width="2.0016%" height="15" fill="rgb(237,93,35)" fg:x="750" fg:w="25"/><text x="60.2980%" y="511.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="61.8895%" y="485" width="0.1601%" height="15" fill="rgb(206,36,8)" fg:x="773" fg:w="2"/><text x="62.1395%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="61.8895%" y="469" width="0.1601%" height="15" fill="rgb(208,151,12)" fg:x="773" fg:w="2"/><text x="62.1395%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="62.0496%" y="517" width="0.0801%" height="15" fill="rgb(225,133,52)" fg:x="775" fg:w="1"/><text x="62.2996%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="62.0496%" y="501" width="0.0801%" height="15" fill="rgb(231,71,53)" fg:x="775" fg:w="1"/><text x="62.2996%" y="511.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (189 samples, 15.13%)</title><rect x="47.0777%" y="629" width="15.1321%" height="15" fill="rgb(243,76,21)" fg:x="588" fg:w="189"/><text x="47.3277%" y="639.50">engine::internal::Entit..</text></g><g><title>engine::session::SavesEntities::check_for_changes (189 samples, 15.13%)</title><rect x="47.0777%" y="613" width="15.1321%" height="15" fill="rgb(252,144,3)" fg:x="588" fg:w="189"/><text x="47.3277%" y="623.50">engine::session::SavesE..</text></g><g><title>kernel::model::any_entity_changes (118 samples, 9.45%)</title><rect x="52.7622%" y="597" width="9.4476%" height="15" fill="rgb(231,199,10)" fg:x="659" fg:w="118"/><text x="53.0122%" y="607.50">kernel::model:..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (27 samples, 2.16%)</title><rect x="60.0480%" y="581" width="2.1617%" height="15" fill="rgb(215,18,11)" fg:x="750" fg:w="27"/><text x="60.2980%" y="591.50">s..</text></g><g><title>serde_json::de::from_trait (27 samples, 2.16%)</title><rect x="60.0480%" y="565" width="2.1617%" height="15" fill="rgb(241,65,24)" fg:x="750" fg:w="27"/><text x="60.2980%" y="575.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (27 samples, 2.16%)</title><rect x="60.0480%" y="549" width="2.1617%" height="15" fill="rgb(251,192,38)" fg:x="750" fg:w="27"/><text x="60.2980%" y="559.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (27 samples, 2.16%)</title><rect x="60.0480%" y="533" width="2.1617%" height="15" fill="rgb(205,9,35)" fg:x="750" fg:w="27"/><text x="60.2980%" y="543.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.1297%" y="517" width="0.0801%" height="15" fill="rgb(229,225,49)" fg:x="776" fg:w="1"/><text x="62.3797%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.2098%" y="469" width="0.0801%" height="15" fill="rgb(207,125,39)" fg:x="777" fg:w="1"/><text x="62.4598%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.2098%" y="453" width="0.0801%" height="15" fill="rgb(222,78,19)" fg:x="777" fg:w="1"/><text x="62.4598%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="62.2098%" y="437" width="0.0801%" height="15" fill="rgb(248,207,20)" fg:x="777" fg:w="1"/><text x="62.4598%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="62.2098%" y="421" width="0.0801%" height="15" fill="rgb(205,103,49)" fg:x="777" fg:w="1"/><text x="62.4598%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="62.2098%" y="405" width="0.0801%" height="15" fill="rgb(216,42,28)" fg:x="777" fg:w="1"/><text x="62.4598%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="62.2098%" y="389" width="0.0801%" height="15" fill="rgb(213,205,53)" fg:x="777" fg:w="1"/><text x="62.4598%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="62.2098%" y="373" width="0.0801%" height="15" fill="rgb(239,140,53)" fg:x="777" fg:w="1"/><text x="62.4598%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="62.2098%" y="357" width="0.0801%" height="15" fill="rgb(248,95,9)" fg:x="777" fg:w="1"/><text x="62.4598%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="62.2098%" y="341" width="0.0801%" height="15" fill="rgb(254,58,47)" fg:x="777" fg:w="1"/><text x="62.4598%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="62.2098%" y="325" width="0.0801%" height="15" fill="rgb(234,227,14)" fg:x="777" fg:w="1"/><text x="62.4598%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="62.2098%" y="309" width="0.0801%" height="15" fill="rgb(205,192,45)" fg:x="777" fg:w="1"/><text x="62.4598%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.2098%" y="293" width="0.0801%" height="15" fill="rgb(253,187,31)" fg:x="777" fg:w="1"/><text x="62.4598%" y="303.50"></text></g><g><title>engine::session::Session::save_entity_changes (197 samples, 15.77%)</title><rect x="46.5973%" y="645" width="15.7726%" height="15" fill="rgb(222,6,32)" fg:x="582" fg:w="197"/><text x="46.8473%" y="655.50">engine::session::Session..</text></g><g><title>engine::session::Session::world (2 samples, 0.16%)</title><rect x="62.2098%" y="629" width="0.1601%" height="15" fill="rgb(249,190,19)" fg:x="777" fg:w="2"/><text x="62.4598%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="62.2098%" y="613" width="0.1601%" height="15" fill="rgb(251,28,20)" fg:x="777" fg:w="2"/><text x="62.4598%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="62.2098%" y="597" width="0.1601%" height="15" fill="rgb(210,223,40)" fg:x="777" fg:w="2"/><text x="62.4598%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="62.2098%" y="581" width="0.1601%" height="15" fill="rgb(216,137,22)" fg:x="777" fg:w="2"/><text x="62.4598%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="62.2098%" y="565" width="0.1601%" height="15" fill="rgb(247,39,34)" fg:x="777" fg:w="2"/><text x="62.4598%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="62.2098%" y="549" width="0.1601%" height="15" fill="rgb(239,43,50)" fg:x="777" fg:w="2"/><text x="62.4598%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="62.2098%" y="533" width="0.1601%" height="15" fill="rgb(241,212,9)" fg:x="777" fg:w="2"/><text x="62.4598%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="62.2098%" y="517" width="0.1601%" height="15" fill="rgb(205,8,2)" fg:x="777" fg:w="2"/><text x="62.4598%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="62.2098%" y="501" width="0.1601%" height="15" fill="rgb(217,173,54)" fg:x="777" fg:w="2"/><text x="62.4598%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="62.2098%" y="485" width="0.1601%" height="15" fill="rgb(208,149,52)" fg:x="777" fg:w="2"/><text x="62.4598%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="62.2898%" y="469" width="0.0801%" height="15" fill="rgb(239,99,40)" fg:x="778" fg:w="1"/><text x="62.5398%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.2898%" y="453" width="0.0801%" height="15" fill="rgb(233,214,26)" fg:x="778" fg:w="1"/><text x="62.5398%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.2898%" y="437" width="0.0801%" height="15" fill="rgb(231,225,37)" fg:x="778" fg:w="1"/><text x="62.5398%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="62.2898%" y="421" width="0.0801%" height="15" fill="rgb(252,55,35)" fg:x="778" fg:w="1"/><text x="62.5398%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="62.2898%" y="405" width="0.0801%" height="15" fill="rgb(239,43,18)" fg:x="778" fg:w="1"/><text x="62.5398%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="62.2898%" y="389" width="0.0801%" height="15" fill="rgb(251,125,49)" fg:x="778" fg:w="1"/><text x="62.5398%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="62.2898%" y="373" width="0.0801%" height="15" fill="rgb(212,83,54)" fg:x="778" fg:w="1"/><text x="62.5398%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="62.2898%" y="357" width="0.0801%" height="15" fill="rgb(250,75,6)" fg:x="778" fg:w="1"/><text x="62.5398%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="62.2898%" y="341" width="0.0801%" height="15" fill="rgb(252,36,40)" fg:x="778" fg:w="1"/><text x="62.5398%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="62.2898%" y="325" width="0.0801%" height="15" fill="rgb(230,91,51)" fg:x="778" fg:w="1"/><text x="62.5398%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="62.2898%" y="309" width="0.0801%" height="15" fill="rgb(212,92,28)" fg:x="778" fg:w="1"/><text x="62.5398%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="62.2898%" y="293" width="0.0801%" height="15" fill="rgb(227,13,22)" fg:x="778" fg:w="1"/><text x="62.5398%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="62.2898%" y="277" width="0.0801%" height="15" fill="rgb(239,204,32)" fg:x="778" fg:w="1"/><text x="62.5398%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="62.2898%" y="261" width="0.0801%" height="15" fill="rgb(228,49,41)" fg:x="778" fg:w="1"/><text x="62.5398%" y="271.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="62.2898%" y="245" width="0.0801%" height="15" fill="rgb(206,95,6)" fg:x="778" fg:w="1"/><text x="62.5398%" y="255.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="62.2898%" y="229" width="0.0801%" height="15" fill="rgb(251,20,14)" fg:x="778" fg:w="1"/><text x="62.5398%" y="239.50"></text></g><g><title>engine::session::Session::close (202 samples, 16.17%)</title><rect x="46.2770%" y="661" width="16.1729%" height="15" fill="rgb(214,99,28)" fg:x="578" fg:w="202"/><text x="46.5270%" y="671.50">engine::session::Session:..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="62.3699%" y="645" width="0.0801%" height="15" fill="rgb(239,122,54)" fg:x="779" fg:w="1"/><text x="62.6199%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="62.4500%" y="613" width="0.0801%" height="15" fill="rgb(218,217,46)" fg:x="780" fg:w="1"/><text x="62.7000%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.4500%" y="597" width="0.0801%" height="15" fill="rgb(249,106,28)" fg:x="780" fg:w="1"/><text x="62.7000%" y="607.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="62.6101%" y="565" width="0.0801%" height="15" fill="rgb(250,158,18)" fg:x="782" fg:w="1"/><text x="62.8601%" y="575.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="62.6101%" y="549" width="0.0801%" height="15" fill="rgb(226,137,29)" fg:x="782" fg:w="1"/><text x="62.8601%" y="559.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="62.6101%" y="533" width="0.0801%" height="15" fill="rgb(210,188,1)" fg:x="782" fg:w="1"/><text x="62.8601%" y="543.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="62.6101%" y="517" width="0.0801%" height="15" fill="rgb(227,84,42)" fg:x="782" fg:w="1"/><text x="62.8601%" y="527.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="63.0905%" y="501" width="0.2402%" height="15" fill="rgb(222,147,48)" fg:x="788" fg:w="3"/><text x="63.3405%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="63.3307%" y="501" width="0.2402%" height="15" fill="rgb(241,150,43)" fg:x="791" fg:w="3"/><text x="63.5807%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="63.4107%" y="485" width="0.1601%" height="15" fill="rgb(206,139,52)" fg:x="792" fg:w="2"/><text x="63.6607%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.8110%" y="453" width="0.0801%" height="15" fill="rgb(230,63,14)" fg:x="797" fg:w="1"/><text x="64.0610%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.8911%" y="437" width="0.0801%" height="15" fill="rgb(247,8,20)" fg:x="798" fg:w="1"/><text x="64.1411%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="63.5709%" y="501" width="0.4804%" height="15" fill="rgb(213,115,4)" fg:x="794" fg:w="6"/><text x="63.8209%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="63.5709%" y="485" width="0.4804%" height="15" fill="rgb(241,79,49)" fg:x="794" fg:w="6"/><text x="63.8209%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="63.8110%" y="469" width="0.2402%" height="15" fill="rgb(222,42,35)" fg:x="797" fg:w="3"/><text x="64.0610%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="63.8911%" y="453" width="0.1601%" height="15" fill="rgb(247,59,23)" fg:x="798" fg:w="2"/><text x="64.1411%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="63.9712%" y="437" width="0.0801%" height="15" fill="rgb(247,93,18)" fg:x="799" fg:w="1"/><text x="64.2212%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.9712%" y="421" width="0.0801%" height="15" fill="rgb(249,107,47)" fg:x="799" fg:w="1"/><text x="64.2212%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.9712%" y="405" width="0.0801%" height="15" fill="rgb(219,27,1)" fg:x="799" fg:w="1"/><text x="64.2212%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.0512%" y="485" width="0.0801%" height="15" fill="rgb(217,82,32)" fg:x="800" fg:w="1"/><text x="64.3012%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.1313%" y="453" width="0.0801%" height="15" fill="rgb(250,129,47)" fg:x="801" fg:w="1"/><text x="64.3813%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="64.1313%" y="485" width="0.1601%" height="15" fill="rgb(253,88,35)" fg:x="801" fg:w="2"/><text x="64.3813%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="64.1313%" y="469" width="0.1601%" height="15" fill="rgb(245,221,14)" fg:x="801" fg:w="2"/><text x="64.3813%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.2114%" y="453" width="0.0801%" height="15" fill="rgb(217,119,54)" fg:x="802" fg:w="1"/><text x="64.4614%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.2914%" y="469" width="0.0801%" height="15" fill="rgb(247,128,31)" fg:x="803" fg:w="1"/><text x="64.5414%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.3715%" y="453" width="0.0801%" height="15" fill="rgb(211,99,22)" fg:x="804" fg:w="1"/><text x="64.6215%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.76%)</title><rect x="62.7702%" y="517" width="1.7614%" height="15" fill="rgb(212,20,17)" fg:x="784" fg:w="22"/><text x="63.0202%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="64.0512%" y="501" width="0.4804%" height="15" fill="rgb(209,159,29)" fg:x="800" fg:w="6"/><text x="64.3012%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="64.2914%" y="485" width="0.2402%" height="15" fill="rgb(222,177,53)" fg:x="803" fg:w="3"/><text x="64.5414%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="64.3715%" y="469" width="0.1601%" height="15" fill="rgb(234,46,43)" fg:x="804" fg:w="2"/><text x="64.6215%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="64.4516%" y="453" width="0.0801%" height="15" fill="rgb(208,108,14)" fg:x="805" fg:w="1"/><text x="64.7016%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.4516%" y="437" width="0.0801%" height="15" fill="rgb(226,78,53)" fg:x="805" fg:w="1"/><text x="64.7016%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="64.6117%" y="501" width="0.0801%" height="15" fill="rgb(230,20,41)" fg:x="807" fg:w="1"/><text x="64.8617%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="64.6117%" y="485" width="0.0801%" height="15" fill="rgb(213,195,35)" fg:x="807" fg:w="1"/><text x="64.8617%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.6117%" y="469" width="0.0801%" height="15" fill="rgb(242,62,36)" fg:x="807" fg:w="1"/><text x="64.8617%" y="479.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="65.3323%" y="229" width="0.3203%" height="15" fill="rgb(222,210,37)" fg:x="816" fg:w="4"/><text x="65.5823%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="65.1721%" y="421" width="0.5604%" height="15" fill="rgb(232,107,19)" fg:x="814" fg:w="7"/><text x="65.4221%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="65.3323%" y="405" width="0.4003%" height="15" fill="rgb(235,85,17)" fg:x="816" fg:w="5"/><text x="65.5823%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="65.3323%" y="389" width="0.4003%" height="15" fill="rgb(219,195,31)" fg:x="816" fg:w="5"/><text x="65.5823%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.40%)</title><rect x="65.3323%" y="373" width="0.4003%" height="15" fill="rgb(231,183,30)" fg:x="816" fg:w="5"/><text x="65.5823%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.40%)</title><rect x="65.3323%" y="357" width="0.4003%" height="15" fill="rgb(212,0,11)" fg:x="816" fg:w="5"/><text x="65.5823%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.40%)</title><rect x="65.3323%" y="341" width="0.4003%" height="15" fill="rgb(249,53,54)" fg:x="816" fg:w="5"/><text x="65.5823%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.40%)</title><rect x="65.3323%" y="325" width="0.4003%" height="15" fill="rgb(211,118,13)" fg:x="816" fg:w="5"/><text x="65.5823%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.40%)</title><rect x="65.3323%" y="309" width="0.4003%" height="15" fill="rgb(237,42,9)" fg:x="816" fg:w="5"/><text x="65.5823%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.40%)</title><rect x="65.3323%" y="293" width="0.4003%" height="15" fill="rgb(227,68,32)" fg:x="816" fg:w="5"/><text x="65.5823%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.40%)</title><rect x="65.3323%" y="277" width="0.4003%" height="15" fill="rgb(238,10,7)" fg:x="816" fg:w="5"/><text x="65.5823%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.40%)</title><rect x="65.3323%" y="261" width="0.4003%" height="15" fill="rgb(224,42,12)" fg:x="816" fg:w="5"/><text x="65.5823%" y="271.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.40%)</title><rect x="65.3323%" y="245" width="0.4003%" height="15" fill="rgb(252,190,5)" fg:x="816" fg:w="5"/><text x="65.5823%" y="255.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="65.6525%" y="229" width="0.0801%" height="15" fill="rgb(220,214,39)" fg:x="820" fg:w="1"/><text x="65.9025%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="65.6525%" y="213" width="0.0801%" height="15" fill="rgb(247,98,4)" fg:x="820" fg:w="1"/><text x="65.9025%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="65.7326%" y="341" width="0.1601%" height="15" fill="rgb(211,60,12)" fg:x="821" fg:w="2"/><text x="65.9826%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="65.7326%" y="325" width="0.1601%" height="15" fill="rgb(224,42,10)" fg:x="821" fg:w="2"/><text x="65.9826%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="65.7326%" y="309" width="0.1601%" height="15" fill="rgb(217,167,4)" fg:x="821" fg:w="2"/><text x="65.9826%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.8127%" y="293" width="0.0801%" height="15" fill="rgb(253,18,17)" fg:x="822" fg:w="1"/><text x="66.0627%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.8127%" y="277" width="0.0801%" height="15" fill="rgb(249,186,44)" fg:x="822" fg:w="1"/><text x="66.0627%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.8127%" y="261" width="0.0801%" height="15" fill="rgb(254,124,54)" fg:x="822" fg:w="1"/><text x="66.0627%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.8127%" y="245" width="0.0801%" height="15" fill="rgb(220,124,39)" fg:x="822" fg:w="1"/><text x="66.0627%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (11 samples, 0.88%)</title><rect x="65.0921%" y="453" width="0.8807%" height="15" fill="rgb(225,96,46)" fg:x="813" fg:w="11"/><text x="65.3421%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (10 samples, 0.80%)</title><rect x="65.1721%" y="437" width="0.8006%" height="15" fill="rgb(221,106,12)" fg:x="814" fg:w="10"/><text x="65.4221%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="65.7326%" y="421" width="0.2402%" height="15" fill="rgb(227,133,23)" fg:x="821" fg:w="3"/><text x="65.9826%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="65.7326%" y="405" width="0.2402%" height="15" fill="rgb(216,44,52)" fg:x="821" fg:w="3"/><text x="65.9826%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="65.7326%" y="389" width="0.2402%" height="15" fill="rgb(239,149,7)" fg:x="821" fg:w="3"/><text x="65.9826%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="65.7326%" y="373" width="0.2402%" height="15" fill="rgb(211,157,31)" fg:x="821" fg:w="3"/><text x="65.9826%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="65.7326%" y="357" width="0.2402%" height="15" fill="rgb(206,215,22)" fg:x="821" fg:w="3"/><text x="65.9826%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="65.8927%" y="341" width="0.0801%" height="15" fill="rgb(208,113,15)" fg:x="823" fg:w="1"/><text x="66.1427%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="65.8927%" y="325" width="0.0801%" height="15" fill="rgb(207,189,15)" fg:x="823" fg:w="1"/><text x="66.1427%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (15 samples, 1.20%)</title><rect x="64.8519%" y="469" width="1.2010%" height="15" fill="rgb(231,115,4)" fg:x="810" fg:w="15"/><text x="65.1019%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.9728%" y="453" width="0.0801%" height="15" fill="rgb(253,117,2)" fg:x="824" fg:w="1"/><text x="66.2228%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.9728%" y="437" width="0.0801%" height="15" fill="rgb(248,48,24)" fg:x="824" fg:w="1"/><text x="66.2228%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.9728%" y="421" width="0.0801%" height="15" fill="rgb(241,28,46)" fg:x="824" fg:w="1"/><text x="66.2228%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.9728%" y="405" width="0.0801%" height="15" fill="rgb(216,165,52)" fg:x="824" fg:w="1"/><text x="66.2228%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.9728%" y="389" width="0.0801%" height="15" fill="rgb(220,222,34)" fg:x="824" fg:w="1"/><text x="66.2228%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.9728%" y="373" width="0.0801%" height="15" fill="rgb(247,222,49)" fg:x="824" fg:w="1"/><text x="66.2228%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.9728%" y="357" width="0.0801%" height="15" fill="rgb(240,10,31)" fg:x="824" fg:w="1"/><text x="66.2228%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.9728%" y="341" width="0.0801%" height="15" fill="rgb(221,199,35)" fg:x="824" fg:w="1"/><text x="66.2228%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.9728%" y="325" width="0.0801%" height="15" fill="rgb(230,223,11)" fg:x="824" fg:w="1"/><text x="66.2228%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.9728%" y="309" width="0.0801%" height="15" fill="rgb(218,82,45)" fg:x="824" fg:w="1"/><text x="66.2228%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.9728%" y="293" width="0.0801%" height="15" fill="rgb(233,213,33)" fg:x="824" fg:w="1"/><text x="66.2228%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.9728%" y="277" width="0.0801%" height="15" fill="rgb(210,143,52)" fg:x="824" fg:w="1"/><text x="66.2228%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.0528%" y="469" width="0.0801%" height="15" fill="rgb(206,95,4)" fg:x="825" fg:w="1"/><text x="66.3028%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.0528%" y="453" width="0.0801%" height="15" fill="rgb(246,164,46)" fg:x="825" fg:w="1"/><text x="66.3028%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.0528%" y="437" width="0.0801%" height="15" fill="rgb(213,210,47)" fg:x="825" fg:w="1"/><text x="66.3028%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.0528%" y="421" width="0.0801%" height="15" fill="rgb(210,12,38)" fg:x="825" fg:w="1"/><text x="66.3028%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.0528%" y="405" width="0.0801%" height="15" fill="rgb(252,192,54)" fg:x="825" fg:w="1"/><text x="66.3028%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.0528%" y="389" width="0.0801%" height="15" fill="rgb(242,92,6)" fg:x="825" fg:w="1"/><text x="66.3028%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.0528%" y="373" width="0.0801%" height="15" fill="rgb(253,154,15)" fg:x="825" fg:w="1"/><text x="66.3028%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.0528%" y="357" width="0.0801%" height="15" fill="rgb(209,20,43)" fg:x="825" fg:w="1"/><text x="66.3028%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.0528%" y="341" width="0.0801%" height="15" fill="rgb(232,28,49)" fg:x="825" fg:w="1"/><text x="66.3028%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.0528%" y="325" width="0.0801%" height="15" fill="rgb(248,131,53)" fg:x="825" fg:w="1"/><text x="66.3028%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.0528%" y="309" width="0.0801%" height="15" fill="rgb(214,16,30)" fg:x="825" fg:w="1"/><text x="66.3028%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.0528%" y="293" width="0.0801%" height="15" fill="rgb(245,16,0)" fg:x="825" fg:w="1"/><text x="66.3028%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (18 samples, 1.44%)</title><rect x="64.8519%" y="485" width="1.4412%" height="15" fill="rgb(245,17,35)" fg:x="810" fg:w="18"/><text x="65.1019%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="66.1329%" y="469" width="0.1601%" height="15" fill="rgb(249,27,53)" fg:x="826" fg:w="2"/><text x="66.3829%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="66.2930%" y="405" width="0.1601%" height="15" fill="rgb(214,73,24)" fg:x="828" fg:w="2"/><text x="66.5430%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="66.2930%" y="389" width="0.1601%" height="15" fill="rgb(223,84,37)" fg:x="828" fg:w="2"/><text x="66.5430%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="66.2930%" y="373" width="0.1601%" height="15" fill="rgb(210,109,28)" fg:x="828" fg:w="2"/><text x="66.5430%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="66.2930%" y="357" width="0.1601%" height="15" fill="rgb(208,186,6)" fg:x="828" fg:w="2"/><text x="66.5430%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="66.2930%" y="341" width="0.1601%" height="15" fill="rgb(235,201,30)" fg:x="828" fg:w="2"/><text x="66.5430%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="66.2930%" y="325" width="0.1601%" height="15" fill="rgb(216,198,48)" fg:x="828" fg:w="2"/><text x="66.5430%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="66.2930%" y="309" width="0.1601%" height="15" fill="rgb(254,186,25)" fg:x="828" fg:w="2"/><text x="66.5430%" y="319.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (25 samples, 2.00%)</title><rect x="64.5316%" y="517" width="2.0016%" height="15" fill="rgb(227,87,5)" fg:x="806" fg:w="25"/><text x="64.7816%" y="527.50">e..</text></g><g><title>kernel::model::scopes::Scopes::modified (23 samples, 1.84%)</title><rect x="64.6918%" y="501" width="1.8415%" height="15" fill="rgb(236,205,25)" fg:x="808" fg:w="23"/><text x="64.9418%" y="511.50">k..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="66.2930%" y="485" width="0.2402%" height="15" fill="rgb(229,99,32)" fg:x="828" fg:w="3"/><text x="66.5430%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="66.2930%" y="469" width="0.2402%" height="15" fill="rgb(231,177,31)" fg:x="828" fg:w="3"/><text x="66.5430%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="66.2930%" y="453" width="0.2402%" height="15" fill="rgb(246,15,2)" fg:x="828" fg:w="3"/><text x="66.5430%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="66.2930%" y="437" width="0.2402%" height="15" fill="rgb(207,39,15)" fg:x="828" fg:w="3"/><text x="66.5430%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="66.2930%" y="421" width="0.2402%" height="15" fill="rgb(207,44,9)" fg:x="828" fg:w="3"/><text x="66.5430%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="66.4532%" y="405" width="0.0801%" height="15" fill="rgb(225,224,33)" fg:x="830" fg:w="1"/><text x="66.7032%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="66.4532%" y="389" width="0.0801%" height="15" fill="rgb(252,151,3)" fg:x="830" fg:w="1"/><text x="66.7032%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (1 samples, 0.08%)</title><rect x="66.6133%" y="485" width="0.0801%" height="15" fill="rgb(211,140,13)" fg:x="832" fg:w="1"/><text x="66.8633%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="66.6133%" y="469" width="0.0801%" height="15" fill="rgb(239,225,17)" fg:x="832" fg:w="1"/><text x="66.8633%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="66.6133%" y="453" width="0.0801%" height="15" fill="rgb(223,170,52)" fg:x="832" fg:w="1"/><text x="66.8633%" y="463.50"></text></g><g><title>&lt;&amp;kernel::model::EntityPtr as core::convert::Into&lt;kernel::model::entity::EntityRef&gt;&gt;::into (2 samples, 0.16%)</title><rect x="66.7734%" y="437" width="0.1601%" height="15" fill="rgb(212,64,21)" fg:x="834" fg:w="2"/><text x="67.0234%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="66.7734%" y="421" width="0.1601%" height="15" fill="rgb(236,126,48)" fg:x="834" fg:w="2"/><text x="67.0234%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="66.7734%" y="405" width="0.1601%" height="15" fill="rgb(209,135,11)" fg:x="834" fg:w="2"/><text x="67.0234%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="66.7734%" y="389" width="0.1601%" height="15" fill="rgb(228,126,40)" fg:x="834" fg:w="2"/><text x="67.0234%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="66.7734%" y="373" width="0.1601%" height="15" fill="rgb(205,196,36)" fg:x="834" fg:w="2"/><text x="67.0234%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="66.7734%" y="357" width="0.1601%" height="15" fill="rgb(243,160,33)" fg:x="834" fg:w="2"/><text x="67.0234%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="66.9335%" y="373" width="0.0801%" height="15" fill="rgb(210,84,20)" fg:x="836" fg:w="1"/><text x="67.1835%" y="383.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="66.9335%" y="357" width="0.0801%" height="15" fill="rgb(228,213,30)" fg:x="836" fg:w="1"/><text x="67.1835%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="66.9335%" y="341" width="0.0801%" height="15" fill="rgb(252,33,45)" fg:x="836" fg:w="1"/><text x="67.1835%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.9335%" y="325" width="0.0801%" height="15" fill="rgb(254,227,20)" fg:x="836" fg:w="1"/><text x="67.1835%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.9335%" y="309" width="0.0801%" height="15" fill="rgb(228,192,2)" fg:x="836" fg:w="1"/><text x="67.1835%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.9335%" y="293" width="0.0801%" height="15" fill="rgb(233,32,8)" fg:x="836" fg:w="1"/><text x="67.1835%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.9335%" y="277" width="0.0801%" height="15" fill="rgb(220,146,47)" fg:x="836" fg:w="1"/><text x="67.1835%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.9335%" y="261" width="0.0801%" height="15" fill="rgb(246,194,1)" fg:x="836" fg:w="1"/><text x="67.1835%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.9335%" y="245" width="0.0801%" height="15" fill="rgb(218,203,9)" fg:x="836" fg:w="1"/><text x="67.1835%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.9335%" y="229" width="0.0801%" height="15" fill="rgb(237,97,14)" fg:x="836" fg:w="1"/><text x="67.1835%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.9335%" y="213" width="0.0801%" height="15" fill="rgb(239,76,15)" fg:x="836" fg:w="1"/><text x="67.1835%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.9335%" y="197" width="0.0801%" height="15" fill="rgb(222,53,45)" fg:x="836" fg:w="1"/><text x="67.1835%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="66.9335%" y="181" width="0.0801%" height="15" fill="rgb(237,88,5)" fg:x="836" fg:w="1"/><text x="67.1835%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="66.9335%" y="165" width="0.0801%" height="15" fill="rgb(218,223,35)" fg:x="836" fg:w="1"/><text x="67.1835%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.0937%" y="277" width="0.0801%" height="15" fill="rgb(243,229,38)" fg:x="838" fg:w="1"/><text x="67.3437%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.0937%" y="261" width="0.0801%" height="15" fill="rgb(240,75,41)" fg:x="838" fg:w="1"/><text x="67.3437%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.0937%" y="245" width="0.0801%" height="15" fill="rgb(209,110,37)" fg:x="838" fg:w="1"/><text x="67.3437%" y="255.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="66.9335%" y="405" width="0.3203%" height="15" fill="rgb(221,130,46)" fg:x="836" fg:w="4"/><text x="67.1835%" y="415.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="66.9335%" y="389" width="0.3203%" height="15" fill="rgb(237,160,20)" fg:x="836" fg:w="4"/><text x="67.1835%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="67.0136%" y="373" width="0.2402%" height="15" fill="rgb(234,126,24)" fg:x="837" fg:w="3"/><text x="67.2636%" y="383.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="67.0937%" y="357" width="0.1601%" height="15" fill="rgb(207,177,9)" fg:x="838" fg:w="2"/><text x="67.3437%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="67.0937%" y="341" width="0.1601%" height="15" fill="rgb(231,191,33)" fg:x="838" fg:w="2"/><text x="67.3437%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.0937%" y="325" width="0.1601%" height="15" fill="rgb(207,42,1)" fg:x="838" fg:w="2"/><text x="67.3437%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.0937%" y="309" width="0.1601%" height="15" fill="rgb(218,34,50)" fg:x="838" fg:w="2"/><text x="67.3437%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.0937%" y="293" width="0.1601%" height="15" fill="rgb(254,126,39)" fg:x="838" fg:w="2"/><text x="67.3437%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.1737%" y="277" width="0.0801%" height="15" fill="rgb(251,17,26)" fg:x="839" fg:w="1"/><text x="67.4237%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.1737%" y="261" width="0.0801%" height="15" fill="rgb(252,215,34)" fg:x="839" fg:w="1"/><text x="67.4237%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.1737%" y="245" width="0.0801%" height="15" fill="rgb(217,120,44)" fg:x="839" fg:w="1"/><text x="67.4237%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.1737%" y="229" width="0.0801%" height="15" fill="rgb(211,31,11)" fg:x="839" fg:w="1"/><text x="67.4237%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.1737%" y="213" width="0.0801%" height="15" fill="rgb(222,69,51)" fg:x="839" fg:w="1"/><text x="67.4237%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.1737%" y="197" width="0.0801%" height="15" fill="rgb(215,229,42)" fg:x="839" fg:w="1"/><text x="67.4237%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.1737%" y="181" width="0.0801%" height="15" fill="rgb(212,102,15)" fg:x="839" fg:w="1"/><text x="67.4237%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.1737%" y="165" width="0.0801%" height="15" fill="rgb(205,179,41)" fg:x="839" fg:w="1"/><text x="67.4237%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.1737%" y="149" width="0.0801%" height="15" fill="rgb(219,148,46)" fg:x="839" fg:w="1"/><text x="67.4237%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.1737%" y="133" width="0.0801%" height="15" fill="rgb(243,40,19)" fg:x="839" fg:w="1"/><text x="67.4237%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.1737%" y="117" width="0.0801%" height="15" fill="rgb(208,206,34)" fg:x="839" fg:w="1"/><text x="67.4237%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.1737%" y="101" width="0.0801%" height="15" fill="rgb(244,184,38)" fg:x="839" fg:w="1"/><text x="67.4237%" y="111.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="67.2538%" y="389" width="0.0801%" height="15" fill="rgb(244,151,47)" fg:x="840" fg:w="1"/><text x="67.5038%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.3339%" y="357" width="0.1601%" height="15" fill="rgb(236,134,42)" fg:x="841" fg:w="2"/><text x="67.5839%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.3339%" y="341" width="0.1601%" height="15" fill="rgb(233,93,22)" fg:x="841" fg:w="2"/><text x="67.5839%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.3339%" y="325" width="0.1601%" height="15" fill="rgb(211,202,10)" fg:x="841" fg:w="2"/><text x="67.5839%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="67.3339%" y="309" width="0.1601%" height="15" fill="rgb(240,63,8)" fg:x="841" fg:w="2"/><text x="67.5839%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="67.4940%" y="357" width="0.0801%" height="15" fill="rgb(214,9,4)" fg:x="843" fg:w="1"/><text x="67.7440%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="67.2538%" y="405" width="0.4003%" height="15" fill="rgb(243,66,45)" fg:x="840" fg:w="5"/><text x="67.5038%" y="415.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="67.3339%" y="389" width="0.3203%" height="15" fill="rgb(220,50,42)" fg:x="841" fg:w="4"/><text x="67.5839%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="67.3339%" y="373" width="0.3203%" height="15" fill="rgb(220,134,27)" fg:x="841" fg:w="4"/><text x="67.5839%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="67.5741%" y="357" width="0.0801%" height="15" fill="rgb(246,151,50)" fg:x="844" fg:w="1"/><text x="67.8241%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.5741%" y="341" width="0.0801%" height="15" fill="rgb(238,216,27)" fg:x="844" fg:w="1"/><text x="67.8241%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="67.5741%" y="325" width="0.0801%" height="15" fill="rgb(250,92,11)" fg:x="844" fg:w="1"/><text x="67.8241%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.5741%" y="309" width="0.0801%" height="15" fill="rgb(248,183,6)" fg:x="844" fg:w="1"/><text x="67.8241%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="67.5741%" y="293" width="0.0801%" height="15" fill="rgb(211,204,50)" fg:x="844" fg:w="1"/><text x="67.8241%" y="303.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="67.6541%" y="405" width="0.0801%" height="15" fill="rgb(252,55,47)" fg:x="845" fg:w="1"/><text x="67.9041%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.6541%" y="389" width="0.0801%" height="15" fill="rgb(240,198,32)" fg:x="845" fg:w="1"/><text x="67.9041%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.6541%" y="373" width="0.0801%" height="15" fill="rgb(224,203,19)" fg:x="845" fg:w="1"/><text x="67.9041%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.6541%" y="357" width="0.0801%" height="15" fill="rgb(205,27,16)" fg:x="845" fg:w="1"/><text x="67.9041%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.6541%" y="341" width="0.0801%" height="15" fill="rgb(224,226,17)" fg:x="845" fg:w="1"/><text x="67.9041%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.6541%" y="325" width="0.0801%" height="15" fill="rgb(205,216,54)" fg:x="845" fg:w="1"/><text x="67.9041%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.6541%" y="309" width="0.0801%" height="15" fill="rgb(248,168,46)" fg:x="845" fg:w="1"/><text x="67.9041%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.6541%" y="293" width="0.0801%" height="15" fill="rgb(226,111,45)" fg:x="845" fg:w="1"/><text x="67.9041%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.6541%" y="277" width="0.0801%" height="15" fill="rgb(231,15,9)" fg:x="845" fg:w="1"/><text x="67.9041%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.6541%" y="261" width="0.0801%" height="15" fill="rgb(243,168,3)" fg:x="845" fg:w="1"/><text x="67.9041%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.6541%" y="245" width="0.0801%" height="15" fill="rgb(221,220,54)" fg:x="845" fg:w="1"/><text x="67.9041%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.6541%" y="229" width="0.0801%" height="15" fill="rgb(232,174,38)" fg:x="845" fg:w="1"/><text x="67.9041%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.6541%" y="213" width="0.0801%" height="15" fill="rgb(205,14,38)" fg:x="845" fg:w="1"/><text x="67.9041%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.7342%" y="325" width="0.0801%" height="15" fill="rgb(234,89,19)" fg:x="846" fg:w="1"/><text x="67.9842%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.9744%" y="245" width="0.0801%" height="15" fill="rgb(216,68,51)" fg:x="849" fg:w="1"/><text x="68.2244%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.9744%" y="229" width="0.0801%" height="15" fill="rgb(213,49,2)" fg:x="849" fg:w="1"/><text x="68.2244%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.9744%" y="213" width="0.0801%" height="15" fill="rgb(242,146,30)" fg:x="849" fg:w="1"/><text x="68.2244%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.9744%" y="197" width="0.0801%" height="15" fill="rgb(224,188,11)" fg:x="849" fg:w="1"/><text x="68.2244%" y="207.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="67.9744%" y="181" width="0.0801%" height="15" fill="rgb(213,159,11)" fg:x="849" fg:w="1"/><text x="68.2244%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.9744%" y="165" width="0.0801%" height="15" fill="rgb(229,13,31)" fg:x="849" fg:w="1"/><text x="68.2244%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.9744%" y="149" width="0.0801%" height="15" fill="rgb(209,103,11)" fg:x="849" fg:w="1"/><text x="68.2244%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="67.9744%" y="133" width="0.0801%" height="15" fill="rgb(206,3,4)" fg:x="849" fg:w="1"/><text x="68.2244%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.9744%" y="117" width="0.0801%" height="15" fill="rgb(252,10,49)" fg:x="849" fg:w="1"/><text x="68.2244%" y="127.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="68.0544%" y="181" width="0.0801%" height="15" fill="rgb(217,160,32)" fg:x="850" fg:w="1"/><text x="68.3044%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="68.0544%" y="165" width="0.0801%" height="15" fill="rgb(249,196,0)" fg:x="850" fg:w="1"/><text x="68.3044%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="67.8943%" y="277" width="0.3203%" height="15" fill="rgb(213,17,48)" fg:x="848" fg:w="4"/><text x="68.1443%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="67.8943%" y="261" width="0.3203%" height="15" fill="rgb(206,42,46)" fg:x="848" fg:w="4"/><text x="68.1443%" y="271.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="68.0544%" y="245" width="0.1601%" height="15" fill="rgb(212,105,24)" fg:x="850" fg:w="2"/><text x="68.3044%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="68.0544%" y="229" width="0.1601%" height="15" fill="rgb(243,216,30)" fg:x="850" fg:w="2"/><text x="68.3044%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="68.0544%" y="213" width="0.1601%" height="15" fill="rgb(207,121,3)" fg:x="850" fg:w="2"/><text x="68.3044%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="68.0544%" y="197" width="0.1601%" height="15" fill="rgb(249,78,0)" fg:x="850" fg:w="2"/><text x="68.3044%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.1345%" y="181" width="0.0801%" height="15" fill="rgb(244,151,32)" fg:x="851" fg:w="1"/><text x="68.3845%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="68.2146%" y="245" width="0.1601%" height="15" fill="rgb(228,63,25)" fg:x="852" fg:w="2"/><text x="68.4646%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.2946%" y="229" width="0.0801%" height="15" fill="rgb(231,158,23)" fg:x="853" fg:w="1"/><text x="68.5446%" y="239.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (11 samples, 0.88%)</title><rect x="67.7342%" y="389" width="0.8807%" height="15" fill="rgb(248,107,23)" fg:x="846" fg:w="11"/><text x="67.9842%" y="399.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (11 samples, 0.88%)</title><rect x="67.7342%" y="373" width="0.8807%" height="15" fill="rgb(215,168,21)" fg:x="846" fg:w="11"/><text x="67.9842%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.88%)</title><rect x="67.7342%" y="357" width="0.8807%" height="15" fill="rgb(227,83,22)" fg:x="846" fg:w="11"/><text x="67.9842%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="67.7342%" y="341" width="0.8807%" height="15" fill="rgb(217,118,43)" fg:x="846" fg:w="11"/><text x="67.9842%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (10 samples, 0.80%)</title><rect x="67.8143%" y="325" width="0.8006%" height="15" fill="rgb(229,220,41)" fg:x="847" fg:w="10"/><text x="68.0643%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="67.8143%" y="309" width="0.8006%" height="15" fill="rgb(254,146,46)" fg:x="847" fg:w="10"/><text x="68.0643%" y="319.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.72%)</title><rect x="67.8943%" y="293" width="0.7206%" height="15" fill="rgb(233,208,31)" fg:x="848" fg:w="9"/><text x="68.1443%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="68.2146%" y="277" width="0.4003%" height="15" fill="rgb(222,162,7)" fg:x="852" fg:w="5"/><text x="68.4646%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="68.2146%" y="261" width="0.4003%" height="15" fill="rgb(230,117,45)" fg:x="852" fg:w="5"/><text x="68.4646%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="68.3747%" y="245" width="0.2402%" height="15" fill="rgb(239,163,6)" fg:x="854" fg:w="3"/><text x="68.6247%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="68.3747%" y="229" width="0.2402%" height="15" fill="rgb(246,130,17)" fg:x="854" fg:w="3"/><text x="68.6247%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="68.3747%" y="213" width="0.2402%" height="15" fill="rgb(216,84,5)" fg:x="854" fg:w="3"/><text x="68.6247%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="68.5348%" y="197" width="0.0801%" height="15" fill="rgb(230,200,21)" fg:x="856" fg:w="1"/><text x="68.7848%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.5348%" y="181" width="0.0801%" height="15" fill="rgb(224,2,8)" fg:x="856" fg:w="1"/><text x="68.7848%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.5348%" y="165" width="0.0801%" height="15" fill="rgb(238,178,10)" fg:x="856" fg:w="1"/><text x="68.7848%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="68.5348%" y="149" width="0.0801%" height="15" fill="rgb(242,153,24)" fg:x="856" fg:w="1"/><text x="68.7848%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.5348%" y="133" width="0.0801%" height="15" fill="rgb(242,32,48)" fg:x="856" fg:w="1"/><text x="68.7848%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.5348%" y="117" width="0.0801%" height="15" fill="rgb(227,36,0)" fg:x="856" fg:w="1"/><text x="68.7848%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="68.5348%" y="101" width="0.0801%" height="15" fill="rgb(251,33,35)" fg:x="856" fg:w="1"/><text x="68.7848%" y="111.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.5348%" y="85" width="0.0801%" height="15" fill="rgb(232,168,51)" fg:x="856" fg:w="1"/><text x="68.7848%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.5348%" y="69" width="0.0801%" height="15" fill="rgb(228,56,10)" fg:x="856" fg:w="1"/><text x="68.7848%" y="79.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.5348%" y="53" width="0.0801%" height="15" fill="rgb(231,10,26)" fg:x="856" fg:w="1"/><text x="68.7848%" y="63.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.6950%" y="181" width="0.0801%" height="15" fill="rgb(226,202,12)" fg:x="858" fg:w="1"/><text x="68.9450%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="68.6149%" y="261" width="0.2402%" height="15" fill="rgb(251,49,21)" fg:x="857" fg:w="3"/><text x="68.8649%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="68.6149%" y="245" width="0.2402%" height="15" fill="rgb(206,228,28)" fg:x="857" fg:w="3"/><text x="68.8649%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="68.6149%" y="229" width="0.2402%" height="15" fill="rgb(205,198,31)" fg:x="857" fg:w="3"/><text x="68.8649%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="68.6149%" y="213" width="0.2402%" height="15" fill="rgb(213,69,1)" fg:x="857" fg:w="3"/><text x="68.8649%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="68.6149%" y="197" width="0.2402%" height="15" fill="rgb(209,177,9)" fg:x="857" fg:w="3"/><text x="68.8649%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="68.7750%" y="181" width="0.0801%" height="15" fill="rgb(227,119,30)" fg:x="859" fg:w="1"/><text x="69.0250%" y="191.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="68.7750%" y="165" width="0.0801%" height="15" fill="rgb(234,106,41)" fg:x="859" fg:w="1"/><text x="69.0250%" y="175.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (28 samples, 2.24%)</title><rect x="66.6934%" y="453" width="2.2418%" height="15" fill="rgb(244,103,47)" fg:x="833" fg:w="28"/><text x="66.9434%" y="463.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (25 samples, 2.00%)</title><rect x="66.9335%" y="437" width="2.0016%" height="15" fill="rgb(212,211,25)" fg:x="836" fg:w="25"/><text x="67.1835%" y="447.50">&lt;..</text></g><g><title>engine::internal::Entities::add_persisted (25 samples, 2.00%)</title><rect x="66.9335%" y="421" width="2.0016%" height="15" fill="rgb(208,63,53)" fg:x="836" fg:w="25"/><text x="67.1835%" y="431.50">e..</text></g><g><title>kernel::model::deserialize_entity (15 samples, 1.20%)</title><rect x="67.7342%" y="405" width="1.2010%" height="15" fill="rgb(213,176,21)" fg:x="846" fg:w="15"/><text x="67.9842%" y="415.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="68.6149%" y="389" width="0.3203%" height="15" fill="rgb(243,124,12)" fg:x="857" fg:w="4"/><text x="68.8649%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="68.6149%" y="373" width="0.3203%" height="15" fill="rgb(239,2,35)" fg:x="857" fg:w="4"/><text x="68.8649%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="68.6149%" y="357" width="0.3203%" height="15" fill="rgb(253,169,22)" fg:x="857" fg:w="4"/><text x="68.8649%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="68.6149%" y="341" width="0.3203%" height="15" fill="rgb(254,51,12)" fg:x="857" fg:w="4"/><text x="68.8649%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="68.6149%" y="325" width="0.3203%" height="15" fill="rgb(244,17,47)" fg:x="857" fg:w="4"/><text x="68.8649%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="68.6149%" y="309" width="0.3203%" height="15" fill="rgb(251,45,46)" fg:x="857" fg:w="4"/><text x="68.8649%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="68.6149%" y="293" width="0.3203%" height="15" fill="rgb(223,87,43)" fg:x="857" fg:w="4"/><text x="68.8649%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="68.6149%" y="277" width="0.3203%" height="15" fill="rgb(230,132,31)" fg:x="857" fg:w="4"/><text x="68.8649%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="68.8551%" y="261" width="0.0801%" height="15" fill="rgb(206,99,1)" fg:x="860" fg:w="1"/><text x="69.1051%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.8551%" y="245" width="0.0801%" height="15" fill="rgb(227,110,25)" fg:x="860" fg:w="1"/><text x="69.1051%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="68.8551%" y="229" width="0.0801%" height="15" fill="rgb(217,182,7)" fg:x="860" fg:w="1"/><text x="69.1051%" y="239.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="68.8551%" y="213" width="0.0801%" height="15" fill="rgb(250,176,4)" fg:x="860" fg:w="1"/><text x="69.1051%" y="223.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="68.9351%" y="453" width="0.1601%" height="15" fill="rgb(244,98,30)" fg:x="861" fg:w="2"/><text x="69.1851%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.9351%" y="437" width="0.1601%" height="15" fill="rgb(228,150,42)" fg:x="861" fg:w="2"/><text x="69.1851%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.0152%" y="421" width="0.0801%" height="15" fill="rgb(231,91,46)" fg:x="862" fg:w="1"/><text x="69.2652%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.0152%" y="405" width="0.0801%" height="15" fill="rgb(252,161,32)" fg:x="862" fg:w="1"/><text x="69.2652%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="69.0953%" y="453" width="0.0801%" height="15" fill="rgb(236,69,41)" fg:x="863" fg:w="1"/><text x="69.3453%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="69.0953%" y="437" width="0.0801%" height="15" fill="rgb(212,160,3)" fg:x="863" fg:w="1"/><text x="69.3453%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.1753%" y="421" width="0.0801%" height="15" fill="rgb(216,5,50)" fg:x="864" fg:w="1"/><text x="69.4253%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.1753%" y="405" width="0.0801%" height="15" fill="rgb(241,138,25)" fg:x="864" fg:w="1"/><text x="69.4253%" y="415.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (34 samples, 2.72%)</title><rect x="66.6133%" y="501" width="2.7222%" height="15" fill="rgb(239,42,18)" fg:x="832" fg:w="34"/><text x="66.8633%" y="511.50">&lt;p..</text></g><g><title>kernel::model::entry::Entry::scope (33 samples, 2.64%)</title><rect x="66.6934%" y="485" width="2.6421%" height="15" fill="rgb(239,40,7)" fg:x="833" fg:w="33"/><text x="66.9434%" y="495.50">ke..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (33 samples, 2.64%)</title><rect x="66.6934%" y="469" width="2.6421%" height="15" fill="rgb(239,11,31)" fg:x="833" fg:w="33"/><text x="66.9434%" y="479.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="69.1753%" y="453" width="0.1601%" height="15" fill="rgb(224,77,40)" fg:x="864" fg:w="2"/><text x="69.4253%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.1753%" y="437" width="0.1601%" height="15" fill="rgb(226,15,5)" fg:x="864" fg:w="2"/><text x="69.4253%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.2554%" y="421" width="0.0801%" height="15" fill="rgb(254,188,5)" fg:x="865" fg:w="1"/><text x="69.5054%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.2554%" y="405" width="0.0801%" height="15" fill="rgb(241,148,52)" fg:x="865" fg:w="1"/><text x="69.5054%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.2554%" y="389" width="0.0801%" height="15" fill="rgb(251,48,36)" fg:x="865" fg:w="1"/><text x="69.5054%" y="399.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (36 samples, 2.88%)</title><rect x="66.5332%" y="517" width="2.8823%" height="15" fill="rgb(243,83,13)" fg:x="831" fg:w="36"/><text x="66.7832%" y="527.50">en..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="69.3355%" y="501" width="0.0801%" height="15" fill="rgb(210,105,0)" fg:x="866" fg:w="1"/><text x="69.5855%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="69.3355%" y="485" width="0.0801%" height="15" fill="rgb(239,60,36)" fg:x="866" fg:w="1"/><text x="69.5855%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="69.3355%" y="469" width="0.0801%" height="15" fill="rgb(210,20,0)" fg:x="866" fg:w="1"/><text x="69.5855%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.4155%" y="469" width="0.0801%" height="15" fill="rgb(244,26,53)" fg:x="867" fg:w="1"/><text x="69.6655%" y="479.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (87 samples, 6.97%)</title><rect x="62.6902%" y="533" width="6.9656%" height="15" fill="rgb(240,100,49)" fg:x="783" fg:w="87"/><text x="62.9402%" y="543.50">&lt;engine::..</text></g><g><title>kernel::plugins::mw::apply_middleware (3 samples, 0.24%)</title><rect x="69.4155%" y="517" width="0.2402%" height="15" fill="rgb(250,46,45)" fg:x="867" fg:w="3"/><text x="69.6655%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="69.4155%" y="501" width="0.2402%" height="15" fill="rgb(220,181,29)" fg:x="867" fg:w="3"/><text x="69.6655%" y="511.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (3 samples, 0.24%)</title><rect x="69.4155%" y="485" width="0.2402%" height="15" fill="rgb(213,137,33)" fg:x="867" fg:w="3"/><text x="69.6655%" y="495.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="69.4956%" y="469" width="0.1601%" height="15" fill="rgb(213,27,48)" fg:x="868" fg:w="2"/><text x="69.7456%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="69.4956%" y="453" width="0.1601%" height="15" fill="rgb(245,180,39)" fg:x="868" fg:w="2"/><text x="69.7456%" y="463.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="69.4956%" y="437" width="0.1601%" height="15" fill="rgb(212,158,42)" fg:x="868" fg:w="2"/><text x="69.7456%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="69.4956%" y="421" width="0.1601%" height="15" fill="rgb(228,193,18)" fg:x="868" fg:w="2"/><text x="69.7456%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (1 samples, 0.08%)</title><rect x="69.5757%" y="405" width="0.0801%" height="15" fill="rgb(245,172,29)" fg:x="869" fg:w="1"/><text x="69.8257%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="69.5757%" y="389" width="0.0801%" height="15" fill="rgb(207,98,24)" fg:x="869" fg:w="1"/><text x="69.8257%" y="399.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.5757%" y="373" width="0.0801%" height="15" fill="rgb(249,92,26)" fg:x="869" fg:w="1"/><text x="69.8257%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.6557%" y="389" width="0.1601%" height="15" fill="rgb(217,176,26)" fg:x="870" fg:w="2"/><text x="69.9057%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.6557%" y="373" width="0.1601%" height="15" fill="rgb(221,8,39)" fg:x="870" fg:w="2"/><text x="69.9057%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.6557%" y="357" width="0.1601%" height="15" fill="rgb(208,90,18)" fg:x="870" fg:w="2"/><text x="69.9057%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.6557%" y="341" width="0.1601%" height="15" fill="rgb(207,202,30)" fg:x="870" fg:w="2"/><text x="69.9057%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="69.6557%" y="325" width="0.1601%" height="15" fill="rgb(231,124,22)" fg:x="870" fg:w="2"/><text x="69.9057%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.7358%" y="309" width="0.0801%" height="15" fill="rgb(206,15,5)" fg:x="871" fg:w="1"/><text x="69.9858%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.7358%" y="293" width="0.0801%" height="15" fill="rgb(239,16,52)" fg:x="871" fg:w="1"/><text x="69.9858%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.7358%" y="277" width="0.0801%" height="15" fill="rgb(245,213,29)" fg:x="871" fg:w="1"/><text x="69.9858%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.7358%" y="261" width="0.0801%" height="15" fill="rgb(213,203,36)" fg:x="871" fg:w="1"/><text x="69.9858%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.7358%" y="245" width="0.0801%" height="15" fill="rgb(209,55,18)" fg:x="871" fg:w="1"/><text x="69.9858%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.7358%" y="229" width="0.0801%" height="15" fill="rgb(207,133,49)" fg:x="871" fg:w="1"/><text x="69.9858%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.7358%" y="213" width="0.0801%" height="15" fill="rgb(240,33,46)" fg:x="871" fg:w="1"/><text x="69.9858%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.7358%" y="197" width="0.0801%" height="15" fill="rgb(212,35,2)" fg:x="871" fg:w="1"/><text x="69.9858%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.7358%" y="181" width="0.0801%" height="15" fill="rgb(231,119,28)" fg:x="871" fg:w="1"/><text x="69.9858%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.7358%" y="165" width="0.0801%" height="15" fill="rgb(252,178,7)" fg:x="871" fg:w="1"/><text x="69.9858%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.7358%" y="149" width="0.0801%" height="15" fill="rgb(251,91,4)" fg:x="871" fg:w="1"/><text x="69.9858%" y="159.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="69.6557%" y="437" width="0.2402%" height="15" fill="rgb(233,122,19)" fg:x="870" fg:w="3"/><text x="69.9057%" y="447.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="69.6557%" y="421" width="0.2402%" height="15" fill="rgb(231,208,46)" fg:x="870" fg:w="3"/><text x="69.9057%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="69.6557%" y="405" width="0.2402%" height="15" fill="rgb(243,15,41)" fg:x="870" fg:w="3"/><text x="69.9057%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.8159%" y="389" width="0.0801%" height="15" fill="rgb(210,32,43)" fg:x="872" fg:w="1"/><text x="70.0659%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.8159%" y="373" width="0.0801%" height="15" fill="rgb(222,177,15)" fg:x="872" fg:w="1"/><text x="70.0659%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.8159%" y="357" width="0.0801%" height="15" fill="rgb(244,121,34)" fg:x="872" fg:w="1"/><text x="70.0659%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.8159%" y="341" width="0.0801%" height="15" fill="rgb(234,138,4)" fg:x="872" fg:w="1"/><text x="70.0659%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="69.8159%" y="325" width="0.0801%" height="15" fill="rgb(240,97,48)" fg:x="872" fg:w="1"/><text x="70.0659%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.8159%" y="309" width="0.0801%" height="15" fill="rgb(237,65,54)" fg:x="872" fg:w="1"/><text x="70.0659%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.8159%" y="293" width="0.0801%" height="15" fill="rgb(214,25,24)" fg:x="872" fg:w="1"/><text x="70.0659%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="69.8159%" y="277" width="0.0801%" height="15" fill="rgb(213,5,3)" fg:x="872" fg:w="1"/><text x="70.0659%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="69.8159%" y="261" width="0.0801%" height="15" fill="rgb(219,81,29)" fg:x="872" fg:w="1"/><text x="70.0659%" y="271.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="69.6557%" y="469" width="0.3203%" height="15" fill="rgb(220,43,48)" fg:x="870" fg:w="4"/><text x="69.9057%" y="479.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="69.6557%" y="453" width="0.3203%" height="15" fill="rgb(239,157,2)" fg:x="870" fg:w="4"/><text x="69.9057%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="69.8959%" y="437" width="0.0801%" height="15" fill="rgb(213,104,43)" fg:x="873" fg:w="1"/><text x="70.1459%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="69.8959%" y="421" width="0.0801%" height="15" fill="rgb(237,84,9)" fg:x="873" fg:w="1"/><text x="70.1459%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="69.8959%" y="405" width="0.0801%" height="15" fill="rgb(252,6,33)" fg:x="873" fg:w="1"/><text x="70.1459%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.8959%" y="389" width="0.0801%" height="15" fill="rgb(251,172,22)" fg:x="873" fg:w="1"/><text x="70.1459%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.8959%" y="373" width="0.0801%" height="15" fill="rgb(244,91,53)" fg:x="873" fg:w="1"/><text x="70.1459%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.8959%" y="357" width="0.0801%" height="15" fill="rgb(219,29,30)" fg:x="873" fg:w="1"/><text x="70.1459%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.8959%" y="341" width="0.0801%" height="15" fill="rgb(213,3,15)" fg:x="873" fg:w="1"/><text x="70.1459%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="69.8959%" y="325" width="0.0801%" height="15" fill="rgb(208,25,28)" fg:x="873" fg:w="1"/><text x="70.1459%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.8959%" y="309" width="0.0801%" height="15" fill="rgb(252,144,25)" fg:x="873" fg:w="1"/><text x="70.1459%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.0560%" y="421" width="0.0801%" height="15" fill="rgb(226,220,25)" fg:x="875" fg:w="1"/><text x="70.3060%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.0560%" y="405" width="0.0801%" height="15" fill="rgb(212,131,28)" fg:x="875" fg:w="1"/><text x="70.3060%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.0560%" y="389" width="0.0801%" height="15" fill="rgb(219,143,52)" fg:x="875" fg:w="1"/><text x="70.3060%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.0560%" y="373" width="0.0801%" height="15" fill="rgb(215,56,7)" fg:x="875" fg:w="1"/><text x="70.3060%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.0560%" y="357" width="0.0801%" height="15" fill="rgb(239,59,51)" fg:x="875" fg:w="1"/><text x="70.3060%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.0560%" y="341" width="0.0801%" height="15" fill="rgb(209,215,4)" fg:x="875" fg:w="1"/><text x="70.3060%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.0560%" y="325" width="0.0801%" height="15" fill="rgb(221,118,39)" fg:x="875" fg:w="1"/><text x="70.3060%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.0560%" y="309" width="0.0801%" height="15" fill="rgb(236,6,44)" fg:x="875" fg:w="1"/><text x="70.3060%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.0560%" y="293" width="0.0801%" height="15" fill="rgb(216,122,9)" fg:x="875" fg:w="1"/><text x="70.3060%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.0560%" y="277" width="0.0801%" height="15" fill="rgb(244,134,42)" fg:x="875" fg:w="1"/><text x="70.3060%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.0560%" y="261" width="0.0801%" height="15" fill="rgb(209,189,35)" fg:x="875" fg:w="1"/><text x="70.3060%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.0560%" y="245" width="0.0801%" height="15" fill="rgb(250,47,36)" fg:x="875" fg:w="1"/><text x="70.3060%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.0560%" y="229" width="0.0801%" height="15" fill="rgb(252,112,4)" fg:x="875" fg:w="1"/><text x="70.3060%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.0560%" y="213" width="0.0801%" height="15" fill="rgb(221,79,51)" fg:x="875" fg:w="1"/><text x="70.3060%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.0560%" y="197" width="0.0801%" height="15" fill="rgb(232,65,53)" fg:x="875" fg:w="1"/><text x="70.3060%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.0560%" y="181" width="0.0801%" height="15" fill="rgb(211,37,7)" fg:x="875" fg:w="1"/><text x="70.3060%" y="191.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="70.1361%" y="421" width="0.0801%" height="15" fill="rgb(234,221,18)" fg:x="876" fg:w="1"/><text x="70.3861%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="70.1361%" y="405" width="0.0801%" height="15" fill="rgb(220,158,26)" fg:x="876" fg:w="1"/><text x="70.3861%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="69.9760%" y="469" width="0.4003%" height="15" fill="rgb(220,70,6)" fg:x="874" fg:w="5"/><text x="70.2260%" y="479.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="70.0560%" y="453" width="0.3203%" height="15" fill="rgb(250,39,48)" fg:x="875" fg:w="4"/><text x="70.3060%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="70.0560%" y="437" width="0.3203%" height="15" fill="rgb(206,40,27)" fg:x="875" fg:w="4"/><text x="70.3060%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="70.2162%" y="421" width="0.1601%" height="15" fill="rgb(247,80,36)" fg:x="877" fg:w="2"/><text x="70.4662%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.2162%" y="405" width="0.1601%" height="15" fill="rgb(222,9,20)" fg:x="877" fg:w="2"/><text x="70.4662%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.2962%" y="389" width="0.0801%" height="15" fill="rgb(217,26,45)" fg:x="878" fg:w="1"/><text x="70.5462%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.2962%" y="373" width="0.0801%" height="15" fill="rgb(221,67,14)" fg:x="878" fg:w="1"/><text x="70.5462%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="70.2962%" y="357" width="0.0801%" height="15" fill="rgb(248,100,24)" fg:x="878" fg:w="1"/><text x="70.5462%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.2962%" y="341" width="0.0801%" height="15" fill="rgb(230,187,16)" fg:x="878" fg:w="1"/><text x="70.5462%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="70.2962%" y="325" width="0.0801%" height="15" fill="rgb(205,108,13)" fg:x="878" fg:w="1"/><text x="70.5462%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.2962%" y="309" width="0.0801%" height="15" fill="rgb(235,71,51)" fg:x="878" fg:w="1"/><text x="70.5462%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.2962%" y="293" width="0.0801%" height="15" fill="rgb(251,172,48)" fg:x="878" fg:w="1"/><text x="70.5462%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.3763%" y="453" width="0.0801%" height="15" fill="rgb(240,96,49)" fg:x="879" fg:w="1"/><text x="70.6263%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.3763%" y="437" width="0.0801%" height="15" fill="rgb(235,46,36)" fg:x="879" fg:w="1"/><text x="70.6263%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.3763%" y="421" width="0.0801%" height="15" fill="rgb(244,3,49)" fg:x="879" fg:w="1"/><text x="70.6263%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.3763%" y="405" width="0.0801%" height="15" fill="rgb(206,78,54)" fg:x="879" fg:w="1"/><text x="70.6263%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.3763%" y="389" width="0.0801%" height="15" fill="rgb(208,85,42)" fg:x="879" fg:w="1"/><text x="70.6263%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.3763%" y="373" width="0.0801%" height="15" fill="rgb(219,196,21)" fg:x="879" fg:w="1"/><text x="70.6263%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.3763%" y="357" width="0.0801%" height="15" fill="rgb(238,19,9)" fg:x="879" fg:w="1"/><text x="70.6263%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.3763%" y="341" width="0.0801%" height="15" fill="rgb(206,86,13)" fg:x="879" fg:w="1"/><text x="70.6263%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.3763%" y="325" width="0.0801%" height="15" fill="rgb(214,123,40)" fg:x="879" fg:w="1"/><text x="70.6263%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.3763%" y="309" width="0.0801%" height="15" fill="rgb(243,53,5)" fg:x="879" fg:w="1"/><text x="70.6263%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.3763%" y="293" width="0.0801%" height="15" fill="rgb(254,186,31)" fg:x="879" fg:w="1"/><text x="70.6263%" y="303.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="70.3763%" y="277" width="0.0801%" height="15" fill="rgb(221,216,25)" fg:x="879" fg:w="1"/><text x="70.6263%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="70.3763%" y="261" width="0.0801%" height="15" fill="rgb(248,107,42)" fg:x="879" fg:w="1"/><text x="70.6263%" y="271.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="70.3763%" y="469" width="0.1601%" height="15" fill="rgb(221,85,43)" fg:x="879" fg:w="2"/><text x="70.6263%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.4564%" y="453" width="0.0801%" height="15" fill="rgb(225,34,24)" fg:x="880" fg:w="1"/><text x="70.7064%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="70.4564%" y="437" width="0.0801%" height="15" fill="rgb(211,119,1)" fg:x="880" fg:w="1"/><text x="70.7064%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.6966%" y="389" width="0.0801%" height="15" fill="rgb(254,216,46)" fg:x="883" fg:w="1"/><text x="70.9466%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="70.7766%" y="213" width="0.1601%" height="15" fill="rgb(238,11,38)" fg:x="884" fg:w="2"/><text x="71.0266%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="70.8567%" y="197" width="0.0801%" height="15" fill="rgb(233,50,15)" fg:x="885" fg:w="1"/><text x="71.1067%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="70.7766%" y="309" width="0.2402%" height="15" fill="rgb(217,181,29)" fg:x="884" fg:w="3"/><text x="71.0266%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="70.7766%" y="293" width="0.2402%" height="15" fill="rgb(214,56,3)" fg:x="884" fg:w="3"/><text x="71.0266%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="70.7766%" y="277" width="0.2402%" height="15" fill="rgb(230,69,45)" fg:x="884" fg:w="3"/><text x="71.0266%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="70.7766%" y="261" width="0.2402%" height="15" fill="rgb(224,201,50)" fg:x="884" fg:w="3"/><text x="71.0266%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="70.7766%" y="245" width="0.2402%" height="15" fill="rgb(217,228,18)" fg:x="884" fg:w="3"/><text x="71.0266%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="70.7766%" y="229" width="0.2402%" height="15" fill="rgb(239,33,44)" fg:x="884" fg:w="3"/><text x="71.0266%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.9367%" y="213" width="0.0801%" height="15" fill="rgb(248,210,23)" fg:x="886" fg:w="1"/><text x="71.1867%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.9367%" y="197" width="0.0801%" height="15" fill="rgb(253,135,8)" fg:x="886" fg:w="1"/><text x="71.1867%" y="207.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="71.0168%" y="309" width="0.0801%" height="15" fill="rgb(217,98,21)" fg:x="887" fg:w="1"/><text x="71.2668%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="71.0168%" y="293" width="0.0801%" height="15" fill="rgb(253,130,21)" fg:x="887" fg:w="1"/><text x="71.2668%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="71.0168%" y="277" width="0.0801%" height="15" fill="rgb(207,81,54)" fg:x="887" fg:w="1"/><text x="71.2668%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.0168%" y="261" width="0.0801%" height="15" fill="rgb(232,48,33)" fg:x="887" fg:w="1"/><text x="71.2668%" y="271.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="71.0168%" y="245" width="0.0801%" height="15" fill="rgb(211,9,35)" fg:x="887" fg:w="1"/><text x="71.2668%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="71.0168%" y="229" width="0.0801%" height="15" fill="rgb(205,152,21)" fg:x="887" fg:w="1"/><text x="71.2668%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.0168%" y="213" width="0.0801%" height="15" fill="rgb(249,21,27)" fg:x="887" fg:w="1"/><text x="71.2668%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="70.7766%" y="341" width="0.4003%" height="15" fill="rgb(252,29,24)" fg:x="884" fg:w="5"/><text x="71.0266%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="70.7766%" y="325" width="0.4003%" height="15" fill="rgb(230,130,50)" fg:x="884" fg:w="5"/><text x="71.0266%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.0969%" y="309" width="0.0801%" height="15" fill="rgb(239,144,14)" fg:x="888" fg:w="1"/><text x="71.3469%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.0969%" y="293" width="0.0801%" height="15" fill="rgb(227,111,50)" fg:x="888" fg:w="1"/><text x="71.3469%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.0969%" y="277" width="0.0801%" height="15" fill="rgb(254,84,20)" fg:x="888" fg:w="1"/><text x="71.3469%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="71.1769%" y="341" width="0.0801%" height="15" fill="rgb(232,90,48)" fg:x="889" fg:w="1"/><text x="71.4269%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="71.1769%" y="325" width="0.0801%" height="15" fill="rgb(253,63,47)" fg:x="889" fg:w="1"/><text x="71.4269%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.1769%" y="309" width="0.0801%" height="15" fill="rgb(251,146,35)" fg:x="889" fg:w="1"/><text x="71.4269%" y="319.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (11 samples, 0.88%)</title><rect x="70.5364%" y="453" width="0.8807%" height="15" fill="rgb(229,192,35)" fg:x="881" fg:w="11"/><text x="70.7864%" y="463.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (11 samples, 0.88%)</title><rect x="70.5364%" y="437" width="0.8807%" height="15" fill="rgb(225,68,9)" fg:x="881" fg:w="11"/><text x="70.7864%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.88%)</title><rect x="70.5364%" y="421" width="0.8807%" height="15" fill="rgb(214,97,34)" fg:x="881" fg:w="11"/><text x="70.7864%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="70.5364%" y="405" width="0.8807%" height="15" fill="rgb(253,31,26)" fg:x="881" fg:w="11"/><text x="70.7864%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.64%)</title><rect x="70.7766%" y="389" width="0.6405%" height="15" fill="rgb(225,151,47)" fg:x="884" fg:w="8"/><text x="71.0266%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="70.7766%" y="373" width="0.6405%" height="15" fill="rgb(206,185,9)" fg:x="884" fg:w="8"/><text x="71.0266%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.64%)</title><rect x="70.7766%" y="357" width="0.6405%" height="15" fill="rgb(249,65,17)" fg:x="884" fg:w="8"/><text x="71.0266%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.2570%" y="341" width="0.1601%" height="15" fill="rgb(220,110,10)" fg:x="890" fg:w="2"/><text x="71.5070%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.3371%" y="325" width="0.0801%" height="15" fill="rgb(222,198,49)" fg:x="891" fg:w="1"/><text x="71.5871%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="71.3371%" y="309" width="0.0801%" height="15" fill="rgb(239,81,13)" fg:x="891" fg:w="1"/><text x="71.5871%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.3371%" y="293" width="0.0801%" height="15" fill="rgb(216,128,11)" fg:x="891" fg:w="1"/><text x="71.5871%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.3371%" y="277" width="0.0801%" height="15" fill="rgb(247,156,8)" fg:x="891" fg:w="1"/><text x="71.5871%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="71.3371%" y="261" width="0.0801%" height="15" fill="rgb(219,173,1)" fg:x="891" fg:w="1"/><text x="71.5871%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.3371%" y="245" width="0.0801%" height="15" fill="rgb(227,42,24)" fg:x="891" fg:w="1"/><text x="71.5871%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.3371%" y="229" width="0.0801%" height="15" fill="rgb(253,219,50)" fg:x="891" fg:w="1"/><text x="71.5871%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="71.3371%" y="213" width="0.0801%" height="15" fill="rgb(215,191,54)" fg:x="891" fg:w="1"/><text x="71.5871%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.3371%" y="197" width="0.0801%" height="15" fill="rgb(238,83,12)" fg:x="891" fg:w="1"/><text x="71.5871%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.3371%" y="181" width="0.0801%" height="15" fill="rgb(205,124,9)" fg:x="891" fg:w="1"/><text x="71.5871%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.3371%" y="165" width="0.0801%" height="15" fill="rgb(253,174,7)" fg:x="891" fg:w="1"/><text x="71.5871%" y="175.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="71.4171%" y="389" width="0.0801%" height="15" fill="rgb(206,134,49)" fg:x="892" fg:w="1"/><text x="71.6671%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="71.4171%" y="405" width="0.1601%" height="15" fill="rgb(221,89,20)" fg:x="892" fg:w="2"/><text x="71.6671%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.4972%" y="389" width="0.0801%" height="15" fill="rgb(240,205,13)" fg:x="893" fg:w="1"/><text x="71.7472%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.5773%" y="405" width="0.0801%" height="15" fill="rgb(237,174,32)" fg:x="894" fg:w="1"/><text x="71.8273%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.6573%" y="373" width="0.0801%" height="15" fill="rgb(226,12,15)" fg:x="895" fg:w="1"/><text x="71.9073%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.6573%" y="357" width="0.0801%" height="15" fill="rgb(245,160,52)" fg:x="895" fg:w="1"/><text x="71.9073%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="71.7374%" y="309" width="0.1601%" height="15" fill="rgb(253,80,21)" fg:x="896" fg:w="2"/><text x="71.9874%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.8975%" y="277" width="0.0801%" height="15" fill="rgb(231,225,22)" fg:x="898" fg:w="1"/><text x="72.1475%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="71.7374%" y="325" width="0.4003%" height="15" fill="rgb(253,185,12)" fg:x="896" fg:w="5"/><text x="71.9874%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="71.8975%" y="309" width="0.2402%" height="15" fill="rgb(234,197,21)" fg:x="898" fg:w="3"/><text x="72.1475%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="71.8975%" y="293" width="0.2402%" height="15" fill="rgb(210,47,30)" fg:x="898" fg:w="3"/><text x="72.1475%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="71.9776%" y="277" width="0.1601%" height="15" fill="rgb(246,139,27)" fg:x="899" fg:w="2"/><text x="72.2276%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="71.9776%" y="261" width="0.1601%" height="15" fill="rgb(226,130,16)" fg:x="899" fg:w="2"/><text x="72.2276%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="72.0576%" y="245" width="0.0801%" height="15" fill="rgb(237,208,20)" fg:x="900" fg:w="1"/><text x="72.3076%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (32 samples, 2.56%)</title><rect x="69.6557%" y="501" width="2.5620%" height="15" fill="rgb(245,186,28)" fg:x="870" fg:w="32"/><text x="69.9057%" y="511.50">&lt;e..</text></g><g><title>engine::internal::Entities::add_persisted (32 samples, 2.56%)</title><rect x="69.6557%" y="485" width="2.5620%" height="15" fill="rgb(238,105,39)" fg:x="870" fg:w="32"/><text x="69.9057%" y="495.50">en..</text></g><g><title>kernel::model::deserialize_entity (21 samples, 1.68%)</title><rect x="70.5364%" y="469" width="1.6813%" height="15" fill="rgb(253,228,11)" fg:x="881" fg:w="21"/><text x="70.7864%" y="479.50"></text></g><g><title>serde_json::de::from_trait (10 samples, 0.80%)</title><rect x="71.4171%" y="453" width="0.8006%" height="15" fill="rgb(224,136,38)" fg:x="892" fg:w="10"/><text x="71.6671%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.80%)</title><rect x="71.4171%" y="437" width="0.8006%" height="15" fill="rgb(211,3,25)" fg:x="892" fg:w="10"/><text x="71.6671%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="71.4171%" y="421" width="0.8006%" height="15" fill="rgb(238,66,34)" fg:x="892" fg:w="10"/><text x="71.6671%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="71.6573%" y="405" width="0.5604%" height="15" fill="rgb(223,188,11)" fg:x="895" fg:w="7"/><text x="71.9073%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="71.6573%" y="389" width="0.5604%" height="15" fill="rgb(221,10,35)" fg:x="895" fg:w="7"/><text x="71.9073%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="71.7374%" y="373" width="0.4804%" height="15" fill="rgb(223,18,44)" fg:x="896" fg:w="6"/><text x="71.9874%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="71.7374%" y="357" width="0.4804%" height="15" fill="rgb(220,97,41)" fg:x="896" fg:w="6"/><text x="71.9874%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="71.7374%" y="341" width="0.4804%" height="15" fill="rgb(206,95,45)" fg:x="896" fg:w="6"/><text x="71.9874%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.1377%" y="325" width="0.0801%" height="15" fill="rgb(209,96,13)" fg:x="901" fg:w="1"/><text x="72.3877%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.1377%" y="309" width="0.0801%" height="15" fill="rgb(237,39,34)" fg:x="901" fg:w="1"/><text x="72.3877%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="72.1377%" y="293" width="0.0801%" height="15" fill="rgb(213,49,47)" fg:x="901" fg:w="1"/><text x="72.3877%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.1377%" y="277" width="0.0801%" height="15" fill="rgb(205,107,27)" fg:x="901" fg:w="1"/><text x="72.3877%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (33 samples, 2.64%)</title><rect x="69.6557%" y="517" width="2.6421%" height="15" fill="rgb(212,142,9)" fg:x="870" fg:w="33"/><text x="69.9057%" y="527.50">&lt;e..</text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="72.2178%" y="501" width="0.0801%" height="15" fill="rgb(226,182,0)" fg:x="902" fg:w="1"/><text x="72.4678%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="72.2178%" y="485" width="0.0801%" height="15" fill="rgb(231,3,53)" fg:x="902" fg:w="1"/><text x="72.4678%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="72.2178%" y="469" width="0.0801%" height="15" fill="rgb(246,111,28)" fg:x="902" fg:w="1"/><text x="72.4678%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="72.2178%" y="453" width="0.0801%" height="15" fill="rgb(254,183,7)" fg:x="902" fg:w="1"/><text x="72.4678%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="72.2178%" y="437" width="0.0801%" height="15" fill="rgb(247,177,28)" fg:x="902" fg:w="1"/><text x="72.4678%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="72.2178%" y="421" width="0.0801%" height="15" fill="rgb(244,43,1)" fg:x="902" fg:w="1"/><text x="72.4678%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="72.2178%" y="405" width="0.0801%" height="15" fill="rgb(207,2,35)" fg:x="902" fg:w="1"/><text x="72.4678%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="72.2178%" y="389" width="0.0801%" height="15" fill="rgb(213,83,22)" fg:x="902" fg:w="1"/><text x="72.4678%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="72.2178%" y="373" width="0.0801%" height="15" fill="rgb(246,212,13)" fg:x="902" fg:w="1"/><text x="72.4678%" y="383.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="72.2178%" y="357" width="0.0801%" height="15" fill="rgb(213,127,46)" fg:x="902" fg:w="1"/><text x="72.4678%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="72.2178%" y="341" width="0.0801%" height="15" fill="rgb(219,215,39)" fg:x="902" fg:w="1"/><text x="72.4678%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="72.2178%" y="325" width="0.0801%" height="15" fill="rgb(227,99,17)" fg:x="902" fg:w="1"/><text x="72.4678%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="72.2178%" y="309" width="0.0801%" height="15" fill="rgb(208,155,18)" fg:x="902" fg:w="1"/><text x="72.4678%" y="319.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="72.2178%" y="293" width="0.0801%" height="15" fill="rgb(223,204,38)" fg:x="902" fg:w="1"/><text x="72.4678%" y="303.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="72.2178%" y="277" width="0.0801%" height="15" fill="rgb(212,114,21)" fg:x="902" fg:w="1"/><text x="72.4678%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.2178%" y="261" width="0.0801%" height="15" fill="rgb(250,74,13)" fg:x="902" fg:w="1"/><text x="72.4678%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.2178%" y="245" width="0.0801%" height="15" fill="rgb(234,7,1)" fg:x="902" fg:w="1"/><text x="72.4678%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="72.2178%" y="229" width="0.0801%" height="15" fill="rgb(207,138,31)" fg:x="902" fg:w="1"/><text x="72.4678%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="72.2178%" y="213" width="0.0801%" height="15" fill="rgb(215,186,42)" fg:x="902" fg:w="1"/><text x="72.4678%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="72.2178%" y="197" width="0.0801%" height="15" fill="rgb(229,205,49)" fg:x="902" fg:w="1"/><text x="72.4678%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="72.2178%" y="181" width="0.0801%" height="15" fill="rgb(216,156,32)" fg:x="902" fg:w="1"/><text x="72.4678%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="72.2178%" y="165" width="0.0801%" height="15" fill="rgb(238,7,21)" fg:x="902" fg:w="1"/><text x="72.4678%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="72.2178%" y="149" width="0.0801%" height="15" fill="rgb(249,190,22)" fg:x="902" fg:w="1"/><text x="72.4678%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="72.2178%" y="133" width="0.0801%" height="15" fill="rgb(253,51,31)" fg:x="902" fg:w="1"/><text x="72.4678%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="72.2178%" y="117" width="0.0801%" height="15" fill="rgb(237,90,54)" fg:x="902" fg:w="1"/><text x="72.4678%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="72.2178%" y="101" width="0.0801%" height="15" fill="rgb(250,214,33)" fg:x="902" fg:w="1"/><text x="72.4678%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="72.2178%" y="85" width="0.0801%" height="15" fill="rgb(237,10,49)" fg:x="902" fg:w="1"/><text x="72.4678%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="72.2178%" y="69" width="0.0801%" height="15" fill="rgb(241,56,36)" fg:x="902" fg:w="1"/><text x="72.4678%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="72.2178%" y="53" width="0.0801%" height="15" fill="rgb(227,164,12)" fg:x="902" fg:w="1"/><text x="72.4678%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="72.2178%" y="37" width="0.0801%" height="15" fill="rgb(249,149,35)" fg:x="902" fg:w="1"/><text x="72.4678%" y="47.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (3 samples, 0.24%)</title><rect x="72.2978%" y="517" width="0.2402%" height="15" fill="rgb(238,227,50)" fg:x="903" fg:w="3"/><text x="72.5478%" y="527.50"></text></g><g><title>engine::users::model::username_to_key (3 samples, 0.24%)</title><rect x="72.2978%" y="501" width="0.2402%" height="15" fill="rgb(235,102,45)" fg:x="903" fg:w="3"/><text x="72.5478%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="72.3779%" y="485" width="0.1601%" height="15" fill="rgb(211,10,38)" fg:x="904" fg:w="2"/><text x="72.6279%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.4580%" y="469" width="0.0801%" height="15" fill="rgb(219,77,48)" fg:x="905" fg:w="1"/><text x="72.7080%" y="479.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.4580%" y="453" width="0.0801%" height="15" fill="rgb(246,6,15)" fg:x="905" fg:w="1"/><text x="72.7080%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.4580%" y="437" width="0.0801%" height="15" fill="rgb(207,220,2)" fg:x="905" fg:w="1"/><text x="72.7080%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.4580%" y="421" width="0.0801%" height="15" fill="rgb(242,48,14)" fg:x="905" fg:w="1"/><text x="72.7080%" y="431.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (124 samples, 9.93%)</title><rect x="62.6902%" y="549" width="9.9279%" height="15" fill="rgb(218,19,27)" fg:x="783" fg:w="124"/><text x="62.9402%" y="559.50">&lt;engine::perfo..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (37 samples, 2.96%)</title><rect x="69.6557%" y="533" width="2.9624%" height="15" fill="rgb(228,0,35)" fg:x="870" fg:w="37"/><text x="69.9057%" y="543.50">eng..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="72.5380%" y="517" width="0.0801%" height="15" fill="rgb(244,142,54)" fg:x="906" fg:w="1"/><text x="72.7880%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="72.5380%" y="501" width="0.0801%" height="15" fill="rgb(243,217,40)" fg:x="906" fg:w="1"/><text x="72.7880%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="72.5380%" y="485" width="0.0801%" height="15" fill="rgb(207,114,16)" fg:x="906" fg:w="1"/><text x="72.7880%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.5380%" y="469" width="0.0801%" height="15" fill="rgb(224,33,25)" fg:x="906" fg:w="1"/><text x="72.7880%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.5380%" y="453" width="0.0801%" height="15" fill="rgb(230,93,54)" fg:x="906" fg:w="1"/><text x="72.7880%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.5380%" y="437" width="0.0801%" height="15" fill="rgb(224,56,24)" fg:x="906" fg:w="1"/><text x="72.7880%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.5380%" y="421" width="0.0801%" height="15" fill="rgb(235,189,50)" fg:x="906" fg:w="1"/><text x="72.7880%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.5380%" y="405" width="0.0801%" height="15" fill="rgb(242,173,8)" fg:x="906" fg:w="1"/><text x="72.7880%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.5380%" y="389" width="0.0801%" height="15" fill="rgb(209,206,10)" fg:x="906" fg:w="1"/><text x="72.7880%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.5380%" y="373" width="0.0801%" height="15" fill="rgb(213,182,44)" fg:x="906" fg:w="1"/><text x="72.7880%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.5380%" y="357" width="0.0801%" height="15" fill="rgb(243,51,15)" fg:x="906" fg:w="1"/><text x="72.7880%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.5380%" y="341" width="0.0801%" height="15" fill="rgb(241,13,14)" fg:x="906" fg:w="1"/><text x="72.7880%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.5380%" y="325" width="0.0801%" height="15" fill="rgb(239,147,24)" fg:x="906" fg:w="1"/><text x="72.7880%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.5380%" y="309" width="0.0801%" height="15" fill="rgb(223,129,16)" fg:x="906" fg:w="1"/><text x="72.7880%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.5380%" y="293" width="0.0801%" height="15" fill="rgb(209,169,13)" fg:x="906" fg:w="1"/><text x="72.7880%" y="303.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (128 samples, 10.25%)</title><rect x="62.6902%" y="565" width="10.2482%" height="15" fill="rgb(235,159,41)" fg:x="783" fg:w="128"/><text x="62.9402%" y="575.50">&lt;plugins_core::..</text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (4 samples, 0.32%)</title><rect x="72.6181%" y="549" width="0.3203%" height="15" fill="rgb(223,219,48)" fg:x="907" fg:w="4"/><text x="72.8681%" y="559.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (4 samples, 0.32%)</title><rect x="72.6181%" y="533" width="0.3203%" height="15" fill="rgb(236,80,13)" fg:x="907" fg:w="4"/><text x="72.8681%" y="543.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (3 samples, 0.24%)</title><rect x="72.6982%" y="517" width="0.2402%" height="15" fill="rgb(213,5,6)" fg:x="908" fg:w="3"/><text x="72.9482%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.16%)</title><rect x="72.7782%" y="501" width="0.1601%" height="15" fill="rgb(205,59,21)" fg:x="909" fg:w="2"/><text x="73.0282%" y="511.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="72.9384%" y="565" width="0.0801%" height="15" fill="rgb(247,137,35)" fg:x="911" fg:w="1"/><text x="73.1884%" y="575.50"></text></g><g><title>&lt;plugins_core::looking::parser::LookActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="72.9384%" y="549" width="0.0801%" height="15" fill="rgb(242,208,28)" fg:x="911" fg:w="1"/><text x="73.1884%" y="559.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Evaluator&gt;::evaluate (2 samples, 0.16%)</title><rect x="73.0184%" y="565" width="0.1601%" height="15" fill="rgb(245,62,25)" fg:x="912" fg:w="2"/><text x="73.2684%" y="575.50"></text></g><g><title>&lt;plugins_core::moving::parser::GoActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="73.0184%" y="549" width="0.1601%" height="15" fill="rgb(233,99,54)" fg:x="912" fg:w="2"/><text x="73.2684%" y="559.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="73.0985%" y="533" width="0.0801%" height="15" fill="rgb(213,10,37)" fg:x="913" fg:w="1"/><text x="73.3485%" y="543.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (135 samples, 10.81%)</title><rect x="62.4500%" y="629" width="10.8086%" height="15" fill="rgb(235,143,30)" fg:x="780" fg:w="135"/><text x="62.7000%" y="639.50">&lt;kernel::plugins..</text></g><g><title>core::iter::adapters::try_process (134 samples, 10.73%)</title><rect x="62.5300%" y="613" width="10.7286%" height="15" fill="rgb(250,146,33)" fg:x="781" fg:w="134"/><text x="62.7800%" y="623.50">core::iter::adap..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (134 samples, 10.73%)</title><rect x="62.5300%" y="597" width="10.7286%" height="15" fill="rgb(226,198,42)" fg:x="781" fg:w="134"/><text x="62.7800%" y="607.50">&lt;alloc::vec::Vec..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (134 samples, 10.73%)</title><rect x="62.5300%" y="581" width="10.7286%" height="15" fill="rgb(222,55,6)" fg:x="781" fg:w="134"/><text x="62.7800%" y="591.50">&lt;core::iter::ada..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="73.1785%" y="565" width="0.0801%" height="15" fill="rgb(213,224,31)" fg:x="914" fg:w="1"/><text x="73.4285%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.2586%" y="485" width="0.0801%" height="15" fill="rgb(226,103,35)" fg:x="915" fg:w="1"/><text x="73.5086%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.2586%" y="469" width="0.0801%" height="15" fill="rgb(205,66,45)" fg:x="915" fg:w="1"/><text x="73.5086%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="73.2586%" y="453" width="0.0801%" height="15" fill="rgb(226,51,42)" fg:x="915" fg:w="1"/><text x="73.5086%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="73.2586%" y="437" width="0.0801%" height="15" fill="rgb(206,69,1)" fg:x="915" fg:w="1"/><text x="73.5086%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="73.2586%" y="421" width="0.0801%" height="15" fill="rgb(213,228,47)" fg:x="915" fg:w="1"/><text x="73.5086%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="73.2586%" y="405" width="0.0801%" height="15" fill="rgb(224,204,18)" fg:x="915" fg:w="1"/><text x="73.5086%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="73.2586%" y="389" width="0.0801%" height="15" fill="rgb(253,187,47)" fg:x="915" fg:w="1"/><text x="73.5086%" y="399.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="73.2586%" y="629" width="0.2402%" height="15" fill="rgb(232,61,2)" fg:x="915" fg:w="3"/><text x="73.5086%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="73.2586%" y="613" width="0.2402%" height="15" fill="rgb(213,132,35)" fg:x="915" fg:w="3"/><text x="73.5086%" y="623.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="73.2586%" y="597" width="0.2402%" height="15" fill="rgb(247,33,21)" fg:x="915" fg:w="3"/><text x="73.5086%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="73.2586%" y="581" width="0.2402%" height="15" fill="rgb(233,71,46)" fg:x="915" fg:w="3"/><text x="73.5086%" y="591.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="73.2586%" y="565" width="0.2402%" height="15" fill="rgb(222,173,43)" fg:x="915" fg:w="3"/><text x="73.5086%" y="575.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (3 samples, 0.24%)</title><rect x="73.2586%" y="549" width="0.2402%" height="15" fill="rgb(249,218,47)" fg:x="915" fg:w="3"/><text x="73.5086%" y="559.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (3 samples, 0.24%)</title><rect x="73.2586%" y="533" width="0.2402%" height="15" fill="rgb(254,185,48)" fg:x="915" fg:w="3"/><text x="73.5086%" y="543.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="73.2586%" y="517" width="0.2402%" height="15" fill="rgb(252,165,50)" fg:x="915" fg:w="3"/><text x="73.5086%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="73.2586%" y="501" width="0.2402%" height="15" fill="rgb(206,219,6)" fg:x="915" fg:w="3"/><text x="73.5086%" y="511.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.16%)</title><rect x="73.3387%" y="485" width="0.1601%" height="15" fill="rgb(212,212,45)" fg:x="916" fg:w="2"/><text x="73.5887%" y="495.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (2 samples, 0.16%)</title><rect x="73.3387%" y="469" width="0.1601%" height="15" fill="rgb(221,31,9)" fg:x="916" fg:w="2"/><text x="73.5887%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.4187%" y="453" width="0.0801%" height="15" fill="rgb(234,198,39)" fg:x="917" fg:w="1"/><text x="73.6687%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.4187%" y="437" width="0.0801%" height="15" fill="rgb(252,145,46)" fg:x="917" fg:w="1"/><text x="73.6687%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="73.4187%" y="421" width="0.0801%" height="15" fill="rgb(237,149,0)" fg:x="917" fg:w="1"/><text x="73.6687%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="73.4187%" y="405" width="0.0801%" height="15" fill="rgb(229,65,5)" fg:x="917" fg:w="1"/><text x="73.6687%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="73.4187%" y="389" width="0.0801%" height="15" fill="rgb(235,60,36)" fg:x="917" fg:w="1"/><text x="73.6687%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="73.4187%" y="373" width="0.0801%" height="15" fill="rgb(222,47,18)" fg:x="917" fg:w="1"/><text x="73.6687%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="73.4187%" y="357" width="0.0801%" height="15" fill="rgb(235,114,22)" fg:x="917" fg:w="1"/><text x="73.6687%" y="367.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (140 samples, 11.21%)</title><rect x="62.4500%" y="661" width="11.2090%" height="15" fill="rgb(209,167,11)" fg:x="780" fg:w="140"/><text x="62.7000%" y="671.50">engine::session:..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (140 samples, 11.21%)</title><rect x="62.4500%" y="645" width="11.2090%" height="15" fill="rgb(251,73,18)" fg:x="780" fg:w="140"/><text x="62.7000%" y="655.50">engine::perform:..</text></g><g><title>std::time::Instant::elapsed (2 samples, 0.16%)</title><rect x="73.4988%" y="629" width="0.1601%" height="15" fill="rgb(217,60,17)" fg:x="918" fg:w="2"/><text x="73.7488%" y="639.50"></text></g><g><title>std::time::Instant::now (2 samples, 0.16%)</title><rect x="73.4988%" y="613" width="0.1601%" height="15" fill="rgb(224,36,37)" fg:x="918" fg:w="2"/><text x="73.7488%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (2 samples, 0.16%)</title><rect x="73.4988%" y="597" width="0.1601%" height="15" fill="rgb(211,21,32)" fg:x="918" fg:w="2"/><text x="73.7488%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="73.4988%" y="581" width="0.1601%" height="15" fill="rgb(231,55,48)" fg:x="918" fg:w="2"/><text x="73.7488%" y="591.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="73.4988%" y="565" width="0.1601%" height="15" fill="rgb(227,42,18)" fg:x="918" fg:w="2"/><text x="73.7488%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (922 samples, 73.82%)</title><rect x="0.0000%" y="709" width="73.8191%" height="15" fill="rgb(217,2,27)" fg:x="0" fg:w="922"/><text x="0.2500%" y="719.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (922 samples, 73.82%)</title><rect x="0.0000%" y="693" width="73.8191%" height="15" fill="rgb(251,138,23)" fg:x="0" fg:w="922"/><text x="0.2500%" y="703.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (922 samples, 73.82%)</title><rect x="0.0000%" y="677" width="73.8191%" height="15" fill="rgb(226,184,11)" fg:x="0" fg:w="922"/><text x="0.2500%" y="687.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (2 samples, 0.16%)</title><rect x="73.6589%" y="661" width="0.1601%" height="15" fill="rgb(242,142,12)" fg:x="920" fg:w="2"/><text x="73.9089%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::perform::StandardPerformer&gt;&gt; (2 samples, 0.16%)</title><rect x="73.8191%" y="645" width="0.1601%" height="15" fill="rgb(234,187,18)" fg:x="922" fg:w="2"/><text x="74.0691%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="73.8991%" y="629" width="0.0801%" height="15" fill="rgb(237,44,42)" fg:x="923" fg:w="1"/><text x="74.1491%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.8991%" y="613" width="0.0801%" height="15" fill="rgb(211,90,23)" fg:x="923" fg:w="1"/><text x="74.1491%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.0592%" y="533" width="0.0801%" height="15" fill="rgb(207,81,18)" fg:x="925" fg:w="1"/><text x="74.3092%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.1393%" y="533" width="0.0801%" height="15" fill="rgb(222,107,28)" fg:x="926" fg:w="1"/><text x="74.3893%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="74.2194%" y="517" width="0.1601%" height="15" fill="rgb(237,83,52)" fg:x="927" fg:w="2"/><text x="74.4694%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="74.2194%" y="501" width="0.1601%" height="15" fill="rgb(208,67,11)" fg:x="927" fg:w="2"/><text x="74.4694%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="74.2194%" y="485" width="0.1601%" height="15" fill="rgb(249,157,49)" fg:x="927" fg:w="2"/><text x="74.4694%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.3795%" y="517" width="0.0801%" height="15" fill="rgb(243,200,1)" fg:x="929" fg:w="1"/><text x="74.6295%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.4596%" y="501" width="0.0801%" height="15" fill="rgb(225,162,37)" fg:x="930" fg:w="1"/><text x="74.7096%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.80%)</title><rect x="73.8191%" y="661" width="0.8006%" height="15" fill="rgb(242,92,13)" fg:x="922" fg:w="10"/><text x="74.0691%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::State&gt; (8 samples, 0.64%)</title><rect x="73.9792%" y="645" width="0.6405%" height="15" fill="rgb(220,43,36)" fg:x="924" fg:w="8"/><text x="74.2292%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="73.9792%" y="629" width="0.6405%" height="15" fill="rgb(213,165,48)" fg:x="924" fg:w="8"/><text x="74.2292%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (8 samples, 0.64%)</title><rect x="73.9792%" y="613" width="0.6405%" height="15" fill="rgb(227,200,9)" fg:x="924" fg:w="8"/><text x="74.2292%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="73.9792%" y="597" width="0.6405%" height="15" fill="rgb(221,222,28)" fg:x="924" fg:w="8"/><text x="74.2292%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="73.9792%" y="581" width="0.6405%" height="15" fill="rgb(223,142,26)" fg:x="924" fg:w="8"/><text x="74.2292%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (7 samples, 0.56%)</title><rect x="74.0592%" y="565" width="0.5604%" height="15" fill="rgb(243,46,9)" fg:x="925" fg:w="7"/><text x="74.3092%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="74.0592%" y="549" width="0.5604%" height="15" fill="rgb(250,56,11)" fg:x="925" fg:w="7"/><text x="74.3092%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="74.2194%" y="533" width="0.4003%" height="15" fill="rgb(229,113,5)" fg:x="927" fg:w="5"/><text x="74.4694%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="74.4596%" y="517" width="0.1601%" height="15" fill="rgb(244,108,28)" fg:x="930" fg:w="2"/><text x="74.7096%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.5396%" y="501" width="0.0801%" height="15" fill="rgb(242,119,50)" fg:x="931" fg:w="1"/><text x="74.7896%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.5396%" y="485" width="0.0801%" height="15" fill="rgb(224,164,23)" fg:x="931" fg:w="1"/><text x="74.7896%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="74.6197%" y="549" width="0.1601%" height="15" fill="rgb(214,227,44)" fg:x="932" fg:w="2"/><text x="74.8697%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="74.6197%" y="533" width="0.1601%" height="15" fill="rgb(238,202,4)" fg:x="932" fg:w="2"/><text x="74.8697%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="74.6197%" y="517" width="0.1601%" height="15" fill="rgb(213,190,30)" fg:x="932" fg:w="2"/><text x="74.8697%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="74.6197%" y="501" width="0.1601%" height="15" fill="rgb(239,15,2)" fg:x="932" fg:w="2"/><text x="74.8697%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.6197%" y="485" width="0.1601%" height="15" fill="rgb(249,229,4)" fg:x="932" fg:w="2"/><text x="74.8697%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="74.6197%" y="469" width="0.1601%" height="15" fill="rgb(239,75,44)" fg:x="932" fg:w="2"/><text x="74.8697%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6998%" y="453" width="0.0801%" height="15" fill="rgb(251,206,23)" fg:x="933" fg:w="1"/><text x="74.9498%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.6998%" y="437" width="0.0801%" height="15" fill="rgb(215,208,0)" fg:x="933" fg:w="1"/><text x="74.9498%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6998%" y="421" width="0.0801%" height="15" fill="rgb(230,75,50)" fg:x="933" fg:w="1"/><text x="74.9498%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="74.6998%" y="405" width="0.0801%" height="15" fill="rgb(246,180,39)" fg:x="933" fg:w="1"/><text x="74.9498%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6998%" y="389" width="0.0801%" height="15" fill="rgb(249,175,24)" fg:x="933" fg:w="1"/><text x="74.9498%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.6998%" y="373" width="0.0801%" height="15" fill="rgb(247,176,22)" fg:x="933" fg:w="1"/><text x="74.9498%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.7798%" y="453" width="0.0801%" height="15" fill="rgb(241,100,24)" fg:x="934" fg:w="1"/><text x="75.0298%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.7798%" y="437" width="0.0801%" height="15" fill="rgb(233,4,35)" fg:x="934" fg:w="1"/><text x="75.0298%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="74.6197%" y="581" width="0.3203%" height="15" fill="rgb(211,164,46)" fg:x="932" fg:w="4"/><text x="74.8697%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="74.6197%" y="565" width="0.3203%" height="15" fill="rgb(242,99,53)" fg:x="932" fg:w="4"/><text x="74.8697%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="74.7798%" y="549" width="0.1601%" height="15" fill="rgb(243,45,33)" fg:x="934" fg:w="2"/><text x="75.0298%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="74.7798%" y="533" width="0.1601%" height="15" fill="rgb(217,55,21)" fg:x="934" fg:w="2"/><text x="75.0298%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="74.7798%" y="517" width="0.1601%" height="15" fill="rgb(245,145,46)" fg:x="934" fg:w="2"/><text x="75.0298%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.7798%" y="501" width="0.1601%" height="15" fill="rgb(215,112,45)" fg:x="934" fg:w="2"/><text x="75.0298%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.7798%" y="485" width="0.1601%" height="15" fill="rgb(228,104,16)" fg:x="934" fg:w="2"/><text x="75.0298%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.7798%" y="469" width="0.1601%" height="15" fill="rgb(239,186,38)" fg:x="934" fg:w="2"/><text x="75.0298%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.8599%" y="453" width="0.0801%" height="15" fill="rgb(228,38,35)" fg:x="935" fg:w="1"/><text x="75.1099%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.8599%" y="437" width="0.0801%" height="15" fill="rgb(251,42,40)" fg:x="935" fg:w="1"/><text x="75.1099%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.8599%" y="421" width="0.0801%" height="15" fill="rgb(210,51,19)" fg:x="935" fg:w="1"/><text x="75.1099%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.8599%" y="405" width="0.0801%" height="15" fill="rgb(236,94,42)" fg:x="935" fg:w="1"/><text x="75.1099%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.8599%" y="389" width="0.0801%" height="15" fill="rgb(239,167,16)" fg:x="935" fg:w="1"/><text x="75.1099%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.8599%" y="373" width="0.0801%" height="15" fill="rgb(252,175,31)" fg:x="935" fg:w="1"/><text x="75.1099%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.8599%" y="357" width="0.0801%" height="15" fill="rgb(206,166,30)" fg:x="935" fg:w="1"/><text x="75.1099%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.8599%" y="341" width="0.0801%" height="15" fill="rgb(206,209,37)" fg:x="935" fg:w="1"/><text x="75.1099%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.8599%" y="325" width="0.0801%" height="15" fill="rgb(226,91,4)" fg:x="935" fg:w="1"/><text x="75.1099%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.8599%" y="309" width="0.0801%" height="15" fill="rgb(222,167,0)" fg:x="935" fg:w="1"/><text x="75.1099%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.8599%" y="293" width="0.0801%" height="15" fill="rgb(211,70,14)" fg:x="935" fg:w="1"/><text x="75.1099%" y="303.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="74.8599%" y="277" width="0.0801%" height="15" fill="rgb(214,84,42)" fg:x="935" fg:w="1"/><text x="75.1099%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="74.8599%" y="261" width="0.0801%" height="15" fill="rgb(235,157,37)" fg:x="935" fg:w="1"/><text x="75.1099%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="74.9400%" y="533" width="0.0801%" height="15" fill="rgb(225,13,6)" fg:x="936" fg:w="1"/><text x="75.1900%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="74.9400%" y="581" width="0.1601%" height="15" fill="rgb(205,202,1)" fg:x="936" fg:w="2"/><text x="75.1900%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="74.9400%" y="565" width="0.1601%" height="15" fill="rgb(232,195,26)" fg:x="936" fg:w="2"/><text x="75.1900%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="74.9400%" y="549" width="0.1601%" height="15" fill="rgb(208,102,26)" fg:x="936" fg:w="2"/><text x="75.1900%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.0200%" y="533" width="0.0801%" height="15" fill="rgb(215,41,39)" fg:x="937" fg:w="1"/><text x="75.2700%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.0200%" y="517" width="0.0801%" height="15" fill="rgb(247,139,11)" fg:x="937" fg:w="1"/><text x="75.2700%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.0200%" y="501" width="0.0801%" height="15" fill="rgb(243,99,6)" fg:x="937" fg:w="1"/><text x="75.2700%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.0200%" y="485" width="0.0801%" height="15" fill="rgb(230,168,48)" fg:x="937" fg:w="1"/><text x="75.2700%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="75.0200%" y="469" width="0.0801%" height="15" fill="rgb(238,227,13)" fg:x="937" fg:w="1"/><text x="75.2700%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.0200%" y="453" width="0.0801%" height="15" fill="rgb(209,109,13)" fg:x="937" fg:w="1"/><text x="75.2700%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.0200%" y="437" width="0.0801%" height="15" fill="rgb(228,195,1)" fg:x="937" fg:w="1"/><text x="75.2700%" y="447.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="75.1001%" y="581" width="0.0801%" height="15" fill="rgb(230,218,0)" fg:x="938" fg:w="1"/><text x="75.3501%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.1001%" y="565" width="0.0801%" height="15" fill="rgb(206,1,45)" fg:x="938" fg:w="1"/><text x="75.3501%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="75.1001%" y="549" width="0.0801%" height="15" fill="rgb(209,124,26)" fg:x="938" fg:w="1"/><text x="75.3501%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="75.1001%" y="533" width="0.0801%" height="15" fill="rgb(220,59,8)" fg:x="938" fg:w="1"/><text x="75.3501%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.1801%" y="469" width="0.0801%" height="15" fill="rgb(251,41,37)" fg:x="939" fg:w="1"/><text x="75.4301%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.2602%" y="469" width="0.0801%" height="15" fill="rgb(239,152,21)" fg:x="940" fg:w="1"/><text x="75.5102%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.3403%" y="453" width="0.0801%" height="15" fill="rgb(226,32,1)" fg:x="941" fg:w="1"/><text x="75.5903%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.3403%" y="437" width="0.0801%" height="15" fill="rgb(230,154,36)" fg:x="941" fg:w="1"/><text x="75.5903%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.3403%" y="421" width="0.0801%" height="15" fill="rgb(208,228,43)" fg:x="941" fg:w="1"/><text x="75.5903%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.3403%" y="405" width="0.0801%" height="15" fill="rgb(214,203,3)" fg:x="941" fg:w="1"/><text x="75.5903%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.3403%" y="389" width="0.0801%" height="15" fill="rgb(207,149,29)" fg:x="941" fg:w="1"/><text x="75.5903%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.3403%" y="373" width="0.0801%" height="15" fill="rgb(250,105,7)" fg:x="941" fg:w="1"/><text x="75.5903%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.3403%" y="357" width="0.0801%" height="15" fill="rgb(232,222,16)" fg:x="941" fg:w="1"/><text x="75.5903%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.3403%" y="341" width="0.0801%" height="15" fill="rgb(209,32,24)" fg:x="941" fg:w="1"/><text x="75.5903%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.3403%" y="325" width="0.0801%" height="15" fill="rgb(225,13,6)" fg:x="941" fg:w="1"/><text x="75.5903%" y="335.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (4 samples, 0.32%)</title><rect x="75.1801%" y="565" width="0.3203%" height="15" fill="rgb(245,226,26)" fg:x="939" fg:w="4"/><text x="75.4301%" y="575.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (4 samples, 0.32%)</title><rect x="75.1801%" y="549" width="0.3203%" height="15" fill="rgb(229,178,27)" fg:x="939" fg:w="4"/><text x="75.4301%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="75.1801%" y="533" width="0.3203%" height="15" fill="rgb(205,227,28)" fg:x="939" fg:w="4"/><text x="75.4301%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="75.1801%" y="517" width="0.3203%" height="15" fill="rgb(210,191,45)" fg:x="939" fg:w="4"/><text x="75.4301%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="75.1801%" y="501" width="0.3203%" height="15" fill="rgb(206,124,16)" fg:x="939" fg:w="4"/><text x="75.4301%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="75.1801%" y="485" width="0.3203%" height="15" fill="rgb(210,162,0)" fg:x="939" fg:w="4"/><text x="75.4301%" y="495.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="75.3403%" y="469" width="0.1601%" height="15" fill="rgb(211,54,38)" fg:x="941" fg:w="2"/><text x="75.5903%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.4203%" y="453" width="0.0801%" height="15" fill="rgb(248,192,3)" fg:x="942" fg:w="1"/><text x="75.6703%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.4203%" y="437" width="0.0801%" height="15" fill="rgb(233,187,18)" fg:x="942" fg:w="1"/><text x="75.6703%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.4203%" y="421" width="0.0801%" height="15" fill="rgb(237,208,14)" fg:x="942" fg:w="1"/><text x="75.6703%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.5004%" y="517" width="0.0801%" height="15" fill="rgb(212,77,1)" fg:x="943" fg:w="1"/><text x="75.7504%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.5004%" y="501" width="0.0801%" height="15" fill="rgb(210,163,22)" fg:x="943" fg:w="1"/><text x="75.7504%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.5805%" y="485" width="0.0801%" height="15" fill="rgb(250,58,28)" fg:x="944" fg:w="1"/><text x="75.8305%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.5805%" y="469" width="0.0801%" height="15" fill="rgb(254,28,41)" fg:x="944" fg:w="1"/><text x="75.8305%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (14 samples, 1.12%)</title><rect x="74.6197%" y="613" width="1.1209%" height="15" fill="rgb(237,162,36)" fg:x="932" fg:w="14"/><text x="74.8697%" y="623.50"></text></g><g><title>engine::internal::Entities::add_persisted (14 samples, 1.12%)</title><rect x="74.6197%" y="597" width="1.1209%" height="15" fill="rgb(232,56,6)" fg:x="932" fg:w="14"/><text x="74.8697%" y="607.50"></text></g><g><title>kernel::model::deserialize_entity (7 samples, 0.56%)</title><rect x="75.1801%" y="581" width="0.5604%" height="15" fill="rgb(216,127,42)" fg:x="939" fg:w="7"/><text x="75.4301%" y="591.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="75.5004%" y="565" width="0.2402%" height="15" fill="rgb(241,69,15)" fg:x="943" fg:w="3"/><text x="75.7504%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="75.5004%" y="549" width="0.2402%" height="15" fill="rgb(227,180,19)" fg:x="943" fg:w="3"/><text x="75.7504%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="75.5004%" y="533" width="0.2402%" height="15" fill="rgb(231,188,29)" fg:x="943" fg:w="3"/><text x="75.7504%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="75.5805%" y="517" width="0.1601%" height="15" fill="rgb(224,176,27)" fg:x="944" fg:w="2"/><text x="75.8305%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.5805%" y="501" width="0.1601%" height="15" fill="rgb(249,214,19)" fg:x="944" fg:w="2"/><text x="75.8305%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.6605%" y="485" width="0.0801%" height="15" fill="rgb(240,0,4)" fg:x="945" fg:w="1"/><text x="75.9105%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (15 samples, 1.20%)</title><rect x="74.6197%" y="629" width="1.2010%" height="15" fill="rgb(233,28,41)" fg:x="932" fg:w="15"/><text x="74.8697%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="75.7406%" y="613" width="0.0801%" height="15" fill="rgb(220,90,51)" fg:x="946" fg:w="1"/><text x="75.9906%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="75.7406%" y="597" width="0.0801%" height="15" fill="rgb(250,52,22)" fg:x="946" fg:w="1"/><text x="75.9906%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="75.7406%" y="581" width="0.0801%" height="15" fill="rgb(231,152,36)" fg:x="946" fg:w="1"/><text x="75.9906%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="75.7406%" y="565" width="0.0801%" height="15" fill="rgb(250,218,4)" fg:x="946" fg:w="1"/><text x="75.9906%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="75.7406%" y="549" width="0.0801%" height="15" fill="rgb(210,38,21)" fg:x="946" fg:w="1"/><text x="75.9906%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="75.7406%" y="533" width="0.0801%" height="15" fill="rgb(230,75,13)" fg:x="946" fg:w="1"/><text x="75.9906%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="75.7406%" y="517" width="0.0801%" height="15" fill="rgb(250,68,53)" fg:x="946" fg:w="1"/><text x="75.9906%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="75.7406%" y="501" width="0.0801%" height="15" fill="rgb(250,210,16)" fg:x="946" fg:w="1"/><text x="75.9906%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.7406%" y="485" width="0.0801%" height="15" fill="rgb(240,132,5)" fg:x="946" fg:w="1"/><text x="75.9906%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.7406%" y="469" width="0.0801%" height="15" fill="rgb(222,148,48)" fg:x="946" fg:w="1"/><text x="75.9906%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="75.7406%" y="453" width="0.0801%" height="15" fill="rgb(247,181,24)" fg:x="946" fg:w="1"/><text x="75.9906%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="75.7406%" y="437" width="0.0801%" height="15" fill="rgb(239,5,31)" fg:x="946" fg:w="1"/><text x="75.9906%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="75.7406%" y="421" width="0.0801%" height="15" fill="rgb(241,152,38)" fg:x="946" fg:w="1"/><text x="75.9906%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="75.7406%" y="405" width="0.0801%" height="15" fill="rgb(246,200,37)" fg:x="946" fg:w="1"/><text x="75.9906%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="75.7406%" y="389" width="0.0801%" height="15" fill="rgb(243,210,26)" fg:x="946" fg:w="1"/><text x="75.9906%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="75.7406%" y="373" width="0.0801%" height="15" fill="rgb(222,22,22)" fg:x="946" fg:w="1"/><text x="75.9906%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="75.7406%" y="357" width="0.0801%" height="15" fill="rgb(208,129,28)" fg:x="946" fg:w="1"/><text x="75.9906%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="75.7406%" y="341" width="0.0801%" height="15" fill="rgb(254,169,28)" fg:x="946" fg:w="1"/><text x="75.9906%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.7406%" y="325" width="0.0801%" height="15" fill="rgb(225,45,17)" fg:x="946" fg:w="1"/><text x="75.9906%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.7406%" y="309" width="0.0801%" height="15" fill="rgb(232,199,2)" fg:x="946" fg:w="1"/><text x="75.9906%" y="319.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="75.8207%" y="629" width="0.0801%" height="15" fill="rgb(235,33,40)" fg:x="947" fg:w="1"/><text x="76.0707%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.8207%" y="613" width="0.0801%" height="15" fill="rgb(237,89,50)" fg:x="947" fg:w="1"/><text x="76.0707%" y="623.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="75.9007%" y="629" width="0.0801%" height="15" fill="rgb(238,126,5)" fg:x="948" fg:w="1"/><text x="76.1507%" y="639.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="75.9007%" y="613" width="0.0801%" height="15" fill="rgb(247,214,42)" fg:x="948" fg:w="1"/><text x="76.1507%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="75.9007%" y="597" width="0.0801%" height="15" fill="rgb(238,60,45)" fg:x="948" fg:w="1"/><text x="76.1507%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="75.9007%" y="581" width="0.0801%" height="15" fill="rgb(225,69,44)" fg:x="948" fg:w="1"/><text x="76.1507%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.9007%" y="565" width="0.0801%" height="15" fill="rgb(241,13,44)" fg:x="948" fg:w="1"/><text x="76.1507%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="75.9007%" y="549" width="0.0801%" height="15" fill="rgb(227,121,22)" fg:x="948" fg:w="1"/><text x="76.1507%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="75.9808%" y="597" width="0.0801%" height="15" fill="rgb(231,160,23)" fg:x="949" fg:w="1"/><text x="76.2308%" y="607.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="75.9808%" y="581" width="0.0801%" height="15" fill="rgb(250,179,43)" fg:x="949" fg:w="1"/><text x="76.2308%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="75.9808%" y="565" width="0.0801%" height="15" fill="rgb(233,54,46)" fg:x="949" fg:w="1"/><text x="76.2308%" y="575.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="75.9808%" y="549" width="0.0801%" height="15" fill="rgb(247,120,42)" fg:x="949" fg:w="1"/><text x="76.2308%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="75.9808%" y="533" width="0.0801%" height="15" fill="rgb(221,219,12)" fg:x="949" fg:w="1"/><text x="76.2308%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="75.9808%" y="517" width="0.0801%" height="15" fill="rgb(211,126,8)" fg:x="949" fg:w="1"/><text x="76.2308%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.08%)</title><rect x="75.9808%" y="501" width="0.0801%" height="15" fill="rgb(218,154,33)" fg:x="949" fg:w="1"/><text x="76.2308%" y="511.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.08%)</title><rect x="75.9808%" y="485" width="0.0801%" height="15" fill="rgb(212,199,16)" fg:x="949" fg:w="1"/><text x="76.2308%" y="495.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="76.0608%" y="581" width="0.0801%" height="15" fill="rgb(236,215,46)" fg:x="950" fg:w="1"/><text x="76.3108%" y="591.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.08%)</title><rect x="76.0608%" y="565" width="0.0801%" height="15" fill="rgb(232,32,22)" fg:x="950" fg:w="1"/><text x="76.3108%" y="575.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (5 samples, 0.40%)</title><rect x="75.9808%" y="629" width="0.4003%" height="15" fill="rgb(234,79,15)" fg:x="949" fg:w="5"/><text x="76.2308%" y="639.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (5 samples, 0.40%)</title><rect x="75.9808%" y="613" width="0.4003%" height="15" fill="rgb(235,187,47)" fg:x="949" fg:w="5"/><text x="76.2308%" y="623.50"></text></g><g><title>libloading::os::unix::Library::open (4 samples, 0.32%)</title><rect x="76.0608%" y="597" width="0.3203%" height="15" fill="rgb(244,69,37)" fg:x="950" fg:w="4"/><text x="76.3108%" y="607.50"></text></g><g><title>dlopen (3 samples, 0.24%)</title><rect x="76.1409%" y="581" width="0.2402%" height="15" fill="rgb(249,140,25)" fg:x="951" fg:w="3"/><text x="76.3909%" y="591.50"></text></g><g><title>_dl_catch_error (3 samples, 0.24%)</title><rect x="76.1409%" y="565" width="0.2402%" height="15" fill="rgb(213,69,8)" fg:x="951" fg:w="3"/><text x="76.3909%" y="575.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="76.1409%" y="549" width="0.2402%" height="15" fill="rgb(220,136,2)" fg:x="951" fg:w="3"/><text x="76.3909%" y="559.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="76.1409%" y="533" width="0.2402%" height="15" fill="rgb(237,50,36)" fg:x="951" fg:w="3"/><text x="76.3909%" y="543.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="76.1409%" y="517" width="0.2402%" height="15" fill="rgb(226,18,11)" fg:x="951" fg:w="3"/><text x="76.3909%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="76.3811%" y="597" width="0.0801%" height="15" fill="rgb(243,156,2)" fg:x="954" fg:w="1"/><text x="76.6311%" y="607.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (2 samples, 0.16%)</title><rect x="76.3811%" y="629" width="0.1601%" height="15" fill="rgb(218,8,34)" fg:x="954" fg:w="2"/><text x="76.6311%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="76.3811%" y="613" width="0.1601%" height="15" fill="rgb(250,94,35)" fg:x="954" fg:w="2"/><text x="76.6311%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.4612%" y="597" width="0.0801%" height="15" fill="rgb(229,127,21)" fg:x="955" fg:w="1"/><text x="76.7112%" y="607.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (25 samples, 2.00%)</title><rect x="74.6197%" y="661" width="2.0016%" height="15" fill="rgb(234,49,5)" fg:x="932" fg:w="25"/><text x="74.8697%" y="671.50">&lt;..</text></g><g><title>engine::session::Session::new (25 samples, 2.00%)</title><rect x="74.6197%" y="645" width="2.0016%" height="15" fill="rgb(248,12,16)" fg:x="932" fg:w="25"/><text x="74.8697%" y="655.50">e..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="76.5412%" y="629" width="0.0801%" height="15" fill="rgb(208,220,31)" fg:x="956" fg:w="1"/><text x="76.7912%" y="639.50"></text></g><g><title>clock_getres (1 samples, 0.08%)</title><rect x="76.5412%" y="613" width="0.0801%" height="15" fill="rgb(243,184,0)" fg:x="956" fg:w="1"/><text x="76.7912%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="76.6213%" y="613" width="0.0801%" height="15" fill="rgb(217,38,21)" fg:x="957" fg:w="1"/><text x="76.8713%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="76.6213%" y="597" width="0.0801%" height="15" fill="rgb(239,120,45)" fg:x="957" fg:w="1"/><text x="76.8713%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="76.6213%" y="581" width="0.0801%" height="15" fill="rgb(235,33,2)" fg:x="957" fg:w="1"/><text x="76.8713%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="76.6213%" y="565" width="0.0801%" height="15" fill="rgb(249,161,5)" fg:x="957" fg:w="1"/><text x="76.8713%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="76.7014%" y="613" width="0.0801%" height="15" fill="rgb(250,165,48)" fg:x="958" fg:w="1"/><text x="76.9514%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.7014%" y="597" width="0.0801%" height="15" fill="rgb(221,23,45)" fg:x="958" fg:w="1"/><text x="76.9514%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.7014%" y="581" width="0.0801%" height="15" fill="rgb(217,108,46)" fg:x="958" fg:w="1"/><text x="76.9514%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.7014%" y="565" width="0.0801%" height="15" fill="rgb(254,26,35)" fg:x="958" fg:w="1"/><text x="76.9514%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.7014%" y="549" width="0.0801%" height="15" fill="rgb(218,223,28)" fg:x="958" fg:w="1"/><text x="76.9514%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.7014%" y="533" width="0.0801%" height="15" fill="rgb(242,27,47)" fg:x="958" fg:w="1"/><text x="76.9514%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.7014%" y="517" width="0.0801%" height="15" fill="rgb(218,39,35)" fg:x="958" fg:w="1"/><text x="76.9514%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.7014%" y="501" width="0.0801%" height="15" fill="rgb(232,127,16)" fg:x="958" fg:w="1"/><text x="76.9514%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.7014%" y="485" width="0.0801%" height="15" fill="rgb(231,219,51)" fg:x="958" fg:w="1"/><text x="76.9514%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.7014%" y="469" width="0.0801%" height="15" fill="rgb(217,220,46)" fg:x="958" fg:w="1"/><text x="76.9514%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.7014%" y="453" width="0.0801%" height="15" fill="rgb(230,75,1)" fg:x="958" fg:w="1"/><text x="76.9514%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.7014%" y="437" width="0.0801%" height="15" fill="rgb(218,2,8)" fg:x="958" fg:w="1"/><text x="76.9514%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.7014%" y="421" width="0.0801%" height="15" fill="rgb(206,111,30)" fg:x="958" fg:w="1"/><text x="76.9514%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="76.7814%" y="581" width="0.0801%" height="15" fill="rgb(209,135,6)" fg:x="959" fg:w="1"/><text x="77.0314%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="76.7814%" y="565" width="0.0801%" height="15" fill="rgb(205,169,10)" fg:x="959" fg:w="1"/><text x="77.0314%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="76.7814%" y="549" width="0.0801%" height="15" fill="rgb(212,204,38)" fg:x="959" fg:w="1"/><text x="77.0314%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="76.7814%" y="533" width="0.0801%" height="15" fill="rgb(205,199,14)" fg:x="959" fg:w="1"/><text x="77.0314%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.7814%" y="517" width="0.0801%" height="15" fill="rgb(212,4,6)" fg:x="959" fg:w="1"/><text x="77.0314%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="76.7814%" y="501" width="0.0801%" height="15" fill="rgb(250,15,10)" fg:x="959" fg:w="1"/><text x="77.0314%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="76.8615%" y="565" width="0.0801%" height="15" fill="rgb(212,49,51)" fg:x="960" fg:w="1"/><text x="77.1115%" y="575.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="76.9416%" y="565" width="0.1601%" height="15" fill="rgb(235,21,9)" fg:x="961" fg:w="2"/><text x="77.1916%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="76.9416%" y="549" width="0.1601%" height="15" fill="rgb(251,31,32)" fg:x="961" fg:w="2"/><text x="77.1916%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.0216%" y="533" width="0.0801%" height="15" fill="rgb(246,23,9)" fg:x="962" fg:w="1"/><text x="77.2716%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.0216%" y="517" width="0.0801%" height="15" fill="rgb(225,216,14)" fg:x="962" fg:w="1"/><text x="77.2716%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="77.1817%" y="549" width="0.2402%" height="15" fill="rgb(215,200,26)" fg:x="964" fg:w="3"/><text x="77.4317%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="77.2618%" y="533" width="0.1601%" height="15" fill="rgb(237,130,47)" fg:x="965" fg:w="2"/><text x="77.5118%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="77.2618%" y="517" width="0.1601%" height="15" fill="rgb(247,74,14)" fg:x="965" fg:w="2"/><text x="77.5118%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.3419%" y="501" width="0.0801%" height="15" fill="rgb(254,97,46)" fg:x="966" fg:w="1"/><text x="77.5919%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.3419%" y="485" width="0.0801%" height="15" fill="rgb(234,191,1)" fg:x="966" fg:w="1"/><text x="77.5919%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.3419%" y="469" width="0.0801%" height="15" fill="rgb(215,165,14)" fg:x="966" fg:w="1"/><text x="77.5919%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.3419%" y="453" width="0.0801%" height="15" fill="rgb(230,182,6)" fg:x="966" fg:w="1"/><text x="77.5919%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="77.4219%" y="533" width="0.0801%" height="15" fill="rgb(210,127,39)" fg:x="967" fg:w="1"/><text x="77.6719%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="77.5020%" y="533" width="0.1601%" height="15" fill="rgb(223,212,51)" fg:x="968" fg:w="2"/><text x="77.7520%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="77.5020%" y="517" width="0.1601%" height="15" fill="rgb(226,176,43)" fg:x="968" fg:w="2"/><text x="77.7520%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="77.5020%" y="501" width="0.1601%" height="15" fill="rgb(222,155,4)" fg:x="968" fg:w="2"/><text x="77.7520%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.5821%" y="485" width="0.0801%" height="15" fill="rgb(215,149,7)" fg:x="969" fg:w="1"/><text x="77.8321%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="77.7422%" y="517" width="0.0801%" height="15" fill="rgb(252,199,23)" fg:x="971" fg:w="1"/><text x="77.9922%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.8223%" y="517" width="0.0801%" height="15" fill="rgb(245,52,29)" fg:x="972" fg:w="1"/><text x="78.0723%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.8223%" y="501" width="0.0801%" height="15" fill="rgb(221,228,19)" fg:x="972" fg:w="1"/><text x="78.0723%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="77.9824%" y="501" width="0.1601%" height="15" fill="rgb(253,101,6)" fg:x="974" fg:w="2"/><text x="78.2324%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.0624%" y="485" width="0.0801%" height="15" fill="rgb(211,130,8)" fg:x="975" fg:w="1"/><text x="78.3124%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.0624%" y="469" width="0.0801%" height="15" fill="rgb(238,37,53)" fg:x="975" fg:w="1"/><text x="78.3124%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.0624%" y="453" width="0.0801%" height="15" fill="rgb(235,145,5)" fg:x="975" fg:w="1"/><text x="78.3124%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.0624%" y="437" width="0.0801%" height="15" fill="rgb(244,12,43)" fg:x="975" fg:w="1"/><text x="78.3124%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="78.1425%" y="469" width="0.0801%" height="15" fill="rgb(246,195,24)" fg:x="976" fg:w="1"/><text x="78.3925%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="78.2226%" y="469" width="0.0801%" height="15" fill="rgb(235,163,6)" fg:x="977" fg:w="1"/><text x="78.4726%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="78.1425%" y="501" width="0.2402%" height="15" fill="rgb(236,218,17)" fg:x="976" fg:w="3"/><text x="78.3925%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="78.1425%" y="485" width="0.2402%" height="15" fill="rgb(235,12,38)" fg:x="976" fg:w="3"/><text x="78.3925%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.3026%" y="469" width="0.0801%" height="15" fill="rgb(225,195,33)" fg:x="978" fg:w="1"/><text x="78.5526%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.12%)</title><rect x="77.4219%" y="549" width="1.1209%" height="15" fill="rgb(238,54,35)" fg:x="967" fg:w="14"/><text x="77.6719%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="77.6621%" y="533" width="0.8807%" height="15" fill="rgb(238,33,7)" fg:x="970" fg:w="11"/><text x="77.9121%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="77.9023%" y="517" width="0.6405%" height="15" fill="rgb(245,5,14)" fg:x="973" fg:w="8"/><text x="78.1523%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="78.3827%" y="501" width="0.1601%" height="15" fill="rgb(251,95,31)" fg:x="979" fg:w="2"/><text x="78.6327%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.4628%" y="485" width="0.0801%" height="15" fill="rgb(222,15,46)" fg:x="980" fg:w="1"/><text x="78.7128%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.4628%" y="469" width="0.0801%" height="15" fill="rgb(226,182,24)" fg:x="980" fg:w="1"/><text x="78.7128%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (22 samples, 1.76%)</title><rect x="76.8615%" y="581" width="1.7614%" height="15" fill="rgb(229,105,41)" fg:x="960" fg:w="22"/><text x="77.1115%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.52%)</title><rect x="77.1017%" y="565" width="1.5212%" height="15" fill="rgb(216,99,53)" fg:x="963" fg:w="19"/><text x="77.3517%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.5428%" y="549" width="0.0801%" height="15" fill="rgb(253,26,20)" fg:x="981" fg:w="1"/><text x="78.7928%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.6229%" y="517" width="0.0801%" height="15" fill="rgb(249,155,28)" fg:x="982" fg:w="1"/><text x="78.8729%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="78.7030%" y="517" width="0.1601%" height="15" fill="rgb(241,221,2)" fg:x="983" fg:w="2"/><text x="78.9530%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.8631%" y="485" width="0.0801%" height="15" fill="rgb(219,124,6)" fg:x="985" fg:w="1"/><text x="79.1131%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="78.6229%" y="581" width="0.4003%" height="15" fill="rgb(233,37,6)" fg:x="982" fg:w="5"/><text x="78.8729%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="78.6229%" y="565" width="0.4003%" height="15" fill="rgb(238,20,14)" fg:x="982" fg:w="5"/><text x="78.8729%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="78.6229%" y="549" width="0.4003%" height="15" fill="rgb(232,106,27)" fg:x="982" fg:w="5"/><text x="78.8729%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="78.6229%" y="533" width="0.4003%" height="15" fill="rgb(246,157,24)" fg:x="982" fg:w="5"/><text x="78.8729%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="78.8631%" y="517" width="0.1601%" height="15" fill="rgb(214,153,10)" fg:x="985" fg:w="2"/><text x="79.1131%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="78.8631%" y="501" width="0.1601%" height="15" fill="rgb(212,94,6)" fg:x="985" fg:w="2"/><text x="79.1131%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.9432%" y="485" width="0.0801%" height="15" fill="rgb(254,25,27)" fg:x="986" fg:w="1"/><text x="79.1932%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.9432%" y="469" width="0.0801%" height="15" fill="rgb(250,43,52)" fg:x="986" fg:w="1"/><text x="79.1932%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="79.0232%" y="533" width="0.1601%" height="15" fill="rgb(221,226,40)" fg:x="987" fg:w="2"/><text x="79.2732%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="79.1833%" y="533" width="0.1601%" height="15" fill="rgb(235,162,34)" fg:x="989" fg:w="2"/><text x="79.4333%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="79.1833%" y="517" width="0.1601%" height="15" fill="rgb(239,24,26)" fg:x="989" fg:w="2"/><text x="79.4333%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="79.1833%" y="501" width="0.1601%" height="15" fill="rgb(244,226,11)" fg:x="989" fg:w="2"/><text x="79.4333%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.2634%" y="485" width="0.0801%" height="15" fill="rgb(225,23,10)" fg:x="990" fg:w="1"/><text x="79.5134%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="79.2634%" y="469" width="0.0801%" height="15" fill="rgb(249,125,6)" fg:x="990" fg:w="1"/><text x="79.5134%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="79.3435%" y="485" width="0.1601%" height="15" fill="rgb(246,212,12)" fg:x="991" fg:w="2"/><text x="79.5935%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.4235%" y="469" width="0.0801%" height="15" fill="rgb(230,43,32)" fg:x="992" fg:w="1"/><text x="79.6735%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.4235%" y="453" width="0.0801%" height="15" fill="rgb(210,95,23)" fg:x="992" fg:w="1"/><text x="79.6735%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="79.5036%" y="485" width="0.1601%" height="15" fill="rgb(229,103,33)" fg:x="993" fg:w="2"/><text x="79.7536%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="79.5036%" y="469" width="0.1601%" height="15" fill="rgb(222,104,27)" fg:x="993" fg:w="2"/><text x="79.7536%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="79.5837%" y="453" width="0.0801%" height="15" fill="rgb(239,221,23)" fg:x="994" fg:w="1"/><text x="79.8337%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="79.5837%" y="437" width="0.0801%" height="15" fill="rgb(222,98,21)" fg:x="994" fg:w="1"/><text x="79.8337%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.5837%" y="421" width="0.0801%" height="15" fill="rgb(231,101,20)" fg:x="994" fg:w="1"/><text x="79.8337%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.9039%" y="357" width="0.0801%" height="15" fill="rgb(215,150,22)" fg:x="998" fg:w="1"/><text x="80.1539%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.9039%" y="341" width="0.0801%" height="15" fill="rgb(248,3,34)" fg:x="998" fg:w="1"/><text x="80.1539%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.9039%" y="325" width="0.0801%" height="15" fill="rgb(220,141,21)" fg:x="998" fg:w="1"/><text x="80.1539%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="79.3435%" y="501" width="0.7206%" height="15" fill="rgb(223,41,48)" fg:x="991" fg:w="9"/><text x="79.5935%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="79.6637%" y="485" width="0.4003%" height="15" fill="rgb(247,12,5)" fg:x="995" fg:w="5"/><text x="79.9137%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="79.7438%" y="469" width="0.3203%" height="15" fill="rgb(206,173,10)" fg:x="996" fg:w="4"/><text x="79.9938%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="79.8239%" y="453" width="0.2402%" height="15" fill="rgb(233,214,37)" fg:x="997" fg:w="3"/><text x="80.0739%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="79.8239%" y="437" width="0.2402%" height="15" fill="rgb(238,86,43)" fg:x="997" fg:w="3"/><text x="80.0739%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="79.8239%" y="421" width="0.2402%" height="15" fill="rgb(212,182,8)" fg:x="997" fg:w="3"/><text x="80.0739%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="79.8239%" y="405" width="0.2402%" height="15" fill="rgb(240,91,47)" fg:x="997" fg:w="3"/><text x="80.0739%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="79.8239%" y="389" width="0.2402%" height="15" fill="rgb(209,138,26)" fg:x="997" fg:w="3"/><text x="80.0739%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="79.9039%" y="373" width="0.1601%" height="15" fill="rgb(231,163,20)" fg:x="998" fg:w="2"/><text x="80.1539%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="79.9840%" y="357" width="0.0801%" height="15" fill="rgb(214,91,54)" fg:x="999" fg:w="1"/><text x="80.2340%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="79.9840%" y="341" width="0.0801%" height="15" fill="rgb(230,32,17)" fg:x="999" fg:w="1"/><text x="80.2340%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.0641%" y="485" width="0.0801%" height="15" fill="rgb(231,34,34)" fg:x="1000" fg:w="1"/><text x="80.3141%" y="495.50"></text></g><g><title>engine::session::Session::flush (45 samples, 3.60%)</title><rect x="76.6213%" y="645" width="3.6029%" height="15" fill="rgb(224,228,27)" fg:x="957" fg:w="45"/><text x="76.8713%" y="655.50">engi..</text></g><g><title>engine::session::Session::save_entity_changes (45 samples, 3.60%)</title><rect x="76.6213%" y="629" width="3.6029%" height="15" fill="rgb(219,35,40)" fg:x="957" fg:w="45"/><text x="76.8713%" y="639.50">engi..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (43 samples, 3.44%)</title><rect x="76.7814%" y="613" width="3.4428%" height="15" fill="rgb(234,42,8)" fg:x="959" fg:w="43"/><text x="77.0314%" y="623.50">eng..</text></g><g><title>engine::session::SavesEntities::check_for_changes (43 samples, 3.44%)</title><rect x="76.7814%" y="597" width="3.4428%" height="15" fill="rgb(226,75,22)" fg:x="959" fg:w="43"/><text x="77.0314%" y="607.50">eng..</text></g><g><title>kernel::model::any_entity_changes (15 samples, 1.20%)</title><rect x="79.0232%" y="581" width="1.2010%" height="15" fill="rgb(242,203,28)" fg:x="987" fg:w="15"/><text x="79.2732%" y="591.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (15 samples, 1.20%)</title><rect x="79.0232%" y="565" width="1.2010%" height="15" fill="rgb(221,3,9)" fg:x="987" fg:w="15"/><text x="79.2732%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (15 samples, 1.20%)</title><rect x="79.0232%" y="549" width="1.2010%" height="15" fill="rgb(214,34,31)" fg:x="987" fg:w="15"/><text x="79.2732%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (11 samples, 0.88%)</title><rect x="79.3435%" y="533" width="0.8807%" height="15" fill="rgb(252,119,15)" fg:x="991" fg:w="11"/><text x="79.5935%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (11 samples, 0.88%)</title><rect x="79.3435%" y="517" width="0.8807%" height="15" fill="rgb(244,224,31)" fg:x="991" fg:w="11"/><text x="79.5935%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="80.0641%" y="501" width="0.1601%" height="15" fill="rgb(215,8,51)" fg:x="1000" fg:w="2"/><text x="80.3141%" y="511.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="80.1441%" y="485" width="0.0801%" height="15" fill="rgb(207,24,1)" fg:x="1001" fg:w="1"/><text x="80.3941%" y="495.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="80.1441%" y="469" width="0.0801%" height="15" fill="rgb(245,90,0)" fg:x="1001" fg:w="1"/><text x="80.3941%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="80.2242%" y="613" width="0.0801%" height="15" fill="rgb(246,43,48)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="80.2242%" y="597" width="0.0801%" height="15" fill="rgb(252,218,10)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="607.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="80.2242%" y="581" width="0.0801%" height="15" fill="rgb(231,24,35)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="80.2242%" y="565" width="0.0801%" height="15" fill="rgb(225,66,19)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="80.2242%" y="549" width="0.0801%" height="15" fill="rgb(214,96,51)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="80.2242%" y="629" width="0.1601%" height="15" fill="rgb(251,151,47)" fg:x="1002" fg:w="2"/><text x="80.4742%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="80.3042%" y="613" width="0.0801%" height="15" fill="rgb(236,79,14)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="623.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="80.3042%" y="597" width="0.0801%" height="15" fill="rgb(210,205,11)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="80.3042%" y="581" width="0.0801%" height="15" fill="rgb(233,142,53)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="80.3042%" y="565" width="0.0801%" height="15" fill="rgb(212,116,48)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.3042%" y="549" width="0.0801%" height="15" fill="rgb(234,55,33)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.3042%" y="533" width="0.0801%" height="15" fill="rgb(253,92,27)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.3042%" y="517" width="0.0801%" height="15" fill="rgb(220,7,35)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.3042%" y="501" width="0.0801%" height="15" fill="rgb(246,124,6)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.3042%" y="485" width="0.0801%" height="15" fill="rgb(212,111,51)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="80.3042%" y="469" width="0.0801%" height="15" fill="rgb(253,116,7)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.3042%" y="453" width="0.0801%" height="15" fill="rgb(213,145,18)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.3042%" y="437" width="0.0801%" height="15" fill="rgb(219,149,7)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.3042%" y="421" width="0.0801%" height="15" fill="rgb(225,156,20)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.3042%" y="405" width="0.0801%" height="15" fill="rgb(211,98,19)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.3042%" y="389" width="0.0801%" height="15" fill="rgb(231,192,31)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.3042%" y="373" width="0.0801%" height="15" fill="rgb(249,95,19)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.3042%" y="357" width="0.0801%" height="15" fill="rgb(247,101,36)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="80.3843%" y="565" width="0.0801%" height="15" fill="rgb(221,45,43)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="80.3843%" y="549" width="0.0801%" height="15" fill="rgb(220,42,1)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="80.3843%" y="581" width="0.1601%" height="15" fill="rgb(236,19,24)" fg:x="1004" fg:w="2"/><text x="80.6343%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="80.4644%" y="565" width="0.0801%" height="15" fill="rgb(225,192,6)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.4644%" y="549" width="0.0801%" height="15" fill="rgb(242,30,19)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.4644%" y="533" width="0.0801%" height="15" fill="rgb(240,36,6)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.4644%" y="517" width="0.0801%" height="15" fill="rgb(246,40,28)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.4644%" y="501" width="0.0801%" height="15" fill="rgb(225,155,33)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.4644%" y="485" width="0.0801%" height="15" fill="rgb(240,65,18)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="80.4644%" y="469" width="0.0801%" height="15" fill="rgb(217,0,48)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.4644%" y="453" width="0.0801%" height="15" fill="rgb(217,80,15)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.5444%" y="533" width="0.0801%" height="15" fill="rgb(253,43,51)" fg:x="1006" fg:w="1"/><text x="80.7944%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.5444%" y="517" width="0.0801%" height="15" fill="rgb(246,60,4)" fg:x="1006" fg:w="1"/><text x="80.7944%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.5444%" y="501" width="0.0801%" height="15" fill="rgb(230,40,54)" fg:x="1006" fg:w="1"/><text x="80.7944%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.5444%" y="485" width="0.0801%" height="15" fill="rgb(208,20,44)" fg:x="1006" fg:w="1"/><text x="80.7944%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.5444%" y="469" width="0.0801%" height="15" fill="rgb(230,22,22)" fg:x="1006" fg:w="1"/><text x="80.7944%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="80.3843%" y="613" width="0.3203%" height="15" fill="rgb(207,57,4)" fg:x="1004" fg:w="4"/><text x="80.6343%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="80.3843%" y="597" width="0.3203%" height="15" fill="rgb(242,130,33)" fg:x="1004" fg:w="4"/><text x="80.6343%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="80.5444%" y="581" width="0.1601%" height="15" fill="rgb(218,66,43)" fg:x="1006" fg:w="2"/><text x="80.7944%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="80.5444%" y="565" width="0.1601%" height="15" fill="rgb(236,105,16)" fg:x="1006" fg:w="2"/><text x="80.7944%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="80.5444%" y="549" width="0.1601%" height="15" fill="rgb(230,46,15)" fg:x="1006" fg:w="2"/><text x="80.7944%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.6245%" y="533" width="0.0801%" height="15" fill="rgb(251,172,40)" fg:x="1007" fg:w="1"/><text x="80.8745%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.6245%" y="517" width="0.0801%" height="15" fill="rgb(225,217,32)" fg:x="1007" fg:w="1"/><text x="80.8745%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.6245%" y="501" width="0.0801%" height="15" fill="rgb(243,10,29)" fg:x="1007" fg:w="1"/><text x="80.8745%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.6245%" y="485" width="0.0801%" height="15" fill="rgb(207,102,10)" fg:x="1007" fg:w="1"/><text x="80.8745%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="80.6245%" y="469" width="0.0801%" height="15" fill="rgb(241,125,5)" fg:x="1007" fg:w="1"/><text x="80.8745%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.6245%" y="453" width="0.0801%" height="15" fill="rgb(230,125,29)" fg:x="1007" fg:w="1"/><text x="80.8745%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="80.7046%" y="613" width="0.0801%" height="15" fill="rgb(223,65,44)" fg:x="1008" fg:w="1"/><text x="80.9546%" y="623.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="80.7046%" y="597" width="0.0801%" height="15" fill="rgb(224,188,28)" fg:x="1008" fg:w="1"/><text x="80.9546%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.7046%" y="581" width="0.0801%" height="15" fill="rgb(254,197,27)" fg:x="1008" fg:w="1"/><text x="80.9546%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="80.7046%" y="565" width="0.0801%" height="15" fill="rgb(220,200,25)" fg:x="1008" fg:w="1"/><text x="80.9546%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="80.7046%" y="549" width="0.0801%" height="15" fill="rgb(239,225,54)" fg:x="1008" fg:w="1"/><text x="80.9546%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.7846%" y="517" width="0.0801%" height="15" fill="rgb(211,59,40)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.7846%" y="501" width="0.0801%" height="15" fill="rgb(213,176,46)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.7846%" y="485" width="0.0801%" height="15" fill="rgb(226,99,4)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.7846%" y="469" width="0.0801%" height="15" fill="rgb(239,203,43)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.7846%" y="453" width="0.0801%" height="15" fill="rgb(246,1,45)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.7846%" y="437" width="0.0801%" height="15" fill="rgb(231,42,52)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.7846%" y="421" width="0.0801%" height="15" fill="rgb(240,13,50)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.7846%" y="405" width="0.0801%" height="15" fill="rgb(225,81,14)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="80.7846%" y="389" width="0.0801%" height="15" fill="rgb(216,182,23)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="80.7846%" y="373" width="0.0801%" height="15" fill="rgb(233,137,19)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="80.7846%" y="357" width="0.0801%" height="15" fill="rgb(242,61,46)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="80.7846%" y="341" width="0.0801%" height="15" fill="rgb(221,168,51)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.7846%" y="325" width="0.0801%" height="15" fill="rgb(238,48,15)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="80.7846%" y="565" width="0.1601%" height="15" fill="rgb(216,13,16)" fg:x="1009" fg:w="2"/><text x="81.0346%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="80.7846%" y="549" width="0.1601%" height="15" fill="rgb(223,185,34)" fg:x="1009" fg:w="2"/><text x="81.0346%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="80.7846%" y="533" width="0.1601%" height="15" fill="rgb(228,94,42)" fg:x="1009" fg:w="2"/><text x="81.0346%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.8647%" y="517" width="0.0801%" height="15" fill="rgb(218,166,43)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.8647%" y="501" width="0.0801%" height="15" fill="rgb(232,30,50)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.8647%" y="485" width="0.0801%" height="15" fill="rgb(245,206,45)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.8647%" y="469" width="0.0801%" height="15" fill="rgb(220,56,22)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="80.8647%" y="453" width="0.0801%" height="15" fill="rgb(239,129,38)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.8647%" y="437" width="0.0801%" height="15" fill="rgb(207,68,41)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.8647%" y="421" width="0.0801%" height="15" fill="rgb(221,21,7)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.8647%" y="405" width="0.0801%" height="15" fill="rgb(240,33,25)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.8647%" y="389" width="0.0801%" height="15" fill="rgb(242,119,10)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.8647%" y="373" width="0.0801%" height="15" fill="rgb(214,149,40)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.8647%" y="357" width="0.0801%" height="15" fill="rgb(228,25,36)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="367.50"></text></g><g><title>plugins_core::build::Build::holding (10 samples, 0.80%)</title><rect x="80.2242%" y="645" width="0.8006%" height="15" fill="rgb(222,59,15)" fg:x="1002" fg:w="10"/><text x="80.4742%" y="655.50"></text></g><g><title>plugins_core::tools::set_container (8 samples, 0.64%)</title><rect x="80.3843%" y="629" width="0.6405%" height="15" fill="rgb(218,170,0)" fg:x="1004" fg:w="8"/><text x="80.6343%" y="639.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="80.7846%" y="613" width="0.2402%" height="15" fill="rgb(232,173,23)" fg:x="1009" fg:w="3"/><text x="81.0346%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="80.7846%" y="597" width="0.2402%" height="15" fill="rgb(218,116,1)" fg:x="1009" fg:w="3"/><text x="81.0346%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="80.7846%" y="581" width="0.2402%" height="15" fill="rgb(207,34,4)" fg:x="1009" fg:w="3"/><text x="81.0346%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="80.9448%" y="565" width="0.0801%" height="15" fill="rgb(229,54,52)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="80.9448%" y="549" width="0.0801%" height="15" fill="rgb(211,86,23)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.9448%" y="533" width="0.0801%" height="15" fill="rgb(254,153,34)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.9448%" y="517" width="0.0801%" height="15" fill="rgb(219,220,14)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.9448%" y="501" width="0.0801%" height="15" fill="rgb(247,8,26)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.9448%" y="485" width="0.0801%" height="15" fill="rgb(213,129,42)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.9448%" y="469" width="0.0801%" height="15" fill="rgb(225,95,41)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="80.9448%" y="453" width="0.0801%" height="15" fill="rgb(215,134,24)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.9448%" y="437" width="0.0801%" height="15" fill="rgb(235,23,54)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.9448%" y="421" width="0.0801%" height="15" fill="rgb(229,96,31)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.9448%" y="405" width="0.0801%" height="15" fill="rgb(206,111,12)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.9448%" y="389" width="0.0801%" height="15" fill="rgb(222,177,8)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="81.0248%" y="581" width="0.2402%" height="15" fill="rgb(251,36,52)" fg:x="1012" fg:w="3"/><text x="81.2748%" y="591.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="81.0248%" y="565" width="0.2402%" height="15" fill="rgb(216,182,29)" fg:x="1012" fg:w="3"/><text x="81.2748%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="81.0248%" y="549" width="0.2402%" height="15" fill="rgb(241,145,50)" fg:x="1012" fg:w="3"/><text x="81.2748%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="81.1049%" y="533" width="0.1601%" height="15" fill="rgb(231,71,35)" fg:x="1013" fg:w="2"/><text x="81.3549%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.1049%" y="517" width="0.1601%" height="15" fill="rgb(218,22,17)" fg:x="1013" fg:w="2"/><text x="81.3549%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="81.1049%" y="501" width="0.1601%" height="15" fill="rgb(225,227,6)" fg:x="1013" fg:w="2"/><text x="81.3549%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.1049%" y="485" width="0.1601%" height="15" fill="rgb(224,204,17)" fg:x="1013" fg:w="2"/><text x="81.3549%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="81.1049%" y="469" width="0.1601%" height="15" fill="rgb(227,61,28)" fg:x="1013" fg:w="2"/><text x="81.3549%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.1049%" y="453" width="0.1601%" height="15" fill="rgb(242,148,23)" fg:x="1013" fg:w="2"/><text x="81.3549%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="81.1849%" y="437" width="0.0801%" height="15" fill="rgb(237,105,33)" fg:x="1014" fg:w="1"/><text x="81.4349%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.1849%" y="421" width="0.0801%" height="15" fill="rgb(238,218,40)" fg:x="1014" fg:w="1"/><text x="81.4349%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="81.1849%" y="405" width="0.0801%" height="15" fill="rgb(209,126,11)" fg:x="1014" fg:w="1"/><text x="81.4349%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.1849%" y="389" width="0.0801%" height="15" fill="rgb(245,90,11)" fg:x="1014" fg:w="1"/><text x="81.4349%" y="399.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.32%)</title><rect x="81.0248%" y="645" width="0.3203%" height="15" fill="rgb(211,195,10)" fg:x="1012" fg:w="4"/><text x="81.2748%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="81.0248%" y="629" width="0.3203%" height="15" fill="rgb(231,45,45)" fg:x="1012" fg:w="4"/><text x="81.2748%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="81.0248%" y="613" width="0.3203%" height="15" fill="rgb(246,100,43)" fg:x="1012" fg:w="4"/><text x="81.2748%" y="623.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="81.0248%" y="597" width="0.3203%" height="15" fill="rgb(241,193,8)" fg:x="1012" fg:w="4"/><text x="81.2748%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="81.2650%" y="581" width="0.0801%" height="15" fill="rgb(208,76,19)" fg:x="1015" fg:w="1"/><text x="81.5150%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="81.2650%" y="565" width="0.0801%" height="15" fill="rgb(223,69,40)" fg:x="1015" fg:w="1"/><text x="81.5150%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.2650%" y="549" width="0.0801%" height="15" fill="rgb(207,120,39)" fg:x="1015" fg:w="1"/><text x="81.5150%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.2650%" y="533" width="0.0801%" height="15" fill="rgb(212,209,28)" fg:x="1015" fg:w="1"/><text x="81.5150%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.2650%" y="517" width="0.0801%" height="15" fill="rgb(246,82,29)" fg:x="1015" fg:w="1"/><text x="81.5150%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.2650%" y="501" width="0.0801%" height="15" fill="rgb(239,6,40)" fg:x="1015" fg:w="1"/><text x="81.5150%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.2650%" y="485" width="0.0801%" height="15" fill="rgb(228,181,35)" fg:x="1015" fg:w="1"/><text x="81.5150%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.2650%" y="469" width="0.0801%" height="15" fill="rgb(238,151,2)" fg:x="1015" fg:w="1"/><text x="81.5150%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.2650%" y="453" width="0.0801%" height="15" fill="rgb(236,94,18)" fg:x="1015" fg:w="1"/><text x="81.5150%" y="463.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="81.3451%" y="645" width="0.0801%" height="15" fill="rgb(208,38,14)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="81.3451%" y="629" width="0.0801%" height="15" fill="rgb(234,215,27)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="81.3451%" y="613" width="0.0801%" height="15" fill="rgb(254,211,53)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.3451%" y="597" width="0.0801%" height="15" fill="rgb(216,175,11)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="607.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="81.3451%" y="581" width="0.0801%" height="15" fill="rgb(246,179,26)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.5853%" y="533" width="0.0801%" height="15" fill="rgb(249,19,52)" fg:x="1019" fg:w="1"/><text x="81.8353%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.5853%" y="517" width="0.0801%" height="15" fill="rgb(230,42,52)" fg:x="1019" fg:w="1"/><text x="81.8353%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.5853%" y="501" width="0.0801%" height="15" fill="rgb(221,171,0)" fg:x="1019" fg:w="1"/><text x="81.8353%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.5853%" y="485" width="0.0801%" height="15" fill="rgb(222,177,40)" fg:x="1019" fg:w="1"/><text x="81.8353%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.5853%" y="469" width="0.0801%" height="15" fill="rgb(247,34,16)" fg:x="1019" fg:w="1"/><text x="81.8353%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="81.5853%" y="629" width="0.1601%" height="15" fill="rgb(213,217,37)" fg:x="1019" fg:w="2"/><text x="81.8353%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="81.5853%" y="613" width="0.1601%" height="15" fill="rgb(231,189,24)" fg:x="1019" fg:w="2"/><text x="81.8353%" y="623.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="81.5853%" y="597" width="0.1601%" height="15" fill="rgb(214,22,9)" fg:x="1019" fg:w="2"/><text x="81.8353%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="81.5853%" y="581" width="0.1601%" height="15" fill="rgb(212,70,22)" fg:x="1019" fg:w="2"/><text x="81.8353%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="81.5853%" y="565" width="0.1601%" height="15" fill="rgb(249,64,51)" fg:x="1019" fg:w="2"/><text x="81.8353%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="81.5853%" y="549" width="0.1601%" height="15" fill="rgb(249,148,20)" fg:x="1019" fg:w="2"/><text x="81.8353%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.6653%" y="533" width="0.0801%" height="15" fill="rgb(246,46,48)" fg:x="1020" fg:w="1"/><text x="81.9153%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="81.6653%" y="517" width="0.0801%" height="15" fill="rgb(217,34,48)" fg:x="1020" fg:w="1"/><text x="81.9153%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.6653%" y="501" width="0.0801%" height="15" fill="rgb(222,45,26)" fg:x="1020" fg:w="1"/><text x="81.9153%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.6653%" y="485" width="0.0801%" height="15" fill="rgb(230,201,36)" fg:x="1020" fg:w="1"/><text x="81.9153%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.6653%" y="469" width="0.0801%" height="15" fill="rgb(217,30,43)" fg:x="1020" fg:w="1"/><text x="81.9153%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.6653%" y="453" width="0.0801%" height="15" fill="rgb(230,197,40)" fg:x="1020" fg:w="1"/><text x="81.9153%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.6653%" y="437" width="0.0801%" height="15" fill="rgb(239,181,18)" fg:x="1020" fg:w="1"/><text x="81.9153%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.7454%" y="469" width="0.0801%" height="15" fill="rgb(222,60,39)" fg:x="1021" fg:w="1"/><text x="81.9954%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.7454%" y="453" width="0.0801%" height="15" fill="rgb(210,60,22)" fg:x="1021" fg:w="1"/><text x="81.9954%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.7454%" y="437" width="0.0801%" height="15" fill="rgb(239,213,48)" fg:x="1021" fg:w="1"/><text x="81.9954%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.7454%" y="421" width="0.0801%" height="15" fill="rgb(253,214,23)" fg:x="1021" fg:w="1"/><text x="81.9954%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.7454%" y="405" width="0.0801%" height="15" fill="rgb(211,98,45)" fg:x="1021" fg:w="1"/><text x="81.9954%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.8255%" y="469" width="0.0801%" height="15" fill="rgb(239,130,44)" fg:x="1022" fg:w="1"/><text x="82.0755%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="81.8255%" y="453" width="0.0801%" height="15" fill="rgb(222,181,35)" fg:x="1022" fg:w="1"/><text x="82.0755%" y="463.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="81.7454%" y="581" width="0.2402%" height="15" fill="rgb(219,219,49)" fg:x="1021" fg:w="3"/><text x="81.9954%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="81.7454%" y="565" width="0.2402%" height="15" fill="rgb(227,161,51)" fg:x="1021" fg:w="3"/><text x="81.9954%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="81.7454%" y="549" width="0.2402%" height="15" fill="rgb(239,112,27)" fg:x="1021" fg:w="3"/><text x="81.9954%" y="559.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="81.7454%" y="533" width="0.2402%" height="15" fill="rgb(248,122,18)" fg:x="1021" fg:w="3"/><text x="81.9954%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="81.7454%" y="517" width="0.2402%" height="15" fill="rgb(245,130,23)" fg:x="1021" fg:w="3"/><text x="81.9954%" y="527.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="81.7454%" y="501" width="0.2402%" height="15" fill="rgb(211,225,28)" fg:x="1021" fg:w="3"/><text x="81.9954%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="81.7454%" y="485" width="0.2402%" height="15" fill="rgb(242,105,44)" fg:x="1021" fg:w="3"/><text x="81.9954%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="81.9055%" y="469" width="0.0801%" height="15" fill="rgb(216,183,46)" fg:x="1023" fg:w="1"/><text x="82.1555%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.9055%" y="453" width="0.0801%" height="15" fill="rgb(227,112,9)" fg:x="1023" fg:w="1"/><text x="82.1555%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="81.9055%" y="437" width="0.0801%" height="15" fill="rgb(244,21,0)" fg:x="1023" fg:w="1"/><text x="82.1555%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.9055%" y="421" width="0.0801%" height="15" fill="rgb(236,185,14)" fg:x="1023" fg:w="1"/><text x="82.1555%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.9055%" y="405" width="0.0801%" height="15" fill="rgb(236,170,30)" fg:x="1023" fg:w="1"/><text x="82.1555%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.9055%" y="389" width="0.0801%" height="15" fill="rgb(209,198,51)" fg:x="1023" fg:w="1"/><text x="82.1555%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="81.9055%" y="373" width="0.0801%" height="15" fill="rgb(205,171,26)" fg:x="1023" fg:w="1"/><text x="82.1555%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.9856%" y="517" width="0.0801%" height="15" fill="rgb(246,41,49)" fg:x="1024" fg:w="1"/><text x="82.2356%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="81.9856%" y="501" width="0.0801%" height="15" fill="rgb(240,229,12)" fg:x="1024" fg:w="1"/><text x="82.2356%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.9856%" y="485" width="0.0801%" height="15" fill="rgb(212,8,54)" fg:x="1024" fg:w="1"/><text x="82.2356%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="81.9856%" y="469" width="0.0801%" height="15" fill="rgb(230,114,13)" fg:x="1024" fg:w="1"/><text x="82.2356%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.9856%" y="453" width="0.0801%" height="15" fill="rgb(229,130,28)" fg:x="1024" fg:w="1"/><text x="82.2356%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.1457%" y="373" width="0.0801%" height="15" fill="rgb(206,139,15)" fg:x="1026" fg:w="1"/><text x="82.3957%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.1457%" y="357" width="0.0801%" height="15" fill="rgb(241,188,35)" fg:x="1026" fg:w="1"/><text x="82.3957%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="81.9856%" y="565" width="0.3203%" height="15" fill="rgb(208,224,26)" fg:x="1024" fg:w="4"/><text x="82.2356%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="81.9856%" y="549" width="0.3203%" height="15" fill="rgb(251,131,28)" fg:x="1024" fg:w="4"/><text x="82.2356%" y="559.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="81.9856%" y="533" width="0.3203%" height="15" fill="rgb(208,153,1)" fg:x="1024" fg:w="4"/><text x="82.2356%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="82.0657%" y="517" width="0.2402%" height="15" fill="rgb(234,33,36)" fg:x="1025" fg:w="3"/><text x="82.3157%" y="527.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="82.0657%" y="501" width="0.2402%" height="15" fill="rgb(246,42,29)" fg:x="1025" fg:w="3"/><text x="82.3157%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="82.0657%" y="485" width="0.2402%" height="15" fill="rgb(251,114,16)" fg:x="1025" fg:w="3"/><text x="82.3157%" y="495.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (3 samples, 0.24%)</title><rect x="82.0657%" y="469" width="0.2402%" height="15" fill="rgb(233,13,38)" fg:x="1025" fg:w="3"/><text x="82.3157%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="82.0657%" y="453" width="0.2402%" height="15" fill="rgb(247,120,19)" fg:x="1025" fg:w="3"/><text x="82.3157%" y="463.50"></text></g><g><title>serde_json::value::to_value (3 samples, 0.24%)</title><rect x="82.0657%" y="437" width="0.2402%" height="15" fill="rgb(205,11,16)" fg:x="1025" fg:w="3"/><text x="82.3157%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="82.0657%" y="421" width="0.2402%" height="15" fill="rgb(228,185,19)" fg:x="1025" fg:w="3"/><text x="82.3157%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="82.0657%" y="405" width="0.2402%" height="15" fill="rgb(239,88,52)" fg:x="1025" fg:w="3"/><text x="82.3157%" y="415.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="82.1457%" y="389" width="0.1601%" height="15" fill="rgb(219,23,1)" fg:x="1026" fg:w="2"/><text x="82.3957%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.2258%" y="373" width="0.0801%" height="15" fill="rgb(253,177,16)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="82.2258%" y="357" width="0.0801%" height="15" fill="rgb(225,150,40)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.2258%" y="341" width="0.0801%" height="15" fill="rgb(208,108,30)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.3058%" y="517" width="0.0801%" height="15" fill="rgb(214,122,4)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.3058%" y="501" width="0.0801%" height="15" fill="rgb(229,74,37)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.3058%" y="485" width="0.0801%" height="15" fill="rgb(233,61,41)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.3058%" y="469" width="0.0801%" height="15" fill="rgb(238,191,5)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.3058%" y="453" width="0.0801%" height="15" fill="rgb(233,78,24)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.3058%" y="437" width="0.0801%" height="15" fill="rgb(211,142,8)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.3058%" y="421" width="0.0801%" height="15" fill="rgb(253,38,53)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.3058%" y="405" width="0.0801%" height="15" fill="rgb(234,63,51)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.3058%" y="389" width="0.0801%" height="15" fill="rgb(205,23,31)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.3058%" y="373" width="0.0801%" height="15" fill="rgb(210,184,50)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.3058%" y="357" width="0.0801%" height="15" fill="rgb(222,112,26)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.3058%" y="341" width="0.0801%" height="15" fill="rgb(250,98,18)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.3058%" y="325" width="0.0801%" height="15" fill="rgb(250,34,12)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.3058%" y="309" width="0.0801%" height="15" fill="rgb(236,141,30)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.3058%" y="293" width="0.0801%" height="15" fill="rgb(246,134,38)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.3058%" y="277" width="0.0801%" height="15" fill="rgb(240,114,4)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.3058%" y="261" width="0.0801%" height="15" fill="rgb(243,113,39)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.3058%" y="245" width="0.0801%" height="15" fill="rgb(239,215,4)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.3058%" y="229" width="0.0801%" height="15" fill="rgb(236,229,45)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.3859%" y="453" width="0.0801%" height="15" fill="rgb(242,2,6)" fg:x="1029" fg:w="1"/><text x="82.6359%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.3859%" y="437" width="0.0801%" height="15" fill="rgb(239,108,21)" fg:x="1029" fg:w="1"/><text x="82.6359%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.3859%" y="421" width="0.0801%" height="15" fill="rgb(215,168,34)" fg:x="1029" fg:w="1"/><text x="82.6359%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="82.3859%" y="469" width="0.1601%" height="15" fill="rgb(238,31,17)" fg:x="1029" fg:w="2"/><text x="82.6359%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.4660%" y="453" width="0.0801%" height="15" fill="rgb(220,133,11)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.4660%" y="437" width="0.0801%" height="15" fill="rgb(212,158,23)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.4660%" y="421" width="0.0801%" height="15" fill="rgb(223,172,7)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.4660%" y="405" width="0.0801%" height="15" fill="rgb(244,3,52)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.4660%" y="389" width="0.0801%" height="15" fill="rgb(207,69,27)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="82.4660%" y="373" width="0.0801%" height="15" fill="rgb(213,136,45)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="82.4660%" y="357" width="0.0801%" height="15" fill="rgb(218,79,17)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="367.50"></text></g><g><title>core::iter::adapters::try_process (11 samples, 0.88%)</title><rect x="81.7454%" y="629" width="0.8807%" height="15" fill="rgb(216,106,36)" fg:x="1021" fg:w="11"/><text x="81.9954%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.88%)</title><rect x="81.7454%" y="613" width="0.8807%" height="15" fill="rgb(251,27,45)" fg:x="1021" fg:w="11"/><text x="81.9954%" y="623.50"></text></g><g><title>plugins_core::build::QuickThing::make (11 samples, 0.88%)</title><rect x="81.7454%" y="597" width="0.8807%" height="15" fill="rgb(232,21,34)" fg:x="1021" fg:w="11"/><text x="81.9954%" y="607.50"></text></g><g><title>plugins_core::build::Build::leads_to (8 samples, 0.64%)</title><rect x="81.9856%" y="581" width="0.6405%" height="15" fill="rgb(249,191,16)" fg:x="1024" fg:w="8"/><text x="82.2356%" y="591.50"></text></g><g><title>plugins_core::tools::leads_to (4 samples, 0.32%)</title><rect x="82.3058%" y="565" width="0.3203%" height="15" fill="rgb(224,88,20)" fg:x="1028" fg:w="4"/><text x="82.5558%" y="575.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="82.3058%" y="549" width="0.3203%" height="15" fill="rgb(237,93,27)" fg:x="1028" fg:w="4"/><text x="82.5558%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="82.3058%" y="533" width="0.3203%" height="15" fill="rgb(226,198,48)" fg:x="1028" fg:w="4"/><text x="82.5558%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="82.3859%" y="517" width="0.2402%" height="15" fill="rgb(207,162,53)" fg:x="1029" fg:w="3"/><text x="82.6359%" y="527.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="82.3859%" y="501" width="0.2402%" height="15" fill="rgb(207,169,9)" fg:x="1029" fg:w="3"/><text x="82.6359%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="82.3859%" y="485" width="0.2402%" height="15" fill="rgb(224,166,46)" fg:x="1029" fg:w="3"/><text x="82.6359%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.5460%" y="469" width="0.0801%" height="15" fill="rgb(233,26,6)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.5460%" y="453" width="0.0801%" height="15" fill="rgb(218,106,45)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.5460%" y="437" width="0.0801%" height="15" fill="rgb(240,217,4)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.5460%" y="421" width="0.0801%" height="15" fill="rgb(246,171,10)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.5460%" y="405" width="0.0801%" height="15" fill="rgb(223,197,30)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.5460%" y="389" width="0.0801%" height="15" fill="rgb(207,92,16)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.5460%" y="373" width="0.0801%" height="15" fill="rgb(211,6,44)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.5460%" y="357" width="0.0801%" height="15" fill="rgb(219,139,2)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.5460%" y="341" width="0.0801%" height="15" fill="rgb(224,103,21)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="82.6261%" y="597" width="0.0801%" height="15" fill="rgb(254,110,48)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="82.7062%" y="597" width="0.0801%" height="15" fill="rgb(212,88,19)" fg:x="1033" fg:w="1"/><text x="82.9562%" y="607.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="82.7062%" y="581" width="0.0801%" height="15" fill="rgb(248,103,6)" fg:x="1033" fg:w="1"/><text x="82.9562%" y="591.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="82.7062%" y="565" width="0.0801%" height="15" fill="rgb(214,53,46)" fg:x="1033" fg:w="1"/><text x="82.9562%" y="575.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="82.7062%" y="549" width="0.0801%" height="15" fill="rgb(236,190,24)" fg:x="1033" fg:w="1"/><text x="82.9562%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="82.7862%" y="597" width="0.0801%" height="15" fill="rgb(254,58,28)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="82.7862%" y="581" width="0.0801%" height="15" fill="rgb(243,63,27)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="82.7862%" y="565" width="0.0801%" height="15" fill="rgb(206,81,20)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.7862%" y="549" width="0.0801%" height="15" fill="rgb(252,69,51)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.7862%" y="533" width="0.0801%" height="15" fill="rgb(222,213,4)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.7862%" y="517" width="0.0801%" height="15" fill="rgb(226,198,12)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.7862%" y="501" width="0.0801%" height="15" fill="rgb(248,115,11)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.7862%" y="485" width="0.0801%" height="15" fill="rgb(221,148,54)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.7862%" y="469" width="0.0801%" height="15" fill="rgb(214,209,51)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.7862%" y="453" width="0.0801%" height="15" fill="rgb(249,116,53)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.7862%" y="437" width="0.0801%" height="15" fill="rgb(248,170,1)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.7862%" y="421" width="0.0801%" height="15" fill="rgb(244,105,10)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.7862%" y="405" width="0.0801%" height="15" fill="rgb(229,100,5)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.7862%" y="389" width="0.0801%" height="15" fill="rgb(233,221,39)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.7862%" y="373" width="0.0801%" height="15" fill="rgb(233,88,21)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="383.50"></text></g><g><title>engine::identifiers::model::set_gid (1 samples, 0.08%)</title><rect x="82.8663%" y="597" width="0.0801%" height="15" fill="rgb(206,13,0)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.8663%" y="581" width="0.0801%" height="15" fill="rgb(242,15,35)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="591.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="82.8663%" y="565" width="0.0801%" height="15" fill="rgb(247,142,41)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.8663%" y="549" width="0.0801%" height="15" fill="rgb(245,51,29)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="82.8663%" y="533" width="0.0801%" height="15" fill="rgb(228,209,43)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.8663%" y="517" width="0.0801%" height="15" fill="rgb(233,185,9)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="527.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="82.9464%" y="565" width="0.0801%" height="15" fill="rgb(226,93,0)" fg:x="1036" fg:w="1"/><text x="83.1964%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="82.9464%" y="549" width="0.0801%" height="15" fill="rgb(245,194,43)" fg:x="1036" fg:w="1"/><text x="83.1964%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="82.9464%" y="533" width="0.0801%" height="15" fill="rgb(211,145,34)" fg:x="1036" fg:w="1"/><text x="83.1964%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.0264%" y="533" width="0.0801%" height="15" fill="rgb(231,228,28)" fg:x="1037" fg:w="1"/><text x="83.2764%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="83.0264%" y="549" width="0.1601%" height="15" fill="rgb(236,149,4)" fg:x="1037" fg:w="2"/><text x="83.2764%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.1065%" y="533" width="0.0801%" height="15" fill="rgb(234,114,38)" fg:x="1038" fg:w="1"/><text x="83.3565%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.1065%" y="517" width="0.0801%" height="15" fill="rgb(246,132,51)" fg:x="1038" fg:w="1"/><text x="83.3565%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="83.1865%" y="533" width="0.0801%" height="15" fill="rgb(251,137,22)" fg:x="1039" fg:w="1"/><text x="83.4365%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="83.2666%" y="533" width="0.2402%" height="15" fill="rgb(243,59,52)" fg:x="1040" fg:w="3"/><text x="83.5166%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="83.2666%" y="517" width="0.2402%" height="15" fill="rgb(239,56,28)" fg:x="1040" fg:w="3"/><text x="83.5166%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="83.3467%" y="501" width="0.1601%" height="15" fill="rgb(218,168,27)" fg:x="1041" fg:w="2"/><text x="83.5967%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="83.3467%" y="485" width="0.1601%" height="15" fill="rgb(232,165,11)" fg:x="1041" fg:w="2"/><text x="83.5967%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.4267%" y="469" width="0.0801%" height="15" fill="rgb(253,55,41)" fg:x="1042" fg:w="1"/><text x="83.6767%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.4267%" y="453" width="0.0801%" height="15" fill="rgb(233,206,24)" fg:x="1042" fg:w="1"/><text x="83.6767%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="83.4267%" y="437" width="0.0801%" height="15" fill="rgb(220,199,8)" fg:x="1042" fg:w="1"/><text x="83.6767%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="83.5068%" y="517" width="0.1601%" height="15" fill="rgb(254,65,26)" fg:x="1043" fg:w="2"/><text x="83.7568%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="83.5068%" y="501" width="0.1601%" height="15" fill="rgb(253,102,23)" fg:x="1043" fg:w="2"/><text x="83.7568%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.5869%" y="485" width="0.0801%" height="15" fill="rgb(231,103,35)" fg:x="1044" fg:w="1"/><text x="83.8369%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.5869%" y="469" width="0.0801%" height="15" fill="rgb(238,26,10)" fg:x="1044" fg:w="1"/><text x="83.8369%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.7470%" y="501" width="0.0801%" height="15" fill="rgb(234,191,34)" fg:x="1046" fg:w="1"/><text x="83.9970%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.7470%" y="485" width="0.0801%" height="15" fill="rgb(206,210,9)" fg:x="1046" fg:w="1"/><text x="83.9970%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.7470%" y="469" width="0.0801%" height="15" fill="rgb(219,155,3)" fg:x="1046" fg:w="1"/><text x="83.9970%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.8271%" y="485" width="0.0801%" height="15" fill="rgb(221,62,52)" fg:x="1047" fg:w="1"/><text x="84.0771%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.8271%" y="469" width="0.0801%" height="15" fill="rgb(215,197,36)" fg:x="1047" fg:w="1"/><text x="84.0771%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.8271%" y="453" width="0.0801%" height="15" fill="rgb(226,222,6)" fg:x="1047" fg:w="1"/><text x="84.0771%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.8271%" y="437" width="0.0801%" height="15" fill="rgb(215,58,28)" fg:x="1047" fg:w="1"/><text x="84.0771%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="83.9071%" y="453" width="0.0801%" height="15" fill="rgb(212,148,2)" fg:x="1048" fg:w="1"/><text x="84.1571%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.9071%" y="437" width="0.0801%" height="15" fill="rgb(208,21,42)" fg:x="1048" fg:w="1"/><text x="84.1571%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.9071%" y="421" width="0.0801%" height="15" fill="rgb(209,107,26)" fg:x="1048" fg:w="1"/><text x="84.1571%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.9071%" y="405" width="0.0801%" height="15" fill="rgb(254,60,47)" fg:x="1048" fg:w="1"/><text x="84.1571%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="83.8271%" y="501" width="0.2402%" height="15" fill="rgb(207,226,45)" fg:x="1047" fg:w="3"/><text x="84.0771%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="83.9071%" y="485" width="0.1601%" height="15" fill="rgb(223,124,22)" fg:x="1048" fg:w="2"/><text x="84.1571%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="83.9071%" y="469" width="0.1601%" height="15" fill="rgb(240,162,13)" fg:x="1048" fg:w="2"/><text x="84.1571%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.9872%" y="453" width="0.0801%" height="15" fill="rgb(244,199,31)" fg:x="1049" fg:w="1"/><text x="84.2372%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.9872%" y="437" width="0.0801%" height="15" fill="rgb(207,92,16)" fg:x="1049" fg:w="1"/><text x="84.2372%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.9872%" y="421" width="0.0801%" height="15" fill="rgb(215,31,19)" fg:x="1049" fg:w="1"/><text x="84.2372%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.9872%" y="405" width="0.0801%" height="15" fill="rgb(245,118,14)" fg:x="1049" fg:w="1"/><text x="84.2372%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.9872%" y="389" width="0.0801%" height="15" fill="rgb(248,12,46)" fg:x="1049" fg:w="1"/><text x="84.2372%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="83.9872%" y="373" width="0.0801%" height="15" fill="rgb(209,119,0)" fg:x="1049" fg:w="1"/><text x="84.2372%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="83.6669%" y="517" width="0.4804%" height="15" fill="rgb(254,51,44)" fg:x="1045" fg:w="6"/><text x="83.9169%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.0673%" y="501" width="0.0801%" height="15" fill="rgb(253,182,35)" fg:x="1050" fg:w="1"/><text x="84.3173%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.0673%" y="485" width="0.0801%" height="15" fill="rgb(205,198,39)" fg:x="1050" fg:w="1"/><text x="84.3173%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="83.5068%" y="533" width="0.8006%" height="15" fill="rgb(251,175,48)" fg:x="1043" fg:w="10"/><text x="83.7568%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="84.1473%" y="517" width="0.1601%" height="15" fill="rgb(239,38,17)" fg:x="1051" fg:w="2"/><text x="84.3973%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (20 samples, 1.60%)</title><rect x="83.0264%" y="565" width="1.6013%" height="15" fill="rgb(212,101,8)" fg:x="1037" fg:w="20"/><text x="83.2764%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.44%)</title><rect x="83.1865%" y="549" width="1.4412%" height="15" fill="rgb(228,35,17)" fg:x="1039" fg:w="18"/><text x="83.4365%" y="559.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="84.3074%" y="533" width="0.3203%" height="15" fill="rgb(214,95,8)" fg:x="1053" fg:w="4"/><text x="84.5574%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="84.3875%" y="517" width="0.2402%" height="15" fill="rgb(210,176,35)" fg:x="1054" fg:w="3"/><text x="84.6375%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="84.3875%" y="501" width="0.2402%" height="15" fill="rgb(226,4,3)" fg:x="1054" fg:w="3"/><text x="84.6375%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="84.3875%" y="485" width="0.2402%" height="15" fill="rgb(232,133,14)" fg:x="1054" fg:w="3"/><text x="84.6375%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="84.3875%" y="469" width="0.2402%" height="15" fill="rgb(250,191,8)" fg:x="1054" fg:w="3"/><text x="84.6375%" y="479.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="84.4676%" y="453" width="0.1601%" height="15" fill="rgb(213,12,45)" fg:x="1055" fg:w="2"/><text x="84.7176%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.7078%" y="517" width="0.0801%" height="15" fill="rgb(233,78,26)" fg:x="1058" fg:w="1"/><text x="84.9578%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.7878%" y="517" width="0.0801%" height="15" fill="rgb(245,222,11)" fg:x="1059" fg:w="1"/><text x="85.0378%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.7878%" y="501" width="0.0801%" height="15" fill="rgb(216,174,12)" fg:x="1059" fg:w="1"/><text x="85.0378%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.8679%" y="501" width="0.0801%" height="15" fill="rgb(213,15,9)" fg:x="1060" fg:w="1"/><text x="85.1179%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="84.9480%" y="485" width="0.1601%" height="15" fill="rgb(238,103,32)" fg:x="1061" fg:w="2"/><text x="85.1980%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.0280%" y="469" width="0.0801%" height="15" fill="rgb(245,85,15)" fg:x="1062" fg:w="1"/><text x="85.2780%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.0280%" y="453" width="0.0801%" height="15" fill="rgb(254,204,5)" fg:x="1062" fg:w="1"/><text x="85.2780%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="84.6277%" y="565" width="0.5604%" height="15" fill="rgb(231,178,15)" fg:x="1057" fg:w="7"/><text x="84.8777%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="84.6277%" y="549" width="0.5604%" height="15" fill="rgb(248,151,3)" fg:x="1057" fg:w="7"/><text x="84.8777%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="84.7078%" y="533" width="0.4804%" height="15" fill="rgb(250,139,13)" fg:x="1058" fg:w="6"/><text x="84.9578%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="84.8679%" y="517" width="0.3203%" height="15" fill="rgb(243,107,53)" fg:x="1060" fg:w="4"/><text x="85.1179%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="84.9480%" y="501" width="0.2402%" height="15" fill="rgb(232,81,15)" fg:x="1061" fg:w="3"/><text x="85.1980%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.1081%" y="485" width="0.0801%" height="15" fill="rgb(225,187,48)" fg:x="1063" fg:w="1"/><text x="85.3581%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.1081%" y="469" width="0.0801%" height="15" fill="rgb(205,116,12)" fg:x="1063" fg:w="1"/><text x="85.3581%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.1081%" y="453" width="0.0801%" height="15" fill="rgb(220,222,31)" fg:x="1063" fg:w="1"/><text x="85.3581%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="85.3483%" y="517" width="0.1601%" height="15" fill="rgb(233,187,49)" fg:x="1066" fg:w="2"/><text x="85.5983%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="85.5084%" y="517" width="0.0801%" height="15" fill="rgb(211,168,53)" fg:x="1068" fg:w="1"/><text x="85.7584%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="85.5885%" y="517" width="0.0801%" height="15" fill="rgb(206,160,16)" fg:x="1069" fg:w="1"/><text x="85.8385%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.5885%" y="501" width="0.0801%" height="15" fill="rgb(254,164,13)" fg:x="1069" fg:w="1"/><text x="85.8385%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="85.6685%" y="469" width="0.0801%" height="15" fill="rgb(229,45,30)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="85.6685%" y="453" width="0.0801%" height="15" fill="rgb(237,32,10)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.8287%" y="437" width="0.0801%" height="15" fill="rgb(251,20,47)" fg:x="1072" fg:w="1"/><text x="86.0787%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.8287%" y="421" width="0.0801%" height="15" fill="rgb(251,116,12)" fg:x="1072" fg:w="1"/><text x="86.0787%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.8287%" y="405" width="0.0801%" height="15" fill="rgb(214,227,27)" fg:x="1072" fg:w="1"/><text x="86.0787%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="85.9087%" y="405" width="0.1601%" height="15" fill="rgb(248,10,53)" fg:x="1073" fg:w="2"/><text x="86.1587%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="85.9087%" y="389" width="0.1601%" height="15" fill="rgb(221,176,25)" fg:x="1073" fg:w="2"/><text x="86.1587%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="85.9087%" y="373" width="0.1601%" height="15" fill="rgb(205,70,46)" fg:x="1073" fg:w="2"/><text x="86.1587%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.0689%" y="373" width="0.0801%" height="15" fill="rgb(217,45,38)" fg:x="1075" fg:w="1"/><text x="86.3189%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.0689%" y="357" width="0.0801%" height="15" fill="rgb(243,6,54)" fg:x="1075" fg:w="1"/><text x="86.3189%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.0689%" y="341" width="0.0801%" height="15" fill="rgb(242,76,23)" fg:x="1075" fg:w="1"/><text x="86.3189%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="85.9087%" y="421" width="0.3203%" height="15" fill="rgb(239,166,0)" fg:x="1073" fg:w="4"/><text x="86.1587%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="86.0689%" y="405" width="0.1601%" height="15" fill="rgb(238,174,32)" fg:x="1075" fg:w="2"/><text x="86.3189%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="86.0689%" y="389" width="0.1601%" height="15" fill="rgb(238,124,44)" fg:x="1075" fg:w="2"/><text x="86.3189%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="86.1489%" y="373" width="0.0801%" height="15" fill="rgb(206,185,9)" fg:x="1076" fg:w="1"/><text x="86.3989%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="86.1489%" y="357" width="0.0801%" height="15" fill="rgb(215,157,17)" fg:x="1076" fg:w="1"/><text x="86.3989%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="86.1489%" y="341" width="0.0801%" height="15" fill="rgb(251,17,29)" fg:x="1076" fg:w="1"/><text x="86.3989%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.2290%" y="421" width="0.0801%" height="15" fill="rgb(227,113,27)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="431.50"></text></g><g><title>engine::session::Session::flush (47 samples, 3.76%)</title><rect x="82.6261%" y="629" width="3.7630%" height="15" fill="rgb(217,226,24)" fg:x="1032" fg:w="47"/><text x="82.8761%" y="639.50">engi..</text></g><g><title>engine::session::Session::save_entity_changes (47 samples, 3.76%)</title><rect x="82.6261%" y="613" width="3.7630%" height="15" fill="rgb(251,99,38)" fg:x="1032" fg:w="47"/><text x="82.8761%" y="623.50">engi..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (43 samples, 3.44%)</title><rect x="82.9464%" y="597" width="3.4428%" height="15" fill="rgb(231,147,19)" fg:x="1036" fg:w="43"/><text x="83.1964%" y="607.50">eng..</text></g><g><title>engine::session::SavesEntities::check_for_changes (43 samples, 3.44%)</title><rect x="82.9464%" y="581" width="3.4428%" height="15" fill="rgb(230,86,8)" fg:x="1036" fg:w="43"/><text x="83.1964%" y="591.50">eng..</text></g><g><title>kernel::model::any_entity_changes (15 samples, 1.20%)</title><rect x="85.1882%" y="565" width="1.2010%" height="15" fill="rgb(237,159,39)" fg:x="1064" fg:w="15"/><text x="85.4382%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (14 samples, 1.12%)</title><rect x="85.2682%" y="549" width="1.1209%" height="15" fill="rgb(247,179,47)" fg:x="1065" fg:w="14"/><text x="85.5182%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (14 samples, 1.12%)</title><rect x="85.2682%" y="533" width="1.1209%" height="15" fill="rgb(253,152,26)" fg:x="1065" fg:w="14"/><text x="85.5182%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.72%)</title><rect x="85.6685%" y="517" width="0.7206%" height="15" fill="rgb(222,211,15)" fg:x="1070" fg:w="9"/><text x="85.9185%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (9 samples, 0.72%)</title><rect x="85.6685%" y="501" width="0.7206%" height="15" fill="rgb(236,193,6)" fg:x="1070" fg:w="9"/><text x="85.9185%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="85.6685%" y="485" width="0.7206%" height="15" fill="rgb(226,206,10)" fg:x="1070" fg:w="9"/><text x="85.9185%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="85.7486%" y="469" width="0.6405%" height="15" fill="rgb(213,125,22)" fg:x="1071" fg:w="8"/><text x="85.9986%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="85.7486%" y="453" width="0.6405%" height="15" fill="rgb(221,66,28)" fg:x="1071" fg:w="8"/><text x="85.9986%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="85.9087%" y="437" width="0.4804%" height="15" fill="rgb(222,84,53)" fg:x="1073" fg:w="6"/><text x="86.1587%" y="447.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="86.3090%" y="421" width="0.0801%" height="15" fill="rgb(243,50,15)" fg:x="1078" fg:w="1"/><text x="86.5590%" y="431.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="86.3090%" y="405" width="0.0801%" height="15" fill="rgb(208,184,23)" fg:x="1078" fg:w="1"/><text x="86.5590%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="86.3891%" y="581" width="0.0801%" height="15" fill="rgb(221,83,2)" fg:x="1079" fg:w="1"/><text x="86.6391%" y="591.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="86.3891%" y="565" width="0.0801%" height="15" fill="rgb(236,53,24)" fg:x="1079" fg:w="1"/><text x="86.6391%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.3891%" y="549" width="0.0801%" height="15" fill="rgb(244,171,29)" fg:x="1079" fg:w="1"/><text x="86.6391%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.4692%" y="565" width="0.0801%" height="15" fill="rgb(205,19,11)" fg:x="1080" fg:w="1"/><text x="86.7192%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.4692%" y="549" width="0.0801%" height="15" fill="rgb(207,108,29)" fg:x="1080" fg:w="1"/><text x="86.7192%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.4692%" y="533" width="0.0801%" height="15" fill="rgb(236,215,43)" fg:x="1080" fg:w="1"/><text x="86.7192%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.4692%" y="517" width="0.0801%" height="15" fill="rgb(213,58,35)" fg:x="1080" fg:w="1"/><text x="86.7192%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.4692%" y="501" width="0.0801%" height="15" fill="rgb(220,211,46)" fg:x="1080" fg:w="1"/><text x="86.7192%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.4692%" y="485" width="0.0801%" height="15" fill="rgb(212,134,16)" fg:x="1080" fg:w="1"/><text x="86.7192%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.4692%" y="469" width="0.0801%" height="15" fill="rgb(232,90,44)" fg:x="1080" fg:w="1"/><text x="86.7192%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.4692%" y="453" width="0.0801%" height="15" fill="rgb(212,18,36)" fg:x="1080" fg:w="1"/><text x="86.7192%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.4692%" y="437" width="0.0801%" height="15" fill="rgb(206,112,24)" fg:x="1080" fg:w="1"/><text x="86.7192%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.4692%" y="421" width="0.0801%" height="15" fill="rgb(238,223,40)" fg:x="1080" fg:w="1"/><text x="86.7192%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.4692%" y="405" width="0.0801%" height="15" fill="rgb(226,169,20)" fg:x="1080" fg:w="1"/><text x="86.7192%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.4692%" y="389" width="0.0801%" height="15" fill="rgb(241,64,52)" fg:x="1080" fg:w="1"/><text x="86.7192%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="86.3891%" y="597" width="0.2402%" height="15" fill="rgb(228,120,25)" fg:x="1079" fg:w="3"/><text x="86.6391%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="86.4692%" y="581" width="0.1601%" height="15" fill="rgb(234,108,19)" fg:x="1080" fg:w="2"/><text x="86.7192%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="86.5492%" y="565" width="0.0801%" height="15" fill="rgb(236,133,29)" fg:x="1081" fg:w="1"/><text x="86.7992%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="86.5492%" y="549" width="0.0801%" height="15" fill="rgb(246,174,53)" fg:x="1081" fg:w="1"/><text x="86.7992%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.5492%" y="533" width="0.0801%" height="15" fill="rgb(210,105,35)" fg:x="1081" fg:w="1"/><text x="86.7992%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="86.5492%" y="517" width="0.0801%" height="15" fill="rgb(225,27,26)" fg:x="1081" fg:w="1"/><text x="86.7992%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="86.5492%" y="501" width="0.0801%" height="15" fill="rgb(233,2,39)" fg:x="1081" fg:w="1"/><text x="86.7992%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="86.5492%" y="485" width="0.0801%" height="15" fill="rgb(219,164,26)" fg:x="1081" fg:w="1"/><text x="86.7992%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="86.6293%" y="517" width="0.1601%" height="15" fill="rgb(236,211,5)" fg:x="1082" fg:w="2"/><text x="86.8793%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.7094%" y="501" width="0.0801%" height="15" fill="rgb(244,227,23)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.7094%" y="485" width="0.0801%" height="15" fill="rgb(230,184,8)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.7094%" y="469" width="0.0801%" height="15" fill="rgb(217,125,48)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.7094%" y="453" width="0.0801%" height="15" fill="rgb(223,192,47)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.7094%" y="437" width="0.0801%" height="15" fill="rgb(226,119,10)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.7094%" y="421" width="0.0801%" height="15" fill="rgb(221,49,29)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="86.7094%" y="405" width="0.0801%" height="15" fill="rgb(217,205,19)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="86.7094%" y="389" width="0.0801%" height="15" fill="rgb(242,104,7)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.7894%" y="485" width="0.0801%" height="15" fill="rgb(209,154,48)" fg:x="1084" fg:w="1"/><text x="87.0394%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="86.6293%" y="565" width="0.3203%" height="15" fill="rgb(219,213,46)" fg:x="1082" fg:w="4"/><text x="86.8793%" y="575.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="86.6293%" y="549" width="0.3203%" height="15" fill="rgb(229,105,38)" fg:x="1082" fg:w="4"/><text x="86.8793%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="86.6293%" y="533" width="0.3203%" height="15" fill="rgb(205,151,5)" fg:x="1082" fg:w="4"/><text x="86.8793%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="86.7894%" y="517" width="0.1601%" height="15" fill="rgb(248,115,40)" fg:x="1084" fg:w="2"/><text x="87.0394%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="86.7894%" y="501" width="0.1601%" height="15" fill="rgb(206,179,2)" fg:x="1084" fg:w="2"/><text x="87.0394%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.8695%" y="485" width="0.0801%" height="15" fill="rgb(230,103,24)" fg:x="1085" fg:w="1"/><text x="87.1195%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.8695%" y="469" width="0.0801%" height="15" fill="rgb(218,152,4)" fg:x="1085" fg:w="1"/><text x="87.1195%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.8695%" y="453" width="0.0801%" height="15" fill="rgb(236,161,54)" fg:x="1085" fg:w="1"/><text x="87.1195%" y="463.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="86.9496%" y="549" width="0.0801%" height="15" fill="rgb(226,65,17)" fg:x="1086" fg:w="1"/><text x="87.1996%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.9496%" y="533" width="0.0801%" height="15" fill="rgb(221,134,44)" fg:x="1086" fg:w="1"/><text x="87.1996%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="86.9496%" y="517" width="0.0801%" height="15" fill="rgb(251,129,4)" fg:x="1086" fg:w="1"/><text x="87.1996%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="86.9496%" y="501" width="0.0801%" height="15" fill="rgb(244,32,34)" fg:x="1086" fg:w="1"/><text x="87.1996%" y="511.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="86.6293%" y="581" width="0.4804%" height="15" fill="rgb(251,224,37)" fg:x="1082" fg:w="6"/><text x="86.8793%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="86.9496%" y="565" width="0.1601%" height="15" fill="rgb(248,117,31)" fg:x="1086" fg:w="2"/><text x="87.1996%" y="575.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="87.0296%" y="549" width="0.0801%" height="15" fill="rgb(222,208,37)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="87.0296%" y="533" width="0.0801%" height="15" fill="rgb(234,211,25)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="543.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="87.0296%" y="517" width="0.0801%" height="15" fill="rgb(211,72,6)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.0296%" y="501" width="0.0801%" height="15" fill="rgb(249,198,38)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="511.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="87.0296%" y="485" width="0.0801%" height="15" fill="rgb(221,86,51)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.0296%" y="469" width="0.0801%" height="15" fill="rgb(226,178,43)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="87.0296%" y="453" width="0.0801%" height="15" fill="rgb(215,145,7)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="463.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="87.0296%" y="437" width="0.0801%" height="15" fill="rgb(250,202,36)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.0296%" y="421" width="0.0801%" height="15" fill="rgb(215,86,13)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="87.0296%" y="405" width="0.0801%" height="15" fill="rgb(221,134,12)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.0296%" y="389" width="0.0801%" height="15" fill="rgb(213,82,10)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.0296%" y="373" width="0.0801%" height="15" fill="rgb(214,142,0)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.96%)</title><rect x="86.3891%" y="613" width="0.9608%" height="15" fill="rgb(205,145,9)" fg:x="1079" fg:w="12"/><text x="86.6391%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (9 samples, 0.72%)</title><rect x="86.6293%" y="597" width="0.7206%" height="15" fill="rgb(244,214,8)" fg:x="1082" fg:w="9"/><text x="86.8793%" y="607.50"></text></g><g><title>engine::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="87.1097%" y="581" width="0.2402%" height="15" fill="rgb(224,72,51)" fg:x="1088" fg:w="3"/><text x="87.3597%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="87.1097%" y="565" width="0.2402%" height="15" fill="rgb(233,137,37)" fg:x="1088" fg:w="3"/><text x="87.3597%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="87.1097%" y="549" width="0.2402%" height="15" fill="rgb(208,71,28)" fg:x="1088" fg:w="3"/><text x="87.3597%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="87.1097%" y="533" width="0.2402%" height="15" fill="rgb(226,31,7)" fg:x="1088" fg:w="3"/><text x="87.3597%" y="543.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="87.1097%" y="517" width="0.2402%" height="15" fill="rgb(229,62,18)" fg:x="1088" fg:w="3"/><text x="87.3597%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.3499%" y="565" width="0.0801%" height="15" fill="rgb(226,74,28)" fg:x="1091" fg:w="1"/><text x="87.5999%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.3499%" y="549" width="0.0801%" height="15" fill="rgb(214,170,18)" fg:x="1091" fg:w="1"/><text x="87.5999%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.3499%" y="533" width="0.0801%" height="15" fill="rgb(227,229,35)" fg:x="1091" fg:w="1"/><text x="87.5999%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.3499%" y="517" width="0.0801%" height="15" fill="rgb(225,181,39)" fg:x="1091" fg:w="1"/><text x="87.5999%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.3499%" y="501" width="0.0801%" height="15" fill="rgb(253,124,44)" fg:x="1091" fg:w="1"/><text x="87.5999%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.3499%" y="485" width="0.0801%" height="15" fill="rgb(220,75,18)" fg:x="1091" fg:w="1"/><text x="87.5999%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.3499%" y="469" width="0.0801%" height="15" fill="rgb(239,175,43)" fg:x="1091" fg:w="1"/><text x="87.5999%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.3499%" y="453" width="0.0801%" height="15" fill="rgb(228,112,50)" fg:x="1091" fg:w="1"/><text x="87.5999%" y="463.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="87.4299%" y="549" width="0.0801%" height="15" fill="rgb(232,105,36)" fg:x="1092" fg:w="1"/><text x="87.6799%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.4299%" y="533" width="0.0801%" height="15" fill="rgb(227,137,47)" fg:x="1092" fg:w="1"/><text x="87.6799%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="87.3499%" y="597" width="0.2402%" height="15" fill="rgb(217,51,9)" fg:x="1091" fg:w="3"/><text x="87.5999%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="87.3499%" y="581" width="0.2402%" height="15" fill="rgb(245,117,0)" fg:x="1091" fg:w="3"/><text x="87.5999%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="87.4299%" y="565" width="0.1601%" height="15" fill="rgb(252,52,30)" fg:x="1092" fg:w="2"/><text x="87.6799%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.5100%" y="549" width="0.0801%" height="15" fill="rgb(227,85,33)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.5100%" y="533" width="0.0801%" height="15" fill="rgb(220,157,20)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.5100%" y="517" width="0.0801%" height="15" fill="rgb(254,14,34)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.5100%" y="501" width="0.0801%" height="15" fill="rgb(216,103,41)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.5100%" y="485" width="0.0801%" height="15" fill="rgb(245,221,9)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.5100%" y="469" width="0.0801%" height="15" fill="rgb(254,136,47)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="87.5901%" y="597" width="0.0801%" height="15" fill="rgb(235,71,46)" fg:x="1094" fg:w="1"/><text x="87.8401%" y="607.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="87.5901%" y="581" width="0.0801%" height="15" fill="rgb(242,154,29)" fg:x="1094" fg:w="1"/><text x="87.8401%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.5901%" y="565" width="0.0801%" height="15" fill="rgb(210,65,31)" fg:x="1094" fg:w="1"/><text x="87.8401%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="87.5901%" y="549" width="0.0801%" height="15" fill="rgb(244,9,50)" fg:x="1094" fg:w="1"/><text x="87.8401%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="87.5901%" y="533" width="0.0801%" height="15" fill="rgb(215,141,38)" fg:x="1094" fg:w="1"/><text x="87.8401%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.5901%" y="517" width="0.0801%" height="15" fill="rgb(241,129,6)" fg:x="1094" fg:w="1"/><text x="87.8401%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.6701%" y="501" width="0.0801%" height="15" fill="rgb(253,169,4)" fg:x="1095" fg:w="1"/><text x="87.9201%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.6701%" y="485" width="0.0801%" height="15" fill="rgb(237,82,36)" fg:x="1095" fg:w="1"/><text x="87.9201%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.6701%" y="469" width="0.0801%" height="15" fill="rgb(209,171,11)" fg:x="1095" fg:w="1"/><text x="87.9201%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.6701%" y="453" width="0.0801%" height="15" fill="rgb(242,19,22)" fg:x="1095" fg:w="1"/><text x="87.9201%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.7502%" y="437" width="0.0801%" height="15" fill="rgb(251,122,24)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.7502%" y="421" width="0.0801%" height="15" fill="rgb(226,166,42)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="87.6701%" y="549" width="0.2402%" height="15" fill="rgb(244,101,48)" fg:x="1095" fg:w="3"/><text x="87.9201%" y="559.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="87.6701%" y="533" width="0.2402%" height="15" fill="rgb(227,125,1)" fg:x="1095" fg:w="3"/><text x="87.9201%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="87.6701%" y="517" width="0.2402%" height="15" fill="rgb(206,79,43)" fg:x="1095" fg:w="3"/><text x="87.9201%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="87.7502%" y="501" width="0.1601%" height="15" fill="rgb(241,109,41)" fg:x="1096" fg:w="2"/><text x="88.0002%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="87.7502%" y="485" width="0.1601%" height="15" fill="rgb(219,73,4)" fg:x="1096" fg:w="2"/><text x="88.0002%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="87.7502%" y="469" width="0.1601%" height="15" fill="rgb(239,25,41)" fg:x="1096" fg:w="2"/><text x="88.0002%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="87.7502%" y="453" width="0.1601%" height="15" fill="rgb(208,88,46)" fg:x="1096" fg:w="2"/><text x="88.0002%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.8303%" y="437" width="0.0801%" height="15" fill="rgb(239,184,9)" fg:x="1097" fg:w="1"/><text x="88.0803%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.9103%" y="501" width="0.0801%" height="15" fill="rgb(223,114,13)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="511.50"></text></g><g><title>plugins_core::build::Build::holding (21 samples, 1.68%)</title><rect x="86.3891%" y="629" width="1.6813%" height="15" fill="rgb(214,28,42)" fg:x="1079" fg:w="21"/><text x="86.6391%" y="639.50"></text></g><g><title>plugins_core::tools::set_container (9 samples, 0.72%)</title><rect x="87.3499%" y="613" width="0.7206%" height="15" fill="rgb(252,32,44)" fg:x="1091" fg:w="9"/><text x="87.5999%" y="623.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.40%)</title><rect x="87.6701%" y="597" width="0.4003%" height="15" fill="rgb(231,159,4)" fg:x="1095" fg:w="5"/><text x="87.9201%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="87.6701%" y="581" width="0.4003%" height="15" fill="rgb(210,35,26)" fg:x="1095" fg:w="5"/><text x="87.9201%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.40%)</title><rect x="87.6701%" y="565" width="0.4003%" height="15" fill="rgb(208,190,37)" fg:x="1095" fg:w="5"/><text x="87.9201%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="87.9103%" y="549" width="0.1601%" height="15" fill="rgb(226,148,22)" fg:x="1098" fg:w="2"/><text x="88.1603%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="87.9103%" y="533" width="0.1601%" height="15" fill="rgb(242,153,24)" fg:x="1098" fg:w="2"/><text x="88.1603%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="87.9103%" y="517" width="0.1601%" height="15" fill="rgb(213,133,7)" fg:x="1098" fg:w="2"/><text x="88.1603%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.9904%" y="501" width="0.0801%" height="15" fill="rgb(248,206,18)" fg:x="1099" fg:w="1"/><text x="88.2404%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.9904%" y="485" width="0.0801%" height="15" fill="rgb(233,157,4)" fg:x="1099" fg:w="1"/><text x="88.2404%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.9904%" y="469" width="0.0801%" height="15" fill="rgb(249,179,32)" fg:x="1099" fg:w="1"/><text x="88.2404%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.9904%" y="453" width="0.0801%" height="15" fill="rgb(248,69,35)" fg:x="1099" fg:w="1"/><text x="88.2404%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.9904%" y="437" width="0.0801%" height="15" fill="rgb(249,158,38)" fg:x="1099" fg:w="1"/><text x="88.2404%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.9904%" y="421" width="0.0801%" height="15" fill="rgb(223,18,43)" fg:x="1099" fg:w="1"/><text x="88.2404%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.9904%" y="405" width="0.0801%" height="15" fill="rgb(238,42,45)" fg:x="1099" fg:w="1"/><text x="88.2404%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.9904%" y="389" width="0.0801%" height="15" fill="rgb(219,65,47)" fg:x="1099" fg:w="1"/><text x="88.2404%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.9904%" y="373" width="0.0801%" height="15" fill="rgb(248,153,12)" fg:x="1099" fg:w="1"/><text x="88.2404%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.9904%" y="357" width="0.0801%" height="15" fill="rgb(240,118,4)" fg:x="1099" fg:w="1"/><text x="88.2404%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.9904%" y="341" width="0.0801%" height="15" fill="rgb(250,96,34)" fg:x="1099" fg:w="1"/><text x="88.2404%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.0705%" y="517" width="0.0801%" height="15" fill="rgb(221,15,4)" fg:x="1100" fg:w="1"/><text x="88.3205%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.0705%" y="501" width="0.0801%" height="15" fill="rgb(217,149,33)" fg:x="1100" fg:w="1"/><text x="88.3205%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.0705%" y="485" width="0.0801%" height="15" fill="rgb(213,58,29)" fg:x="1100" fg:w="1"/><text x="88.3205%" y="495.50"></text></g><g><title>engine::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="88.0705%" y="597" width="0.3203%" height="15" fill="rgb(236,218,9)" fg:x="1100" fg:w="4"/><text x="88.3205%" y="607.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="88.0705%" y="581" width="0.3203%" height="15" fill="rgb(248,40,19)" fg:x="1100" fg:w="4"/><text x="88.3205%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="88.0705%" y="565" width="0.3203%" height="15" fill="rgb(212,17,6)" fg:x="1100" fg:w="4"/><text x="88.3205%" y="575.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="88.0705%" y="549" width="0.3203%" height="15" fill="rgb(206,212,20)" fg:x="1100" fg:w="4"/><text x="88.3205%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="88.0705%" y="533" width="0.3203%" height="15" fill="rgb(229,80,37)" fg:x="1100" fg:w="4"/><text x="88.3205%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="88.1505%" y="517" width="0.2402%" height="15" fill="rgb(253,8,37)" fg:x="1101" fg:w="3"/><text x="88.4005%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="88.1505%" y="501" width="0.2402%" height="15" fill="rgb(215,16,43)" fg:x="1101" fg:w="3"/><text x="88.4005%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.3106%" y="485" width="0.0801%" height="15" fill="rgb(236,219,16)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.3106%" y="469" width="0.0801%" height="15" fill="rgb(251,0,3)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.3106%" y="453" width="0.0801%" height="15" fill="rgb(207,133,37)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.3106%" y="437" width="0.0801%" height="15" fill="rgb(250,143,20)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.3106%" y="421" width="0.0801%" height="15" fill="rgb(242,19,50)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.3106%" y="405" width="0.0801%" height="15" fill="rgb(206,124,43)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="88.3106%" y="389" width="0.0801%" height="15" fill="rgb(229,4,38)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.3106%" y="373" width="0.0801%" height="15" fill="rgb(247,220,45)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="383.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="88.0705%" y="629" width="0.4003%" height="15" fill="rgb(247,195,0)" fg:x="1100" fg:w="5"/><text x="88.3205%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="88.0705%" y="613" width="0.4003%" height="15" fill="rgb(252,12,19)" fg:x="1100" fg:w="5"/><text x="88.3205%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="88.3907%" y="597" width="0.0801%" height="15" fill="rgb(222,49,50)" fg:x="1104" fg:w="1"/><text x="88.6407%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="88.4708%" y="597" width="0.0801%" height="15" fill="rgb(209,157,28)" fg:x="1105" fg:w="1"/><text x="88.7208%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="88.5508%" y="565" width="0.0801%" height="15" fill="rgb(238,174,24)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="575.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="88.5508%" y="549" width="0.0801%" height="15" fill="rgb(224,17,28)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="88.5508%" y="533" width="0.0801%" height="15" fill="rgb(249,7,29)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.6309%" y="517" width="0.0801%" height="15" fill="rgb(243,178,4)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.6309%" y="501" width="0.0801%" height="15" fill="rgb(246,138,35)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.6309%" y="485" width="0.0801%" height="15" fill="rgb(251,85,18)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.6309%" y="469" width="0.0801%" height="15" fill="rgb(254,55,9)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.6309%" y="453" width="0.0801%" height="15" fill="rgb(248,4,50)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.6309%" y="437" width="0.0801%" height="15" fill="rgb(215,208,14)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.6309%" y="421" width="0.0801%" height="15" fill="rgb(218,37,18)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.6309%" y="405" width="0.0801%" height="15" fill="rgb(206,104,13)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.6309%" y="389" width="0.0801%" height="15" fill="rgb(248,94,22)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.6309%" y="373" width="0.0801%" height="15" fill="rgb(235,42,46)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.6309%" y="357" width="0.0801%" height="15" fill="rgb(220,228,48)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.6309%" y="341" width="0.0801%" height="15" fill="rgb(216,58,12)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.7110%" y="517" width="0.0801%" height="15" fill="rgb(223,97,52)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="88.7110%" y="501" width="0.0801%" height="15" fill="rgb(208,159,17)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.7110%" y="485" width="0.0801%" height="15" fill="rgb(215,172,9)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.7110%" y="469" width="0.0801%" height="15" fill="rgb(252,175,30)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.7110%" y="453" width="0.0801%" height="15" fill="rgb(209,159,10)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="463.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="88.5508%" y="597" width="0.3203%" height="15" fill="rgb(229,73,51)" fg:x="1106" fg:w="4"/><text x="88.8008%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="88.5508%" y="581" width="0.3203%" height="15" fill="rgb(208,212,43)" fg:x="1106" fg:w="4"/><text x="88.8008%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="88.6309%" y="565" width="0.2402%" height="15" fill="rgb(254,123,53)" fg:x="1107" fg:w="3"/><text x="88.8809%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="88.6309%" y="549" width="0.2402%" height="15" fill="rgb(254,128,49)" fg:x="1107" fg:w="3"/><text x="88.8809%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="88.6309%" y="533" width="0.2402%" height="15" fill="rgb(246,16,16)" fg:x="1107" fg:w="3"/><text x="88.8809%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.7910%" y="517" width="0.0801%" height="15" fill="rgb(209,200,1)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.7910%" y="501" width="0.0801%" height="15" fill="rgb(235,9,3)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.7910%" y="485" width="0.0801%" height="15" fill="rgb(233,121,54)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.7910%" y="469" width="0.0801%" height="15" fill="rgb(236,80,25)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.7910%" y="453" width="0.0801%" height="15" fill="rgb(220,44,24)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.7910%" y="437" width="0.0801%" height="15" fill="rgb(236,225,16)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.7910%" y="421" width="0.0801%" height="15" fill="rgb(237,140,0)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.7910%" y="405" width="0.0801%" height="15" fill="rgb(243,225,53)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.7910%" y="389" width="0.0801%" height="15" fill="rgb(240,140,30)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.7910%" y="373" width="0.0801%" height="15" fill="rgb(217,51,16)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="88.8711%" y="597" width="0.0801%" height="15" fill="rgb(245,75,50)" fg:x="1110" fg:w="1"/><text x="89.1211%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.8711%" y="581" width="0.0801%" height="15" fill="rgb(208,174,22)" fg:x="1110" fg:w="1"/><text x="89.1211%" y="591.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="88.9512%" y="581" width="0.0801%" height="15" fill="rgb(219,98,50)" fg:x="1111" fg:w="1"/><text x="89.2012%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.9512%" y="565" width="0.0801%" height="15" fill="rgb(243,138,3)" fg:x="1111" fg:w="1"/><text x="89.2012%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="88.9512%" y="549" width="0.0801%" height="15" fill="rgb(243,132,26)" fg:x="1111" fg:w="1"/><text x="89.2012%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="88.9512%" y="533" width="0.0801%" height="15" fill="rgb(250,201,8)" fg:x="1111" fg:w="1"/><text x="89.2012%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.9512%" y="517" width="0.0801%" height="15" fill="rgb(213,91,26)" fg:x="1111" fg:w="1"/><text x="89.2012%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="88.9512%" y="597" width="0.1601%" height="15" fill="rgb(229,117,1)" fg:x="1111" fg:w="2"/><text x="89.2012%" y="607.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="89.0312%" y="581" width="0.0801%" height="15" fill="rgb(229,24,6)" fg:x="1112" fg:w="1"/><text x="89.2812%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.0312%" y="565" width="0.0801%" height="15" fill="rgb(206,69,11)" fg:x="1112" fg:w="1"/><text x="89.2812%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.0312%" y="549" width="0.0801%" height="15" fill="rgb(234,111,34)" fg:x="1112" fg:w="1"/><text x="89.2812%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.0312%" y="533" width="0.0801%" height="15" fill="rgb(213,187,51)" fg:x="1112" fg:w="1"/><text x="89.2812%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="89.1113%" y="549" width="0.0801%" height="15" fill="rgb(207,45,11)" fg:x="1113" fg:w="1"/><text x="89.3613%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="89.1113%" y="533" width="0.0801%" height="15" fill="rgb(225,151,47)" fg:x="1113" fg:w="1"/><text x="89.3613%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="89.1113%" y="517" width="0.0801%" height="15" fill="rgb(211,226,5)" fg:x="1113" fg:w="1"/><text x="89.3613%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.1113%" y="501" width="0.0801%" height="15" fill="rgb(214,83,52)" fg:x="1113" fg:w="1"/><text x="89.3613%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.1113%" y="485" width="0.0801%" height="15" fill="rgb(229,49,53)" fg:x="1113" fg:w="1"/><text x="89.3613%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.1113%" y="469" width="0.0801%" height="15" fill="rgb(246,8,28)" fg:x="1113" fg:w="1"/><text x="89.3613%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.1113%" y="453" width="0.0801%" height="15" fill="rgb(207,28,41)" fg:x="1113" fg:w="1"/><text x="89.3613%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="89.1113%" y="437" width="0.0801%" height="15" fill="rgb(254,22,25)" fg:x="1113" fg:w="1"/><text x="89.3613%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.1113%" y="421" width="0.0801%" height="15" fill="rgb(209,120,42)" fg:x="1113" fg:w="1"/><text x="89.3613%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.1113%" y="405" width="0.0801%" height="15" fill="rgb(216,194,18)" fg:x="1113" fg:w="1"/><text x="89.3613%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.1113%" y="389" width="0.0801%" height="15" fill="rgb(213,70,17)" fg:x="1113" fg:w="1"/><text x="89.3613%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="89.1113%" y="373" width="0.0801%" height="15" fill="rgb(228,66,19)" fg:x="1113" fg:w="1"/><text x="89.3613%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.1113%" y="357" width="0.0801%" height="15" fill="rgb(236,221,54)" fg:x="1113" fg:w="1"/><text x="89.3613%" y="367.50"></text></g><g><title>plugins_core::build::Build::occupying (10 samples, 0.80%)</title><rect x="88.4708%" y="629" width="0.8006%" height="15" fill="rgb(207,175,15)" fg:x="1105" fg:w="10"/><text x="88.7208%" y="639.50"></text></g><g><title>plugins_core::tools::set_occupying (10 samples, 0.80%)</title><rect x="88.4708%" y="613" width="0.8006%" height="15" fill="rgb(234,76,8)" fg:x="1105" fg:w="10"/><text x="88.7208%" y="623.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (2 samples, 0.16%)</title><rect x="89.1113%" y="597" width="0.1601%" height="15" fill="rgb(243,106,0)" fg:x="1113" fg:w="2"/><text x="89.3613%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="89.1113%" y="581" width="0.1601%" height="15" fill="rgb(208,48,19)" fg:x="1113" fg:w="2"/><text x="89.3613%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="89.1113%" y="565" width="0.1601%" height="15" fill="rgb(251,50,29)" fg:x="1113" fg:w="2"/><text x="89.3613%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="89.1914%" y="549" width="0.0801%" height="15" fill="rgb(222,31,49)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="89.1914%" y="533" width="0.0801%" height="15" fill="rgb(232,33,18)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="89.1914%" y="517" width="0.0801%" height="15" fill="rgb(209,1,44)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.1914%" y="501" width="0.0801%" height="15" fill="rgb(211,7,1)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.1914%" y="485" width="0.0801%" height="15" fill="rgb(224,111,27)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.1914%" y="469" width="0.0801%" height="15" fill="rgb(252,195,39)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.1914%" y="453" width="0.0801%" height="15" fill="rgb(237,198,5)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.1914%" y="437" width="0.0801%" height="15" fill="rgb(232,148,1)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="89.2714%" y="565" width="0.0801%" height="15" fill="rgb(249,41,3)" fg:x="1115" fg:w="1"/><text x="89.5214%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="89.2714%" y="549" width="0.0801%" height="15" fill="rgb(215,14,33)" fg:x="1115" fg:w="1"/><text x="89.5214%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.2714%" y="533" width="0.0801%" height="15" fill="rgb(209,146,24)" fg:x="1115" fg:w="1"/><text x="89.5214%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="89.3515%" y="549" width="0.0801%" height="15" fill="rgb(219,51,47)" fg:x="1116" fg:w="1"/><text x="89.6015%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="89.3515%" y="533" width="0.0801%" height="15" fill="rgb(234,217,40)" fg:x="1116" fg:w="1"/><text x="89.6015%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.3515%" y="517" width="0.0801%" height="15" fill="rgb(228,34,26)" fg:x="1116" fg:w="1"/><text x="89.6015%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.3515%" y="501" width="0.0801%" height="15" fill="rgb(224,50,29)" fg:x="1116" fg:w="1"/><text x="89.6015%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.3515%" y="485" width="0.0801%" height="15" fill="rgb(205,79,51)" fg:x="1116" fg:w="1"/><text x="89.6015%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.3515%" y="469" width="0.0801%" height="15" fill="rgb(218,136,28)" fg:x="1116" fg:w="1"/><text x="89.6015%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.3515%" y="453" width="0.0801%" height="15" fill="rgb(220,150,10)" fg:x="1116" fg:w="1"/><text x="89.6015%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="89.2714%" y="613" width="0.2402%" height="15" fill="rgb(242,158,47)" fg:x="1115" fg:w="3"/><text x="89.5214%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="89.2714%" y="597" width="0.2402%" height="15" fill="rgb(209,68,0)" fg:x="1115" fg:w="3"/><text x="89.5214%" y="607.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="89.2714%" y="581" width="0.2402%" height="15" fill="rgb(208,13,41)" fg:x="1115" fg:w="3"/><text x="89.5214%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="89.3515%" y="565" width="0.1601%" height="15" fill="rgb(226,201,7)" fg:x="1116" fg:w="2"/><text x="89.6015%" y="575.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="89.4315%" y="549" width="0.0801%" height="15" fill="rgb(236,103,26)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="89.4315%" y="533" width="0.0801%" height="15" fill="rgb(243,162,8)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.4315%" y="517" width="0.0801%" height="15" fill="rgb(237,225,11)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.4315%" y="501" width="0.0801%" height="15" fill="rgb(247,186,32)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.4315%" y="485" width="0.0801%" height="15" fill="rgb(215,26,28)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.4315%" y="469" width="0.0801%" height="15" fill="rgb(208,121,6)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.4315%" y="453" width="0.0801%" height="15" fill="rgb(225,91,3)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.4315%" y="437" width="0.0801%" height="15" fill="rgb(246,119,36)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.4315%" y="421" width="0.0801%" height="15" fill="rgb(254,173,2)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.4315%" y="405" width="0.0801%" height="15" fill="rgb(209,87,54)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.4315%" y="389" width="0.0801%" height="15" fill="rgb(223,216,20)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.4315%" y="373" width="0.0801%" height="15" fill="rgb(220,31,8)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.4315%" y="357" width="0.0801%" height="15" fill="rgb(220,185,15)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.4315%" y="341" width="0.0801%" height="15" fill="rgb(247,190,50)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.4315%" y="325" width="0.0801%" height="15" fill="rgb(239,173,47)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.4315%" y="309" width="0.0801%" height="15" fill="rgb(218,190,42)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.4315%" y="293" width="0.0801%" height="15" fill="rgb(251,207,16)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="303.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="89.5116%" y="581" width="0.0801%" height="15" fill="rgb(222,199,47)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.5116%" y="565" width="0.0801%" height="15" fill="rgb(245,190,7)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.5116%" y="549" width="0.0801%" height="15" fill="rgb(239,85,38)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.5116%" y="533" width="0.0801%" height="15" fill="rgb(229,69,51)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.5116%" y="517" width="0.0801%" height="15" fill="rgb(231,104,51)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.5116%" y="501" width="0.0801%" height="15" fill="rgb(235,49,4)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.5116%" y="485" width="0.0801%" height="15" fill="rgb(246,166,20)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="89.5116%" y="469" width="0.0801%" height="15" fill="rgb(230,119,37)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="89.5116%" y="453" width="0.0801%" height="15" fill="rgb(234,77,34)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="463.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (104 samples, 8.33%)</title><rect x="81.4251%" y="645" width="8.3267%" height="15" fill="rgb(211,222,33)" fg:x="1017" fg:w="104"/><text x="81.6751%" y="655.50">plugins_core..</text></g><g><title>plugins_core::build::Build::with_username (6 samples, 0.48%)</title><rect x="89.2714%" y="629" width="0.4804%" height="15" fill="rgb(226,45,42)" fg:x="1115" fg:w="6"/><text x="89.5214%" y="639.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (3 samples, 0.24%)</title><rect x="89.5116%" y="613" width="0.2402%" height="15" fill="rgb(215,174,28)" fg:x="1118" fg:w="3"/><text x="89.7616%" y="623.50"></text></g><g><title>engine::users::model::add_username_to_key (3 samples, 0.24%)</title><rect x="89.5116%" y="597" width="0.2402%" height="15" fill="rgb(254,173,49)" fg:x="1118" fg:w="3"/><text x="89.7616%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="89.5917%" y="581" width="0.1601%" height="15" fill="rgb(229,191,6)" fg:x="1119" fg:w="2"/><text x="89.8417%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="89.7518%" y="597" width="0.0801%" height="15" fill="rgb(212,145,22)" fg:x="1121" fg:w="1"/><text x="90.0018%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="89.7518%" y="581" width="0.0801%" height="15" fill="rgb(226,6,51)" fg:x="1121" fg:w="1"/><text x="90.0018%" y="591.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="89.7518%" y="565" width="0.0801%" height="15" fill="rgb(227,128,8)" fg:x="1121" fg:w="1"/><text x="90.0018%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="89.7518%" y="549" width="0.0801%" height="15" fill="rgb(205,24,10)" fg:x="1121" fg:w="1"/><text x="90.0018%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="89.7518%" y="613" width="0.2402%" height="15" fill="rgb(217,147,27)" fg:x="1121" fg:w="3"/><text x="90.0018%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="89.8319%" y="597" width="0.1601%" height="15" fill="rgb(250,82,42)" fg:x="1122" fg:w="2"/><text x="90.0819%" y="607.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="89.8319%" y="581" width="0.1601%" height="15" fill="rgb(248,93,17)" fg:x="1122" fg:w="2"/><text x="90.0819%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="89.8319%" y="565" width="0.1601%" height="15" fill="rgb(254,212,40)" fg:x="1122" fg:w="2"/><text x="90.0819%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="89.8319%" y="549" width="0.1601%" height="15" fill="rgb(229,209,2)" fg:x="1122" fg:w="2"/><text x="90.0819%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="89.8319%" y="533" width="0.1601%" height="15" fill="rgb(211,50,43)" fg:x="1122" fg:w="2"/><text x="90.0819%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="89.8319%" y="517" width="0.1601%" height="15" fill="rgb(245,196,29)" fg:x="1122" fg:w="2"/><text x="90.0819%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.8319%" y="501" width="0.1601%" height="15" fill="rgb(216,132,13)" fg:x="1122" fg:w="2"/><text x="90.0819%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="89.8319%" y="485" width="0.1601%" height="15" fill="rgb(251,108,21)" fg:x="1122" fg:w="2"/><text x="90.0819%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.8319%" y="469" width="0.1601%" height="15" fill="rgb(229,174,54)" fg:x="1122" fg:w="2"/><text x="90.0819%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="89.8319%" y="453" width="0.1601%" height="15" fill="rgb(211,175,47)" fg:x="1122" fg:w="2"/><text x="90.0819%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.8319%" y="437" width="0.1601%" height="15" fill="rgb(234,5,37)" fg:x="1122" fg:w="2"/><text x="90.0819%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="89.8319%" y="421" width="0.1601%" height="15" fill="rgb(244,150,43)" fg:x="1122" fg:w="2"/><text x="90.0819%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.8319%" y="405" width="0.1601%" height="15" fill="rgb(242,172,38)" fg:x="1122" fg:w="2"/><text x="90.0819%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="89.8319%" y="389" width="0.1601%" height="15" fill="rgb(205,27,8)" fg:x="1122" fg:w="2"/><text x="90.0819%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.9119%" y="373" width="0.0801%" height="15" fill="rgb(217,57,3)" fg:x="1123" fg:w="1"/><text x="90.1619%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.9119%" y="357" width="0.0801%" height="15" fill="rgb(242,21,38)" fg:x="1123" fg:w="1"/><text x="90.1619%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.9119%" y="341" width="0.0801%" height="15" fill="rgb(209,64,43)" fg:x="1123" fg:w="1"/><text x="90.1619%" y="351.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (169 samples, 13.53%)</title><rect x="76.6213%" y="661" width="13.5308%" height="15" fill="rgb(222,2,46)" fg:x="957" fg:w="169"/><text x="76.8713%" y="671.50">&lt;tests::HoldingKeyIn..</text></g><g><title>plugins_core::build::BuildSurroundings::make (5 samples, 0.40%)</title><rect x="89.7518%" y="645" width="0.4003%" height="15" fill="rgb(218,19,44)" fg:x="1121" fg:w="5"/><text x="90.0018%" y="655.50"></text></g><g><title>plugins_core::build::QuickThing::make (5 samples, 0.40%)</title><rect x="89.7518%" y="629" width="0.4003%" height="15" fill="rgb(240,203,42)" fg:x="1121" fg:w="5"/><text x="90.0018%" y="639.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="89.9920%" y="613" width="0.1601%" height="15" fill="rgb(229,23,45)" fg:x="1124" fg:w="2"/><text x="90.2420%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="89.9920%" y="597" width="0.1601%" height="15" fill="rgb(205,228,51)" fg:x="1124" fg:w="2"/><text x="90.2420%" y="607.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="89.9920%" y="581" width="0.1601%" height="15" fill="rgb(239,36,20)" fg:x="1124" fg:w="2"/><text x="90.2420%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="89.9920%" y="565" width="0.1601%" height="15" fill="rgb(248,172,27)" fg:x="1124" fg:w="2"/><text x="90.2420%" y="575.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="89.9920%" y="549" width="0.1601%" height="15" fill="rgb(244,55,32)" fg:x="1124" fg:w="2"/><text x="90.2420%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="89.9920%" y="533" width="0.1601%" height="15" fill="rgb(215,97,16)" fg:x="1124" fg:w="2"/><text x="90.2420%" y="543.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="89.9920%" y="517" width="0.1601%" height="15" fill="rgb(224,80,29)" fg:x="1124" fg:w="2"/><text x="90.2420%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="89.9920%" y="501" width="0.1601%" height="15" fill="rgb(216,93,47)" fg:x="1124" fg:w="2"/><text x="90.2420%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="90.0721%" y="485" width="0.0801%" height="15" fill="rgb(238,159,10)" fg:x="1125" fg:w="1"/><text x="90.3221%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="90.0721%" y="469" width="0.0801%" height="15" fill="rgb(223,98,29)" fg:x="1125" fg:w="1"/><text x="90.3221%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.0721%" y="453" width="0.0801%" height="15" fill="rgb(210,176,23)" fg:x="1125" fg:w="1"/><text x="90.3221%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="90.0721%" y="437" width="0.0801%" height="15" fill="rgb(242,162,27)" fg:x="1125" fg:w="1"/><text x="90.3221%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.0721%" y="421" width="0.0801%" height="15" fill="rgb(245,109,32)" fg:x="1125" fg:w="1"/><text x="90.3221%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="90.1521%" y="661" width="0.1601%" height="15" fill="rgb(248,87,8)" fg:x="1126" fg:w="2"/><text x="90.4021%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="90.3122%" y="533" width="0.0801%" height="15" fill="rgb(250,160,50)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="90.3122%" y="517" width="0.0801%" height="15" fill="rgb(246,165,25)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="527.50"></text></g><g><title>core::fmt::run (1 samples, 0.08%)</title><rect x="90.3122%" y="501" width="0.0801%" height="15" fill="rgb(249,219,3)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="90.3122%" y="485" width="0.0801%" height="15" fill="rgb(226,66,5)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.3122%" y="469" width="0.0801%" height="15" fill="rgb(250,220,43)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.3122%" y="453" width="0.0801%" height="15" fill="rgb(225,111,31)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="90.3122%" y="437" width="0.0801%" height="15" fill="rgb(248,106,18)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="90.3122%" y="421" width="0.0801%" height="15" fill="rgb(220,226,45)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="90.3122%" y="405" width="0.0801%" height="15" fill="rgb(208,58,53)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="90.3122%" y="389" width="0.0801%" height="15" fill="rgb(209,133,1)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="90.3122%" y="373" width="0.0801%" height="15" fill="rgb(228,216,27)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="383.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="90.3122%" y="645" width="0.1601%" height="15" fill="rgb(238,155,2)" fg:x="1128" fg:w="2"/><text x="90.5622%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="90.3122%" y="629" width="0.1601%" height="15" fill="rgb(244,99,37)" fg:x="1128" fg:w="2"/><text x="90.5622%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="90.3122%" y="613" width="0.1601%" height="15" fill="rgb(254,32,3)" fg:x="1128" fg:w="2"/><text x="90.5622%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="90.3122%" y="597" width="0.1601%" height="15" fill="rgb(234,46,50)" fg:x="1128" fg:w="2"/><text x="90.5622%" y="607.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="90.3122%" y="581" width="0.1601%" height="15" fill="rgb(232,118,51)" fg:x="1128" fg:w="2"/><text x="90.5622%" y="591.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (2 samples, 0.16%)</title><rect x="90.3122%" y="565" width="0.1601%" height="15" fill="rgb(207,24,32)" fg:x="1128" fg:w="2"/><text x="90.5622%" y="575.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.16%)</title><rect x="90.3122%" y="549" width="0.1601%" height="15" fill="rgb(208,107,43)" fg:x="1128" fg:w="2"/><text x="90.5622%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="90.3923%" y="533" width="0.0801%" height="15" fill="rgb(231,28,9)" fg:x="1129" fg:w="1"/><text x="90.6423%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="90.3923%" y="517" width="0.0801%" height="15" fill="rgb(241,204,15)" fg:x="1129" fg:w="1"/><text x="90.6423%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.5524%" y="613" width="0.0801%" height="15" fill="rgb(214,54,15)" fg:x="1131" fg:w="1"/><text x="90.8024%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.5524%" y="597" width="0.0801%" height="15" fill="rgb(230,12,28)" fg:x="1131" fg:w="1"/><text x="90.8024%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.5524%" y="581" width="0.0801%" height="15" fill="rgb(221,171,5)" fg:x="1131" fg:w="1"/><text x="90.8024%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.5524%" y="565" width="0.0801%" height="15" fill="rgb(207,72,25)" fg:x="1131" fg:w="1"/><text x="90.8024%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.5524%" y="549" width="0.0801%" height="15" fill="rgb(249,79,37)" fg:x="1131" fg:w="1"/><text x="90.8024%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="90.5524%" y="533" width="0.0801%" height="15" fill="rgb(209,98,49)" fg:x="1131" fg:w="1"/><text x="90.8024%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="90.5524%" y="517" width="0.0801%" height="15" fill="rgb(221,62,13)" fg:x="1131" fg:w="1"/><text x="90.8024%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="90.5524%" y="629" width="0.1601%" height="15" fill="rgb(223,39,6)" fg:x="1131" fg:w="2"/><text x="90.8024%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.6325%" y="613" width="0.0801%" height="15" fill="rgb(246,163,20)" fg:x="1132" fg:w="1"/><text x="90.8825%" y="623.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="90.7126%" y="629" width="0.0801%" height="15" fill="rgb(211,111,29)" fg:x="1133" fg:w="1"/><text x="90.9626%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="90.7126%" y="613" width="0.0801%" height="15" fill="rgb(243,118,5)" fg:x="1133" fg:w="1"/><text x="90.9626%" y="623.50"></text></g><g><title>engine::session::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="90.7126%" y="597" width="0.0801%" height="15" fill="rgb(240,144,52)" fg:x="1133" fg:w="1"/><text x="90.9626%" y="607.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="90.7926%" y="629" width="0.1601%" height="15" fill="rgb(244,158,36)" fg:x="1134" fg:w="2"/><text x="91.0426%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="90.7926%" y="613" width="0.1601%" height="15" fill="rgb(241,109,37)" fg:x="1134" fg:w="2"/><text x="91.0426%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="90.8727%" y="597" width="0.0801%" height="15" fill="rgb(213,95,32)" fg:x="1135" fg:w="1"/><text x="91.1227%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.8727%" y="581" width="0.0801%" height="15" fill="rgb(252,193,9)" fg:x="1135" fg:w="1"/><text x="91.1227%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.8727%" y="565" width="0.0801%" height="15" fill="rgb(225,213,21)" fg:x="1135" fg:w="1"/><text x="91.1227%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="90.9528%" y="613" width="0.0801%" height="15" fill="rgb(220,172,46)" fg:x="1136" fg:w="1"/><text x="91.2028%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="90.9528%" y="597" width="0.0801%" height="15" fill="rgb(235,75,41)" fg:x="1136" fg:w="1"/><text x="91.2028%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="90.9528%" y="581" width="0.0801%" height="15" fill="rgb(213,86,9)" fg:x="1136" fg:w="1"/><text x="91.2028%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.0328%" y="597" width="0.0801%" height="15" fill="rgb(238,127,51)" fg:x="1137" fg:w="1"/><text x="91.2828%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.0328%" y="581" width="0.0801%" height="15" fill="rgb(215,2,54)" fg:x="1137" fg:w="1"/><text x="91.2828%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.0328%" y="565" width="0.0801%" height="15" fill="rgb(245,80,6)" fg:x="1137" fg:w="1"/><text x="91.2828%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.0328%" y="549" width="0.0801%" height="15" fill="rgb(233,106,42)" fg:x="1137" fg:w="1"/><text x="91.2828%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.0328%" y="533" width="0.0801%" height="15" fill="rgb(244,86,38)" fg:x="1137" fg:w="1"/><text x="91.2828%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.0328%" y="517" width="0.0801%" height="15" fill="rgb(242,167,7)" fg:x="1137" fg:w="1"/><text x="91.2828%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.0328%" y="501" width="0.0801%" height="15" fill="rgb(218,216,3)" fg:x="1137" fg:w="1"/><text x="91.2828%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.0328%" y="485" width="0.0801%" height="15" fill="rgb(206,136,36)" fg:x="1137" fg:w="1"/><text x="91.2828%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.0328%" y="469" width="0.0801%" height="15" fill="rgb(206,206,15)" fg:x="1137" fg:w="1"/><text x="91.2828%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.0328%" y="453" width="0.0801%" height="15" fill="rgb(207,163,34)" fg:x="1137" fg:w="1"/><text x="91.2828%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.0328%" y="437" width="0.0801%" height="15" fill="rgb(240,127,22)" fg:x="1137" fg:w="1"/><text x="91.2828%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.0328%" y="421" width="0.0801%" height="15" fill="rgb(227,49,5)" fg:x="1137" fg:w="1"/><text x="91.2828%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="91.1129%" y="581" width="0.0801%" height="15" fill="rgb(231,8,6)" fg:x="1138" fg:w="1"/><text x="91.3629%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="91.1930%" y="565" width="0.0801%" height="15" fill="rgb(223,21,24)" fg:x="1139" fg:w="1"/><text x="91.4430%" y="575.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="91.1930%" y="581" width="0.2402%" height="15" fill="rgb(244,44,52)" fg:x="1139" fg:w="3"/><text x="91.4430%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="91.2730%" y="565" width="0.1601%" height="15" fill="rgb(207,73,28)" fg:x="1140" fg:w="2"/><text x="91.5230%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="91.3531%" y="549" width="0.0801%" height="15" fill="rgb(234,215,10)" fg:x="1141" fg:w="1"/><text x="91.6031%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="91.3531%" y="533" width="0.0801%" height="15" fill="rgb(236,85,3)" fg:x="1141" fg:w="1"/><text x="91.6031%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="91.4331%" y="565" width="0.0801%" height="15" fill="rgb(236,102,39)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="91.5132%" y="549" width="0.1601%" height="15" fill="rgb(243,50,8)" fg:x="1143" fg:w="2"/><text x="91.7632%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="91.5132%" y="533" width="0.1601%" height="15" fill="rgb(207,111,4)" fg:x="1143" fg:w="2"/><text x="91.7632%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="91.5132%" y="517" width="0.1601%" height="15" fill="rgb(230,52,42)" fg:x="1143" fg:w="2"/><text x="91.7632%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="91.5132%" y="501" width="0.1601%" height="15" fill="rgb(252,178,50)" fg:x="1143" fg:w="2"/><text x="91.7632%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="91.5933%" y="485" width="0.0801%" height="15" fill="rgb(234,46,35)" fg:x="1144" fg:w="1"/><text x="91.8433%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="91.7534%" y="533" width="0.0801%" height="15" fill="rgb(228,69,37)" fg:x="1146" fg:w="1"/><text x="92.0034%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="91.7534%" y="517" width="0.0801%" height="15" fill="rgb(221,21,11)" fg:x="1146" fg:w="1"/><text x="92.0034%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="91.7534%" y="501" width="0.0801%" height="15" fill="rgb(223,56,9)" fg:x="1146" fg:w="1"/><text x="92.0034%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="91.8335%" y="517" width="0.0801%" height="15" fill="rgb(234,30,19)" fg:x="1147" fg:w="1"/><text x="92.0835%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="91.9936%" y="501" width="0.1601%" height="15" fill="rgb(211,64,54)" fg:x="1149" fg:w="2"/><text x="92.2436%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="91.9936%" y="485" width="0.1601%" height="15" fill="rgb(250,189,5)" fg:x="1149" fg:w="2"/><text x="92.2436%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.0737%" y="469" width="0.0801%" height="15" fill="rgb(214,180,13)" fg:x="1150" fg:w="1"/><text x="92.3237%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="92.0737%" y="453" width="0.0801%" height="15" fill="rgb(238,40,40)" fg:x="1150" fg:w="1"/><text x="92.3237%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="91.8335%" y="533" width="0.4003%" height="15" fill="rgb(214,101,38)" fg:x="1147" fg:w="5"/><text x="92.0835%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="91.9135%" y="517" width="0.3203%" height="15" fill="rgb(242,65,53)" fg:x="1148" fg:w="4"/><text x="92.1635%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="92.1537%" y="501" width="0.0801%" height="15" fill="rgb(230,22,45)" fg:x="1151" fg:w="1"/><text x="92.4037%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.1537%" y="485" width="0.0801%" height="15" fill="rgb(223,77,1)" fg:x="1151" fg:w="1"/><text x="92.4037%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.1537%" y="469" width="0.0801%" height="15" fill="rgb(227,33,37)" fg:x="1151" fg:w="1"/><text x="92.4037%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.1537%" y="453" width="0.0801%" height="15" fill="rgb(224,148,39)" fg:x="1151" fg:w="1"/><text x="92.4037%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="92.1537%" y="437" width="0.0801%" height="15" fill="rgb(232,212,39)" fg:x="1151" fg:w="1"/><text x="92.4037%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="92.1537%" y="421" width="0.0801%" height="15" fill="rgb(251,172,7)" fg:x="1151" fg:w="1"/><text x="92.4037%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="92.1537%" y="405" width="0.0801%" height="15" fill="rgb(219,39,9)" fg:x="1151" fg:w="1"/><text x="92.4037%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="91.5132%" y="565" width="0.8807%" height="15" fill="rgb(228,118,14)" fg:x="1143" fg:w="11"/><text x="91.7632%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="91.6733%" y="549" width="0.7206%" height="15" fill="rgb(207,140,10)" fg:x="1145" fg:w="9"/><text x="91.9233%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="92.2338%" y="533" width="0.1601%" height="15" fill="rgb(227,111,53)" fg:x="1152" fg:w="2"/><text x="92.4838%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.3139%" y="517" width="0.0801%" height="15" fill="rgb(216,165,16)" fg:x="1153" fg:w="1"/><text x="92.5639%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.3139%" y="501" width="0.0801%" height="15" fill="rgb(226,111,18)" fg:x="1153" fg:w="1"/><text x="92.5639%" y="511.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (19 samples, 1.52%)</title><rect x="91.1129%" y="597" width="1.5212%" height="15" fill="rgb(251,27,17)" fg:x="1138" fg:w="19"/><text x="91.3629%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="91.4331%" y="581" width="1.2010%" height="15" fill="rgb(254,69,9)" fg:x="1142" fg:w="15"/><text x="91.6831%" y="591.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="92.3939%" y="565" width="0.2402%" height="15" fill="rgb(234,140,37)" fg:x="1154" fg:w="3"/><text x="92.6439%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="92.4740%" y="549" width="0.1601%" height="15" fill="rgb(220,93,8)" fg:x="1155" fg:w="2"/><text x="92.7240%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="92.5540%" y="533" width="0.0801%" height="15" fill="rgb(236,113,3)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.6341%" y="565" width="0.0801%" height="15" fill="rgb(234,108,23)" fg:x="1157" fg:w="1"/><text x="92.8841%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.7942%" y="501" width="0.0801%" height="15" fill="rgb(205,114,34)" fg:x="1159" fg:w="1"/><text x="93.0442%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.7942%" y="485" width="0.0801%" height="15" fill="rgb(236,200,45)" fg:x="1159" fg:w="1"/><text x="93.0442%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.8743%" y="469" width="0.0801%" height="15" fill="rgb(227,194,29)" fg:x="1160" fg:w="1"/><text x="93.1243%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="92.6341%" y="597" width="0.4804%" height="15" fill="rgb(250,76,42)" fg:x="1157" fg:w="6"/><text x="92.8841%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="92.6341%" y="581" width="0.4804%" height="15" fill="rgb(208,128,8)" fg:x="1157" fg:w="6"/><text x="92.8841%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="92.7142%" y="565" width="0.4003%" height="15" fill="rgb(229,209,35)" fg:x="1158" fg:w="5"/><text x="92.9642%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="92.7942%" y="549" width="0.3203%" height="15" fill="rgb(215,39,53)" fg:x="1159" fg:w="4"/><text x="93.0442%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="92.7942%" y="533" width="0.3203%" height="15" fill="rgb(219,123,41)" fg:x="1159" fg:w="4"/><text x="93.0442%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="92.7942%" y="517" width="0.3203%" height="15" fill="rgb(212,158,18)" fg:x="1159" fg:w="4"/><text x="93.0442%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="92.8743%" y="501" width="0.2402%" height="15" fill="rgb(234,196,53)" fg:x="1160" fg:w="3"/><text x="93.1243%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="92.8743%" y="485" width="0.2402%" height="15" fill="rgb(210,139,12)" fg:x="1160" fg:w="3"/><text x="93.1243%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="92.9544%" y="469" width="0.1601%" height="15" fill="rgb(220,116,54)" fg:x="1161" fg:w="2"/><text x="93.2044%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="92.9544%" y="453" width="0.1601%" height="15" fill="rgb(247,103,28)" fg:x="1161" fg:w="2"/><text x="93.2044%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="93.1145%" y="533" width="0.1601%" height="15" fill="rgb(253,156,45)" fg:x="1163" fg:w="2"/><text x="93.3645%" y="543.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (3 samples, 0.24%)</title><rect x="93.1145%" y="581" width="0.2402%" height="15" fill="rgb(237,157,52)" fg:x="1163" fg:w="3"/><text x="93.3645%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="93.1145%" y="565" width="0.2402%" height="15" fill="rgb(253,112,16)" fg:x="1163" fg:w="3"/><text x="93.3645%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="93.1145%" y="549" width="0.2402%" height="15" fill="rgb(234,70,18)" fg:x="1163" fg:w="3"/><text x="93.3645%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.2746%" y="533" width="0.0801%" height="15" fill="rgb(247,138,19)" fg:x="1165" fg:w="1"/><text x="93.5246%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.4347%" y="549" width="0.0801%" height="15" fill="rgb(207,171,1)" fg:x="1167" fg:w="1"/><text x="93.6847%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.5148%" y="549" width="0.0801%" height="15" fill="rgb(239,213,3)" fg:x="1168" fg:w="1"/><text x="93.7648%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="93.5949%" y="549" width="0.0801%" height="15" fill="rgb(226,112,4)" fg:x="1169" fg:w="1"/><text x="93.8449%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="93.6749%" y="549" width="0.0801%" height="15" fill="rgb(252,170,12)" fg:x="1170" fg:w="1"/><text x="93.9249%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="93.6749%" y="533" width="0.0801%" height="15" fill="rgb(241,106,13)" fg:x="1170" fg:w="1"/><text x="93.9249%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="93.8351%" y="517" width="0.0801%" height="15" fill="rgb(225,73,23)" fg:x="1172" fg:w="1"/><text x="94.0851%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="93.9151%" y="501" width="0.1601%" height="15" fill="rgb(251,227,29)" fg:x="1173" fg:w="2"/><text x="94.1651%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="93.9151%" y="485" width="0.1601%" height="15" fill="rgb(237,144,13)" fg:x="1173" fg:w="2"/><text x="94.1651%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.9952%" y="469" width="0.0801%" height="15" fill="rgb(232,106,46)" fg:x="1174" fg:w="1"/><text x="94.2452%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="94.0753%" y="501" width="0.0801%" height="15" fill="rgb(245,154,53)" fg:x="1175" fg:w="1"/><text x="94.3253%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="94.0753%" y="485" width="0.0801%" height="15" fill="rgb(212,119,47)" fg:x="1175" fg:w="1"/><text x="94.3253%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="94.0753%" y="469" width="0.0801%" height="15" fill="rgb(253,135,25)" fg:x="1175" fg:w="1"/><text x="94.3253%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.0753%" y="453" width="0.0801%" height="15" fill="rgb(253,208,39)" fg:x="1175" fg:w="1"/><text x="94.3253%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="94.2354%" y="485" width="0.0801%" height="15" fill="rgb(226,64,12)" fg:x="1177" fg:w="1"/><text x="94.4854%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.80%)</title><rect x="93.8351%" y="533" width="0.8006%" height="15" fill="rgb(214,162,37)" fg:x="1172" fg:w="10"/><text x="94.0851%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="93.9151%" y="517" width="0.7206%" height="15" fill="rgb(250,104,5)" fg:x="1173" fg:w="9"/><text x="94.1651%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="94.1553%" y="501" width="0.4804%" height="15" fill="rgb(220,202,50)" fg:x="1176" fg:w="6"/><text x="94.4053%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="94.3155%" y="485" width="0.3203%" height="15" fill="rgb(248,67,38)" fg:x="1178" fg:w="4"/><text x="94.5655%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="94.3155%" y="469" width="0.3203%" height="15" fill="rgb(242,94,35)" fg:x="1178" fg:w="4"/><text x="94.5655%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="94.3955%" y="453" width="0.2402%" height="15" fill="rgb(209,78,37)" fg:x="1179" fg:w="3"/><text x="94.6455%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="94.3955%" y="437" width="0.2402%" height="15" fill="rgb(230,126,47)" fg:x="1179" fg:w="3"/><text x="94.6455%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="94.3955%" y="421" width="0.2402%" height="15" fill="rgb(222,110,35)" fg:x="1179" fg:w="3"/><text x="94.6455%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="94.4756%" y="405" width="0.1601%" height="15" fill="rgb(233,154,20)" fg:x="1180" fg:w="2"/><text x="94.7256%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.5556%" y="389" width="0.0801%" height="15" fill="rgb(223,53,50)" fg:x="1181" fg:w="1"/><text x="94.8056%" y="399.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (17 samples, 1.36%)</title><rect x="93.3547%" y="581" width="1.3611%" height="15" fill="rgb(251,27,26)" fg:x="1166" fg:w="17"/><text x="93.6047%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 1.36%)</title><rect x="93.3547%" y="565" width="1.3611%" height="15" fill="rgb(223,189,16)" fg:x="1166" fg:w="17"/><text x="93.6047%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.96%)</title><rect x="93.7550%" y="549" width="0.9608%" height="15" fill="rgb(207,5,54)" fg:x="1171" fg:w="12"/><text x="94.0050%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.6357%" y="533" width="0.0801%" height="15" fill="rgb(254,124,50)" fg:x="1182" fg:w="1"/><text x="94.8857%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.7958%" y="437" width="0.0801%" height="15" fill="rgb(253,193,24)" fg:x="1184" fg:w="1"/><text x="95.0458%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.7958%" y="421" width="0.0801%" height="15" fill="rgb(235,170,24)" fg:x="1184" fg:w="1"/><text x="95.0458%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.7958%" y="405" width="0.0801%" height="15" fill="rgb(222,212,52)" fg:x="1184" fg:w="1"/><text x="95.0458%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="94.8759%" y="421" width="0.2402%" height="15" fill="rgb(223,17,45)" fg:x="1185" fg:w="3"/><text x="95.1259%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.0360%" y="405" width="0.0801%" height="15" fill="rgb(227,103,26)" fg:x="1187" fg:w="1"/><text x="95.2860%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.0360%" y="389" width="0.0801%" height="15" fill="rgb(251,151,25)" fg:x="1187" fg:w="1"/><text x="95.2860%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.0360%" y="373" width="0.0801%" height="15" fill="rgb(248,144,29)" fg:x="1187" fg:w="1"/><text x="95.2860%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.0360%" y="357" width="0.0801%" height="15" fill="rgb(245,97,16)" fg:x="1187" fg:w="1"/><text x="95.2860%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="95.0360%" y="341" width="0.0801%" height="15" fill="rgb(220,200,29)" fg:x="1187" fg:w="1"/><text x="95.2860%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="94.8759%" y="437" width="0.3203%" height="15" fill="rgb(206,38,29)" fg:x="1185" fg:w="4"/><text x="95.1259%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.1161%" y="421" width="0.0801%" height="15" fill="rgb(245,19,52)" fg:x="1188" fg:w="1"/><text x="95.3661%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="94.7958%" y="453" width="0.4804%" height="15" fill="rgb(205,67,43)" fg:x="1184" fg:w="6"/><text x="95.0458%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="95.1962%" y="437" width="0.0801%" height="15" fill="rgb(217,128,23)" fg:x="1189" fg:w="1"/><text x="95.4462%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="95.1962%" y="421" width="0.0801%" height="15" fill="rgb(210,109,28)" fg:x="1189" fg:w="1"/><text x="95.4462%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.1962%" y="405" width="0.0801%" height="15" fill="rgb(233,181,7)" fg:x="1189" fg:w="1"/><text x="95.4462%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.2762%" y="453" width="0.0801%" height="15" fill="rgb(244,11,22)" fg:x="1190" fg:w="1"/><text x="95.5262%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="95.2762%" y="437" width="0.0801%" height="15" fill="rgb(205,124,54)" fg:x="1190" fg:w="1"/><text x="95.5262%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="94.7958%" y="485" width="0.6405%" height="15" fill="rgb(218,21,27)" fg:x="1184" fg:w="8"/><text x="95.0458%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="94.7958%" y="469" width="0.6405%" height="15" fill="rgb(224,153,33)" fg:x="1184" fg:w="8"/><text x="95.0458%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.3563%" y="453" width="0.0801%" height="15" fill="rgb(240,219,28)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.3563%" y="437" width="0.0801%" height="15" fill="rgb(214,80,29)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.3563%" y="421" width="0.0801%" height="15" fill="rgb(247,148,44)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="95.4363%" y="469" width="0.0801%" height="15" fill="rgb(243,110,30)" fg:x="1192" fg:w="1"/><text x="95.6863%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="94.7158%" y="517" width="0.8807%" height="15" fill="rgb(243,173,41)" fg:x="1183" fg:w="11"/><text x="94.9658%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="94.7158%" y="501" width="0.8807%" height="15" fill="rgb(225,160,47)" fg:x="1183" fg:w="11"/><text x="94.9658%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="95.4363%" y="485" width="0.1601%" height="15" fill="rgb(215,44,21)" fg:x="1192" fg:w="2"/><text x="95.6863%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.5164%" y="469" width="0.0801%" height="15" fill="rgb(248,90,3)" fg:x="1193" fg:w="1"/><text x="95.7664%" y="479.50"></text></g><g><title>engine::session::Session::save_entity_changes (65 samples, 5.20%)</title><rect x="90.4724%" y="645" width="5.2042%" height="15" fill="rgb(220,196,49)" fg:x="1130" fg:w="65"/><text x="90.7224%" y="655.50">engine..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (59 samples, 4.72%)</title><rect x="90.9528%" y="629" width="4.7238%" height="15" fill="rgb(217,138,14)" fg:x="1136" fg:w="59"/><text x="91.2028%" y="639.50">engine..</text></g><g><title>engine::session::SavesEntities::check_for_changes (58 samples, 4.64%)</title><rect x="91.0328%" y="613" width="4.6437%" height="15" fill="rgb(219,111,20)" fg:x="1137" fg:w="58"/><text x="91.2828%" y="623.50">engin..</text></g><g><title>kernel::model::any_entity_changes (32 samples, 2.56%)</title><rect x="93.1145%" y="597" width="2.5620%" height="15" fill="rgb(218,114,4)" fg:x="1163" fg:w="32"/><text x="93.3645%" y="607.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (12 samples, 0.96%)</title><rect x="94.7158%" y="581" width="0.9608%" height="15" fill="rgb(238,133,3)" fg:x="1183" fg:w="12"/><text x="94.9658%" y="591.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.96%)</title><rect x="94.7158%" y="565" width="0.9608%" height="15" fill="rgb(224,95,0)" fg:x="1183" fg:w="12"/><text x="94.9658%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.96%)</title><rect x="94.7158%" y="549" width="0.9608%" height="15" fill="rgb(220,169,35)" fg:x="1183" fg:w="12"/><text x="94.9658%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="94.7158%" y="533" width="0.9608%" height="15" fill="rgb(242,116,47)" fg:x="1183" fg:w="12"/><text x="94.9658%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.5965%" y="517" width="0.0801%" height="15" fill="rgb(251,42,20)" fg:x="1194" fg:w="1"/><text x="95.8465%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.5965%" y="501" width="0.0801%" height="15" fill="rgb(234,7,34)" fg:x="1194" fg:w="1"/><text x="95.8465%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="95.5965%" y="485" width="0.0801%" height="15" fill="rgb(243,208,13)" fg:x="1194" fg:w="1"/><text x="95.8465%" y="495.50"></text></g><g><title>engine::session::Session::close (68 samples, 5.44%)</title><rect x="90.3122%" y="661" width="5.4444%" height="15" fill="rgb(227,33,28)" fg:x="1128" fg:w="68"/><text x="90.5622%" y="671.50">engine:..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="95.6765%" y="645" width="0.0801%" height="15" fill="rgb(250,47,37)" fg:x="1195" fg:w="1"/><text x="95.9265%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.9167%" y="501" width="0.0801%" height="15" fill="rgb(235,111,52)" fg:x="1198" fg:w="1"/><text x="96.1667%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="95.9968%" y="501" width="0.0801%" height="15" fill="rgb(223,64,28)" fg:x="1199" fg:w="1"/><text x="96.2468%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.9968%" y="485" width="0.0801%" height="15" fill="rgb(236,67,22)" fg:x="1199" fg:w="1"/><text x="96.2468%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.0769%" y="485" width="0.0801%" height="15" fill="rgb(243,79,24)" fg:x="1200" fg:w="1"/><text x="96.3269%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="96.1569%" y="485" width="0.0801%" height="15" fill="rgb(241,225,22)" fg:x="1201" fg:w="1"/><text x="96.4069%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.1569%" y="469" width="0.0801%" height="15" fill="rgb(228,214,26)" fg:x="1201" fg:w="1"/><text x="96.4069%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.1569%" y="453" width="0.0801%" height="15" fill="rgb(219,84,52)" fg:x="1201" fg:w="1"/><text x="96.4069%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.2370%" y="453" width="0.0801%" height="15" fill="rgb(220,12,22)" fg:x="1202" fg:w="1"/><text x="96.4870%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="95.8367%" y="517" width="0.5604%" height="15" fill="rgb(219,9,49)" fg:x="1197" fg:w="7"/><text x="96.0867%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="96.0769%" y="501" width="0.3203%" height="15" fill="rgb(237,40,43)" fg:x="1200" fg:w="4"/><text x="96.3269%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="96.2370%" y="485" width="0.1601%" height="15" fill="rgb(212,189,32)" fg:x="1202" fg:w="2"/><text x="96.4870%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="96.2370%" y="469" width="0.1601%" height="15" fill="rgb(247,48,9)" fg:x="1202" fg:w="2"/><text x="96.4870%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.3171%" y="453" width="0.0801%" height="15" fill="rgb(247,112,3)" fg:x="1203" fg:w="1"/><text x="96.5671%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.3171%" y="437" width="0.0801%" height="15" fill="rgb(243,110,18)" fg:x="1203" fg:w="1"/><text x="96.5671%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="96.3971%" y="517" width="0.0801%" height="15" fill="rgb(233,223,44)" fg:x="1204" fg:w="1"/><text x="96.6471%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="96.3971%" y="501" width="0.0801%" height="15" fill="rgb(245,160,20)" fg:x="1204" fg:w="1"/><text x="96.6471%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.5572%" y="437" width="0.1601%" height="15" fill="rgb(225,37,1)" fg:x="1206" fg:w="2"/><text x="96.8072%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.5572%" y="421" width="0.1601%" height="15" fill="rgb(253,227,39)" fg:x="1206" fg:w="2"/><text x="96.8072%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.6373%" y="405" width="0.0801%" height="15" fill="rgb(240,179,26)" fg:x="1207" fg:w="1"/><text x="96.8873%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="96.4772%" y="453" width="0.3203%" height="15" fill="rgb(237,212,23)" fg:x="1205" fg:w="4"/><text x="96.7272%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.7174%" y="437" width="0.0801%" height="15" fill="rgb(221,38,11)" fg:x="1208" fg:w="1"/><text x="96.9674%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.7174%" y="421" width="0.0801%" height="15" fill="rgb(215,85,6)" fg:x="1208" fg:w="1"/><text x="96.9674%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.7174%" y="405" width="0.0801%" height="15" fill="rgb(239,64,14)" fg:x="1208" fg:w="1"/><text x="96.9674%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.7174%" y="389" width="0.0801%" height="15" fill="rgb(215,150,32)" fg:x="1208" fg:w="1"/><text x="96.9674%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.7174%" y="373" width="0.0801%" height="15" fill="rgb(238,15,13)" fg:x="1208" fg:w="1"/><text x="96.9674%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="96.7174%" y="357" width="0.0801%" height="15" fill="rgb(251,87,8)" fg:x="1208" fg:w="1"/><text x="96.9674%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="96.7174%" y="341" width="0.0801%" height="15" fill="rgb(206,86,1)" fg:x="1208" fg:w="1"/><text x="96.9674%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="96.4772%" y="469" width="0.4804%" height="15" fill="rgb(208,151,45)" fg:x="1205" fg:w="6"/><text x="96.7272%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.7974%" y="453" width="0.1601%" height="15" fill="rgb(231,181,24)" fg:x="1209" fg:w="2"/><text x="97.0474%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.7974%" y="437" width="0.1601%" height="15" fill="rgb(240,106,29)" fg:x="1209" fg:w="2"/><text x="97.0474%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="96.7974%" y="421" width="0.1601%" height="15" fill="rgb(227,166,11)" fg:x="1209" fg:w="2"/><text x="97.0474%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="96.7974%" y="405" width="0.1601%" height="15" fill="rgb(254,14,34)" fg:x="1209" fg:w="2"/><text x="97.0474%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="96.7974%" y="389" width="0.1601%" height="15" fill="rgb(223,222,6)" fg:x="1209" fg:w="2"/><text x="97.0474%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="96.7974%" y="373" width="0.1601%" height="15" fill="rgb(245,69,24)" fg:x="1209" fg:w="2"/><text x="97.0474%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="96.7974%" y="357" width="0.1601%" height="15" fill="rgb(213,193,7)" fg:x="1209" fg:w="2"/><text x="97.0474%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="96.7974%" y="341" width="0.1601%" height="15" fill="rgb(237,92,51)" fg:x="1209" fg:w="2"/><text x="97.0474%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="96.7974%" y="325" width="0.1601%" height="15" fill="rgb(225,194,6)" fg:x="1209" fg:w="2"/><text x="97.0474%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="96.7974%" y="309" width="0.1601%" height="15" fill="rgb(205,159,49)" fg:x="1209" fg:w="2"/><text x="97.0474%" y="319.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="96.7974%" y="293" width="0.1601%" height="15" fill="rgb(219,69,2)" fg:x="1209" fg:w="2"/><text x="97.0474%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="96.7974%" y="277" width="0.1601%" height="15" fill="rgb(215,107,24)" fg:x="1209" fg:w="2"/><text x="97.0474%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.9576%" y="469" width="0.0801%" height="15" fill="rgb(249,208,29)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.9576%" y="453" width="0.0801%" height="15" fill="rgb(213,147,10)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.9576%" y="437" width="0.0801%" height="15" fill="rgb(254,140,42)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.9576%" y="421" width="0.0801%" height="15" fill="rgb(249,9,15)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.9576%" y="405" width="0.0801%" height="15" fill="rgb(210,19,33)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.9576%" y="389" width="0.0801%" height="15" fill="rgb(241,121,22)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.9576%" y="373" width="0.0801%" height="15" fill="rgb(244,69,52)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.9576%" y="357" width="0.0801%" height="15" fill="rgb(244,191,54)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.9576%" y="341" width="0.0801%" height="15" fill="rgb(250,3,53)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.9576%" y="325" width="0.0801%" height="15" fill="rgb(205,77,3)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.9576%" y="309" width="0.0801%" height="15" fill="rgb(207,155,3)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.9576%" y="293" width="0.0801%" height="15" fill="rgb(224,79,2)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.64%)</title><rect x="96.4772%" y="485" width="0.6405%" height="15" fill="rgb(243,172,5)" fg:x="1205" fg:w="8"/><text x="96.7272%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.0376%" y="469" width="0.0801%" height="15" fill="rgb(217,23,43)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="479.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (9 samples, 0.72%)</title><rect x="96.4772%" y="517" width="0.7206%" height="15" fill="rgb(223,109,20)" fg:x="1205" fg:w="9"/><text x="96.7272%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::modified (9 samples, 0.72%)</title><rect x="96.4772%" y="501" width="0.7206%" height="15" fill="rgb(232,159,21)" fg:x="1205" fg:w="9"/><text x="96.7272%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1177%" y="485" width="0.0801%" height="15" fill="rgb(219,58,2)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1177%" y="469" width="0.0801%" height="15" fill="rgb(241,56,8)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.1177%" y="453" width="0.0801%" height="15" fill="rgb(249,10,27)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.1177%" y="437" width="0.0801%" height="15" fill="rgb(248,177,5)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.1177%" y="421" width="0.0801%" height="15" fill="rgb(239,12,30)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.1177%" y="405" width="0.0801%" height="15" fill="rgb(229,164,25)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.1177%" y="389" width="0.0801%" height="15" fill="rgb(231,217,50)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.1177%" y="373" width="0.0801%" height="15" fill="rgb(247,99,32)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.1177%" y="357" width="0.0801%" height="15" fill="rgb(240,74,50)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.1177%" y="341" width="0.0801%" height="15" fill="rgb(218,54,8)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.1177%" y="325" width="0.0801%" height="15" fill="rgb(227,132,20)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.1177%" y="309" width="0.0801%" height="15" fill="rgb(232,134,12)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (1 samples, 0.08%)</title><rect x="97.1978%" y="485" width="0.0801%" height="15" fill="rgb(250,129,18)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="97.1978%" y="469" width="0.0801%" height="15" fill="rgb(232,129,47)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="97.1978%" y="453" width="0.0801%" height="15" fill="rgb(230,31,40)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="97.1978%" y="437" width="0.0801%" height="15" fill="rgb(232,126,10)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="97.1978%" y="421" width="0.0801%" height="15" fill="rgb(205,46,31)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="97.1978%" y="405" width="0.0801%" height="15" fill="rgb(232,37,37)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="97.1978%" y="389" width="0.0801%" height="15" fill="rgb(240,91,16)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="97.1978%" y="373" width="0.0801%" height="15" fill="rgb(224,160,9)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="97.1978%" y="357" width="0.0801%" height="15" fill="rgb(215,116,14)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="97.1978%" y="341" width="0.0801%" height="15" fill="rgb(235,46,36)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="97.1978%" y="325" width="0.0801%" height="15" fill="rgb(238,39,28)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="97.1978%" y="309" width="0.0801%" height="15" fill="rgb(242,125,29)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="97.1978%" y="293" width="0.0801%" height="15" fill="rgb(238,211,30)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="303.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="97.1978%" y="277" width="0.0801%" height="15" fill="rgb(227,201,28)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="97.1978%" y="261" width="0.0801%" height="15" fill="rgb(238,77,29)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="97.1978%" y="245" width="0.0801%" height="15" fill="rgb(213,221,40)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="97.1978%" y="229" width="0.0801%" height="15" fill="rgb(226,220,44)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="97.1978%" y="213" width="0.0801%" height="15" fill="rgb(228,90,23)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="97.1978%" y="197" width="0.0801%" height="15" fill="rgb(235,72,29)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="97.1978%" y="181" width="0.0801%" height="15" fill="rgb(248,117,39)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="97.1978%" y="165" width="0.0801%" height="15" fill="rgb(225,43,28)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="97.1978%" y="149" width="0.0801%" height="15" fill="rgb(240,93,4)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="97.1978%" y="133" width="0.0801%" height="15" fill="rgb(234,178,27)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="143.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="97.1978%" y="117" width="0.0801%" height="15" fill="rgb(254,88,22)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="127.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="97.1978%" y="101" width="0.0801%" height="15" fill="rgb(240,206,50)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="111.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="97.1978%" y="85" width="0.0801%" height="15" fill="rgb(249,103,8)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="95.50"></text></g><g><title>&lt;&amp;kernel::model::EntityPtr as core::convert::Into&lt;kernel::model::entity::EntityRef&gt;&gt;::into (1 samples, 0.08%)</title><rect x="97.3579%" y="437" width="0.0801%" height="15" fill="rgb(241,178,36)" fg:x="1216" fg:w="1"/><text x="97.6079%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.3579%" y="421" width="0.0801%" height="15" fill="rgb(246,110,15)" fg:x="1216" fg:w="1"/><text x="97.6079%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.3579%" y="405" width="0.0801%" height="15" fill="rgb(207,14,43)" fg:x="1216" fg:w="1"/><text x="97.6079%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.3579%" y="389" width="0.0801%" height="15" fill="rgb(253,219,19)" fg:x="1216" fg:w="1"/><text x="97.6079%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.3579%" y="373" width="0.0801%" height="15" fill="rgb(216,126,5)" fg:x="1216" fg:w="1"/><text x="97.6079%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.3579%" y="357" width="0.0801%" height="15" fill="rgb(218,78,42)" fg:x="1216" fg:w="1"/><text x="97.6079%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="97.3579%" y="341" width="0.0801%" height="15" fill="rgb(215,154,40)" fg:x="1216" fg:w="1"/><text x="97.6079%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="97.3579%" y="325" width="0.0801%" height="15" fill="rgb(235,129,32)" fg:x="1216" fg:w="1"/><text x="97.6079%" y="335.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="97.4380%" y="357" width="0.0801%" height="15" fill="rgb(218,51,8)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.4380%" y="341" width="0.0801%" height="15" fill="rgb(245,48,4)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.5180%" y="325" width="0.1601%" height="15" fill="rgb(250,175,12)" fg:x="1218" fg:w="2"/><text x="97.7680%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.5180%" y="309" width="0.1601%" height="15" fill="rgb(237,95,40)" fg:x="1218" fg:w="2"/><text x="97.7680%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.5180%" y="293" width="0.1601%" height="15" fill="rgb(244,120,0)" fg:x="1218" fg:w="2"/><text x="97.7680%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.5180%" y="277" width="0.1601%" height="15" fill="rgb(241,19,42)" fg:x="1218" fg:w="2"/><text x="97.7680%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.5981%" y="261" width="0.0801%" height="15" fill="rgb(217,174,48)" fg:x="1219" fg:w="1"/><text x="97.8481%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.5981%" y="245" width="0.0801%" height="15" fill="rgb(239,36,38)" fg:x="1219" fg:w="1"/><text x="97.8481%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.5981%" y="229" width="0.0801%" height="15" fill="rgb(220,63,49)" fg:x="1219" fg:w="1"/><text x="97.8481%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.5981%" y="213" width="0.0801%" height="15" fill="rgb(240,101,13)" fg:x="1219" fg:w="1"/><text x="97.8481%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.5981%" y="197" width="0.0801%" height="15" fill="rgb(209,184,51)" fg:x="1219" fg:w="1"/><text x="97.8481%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.5981%" y="181" width="0.0801%" height="15" fill="rgb(206,136,39)" fg:x="1219" fg:w="1"/><text x="97.8481%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.5981%" y="165" width="0.0801%" height="15" fill="rgb(254,47,45)" fg:x="1219" fg:w="1"/><text x="97.8481%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.5981%" y="149" width="0.0801%" height="15" fill="rgb(252,103,20)" fg:x="1219" fg:w="1"/><text x="97.8481%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.5981%" y="133" width="0.0801%" height="15" fill="rgb(230,69,12)" fg:x="1219" fg:w="1"/><text x="97.8481%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.5981%" y="117" width="0.0801%" height="15" fill="rgb(219,2,28)" fg:x="1219" fg:w="1"/><text x="97.8481%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.5981%" y="101" width="0.0801%" height="15" fill="rgb(210,9,12)" fg:x="1219" fg:w="1"/><text x="97.8481%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.5981%" y="85" width="0.0801%" height="15" fill="rgb(235,99,33)" fg:x="1219" fg:w="1"/><text x="97.8481%" y="95.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.6781%" y="293" width="0.0801%" height="15" fill="rgb(230,11,38)" fg:x="1220" fg:w="1"/><text x="97.9281%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.6781%" y="277" width="0.0801%" height="15" fill="rgb(217,129,0)" fg:x="1220" fg:w="1"/><text x="97.9281%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="97.4380%" y="373" width="0.4003%" height="15" fill="rgb(222,198,4)" fg:x="1217" fg:w="5"/><text x="97.6880%" y="383.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="97.5180%" y="357" width="0.3203%" height="15" fill="rgb(246,170,27)" fg:x="1218" fg:w="4"/><text x="97.7680%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="97.5180%" y="341" width="0.3203%" height="15" fill="rgb(229,17,28)" fg:x="1218" fg:w="4"/><text x="97.7680%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="97.6781%" y="325" width="0.1601%" height="15" fill="rgb(233,198,48)" fg:x="1220" fg:w="2"/><text x="97.9281%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.6781%" y="309" width="0.1601%" height="15" fill="rgb(238,103,23)" fg:x="1220" fg:w="2"/><text x="97.9281%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.7582%" y="293" width="0.0801%" height="15" fill="rgb(206,91,41)" fg:x="1221" fg:w="1"/><text x="98.0082%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.7582%" y="277" width="0.0801%" height="15" fill="rgb(227,34,25)" fg:x="1221" fg:w="1"/><text x="98.0082%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.7582%" y="261" width="0.0801%" height="15" fill="rgb(210,110,44)" fg:x="1221" fg:w="1"/><text x="98.0082%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.7582%" y="245" width="0.0801%" height="15" fill="rgb(216,189,8)" fg:x="1221" fg:w="1"/><text x="98.0082%" y="255.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.7582%" y="229" width="0.0801%" height="15" fill="rgb(234,9,46)" fg:x="1221" fg:w="1"/><text x="98.0082%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.7582%" y="213" width="0.0801%" height="15" fill="rgb(251,200,5)" fg:x="1221" fg:w="1"/><text x="98.0082%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.7582%" y="197" width="0.0801%" height="15" fill="rgb(238,165,37)" fg:x="1221" fg:w="1"/><text x="98.0082%" y="207.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (7 samples, 0.56%)</title><rect x="97.4380%" y="405" width="0.5604%" height="15" fill="rgb(232,77,38)" fg:x="1217" fg:w="7"/><text x="97.6880%" y="415.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (7 samples, 0.56%)</title><rect x="97.4380%" y="389" width="0.5604%" height="15" fill="rgb(253,179,33)" fg:x="1217" fg:w="7"/><text x="97.6880%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="97.8383%" y="373" width="0.1601%" height="15" fill="rgb(240,13,35)" fg:x="1222" fg:w="2"/><text x="98.0883%" y="383.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="97.8383%" y="357" width="0.1601%" height="15" fill="rgb(242,150,49)" fg:x="1222" fg:w="2"/><text x="98.0883%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="97.8383%" y="341" width="0.1601%" height="15" fill="rgb(237,176,28)" fg:x="1222" fg:w="2"/><text x="98.0883%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.8383%" y="325" width="0.1601%" height="15" fill="rgb(214,176,33)" fg:x="1222" fg:w="2"/><text x="98.0883%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.8383%" y="309" width="0.1601%" height="15" fill="rgb(214,25,12)" fg:x="1222" fg:w="2"/><text x="98.0883%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.8383%" y="293" width="0.1601%" height="15" fill="rgb(238,190,20)" fg:x="1222" fg:w="2"/><text x="98.0883%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.8383%" y="277" width="0.1601%" height="15" fill="rgb(208,11,19)" fg:x="1222" fg:w="2"/><text x="98.0883%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.8383%" y="261" width="0.1601%" height="15" fill="rgb(239,90,4)" fg:x="1222" fg:w="2"/><text x="98.0883%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="97.8383%" y="245" width="0.1601%" height="15" fill="rgb(248,110,3)" fg:x="1222" fg:w="2"/><text x="98.0883%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="97.9984%" y="405" width="0.0801%" height="15" fill="rgb(210,41,30)" fg:x="1224" fg:w="1"/><text x="98.2484%" y="415.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="97.9984%" y="389" width="0.0801%" height="15" fill="rgb(239,36,8)" fg:x="1224" fg:w="1"/><text x="98.2484%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.9984%" y="373" width="0.0801%" height="15" fill="rgb(237,201,47)" fg:x="1224" fg:w="1"/><text x="98.2484%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.9984%" y="357" width="0.0801%" height="15" fill="rgb(224,140,29)" fg:x="1224" fg:w="1"/><text x="98.2484%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9984%" y="341" width="0.0801%" height="15" fill="rgb(231,209,17)" fg:x="1224" fg:w="1"/><text x="98.2484%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.9984%" y="325" width="0.0801%" height="15" fill="rgb(249,196,1)" fg:x="1224" fg:w="1"/><text x="98.2484%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.9984%" y="309" width="0.0801%" height="15" fill="rgb(223,207,51)" fg:x="1224" fg:w="1"/><text x="98.2484%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.0785%" y="245" width="0.0801%" height="15" fill="rgb(210,14,40)" fg:x="1225" fg:w="1"/><text x="98.3285%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.0785%" y="229" width="0.0801%" height="15" fill="rgb(250,20,52)" fg:x="1225" fg:w="1"/><text x="98.3285%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.0785%" y="213" width="0.0801%" height="15" fill="rgb(241,46,11)" fg:x="1225" fg:w="1"/><text x="98.3285%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.0785%" y="197" width="0.0801%" height="15" fill="rgb(219,105,5)" fg:x="1225" fg:w="1"/><text x="98.3285%" y="207.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.0785%" y="181" width="0.0801%" height="15" fill="rgb(252,77,35)" fg:x="1225" fg:w="1"/><text x="98.3285%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.0785%" y="165" width="0.0801%" height="15" fill="rgb(243,119,2)" fg:x="1225" fg:w="1"/><text x="98.3285%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.0785%" y="149" width="0.0801%" height="15" fill="rgb(206,82,28)" fg:x="1225" fg:w="1"/><text x="98.3285%" y="159.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.0785%" y="133" width="0.0801%" height="15" fill="rgb(227,120,12)" fg:x="1225" fg:w="1"/><text x="98.3285%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.0785%" y="117" width="0.0801%" height="15" fill="rgb(229,134,41)" fg:x="1225" fg:w="1"/><text x="98.3285%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.0785%" y="277" width="0.1601%" height="15" fill="rgb(239,96,32)" fg:x="1225" fg:w="2"/><text x="98.3285%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.0785%" y="261" width="0.1601%" height="15" fill="rgb(225,46,27)" fg:x="1225" fg:w="2"/><text x="98.3285%" y="271.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.1585%" y="245" width="0.0801%" height="15" fill="rgb(215,168,2)" fg:x="1226" fg:w="1"/><text x="98.4085%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.1585%" y="229" width="0.0801%" height="15" fill="rgb(207,170,52)" fg:x="1226" fg:w="1"/><text x="98.4085%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.1585%" y="213" width="0.0801%" height="15" fill="rgb(237,198,36)" fg:x="1226" fg:w="1"/><text x="98.4085%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.1585%" y="197" width="0.0801%" height="15" fill="rgb(213,27,14)" fg:x="1226" fg:w="1"/><text x="98.4085%" y="207.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.1585%" y="181" width="0.0801%" height="15" fill="rgb(218,77,5)" fg:x="1226" fg:w="1"/><text x="98.4085%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="98.2386%" y="277" width="0.2402%" height="15" fill="rgb(230,219,39)" fg:x="1227" fg:w="3"/><text x="98.4886%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="98.2386%" y="261" width="0.2402%" height="15" fill="rgb(245,177,7)" fg:x="1227" fg:w="3"/><text x="98.4886%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="98.2386%" y="245" width="0.2402%" height="15" fill="rgb(246,44,46)" fg:x="1227" fg:w="3"/><text x="98.4886%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="98.3187%" y="229" width="0.1601%" height="15" fill="rgb(207,173,15)" fg:x="1228" fg:w="2"/><text x="98.5687%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.3987%" y="213" width="0.0801%" height="15" fill="rgb(245,170,50)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="223.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (7 samples, 0.56%)</title><rect x="98.0785%" y="389" width="0.5604%" height="15" fill="rgb(233,156,21)" fg:x="1225" fg:w="7"/><text x="98.3285%" y="399.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (7 samples, 0.56%)</title><rect x="98.0785%" y="373" width="0.5604%" height="15" fill="rgb(253,146,27)" fg:x="1225" fg:w="7"/><text x="98.3285%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="98.0785%" y="357" width="0.5604%" height="15" fill="rgb(247,66,29)" fg:x="1225" fg:w="7"/><text x="98.3285%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="98.0785%" y="341" width="0.5604%" height="15" fill="rgb(218,207,26)" fg:x="1225" fg:w="7"/><text x="98.3285%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="98.0785%" y="325" width="0.5604%" height="15" fill="rgb(234,93,26)" fg:x="1225" fg:w="7"/><text x="98.3285%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="98.0785%" y="309" width="0.5604%" height="15" fill="rgb(214,75,48)" fg:x="1225" fg:w="7"/><text x="98.3285%" y="319.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="98.0785%" y="293" width="0.5604%" height="15" fill="rgb(229,119,22)" fg:x="1225" fg:w="7"/><text x="98.3285%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.4788%" y="277" width="0.1601%" height="15" fill="rgb(226,153,19)" fg:x="1230" fg:w="2"/><text x="98.7288%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.4788%" y="261" width="0.1601%" height="15" fill="rgb(220,204,36)" fg:x="1230" fg:w="2"/><text x="98.7288%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="98.4788%" y="245" width="0.1601%" height="15" fill="rgb(253,181,43)" fg:x="1230" fg:w="2"/><text x="98.7288%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.4788%" y="229" width="0.1601%" height="15" fill="rgb(211,41,51)" fg:x="1230" fg:w="2"/><text x="98.7288%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.4788%" y="213" width="0.1601%" height="15" fill="rgb(207,215,0)" fg:x="1230" fg:w="2"/><text x="98.7288%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.5588%" y="197" width="0.0801%" height="15" fill="rgb(212,153,10)" fg:x="1231" fg:w="1"/><text x="98.8088%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.5588%" y="181" width="0.0801%" height="15" fill="rgb(251,171,36)" fg:x="1231" fg:w="1"/><text x="98.8088%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.5588%" y="165" width="0.0801%" height="15" fill="rgb(225,219,41)" fg:x="1231" fg:w="1"/><text x="98.8088%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.5588%" y="149" width="0.0801%" height="15" fill="rgb(208,200,1)" fg:x="1231" fg:w="1"/><text x="98.8088%" y="159.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (19 samples, 1.52%)</title><rect x="97.1978%" y="517" width="1.5212%" height="15" fill="rgb(206,75,47)" fg:x="1214" fg:w="19"/><text x="97.4478%" y="527.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (19 samples, 1.52%)</title><rect x="97.1978%" y="501" width="1.5212%" height="15" fill="rgb(248,3,16)" fg:x="1214" fg:w="19"/><text x="97.4478%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (18 samples, 1.44%)</title><rect x="97.2778%" y="485" width="1.4412%" height="15" fill="rgb(242,157,36)" fg:x="1215" fg:w="18"/><text x="97.5278%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (18 samples, 1.44%)</title><rect x="97.2778%" y="469" width="1.4412%" height="15" fill="rgb(215,175,11)" fg:x="1215" fg:w="18"/><text x="97.5278%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (17 samples, 1.36%)</title><rect x="97.3579%" y="453" width="1.3611%" height="15" fill="rgb(252,222,22)" fg:x="1216" fg:w="17"/><text x="97.6079%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (16 samples, 1.28%)</title><rect x="97.4380%" y="437" width="1.2810%" height="15" fill="rgb(250,121,35)" fg:x="1217" fg:w="16"/><text x="97.6880%" y="447.50"></text></g><g><title>engine::internal::Entities::add_persisted (16 samples, 1.28%)</title><rect x="97.4380%" y="421" width="1.2810%" height="15" fill="rgb(233,120,49)" fg:x="1217" fg:w="16"/><text x="97.6880%" y="431.50"></text></g><g><title>kernel::model::deserialize_entity (8 samples, 0.64%)</title><rect x="98.0785%" y="405" width="0.6405%" height="15" fill="rgb(205,201,14)" fg:x="1225" fg:w="8"/><text x="98.3285%" y="415.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="98.6389%" y="389" width="0.0801%" height="15" fill="rgb(219,58,45)" fg:x="1232" fg:w="1"/><text x="98.8889%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.6389%" y="373" width="0.0801%" height="15" fill="rgb(251,65,12)" fg:x="1232" fg:w="1"/><text x="98.8889%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.6389%" y="357" width="0.0801%" height="15" fill="rgb(224,47,31)" fg:x="1232" fg:w="1"/><text x="98.8889%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.6389%" y="341" width="0.0801%" height="15" fill="rgb(233,74,26)" fg:x="1232" fg:w="1"/><text x="98.8889%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.6389%" y="325" width="0.0801%" height="15" fill="rgb(231,211,31)" fg:x="1232" fg:w="1"/><text x="98.8889%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.6389%" y="309" width="0.0801%" height="15" fill="rgb(239,167,5)" fg:x="1232" fg:w="1"/><text x="98.8889%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.6389%" y="293" width="0.0801%" height="15" fill="rgb(241,85,0)" fg:x="1232" fg:w="1"/><text x="98.8889%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.6389%" y="277" width="0.0801%" height="15" fill="rgb(229,130,21)" fg:x="1232" fg:w="1"/><text x="98.8889%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.6389%" y="261" width="0.0801%" height="15" fill="rgb(254,84,49)" fg:x="1232" fg:w="1"/><text x="98.8889%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.6389%" y="245" width="0.0801%" height="15" fill="rgb(235,85,21)" fg:x="1232" fg:w="1"/><text x="98.8889%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.6389%" y="229" width="0.0801%" height="15" fill="rgb(246,128,52)" fg:x="1232" fg:w="1"/><text x="98.8889%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.6389%" y="213" width="0.0801%" height="15" fill="rgb(243,114,49)" fg:x="1232" fg:w="1"/><text x="98.8889%" y="223.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (37 samples, 2.96%)</title><rect x="95.8367%" y="533" width="2.9624%" height="15" fill="rgb(240,224,22)" fg:x="1197" fg:w="37"/><text x="96.0867%" y="543.50">&lt;en..</text></g><g><title>kernel::plugins::mw::apply_middleware (1 samples, 0.08%)</title><rect x="98.7190%" y="517" width="0.0801%" height="15" fill="rgb(247,201,52)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="98.7190%" y="501" width="0.0801%" height="15" fill="rgb(231,70,45)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="511.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="98.7190%" y="485" width="0.0801%" height="15" fill="rgb(217,215,20)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="495.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="98.7190%" y="469" width="0.0801%" height="15" fill="rgb(226,170,30)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="98.7190%" y="453" width="0.0801%" height="15" fill="rgb(220,190,43)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="463.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="98.7190%" y="437" width="0.0801%" height="15" fill="rgb(218,20,18)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="98.7190%" y="421" width="0.0801%" height="15" fill="rgb(245,37,26)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (1 samples, 0.08%)</title><rect x="98.7190%" y="405" width="0.0801%" height="15" fill="rgb(241,127,29)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="98.7190%" y="389" width="0.0801%" height="15" fill="rgb(241,33,26)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="98.7190%" y="373" width="0.0801%" height="15" fill="rgb(220,106,21)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.7190%" y="357" width="0.0801%" height="15" fill="rgb(225,125,35)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="98.7990%" y="469" width="0.1601%" height="15" fill="rgb(248,80,22)" fg:x="1234" fg:w="2"/><text x="99.0490%" y="479.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="98.7990%" y="453" width="0.1601%" height="15" fill="rgb(231,117,39)" fg:x="1234" fg:w="2"/><text x="99.0490%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="98.7990%" y="437" width="0.1601%" height="15" fill="rgb(239,183,16)" fg:x="1234" fg:w="2"/><text x="99.0490%" y="447.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="98.7990%" y="421" width="0.1601%" height="15" fill="rgb(221,61,19)" fg:x="1234" fg:w="2"/><text x="99.0490%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="98.7990%" y="405" width="0.1601%" height="15" fill="rgb(239,196,44)" fg:x="1234" fg:w="2"/><text x="99.0490%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.8791%" y="389" width="0.0801%" height="15" fill="rgb(206,113,19)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8791%" y="373" width="0.0801%" height="15" fill="rgb(245,114,12)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.8791%" y="357" width="0.0801%" height="15" fill="rgb(247,89,39)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8791%" y="341" width="0.0801%" height="15" fill="rgb(213,85,14)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.8791%" y="325" width="0.0801%" height="15" fill="rgb(249,206,33)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8791%" y="309" width="0.0801%" height="15" fill="rgb(235,167,47)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.8791%" y="293" width="0.0801%" height="15" fill="rgb(217,177,16)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8791%" y="277" width="0.0801%" height="15" fill="rgb(250,228,29)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.9592%" y="469" width="0.0801%" height="15" fill="rgb(216,195,42)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="98.9592%" y="453" width="0.0801%" height="15" fill="rgb(232,192,32)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.9592%" y="437" width="0.0801%" height="15" fill="rgb(211,8,47)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="447.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="99.0392%" y="469" width="0.0801%" height="15" fill="rgb(251,201,9)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.0392%" y="453" width="0.0801%" height="15" fill="rgb(206,185,47)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="99.0392%" y="437" width="0.0801%" height="15" fill="rgb(245,54,32)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="99.0392%" y="421" width="0.0801%" height="15" fill="rgb(208,1,8)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.1193%" y="389" width="0.0801%" height="15" fill="rgb(228,57,24)" fg:x="1238" fg:w="1"/><text x="99.3693%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.1994%" y="277" width="0.0801%" height="15" fill="rgb(251,24,8)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1994%" y="261" width="0.0801%" height="15" fill="rgb(236,196,50)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="271.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.1994%" y="245" width="0.0801%" height="15" fill="rgb(246,222,29)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.1994%" y="229" width="0.0801%" height="15" fill="rgb(211,34,40)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1994%" y="213" width="0.0801%" height="15" fill="rgb(210,66,51)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.1994%" y="197" width="0.0801%" height="15" fill="rgb(250,56,43)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.1994%" y="341" width="0.1601%" height="15" fill="rgb(240,111,50)" fg:x="1239" fg:w="2"/><text x="99.4494%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.1994%" y="325" width="0.1601%" height="15" fill="rgb(209,117,13)" fg:x="1239" fg:w="2"/><text x="99.4494%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.1994%" y="309" width="0.1601%" height="15" fill="rgb(232,164,45)" fg:x="1239" fg:w="2"/><text x="99.4494%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.1994%" y="293" width="0.1601%" height="15" fill="rgb(205,69,32)" fg:x="1239" fg:w="2"/><text x="99.4494%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.2794%" y="277" width="0.0801%" height="15" fill="rgb(240,147,45)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="287.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="99.3595%" y="293" width="0.0801%" height="15" fill="rgb(221,94,48)" fg:x="1241" fg:w="1"/><text x="99.6095%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="99.3595%" y="277" width="0.0801%" height="15" fill="rgb(249,209,17)" fg:x="1241" fg:w="1"/><text x="99.6095%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.3595%" y="261" width="0.0801%" height="15" fill="rgb(228,57,28)" fg:x="1241" fg:w="1"/><text x="99.6095%" y="271.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (5 samples, 0.40%)</title><rect x="99.1193%" y="453" width="0.4003%" height="15" fill="rgb(250,133,26)" fg:x="1238" fg:w="5"/><text x="99.3693%" y="463.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (5 samples, 0.40%)</title><rect x="99.1193%" y="437" width="0.4003%" height="15" fill="rgb(254,15,16)" fg:x="1238" fg:w="5"/><text x="99.3693%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="99.1193%" y="421" width="0.4003%" height="15" fill="rgb(209,147,42)" fg:x="1238" fg:w="5"/><text x="99.3693%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="99.1193%" y="405" width="0.4003%" height="15" fill="rgb(208,5,29)" fg:x="1238" fg:w="5"/><text x="99.3693%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="99.1994%" y="389" width="0.3203%" height="15" fill="rgb(250,73,31)" fg:x="1239" fg:w="4"/><text x="99.4494%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="99.1994%" y="373" width="0.3203%" height="15" fill="rgb(238,45,10)" fg:x="1239" fg:w="4"/><text x="99.4494%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="99.1994%" y="357" width="0.3203%" height="15" fill="rgb(214,104,5)" fg:x="1239" fg:w="4"/><text x="99.4494%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.3595%" y="341" width="0.1601%" height="15" fill="rgb(242,217,19)" fg:x="1241" fg:w="2"/><text x="99.6095%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.3595%" y="325" width="0.1601%" height="15" fill="rgb(246,113,27)" fg:x="1241" fg:w="2"/><text x="99.6095%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="99.3595%" y="309" width="0.1601%" height="15" fill="rgb(221,34,27)" fg:x="1241" fg:w="2"/><text x="99.6095%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4396%" y="293" width="0.0801%" height="15" fill="rgb(246,109,6)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4396%" y="277" width="0.0801%" height="15" fill="rgb(217,12,25)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.4396%" y="261" width="0.0801%" height="15" fill="rgb(250,195,5)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4396%" y="245" width="0.0801%" height="15" fill="rgb(244,140,45)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4396%" y="229" width="0.0801%" height="15" fill="rgb(230,64,14)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.4396%" y="213" width="0.0801%" height="15" fill="rgb(206,27,27)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4396%" y="197" width="0.0801%" height="15" fill="rgb(230,14,50)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="207.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="99.5196%" y="389" width="0.0801%" height="15" fill="rgb(237,172,14)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="99.5196%" y="405" width="0.1601%" height="15" fill="rgb(209,25,21)" fg:x="1243" fg:w="2"/><text x="99.7696%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.5997%" y="389" width="0.0801%" height="15" fill="rgb(248,148,22)" fg:x="1244" fg:w="1"/><text x="99.8497%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (12 samples, 0.96%)</title><rect x="98.7990%" y="501" width="0.9608%" height="15" fill="rgb(234,100,22)" fg:x="1234" fg:w="12"/><text x="99.0490%" y="511.50"></text></g><g><title>engine::internal::Entities::add_persisted (12 samples, 0.96%)</title><rect x="98.7990%" y="485" width="0.9608%" height="15" fill="rgb(210,20,30)" fg:x="1234" fg:w="12"/><text x="99.0490%" y="495.50"></text></g><g><title>kernel::model::deserialize_entity (8 samples, 0.64%)</title><rect x="99.1193%" y="469" width="0.6405%" height="15" fill="rgb(232,58,0)" fg:x="1238" fg:w="8"/><text x="99.3693%" y="479.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="99.5196%" y="453" width="0.2402%" height="15" fill="rgb(221,68,13)" fg:x="1243" fg:w="3"/><text x="99.7696%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="99.5196%" y="437" width="0.2402%" height="15" fill="rgb(231,194,11)" fg:x="1243" fg:w="3"/><text x="99.7696%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.5196%" y="421" width="0.2402%" height="15" fill="rgb(235,51,41)" fg:x="1243" fg:w="3"/><text x="99.7696%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.6797%" y="405" width="0.0801%" height="15" fill="rgb(240,50,32)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6797%" y="389" width="0.0801%" height="15" fill="rgb(240,185,36)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.6797%" y="373" width="0.0801%" height="15" fill="rgb(211,168,15)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="99.6797%" y="357" width="0.0801%" height="15" fill="rgb(221,70,0)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (50 samples, 4.00%)</title><rect x="95.8367%" y="581" width="4.0032%" height="15" fill="rgb(205,21,33)" fg:x="1197" fg:w="50"/><text x="96.0867%" y="591.50">&lt;cor..</text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (50 samples, 4.00%)</title><rect x="95.8367%" y="565" width="4.0032%" height="15" fill="rgb(225,106,10)" fg:x="1197" fg:w="50"/><text x="96.0867%" y="575.50">&lt;plu..</text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (50 samples, 4.00%)</title><rect x="95.8367%" y="549" width="4.0032%" height="15" fill="rgb(236,200,50)" fg:x="1197" fg:w="50"/><text x="96.0867%" y="559.50">&lt;eng..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (13 samples, 1.04%)</title><rect x="98.7990%" y="533" width="1.0408%" height="15" fill="rgb(249,93,23)" fg:x="1234" fg:w="13"/><text x="99.0490%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (13 samples, 1.04%)</title><rect x="98.7990%" y="517" width="1.0408%" height="15" fill="rgb(244,115,35)" fg:x="1234" fg:w="13"/><text x="99.0490%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="99.7598%" y="501" width="0.0801%" height="15" fill="rgb(231,129,47)" fg:x="1246" fg:w="1"/><text x="100.0098%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.7598%" y="485" width="0.0801%" height="15" fill="rgb(225,160,50)" fg:x="1246" fg:w="1"/><text x="100.0098%" y="495.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="99.7598%" y="469" width="0.0801%" height="15" fill="rgb(218,135,23)" fg:x="1246" fg:w="1"/><text x="100.0098%" y="479.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (51 samples, 4.08%)</title><rect x="95.8367%" y="629" width="4.0833%" height="15" fill="rgb(227,119,14)" fg:x="1197" fg:w="51"/><text x="96.0867%" y="639.50">&lt;ker..</text></g><g><title>core::iter::adapters::try_process (51 samples, 4.08%)</title><rect x="95.8367%" y="613" width="4.0833%" height="15" fill="rgb(242,138,13)" fg:x="1197" fg:w="51"/><text x="96.0867%" y="623.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (51 samples, 4.08%)</title><rect x="95.8367%" y="597" width="4.0833%" height="15" fill="rgb(215,11,16)" fg:x="1197" fg:w="51"/><text x="96.0867%" y="607.50">&lt;all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="99.8399%" y="581" width="0.0801%" height="15" fill="rgb(234,170,50)" fg:x="1247" fg:w="1"/><text x="100.0899%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.8399%" y="565" width="0.0801%" height="15" fill="rgb(233,34,20)" fg:x="1247" fg:w="1"/><text x="100.0899%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="99.8399%" y="549" width="0.0801%" height="15" fill="rgb(237,100,45)" fg:x="1247" fg:w="1"/><text x="100.0899%" y="559.50"></text></g><g><title>all (1,249 samples, 100%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(231,184,36)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1023.50"></text></g><g><title>simple-6bd4aef2 (1,249 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(252,93,2)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1007.50">simple-6bd4aef2</text></g><g><title>_start (1,249 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(248,176,47)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="991.50">_start</text></g><g><title>__libc_start_main (1,249 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(249,125,23)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="975.50">__libc_start_main</text></g><g><title>main (1,249 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(239,67,42)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="959.50">main</text></g><g><title>std::rt::lang_start_internal (1,249 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(244,162,4)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="943.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,249 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(214,150,38)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="927.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,249 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(228,211,28)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="911.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,249 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(212,98,48)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="895.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,249 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(213,45,13)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="879.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,249 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(218,35,29)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,249 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(244,13,3)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,249 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(235,170,19)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="831.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,249 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(233,193,43)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="815.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,249 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(228,223,20)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="799.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,249 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(208,85,54)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="783.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,249 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(254,14,45)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="767.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,249 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(247,99,29)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="751.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,249 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(225,180,54)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="735.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (327 samples, 26.18%)</title><rect x="73.8191%" y="709" width="26.1809%" height="15" fill="rgb(239,88,43)" fg:x="922" fg:w="327"/><text x="74.0691%" y="719.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as cr..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (327 samples, 26.18%)</title><rect x="73.8191%" y="693" width="26.1809%" height="15" fill="rgb(209,47,11)" fg:x="922" fg:w="327"/><text x="74.0691%" y="703.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (327 samples, 26.18%)</title><rect x="73.8191%" y="677" width="26.1809%" height="15" fill="rgb(219,179,23)" fg:x="922" fg:w="327"/><text x="74.0691%" y="687.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (53 samples, 4.24%)</title><rect x="95.7566%" y="661" width="4.2434%" height="15" fill="rgb(213,183,19)" fg:x="1196" fg:w="53"/><text x="96.0066%" y="671.50">engin..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (53 samples, 4.24%)</title><rect x="95.7566%" y="645" width="4.2434%" height="15" fill="rgb(210,11,9)" fg:x="1196" fg:w="53"/><text x="96.0066%" y="655.50">engin..</text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.9199%" y="629" width="0.0801%" height="15" fill="rgb(239,194,16)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.9199%" y="613" width="0.0801%" height="15" fill="rgb(246,23,50)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.9199%" y="597" width="0.0801%" height="15" fill="rgb(245,10,41)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.9199%" y="581" width="0.0801%" height="15" fill="rgb(228,43,24)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="591.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.9199%" y="565" width="0.0801%" height="15" fill="rgb(220,151,0)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="575.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="99.9199%" y="549" width="0.0801%" height="15" fill="rgb(232,219,10)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="559.50"></text></g></svg></svg>