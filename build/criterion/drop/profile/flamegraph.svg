<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1030" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1013.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1013.00"> </text><svg id="frames" x="10" width="1180" total_samples="1234"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.0810%" y="549" width="0.0810%" height="15" fill="rgb(209,157,44)" fg:x="1" fg:w="1"/><text x="0.3310%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.1621%" y="533" width="0.0810%" height="15" fill="rgb(246,115,41)" fg:x="2" fg:w="1"/><text x="0.4121%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.2431%" y="501" width="0.1621%" height="15" fill="rgb(229,86,1)" fg:x="3" fg:w="2"/><text x="0.4931%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.4052%" y="501" width="0.0810%" height="15" fill="rgb(240,108,53)" fg:x="5" fg:w="1"/><text x="0.6552%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4052%" y="485" width="0.0810%" height="15" fill="rgb(227,134,2)" fg:x="5" fg:w="1"/><text x="0.6552%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="0.4862%" y="485" width="0.2431%" height="15" fill="rgb(213,129,25)" fg:x="6" fg:w="3"/><text x="0.7362%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="0.4862%" y="469" width="0.2431%" height="15" fill="rgb(226,35,21)" fg:x="6" fg:w="3"/><text x="0.7362%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.5673%" y="453" width="0.1621%" height="15" fill="rgb(208,129,26)" fg:x="7" fg:w="2"/><text x="0.8173%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.7293%" y="485" width="0.0810%" height="15" fill="rgb(224,83,6)" fg:x="9" fg:w="1"/><text x="0.9793%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.81%)</title><rect x="0.0810%" y="565" width="0.8104%" height="15" fill="rgb(227,52,39)" fg:x="1" fg:w="10"/><text x="0.3310%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.73%)</title><rect x="0.1621%" y="549" width="0.7293%" height="15" fill="rgb(241,30,17)" fg:x="2" fg:w="9"/><text x="0.4121%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.65%)</title><rect x="0.2431%" y="533" width="0.6483%" height="15" fill="rgb(246,186,42)" fg:x="3" fg:w="8"/><text x="0.4931%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.65%)</title><rect x="0.2431%" y="517" width="0.6483%" height="15" fill="rgb(221,169,15)" fg:x="3" fg:w="8"/><text x="0.4931%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="0.4862%" y="501" width="0.4052%" height="15" fill="rgb(235,108,21)" fg:x="6" fg:w="5"/><text x="0.7362%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.8104%" y="485" width="0.0810%" height="15" fill="rgb(219,148,30)" fg:x="10" fg:w="1"/><text x="1.0604%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.97%)</title><rect x="0.0000%" y="629" width="0.9724%" height="15" fill="rgb(220,109,5)" fg:x="0" fg:w="12"/><text x="0.2500%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (12 samples, 0.97%)</title><rect x="0.0000%" y="613" width="0.9724%" height="15" fill="rgb(213,203,48)" fg:x="0" fg:w="12"/><text x="0.2500%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.89%)</title><rect x="0.0810%" y="597" width="0.8914%" height="15" fill="rgb(244,71,33)" fg:x="1" fg:w="11"/><text x="0.3310%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (11 samples, 0.89%)</title><rect x="0.0810%" y="581" width="0.8914%" height="15" fill="rgb(209,23,2)" fg:x="1" fg:w="11"/><text x="0.3310%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.8914%" y="565" width="0.0810%" height="15" fill="rgb(219,97,7)" fg:x="11" fg:w="1"/><text x="1.1414%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorageFactory as engine::storage::EntityStorageFactory&gt;::create_storage (1 samples, 0.08%)</title><rect x="0.9724%" y="613" width="0.0810%" height="15" fill="rgb(216,161,23)" fg:x="12" fg:w="1"/><text x="1.2224%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="1.0535%" y="565" width="0.0810%" height="15" fill="rgb(207,45,42)" fg:x="13" fg:w="1"/><text x="1.3035%" y="575.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="1.0535%" y="549" width="0.0810%" height="15" fill="rgb(241,61,4)" fg:x="13" fg:w="1"/><text x="1.3035%" y="559.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="1.0535%" y="533" width="0.0810%" height="15" fill="rgb(236,170,1)" fg:x="13" fg:w="1"/><text x="1.3035%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="1.0535%" y="517" width="0.0810%" height="15" fill="rgb(239,72,5)" fg:x="13" fg:w="1"/><text x="1.3035%" y="527.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="1.1345%" y="565" width="0.1621%" height="15" fill="rgb(214,13,50)" fg:x="14" fg:w="2"/><text x="1.3845%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="1.1345%" y="549" width="0.1621%" height="15" fill="rgb(224,88,9)" fg:x="14" fg:w="2"/><text x="1.3845%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="1.2156%" y="533" width="0.0810%" height="15" fill="rgb(238,192,34)" fg:x="15" fg:w="1"/><text x="1.4656%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="1.2156%" y="517" width="0.0810%" height="15" fill="rgb(217,203,50)" fg:x="15" fg:w="1"/><text x="1.4656%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="1.2966%" y="485" width="0.2431%" height="15" fill="rgb(241,123,32)" fg:x="16" fg:w="3"/><text x="1.5466%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="1.2966%" y="469" width="0.2431%" height="15" fill="rgb(248,151,39)" fg:x="16" fg:w="3"/><text x="1.5466%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="1.2966%" y="453" width="0.2431%" height="15" fill="rgb(208,89,6)" fg:x="16" fg:w="3"/><text x="1.5466%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="1.3776%" y="437" width="0.1621%" height="15" fill="rgb(254,43,26)" fg:x="17" fg:w="2"/><text x="1.6276%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="1.3776%" y="421" width="0.1621%" height="15" fill="rgb(216,158,13)" fg:x="17" fg:w="2"/><text x="1.6276%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="1.4587%" y="405" width="0.0810%" height="15" fill="rgb(212,47,37)" fg:x="18" fg:w="1"/><text x="1.7087%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.5397%" y="453" width="0.0810%" height="15" fill="rgb(254,16,10)" fg:x="19" fg:w="1"/><text x="1.7897%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.6207%" y="421" width="0.0810%" height="15" fill="rgb(223,228,16)" fg:x="20" fg:w="1"/><text x="1.8707%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="1.7018%" y="421" width="0.0810%" height="15" fill="rgb(249,108,50)" fg:x="21" fg:w="1"/><text x="1.9518%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.7828%" y="389" width="0.0810%" height="15" fill="rgb(208,220,5)" fg:x="22" fg:w="1"/><text x="2.0328%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="1.6207%" y="453" width="0.3241%" height="15" fill="rgb(217,89,48)" fg:x="20" fg:w="4"/><text x="1.8707%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="1.6207%" y="437" width="0.3241%" height="15" fill="rgb(212,113,41)" fg:x="20" fg:w="4"/><text x="1.8707%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="1.7828%" y="421" width="0.1621%" height="15" fill="rgb(231,127,5)" fg:x="22" fg:w="2"/><text x="2.0328%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="1.7828%" y="405" width="0.1621%" height="15" fill="rgb(217,141,17)" fg:x="22" fg:w="2"/><text x="2.0328%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.8639%" y="389" width="0.0810%" height="15" fill="rgb(245,125,54)" fg:x="23" fg:w="1"/><text x="2.1139%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.8639%" y="373" width="0.0810%" height="15" fill="rgb(248,125,3)" fg:x="23" fg:w="1"/><text x="2.1139%" y="383.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (9 samples, 0.73%)</title><rect x="1.2966%" y="549" width="0.7293%" height="15" fill="rgb(236,119,51)" fg:x="16" fg:w="9"/><text x="1.5466%" y="559.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (9 samples, 0.73%)</title><rect x="1.2966%" y="533" width="0.7293%" height="15" fill="rgb(239,99,8)" fg:x="16" fg:w="9"/><text x="1.5466%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.73%)</title><rect x="1.2966%" y="517" width="0.7293%" height="15" fill="rgb(224,228,4)" fg:x="16" fg:w="9"/><text x="1.5466%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.73%)</title><rect x="1.2966%" y="501" width="0.7293%" height="15" fill="rgb(220,131,45)" fg:x="16" fg:w="9"/><text x="1.5466%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.49%)</title><rect x="1.5397%" y="485" width="0.4862%" height="15" fill="rgb(215,62,5)" fg:x="19" fg:w="6"/><text x="1.7897%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="1.5397%" y="469" width="0.4862%" height="15" fill="rgb(253,12,24)" fg:x="19" fg:w="6"/><text x="1.7897%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="1.9449%" y="453" width="0.0810%" height="15" fill="rgb(248,120,50)" fg:x="24" fg:w="1"/><text x="2.1949%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="2.0259%" y="501" width="0.0810%" height="15" fill="rgb(245,194,10)" fg:x="25" fg:w="1"/><text x="2.2759%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.1070%" y="501" width="0.0810%" height="15" fill="rgb(241,149,38)" fg:x="26" fg:w="1"/><text x="2.3570%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="2.2690%" y="453" width="0.0810%" height="15" fill="rgb(219,215,7)" fg:x="28" fg:w="1"/><text x="2.5190%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="2.2690%" y="469" width="0.1621%" height="15" fill="rgb(208,120,31)" fg:x="28" fg:w="2"/><text x="2.5190%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.3501%" y="453" width="0.0810%" height="15" fill="rgb(244,30,8)" fg:x="29" fg:w="1"/><text x="2.6001%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.4311%" y="469" width="0.0810%" height="15" fill="rgb(238,35,44)" fg:x="30" fg:w="1"/><text x="2.6811%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.4311%" y="453" width="0.0810%" height="15" fill="rgb(243,218,37)" fg:x="30" fg:w="1"/><text x="2.6811%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="2.5932%" y="405" width="0.0810%" height="15" fill="rgb(218,169,10)" fg:x="32" fg:w="1"/><text x="2.8432%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="2.5932%" y="389" width="0.0810%" height="15" fill="rgb(221,144,10)" fg:x="32" fg:w="1"/><text x="2.8432%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="2.5932%" y="373" width="0.0810%" height="15" fill="rgb(226,41,38)" fg:x="32" fg:w="1"/><text x="2.8432%" y="383.50"></text></g><g><title>engine::internal::Entities::prepare_entity (21 samples, 1.70%)</title><rect x="1.0535%" y="581" width="1.7018%" height="15" fill="rgb(228,3,1)" fg:x="13" fg:w="21"/><text x="1.3035%" y="591.50"></text></g><g><title>kernel::model::deserialize_entity (18 samples, 1.46%)</title><rect x="1.2966%" y="565" width="1.4587%" height="15" fill="rgb(209,129,12)" fg:x="16" fg:w="18"/><text x="1.5466%" y="575.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.73%)</title><rect x="2.0259%" y="549" width="0.7293%" height="15" fill="rgb(213,136,33)" fg:x="25" fg:w="9"/><text x="2.2759%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.73%)</title><rect x="2.0259%" y="533" width="0.7293%" height="15" fill="rgb(209,181,29)" fg:x="25" fg:w="9"/><text x="2.2759%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.73%)</title><rect x="2.0259%" y="517" width="0.7293%" height="15" fill="rgb(234,173,18)" fg:x="25" fg:w="9"/><text x="2.2759%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.57%)</title><rect x="2.1880%" y="501" width="0.5673%" height="15" fill="rgb(227,73,47)" fg:x="27" fg:w="7"/><text x="2.4380%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="2.2690%" y="485" width="0.4862%" height="15" fill="rgb(234,9,34)" fg:x="28" fg:w="6"/><text x="2.5190%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="2.5122%" y="469" width="0.2431%" height="15" fill="rgb(235,172,15)" fg:x="31" fg:w="3"/><text x="2.7622%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="2.5932%" y="453" width="0.1621%" height="15" fill="rgb(245,61,2)" fg:x="32" fg:w="2"/><text x="2.8432%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="2.5932%" y="437" width="0.1621%" height="15" fill="rgb(238,39,47)" fg:x="32" fg:w="2"/><text x="2.8432%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="2.5932%" y="421" width="0.1621%" height="15" fill="rgb(234,37,24)" fg:x="32" fg:w="2"/><text x="2.8432%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.6742%" y="405" width="0.0810%" height="15" fill="rgb(248,223,24)" fg:x="33" fg:w="1"/><text x="2.9242%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (22 samples, 1.78%)</title><rect x="1.0535%" y="597" width="1.7828%" height="15" fill="rgb(223,12,15)" fg:x="13" fg:w="22"/><text x="1.3035%" y="607.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="2.7553%" y="581" width="0.0810%" height="15" fill="rgb(249,6,3)" fg:x="34" fg:w="1"/><text x="3.0053%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="2.7553%" y="565" width="0.0810%" height="15" fill="rgb(237,105,33)" fg:x="34" fg:w="1"/><text x="3.0053%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="2.7553%" y="549" width="0.0810%" height="15" fill="rgb(252,208,35)" fg:x="34" fg:w="1"/><text x="3.0053%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="2.7553%" y="533" width="0.0810%" height="15" fill="rgb(215,181,35)" fg:x="34" fg:w="1"/><text x="3.0053%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="2.7553%" y="517" width="0.0810%" height="15" fill="rgb(246,212,3)" fg:x="34" fg:w="1"/><text x="3.0053%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="2.7553%" y="501" width="0.0810%" height="15" fill="rgb(247,156,24)" fg:x="34" fg:w="1"/><text x="3.0053%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="2.7553%" y="485" width="0.0810%" height="15" fill="rgb(248,9,31)" fg:x="34" fg:w="1"/><text x="3.0053%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="2.7553%" y="469" width="0.0810%" height="15" fill="rgb(234,26,45)" fg:x="34" fg:w="1"/><text x="3.0053%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="2.7553%" y="453" width="0.0810%" height="15" fill="rgb(249,11,32)" fg:x="34" fg:w="1"/><text x="3.0053%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="2.7553%" y="437" width="0.0810%" height="15" fill="rgb(249,162,33)" fg:x="34" fg:w="1"/><text x="3.0053%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.8363%" y="597" width="0.0810%" height="15" fill="rgb(232,4,32)" fg:x="35" fg:w="1"/><text x="3.0863%" y="607.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="2.9173%" y="597" width="0.0810%" height="15" fill="rgb(212,5,45)" fg:x="36" fg:w="1"/><text x="3.1673%" y="607.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="2.9173%" y="581" width="0.0810%" height="15" fill="rgb(227,95,13)" fg:x="36" fg:w="1"/><text x="3.1673%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="2.9984%" y="597" width="0.0810%" height="15" fill="rgb(223,205,10)" fg:x="37" fg:w="1"/><text x="3.2484%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="2.9984%" y="581" width="0.0810%" height="15" fill="rgb(222,178,8)" fg:x="37" fg:w="1"/><text x="3.2484%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.9984%" y="565" width="0.0810%" height="15" fill="rgb(216,13,22)" fg:x="37" fg:w="1"/><text x="3.2484%" y="575.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="3.0794%" y="597" width="0.0810%" height="15" fill="rgb(240,167,12)" fg:x="38" fg:w="1"/><text x="3.3294%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="3.0794%" y="581" width="0.0810%" height="15" fill="rgb(235,68,35)" fg:x="38" fg:w="1"/><text x="3.3294%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="3.0794%" y="565" width="0.0810%" height="15" fill="rgb(253,40,27)" fg:x="38" fg:w="1"/><text x="3.3294%" y="575.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="3.1605%" y="597" width="0.0810%" height="15" fill="rgb(214,19,28)" fg:x="39" fg:w="1"/><text x="3.4105%" y="607.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="3.1605%" y="581" width="0.0810%" height="15" fill="rgb(210,167,45)" fg:x="39" fg:w="1"/><text x="3.4105%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="3.1605%" y="565" width="0.0810%" height="15" fill="rgb(232,97,40)" fg:x="39" fg:w="1"/><text x="3.4105%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="3.1605%" y="549" width="0.0810%" height="15" fill="rgb(250,35,23)" fg:x="39" fg:w="1"/><text x="3.4105%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="3.1605%" y="533" width="0.0810%" height="15" fill="rgb(248,47,53)" fg:x="39" fg:w="1"/><text x="3.4105%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="3.1605%" y="517" width="0.0810%" height="15" fill="rgb(226,58,50)" fg:x="39" fg:w="1"/><text x="3.4105%" y="527.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="3.2415%" y="549" width="0.0810%" height="15" fill="rgb(217,105,26)" fg:x="40" fg:w="1"/><text x="3.4915%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="3.2415%" y="533" width="0.0810%" height="15" fill="rgb(208,64,1)" fg:x="40" fg:w="1"/><text x="3.4915%" y="543.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="3.2415%" y="517" width="0.0810%" height="15" fill="rgb(214,80,1)" fg:x="40" fg:w="1"/><text x="3.4915%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="3.2415%" y="501" width="0.0810%" height="15" fill="rgb(206,175,26)" fg:x="40" fg:w="1"/><text x="3.4915%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="3.2415%" y="485" width="0.0810%" height="15" fill="rgb(235,156,37)" fg:x="40" fg:w="1"/><text x="3.4915%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.08%)</title><rect x="3.2415%" y="469" width="0.0810%" height="15" fill="rgb(213,100,9)" fg:x="40" fg:w="1"/><text x="3.4915%" y="479.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.08%)</title><rect x="3.2415%" y="453" width="0.0810%" height="15" fill="rgb(241,15,13)" fg:x="40" fg:w="1"/><text x="3.4915%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="3.3225%" y="501" width="0.0810%" height="15" fill="rgb(205,97,43)" fg:x="41" fg:w="1"/><text x="3.5725%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="3.3225%" y="485" width="0.0810%" height="15" fill="rgb(216,106,32)" fg:x="41" fg:w="1"/><text x="3.5725%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="3.3225%" y="469" width="0.0810%" height="15" fill="rgb(226,200,8)" fg:x="41" fg:w="1"/><text x="3.5725%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="3.3225%" y="453" width="0.0810%" height="15" fill="rgb(244,54,29)" fg:x="41" fg:w="1"/><text x="3.5725%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="3.3225%" y="437" width="0.0810%" height="15" fill="rgb(252,169,12)" fg:x="41" fg:w="1"/><text x="3.5725%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="3.3225%" y="421" width="0.0810%" height="15" fill="rgb(231,199,11)" fg:x="41" fg:w="1"/><text x="3.5725%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="3.3225%" y="405" width="0.0810%" height="15" fill="rgb(233,191,18)" fg:x="41" fg:w="1"/><text x="3.5725%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="3.3225%" y="389" width="0.0810%" height="15" fill="rgb(215,83,47)" fg:x="41" fg:w="1"/><text x="3.5725%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="3.3225%" y="373" width="0.0810%" height="15" fill="rgb(251,67,19)" fg:x="41" fg:w="1"/><text x="3.5725%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="3.3225%" y="357" width="0.0810%" height="15" fill="rgb(240,7,20)" fg:x="41" fg:w="1"/><text x="3.5725%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="3.3225%" y="341" width="0.0810%" height="15" fill="rgb(210,150,26)" fg:x="41" fg:w="1"/><text x="3.5725%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="3.3225%" y="325" width="0.0810%" height="15" fill="rgb(228,75,42)" fg:x="41" fg:w="1"/><text x="3.5725%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="3.3225%" y="309" width="0.0810%" height="15" fill="rgb(237,134,48)" fg:x="41" fg:w="1"/><text x="3.5725%" y="319.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="3.3225%" y="293" width="0.0810%" height="15" fill="rgb(205,80,50)" fg:x="41" fg:w="1"/><text x="3.5725%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="3.3225%" y="277" width="0.0810%" height="15" fill="rgb(217,74,48)" fg:x="41" fg:w="1"/><text x="3.5725%" y="287.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="3.2415%" y="565" width="0.2431%" height="15" fill="rgb(205,82,50)" fg:x="40" fg:w="3"/><text x="3.4915%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="3.3225%" y="549" width="0.1621%" height="15" fill="rgb(228,1,33)" fg:x="41" fg:w="2"/><text x="3.5725%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="3.3225%" y="533" width="0.1621%" height="15" fill="rgb(214,50,23)" fg:x="41" fg:w="2"/><text x="3.5725%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="3.3225%" y="517" width="0.1621%" height="15" fill="rgb(210,62,9)" fg:x="41" fg:w="2"/><text x="3.5725%" y="527.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="3.4036%" y="501" width="0.0810%" height="15" fill="rgb(210,104,37)" fg:x="42" fg:w="1"/><text x="3.6536%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.4846%" y="549" width="0.0810%" height="15" fill="rgb(232,104,43)" fg:x="43" fg:w="1"/><text x="3.7346%" y="559.50"></text></g><g><title>libloading::library_filename (2 samples, 0.16%)</title><rect x="3.4846%" y="565" width="0.1621%" height="15" fill="rgb(244,52,6)" fg:x="43" fg:w="2"/><text x="3.7346%" y="575.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="3.5656%" y="549" width="0.0810%" height="15" fill="rgb(211,174,52)" fg:x="44" fg:w="1"/><text x="3.8156%" y="559.50"></text></g><g><title>dlerror (2 samples, 0.16%)</title><rect x="3.8088%" y="549" width="0.1621%" height="15" fill="rgb(229,48,4)" fg:x="47" fg:w="2"/><text x="4.0588%" y="559.50"></text></g><g><title>__asprintf (2 samples, 0.16%)</title><rect x="3.8088%" y="533" width="0.1621%" height="15" fill="rgb(205,155,16)" fg:x="47" fg:w="2"/><text x="4.0588%" y="543.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.08%)</title><rect x="3.8898%" y="517" width="0.0810%" height="15" fill="rgb(211,141,53)" fg:x="48" fg:w="1"/><text x="4.1398%" y="527.50"></text></g><g><title>__pthread_mutex_unlock (1 samples, 0.08%)</title><rect x="4.0519%" y="501" width="0.0810%" height="15" fill="rgb(240,148,11)" fg:x="50" fg:w="1"/><text x="4.3019%" y="511.50"></text></g><g><title>__sigsetjmp (2 samples, 0.16%)</title><rect x="4.1329%" y="501" width="0.1621%" height="15" fill="rgb(214,45,23)" fg:x="51" fg:w="2"/><text x="4.3829%" y="511.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (23 samples, 1.86%)</title><rect x="3.2415%" y="581" width="1.8639%" height="15" fill="rgb(248,74,26)" fg:x="40" fg:w="23"/><text x="3.4915%" y="591.50">&lt;..</text></g><g><title>libloading::os::unix::Library::open (18 samples, 1.46%)</title><rect x="3.6467%" y="565" width="1.4587%" height="15" fill="rgb(218,121,16)" fg:x="45" fg:w="18"/><text x="3.8967%" y="575.50"></text></g><g><title>dlopen (14 samples, 1.13%)</title><rect x="3.9708%" y="549" width="1.1345%" height="15" fill="rgb(218,10,47)" fg:x="49" fg:w="14"/><text x="4.2208%" y="559.50"></text></g><g><title>_dl_catch_error (14 samples, 1.13%)</title><rect x="3.9708%" y="533" width="1.1345%" height="15" fill="rgb(227,99,14)" fg:x="49" fg:w="14"/><text x="4.2208%" y="543.50"></text></g><g><title>_dl_catch_exception (14 samples, 1.13%)</title><rect x="3.9708%" y="517" width="1.1345%" height="15" fill="rgb(229,83,46)" fg:x="49" fg:w="14"/><text x="4.2208%" y="527.50"></text></g><g><title>_dl_catch_exception (10 samples, 0.81%)</title><rect x="4.2950%" y="501" width="0.8104%" height="15" fill="rgb(228,25,1)" fg:x="53" fg:w="10"/><text x="4.5450%" y="511.50"></text></g><g><title>_dl_catch_exception (9 samples, 0.73%)</title><rect x="4.3760%" y="485" width="0.7293%" height="15" fill="rgb(252,190,15)" fg:x="54" fg:w="9"/><text x="4.6260%" y="495.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (24 samples, 1.94%)</title><rect x="3.2415%" y="597" width="1.9449%" height="15" fill="rgb(213,103,51)" fg:x="40" fg:w="24"/><text x="3.4915%" y="607.50">k..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="5.1053%" y="581" width="0.0810%" height="15" fill="rgb(220,38,44)" fg:x="63" fg:w="1"/><text x="5.3553%" y="591.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="5.1053%" y="565" width="0.0810%" height="15" fill="rgb(210,45,26)" fg:x="63" fg:w="1"/><text x="5.3553%" y="575.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (54 samples, 4.38%)</title><rect x="0.9724%" y="629" width="4.3760%" height="15" fill="rgb(205,95,48)" fg:x="12" fg:w="54"/><text x="1.2224%" y="639.50">&lt;engi..</text></g><g><title>engine::session::Session::new (53 samples, 4.29%)</title><rect x="1.0535%" y="613" width="4.2950%" height="15" fill="rgb(225,179,37)" fg:x="13" fg:w="53"/><text x="1.3035%" y="623.50">engin..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="5.1864%" y="597" width="0.1621%" height="15" fill="rgb(230,209,3)" fg:x="64" fg:w="2"/><text x="5.4364%" y="607.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="5.1864%" y="581" width="0.1621%" height="15" fill="rgb(248,12,46)" fg:x="64" fg:w="2"/><text x="5.4364%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.3485%" y="613" width="0.0810%" height="15" fill="rgb(234,18,0)" fg:x="66" fg:w="1"/><text x="5.5985%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.3485%" y="597" width="0.0810%" height="15" fill="rgb(238,197,14)" fg:x="66" fg:w="1"/><text x="5.5985%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.08%)</title><rect x="5.4295%" y="613" width="0.0810%" height="15" fill="rgb(251,162,48)" fg:x="67" fg:w="1"/><text x="5.6795%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.4295%" y="597" width="0.0810%" height="15" fill="rgb(237,73,42)" fg:x="67" fg:w="1"/><text x="5.6795%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (2 samples, 0.16%)</title><rect x="5.5105%" y="613" width="0.1621%" height="15" fill="rgb(211,108,8)" fg:x="68" fg:w="2"/><text x="5.7605%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="5.5916%" y="597" width="0.0810%" height="15" fill="rgb(213,45,22)" fg:x="69" fg:w="1"/><text x="5.8416%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="5.5916%" y="581" width="0.0810%" height="15" fill="rgb(252,154,5)" fg:x="69" fg:w="1"/><text x="5.8416%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.6726%" y="581" width="0.0810%" height="15" fill="rgb(221,79,52)" fg:x="70" fg:w="1"/><text x="5.9226%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="5.7536%" y="581" width="0.0810%" height="15" fill="rgb(229,220,36)" fg:x="71" fg:w="1"/><text x="6.0036%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="5.7536%" y="565" width="0.0810%" height="15" fill="rgb(211,17,16)" fg:x="71" fg:w="1"/><text x="6.0036%" y="575.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="5.8347%" y="581" width="0.0810%" height="15" fill="rgb(222,55,31)" fg:x="72" fg:w="1"/><text x="6.0847%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="5.8347%" y="565" width="0.0810%" height="15" fill="rgb(221,221,31)" fg:x="72" fg:w="1"/><text x="6.0847%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="5.8347%" y="549" width="0.0810%" height="15" fill="rgb(227,168,26)" fg:x="72" fg:w="1"/><text x="6.0847%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="5.8347%" y="533" width="0.0810%" height="15" fill="rgb(224,139,9)" fg:x="72" fg:w="1"/><text x="6.0847%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="5.8347%" y="517" width="0.0810%" height="15" fill="rgb(254,172,0)" fg:x="72" fg:w="1"/><text x="6.0847%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="5.8347%" y="501" width="0.0810%" height="15" fill="rgb(235,203,1)" fg:x="72" fg:w="1"/><text x="6.0847%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="5.8347%" y="485" width="0.0810%" height="15" fill="rgb(216,205,24)" fg:x="72" fg:w="1"/><text x="6.0847%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="5.8347%" y="469" width="0.0810%" height="15" fill="rgb(233,24,6)" fg:x="72" fg:w="1"/><text x="6.0847%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="5.8347%" y="453" width="0.0810%" height="15" fill="rgb(244,110,9)" fg:x="72" fg:w="1"/><text x="6.0847%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="5.9157%" y="565" width="0.0810%" height="15" fill="rgb(239,222,42)" fg:x="73" fg:w="1"/><text x="6.1657%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.9157%" y="549" width="0.0810%" height="15" fill="rgb(218,145,13)" fg:x="73" fg:w="1"/><text x="6.1657%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="5.9157%" y="533" width="0.0810%" height="15" fill="rgb(207,69,11)" fg:x="73" fg:w="1"/><text x="6.1657%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="6.2399%" y="533" width="0.2431%" height="15" fill="rgb(220,223,22)" fg:x="77" fg:w="3"/><text x="6.4899%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="6.2399%" y="517" width="0.2431%" height="15" fill="rgb(245,102,5)" fg:x="77" fg:w="3"/><text x="6.4899%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.4019%" y="501" width="0.0810%" height="15" fill="rgb(211,148,2)" fg:x="79" fg:w="1"/><text x="6.6519%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.4019%" y="485" width="0.0810%" height="15" fill="rgb(241,13,44)" fg:x="79" fg:w="1"/><text x="6.6519%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.4019%" y="469" width="0.0810%" height="15" fill="rgb(219,137,21)" fg:x="79" fg:w="1"/><text x="6.6519%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="6.4830%" y="517" width="0.0810%" height="15" fill="rgb(242,206,5)" fg:x="80" fg:w="1"/><text x="6.7330%" y="527.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="6.5640%" y="421" width="0.0810%" height="15" fill="rgb(217,114,22)" fg:x="81" fg:w="1"/><text x="6.8140%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.5640%" y="517" width="0.1621%" height="15" fill="rgb(253,206,42)" fg:x="81" fg:w="2"/><text x="6.8140%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.5640%" y="501" width="0.1621%" height="15" fill="rgb(236,102,18)" fg:x="81" fg:w="2"/><text x="6.8140%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="6.5640%" y="485" width="0.1621%" height="15" fill="rgb(208,59,49)" fg:x="81" fg:w="2"/><text x="6.8140%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="6.5640%" y="469" width="0.1621%" height="15" fill="rgb(215,194,28)" fg:x="81" fg:w="2"/><text x="6.8140%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="6.5640%" y="453" width="0.1621%" height="15" fill="rgb(243,207,11)" fg:x="81" fg:w="2"/><text x="6.8140%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="6.5640%" y="437" width="0.1621%" height="15" fill="rgb(254,179,35)" fg:x="81" fg:w="2"/><text x="6.8140%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.6451%" y="421" width="0.0810%" height="15" fill="rgb(235,97,3)" fg:x="82" fg:w="1"/><text x="6.8951%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="6.8882%" y="501" width="0.0810%" height="15" fill="rgb(215,155,33)" fg:x="85" fg:w="1"/><text x="7.1382%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="6.8882%" y="485" width="0.0810%" height="15" fill="rgb(223,128,12)" fg:x="85" fg:w="1"/><text x="7.1382%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.8882%" y="469" width="0.0810%" height="15" fill="rgb(208,157,18)" fg:x="85" fg:w="1"/><text x="7.1382%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.8882%" y="453" width="0.0810%" height="15" fill="rgb(249,70,54)" fg:x="85" fg:w="1"/><text x="7.1382%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="6.9692%" y="501" width="0.3241%" height="15" fill="rgb(244,118,24)" fg:x="86" fg:w="4"/><text x="7.2192%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.1313%" y="485" width="0.1621%" height="15" fill="rgb(211,54,0)" fg:x="88" fg:w="2"/><text x="7.3813%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="7.1313%" y="469" width="0.1621%" height="15" fill="rgb(245,137,45)" fg:x="88" fg:w="2"/><text x="7.3813%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="7.1313%" y="453" width="0.1621%" height="15" fill="rgb(232,154,31)" fg:x="88" fg:w="2"/><text x="7.3813%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="7.2934%" y="485" width="0.0810%" height="15" fill="rgb(253,6,39)" fg:x="90" fg:w="1"/><text x="7.5434%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="7.3744%" y="485" width="0.1621%" height="15" fill="rgb(234,183,24)" fg:x="91" fg:w="2"/><text x="7.6244%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.4554%" y="469" width="0.0810%" height="15" fill="rgb(252,84,40)" fg:x="92" fg:w="1"/><text x="7.7054%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.4554%" y="453" width="0.0810%" height="15" fill="rgb(224,65,2)" fg:x="92" fg:w="1"/><text x="7.7054%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="7.5365%" y="469" width="0.1621%" height="15" fill="rgb(229,38,24)" fg:x="93" fg:w="2"/><text x="7.7865%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.5365%" y="453" width="0.1621%" height="15" fill="rgb(218,131,50)" fg:x="93" fg:w="2"/><text x="7.7865%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="7.5365%" y="437" width="0.1621%" height="15" fill="rgb(233,106,18)" fg:x="93" fg:w="2"/><text x="7.7865%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="7.5365%" y="485" width="0.2431%" height="15" fill="rgb(220,216,11)" fg:x="93" fg:w="3"/><text x="7.7865%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.6985%" y="469" width="0.0810%" height="15" fill="rgb(251,100,45)" fg:x="95" fg:w="1"/><text x="7.9485%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.89%)</title><rect x="7.2934%" y="501" width="0.8914%" height="15" fill="rgb(235,143,32)" fg:x="90" fg:w="11"/><text x="7.5434%" y="511.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.41%)</title><rect x="7.7796%" y="485" width="0.4052%" height="15" fill="rgb(248,124,34)" fg:x="96" fg:w="5"/><text x="8.0296%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.70%)</title><rect x="6.7261%" y="517" width="1.7018%" height="15" fill="rgb(225,221,4)" fg:x="83" fg:w="21"/><text x="6.9761%" y="527.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="8.1848%" y="501" width="0.2431%" height="15" fill="rgb(242,27,43)" fg:x="101" fg:w="3"/><text x="8.4348%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="8.1848%" y="485" width="0.2431%" height="15" fill="rgb(227,54,8)" fg:x="101" fg:w="3"/><text x="8.4348%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="8.2658%" y="469" width="0.1621%" height="15" fill="rgb(253,139,49)" fg:x="102" fg:w="2"/><text x="8.5158%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (30 samples, 2.43%)</title><rect x="6.1588%" y="549" width="2.4311%" height="15" fill="rgb(231,26,43)" fg:x="76" fg:w="30"/><text x="6.4088%" y="559.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (26 samples, 2.11%)</title><rect x="6.4830%" y="533" width="2.1070%" height="15" fill="rgb(207,121,39)" fg:x="80" fg:w="26"/><text x="6.7330%" y="543.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.4279%" y="517" width="0.1621%" height="15" fill="rgb(223,101,35)" fg:x="104" fg:w="2"/><text x="8.6779%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.6710%" y="517" width="0.0810%" height="15" fill="rgb(232,87,23)" fg:x="107" fg:w="1"/><text x="8.9210%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="8.7520%" y="517" width="0.0810%" height="15" fill="rgb(225,180,29)" fg:x="108" fg:w="1"/><text x="9.0020%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="8.9141%" y="501" width="0.1621%" height="15" fill="rgb(225,25,17)" fg:x="110" fg:w="2"/><text x="9.1641%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.1572%" y="485" width="0.0810%" height="15" fill="rgb(223,8,52)" fg:x="113" fg:w="1"/><text x="9.4072%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.1572%" y="469" width="0.0810%" height="15" fill="rgb(246,42,21)" fg:x="113" fg:w="1"/><text x="9.4072%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="9.2382%" y="469" width="0.0810%" height="15" fill="rgb(205,64,43)" fg:x="114" fg:w="1"/><text x="9.4882%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="9.2382%" y="453" width="0.0810%" height="15" fill="rgb(221,160,13)" fg:x="114" fg:w="1"/><text x="9.4882%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.2382%" y="437" width="0.0810%" height="15" fill="rgb(239,58,35)" fg:x="114" fg:w="1"/><text x="9.4882%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="9.3193%" y="469" width="0.1621%" height="15" fill="rgb(251,26,40)" fg:x="115" fg:w="2"/><text x="9.5693%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="9.4814%" y="469" width="0.3241%" height="15" fill="rgb(247,0,4)" fg:x="117" fg:w="4"/><text x="9.7314%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="9.6434%" y="453" width="0.1621%" height="15" fill="rgb(218,130,10)" fg:x="119" fg:w="2"/><text x="9.8934%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.8055%" y="453" width="0.0810%" height="15" fill="rgb(239,32,7)" fg:x="121" fg:w="1"/><text x="10.0555%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.38%)</title><rect x="8.5900%" y="549" width="1.3776%" height="15" fill="rgb(210,192,24)" fg:x="106" fg:w="17"/><text x="8.8400%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (17 samples, 1.38%)</title><rect x="8.5900%" y="533" width="1.3776%" height="15" fill="rgb(226,212,17)" fg:x="106" fg:w="17"/><text x="8.8400%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.13%)</title><rect x="8.8331%" y="517" width="1.1345%" height="15" fill="rgb(219,201,28)" fg:x="109" fg:w="14"/><text x="9.0831%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.89%)</title><rect x="9.0762%" y="501" width="0.8914%" height="15" fill="rgb(235,207,41)" fg:x="112" fg:w="11"/><text x="9.3262%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="9.2382%" y="485" width="0.7293%" height="15" fill="rgb(241,95,54)" fg:x="114" fg:w="9"/><text x="9.4882%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="9.8055%" y="469" width="0.1621%" height="15" fill="rgb(248,12,23)" fg:x="121" fg:w="2"/><text x="10.0555%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.8865%" y="453" width="0.0810%" height="15" fill="rgb(228,173,4)" fg:x="122" fg:w="1"/><text x="10.1365%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.8865%" y="437" width="0.0810%" height="15" fill="rgb(254,99,5)" fg:x="122" fg:w="1"/><text x="10.1365%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.9676%" y="501" width="0.0810%" height="15" fill="rgb(212,184,17)" fg:x="123" fg:w="1"/><text x="10.2176%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.0486%" y="501" width="0.0810%" height="15" fill="rgb(252,174,1)" fg:x="124" fg:w="1"/><text x="10.2986%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.0486%" y="485" width="0.0810%" height="15" fill="rgb(241,118,51)" fg:x="124" fg:w="1"/><text x="10.2986%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="10.0486%" y="469" width="0.0810%" height="15" fill="rgb(227,94,47)" fg:x="124" fg:w="1"/><text x="10.2986%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="10.1297%" y="485" width="0.0810%" height="15" fill="rgb(229,104,2)" fg:x="125" fg:w="1"/><text x="10.3797%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="10.1297%" y="501" width="0.1621%" height="15" fill="rgb(219,28,31)" fg:x="125" fg:w="2"/><text x="10.3797%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.2107%" y="485" width="0.0810%" height="15" fill="rgb(233,109,36)" fg:x="126" fg:w="1"/><text x="10.4607%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.2107%" y="469" width="0.0810%" height="15" fill="rgb(246,88,11)" fg:x="126" fg:w="1"/><text x="10.4607%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="10.4538%" y="453" width="0.1621%" height="15" fill="rgb(209,212,17)" fg:x="129" fg:w="2"/><text x="10.7038%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="10.4538%" y="437" width="0.1621%" height="15" fill="rgb(243,59,29)" fg:x="129" fg:w="2"/><text x="10.7038%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="10.4538%" y="421" width="0.1621%" height="15" fill="rgb(244,205,48)" fg:x="129" fg:w="2"/><text x="10.7038%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="10.6159%" y="437" width="0.0810%" height="15" fill="rgb(227,30,6)" fg:x="131" fg:w="1"/><text x="10.8659%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="10.7780%" y="421" width="0.2431%" height="15" fill="rgb(220,205,48)" fg:x="133" fg:w="3"/><text x="11.0280%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="10.7780%" y="405" width="0.2431%" height="15" fill="rgb(250,94,14)" fg:x="133" fg:w="3"/><text x="11.0280%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.9400%" y="389" width="0.0810%" height="15" fill="rgb(216,119,42)" fg:x="135" fg:w="1"/><text x="11.1900%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.0211%" y="389" width="0.0810%" height="15" fill="rgb(232,155,0)" fg:x="136" fg:w="1"/><text x="11.2711%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.0211%" y="373" width="0.0810%" height="15" fill="rgb(212,24,32)" fg:x="136" fg:w="1"/><text x="11.2711%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.0211%" y="357" width="0.0810%" height="15" fill="rgb(216,69,20)" fg:x="136" fg:w="1"/><text x="11.2711%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="11.1831%" y="373" width="0.0810%" height="15" fill="rgb(229,73,31)" fg:x="138" fg:w="1"/><text x="11.4331%" y="383.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (13 samples, 1.05%)</title><rect x="10.2917%" y="501" width="1.0535%" height="15" fill="rgb(224,219,20)" fg:x="127" fg:w="13"/><text x="10.5417%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (13 samples, 1.05%)</title><rect x="10.2917%" y="485" width="1.0535%" height="15" fill="rgb(215,146,41)" fg:x="127" fg:w="13"/><text x="10.5417%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.05%)</title><rect x="10.2917%" y="469" width="1.0535%" height="15" fill="rgb(244,71,31)" fg:x="127" fg:w="13"/><text x="10.5417%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (9 samples, 0.73%)</title><rect x="10.6159%" y="453" width="0.7293%" height="15" fill="rgb(224,24,11)" fg:x="131" fg:w="9"/><text x="10.8659%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.65%)</title><rect x="10.6969%" y="437" width="0.6483%" height="15" fill="rgb(229,76,15)" fg:x="132" fg:w="8"/><text x="10.9469%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (4 samples, 0.32%)</title><rect x="11.0211%" y="421" width="0.3241%" height="15" fill="rgb(209,93,2)" fg:x="136" fg:w="4"/><text x="11.2711%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="11.0211%" y="405" width="0.3241%" height="15" fill="rgb(216,200,50)" fg:x="136" fg:w="4"/><text x="11.2711%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="11.1021%" y="389" width="0.2431%" height="15" fill="rgb(211,67,34)" fg:x="137" fg:w="3"/><text x="11.3521%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="11.2642%" y="373" width="0.0810%" height="15" fill="rgb(225,87,47)" fg:x="139" fg:w="1"/><text x="11.5142%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.3452%" y="485" width="0.0810%" height="15" fill="rgb(217,185,16)" fg:x="140" fg:w="1"/><text x="11.5952%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.4263%" y="485" width="0.0810%" height="15" fill="rgb(205,0,0)" fg:x="141" fg:w="1"/><text x="11.6763%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.4263%" y="469" width="0.0810%" height="15" fill="rgb(207,116,45)" fg:x="141" fg:w="1"/><text x="11.6763%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.4263%" y="453" width="0.0810%" height="15" fill="rgb(221,156,26)" fg:x="141" fg:w="1"/><text x="11.6763%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.5883%" y="405" width="0.0810%" height="15" fill="rgb(213,140,4)" fg:x="143" fg:w="1"/><text x="11.8383%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.5883%" y="389" width="0.0810%" height="15" fill="rgb(231,224,15)" fg:x="143" fg:w="1"/><text x="11.8383%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.5883%" y="373" width="0.0810%" height="15" fill="rgb(244,76,20)" fg:x="143" fg:w="1"/><text x="11.8383%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="11.5073%" y="453" width="0.2431%" height="15" fill="rgb(238,117,7)" fg:x="142" fg:w="3"/><text x="11.7573%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="11.5883%" y="437" width="0.1621%" height="15" fill="rgb(235,1,10)" fg:x="143" fg:w="2"/><text x="11.8383%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="11.5883%" y="421" width="0.1621%" height="15" fill="rgb(216,165,6)" fg:x="143" fg:w="2"/><text x="11.8383%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="11.6694%" y="405" width="0.0810%" height="15" fill="rgb(246,91,35)" fg:x="144" fg:w="1"/><text x="11.9194%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.6694%" y="389" width="0.0810%" height="15" fill="rgb(228,96,24)" fg:x="144" fg:w="1"/><text x="11.9194%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="11.7504%" y="437" width="0.0810%" height="15" fill="rgb(254,217,53)" fg:x="145" fg:w="1"/><text x="12.0004%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.7504%" y="421" width="0.0810%" height="15" fill="rgb(209,60,0)" fg:x="145" fg:w="1"/><text x="12.0004%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.7504%" y="405" width="0.0810%" height="15" fill="rgb(250,93,26)" fg:x="145" fg:w="1"/><text x="12.0004%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.41%)</title><rect x="11.5073%" y="469" width="0.4052%" height="15" fill="rgb(211,9,40)" fg:x="142" fg:w="5"/><text x="11.7573%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="11.7504%" y="453" width="0.1621%" height="15" fill="rgb(242,57,20)" fg:x="145" fg:w="2"/><text x="12.0004%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.8314%" y="437" width="0.0810%" height="15" fill="rgb(248,85,48)" fg:x="146" fg:w="1"/><text x="12.0814%" y="447.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (75 samples, 6.08%)</title><rect x="5.9157%" y="581" width="6.0778%" height="15" fill="rgb(212,117,2)" fg:x="73" fg:w="75"/><text x="6.1657%" y="591.50">engine::..</text></g><g><title>engine::session::Session::check_for_changes (74 samples, 6.00%)</title><rect x="5.9968%" y="565" width="5.9968%" height="15" fill="rgb(243,19,3)" fg:x="74" fg:w="74"/><text x="6.2468%" y="575.50">engine::..</text></g><g><title>kernel::compare::any_entity_changes (25 samples, 2.03%)</title><rect x="9.9676%" y="549" width="2.0259%" height="15" fill="rgb(232,217,24)" fg:x="123" fg:w="25"/><text x="10.2176%" y="559.50">k..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (25 samples, 2.03%)</title><rect x="9.9676%" y="533" width="2.0259%" height="15" fill="rgb(224,175,40)" fg:x="123" fg:w="25"/><text x="10.2176%" y="543.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (25 samples, 2.03%)</title><rect x="9.9676%" y="517" width="2.0259%" height="15" fill="rgb(212,162,32)" fg:x="123" fg:w="25"/><text x="10.2176%" y="527.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.65%)</title><rect x="11.3452%" y="501" width="0.6483%" height="15" fill="rgb(215,9,4)" fg:x="140" fg:w="8"/><text x="11.5952%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (6 samples, 0.49%)</title><rect x="11.5073%" y="485" width="0.4862%" height="15" fill="rgb(242,42,7)" fg:x="142" fg:w="6"/><text x="11.7573%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="11.9125%" y="469" width="0.0810%" height="15" fill="rgb(242,184,45)" fg:x="147" fg:w="1"/><text x="12.1625%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.9125%" y="453" width="0.0810%" height="15" fill="rgb(228,111,51)" fg:x="147" fg:w="1"/><text x="12.1625%" y="463.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="11.9935%" y="581" width="0.0810%" height="15" fill="rgb(236,147,17)" fg:x="148" fg:w="1"/><text x="12.2435%" y="591.50"></text></g><g><title>engine::session::Session::flush (80 samples, 6.48%)</title><rect x="5.6726%" y="613" width="6.4830%" height="15" fill="rgb(210,75,22)" fg:x="70" fg:w="80"/><text x="5.9226%" y="623.50">engine::..</text></g><g><title>engine::session::Session::save_entity_changes (80 samples, 6.48%)</title><rect x="5.6726%" y="597" width="6.4830%" height="15" fill="rgb(217,159,45)" fg:x="70" fg:w="80"/><text x="5.9226%" y="607.50">engine::..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="12.0746%" y="581" width="0.0810%" height="15" fill="rgb(245,165,53)" fg:x="149" fg:w="1"/><text x="12.3246%" y="591.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="12.0746%" y="565" width="0.0810%" height="15" fill="rgb(251,190,50)" fg:x="149" fg:w="1"/><text x="12.3246%" y="575.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="12.0746%" y="549" width="0.0810%" height="15" fill="rgb(208,203,29)" fg:x="149" fg:w="1"/><text x="12.3246%" y="559.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="12.0746%" y="533" width="0.0810%" height="15" fill="rgb(207,209,35)" fg:x="149" fg:w="1"/><text x="12.3246%" y="543.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="12.0746%" y="517" width="0.0810%" height="15" fill="rgb(230,144,49)" fg:x="149" fg:w="1"/><text x="12.3246%" y="527.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="12.0746%" y="501" width="0.0810%" height="15" fill="rgb(229,31,6)" fg:x="149" fg:w="1"/><text x="12.3246%" y="511.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.08%)</title><rect x="12.0746%" y="485" width="0.0810%" height="15" fill="rgb(251,129,24)" fg:x="149" fg:w="1"/><text x="12.3246%" y="495.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.08%)</title><rect x="12.0746%" y="469" width="0.0810%" height="15" fill="rgb(235,105,15)" fg:x="149" fg:w="1"/><text x="12.3246%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="12.1556%" y="597" width="0.0810%" height="15" fill="rgb(216,52,43)" fg:x="150" fg:w="1"/><text x="12.4056%" y="607.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="12.1556%" y="581" width="0.0810%" height="15" fill="rgb(238,144,41)" fg:x="150" fg:w="1"/><text x="12.4056%" y="591.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="12.1556%" y="565" width="0.0810%" height="15" fill="rgb(243,63,9)" fg:x="150" fg:w="1"/><text x="12.4056%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.1556%" y="549" width="0.0810%" height="15" fill="rgb(246,208,1)" fg:x="150" fg:w="1"/><text x="12.4056%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="12.2366%" y="581" width="0.0810%" height="15" fill="rgb(233,182,18)" fg:x="151" fg:w="1"/><text x="12.4866%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="12.2366%" y="565" width="0.0810%" height="15" fill="rgb(242,224,8)" fg:x="151" fg:w="1"/><text x="12.4866%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="12.2366%" y="549" width="0.0810%" height="15" fill="rgb(243,54,37)" fg:x="151" fg:w="1"/><text x="12.4866%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.2366%" y="533" width="0.0810%" height="15" fill="rgb(233,192,12)" fg:x="151" fg:w="1"/><text x="12.4866%" y="543.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="12.3177%" y="581" width="0.0810%" height="15" fill="rgb(251,192,53)" fg:x="152" fg:w="1"/><text x="12.5677%" y="591.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="12.3177%" y="565" width="0.0810%" height="15" fill="rgb(246,141,26)" fg:x="152" fg:w="1"/><text x="12.5677%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="12.3177%" y="549" width="0.0810%" height="15" fill="rgb(239,195,19)" fg:x="152" fg:w="1"/><text x="12.5677%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.3177%" y="533" width="0.0810%" height="15" fill="rgb(241,16,39)" fg:x="152" fg:w="1"/><text x="12.5677%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="12.3177%" y="517" width="0.0810%" height="15" fill="rgb(223,13,53)" fg:x="152" fg:w="1"/><text x="12.5677%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.3177%" y="501" width="0.0810%" height="15" fill="rgb(214,227,0)" fg:x="152" fg:w="1"/><text x="12.5677%" y="511.50"></text></g><g><title>plugins_core::build::Build::holding (4 samples, 0.32%)</title><rect x="12.1556%" y="613" width="0.3241%" height="15" fill="rgb(228,103,26)" fg:x="150" fg:w="4"/><text x="12.4056%" y="623.50"></text></g><g><title>plugins_core::tools::set_container (3 samples, 0.24%)</title><rect x="12.2366%" y="597" width="0.2431%" height="15" fill="rgb(254,177,53)" fg:x="151" fg:w="3"/><text x="12.4866%" y="607.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="12.3987%" y="581" width="0.0810%" height="15" fill="rgb(208,201,34)" fg:x="153" fg:w="1"/><text x="12.6487%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="12.4797%" y="613" width="0.0810%" height="15" fill="rgb(212,39,5)" fg:x="154" fg:w="1"/><text x="12.7297%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="12.4797%" y="597" width="0.0810%" height="15" fill="rgb(246,117,3)" fg:x="154" fg:w="1"/><text x="12.7297%" y="607.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="12.4797%" y="581" width="0.0810%" height="15" fill="rgb(244,118,39)" fg:x="154" fg:w="1"/><text x="12.7297%" y="591.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="12.4797%" y="565" width="0.0810%" height="15" fill="rgb(241,64,10)" fg:x="154" fg:w="1"/><text x="12.7297%" y="575.50"></text></g><g><title>kernel::model::Entity::set_gid (1 samples, 0.08%)</title><rect x="12.4797%" y="549" width="0.0810%" height="15" fill="rgb(229,39,44)" fg:x="154" fg:w="1"/><text x="12.7297%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.4797%" y="533" width="0.0810%" height="15" fill="rgb(230,226,3)" fg:x="154" fg:w="1"/><text x="12.7297%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.5608%" y="597" width="0.0810%" height="15" fill="rgb(222,13,42)" fg:x="155" fg:w="1"/><text x="12.8108%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.5608%" y="581" width="0.0810%" height="15" fill="rgb(247,180,54)" fg:x="155" fg:w="1"/><text x="12.8108%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.5608%" y="565" width="0.0810%" height="15" fill="rgb(205,96,16)" fg:x="155" fg:w="1"/><text x="12.8108%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.5608%" y="549" width="0.0810%" height="15" fill="rgb(205,100,21)" fg:x="155" fg:w="1"/><text x="12.8108%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.5608%" y="533" width="0.0810%" height="15" fill="rgb(248,51,4)" fg:x="155" fg:w="1"/><text x="12.8108%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.5608%" y="517" width="0.0810%" height="15" fill="rgb(217,197,30)" fg:x="155" fg:w="1"/><text x="12.8108%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="12.5608%" y="501" width="0.0810%" height="15" fill="rgb(240,179,40)" fg:x="155" fg:w="1"/><text x="12.8108%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="12.5608%" y="485" width="0.0810%" height="15" fill="rgb(212,185,35)" fg:x="155" fg:w="1"/><text x="12.8108%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="12.8039%" y="549" width="0.0810%" height="15" fill="rgb(251,222,31)" fg:x="158" fg:w="1"/><text x="13.0539%" y="559.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="12.8039%" y="533" width="0.0810%" height="15" fill="rgb(208,140,36)" fg:x="158" fg:w="1"/><text x="13.0539%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.32%)</title><rect x="12.6418%" y="597" width="0.3241%" height="15" fill="rgb(220,148,1)" fg:x="156" fg:w="4"/><text x="12.8918%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="12.6418%" y="581" width="0.3241%" height="15" fill="rgb(254,4,28)" fg:x="156" fg:w="4"/><text x="12.8918%" y="591.50"></text></g><g><title>plugins_core::build::QuickThing::make (3 samples, 0.24%)</title><rect x="12.7229%" y="565" width="0.2431%" height="15" fill="rgb(222,185,44)" fg:x="157" fg:w="3"/><text x="12.9729%" y="575.50"></text></g><g><title>plugins_core::build::Build::leads_to (1 samples, 0.08%)</title><rect x="12.8849%" y="549" width="0.0810%" height="15" fill="rgb(215,74,39)" fg:x="159" fg:w="1"/><text x="13.1349%" y="559.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="12.8849%" y="533" width="0.0810%" height="15" fill="rgb(247,86,4)" fg:x="159" fg:w="1"/><text x="13.1349%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="12.8849%" y="517" width="0.0810%" height="15" fill="rgb(231,105,32)" fg:x="159" fg:w="1"/><text x="13.1349%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="12.8849%" y="501" width="0.0810%" height="15" fill="rgb(222,65,35)" fg:x="159" fg:w="1"/><text x="13.1349%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="12.8849%" y="485" width="0.0810%" height="15" fill="rgb(218,145,35)" fg:x="159" fg:w="1"/><text x="13.1349%" y="495.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="12.9660%" y="565" width="0.0810%" height="15" fill="rgb(208,7,15)" fg:x="160" fg:w="1"/><text x="13.2160%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="12.9660%" y="549" width="0.0810%" height="15" fill="rgb(209,83,13)" fg:x="160" fg:w="1"/><text x="13.2160%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="12.9660%" y="533" width="0.0810%" height="15" fill="rgb(218,3,10)" fg:x="160" fg:w="1"/><text x="13.2160%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.9660%" y="517" width="0.0810%" height="15" fill="rgb(211,219,4)" fg:x="160" fg:w="1"/><text x="13.2160%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.9660%" y="501" width="0.0810%" height="15" fill="rgb(228,194,12)" fg:x="160" fg:w="1"/><text x="13.2160%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.9660%" y="485" width="0.0810%" height="15" fill="rgb(210,175,7)" fg:x="160" fg:w="1"/><text x="13.2160%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.9660%" y="469" width="0.0810%" height="15" fill="rgb(243,132,6)" fg:x="160" fg:w="1"/><text x="13.2160%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.9660%" y="453" width="0.0810%" height="15" fill="rgb(207,72,18)" fg:x="160" fg:w="1"/><text x="13.2160%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.9660%" y="437" width="0.0810%" height="15" fill="rgb(236,1,18)" fg:x="160" fg:w="1"/><text x="13.2160%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.9660%" y="421" width="0.0810%" height="15" fill="rgb(227,0,18)" fg:x="160" fg:w="1"/><text x="13.2160%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.9660%" y="405" width="0.0810%" height="15" fill="rgb(247,37,5)" fg:x="160" fg:w="1"/><text x="13.2160%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.9660%" y="389" width="0.0810%" height="15" fill="rgb(237,179,24)" fg:x="160" fg:w="1"/><text x="13.2160%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.9660%" y="373" width="0.0810%" height="15" fill="rgb(226,53,20)" fg:x="160" fg:w="1"/><text x="13.2160%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.9660%" y="357" width="0.0810%" height="15" fill="rgb(247,75,7)" fg:x="160" fg:w="1"/><text x="13.2160%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.9660%" y="341" width="0.0810%" height="15" fill="rgb(233,96,12)" fg:x="160" fg:w="1"/><text x="13.2160%" y="351.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="13.0470%" y="565" width="0.0810%" height="15" fill="rgb(224,125,0)" fg:x="161" fg:w="1"/><text x="13.2970%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="13.0470%" y="549" width="0.0810%" height="15" fill="rgb(224,92,25)" fg:x="161" fg:w="1"/><text x="13.2970%" y="559.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="13.0470%" y="533" width="0.0810%" height="15" fill="rgb(224,42,24)" fg:x="161" fg:w="1"/><text x="13.2970%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="13.0470%" y="517" width="0.0810%" height="15" fill="rgb(234,132,49)" fg:x="161" fg:w="1"/><text x="13.2970%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="13.0470%" y="501" width="0.0810%" height="15" fill="rgb(248,100,35)" fg:x="161" fg:w="1"/><text x="13.2970%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="13.2091%" y="533" width="0.1621%" height="15" fill="rgb(239,94,40)" fg:x="163" fg:w="2"/><text x="13.4591%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="13.2091%" y="517" width="0.1621%" height="15" fill="rgb(235,139,28)" fg:x="163" fg:w="2"/><text x="13.4591%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="13.2091%" y="501" width="0.1621%" height="15" fill="rgb(217,144,7)" fg:x="163" fg:w="2"/><text x="13.4591%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="13.2091%" y="485" width="0.1621%" height="15" fill="rgb(227,55,4)" fg:x="163" fg:w="2"/><text x="13.4591%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="13.2091%" y="469" width="0.1621%" height="15" fill="rgb(252,82,54)" fg:x="163" fg:w="2"/><text x="13.4591%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="13.2091%" y="453" width="0.1621%" height="15" fill="rgb(245,172,4)" fg:x="163" fg:w="2"/><text x="13.4591%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="13.2091%" y="437" width="0.1621%" height="15" fill="rgb(207,26,27)" fg:x="163" fg:w="2"/><text x="13.4591%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="13.2901%" y="421" width="0.0810%" height="15" fill="rgb(252,98,18)" fg:x="164" fg:w="1"/><text x="13.5401%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="13.2901%" y="405" width="0.0810%" height="15" fill="rgb(244,8,26)" fg:x="164" fg:w="1"/><text x="13.5401%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.49%)</title><rect x="13.4522%" y="501" width="0.4862%" height="15" fill="rgb(237,173,45)" fg:x="166" fg:w="6"/><text x="13.7022%" y="511.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.49%)</title><rect x="13.4522%" y="485" width="0.4862%" height="15" fill="rgb(208,213,49)" fg:x="166" fg:w="6"/><text x="13.7022%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="13.6143%" y="469" width="0.3241%" height="15" fill="rgb(212,122,37)" fg:x="168" fg:w="4"/><text x="13.8643%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="13.6143%" y="453" width="0.3241%" height="15" fill="rgb(213,80,17)" fg:x="168" fg:w="4"/><text x="13.8643%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="13.6953%" y="437" width="0.2431%" height="15" fill="rgb(206,210,43)" fg:x="169" fg:w="3"/><text x="13.9453%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="13.7763%" y="421" width="0.1621%" height="15" fill="rgb(229,214,3)" fg:x="170" fg:w="2"/><text x="14.0263%" y="431.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="13.7763%" y="405" width="0.1621%" height="15" fill="rgb(235,213,29)" fg:x="170" fg:w="2"/><text x="14.0263%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.57%)</title><rect x="13.4522%" y="517" width="0.5673%" height="15" fill="rgb(248,135,26)" fg:x="166" fg:w="7"/><text x="13.7022%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.9384%" y="501" width="0.0810%" height="15" fill="rgb(242,188,12)" fg:x="172" fg:w="1"/><text x="14.1884%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="14.1005%" y="501" width="0.1621%" height="15" fill="rgb(245,38,12)" fg:x="174" fg:w="2"/><text x="14.3505%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.1815%" y="485" width="0.0810%" height="15" fill="rgb(218,42,13)" fg:x="175" fg:w="1"/><text x="14.4315%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.1815%" y="469" width="0.0810%" height="15" fill="rgb(238,132,49)" fg:x="175" fg:w="1"/><text x="14.4315%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.1815%" y="453" width="0.0810%" height="15" fill="rgb(209,196,19)" fg:x="175" fg:w="1"/><text x="14.4315%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="14.1815%" y="437" width="0.0810%" height="15" fill="rgb(244,131,22)" fg:x="175" fg:w="1"/><text x="14.4315%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="14.1815%" y="421" width="0.0810%" height="15" fill="rgb(223,18,34)" fg:x="175" fg:w="1"/><text x="14.4315%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="14.1815%" y="405" width="0.0810%" height="15" fill="rgb(252,124,54)" fg:x="175" fg:w="1"/><text x="14.4315%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="14.2626%" y="453" width="0.0810%" height="15" fill="rgb(229,106,42)" fg:x="176" fg:w="1"/><text x="14.5126%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.2626%" y="437" width="0.0810%" height="15" fill="rgb(221,129,1)" fg:x="176" fg:w="1"/><text x="14.5126%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.2626%" y="421" width="0.0810%" height="15" fill="rgb(229,74,15)" fg:x="176" fg:w="1"/><text x="14.5126%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.2626%" y="405" width="0.0810%" height="15" fill="rgb(210,206,50)" fg:x="176" fg:w="1"/><text x="14.5126%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="14.2626%" y="485" width="0.1621%" height="15" fill="rgb(251,114,31)" fg:x="176" fg:w="2"/><text x="14.5126%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="14.2626%" y="469" width="0.1621%" height="15" fill="rgb(215,225,28)" fg:x="176" fg:w="2"/><text x="14.5126%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="14.3436%" y="453" width="0.0810%" height="15" fill="rgb(237,109,14)" fg:x="177" fg:w="1"/><text x="14.5936%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="14.3436%" y="437" width="0.0810%" height="15" fill="rgb(230,13,37)" fg:x="177" fg:w="1"/><text x="14.5936%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.3436%" y="421" width="0.0810%" height="15" fill="rgb(231,40,28)" fg:x="177" fg:w="1"/><text x="14.5936%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.3436%" y="405" width="0.0810%" height="15" fill="rgb(231,202,18)" fg:x="177" fg:w="1"/><text x="14.5936%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.3436%" y="389" width="0.0810%" height="15" fill="rgb(225,33,18)" fg:x="177" fg:w="1"/><text x="14.5936%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="14.6677%" y="453" width="0.0810%" height="15" fill="rgb(223,64,47)" fg:x="181" fg:w="1"/><text x="14.9177%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.6677%" y="437" width="0.0810%" height="15" fill="rgb(234,114,13)" fg:x="181" fg:w="1"/><text x="14.9177%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.6677%" y="421" width="0.0810%" height="15" fill="rgb(248,56,40)" fg:x="181" fg:w="1"/><text x="14.9177%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.6677%" y="405" width="0.0810%" height="15" fill="rgb(221,194,21)" fg:x="181" fg:w="1"/><text x="14.9177%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="14.7488%" y="453" width="0.1621%" height="15" fill="rgb(242,108,46)" fg:x="182" fg:w="2"/><text x="14.9988%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="14.6677%" y="469" width="0.4862%" height="15" fill="rgb(220,106,10)" fg:x="181" fg:w="6"/><text x="14.9177%" y="479.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="14.9109%" y="453" width="0.2431%" height="15" fill="rgb(211,88,4)" fg:x="184" fg:w="3"/><text x="15.1609%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.0729%" y="437" width="0.0810%" height="15" fill="rgb(214,95,34)" fg:x="186" fg:w="1"/><text x="15.3229%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.13%)</title><rect x="14.4246%" y="485" width="1.1345%" height="15" fill="rgb(250,160,33)" fg:x="178" fg:w="14"/><text x="14.6746%" y="495.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.41%)</title><rect x="15.1540%" y="469" width="0.4052%" height="15" fill="rgb(225,29,10)" fg:x="187" fg:w="5"/><text x="15.4040%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="15.3160%" y="453" width="0.2431%" height="15" fill="rgb(224,28,30)" fg:x="189" fg:w="3"/><text x="15.5660%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="15.3971%" y="437" width="0.1621%" height="15" fill="rgb(231,77,4)" fg:x="190" fg:w="2"/><text x="15.6471%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.54%)</title><rect x="14.2626%" y="501" width="1.5397%" height="15" fill="rgb(209,63,21)" fg:x="176" fg:w="19"/><text x="14.5126%" y="511.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="15.5592%" y="485" width="0.2431%" height="15" fill="rgb(226,22,11)" fg:x="192" fg:w="3"/><text x="15.8092%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="15.6402%" y="469" width="0.1621%" height="15" fill="rgb(216,82,30)" fg:x="193" fg:w="2"/><text x="15.8902%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.7212%" y="453" width="0.0810%" height="15" fill="rgb(246,227,38)" fg:x="194" fg:w="1"/><text x="15.9712%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (32 samples, 2.59%)</title><rect x="13.3712%" y="533" width="2.5932%" height="15" fill="rgb(251,203,53)" fg:x="165" fg:w="32"/><text x="13.6212%" y="543.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24 samples, 1.94%)</title><rect x="14.0194%" y="517" width="1.9449%" height="15" fill="rgb(254,101,1)" fg:x="173" fg:w="24"/><text x="14.2694%" y="527.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="15.8023%" y="501" width="0.1621%" height="15" fill="rgb(241,180,5)" fg:x="195" fg:w="2"/><text x="16.0523%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="15.8023%" y="485" width="0.1621%" height="15" fill="rgb(218,168,4)" fg:x="195" fg:w="2"/><text x="16.0523%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="15.8023%" y="469" width="0.1621%" height="15" fill="rgb(224,223,32)" fg:x="195" fg:w="2"/><text x="16.0523%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="15.8833%" y="453" width="0.0810%" height="15" fill="rgb(236,106,22)" fg:x="196" fg:w="1"/><text x="16.1333%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="15.8833%" y="437" width="0.0810%" height="15" fill="rgb(206,121,5)" fg:x="196" fg:w="1"/><text x="16.1333%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="15.8833%" y="421" width="0.0810%" height="15" fill="rgb(233,87,28)" fg:x="196" fg:w="1"/><text x="16.1333%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.0454%" y="501" width="0.0810%" height="15" fill="rgb(236,137,17)" fg:x="198" fg:w="1"/><text x="16.2954%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.0454%" y="485" width="0.0810%" height="15" fill="rgb(209,183,38)" fg:x="198" fg:w="1"/><text x="16.2954%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="16.2075%" y="485" width="0.1621%" height="15" fill="rgb(206,162,44)" fg:x="200" fg:w="2"/><text x="16.4575%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.3695%" y="469" width="0.0810%" height="15" fill="rgb(237,70,39)" fg:x="202" fg:w="1"/><text x="16.6195%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="16.4506%" y="469" width="0.1621%" height="15" fill="rgb(212,176,5)" fg:x="203" fg:w="2"/><text x="16.7006%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.5316%" y="453" width="0.0810%" height="15" fill="rgb(232,95,16)" fg:x="204" fg:w="1"/><text x="16.7816%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="16.6126%" y="453" width="0.1621%" height="15" fill="rgb(219,115,35)" fg:x="205" fg:w="2"/><text x="16.8626%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="16.7747%" y="453" width="0.1621%" height="15" fill="rgb(251,67,27)" fg:x="207" fg:w="2"/><text x="17.0247%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="17.0178%" y="437" width="0.1621%" height="15" fill="rgb(222,95,40)" fg:x="210" fg:w="2"/><text x="17.2678%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.30%)</title><rect x="15.9643%" y="533" width="1.2966%" height="15" fill="rgb(250,35,16)" fg:x="197" fg:w="16"/><text x="16.2143%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.22%)</title><rect x="16.0454%" y="517" width="1.2156%" height="15" fill="rgb(224,86,44)" fg:x="198" fg:w="15"/><text x="16.2954%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.13%)</title><rect x="16.1264%" y="501" width="1.1345%" height="15" fill="rgb(237,53,53)" fg:x="199" fg:w="14"/><text x="16.3764%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.89%)</title><rect x="16.3695%" y="485" width="0.8914%" height="15" fill="rgb(208,171,33)" fg:x="202" fg:w="11"/><text x="16.6195%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.65%)</title><rect x="16.6126%" y="469" width="0.6483%" height="15" fill="rgb(222,64,27)" fg:x="205" fg:w="8"/><text x="16.8626%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="16.9368%" y="453" width="0.3241%" height="15" fill="rgb(221,121,35)" fg:x="209" fg:w="4"/><text x="17.1868%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.1799%" y="437" width="0.0810%" height="15" fill="rgb(228,137,42)" fg:x="212" fg:w="1"/><text x="17.4299%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.6661%" y="453" width="0.0810%" height="15" fill="rgb(227,54,21)" fg:x="218" fg:w="1"/><text x="17.9161%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.41%)</title><rect x="17.4230%" y="485" width="0.4052%" height="15" fill="rgb(240,168,33)" fg:x="215" fg:w="5"/><text x="17.6730%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="17.5851%" y="469" width="0.2431%" height="15" fill="rgb(243,159,6)" fg:x="217" fg:w="3"/><text x="17.8351%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="17.7472%" y="453" width="0.0810%" height="15" fill="rgb(205,211,41)" fg:x="219" fg:w="1"/><text x="17.9972%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="17.8282%" y="485" width="0.1621%" height="15" fill="rgb(253,30,1)" fg:x="220" fg:w="2"/><text x="18.0782%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="17.8282%" y="469" width="0.1621%" height="15" fill="rgb(226,80,18)" fg:x="220" fg:w="2"/><text x="18.0782%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.9092%" y="453" width="0.0810%" height="15" fill="rgb(253,156,46)" fg:x="221" fg:w="1"/><text x="18.1592%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.9092%" y="437" width="0.0810%" height="15" fill="rgb(248,87,27)" fg:x="221" fg:w="1"/><text x="18.1592%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="17.9903%" y="485" width="0.0810%" height="15" fill="rgb(227,122,2)" fg:x="222" fg:w="1"/><text x="18.2403%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.9903%" y="469" width="0.0810%" height="15" fill="rgb(229,94,39)" fg:x="222" fg:w="1"/><text x="18.2403%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.9903%" y="453" width="0.0810%" height="15" fill="rgb(225,173,31)" fg:x="222" fg:w="1"/><text x="18.2403%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.0713%" y="453" width="0.1621%" height="15" fill="rgb(239,176,30)" fg:x="223" fg:w="2"/><text x="18.3213%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.0713%" y="437" width="0.1621%" height="15" fill="rgb(212,104,21)" fg:x="223" fg:w="2"/><text x="18.3213%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="18.0713%" y="421" width="0.1621%" height="15" fill="rgb(240,209,40)" fg:x="223" fg:w="2"/><text x="18.3213%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="18.3144%" y="421" width="0.0810%" height="15" fill="rgb(234,195,5)" fg:x="226" fg:w="1"/><text x="18.5644%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.3144%" y="405" width="0.0810%" height="15" fill="rgb(238,213,1)" fg:x="226" fg:w="1"/><text x="18.5644%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (6 samples, 0.49%)</title><rect x="18.0713%" y="485" width="0.4862%" height="15" fill="rgb(235,182,54)" fg:x="223" fg:w="6"/><text x="18.3213%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.49%)</title><rect x="18.0713%" y="469" width="0.4862%" height="15" fill="rgb(229,50,46)" fg:x="223" fg:w="6"/><text x="18.3213%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="18.2334%" y="453" width="0.3241%" height="15" fill="rgb(219,145,13)" fg:x="225" fg:w="4"/><text x="18.4834%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (3 samples, 0.24%)</title><rect x="18.3144%" y="437" width="0.2431%" height="15" fill="rgb(220,226,10)" fg:x="226" fg:w="3"/><text x="18.5644%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="18.3955%" y="421" width="0.1621%" height="15" fill="rgb(248,47,30)" fg:x="227" fg:w="2"/><text x="18.6455%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="18.3955%" y="405" width="0.1621%" height="15" fill="rgb(231,209,44)" fg:x="227" fg:w="2"/><text x="18.6455%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="18.3955%" y="389" width="0.1621%" height="15" fill="rgb(209,80,30)" fg:x="227" fg:w="2"/><text x="18.6455%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.4765%" y="373" width="0.0810%" height="15" fill="rgb(232,9,14)" fg:x="228" fg:w="1"/><text x="18.7265%" y="383.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="18.5575%" y="485" width="0.0810%" height="15" fill="rgb(243,91,43)" fg:x="229" fg:w="1"/><text x="18.8075%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.5575%" y="469" width="0.0810%" height="15" fill="rgb(231,90,52)" fg:x="229" fg:w="1"/><text x="18.8075%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.6386%" y="437" width="0.1621%" height="15" fill="rgb(253,192,44)" fg:x="230" fg:w="2"/><text x="18.8886%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.6386%" y="421" width="0.1621%" height="15" fill="rgb(241,66,31)" fg:x="230" fg:w="2"/><text x="18.8886%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="18.6386%" y="405" width="0.1621%" height="15" fill="rgb(235,81,37)" fg:x="230" fg:w="2"/><text x="18.8886%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.8006%" y="405" width="0.1621%" height="15" fill="rgb(223,221,9)" fg:x="232" fg:w="2"/><text x="19.0506%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="18.8006%" y="421" width="0.2431%" height="15" fill="rgb(242,180,7)" fg:x="232" fg:w="3"/><text x="19.0506%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="18.9627%" y="405" width="0.0810%" height="15" fill="rgb(243,78,19)" fg:x="234" fg:w="1"/><text x="19.2127%" y="415.50"></text></g><g><title>kernel::compare::any_entity_changes (24 samples, 1.94%)</title><rect x="17.2609%" y="533" width="1.9449%" height="15" fill="rgb(233,23,17)" fg:x="213" fg:w="24"/><text x="17.5109%" y="543.50">k..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (24 samples, 1.94%)</title><rect x="17.2609%" y="517" width="1.9449%" height="15" fill="rgb(252,122,45)" fg:x="213" fg:w="24"/><text x="17.5109%" y="527.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (24 samples, 1.94%)</title><rect x="17.2609%" y="501" width="1.9449%" height="15" fill="rgb(247,108,20)" fg:x="213" fg:w="24"/><text x="17.5109%" y="511.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.57%)</title><rect x="18.6386%" y="485" width="0.5673%" height="15" fill="rgb(235,84,21)" fg:x="230" fg:w="7"/><text x="18.8886%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (7 samples, 0.57%)</title><rect x="18.6386%" y="469" width="0.5673%" height="15" fill="rgb(247,129,10)" fg:x="230" fg:w="7"/><text x="18.8886%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.57%)</title><rect x="18.6386%" y="453" width="0.5673%" height="15" fill="rgb(208,173,14)" fg:x="230" fg:w="7"/><text x="18.8886%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.41%)</title><rect x="18.8006%" y="437" width="0.4052%" height="15" fill="rgb(236,31,38)" fg:x="232" fg:w="5"/><text x="19.0506%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="19.0438%" y="421" width="0.1621%" height="15" fill="rgb(232,65,17)" fg:x="235" fg:w="2"/><text x="19.2938%" y="431.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (76 samples, 6.16%)</title><rect x="13.1280%" y="565" width="6.1588%" height="15" fill="rgb(224,45,49)" fg:x="162" fg:w="76"/><text x="13.3780%" y="575.50">engine::..</text></g><g><title>engine::session::Session::check_for_changes (76 samples, 6.16%)</title><rect x="13.1280%" y="549" width="6.1588%" height="15" fill="rgb(225,2,53)" fg:x="162" fg:w="76"/><text x="13.3780%" y="559.50">engine::..</text></g><g><title>kernel::model::Entity::set_gid (1 samples, 0.08%)</title><rect x="19.2058%" y="533" width="0.0810%" height="15" fill="rgb(248,210,53)" fg:x="237" fg:w="1"/><text x="19.4558%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.2058%" y="517" width="0.0810%" height="15" fill="rgb(211,1,30)" fg:x="237" fg:w="1"/><text x="19.4558%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.2058%" y="501" width="0.0810%" height="15" fill="rgb(224,96,15)" fg:x="237" fg:w="1"/><text x="19.4558%" y="511.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="19.2869%" y="565" width="0.0810%" height="15" fill="rgb(252,45,11)" fg:x="238" fg:w="1"/><text x="19.5369%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="19.2869%" y="549" width="0.0810%" height="15" fill="rgb(220,125,38)" fg:x="238" fg:w="1"/><text x="19.5369%" y="559.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="19.2869%" y="533" width="0.0810%" height="15" fill="rgb(243,161,33)" fg:x="238" fg:w="1"/><text x="19.5369%" y="543.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="19.2869%" y="517" width="0.0810%" height="15" fill="rgb(248,197,34)" fg:x="238" fg:w="1"/><text x="19.5369%" y="527.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="19.3679%" y="485" width="0.0810%" height="15" fill="rgb(228,165,23)" fg:x="239" fg:w="1"/><text x="19.6179%" y="495.50"></text></g><g><title>engine::session::Session::flush (82 samples, 6.65%)</title><rect x="12.9660%" y="597" width="6.6451%" height="15" fill="rgb(236,94,38)" fg:x="160" fg:w="82"/><text x="13.2160%" y="607.50">engine::s..</text></g><g><title>engine::session::Session::save_entity_changes (82 samples, 6.65%)</title><rect x="12.9660%" y="581" width="6.6451%" height="15" fill="rgb(220,13,23)" fg:x="160" fg:w="82"/><text x="13.2160%" y="591.50">engine::s..</text></g><g><title>std::env::_var (3 samples, 0.24%)</title><rect x="19.3679%" y="565" width="0.2431%" height="15" fill="rgb(234,26,39)" fg:x="239" fg:w="3"/><text x="19.6179%" y="575.50"></text></g><g><title>std::env::var_os (3 samples, 0.24%)</title><rect x="19.3679%" y="549" width="0.2431%" height="15" fill="rgb(205,117,44)" fg:x="239" fg:w="3"/><text x="19.6179%" y="559.50"></text></g><g><title>std::env::_var_os (3 samples, 0.24%)</title><rect x="19.3679%" y="533" width="0.2431%" height="15" fill="rgb(250,42,2)" fg:x="239" fg:w="3"/><text x="19.6179%" y="543.50"></text></g><g><title>std::sys::unix::os::getenv (3 samples, 0.24%)</title><rect x="19.3679%" y="517" width="0.2431%" height="15" fill="rgb(223,83,14)" fg:x="239" fg:w="3"/><text x="19.6179%" y="527.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (3 samples, 0.24%)</title><rect x="19.3679%" y="501" width="0.2431%" height="15" fill="rgb(241,147,50)" fg:x="239" fg:w="3"/><text x="19.6179%" y="511.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (2 samples, 0.16%)</title><rect x="19.4489%" y="485" width="0.1621%" height="15" fill="rgb(218,90,6)" fg:x="240" fg:w="2"/><text x="19.6989%" y="495.50"></text></g><g><title>getenv (2 samples, 0.16%)</title><rect x="19.4489%" y="469" width="0.1621%" height="15" fill="rgb(210,191,5)" fg:x="240" fg:w="2"/><text x="19.6989%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="19.6110%" y="597" width="0.0810%" height="15" fill="rgb(225,139,19)" fg:x="242" fg:w="1"/><text x="19.8610%" y="607.50"></text></g><g><title>kernel::model::EntityPtr::set_key (1 samples, 0.08%)</title><rect x="19.6921%" y="597" width="0.0810%" height="15" fill="rgb(210,1,33)" fg:x="243" fg:w="1"/><text x="19.9421%" y="607.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="19.7731%" y="597" width="0.0810%" height="15" fill="rgb(213,50,3)" fg:x="244" fg:w="1"/><text x="20.0231%" y="607.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="19.7731%" y="581" width="0.0810%" height="15" fill="rgb(234,227,4)" fg:x="244" fg:w="1"/><text x="20.0231%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="19.8541%" y="565" width="0.0810%" height="15" fill="rgb(246,63,5)" fg:x="245" fg:w="1"/><text x="20.1041%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="19.8541%" y="549" width="0.0810%" height="15" fill="rgb(245,136,27)" fg:x="245" fg:w="1"/><text x="20.1041%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="19.8541%" y="533" width="0.0810%" height="15" fill="rgb(247,199,27)" fg:x="245" fg:w="1"/><text x="20.1041%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="19.8541%" y="517" width="0.0810%" height="15" fill="rgb(252,158,49)" fg:x="245" fg:w="1"/><text x="20.1041%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="19.8541%" y="501" width="0.0810%" height="15" fill="rgb(254,73,1)" fg:x="245" fg:w="1"/><text x="20.1041%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="19.8541%" y="485" width="0.0810%" height="15" fill="rgb(248,93,19)" fg:x="245" fg:w="1"/><text x="20.1041%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="19.8541%" y="469" width="0.0810%" height="15" fill="rgb(206,67,5)" fg:x="245" fg:w="1"/><text x="20.1041%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="19.8541%" y="453" width="0.0810%" height="15" fill="rgb(209,210,4)" fg:x="245" fg:w="1"/><text x="20.1041%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="19.8541%" y="437" width="0.0810%" height="15" fill="rgb(214,185,36)" fg:x="245" fg:w="1"/><text x="20.1041%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.8541%" y="421" width="0.0810%" height="15" fill="rgb(233,191,26)" fg:x="245" fg:w="1"/><text x="20.1041%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.8541%" y="405" width="0.0810%" height="15" fill="rgb(248,94,17)" fg:x="245" fg:w="1"/><text x="20.1041%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="19.8541%" y="389" width="0.0810%" height="15" fill="rgb(250,64,4)" fg:x="245" fg:w="1"/><text x="20.1041%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="19.8541%" y="373" width="0.0810%" height="15" fill="rgb(218,41,53)" fg:x="245" fg:w="1"/><text x="20.1041%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="19.8541%" y="357" width="0.0810%" height="15" fill="rgb(251,176,28)" fg:x="245" fg:w="1"/><text x="20.1041%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="19.8541%" y="341" width="0.0810%" height="15" fill="rgb(247,22,9)" fg:x="245" fg:w="1"/><text x="20.1041%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="19.8541%" y="325" width="0.0810%" height="15" fill="rgb(218,201,14)" fg:x="245" fg:w="1"/><text x="20.1041%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.97%)</title><rect x="19.8541%" y="581" width="0.9724%" height="15" fill="rgb(218,94,10)" fg:x="245" fg:w="12"/><text x="20.1041%" y="591.50"></text></g><g><title>engine::internal::Entities::add_entity (11 samples, 0.89%)</title><rect x="19.9352%" y="565" width="0.8914%" height="15" fill="rgb(222,183,52)" fg:x="246" fg:w="11"/><text x="20.1852%" y="575.50"></text></g><g><title>engine::internal::EntityMap::add_entity (11 samples, 0.89%)</title><rect x="19.9352%" y="549" width="0.8914%" height="15" fill="rgb(242,140,25)" fg:x="246" fg:w="11"/><text x="20.1852%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.89%)</title><rect x="19.9352%" y="533" width="0.8914%" height="15" fill="rgb(235,197,38)" fg:x="246" fg:w="11"/><text x="20.1852%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (11 samples, 0.89%)</title><rect x="19.9352%" y="517" width="0.8914%" height="15" fill="rgb(237,136,15)" fg:x="246" fg:w="11"/><text x="20.1852%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.89%)</title><rect x="19.9352%" y="501" width="0.8914%" height="15" fill="rgb(223,44,49)" fg:x="246" fg:w="11"/><text x="20.1852%" y="511.50"></text></g><g><title>__libc_malloc (10 samples, 0.81%)</title><rect x="20.0162%" y="485" width="0.8104%" height="15" fill="rgb(227,71,15)" fg:x="247" fg:w="10"/><text x="20.2662%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="20.8266%" y="581" width="0.0810%" height="15" fill="rgb(225,153,20)" fg:x="257" fg:w="1"/><text x="21.0766%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="20.8266%" y="565" width="0.0810%" height="15" fill="rgb(210,190,26)" fg:x="257" fg:w="1"/><text x="21.0766%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.9076%" y="549" width="0.0810%" height="15" fill="rgb(223,147,5)" fg:x="258" fg:w="1"/><text x="21.1576%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.9076%" y="533" width="0.0810%" height="15" fill="rgb(207,14,23)" fg:x="258" fg:w="1"/><text x="21.1576%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.9076%" y="517" width="0.0810%" height="15" fill="rgb(211,195,53)" fg:x="258" fg:w="1"/><text x="21.1576%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.9076%" y="501" width="0.0810%" height="15" fill="rgb(237,75,46)" fg:x="258" fg:w="1"/><text x="21.1576%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.9076%" y="485" width="0.0810%" height="15" fill="rgb(254,55,14)" fg:x="258" fg:w="1"/><text x="21.1576%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.9076%" y="469" width="0.0810%" height="15" fill="rgb(230,185,30)" fg:x="258" fg:w="1"/><text x="21.1576%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.9076%" y="453" width="0.0810%" height="15" fill="rgb(220,14,11)" fg:x="258" fg:w="1"/><text x="21.1576%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.9076%" y="437" width="0.0810%" height="15" fill="rgb(215,169,44)" fg:x="258" fg:w="1"/><text x="21.1576%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.9076%" y="421" width="0.0810%" height="15" fill="rgb(253,203,20)" fg:x="258" fg:w="1"/><text x="21.1576%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.9076%" y="405" width="0.0810%" height="15" fill="rgb(229,225,17)" fg:x="258" fg:w="1"/><text x="21.1576%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.9076%" y="389" width="0.0810%" height="15" fill="rgb(236,76,26)" fg:x="258" fg:w="1"/><text x="21.1576%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.9076%" y="373" width="0.0810%" height="15" fill="rgb(234,15,30)" fg:x="258" fg:w="1"/><text x="21.1576%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.9076%" y="357" width="0.0810%" height="15" fill="rgb(211,113,48)" fg:x="258" fg:w="1"/><text x="21.1576%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="20.9076%" y="565" width="0.1621%" height="15" fill="rgb(221,31,36)" fg:x="258" fg:w="2"/><text x="21.1576%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="20.9887%" y="549" width="0.0810%" height="15" fill="rgb(215,118,52)" fg:x="259" fg:w="1"/><text x="21.2387%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.9887%" y="533" width="0.0810%" height="15" fill="rgb(241,151,27)" fg:x="259" fg:w="1"/><text x="21.2387%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="20.9887%" y="517" width="0.0810%" height="15" fill="rgb(253,51,3)" fg:x="259" fg:w="1"/><text x="21.2387%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="21.0697%" y="501" width="0.1621%" height="15" fill="rgb(216,201,24)" fg:x="260" fg:w="2"/><text x="21.3197%" y="511.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.24%)</title><rect x="21.0697%" y="533" width="0.2431%" height="15" fill="rgb(231,107,4)" fg:x="260" fg:w="3"/><text x="21.3197%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="21.0697%" y="517" width="0.2431%" height="15" fill="rgb(243,97,54)" fg:x="260" fg:w="3"/><text x="21.3197%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="21.2318%" y="501" width="0.0810%" height="15" fill="rgb(221,32,51)" fg:x="262" fg:w="1"/><text x="21.4818%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="21.2318%" y="485" width="0.0810%" height="15" fill="rgb(218,171,35)" fg:x="262" fg:w="1"/><text x="21.4818%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.2318%" y="469" width="0.0810%" height="15" fill="rgb(214,20,53)" fg:x="262" fg:w="1"/><text x="21.4818%" y="479.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (5 samples, 0.41%)</title><rect x="21.0697%" y="565" width="0.4052%" height="15" fill="rgb(239,9,52)" fg:x="260" fg:w="5"/><text x="21.3197%" y="575.50"></text></g><g><title>kernel::model::Entity::replace_scope (5 samples, 0.41%)</title><rect x="21.0697%" y="549" width="0.4052%" height="15" fill="rgb(215,114,45)" fg:x="260" fg:w="5"/><text x="21.3197%" y="559.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="21.3128%" y="533" width="0.1621%" height="15" fill="rgb(208,118,9)" fg:x="263" fg:w="2"/><text x="21.5628%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="21.3128%" y="517" width="0.1621%" height="15" fill="rgb(235,7,39)" fg:x="263" fg:w="2"/><text x="21.5628%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="21.3128%" y="501" width="0.1621%" height="15" fill="rgb(243,225,15)" fg:x="263" fg:w="2"/><text x="21.5628%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="21.3128%" y="485" width="0.1621%" height="15" fill="rgb(225,216,18)" fg:x="263" fg:w="2"/><text x="21.5628%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="21.3128%" y="469" width="0.1621%" height="15" fill="rgb(233,36,38)" fg:x="263" fg:w="2"/><text x="21.5628%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="21.4749%" y="517" width="0.0810%" height="15" fill="rgb(239,88,23)" fg:x="265" fg:w="1"/><text x="21.7249%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="21.4749%" y="501" width="0.0810%" height="15" fill="rgb(219,181,35)" fg:x="265" fg:w="1"/><text x="21.7249%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="21.4749%" y="485" width="0.0810%" height="15" fill="rgb(215,18,46)" fg:x="265" fg:w="1"/><text x="21.7249%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="21.4749%" y="469" width="0.0810%" height="15" fill="rgb(241,38,11)" fg:x="265" fg:w="1"/><text x="21.7249%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="21.4749%" y="453" width="0.0810%" height="15" fill="rgb(248,169,45)" fg:x="265" fg:w="1"/><text x="21.7249%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="21.4749%" y="437" width="0.0810%" height="15" fill="rgb(239,50,49)" fg:x="265" fg:w="1"/><text x="21.7249%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.4749%" y="421" width="0.0810%" height="15" fill="rgb(231,96,31)" fg:x="265" fg:w="1"/><text x="21.7249%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.4749%" y="405" width="0.0810%" height="15" fill="rgb(224,193,37)" fg:x="265" fg:w="1"/><text x="21.7249%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="21.4749%" y="389" width="0.0810%" height="15" fill="rgb(227,153,50)" fg:x="265" fg:w="1"/><text x="21.7249%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="21.4749%" y="373" width="0.0810%" height="15" fill="rgb(249,228,3)" fg:x="265" fg:w="1"/><text x="21.7249%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="21.4749%" y="357" width="0.0810%" height="15" fill="rgb(219,164,43)" fg:x="265" fg:w="1"/><text x="21.7249%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="21.4749%" y="341" width="0.0810%" height="15" fill="rgb(216,45,41)" fg:x="265" fg:w="1"/><text x="21.7249%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="21.4749%" y="325" width="0.0810%" height="15" fill="rgb(210,226,51)" fg:x="265" fg:w="1"/><text x="21.7249%" y="335.50"></text></g><g><title>plugins_core::build::Build::holding (22 samples, 1.78%)</title><rect x="19.8541%" y="597" width="1.7828%" height="15" fill="rgb(209,117,49)" fg:x="245" fg:w="22"/><text x="20.1041%" y="607.50">p..</text></g><g><title>plugins_core::tools::set_container (9 samples, 0.73%)</title><rect x="20.9076%" y="581" width="0.7293%" height="15" fill="rgb(206,196,24)" fg:x="258" fg:w="9"/><text x="21.1576%" y="591.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="21.4749%" y="565" width="0.1621%" height="15" fill="rgb(253,218,3)" fg:x="265" fg:w="2"/><text x="21.7249%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="21.4749%" y="549" width="0.1621%" height="15" fill="rgb(252,166,2)" fg:x="265" fg:w="2"/><text x="21.7249%" y="559.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="21.4749%" y="533" width="0.1621%" height="15" fill="rgb(236,218,26)" fg:x="265" fg:w="2"/><text x="21.7249%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="21.5559%" y="517" width="0.0810%" height="15" fill="rgb(254,84,19)" fg:x="266" fg:w="1"/><text x="21.8059%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="21.5559%" y="501" width="0.0810%" height="15" fill="rgb(219,137,29)" fg:x="266" fg:w="1"/><text x="21.8059%" y="511.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="21.6370%" y="549" width="0.0810%" height="15" fill="rgb(227,47,52)" fg:x="267" fg:w="1"/><text x="21.8870%" y="559.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="21.6370%" y="533" width="0.0810%" height="15" fill="rgb(229,167,24)" fg:x="267" fg:w="1"/><text x="21.8870%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="21.6370%" y="517" width="0.0810%" height="15" fill="rgb(233,164,1)" fg:x="267" fg:w="1"/><text x="21.8870%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="21.7180%" y="549" width="0.0810%" height="15" fill="rgb(218,88,48)" fg:x="268" fg:w="1"/><text x="21.9680%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="21.6370%" y="597" width="0.2431%" height="15" fill="rgb(226,214,24)" fg:x="267" fg:w="3"/><text x="21.8870%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="21.6370%" y="581" width="0.2431%" height="15" fill="rgb(233,29,12)" fg:x="267" fg:w="3"/><text x="21.8870%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="21.6370%" y="565" width="0.2431%" height="15" fill="rgb(219,120,34)" fg:x="267" fg:w="3"/><text x="21.8870%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="21.7990%" y="549" width="0.0810%" height="15" fill="rgb(226,78,44)" fg:x="269" fg:w="1"/><text x="22.0490%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="21.7990%" y="533" width="0.0810%" height="15" fill="rgb(240,15,48)" fg:x="269" fg:w="1"/><text x="22.0490%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="21.7990%" y="517" width="0.0810%" height="15" fill="rgb(253,176,7)" fg:x="269" fg:w="1"/><text x="22.0490%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="21.7990%" y="501" width="0.0810%" height="15" fill="rgb(206,166,28)" fg:x="269" fg:w="1"/><text x="22.0490%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="21.7990%" y="485" width="0.0810%" height="15" fill="rgb(241,53,51)" fg:x="269" fg:w="1"/><text x="22.0490%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="21.7990%" y="469" width="0.0810%" height="15" fill="rgb(249,112,30)" fg:x="269" fg:w="1"/><text x="22.0490%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="21.7990%" y="453" width="0.0810%" height="15" fill="rgb(217,85,30)" fg:x="269" fg:w="1"/><text x="22.0490%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="21.7990%" y="437" width="0.0810%" height="15" fill="rgb(233,49,7)" fg:x="269" fg:w="1"/><text x="22.0490%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.7990%" y="421" width="0.0810%" height="15" fill="rgb(234,109,9)" fg:x="269" fg:w="1"/><text x="22.0490%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.7990%" y="405" width="0.0810%" height="15" fill="rgb(253,95,22)" fg:x="269" fg:w="1"/><text x="22.0490%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="21.7990%" y="389" width="0.0810%" height="15" fill="rgb(233,176,25)" fg:x="269" fg:w="1"/><text x="22.0490%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="21.7990%" y="373" width="0.0810%" height="15" fill="rgb(236,33,39)" fg:x="269" fg:w="1"/><text x="22.0490%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="21.7990%" y="357" width="0.0810%" height="15" fill="rgb(223,226,42)" fg:x="269" fg:w="1"/><text x="22.0490%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="21.7990%" y="341" width="0.0810%" height="15" fill="rgb(216,99,33)" fg:x="269" fg:w="1"/><text x="22.0490%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="21.7990%" y="325" width="0.0810%" height="15" fill="rgb(235,84,23)" fg:x="269" fg:w="1"/><text x="22.0490%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="21.7990%" y="309" width="0.0810%" height="15" fill="rgb(232,2,27)" fg:x="269" fg:w="1"/><text x="22.0490%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="21.7990%" y="293" width="0.0810%" height="15" fill="rgb(241,23,22)" fg:x="269" fg:w="1"/><text x="22.0490%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="21.7990%" y="277" width="0.0810%" height="15" fill="rgb(211,73,27)" fg:x="269" fg:w="1"/><text x="22.0490%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="21.7990%" y="261" width="0.0810%" height="15" fill="rgb(235,109,49)" fg:x="269" fg:w="1"/><text x="22.0490%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="21.7990%" y="245" width="0.0810%" height="15" fill="rgb(230,99,29)" fg:x="269" fg:w="1"/><text x="22.0490%" y="255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="21.7990%" y="229" width="0.0810%" height="15" fill="rgb(245,199,7)" fg:x="269" fg:w="1"/><text x="22.0490%" y="239.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="21.7990%" y="213" width="0.0810%" height="15" fill="rgb(217,179,10)" fg:x="269" fg:w="1"/><text x="22.0490%" y="223.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="21.7990%" y="197" width="0.0810%" height="15" fill="rgb(254,99,47)" fg:x="269" fg:w="1"/><text x="22.0490%" y="207.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="21.8801%" y="581" width="0.0810%" height="15" fill="rgb(251,121,7)" fg:x="270" fg:w="1"/><text x="22.1301%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="21.8801%" y="565" width="0.0810%" height="15" fill="rgb(250,177,26)" fg:x="270" fg:w="1"/><text x="22.1301%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="21.8801%" y="549" width="0.0810%" height="15" fill="rgb(232,88,15)" fg:x="270" fg:w="1"/><text x="22.1301%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.8801%" y="533" width="0.0810%" height="15" fill="rgb(251,54,54)" fg:x="270" fg:w="1"/><text x="22.1301%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.8801%" y="517" width="0.0810%" height="15" fill="rgb(208,177,15)" fg:x="270" fg:w="1"/><text x="22.1301%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.8801%" y="501" width="0.0810%" height="15" fill="rgb(205,97,32)" fg:x="270" fg:w="1"/><text x="22.1301%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.8801%" y="485" width="0.0810%" height="15" fill="rgb(217,192,13)" fg:x="270" fg:w="1"/><text x="22.1301%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.8801%" y="469" width="0.0810%" height="15" fill="rgb(215,163,41)" fg:x="270" fg:w="1"/><text x="22.1301%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="21.8801%" y="453" width="0.0810%" height="15" fill="rgb(246,83,29)" fg:x="270" fg:w="1"/><text x="22.1301%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="21.8801%" y="437" width="0.0810%" height="15" fill="rgb(219,2,45)" fg:x="270" fg:w="1"/><text x="22.1301%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="21.9611%" y="565" width="0.0810%" height="15" fill="rgb(242,215,33)" fg:x="271" fg:w="1"/><text x="22.2111%" y="575.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="21.9611%" y="549" width="0.0810%" height="15" fill="rgb(217,1,6)" fg:x="271" fg:w="1"/><text x="22.2111%" y="559.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="21.9611%" y="533" width="0.0810%" height="15" fill="rgb(207,85,52)" fg:x="271" fg:w="1"/><text x="22.2111%" y="543.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="22.0421%" y="533" width="0.0810%" height="15" fill="rgb(231,171,19)" fg:x="272" fg:w="1"/><text x="22.2921%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.0421%" y="517" width="0.0810%" height="15" fill="rgb(207,128,4)" fg:x="272" fg:w="1"/><text x="22.2921%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="22.0421%" y="501" width="0.0810%" height="15" fill="rgb(219,208,4)" fg:x="272" fg:w="1"/><text x="22.2921%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="22.0421%" y="485" width="0.0810%" height="15" fill="rgb(235,161,42)" fg:x="272" fg:w="1"/><text x="22.2921%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.0421%" y="469" width="0.0810%" height="15" fill="rgb(247,218,18)" fg:x="272" fg:w="1"/><text x="22.2921%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.0421%" y="453" width="0.0810%" height="15" fill="rgb(232,114,51)" fg:x="272" fg:w="1"/><text x="22.2921%" y="463.50"></text></g><g><title>plugins_core::build::Build::occupying (4 samples, 0.32%)</title><rect x="21.8801%" y="597" width="0.3241%" height="15" fill="rgb(222,95,3)" fg:x="270" fg:w="4"/><text x="22.1301%" y="607.50"></text></g><g><title>plugins_core::tools::set_occupying (3 samples, 0.24%)</title><rect x="21.9611%" y="581" width="0.2431%" height="15" fill="rgb(240,65,29)" fg:x="271" fg:w="3"/><text x="22.2111%" y="591.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="22.0421%" y="565" width="0.1621%" height="15" fill="rgb(249,209,20)" fg:x="272" fg:w="2"/><text x="22.2921%" y="575.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="22.0421%" y="549" width="0.1621%" height="15" fill="rgb(241,48,37)" fg:x="272" fg:w="2"/><text x="22.2921%" y="559.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="22.1232%" y="533" width="0.0810%" height="15" fill="rgb(230,140,42)" fg:x="273" fg:w="1"/><text x="22.3732%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.1232%" y="517" width="0.0810%" height="15" fill="rgb(230,176,45)" fg:x="273" fg:w="1"/><text x="22.3732%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="22.1232%" y="501" width="0.0810%" height="15" fill="rgb(245,112,21)" fg:x="273" fg:w="1"/><text x="22.3732%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.1232%" y="485" width="0.0810%" height="15" fill="rgb(207,183,35)" fg:x="273" fg:w="1"/><text x="22.3732%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.2042%" y="549" width="0.0810%" height="15" fill="rgb(227,44,33)" fg:x="274" fg:w="1"/><text x="22.4542%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.2042%" y="533" width="0.0810%" height="15" fill="rgb(246,120,21)" fg:x="274" fg:w="1"/><text x="22.4542%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.2042%" y="517" width="0.0810%" height="15" fill="rgb(235,57,52)" fg:x="274" fg:w="1"/><text x="22.4542%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.2042%" y="501" width="0.0810%" height="15" fill="rgb(238,84,10)" fg:x="274" fg:w="1"/><text x="22.4542%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.2042%" y="485" width="0.0810%" height="15" fill="rgb(251,200,32)" fg:x="274" fg:w="1"/><text x="22.4542%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.2042%" y="469" width="0.0810%" height="15" fill="rgb(247,159,13)" fg:x="274" fg:w="1"/><text x="22.4542%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.2042%" y="453" width="0.0810%" height="15" fill="rgb(238,64,4)" fg:x="274" fg:w="1"/><text x="22.4542%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.2042%" y="437" width="0.0810%" height="15" fill="rgb(221,131,51)" fg:x="274" fg:w="1"/><text x="22.4542%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.2042%" y="421" width="0.0810%" height="15" fill="rgb(242,5,29)" fg:x="274" fg:w="1"/><text x="22.4542%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.2042%" y="405" width="0.0810%" height="15" fill="rgb(214,130,32)" fg:x="274" fg:w="1"/><text x="22.4542%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.2042%" y="389" width="0.0810%" height="15" fill="rgb(244,210,16)" fg:x="274" fg:w="1"/><text x="22.4542%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.2042%" y="373" width="0.0810%" height="15" fill="rgb(234,48,26)" fg:x="274" fg:w="1"/><text x="22.4542%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.2042%" y="357" width="0.0810%" height="15" fill="rgb(231,82,38)" fg:x="274" fg:w="1"/><text x="22.4542%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="22.2042%" y="581" width="0.1621%" height="15" fill="rgb(254,128,41)" fg:x="274" fg:w="2"/><text x="22.4542%" y="591.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="22.2042%" y="565" width="0.1621%" height="15" fill="rgb(212,73,49)" fg:x="274" fg:w="2"/><text x="22.4542%" y="575.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="22.2853%" y="549" width="0.0810%" height="15" fill="rgb(205,62,54)" fg:x="275" fg:w="1"/><text x="22.5353%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.4473%" y="549" width="0.0810%" height="15" fill="rgb(228,0,8)" fg:x="277" fg:w="1"/><text x="22.6973%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.4473%" y="533" width="0.0810%" height="15" fill="rgb(251,28,17)" fg:x="277" fg:w="1"/><text x="22.6973%" y="543.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (124 samples, 10.05%)</title><rect x="12.5608%" y="613" width="10.0486%" height="15" fill="rgb(238,105,27)" fg:x="155" fg:w="124"/><text x="12.8108%" y="623.50">plugins_core::b..</text></g><g><title>plugins_core::build::Build::with_username (5 samples, 0.41%)</title><rect x="22.2042%" y="597" width="0.4052%" height="15" fill="rgb(237,216,33)" fg:x="274" fg:w="5"/><text x="22.4542%" y="607.50"></text></g><g><title>engine::users::model::add_username_to_key (3 samples, 0.24%)</title><rect x="22.3663%" y="581" width="0.2431%" height="15" fill="rgb(229,228,25)" fg:x="276" fg:w="3"/><text x="22.6163%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="22.3663%" y="565" width="0.2431%" height="15" fill="rgb(233,75,23)" fg:x="276" fg:w="3"/><text x="22.6163%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="22.5284%" y="549" width="0.0810%" height="15" fill="rgb(231,207,16)" fg:x="278" fg:w="1"/><text x="22.7784%" y="559.50"></text></g><g><title>plugins_core::build::BuildSurroundings::hands (1 samples, 0.08%)</title><rect x="22.6094%" y="613" width="0.0810%" height="15" fill="rgb(231,191,45)" fg:x="279" fg:w="1"/><text x="22.8594%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.6094%" y="597" width="0.0810%" height="15" fill="rgb(224,133,17)" fg:x="279" fg:w="1"/><text x="22.8594%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="22.7715%" y="581" width="0.0810%" height="15" fill="rgb(209,178,27)" fg:x="281" fg:w="1"/><text x="23.0215%" y="591.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="22.7715%" y="565" width="0.0810%" height="15" fill="rgb(218,37,11)" fg:x="281" fg:w="1"/><text x="23.0215%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.7715%" y="549" width="0.0810%" height="15" fill="rgb(251,226,25)" fg:x="281" fg:w="1"/><text x="23.0215%" y="559.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="22.8525%" y="501" width="0.0810%" height="15" fill="rgb(209,222,27)" fg:x="282" fg:w="1"/><text x="23.1025%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="22.8525%" y="485" width="0.0810%" height="15" fill="rgb(238,22,21)" fg:x="282" fg:w="1"/><text x="23.1025%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.8525%" y="469" width="0.0810%" height="15" fill="rgb(233,161,25)" fg:x="282" fg:w="1"/><text x="23.1025%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.8525%" y="453" width="0.0810%" height="15" fill="rgb(226,122,53)" fg:x="282" fg:w="1"/><text x="23.1025%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.8525%" y="437" width="0.0810%" height="15" fill="rgb(220,123,17)" fg:x="282" fg:w="1"/><text x="23.1025%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.8525%" y="421" width="0.0810%" height="15" fill="rgb(230,224,35)" fg:x="282" fg:w="1"/><text x="23.1025%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.8525%" y="405" width="0.0810%" height="15" fill="rgb(246,83,8)" fg:x="282" fg:w="1"/><text x="23.1025%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.8525%" y="389" width="0.0810%" height="15" fill="rgb(230,214,17)" fg:x="282" fg:w="1"/><text x="23.1025%" y="399.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="22.8525%" y="581" width="0.1621%" height="15" fill="rgb(222,97,18)" fg:x="282" fg:w="2"/><text x="23.1025%" y="591.50"></text></g><g><title>kernel::model::Entity::new_blank (2 samples, 0.16%)</title><rect x="22.8525%" y="565" width="0.1621%" height="15" fill="rgb(206,79,1)" fg:x="282" fg:w="2"/><text x="23.1025%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (2 samples, 0.16%)</title><rect x="22.8525%" y="549" width="0.1621%" height="15" fill="rgb(214,121,34)" fg:x="282" fg:w="2"/><text x="23.1025%" y="559.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::EntityKey&gt;&gt;::following (2 samples, 0.16%)</title><rect x="22.8525%" y="533" width="0.1621%" height="15" fill="rgb(249,199,46)" fg:x="282" fg:w="2"/><text x="23.1025%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="22.8525%" y="517" width="0.1621%" height="15" fill="rgb(214,222,46)" fg:x="282" fg:w="2"/><text x="23.1025%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="22.9335%" y="501" width="0.0810%" height="15" fill="rgb(248,168,30)" fg:x="283" fg:w="1"/><text x="23.1835%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="22.9335%" y="485" width="0.0810%" height="15" fill="rgb(226,14,28)" fg:x="283" fg:w="1"/><text x="23.1835%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.9335%" y="469" width="0.0810%" height="15" fill="rgb(253,123,1)" fg:x="283" fg:w="1"/><text x="23.1835%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.9335%" y="453" width="0.0810%" height="15" fill="rgb(225,24,42)" fg:x="283" fg:w="1"/><text x="23.1835%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="22.9335%" y="437" width="0.0810%" height="15" fill="rgb(216,161,37)" fg:x="283" fg:w="1"/><text x="23.1835%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="22.9335%" y="421" width="0.0810%" height="15" fill="rgb(251,164,26)" fg:x="283" fg:w="1"/><text x="23.1835%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="22.9335%" y="405" width="0.0810%" height="15" fill="rgb(219,177,3)" fg:x="283" fg:w="1"/><text x="23.1835%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="22.9335%" y="389" width="0.0810%" height="15" fill="rgb(222,65,0)" fg:x="283" fg:w="1"/><text x="23.1835%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="22.9335%" y="373" width="0.0810%" height="15" fill="rgb(223,69,54)" fg:x="283" fg:w="1"/><text x="23.1835%" y="383.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (219 samples, 17.75%)</title><rect x="5.3485%" y="629" width="17.7472%" height="15" fill="rgb(235,30,27)" fg:x="66" fg:w="219"/><text x="5.5985%" y="639.50">&lt;tests::HoldingKeyInVessel a..</text></g><g><title>plugins_core::build::BuildSurroundings::make (5 samples, 0.41%)</title><rect x="22.6904%" y="613" width="0.4052%" height="15" fill="rgb(220,183,50)" fg:x="280" fg:w="5"/><text x="22.9404%" y="623.50"></text></g><g><title>plugins_core::build::QuickThing::make (5 samples, 0.41%)</title><rect x="22.6904%" y="597" width="0.4052%" height="15" fill="rgb(248,198,15)" fg:x="280" fg:w="5"/><text x="22.9404%" y="607.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="23.0146%" y="581" width="0.0810%" height="15" fill="rgb(222,211,4)" fg:x="284" fg:w="1"/><text x="23.2646%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="23.0956%" y="613" width="0.0810%" height="15" fill="rgb(214,102,34)" fg:x="285" fg:w="1"/><text x="23.3456%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="23.0956%" y="597" width="0.0810%" height="15" fill="rgb(245,92,5)" fg:x="285" fg:w="1"/><text x="23.3456%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.0956%" y="581" width="0.0810%" height="15" fill="rgb(252,72,51)" fg:x="285" fg:w="1"/><text x="23.3456%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.0956%" y="565" width="0.0810%" height="15" fill="rgb(252,208,19)" fg:x="285" fg:w="1"/><text x="23.3456%" y="575.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="23.0956%" y="549" width="0.0810%" height="15" fill="rgb(211,69,7)" fg:x="285" fg:w="1"/><text x="23.3456%" y="559.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="23.0956%" y="533" width="0.0810%" height="15" fill="rgb(211,27,16)" fg:x="285" fg:w="1"/><text x="23.3456%" y="543.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="23.0956%" y="517" width="0.0810%" height="15" fill="rgb(219,216,14)" fg:x="285" fg:w="1"/><text x="23.3456%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.0956%" y="501" width="0.0810%" height="15" fill="rgb(219,71,8)" fg:x="285" fg:w="1"/><text x="23.3456%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.0956%" y="485" width="0.0810%" height="15" fill="rgb(223,170,53)" fg:x="285" fg:w="1"/><text x="23.3456%" y="495.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="23.0956%" y="469" width="0.0810%" height="15" fill="rgb(246,21,26)" fg:x="285" fg:w="1"/><text x="23.3456%" y="479.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="23.0956%" y="453" width="0.0810%" height="15" fill="rgb(248,20,46)" fg:x="285" fg:w="1"/><text x="23.3456%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.0956%" y="437" width="0.0810%" height="15" fill="rgb(252,94,11)" fg:x="285" fg:w="1"/><text x="23.3456%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.0956%" y="421" width="0.0810%" height="15" fill="rgb(236,163,8)" fg:x="285" fg:w="1"/><text x="23.3456%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="23.0956%" y="405" width="0.0810%" height="15" fill="rgb(217,221,45)" fg:x="285" fg:w="1"/><text x="23.3456%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="23.0956%" y="389" width="0.0810%" height="15" fill="rgb(238,38,17)" fg:x="285" fg:w="1"/><text x="23.3456%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="23.0956%" y="373" width="0.0810%" height="15" fill="rgb(242,210,23)" fg:x="285" fg:w="1"/><text x="23.3456%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="23.0956%" y="357" width="0.0810%" height="15" fill="rgb(250,86,53)" fg:x="285" fg:w="1"/><text x="23.3456%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="23.0956%" y="341" width="0.0810%" height="15" fill="rgb(223,168,25)" fg:x="285" fg:w="1"/><text x="23.3456%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="23.0956%" y="325" width="0.0810%" height="15" fill="rgb(251,189,4)" fg:x="285" fg:w="1"/><text x="23.3456%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="23.0956%" y="309" width="0.0810%" height="15" fill="rgb(245,19,28)" fg:x="285" fg:w="1"/><text x="23.3456%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="23.0956%" y="293" width="0.0810%" height="15" fill="rgb(207,10,34)" fg:x="285" fg:w="1"/><text x="23.3456%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.08%)</title><rect x="23.0956%" y="277" width="0.0810%" height="15" fill="rgb(235,153,31)" fg:x="285" fg:w="1"/><text x="23.3456%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.08%)</title><rect x="23.0956%" y="261" width="0.0810%" height="15" fill="rgb(228,72,37)" fg:x="285" fg:w="1"/><text x="23.3456%" y="271.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="23.1767%" y="565" width="0.1621%" height="15" fill="rgb(215,15,16)" fg:x="286" fg:w="2"/><text x="23.4267%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="23.1767%" y="581" width="0.2431%" height="15" fill="rgb(250,119,29)" fg:x="286" fg:w="3"/><text x="23.4267%" y="591.50"></text></g><g><title>engine::session::Session::save_entity (1 samples, 0.08%)</title><rect x="23.3387%" y="565" width="0.0810%" height="15" fill="rgb(214,59,1)" fg:x="288" fg:w="1"/><text x="23.5887%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.3387%" y="549" width="0.0810%" height="15" fill="rgb(223,109,25)" fg:x="288" fg:w="1"/><text x="23.5887%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="23.1767%" y="597" width="0.3241%" height="15" fill="rgb(230,198,22)" fg:x="286" fg:w="4"/><text x="23.4267%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.4198%" y="581" width="0.0810%" height="15" fill="rgb(245,184,46)" fg:x="289" fg:w="1"/><text x="23.6698%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.5818%" y="549" width="0.0810%" height="15" fill="rgb(253,73,16)" fg:x="291" fg:w="1"/><text x="23.8318%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.5818%" y="533" width="0.0810%" height="15" fill="rgb(206,94,45)" fg:x="291" fg:w="1"/><text x="23.8318%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.5818%" y="517" width="0.0810%" height="15" fill="rgb(236,83,27)" fg:x="291" fg:w="1"/><text x="23.8318%" y="527.50"></text></g><g><title>engine::identifiers::model::get_gid (3 samples, 0.24%)</title><rect x="23.5008%" y="597" width="0.2431%" height="15" fill="rgb(220,196,8)" fg:x="290" fg:w="3"/><text x="23.7508%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="23.5008%" y="581" width="0.2431%" height="15" fill="rgb(254,185,14)" fg:x="290" fg:w="3"/><text x="23.7508%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="23.5008%" y="565" width="0.2431%" height="15" fill="rgb(226,50,22)" fg:x="290" fg:w="3"/><text x="23.7508%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.6629%" y="549" width="0.0810%" height="15" fill="rgb(253,147,0)" fg:x="292" fg:w="1"/><text x="23.9129%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.6629%" y="533" width="0.0810%" height="15" fill="rgb(252,46,33)" fg:x="292" fg:w="1"/><text x="23.9129%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="23.8250%" y="533" width="0.0810%" height="15" fill="rgb(242,22,54)" fg:x="294" fg:w="1"/><text x="24.0750%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="23.9060%" y="533" width="0.1621%" height="15" fill="rgb(223,178,32)" fg:x="295" fg:w="2"/><text x="24.1560%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="23.9060%" y="517" width="0.1621%" height="15" fill="rgb(214,106,53)" fg:x="295" fg:w="2"/><text x="24.1560%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="23.9870%" y="501" width="0.0810%" height="15" fill="rgb(232,65,50)" fg:x="296" fg:w="1"/><text x="24.2370%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.9870%" y="485" width="0.0810%" height="15" fill="rgb(231,110,28)" fg:x="296" fg:w="1"/><text x="24.2370%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.57%)</title><rect x="23.8250%" y="549" width="0.5673%" height="15" fill="rgb(216,71,40)" fg:x="294" fg:w="7"/><text x="24.0750%" y="559.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="24.0681%" y="533" width="0.3241%" height="15" fill="rgb(229,89,53)" fg:x="297" fg:w="4"/><text x="24.3181%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="24.2301%" y="517" width="0.1621%" height="15" fill="rgb(210,124,14)" fg:x="299" fg:w="2"/><text x="24.4801%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.3112%" y="501" width="0.0810%" height="15" fill="rgb(236,213,6)" fg:x="300" fg:w="1"/><text x="24.5612%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="24.3112%" y="485" width="0.0810%" height="15" fill="rgb(228,41,5)" fg:x="300" fg:w="1"/><text x="24.5612%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="24.3112%" y="469" width="0.0810%" height="15" fill="rgb(221,167,25)" fg:x="300" fg:w="1"/><text x="24.5612%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="24.3112%" y="453" width="0.0810%" height="15" fill="rgb(228,144,37)" fg:x="300" fg:w="1"/><text x="24.5612%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="24.4733%" y="533" width="0.0810%" height="15" fill="rgb(227,189,38)" fg:x="302" fg:w="1"/><text x="24.7233%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="24.5543%" y="533" width="0.0810%" height="15" fill="rgb(218,8,2)" fg:x="303" fg:w="1"/><text x="24.8043%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="24.5543%" y="517" width="0.0810%" height="15" fill="rgb(209,61,28)" fg:x="303" fg:w="1"/><text x="24.8043%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="24.5543%" y="501" width="0.0810%" height="15" fill="rgb(233,140,39)" fg:x="303" fg:w="1"/><text x="24.8043%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.5543%" y="485" width="0.0810%" height="15" fill="rgb(251,66,48)" fg:x="303" fg:w="1"/><text x="24.8043%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.57%)</title><rect x="24.6353%" y="533" width="0.5673%" height="15" fill="rgb(210,44,45)" fg:x="304" fg:w="7"/><text x="24.8853%" y="543.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="24.8784%" y="517" width="0.3241%" height="15" fill="rgb(214,136,46)" fg:x="307" fg:w="4"/><text x="25.1284%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="24.9595%" y="501" width="0.2431%" height="15" fill="rgb(207,130,50)" fg:x="308" fg:w="3"/><text x="25.2095%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="24.9595%" y="485" width="0.2431%" height="15" fill="rgb(228,102,49)" fg:x="308" fg:w="3"/><text x="25.2095%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="25.0405%" y="469" width="0.1621%" height="15" fill="rgb(253,55,1)" fg:x="309" fg:w="2"/><text x="25.2905%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.1216%" y="453" width="0.0810%" height="15" fill="rgb(238,222,9)" fg:x="310" fg:w="1"/><text x="25.3716%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="25.1216%" y="437" width="0.0810%" height="15" fill="rgb(246,99,6)" fg:x="310" fg:w="1"/><text x="25.3716%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="25.2836%" y="501" width="0.3241%" height="15" fill="rgb(219,110,26)" fg:x="312" fg:w="4"/><text x="25.5336%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.5267%" y="485" width="0.0810%" height="15" fill="rgb(239,160,33)" fg:x="315" fg:w="1"/><text x="25.7767%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="25.6888%" y="485" width="0.3241%" height="15" fill="rgb(220,202,23)" fg:x="317" fg:w="4"/><text x="25.9388%" y="495.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="25.6888%" y="469" width="0.3241%" height="15" fill="rgb(208,80,26)" fg:x="317" fg:w="4"/><text x="25.9388%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.9319%" y="453" width="0.0810%" height="15" fill="rgb(243,85,7)" fg:x="320" fg:w="1"/><text x="26.1819%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.9319%" y="437" width="0.0810%" height="15" fill="rgb(228,77,47)" fg:x="320" fg:w="1"/><text x="26.1819%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="25.6078%" y="501" width="0.4862%" height="15" fill="rgb(212,226,8)" fg:x="316" fg:w="6"/><text x="25.8578%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.0130%" y="485" width="0.0810%" height="15" fill="rgb(241,120,54)" fg:x="321" fg:w="1"/><text x="26.2630%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.0130%" y="469" width="0.0810%" height="15" fill="rgb(226,80,16)" fg:x="321" fg:w="1"/><text x="26.2630%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.05%)</title><rect x="25.2836%" y="517" width="1.0535%" height="15" fill="rgb(240,76,13)" fg:x="312" fg:w="13"/><text x="25.5336%" y="527.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="26.0940%" y="501" width="0.2431%" height="15" fill="rgb(252,74,8)" fg:x="322" fg:w="3"/><text x="26.3440%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.30%)</title><rect x="25.2026%" y="533" width="1.2966%" height="15" fill="rgb(244,155,2)" fg:x="311" fg:w="16"/><text x="25.4526%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="26.3371%" y="517" width="0.1621%" height="15" fill="rgb(215,81,35)" fg:x="325" fg:w="2"/><text x="26.5871%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.4182%" y="501" width="0.0810%" height="15" fill="rgb(206,55,2)" fg:x="326" fg:w="1"/><text x="26.6682%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (32 samples, 2.59%)</title><rect x="24.3922%" y="549" width="2.5932%" height="15" fill="rgb(231,2,34)" fg:x="301" fg:w="32"/><text x="24.6422%" y="559.50">se..</text></g><g><title>std::io::Write::write_all (6 samples, 0.49%)</title><rect x="26.4992%" y="533" width="0.4862%" height="15" fill="rgb(242,176,48)" fg:x="327" fg:w="6"/><text x="26.7492%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.49%)</title><rect x="26.4992%" y="517" width="0.4862%" height="15" fill="rgb(249,31,36)" fg:x="327" fg:w="6"/><text x="26.7492%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="26.8233%" y="501" width="0.1621%" height="15" fill="rgb(205,18,17)" fg:x="331" fg:w="2"/><text x="27.0733%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="26.8233%" y="485" width="0.1621%" height="15" fill="rgb(254,130,5)" fg:x="331" fg:w="2"/><text x="27.0733%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="26.8233%" y="469" width="0.1621%" height="15" fill="rgb(229,42,45)" fg:x="331" fg:w="2"/><text x="27.0733%" y="479.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="26.8233%" y="453" width="0.1621%" height="15" fill="rgb(245,95,25)" fg:x="331" fg:w="2"/><text x="27.0733%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (40 samples, 3.24%)</title><rect x="23.8250%" y="565" width="3.2415%" height="15" fill="rgb(249,193,38)" fg:x="294" fg:w="40"/><text x="24.0750%" y="575.50">&lt;se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.9854%" y="549" width="0.0810%" height="15" fill="rgb(241,140,43)" fg:x="333" fg:w="1"/><text x="27.2354%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.9854%" y="533" width="0.0810%" height="15" fill="rgb(245,78,48)" fg:x="333" fg:w="1"/><text x="27.2354%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.9854%" y="517" width="0.0810%" height="15" fill="rgb(214,92,39)" fg:x="333" fg:w="1"/><text x="27.2354%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.9854%" y="501" width="0.0810%" height="15" fill="rgb(211,189,14)" fg:x="333" fg:w="1"/><text x="27.2354%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.9854%" y="485" width="0.0810%" height="15" fill="rgb(218,7,24)" fg:x="333" fg:w="1"/><text x="27.2354%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.9854%" y="469" width="0.0810%" height="15" fill="rgb(224,200,49)" fg:x="333" fg:w="1"/><text x="27.2354%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.1475%" y="517" width="0.0810%" height="15" fill="rgb(218,210,14)" fg:x="335" fg:w="1"/><text x="27.3975%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.1475%" y="501" width="0.0810%" height="15" fill="rgb(234,142,31)" fg:x="335" fg:w="1"/><text x="27.3975%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.2285%" y="501" width="0.0810%" height="15" fill="rgb(227,165,2)" fg:x="336" fg:w="1"/><text x="27.4785%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="27.3906%" y="485" width="0.0810%" height="15" fill="rgb(232,44,46)" fg:x="338" fg:w="1"/><text x="27.6406%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.3906%" y="469" width="0.0810%" height="15" fill="rgb(236,149,47)" fg:x="338" fg:w="1"/><text x="27.6406%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.3906%" y="453" width="0.0810%" height="15" fill="rgb(227,45,31)" fg:x="338" fg:w="1"/><text x="27.6406%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="27.0665%" y="565" width="0.4862%" height="15" fill="rgb(240,176,51)" fg:x="334" fg:w="6"/><text x="27.3165%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.49%)</title><rect x="27.0665%" y="549" width="0.4862%" height="15" fill="rgb(249,146,41)" fg:x="334" fg:w="6"/><text x="27.3165%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="27.1475%" y="533" width="0.4052%" height="15" fill="rgb(213,208,4)" fg:x="335" fg:w="5"/><text x="27.3975%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="27.2285%" y="517" width="0.3241%" height="15" fill="rgb(245,84,36)" fg:x="336" fg:w="4"/><text x="27.4785%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="27.3096%" y="501" width="0.2431%" height="15" fill="rgb(254,84,18)" fg:x="337" fg:w="3"/><text x="27.5596%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.4716%" y="485" width="0.0810%" height="15" fill="rgb(225,38,54)" fg:x="339" fg:w="1"/><text x="27.7216%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.4716%" y="469" width="0.0810%" height="15" fill="rgb(246,50,30)" fg:x="339" fg:w="1"/><text x="27.7216%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.5527%" y="517" width="0.0810%" height="15" fill="rgb(246,148,9)" fg:x="340" fg:w="1"/><text x="27.8027%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="27.6337%" y="517" width="0.1621%" height="15" fill="rgb(223,75,4)" fg:x="341" fg:w="2"/><text x="27.8837%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="27.7958%" y="501" width="0.1621%" height="15" fill="rgb(239,148,41)" fg:x="343" fg:w="2"/><text x="28.0458%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (6 samples, 0.49%)</title><rect x="27.9579%" y="501" width="0.4862%" height="15" fill="rgb(205,195,3)" fg:x="345" fg:w="6"/><text x="28.2079%" y="511.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="28.2010%" y="485" width="0.2431%" height="15" fill="rgb(254,161,1)" fg:x="348" fg:w="3"/><text x="28.4510%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.4441%" y="485" width="0.0810%" height="15" fill="rgb(211,229,8)" fg:x="351" fg:w="1"/><text x="28.6941%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="28.5251%" y="485" width="0.1621%" height="15" fill="rgb(220,97,9)" fg:x="352" fg:w="2"/><text x="28.7751%" y="495.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="28.7682%" y="469" width="0.2431%" height="15" fill="rgb(240,218,8)" fg:x="355" fg:w="3"/><text x="29.0182%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.0113%" y="469" width="0.0810%" height="15" fill="rgb(250,44,0)" fg:x="358" fg:w="1"/><text x="29.2613%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.0113%" y="453" width="0.0810%" height="15" fill="rgb(236,41,53)" fg:x="358" fg:w="1"/><text x="29.2613%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="29.0924%" y="453" width="0.1621%" height="15" fill="rgb(218,227,13)" fg:x="359" fg:w="2"/><text x="29.3424%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="29.0924%" y="437" width="0.1621%" height="15" fill="rgb(217,94,32)" fg:x="359" fg:w="2"/><text x="29.3424%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.2545%" y="437" width="0.0810%" height="15" fill="rgb(213,217,12)" fg:x="361" fg:w="1"/><text x="29.5045%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (24 samples, 1.94%)</title><rect x="27.5527%" y="549" width="1.9449%" height="15" fill="rgb(229,13,46)" fg:x="340" fg:w="24"/><text x="27.8027%" y="559.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (24 samples, 1.94%)</title><rect x="27.5527%" y="533" width="1.9449%" height="15" fill="rgb(243,139,5)" fg:x="340" fg:w="24"/><text x="27.8027%" y="543.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (21 samples, 1.70%)</title><rect x="27.7958%" y="517" width="1.7018%" height="15" fill="rgb(249,38,45)" fg:x="343" fg:w="21"/><text x="28.0458%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.05%)</title><rect x="28.4441%" y="501" width="1.0535%" height="15" fill="rgb(216,70,11)" fg:x="351" fg:w="13"/><text x="28.6941%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="28.6872%" y="485" width="0.8104%" height="15" fill="rgb(253,101,25)" fg:x="354" fg:w="10"/><text x="28.9372%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="29.0924%" y="469" width="0.4052%" height="15" fill="rgb(207,197,30)" fg:x="359" fg:w="5"/><text x="29.3424%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="29.2545%" y="453" width="0.2431%" height="15" fill="rgb(238,87,13)" fg:x="361" fg:w="3"/><text x="29.5045%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="29.3355%" y="437" width="0.1621%" height="15" fill="rgb(215,155,8)" fg:x="362" fg:w="2"/><text x="29.5855%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.4165%" y="421" width="0.0810%" height="15" fill="rgb(239,166,38)" fg:x="363" fg:w="1"/><text x="29.6665%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="29.4976%" y="533" width="0.0810%" height="15" fill="rgb(240,194,35)" fg:x="364" fg:w="1"/><text x="29.7476%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.7407%" y="517" width="0.0810%" height="15" fill="rgb(219,10,44)" fg:x="367" fg:w="1"/><text x="29.9907%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="29.8217%" y="517" width="0.3241%" height="15" fill="rgb(251,220,35)" fg:x="368" fg:w="4"/><text x="30.0717%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="29.9838%" y="501" width="0.1621%" height="15" fill="rgb(218,117,13)" fg:x="370" fg:w="2"/><text x="30.2338%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="30.0648%" y="485" width="0.0810%" height="15" fill="rgb(221,213,40)" fg:x="371" fg:w="1"/><text x="30.3148%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="30.1459%" y="517" width="0.1621%" height="15" fill="rgb(251,224,35)" fg:x="372" fg:w="2"/><text x="30.3959%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="30.1459%" y="501" width="0.1621%" height="15" fill="rgb(241,33,39)" fg:x="372" fg:w="2"/><text x="30.3959%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.2269%" y="485" width="0.0810%" height="15" fill="rgb(222,74,17)" fg:x="373" fg:w="1"/><text x="30.4769%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.2269%" y="469" width="0.0810%" height="15" fill="rgb(225,103,0)" fg:x="373" fg:w="1"/><text x="30.4769%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.3890%" y="485" width="0.0810%" height="15" fill="rgb(240,0,12)" fg:x="375" fg:w="1"/><text x="30.6390%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="30.3079%" y="517" width="0.3241%" height="15" fill="rgb(233,213,37)" fg:x="374" fg:w="4"/><text x="30.5579%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="30.3079%" y="501" width="0.3241%" height="15" fill="rgb(225,84,52)" fg:x="374" fg:w="4"/><text x="30.5579%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="30.4700%" y="485" width="0.1621%" height="15" fill="rgb(247,160,51)" fg:x="376" fg:w="2"/><text x="30.7200%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.5511%" y="469" width="0.0810%" height="15" fill="rgb(244,60,51)" fg:x="377" fg:w="1"/><text x="30.8011%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="30.5511%" y="453" width="0.0810%" height="15" fill="rgb(233,114,7)" fg:x="377" fg:w="1"/><text x="30.8011%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.6321%" y="485" width="0.0810%" height="15" fill="rgb(246,136,16)" fg:x="378" fg:w="1"/><text x="30.8821%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.7131%" y="485" width="0.0810%" height="15" fill="rgb(243,114,45)" fg:x="379" fg:w="1"/><text x="30.9631%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.7131%" y="469" width="0.0810%" height="15" fill="rgb(247,183,43)" fg:x="379" fg:w="1"/><text x="30.9631%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.7131%" y="453" width="0.0810%" height="15" fill="rgb(251,210,42)" fg:x="379" fg:w="1"/><text x="30.9631%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.7942%" y="469" width="0.0810%" height="15" fill="rgb(221,88,35)" fg:x="380" fg:w="1"/><text x="31.0442%" y="479.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="30.8752%" y="437" width="0.2431%" height="15" fill="rgb(242,21,20)" fg:x="381" fg:w="3"/><text x="31.1252%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="30.8752%" y="469" width="0.3241%" height="15" fill="rgb(233,226,36)" fg:x="381" fg:w="4"/><text x="31.1252%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="30.8752%" y="453" width="0.3241%" height="15" fill="rgb(243,189,34)" fg:x="381" fg:w="4"/><text x="31.1252%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="31.1183%" y="437" width="0.0810%" height="15" fill="rgb(207,145,50)" fg:x="384" fg:w="1"/><text x="31.3683%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="31.2804%" y="453" width="0.1621%" height="15" fill="rgb(242,1,50)" fg:x="386" fg:w="2"/><text x="31.5304%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.3614%" y="437" width="0.0810%" height="15" fill="rgb(231,65,32)" fg:x="387" fg:w="1"/><text x="31.6114%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (4 samples, 0.32%)</title><rect x="31.4425%" y="421" width="0.3241%" height="15" fill="rgb(208,68,49)" fg:x="388" fg:w="4"/><text x="31.6925%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.8476%" y="405" width="0.0810%" height="15" fill="rgb(253,54,49)" fg:x="393" fg:w="1"/><text x="32.0976%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.8476%" y="389" width="0.0810%" height="15" fill="rgb(245,186,24)" fg:x="393" fg:w="1"/><text x="32.0976%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.57%)</title><rect x="31.4425%" y="453" width="0.5673%" height="15" fill="rgb(209,2,41)" fg:x="388" fg:w="7"/><text x="31.6925%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (7 samples, 0.57%)</title><rect x="31.4425%" y="437" width="0.5673%" height="15" fill="rgb(242,208,54)" fg:x="388" fg:w="7"/><text x="31.6925%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="31.7666%" y="421" width="0.2431%" height="15" fill="rgb(225,9,51)" fg:x="392" fg:w="3"/><text x="32.0166%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="31.9287%" y="405" width="0.0810%" height="15" fill="rgb(207,207,25)" fg:x="394" fg:w="1"/><text x="32.1787%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="31.9287%" y="389" width="0.0810%" height="15" fill="rgb(253,96,18)" fg:x="394" fg:w="1"/><text x="32.1787%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (18 samples, 1.46%)</title><rect x="30.6321%" y="517" width="1.4587%" height="15" fill="rgb(252,215,20)" fg:x="378" fg:w="18"/><text x="30.8821%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (18 samples, 1.46%)</title><rect x="30.6321%" y="501" width="1.4587%" height="15" fill="rgb(245,227,26)" fg:x="378" fg:w="18"/><text x="30.8821%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (16 samples, 1.30%)</title><rect x="30.7942%" y="485" width="1.2966%" height="15" fill="rgb(241,208,0)" fg:x="380" fg:w="16"/><text x="31.0442%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (11 samples, 0.89%)</title><rect x="31.1994%" y="469" width="0.8914%" height="15" fill="rgb(224,130,10)" fg:x="385" fg:w="11"/><text x="31.4494%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.0097%" y="453" width="0.0810%" height="15" fill="rgb(237,29,0)" fg:x="395" fg:w="1"/><text x="32.2597%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="32.0908%" y="485" width="0.0810%" height="15" fill="rgb(219,27,41)" fg:x="396" fg:w="1"/><text x="32.3408%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.41%)</title><rect x="32.1718%" y="469" width="0.4052%" height="15" fill="rgb(245,101,19)" fg:x="397" fg:w="5"/><text x="32.4218%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="32.4149%" y="453" width="0.1621%" height="15" fill="rgb(243,44,37)" fg:x="400" fg:w="2"/><text x="32.6649%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="32.4149%" y="437" width="0.1621%" height="15" fill="rgb(228,213,43)" fg:x="400" fg:w="2"/><text x="32.6649%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="32.5770%" y="469" width="0.2431%" height="15" fill="rgb(219,163,21)" fg:x="402" fg:w="3"/><text x="32.8270%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="32.5770%" y="453" width="0.2431%" height="15" fill="rgb(234,86,24)" fg:x="402" fg:w="3"/><text x="32.8270%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="32.5770%" y="437" width="0.2431%" height="15" fill="rgb(225,10,24)" fg:x="402" fg:w="3"/><text x="32.8270%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="32.6580%" y="421" width="0.1621%" height="15" fill="rgb(218,109,7)" fg:x="403" fg:w="2"/><text x="32.9080%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.7391%" y="405" width="0.0810%" height="15" fill="rgb(210,20,26)" fg:x="404" fg:w="1"/><text x="32.9891%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.7391%" y="389" width="0.0810%" height="15" fill="rgb(216,18,1)" fg:x="404" fg:w="1"/><text x="32.9891%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="32.9822%" y="453" width="0.0810%" height="15" fill="rgb(206,163,23)" fg:x="407" fg:w="1"/><text x="33.2322%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.2253%" y="405" width="0.0810%" height="15" fill="rgb(229,150,31)" fg:x="410" fg:w="1"/><text x="33.4753%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (48 samples, 3.89%)</title><rect x="29.4976%" y="549" width="3.8898%" height="15" fill="rgb(231,10,5)" fg:x="364" fg:w="48"/><text x="29.7476%" y="559.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (47 samples, 3.81%)</title><rect x="29.5786%" y="533" width="3.8088%" height="15" fill="rgb(250,40,50)" fg:x="365" fg:w="47"/><text x="29.8286%" y="543.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (16 samples, 1.30%)</title><rect x="32.0908%" y="517" width="1.2966%" height="15" fill="rgb(217,119,7)" fg:x="396" fg:w="16"/><text x="32.3408%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (16 samples, 1.30%)</title><rect x="32.0908%" y="501" width="1.2966%" height="15" fill="rgb(245,214,40)" fg:x="396" fg:w="16"/><text x="32.3408%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.22%)</title><rect x="32.1718%" y="485" width="1.2156%" height="15" fill="rgb(216,187,1)" fg:x="397" fg:w="15"/><text x="32.4218%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.57%)</title><rect x="32.8201%" y="469" width="0.5673%" height="15" fill="rgb(237,146,21)" fg:x="405" fg:w="7"/><text x="33.0701%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="33.0632%" y="453" width="0.3241%" height="15" fill="rgb(210,174,47)" fg:x="408" fg:w="4"/><text x="33.3132%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.2253%" y="437" width="0.1621%" height="15" fill="rgb(218,111,39)" fg:x="410" fg:w="2"/><text x="33.4753%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.2253%" y="421" width="0.1621%" height="15" fill="rgb(224,95,19)" fg:x="410" fg:w="2"/><text x="33.4753%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="33.3063%" y="405" width="0.0810%" height="15" fill="rgb(234,15,38)" fg:x="411" fg:w="1"/><text x="33.5563%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="34.4408%" y="357" width="0.1621%" height="15" fill="rgb(246,56,12)" fg:x="425" fg:w="2"/><text x="34.6908%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="34.4408%" y="373" width="0.2431%" height="15" fill="rgb(247,16,17)" fg:x="425" fg:w="3"/><text x="34.6908%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.6029%" y="357" width="0.0810%" height="15" fill="rgb(215,151,11)" fg:x="427" fg:w="1"/><text x="34.8529%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.6029%" y="341" width="0.0810%" height="15" fill="rgb(225,16,24)" fg:x="427" fg:w="1"/><text x="34.8529%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.6029%" y="325" width="0.0810%" height="15" fill="rgb(217,117,5)" fg:x="427" fg:w="1"/><text x="34.8529%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="34.2788%" y="389" width="0.4862%" height="15" fill="rgb(246,187,53)" fg:x="423" fg:w="6"/><text x="34.5288%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="34.6840%" y="373" width="0.0810%" height="15" fill="rgb(241,71,40)" fg:x="428" fg:w="1"/><text x="34.9340%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="34.6840%" y="357" width="0.0810%" height="15" fill="rgb(231,67,39)" fg:x="428" fg:w="1"/><text x="34.9340%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="34.8460%" y="373" width="0.0810%" height="15" fill="rgb(222,120,24)" fg:x="430" fg:w="1"/><text x="35.0960%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="34.7650%" y="389" width="0.2431%" height="15" fill="rgb(248,3,3)" fg:x="429" fg:w="3"/><text x="35.0150%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.9271%" y="373" width="0.0810%" height="15" fill="rgb(228,218,5)" fg:x="431" fg:w="1"/><text x="35.1771%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 1.30%)</title><rect x="33.9546%" y="421" width="1.2966%" height="15" fill="rgb(212,202,43)" fg:x="419" fg:w="16"/><text x="34.2046%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 1.30%)</title><rect x="33.9546%" y="405" width="1.2966%" height="15" fill="rgb(235,183,2)" fg:x="419" fg:w="16"/><text x="34.2046%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="35.0081%" y="389" width="0.2431%" height="15" fill="rgb(230,165,10)" fg:x="432" fg:w="3"/><text x="35.2581%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.0891%" y="373" width="0.1621%" height="15" fill="rgb(219,54,40)" fg:x="433" fg:w="2"/><text x="35.3391%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.1702%" y="357" width="0.0810%" height="15" fill="rgb(244,73,9)" fg:x="434" fg:w="1"/><text x="35.4202%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="35.2512%" y="421" width="0.0810%" height="15" fill="rgb(212,32,45)" fg:x="435" fg:w="1"/><text x="35.5012%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.2512%" y="405" width="0.0810%" height="15" fill="rgb(205,58,31)" fg:x="435" fg:w="1"/><text x="35.5012%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (22 samples, 1.78%)</title><rect x="33.7925%" y="453" width="1.7828%" height="15" fill="rgb(250,120,43)" fg:x="417" fg:w="22"/><text x="34.0425%" y="463.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (21 samples, 1.70%)</title><rect x="33.8736%" y="437" width="1.7018%" height="15" fill="rgb(235,13,10)" fg:x="418" fg:w="21"/><text x="34.1236%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="35.3323%" y="421" width="0.2431%" height="15" fill="rgb(232,219,31)" fg:x="436" fg:w="3"/><text x="35.5823%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="35.3323%" y="405" width="0.2431%" height="15" fill="rgb(218,157,51)" fg:x="436" fg:w="3"/><text x="35.5823%" y="415.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="35.3323%" y="389" width="0.2431%" height="15" fill="rgb(211,91,52)" fg:x="436" fg:w="3"/><text x="35.5823%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="35.5754%" y="437" width="0.0810%" height="15" fill="rgb(240,173,1)" fg:x="439" fg:w="1"/><text x="35.8254%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="35.5754%" y="453" width="0.1621%" height="15" fill="rgb(248,20,47)" fg:x="439" fg:w="2"/><text x="35.8254%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.6564%" y="437" width="0.0810%" height="15" fill="rgb(217,221,40)" fg:x="440" fg:w="1"/><text x="35.9064%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (31 samples, 2.51%)</title><rect x="33.5494%" y="485" width="2.5122%" height="15" fill="rgb(226,149,51)" fg:x="414" fg:w="31"/><text x="33.7994%" y="495.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (29 samples, 2.35%)</title><rect x="33.7115%" y="469" width="2.3501%" height="15" fill="rgb(252,193,7)" fg:x="416" fg:w="29"/><text x="33.9615%" y="479.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="35.7374%" y="453" width="0.3241%" height="15" fill="rgb(205,123,0)" fg:x="441" fg:w="4"/><text x="35.9874%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="35.7374%" y="437" width="0.3241%" height="15" fill="rgb(233,173,25)" fg:x="441" fg:w="4"/><text x="35.9874%" y="447.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="35.8185%" y="421" width="0.2431%" height="15" fill="rgb(216,63,32)" fg:x="442" fg:w="3"/><text x="36.0685%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="36.0616%" y="485" width="0.3241%" height="15" fill="rgb(209,56,45)" fg:x="445" fg:w="4"/><text x="36.3116%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (4 samples, 0.32%)</title><rect x="36.0616%" y="469" width="0.3241%" height="15" fill="rgb(226,111,49)" fg:x="445" fg:w="4"/><text x="36.3116%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (39 samples, 3.16%)</title><rect x="33.3874%" y="549" width="3.1605%" height="15" fill="rgb(244,181,21)" fg:x="412" fg:w="39"/><text x="33.6374%" y="559.50">ser..</text></g><g><title>serde_json::de::from_trait (39 samples, 3.16%)</title><rect x="33.3874%" y="533" width="3.1605%" height="15" fill="rgb(222,126,15)" fg:x="412" fg:w="39"/><text x="33.6374%" y="543.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (39 samples, 3.16%)</title><rect x="33.3874%" y="517" width="3.1605%" height="15" fill="rgb(222,95,17)" fg:x="412" fg:w="39"/><text x="33.6374%" y="527.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (39 samples, 3.16%)</title><rect x="33.3874%" y="501" width="3.1605%" height="15" fill="rgb(254,46,5)" fg:x="412" fg:w="39"/><text x="33.6374%" y="511.50">&lt;se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="36.3857%" y="485" width="0.1621%" height="15" fill="rgb(236,216,35)" fg:x="449" fg:w="2"/><text x="36.6357%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.4668%" y="469" width="0.0810%" height="15" fill="rgb(217,187,26)" fg:x="450" fg:w="1"/><text x="36.7168%" y="479.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.16%)</title><rect x="36.7909%" y="485" width="0.1621%" height="15" fill="rgb(207,192,25)" fg:x="454" fg:w="2"/><text x="37.0409%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="36.7909%" y="469" width="0.1621%" height="15" fill="rgb(253,135,27)" fg:x="454" fg:w="2"/><text x="37.0409%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.57%)</title><rect x="36.6288%" y="517" width="0.5673%" height="15" fill="rgb(211,122,29)" fg:x="452" fg:w="7"/><text x="36.8788%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.49%)</title><rect x="36.7099%" y="501" width="0.4862%" height="15" fill="rgb(233,162,40)" fg:x="453" fg:w="6"/><text x="36.9599%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="36.9530%" y="485" width="0.2431%" height="15" fill="rgb(222,184,47)" fg:x="456" fg:w="3"/><text x="37.2030%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.65%)</title><rect x="36.6288%" y="533" width="0.6483%" height="15" fill="rgb(249,99,23)" fg:x="452" fg:w="8"/><text x="36.8788%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="37.1961%" y="517" width="0.0810%" height="15" fill="rgb(214,60,12)" fg:x="459" fg:w="1"/><text x="37.4461%" y="527.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (168 samples, 13.61%)</title><rect x="23.7439%" y="597" width="13.6143%" height="15" fill="rgb(250,229,36)" fg:x="293" fg:w="168"/><text x="23.9939%" y="607.50">engine::internal::Ent..</text></g><g><title>engine::session::Session::check_for_changes (167 samples, 13.53%)</title><rect x="23.8250%" y="581" width="13.5332%" height="15" fill="rgb(232,195,10)" fg:x="294" fg:w="167"/><text x="24.0750%" y="591.50">engine::session::Ses..</text></g><g><title>kernel::compare::any_entity_changes (121 samples, 9.81%)</title><rect x="27.5527%" y="565" width="9.8055%" height="15" fill="rgb(205,213,31)" fg:x="340" fg:w="121"/><text x="27.8027%" y="575.50">kernel::compar..</text></g><g><title>treediff::diff::diff (10 samples, 0.81%)</title><rect x="36.5478%" y="549" width="0.8104%" height="15" fill="rgb(237,43,8)" fg:x="451" fg:w="10"/><text x="36.7978%" y="559.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="37.2771%" y="533" width="0.0810%" height="15" fill="rgb(216,208,3)" fg:x="460" fg:w="1"/><text x="37.5271%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.2771%" y="517" width="0.0810%" height="15" fill="rgb(228,179,44)" fg:x="460" fg:w="1"/><text x="37.5271%" y="527.50"></text></g><g><title>engine::session::Session::save_entity_changes (178 samples, 14.42%)</title><rect x="23.1767%" y="613" width="14.4246%" height="15" fill="rgb(230,192,27)" fg:x="286" fg:w="178"/><text x="23.4267%" y="623.50">engine::session::Sessi..</text></g><g><title>engine::session::Session::world (3 samples, 0.24%)</title><rect x="37.3582%" y="597" width="0.2431%" height="15" fill="rgb(251,30,38)" fg:x="461" fg:w="3"/><text x="37.6082%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="37.3582%" y="581" width="0.2431%" height="15" fill="rgb(246,55,52)" fg:x="461" fg:w="3"/><text x="37.6082%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="37.4392%" y="565" width="0.1621%" height="15" fill="rgb(249,79,26)" fg:x="462" fg:w="2"/><text x="37.6892%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="37.4392%" y="549" width="0.1621%" height="15" fill="rgb(220,202,16)" fg:x="462" fg:w="2"/><text x="37.6892%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="37.4392%" y="533" width="0.1621%" height="15" fill="rgb(250,170,23)" fg:x="462" fg:w="2"/><text x="37.6892%" y="543.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="37.4392%" y="517" width="0.1621%" height="15" fill="rgb(230,7,37)" fg:x="462" fg:w="2"/><text x="37.6892%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="37.4392%" y="501" width="0.1621%" height="15" fill="rgb(213,71,1)" fg:x="462" fg:w="2"/><text x="37.6892%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="37.4392%" y="485" width="0.1621%" height="15" fill="rgb(227,87,39)" fg:x="462" fg:w="2"/><text x="37.6892%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="37.4392%" y="469" width="0.1621%" height="15" fill="rgb(210,41,29)" fg:x="462" fg:w="2"/><text x="37.6892%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.5203%" y="453" width="0.0810%" height="15" fill="rgb(206,191,31)" fg:x="463" fg:w="1"/><text x="37.7703%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="37.5203%" y="437" width="0.0810%" height="15" fill="rgb(247,75,54)" fg:x="463" fg:w="1"/><text x="37.7703%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.5203%" y="421" width="0.0810%" height="15" fill="rgb(208,54,50)" fg:x="463" fg:w="1"/><text x="37.7703%" y="431.50"></text></g><g><title>engine::session::Session::close (180 samples, 14.59%)</title><rect x="23.0956%" y="629" width="14.5867%" height="15" fill="rgb(214,90,37)" fg:x="285" fg:w="180"/><text x="23.3456%" y="639.50">engine::session::Sessi..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="37.6013%" y="613" width="0.0810%" height="15" fill="rgb(220,132,6)" fg:x="464" fg:w="1"/><text x="37.8513%" y="623.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="37.6013%" y="597" width="0.0810%" height="15" fill="rgb(213,167,7)" fg:x="464" fg:w="1"/><text x="37.8513%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="37.6013%" y="581" width="0.0810%" height="15" fill="rgb(243,36,27)" fg:x="464" fg:w="1"/><text x="37.8513%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="37.6013%" y="565" width="0.0810%" height="15" fill="rgb(235,147,12)" fg:x="464" fg:w="1"/><text x="37.8513%" y="575.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="37.6013%" y="549" width="0.0810%" height="15" fill="rgb(212,198,44)" fg:x="464" fg:w="1"/><text x="37.8513%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.7634%" y="565" width="0.0810%" height="15" fill="rgb(218,68,50)" fg:x="466" fg:w="1"/><text x="38.0134%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (3 samples, 0.24%)</title><rect x="37.6823%" y="581" width="0.2431%" height="15" fill="rgb(224,79,48)" fg:x="465" fg:w="3"/><text x="37.9323%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="37.8444%" y="565" width="0.0810%" height="15" fill="rgb(213,191,50)" fg:x="467" fg:w="1"/><text x="38.0944%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.8444%" y="549" width="0.0810%" height="15" fill="rgb(254,146,10)" fg:x="467" fg:w="1"/><text x="38.0944%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="37.9254%" y="469" width="0.1621%" height="15" fill="rgb(215,175,11)" fg:x="468" fg:w="2"/><text x="38.1754%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="37.9254%" y="453" width="0.1621%" height="15" fill="rgb(207,49,7)" fg:x="468" fg:w="2"/><text x="38.1754%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="37.9254%" y="437" width="0.1621%" height="15" fill="rgb(234,144,29)" fg:x="468" fg:w="2"/><text x="38.1754%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="37.9254%" y="421" width="0.1621%" height="15" fill="rgb(213,222,48)" fg:x="468" fg:w="2"/><text x="38.1754%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="37.9254%" y="405" width="0.1621%" height="15" fill="rgb(222,8,6)" fg:x="468" fg:w="2"/><text x="38.1754%" y="415.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="37.9254%" y="389" width="0.1621%" height="15" fill="rgb(221,114,49)" fg:x="468" fg:w="2"/><text x="38.1754%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="37.9254%" y="373" width="0.1621%" height="15" fill="rgb(250,140,42)" fg:x="468" fg:w="2"/><text x="38.1754%" y="383.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (6 samples, 0.49%)</title><rect x="37.6823%" y="597" width="0.4862%" height="15" fill="rgb(250,150,27)" fg:x="465" fg:w="6"/><text x="37.9323%" y="607.50"></text></g><g><title>kernel::surround::Surroundings::unpack (3 samples, 0.24%)</title><rect x="37.9254%" y="581" width="0.2431%" height="15" fill="rgb(252,159,3)" fg:x="468" fg:w="3"/><text x="38.1754%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="37.9254%" y="565" width="0.2431%" height="15" fill="rgb(241,182,3)" fg:x="468" fg:w="3"/><text x="38.1754%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="37.9254%" y="549" width="0.2431%" height="15" fill="rgb(236,3,9)" fg:x="468" fg:w="3"/><text x="38.1754%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="37.9254%" y="533" width="0.2431%" height="15" fill="rgb(223,227,51)" fg:x="468" fg:w="3"/><text x="38.1754%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="37.9254%" y="517" width="0.2431%" height="15" fill="rgb(232,133,30)" fg:x="468" fg:w="3"/><text x="38.1754%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="37.9254%" y="501" width="0.2431%" height="15" fill="rgb(209,93,27)" fg:x="468" fg:w="3"/><text x="38.1754%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="37.9254%" y="485" width="0.2431%" height="15" fill="rgb(208,108,34)" fg:x="468" fg:w="3"/><text x="38.1754%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="38.0875%" y="469" width="0.0810%" height="15" fill="rgb(215,189,13)" fg:x="470" fg:w="1"/><text x="38.3375%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="38.0875%" y="453" width="0.0810%" height="15" fill="rgb(206,88,23)" fg:x="470" fg:w="1"/><text x="38.3375%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="38.1686%" y="597" width="0.0810%" height="15" fill="rgb(240,173,0)" fg:x="471" fg:w="1"/><text x="38.4186%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="38.1686%" y="581" width="0.0810%" height="15" fill="rgb(223,106,52)" fg:x="471" fg:w="1"/><text x="38.4186%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.1686%" y="565" width="0.0810%" height="15" fill="rgb(206,130,16)" fg:x="471" fg:w="1"/><text x="38.4186%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="38.1686%" y="549" width="0.0810%" height="15" fill="rgb(220,54,25)" fg:x="471" fg:w="1"/><text x="38.4186%" y="559.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="38.1686%" y="533" width="0.0810%" height="15" fill="rgb(210,4,38)" fg:x="471" fg:w="1"/><text x="38.4186%" y="543.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="38.1686%" y="517" width="0.0810%" height="15" fill="rgb(238,94,39)" fg:x="471" fg:w="1"/><text x="38.4186%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="38.1686%" y="501" width="0.0810%" height="15" fill="rgb(234,124,34)" fg:x="471" fg:w="1"/><text x="38.4186%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="38.1686%" y="485" width="0.0810%" height="15" fill="rgb(221,91,40)" fg:x="471" fg:w="1"/><text x="38.4186%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.1686%" y="469" width="0.0810%" height="15" fill="rgb(246,53,28)" fg:x="471" fg:w="1"/><text x="38.4186%" y="479.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.08%)</title><rect x="38.1686%" y="453" width="0.0810%" height="15" fill="rgb(229,109,7)" fg:x="471" fg:w="1"/><text x="38.4186%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="38.2496%" y="549" width="0.0810%" height="15" fill="rgb(249,117,8)" fg:x="472" fg:w="1"/><text x="38.4996%" y="559.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="38.2496%" y="533" width="0.0810%" height="15" fill="rgb(210,181,1)" fg:x="472" fg:w="1"/><text x="38.4996%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.3306%" y="437" width="0.0810%" height="15" fill="rgb(211,66,1)" fg:x="473" fg:w="1"/><text x="38.5806%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="38.3306%" y="421" width="0.0810%" height="15" fill="rgb(221,90,14)" fg:x="473" fg:w="1"/><text x="38.5806%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="38.4117%" y="421" width="0.0810%" height="15" fill="rgb(219,222,44)" fg:x="474" fg:w="1"/><text x="38.6617%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="38.4117%" y="405" width="0.0810%" height="15" fill="rgb(246,34,33)" fg:x="474" fg:w="1"/><text x="38.6617%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="38.4117%" y="389" width="0.0810%" height="15" fill="rgb(227,135,41)" fg:x="474" fg:w="1"/><text x="38.6617%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.4117%" y="373" width="0.0810%" height="15" fill="rgb(226,15,14)" fg:x="474" fg:w="1"/><text x="38.6617%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="38.3306%" y="469" width="0.2431%" height="15" fill="rgb(236,148,47)" fg:x="473" fg:w="3"/><text x="38.5806%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="38.3306%" y="453" width="0.2431%" height="15" fill="rgb(233,162,52)" fg:x="473" fg:w="3"/><text x="38.5806%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="38.4117%" y="437" width="0.1621%" height="15" fill="rgb(244,35,28)" fg:x="474" fg:w="2"/><text x="38.6617%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.4927%" y="421" width="0.0810%" height="15" fill="rgb(205,121,10)" fg:x="475" fg:w="1"/><text x="38.7427%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="38.4927%" y="405" width="0.0810%" height="15" fill="rgb(250,58,18)" fg:x="475" fg:w="1"/><text x="38.7427%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="38.4927%" y="389" width="0.0810%" height="15" fill="rgb(216,37,13)" fg:x="475" fg:w="1"/><text x="38.7427%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.4927%" y="373" width="0.0810%" height="15" fill="rgb(221,215,42)" fg:x="475" fg:w="1"/><text x="38.7427%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.4927%" y="357" width="0.0810%" height="15" fill="rgb(217,214,19)" fg:x="475" fg:w="1"/><text x="38.7427%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="38.5737%" y="469" width="0.0810%" height="15" fill="rgb(233,139,13)" fg:x="476" fg:w="1"/><text x="38.8237%" y="479.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (5 samples, 0.41%)</title><rect x="38.3306%" y="533" width="0.4052%" height="15" fill="rgb(247,168,23)" fg:x="473" fg:w="5"/><text x="38.5806%" y="543.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (5 samples, 0.41%)</title><rect x="38.3306%" y="517" width="0.4052%" height="15" fill="rgb(207,202,1)" fg:x="473" fg:w="5"/><text x="38.5806%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.41%)</title><rect x="38.3306%" y="501" width="0.4052%" height="15" fill="rgb(220,155,48)" fg:x="473" fg:w="5"/><text x="38.5806%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="38.3306%" y="485" width="0.4052%" height="15" fill="rgb(250,43,26)" fg:x="473" fg:w="5"/><text x="38.5806%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.6548%" y="469" width="0.0810%" height="15" fill="rgb(212,190,23)" fg:x="477" fg:w="1"/><text x="38.9048%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.6548%" y="453" width="0.0810%" height="15" fill="rgb(216,39,24)" fg:x="477" fg:w="1"/><text x="38.9048%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="38.6548%" y="437" width="0.0810%" height="15" fill="rgb(252,113,16)" fg:x="477" fg:w="1"/><text x="38.9048%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.6548%" y="421" width="0.0810%" height="15" fill="rgb(208,113,19)" fg:x="477" fg:w="1"/><text x="38.9048%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.6548%" y="405" width="0.0810%" height="15" fill="rgb(234,107,25)" fg:x="477" fg:w="1"/><text x="38.9048%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.6548%" y="389" width="0.0810%" height="15" fill="rgb(234,217,51)" fg:x="477" fg:w="1"/><text x="38.9048%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="38.7358%" y="469" width="0.0810%" height="15" fill="rgb(251,29,42)" fg:x="478" fg:w="1"/><text x="38.9858%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="38.7358%" y="485" width="0.1621%" height="15" fill="rgb(221,62,51)" fg:x="478" fg:w="2"/><text x="38.9858%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.8169%" y="469" width="0.0810%" height="15" fill="rgb(240,192,43)" fg:x="479" fg:w="1"/><text x="39.0669%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="38.8979%" y="453" width="0.1621%" height="15" fill="rgb(224,157,47)" fg:x="480" fg:w="2"/><text x="39.1479%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="39.0600%" y="421" width="0.0810%" height="15" fill="rgb(226,84,45)" fg:x="482" fg:w="1"/><text x="39.3100%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.0600%" y="405" width="0.0810%" height="15" fill="rgb(208,207,23)" fg:x="482" fg:w="1"/><text x="39.3100%" y="415.50"></text></g><g><title>engine::internal::Entities::prepare_entity (12 samples, 0.97%)</title><rect x="38.2496%" y="565" width="0.9724%" height="15" fill="rgb(253,34,51)" fg:x="472" fg:w="12"/><text x="38.4996%" y="575.50"></text></g><g><title>kernel::model::deserialize_entity (11 samples, 0.89%)</title><rect x="38.3306%" y="549" width="0.8914%" height="15" fill="rgb(227,26,34)" fg:x="473" fg:w="11"/><text x="38.5806%" y="559.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.49%)</title><rect x="38.7358%" y="533" width="0.4862%" height="15" fill="rgb(245,75,19)" fg:x="478" fg:w="6"/><text x="38.9858%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.49%)</title><rect x="38.7358%" y="517" width="0.4862%" height="15" fill="rgb(250,191,31)" fg:x="478" fg:w="6"/><text x="38.9858%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="38.7358%" y="501" width="0.4862%" height="15" fill="rgb(224,11,50)" fg:x="478" fg:w="6"/><text x="38.9858%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="38.8979%" y="485" width="0.3241%" height="15" fill="rgb(231,171,7)" fg:x="480" fg:w="4"/><text x="39.1479%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="38.8979%" y="469" width="0.3241%" height="15" fill="rgb(252,214,10)" fg:x="480" fg:w="4"/><text x="39.1479%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="39.0600%" y="453" width="0.1621%" height="15" fill="rgb(249,45,46)" fg:x="482" fg:w="2"/><text x="39.3100%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="39.0600%" y="437" width="0.1621%" height="15" fill="rgb(240,173,7)" fg:x="482" fg:w="2"/><text x="39.3100%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="39.1410%" y="421" width="0.0810%" height="15" fill="rgb(235,214,13)" fg:x="483" fg:w="1"/><text x="39.3910%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="39.1410%" y="405" width="0.0810%" height="15" fill="rgb(245,156,8)" fg:x="483" fg:w="1"/><text x="39.3910%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="39.1410%" y="389" width="0.0810%" height="15" fill="rgb(235,46,12)" fg:x="483" fg:w="1"/><text x="39.3910%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="39.1410%" y="373" width="0.0810%" height="15" fill="rgb(221,81,14)" fg:x="483" fg:w="1"/><text x="39.3910%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.1410%" y="357" width="0.0810%" height="15" fill="rgb(238,207,9)" fg:x="483" fg:w="1"/><text x="39.3910%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.1410%" y="341" width="0.0810%" height="15" fill="rgb(224,129,35)" fg:x="483" fg:w="1"/><text x="39.3910%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.1410%" y="325" width="0.0810%" height="15" fill="rgb(243,218,34)" fg:x="483" fg:w="1"/><text x="39.3910%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.2220%" y="549" width="0.0810%" height="15" fill="rgb(220,166,13)" fg:x="484" fg:w="1"/><text x="39.4720%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.2220%" y="533" width="0.0810%" height="15" fill="rgb(227,167,49)" fg:x="484" fg:w="1"/><text x="39.4720%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.2220%" y="517" width="0.0810%" height="15" fill="rgb(234,142,12)" fg:x="484" fg:w="1"/><text x="39.4720%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.2220%" y="501" width="0.0810%" height="15" fill="rgb(207,100,48)" fg:x="484" fg:w="1"/><text x="39.4720%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.2220%" y="485" width="0.0810%" height="15" fill="rgb(210,25,14)" fg:x="484" fg:w="1"/><text x="39.4720%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.2220%" y="469" width="0.0810%" height="15" fill="rgb(246,116,27)" fg:x="484" fg:w="1"/><text x="39.4720%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.2220%" y="453" width="0.0810%" height="15" fill="rgb(214,193,42)" fg:x="484" fg:w="1"/><text x="39.4720%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.2220%" y="437" width="0.0810%" height="15" fill="rgb(214,122,8)" fg:x="484" fg:w="1"/><text x="39.4720%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.2220%" y="421" width="0.0810%" height="15" fill="rgb(244,173,18)" fg:x="484" fg:w="1"/><text x="39.4720%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.2220%" y="405" width="0.0810%" height="15" fill="rgb(232,68,19)" fg:x="484" fg:w="1"/><text x="39.4720%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.2220%" y="389" width="0.0810%" height="15" fill="rgb(236,224,1)" fg:x="484" fg:w="1"/><text x="39.4720%" y="399.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="39.2220%" y="373" width="0.0810%" height="15" fill="rgb(240,11,8)" fg:x="484" fg:w="1"/><text x="39.4720%" y="383.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="39.2220%" y="357" width="0.0810%" height="15" fill="rgb(244,159,20)" fg:x="484" fg:w="1"/><text x="39.4720%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.3031%" y="437" width="0.0810%" height="15" fill="rgb(240,223,54)" fg:x="485" fg:w="1"/><text x="39.5531%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.3031%" y="421" width="0.0810%" height="15" fill="rgb(237,146,5)" fg:x="485" fg:w="1"/><text x="39.5531%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="39.3031%" y="405" width="0.0810%" height="15" fill="rgb(218,221,32)" fg:x="485" fg:w="1"/><text x="39.5531%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="39.3031%" y="389" width="0.0810%" height="15" fill="rgb(244,96,26)" fg:x="485" fg:w="1"/><text x="39.5531%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="39.3031%" y="373" width="0.0810%" height="15" fill="rgb(245,184,37)" fg:x="485" fg:w="1"/><text x="39.5531%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="39.3031%" y="357" width="0.0810%" height="15" fill="rgb(248,91,47)" fg:x="485" fg:w="1"/><text x="39.5531%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="39.3031%" y="341" width="0.0810%" height="15" fill="rgb(243,199,8)" fg:x="485" fg:w="1"/><text x="39.5531%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="39.3031%" y="325" width="0.0810%" height="15" fill="rgb(249,12,15)" fg:x="485" fg:w="1"/><text x="39.5531%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="39.3031%" y="309" width="0.0810%" height="15" fill="rgb(245,97,12)" fg:x="485" fg:w="1"/><text x="39.5531%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="39.3031%" y="293" width="0.0810%" height="15" fill="rgb(244,61,1)" fg:x="485" fg:w="1"/><text x="39.5531%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="39.3031%" y="277" width="0.0810%" height="15" fill="rgb(222,194,10)" fg:x="485" fg:w="1"/><text x="39.5531%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.3031%" y="261" width="0.0810%" height="15" fill="rgb(226,178,8)" fg:x="485" fg:w="1"/><text x="39.5531%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (15 samples, 1.22%)</title><rect x="38.2496%" y="581" width="1.2156%" height="15" fill="rgb(241,32,34)" fg:x="472" fg:w="15"/><text x="38.4996%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="39.2220%" y="565" width="0.2431%" height="15" fill="rgb(254,26,6)" fg:x="484" fg:w="3"/><text x="39.4720%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="39.3031%" y="549" width="0.1621%" height="15" fill="rgb(249,71,11)" fg:x="485" fg:w="2"/><text x="39.5531%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="39.3031%" y="533" width="0.1621%" height="15" fill="rgb(232,170,27)" fg:x="485" fg:w="2"/><text x="39.5531%" y="543.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="39.3031%" y="517" width="0.1621%" height="15" fill="rgb(214,223,17)" fg:x="485" fg:w="2"/><text x="39.5531%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="39.3031%" y="501" width="0.1621%" height="15" fill="rgb(250,18,15)" fg:x="485" fg:w="2"/><text x="39.5531%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="39.3031%" y="485" width="0.1621%" height="15" fill="rgb(212,153,51)" fg:x="485" fg:w="2"/><text x="39.5531%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="39.3031%" y="469" width="0.1621%" height="15" fill="rgb(219,194,12)" fg:x="485" fg:w="2"/><text x="39.5531%" y="479.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="39.3031%" y="453" width="0.1621%" height="15" fill="rgb(212,58,17)" fg:x="485" fg:w="2"/><text x="39.5531%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="39.3841%" y="437" width="0.0810%" height="15" fill="rgb(254,5,10)" fg:x="486" fg:w="1"/><text x="39.6341%" y="447.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="39.3841%" y="421" width="0.0810%" height="15" fill="rgb(246,91,7)" fg:x="486" fg:w="1"/><text x="39.6341%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="39.3841%" y="405" width="0.0810%" height="15" fill="rgb(218,108,49)" fg:x="486" fg:w="1"/><text x="39.6341%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.3841%" y="389" width="0.0810%" height="15" fill="rgb(238,123,20)" fg:x="486" fg:w="1"/><text x="39.6341%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="39.3841%" y="373" width="0.0810%" height="15" fill="rgb(231,69,23)" fg:x="486" fg:w="1"/><text x="39.6341%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.3841%" y="357" width="0.0810%" height="15" fill="rgb(230,209,3)" fg:x="486" fg:w="1"/><text x="39.6341%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.3841%" y="341" width="0.0810%" height="15" fill="rgb(231,19,0)" fg:x="486" fg:w="1"/><text x="39.6341%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="39.3841%" y="325" width="0.0810%" height="15" fill="rgb(226,192,25)" fg:x="486" fg:w="1"/><text x="39.6341%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="39.3841%" y="309" width="0.0810%" height="15" fill="rgb(223,175,53)" fg:x="486" fg:w="1"/><text x="39.6341%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="39.3841%" y="293" width="0.0810%" height="15" fill="rgb(248,35,51)" fg:x="486" fg:w="1"/><text x="39.6341%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="39.3841%" y="277" width="0.0810%" height="15" fill="rgb(230,37,26)" fg:x="486" fg:w="1"/><text x="39.6341%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="39.3841%" y="261" width="0.0810%" height="15" fill="rgb(206,120,22)" fg:x="486" fg:w="1"/><text x="39.6341%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="39.3841%" y="245" width="0.0810%" height="15" fill="rgb(207,165,28)" fg:x="486" fg:w="1"/><text x="39.6341%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="39.3841%" y="229" width="0.0810%" height="15" fill="rgb(226,23,46)" fg:x="486" fg:w="1"/><text x="39.6341%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="39.3841%" y="213" width="0.0810%" height="15" fill="rgb(208,130,44)" fg:x="486" fg:w="1"/><text x="39.6341%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="39.3841%" y="197" width="0.0810%" height="15" fill="rgb(231,67,8)" fg:x="486" fg:w="1"/><text x="39.6341%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="39.3841%" y="181" width="0.0810%" height="15" fill="rgb(205,183,22)" fg:x="486" fg:w="1"/><text x="39.6341%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="39.3841%" y="165" width="0.0810%" height="15" fill="rgb(224,47,9)" fg:x="486" fg:w="1"/><text x="39.6341%" y="175.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="39.3841%" y="149" width="0.0810%" height="15" fill="rgb(250,183,49)" fg:x="486" fg:w="1"/><text x="39.6341%" y="159.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="39.3841%" y="133" width="0.0810%" height="15" fill="rgb(220,151,39)" fg:x="486" fg:w="1"/><text x="39.6341%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="39.4652%" y="581" width="0.0810%" height="15" fill="rgb(220,118,20)" fg:x="487" fg:w="1"/><text x="39.7152%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.4652%" y="565" width="0.0810%" height="15" fill="rgb(231,65,51)" fg:x="487" fg:w="1"/><text x="39.7152%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.7083%" y="565" width="0.0810%" height="15" fill="rgb(253,125,37)" fg:x="490" fg:w="1"/><text x="39.9583%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.7083%" y="549" width="0.0810%" height="15" fill="rgb(232,102,6)" fg:x="490" fg:w="1"/><text x="39.9583%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.7083%" y="533" width="0.0810%" height="15" fill="rgb(251,105,13)" fg:x="490" fg:w="1"/><text x="39.9583%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.7083%" y="517" width="0.0810%" height="15" fill="rgb(222,179,29)" fg:x="490" fg:w="1"/><text x="39.9583%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.7083%" y="501" width="0.0810%" height="15" fill="rgb(229,180,53)" fg:x="490" fg:w="1"/><text x="39.9583%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.7083%" y="485" width="0.0810%" height="15" fill="rgb(238,104,13)" fg:x="490" fg:w="1"/><text x="39.9583%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.7083%" y="469" width="0.0810%" height="15" fill="rgb(210,130,5)" fg:x="490" fg:w="1"/><text x="39.9583%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.7083%" y="453" width="0.0810%" height="15" fill="rgb(233,87,49)" fg:x="490" fg:w="1"/><text x="39.9583%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.7083%" y="437" width="0.0810%" height="15" fill="rgb(243,34,9)" fg:x="490" fg:w="1"/><text x="39.9583%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.7083%" y="421" width="0.0810%" height="15" fill="rgb(235,225,10)" fg:x="490" fg:w="1"/><text x="39.9583%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.7083%" y="405" width="0.0810%" height="15" fill="rgb(212,0,30)" fg:x="490" fg:w="1"/><text x="39.9583%" y="415.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="39.8703%" y="517" width="0.0810%" height="15" fill="rgb(211,177,0)" fg:x="492" fg:w="1"/><text x="40.1203%" y="527.50"></text></g><g><title>kernel::model::EntityRef::into_entry (3 samples, 0.24%)</title><rect x="39.7893%" y="549" width="0.2431%" height="15" fill="rgb(225,220,11)" fg:x="491" fg:w="3"/><text x="40.0393%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="39.8703%" y="533" width="0.1621%" height="15" fill="rgb(215,10,13)" fg:x="492" fg:w="2"/><text x="40.1203%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="39.9514%" y="517" width="0.0810%" height="15" fill="rgb(240,177,14)" fg:x="493" fg:w="1"/><text x="40.2014%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="39.9514%" y="501" width="0.0810%" height="15" fill="rgb(243,7,39)" fg:x="493" fg:w="1"/><text x="40.2014%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="39.9514%" y="485" width="0.0810%" height="15" fill="rgb(212,99,0)" fg:x="493" fg:w="1"/><text x="40.2014%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.9514%" y="469" width="0.0810%" height="15" fill="rgb(225,162,48)" fg:x="493" fg:w="1"/><text x="40.2014%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="39.9514%" y="453" width="0.0810%" height="15" fill="rgb(246,16,25)" fg:x="493" fg:w="1"/><text x="40.2014%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="39.9514%" y="437" width="0.0810%" height="15" fill="rgb(220,150,2)" fg:x="493" fg:w="1"/><text x="40.2014%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="39.9514%" y="421" width="0.0810%" height="15" fill="rgb(237,113,11)" fg:x="493" fg:w="1"/><text x="40.2014%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.9514%" y="405" width="0.0810%" height="15" fill="rgb(236,70,20)" fg:x="493" fg:w="1"/><text x="40.2014%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.9514%" y="389" width="0.0810%" height="15" fill="rgb(234,94,7)" fg:x="493" fg:w="1"/><text x="40.2014%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.9514%" y="373" width="0.0810%" height="15" fill="rgb(250,221,0)" fg:x="493" fg:w="1"/><text x="40.2014%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="39.9514%" y="357" width="0.0810%" height="15" fill="rgb(245,149,46)" fg:x="493" fg:w="1"/><text x="40.2014%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="39.9514%" y="341" width="0.0810%" height="15" fill="rgb(215,37,27)" fg:x="493" fg:w="1"/><text x="40.2014%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="39.9514%" y="325" width="0.0810%" height="15" fill="rgb(232,65,3)" fg:x="493" fg:w="1"/><text x="40.2014%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="39.9514%" y="309" width="0.0810%" height="15" fill="rgb(214,2,16)" fg:x="493" fg:w="1"/><text x="40.2014%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="39.9514%" y="293" width="0.0810%" height="15" fill="rgb(227,131,50)" fg:x="493" fg:w="1"/><text x="40.2014%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="39.9514%" y="277" width="0.0810%" height="15" fill="rgb(247,131,45)" fg:x="493" fg:w="1"/><text x="40.2014%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="39.9514%" y="261" width="0.0810%" height="15" fill="rgb(215,97,47)" fg:x="493" fg:w="1"/><text x="40.2014%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="39.9514%" y="245" width="0.0810%" height="15" fill="rgb(233,143,12)" fg:x="493" fg:w="1"/><text x="40.2014%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="39.9514%" y="229" width="0.0810%" height="15" fill="rgb(222,57,17)" fg:x="493" fg:w="1"/><text x="40.2014%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="39.9514%" y="213" width="0.0810%" height="15" fill="rgb(214,119,38)" fg:x="493" fg:w="1"/><text x="40.2014%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="39.9514%" y="197" width="0.0810%" height="15" fill="rgb(217,28,47)" fg:x="493" fg:w="1"/><text x="40.2014%" y="207.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="39.9514%" y="181" width="0.0810%" height="15" fill="rgb(231,14,52)" fg:x="493" fg:w="1"/><text x="40.2014%" y="191.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="39.9514%" y="165" width="0.0810%" height="15" fill="rgb(220,158,18)" fg:x="493" fg:w="1"/><text x="40.2014%" y="175.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="40.1135%" y="485" width="0.0810%" height="15" fill="rgb(222,143,46)" fg:x="495" fg:w="1"/><text x="40.3635%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.1135%" y="469" width="0.0810%" height="15" fill="rgb(227,165,5)" fg:x="495" fg:w="1"/><text x="40.3635%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.1135%" y="453" width="0.0810%" height="15" fill="rgb(216,222,49)" fg:x="495" fg:w="1"/><text x="40.3635%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.1135%" y="437" width="0.0810%" height="15" fill="rgb(238,73,39)" fg:x="495" fg:w="1"/><text x="40.3635%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.1135%" y="421" width="0.0810%" height="15" fill="rgb(252,115,9)" fg:x="495" fg:w="1"/><text x="40.3635%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.1135%" y="405" width="0.0810%" height="15" fill="rgb(238,202,4)" fg:x="495" fg:w="1"/><text x="40.3635%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.1135%" y="389" width="0.0810%" height="15" fill="rgb(252,153,44)" fg:x="495" fg:w="1"/><text x="40.3635%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.1135%" y="373" width="0.0810%" height="15" fill="rgb(235,128,27)" fg:x="495" fg:w="1"/><text x="40.3635%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.1135%" y="357" width="0.0810%" height="15" fill="rgb(221,121,47)" fg:x="495" fg:w="1"/><text x="40.3635%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.1135%" y="341" width="0.0810%" height="15" fill="rgb(247,211,47)" fg:x="495" fg:w="1"/><text x="40.3635%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.1135%" y="325" width="0.0810%" height="15" fill="rgb(252,47,49)" fg:x="495" fg:w="1"/><text x="40.3635%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.1135%" y="309" width="0.0810%" height="15" fill="rgb(219,119,53)" fg:x="495" fg:w="1"/><text x="40.3635%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.1135%" y="293" width="0.0810%" height="15" fill="rgb(243,165,53)" fg:x="495" fg:w="1"/><text x="40.3635%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="40.2755%" y="309" width="0.0810%" height="15" fill="rgb(230,12,35)" fg:x="497" fg:w="1"/><text x="40.5255%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="40.2755%" y="293" width="0.0810%" height="15" fill="rgb(239,57,49)" fg:x="497" fg:w="1"/><text x="40.5255%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="40.2755%" y="277" width="0.0810%" height="15" fill="rgb(231,154,7)" fg:x="497" fg:w="1"/><text x="40.5255%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="40.2755%" y="261" width="0.0810%" height="15" fill="rgb(248,81,34)" fg:x="497" fg:w="1"/><text x="40.5255%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.2755%" y="245" width="0.0810%" height="15" fill="rgb(247,9,5)" fg:x="497" fg:w="1"/><text x="40.5255%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="40.2755%" y="357" width="0.1621%" height="15" fill="rgb(228,172,27)" fg:x="497" fg:w="2"/><text x="40.5255%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="40.2755%" y="341" width="0.1621%" height="15" fill="rgb(230,57,44)" fg:x="497" fg:w="2"/><text x="40.5255%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="40.2755%" y="325" width="0.1621%" height="15" fill="rgb(249,35,22)" fg:x="497" fg:w="2"/><text x="40.5255%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="40.3566%" y="309" width="0.0810%" height="15" fill="rgb(250,137,27)" fg:x="498" fg:w="1"/><text x="40.6066%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="40.4376%" y="357" width="0.0810%" height="15" fill="rgb(251,57,31)" fg:x="499" fg:w="1"/><text x="40.6876%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="40.4376%" y="341" width="0.0810%" height="15" fill="rgb(238,60,0)" fg:x="499" fg:w="1"/><text x="40.6876%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="40.4376%" y="325" width="0.0810%" height="15" fill="rgb(242,185,39)" fg:x="499" fg:w="1"/><text x="40.6876%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="40.4376%" y="309" width="0.0810%" height="15" fill="rgb(240,63,43)" fg:x="499" fg:w="1"/><text x="40.6876%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.4376%" y="293" width="0.0810%" height="15" fill="rgb(236,155,6)" fg:x="499" fg:w="1"/><text x="40.6876%" y="303.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (5 samples, 0.41%)</title><rect x="40.1945%" y="469" width="0.4052%" height="15" fill="rgb(215,11,29)" fg:x="496" fg:w="5"/><text x="40.4445%" y="479.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (5 samples, 0.41%)</title><rect x="40.1945%" y="453" width="0.4052%" height="15" fill="rgb(228,180,48)" fg:x="496" fg:w="5"/><text x="40.4445%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.41%)</title><rect x="40.1945%" y="437" width="0.4052%" height="15" fill="rgb(241,102,12)" fg:x="496" fg:w="5"/><text x="40.4445%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="40.1945%" y="421" width="0.4052%" height="15" fill="rgb(246,213,4)" fg:x="496" fg:w="5"/><text x="40.4445%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="40.2755%" y="405" width="0.3241%" height="15" fill="rgb(218,134,35)" fg:x="497" fg:w="4"/><text x="40.5255%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="40.2755%" y="389" width="0.3241%" height="15" fill="rgb(251,117,35)" fg:x="497" fg:w="4"/><text x="40.5255%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="40.2755%" y="373" width="0.3241%" height="15" fill="rgb(206,156,45)" fg:x="497" fg:w="4"/><text x="40.5255%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.5186%" y="357" width="0.0810%" height="15" fill="rgb(218,52,27)" fg:x="500" fg:w="1"/><text x="40.7686%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="40.5186%" y="341" width="0.0810%" height="15" fill="rgb(238,83,36)" fg:x="500" fg:w="1"/><text x="40.7686%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="40.5186%" y="325" width="0.0810%" height="15" fill="rgb(218,53,43)" fg:x="500" fg:w="1"/><text x="40.7686%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="40.5186%" y="309" width="0.0810%" height="15" fill="rgb(239,54,39)" fg:x="500" fg:w="1"/><text x="40.7686%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="40.5997%" y="421" width="0.0810%" height="15" fill="rgb(212,198,13)" fg:x="501" fg:w="1"/><text x="40.8497%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="40.6807%" y="357" width="0.1621%" height="15" fill="rgb(234,54,46)" fg:x="502" fg:w="2"/><text x="40.9307%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="40.6807%" y="341" width="0.1621%" height="15" fill="rgb(217,120,7)" fg:x="502" fg:w="2"/><text x="40.9307%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.8428%" y="357" width="0.0810%" height="15" fill="rgb(246,39,15)" fg:x="504" fg:w="1"/><text x="41.0928%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="41.0049%" y="341" width="0.0810%" height="15" fill="rgb(242,143,31)" fg:x="506" fg:w="1"/><text x="41.2549%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="41.0049%" y="325" width="0.0810%" height="15" fill="rgb(252,60,24)" fg:x="506" fg:w="1"/><text x="41.2549%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="41.0049%" y="309" width="0.0810%" height="15" fill="rgb(249,220,7)" fg:x="506" fg:w="1"/><text x="41.2549%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.0049%" y="293" width="0.0810%" height="15" fill="rgb(236,67,13)" fg:x="506" fg:w="1"/><text x="41.2549%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.0049%" y="277" width="0.0810%" height="15" fill="rgb(210,62,39)" fg:x="506" fg:w="1"/><text x="41.2549%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.0049%" y="261" width="0.0810%" height="15" fill="rgb(219,122,53)" fg:x="506" fg:w="1"/><text x="41.2549%" y="271.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="41.0859%" y="341" width="0.0810%" height="15" fill="rgb(218,87,25)" fg:x="507" fg:w="1"/><text x="41.3359%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="41.1669%" y="309" width="0.0810%" height="15" fill="rgb(234,179,48)" fg:x="508" fg:w="1"/><text x="41.4169%" y="319.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="41.1669%" y="293" width="0.0810%" height="15" fill="rgb(248,90,0)" fg:x="508" fg:w="1"/><text x="41.4169%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (15 samples, 1.22%)</title><rect x="40.1135%" y="517" width="1.2156%" height="15" fill="rgb(207,228,37)" fg:x="495" fg:w="15"/><text x="40.3635%" y="527.50"></text></g><g><title>engine::internal::Entities::prepare_entity (15 samples, 1.22%)</title><rect x="40.1135%" y="501" width="1.2156%" height="15" fill="rgb(235,214,15)" fg:x="495" fg:w="15"/><text x="40.3635%" y="511.50"></text></g><g><title>kernel::model::deserialize_entity (14 samples, 1.13%)</title><rect x="40.1945%" y="485" width="1.1345%" height="15" fill="rgb(210,144,39)" fg:x="496" fg:w="14"/><text x="40.4445%" y="495.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.73%)</title><rect x="40.5997%" y="469" width="0.7293%" height="15" fill="rgb(222,67,41)" fg:x="501" fg:w="9"/><text x="40.8497%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.73%)</title><rect x="40.5997%" y="453" width="0.7293%" height="15" fill="rgb(205,35,37)" fg:x="501" fg:w="9"/><text x="40.8497%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.73%)</title><rect x="40.5997%" y="437" width="0.7293%" height="15" fill="rgb(216,125,40)" fg:x="501" fg:w="9"/><text x="40.8497%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.65%)</title><rect x="40.6807%" y="421" width="0.6483%" height="15" fill="rgb(228,227,20)" fg:x="502" fg:w="8"/><text x="40.9307%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.65%)</title><rect x="40.6807%" y="405" width="0.6483%" height="15" fill="rgb(242,173,45)" fg:x="502" fg:w="8"/><text x="40.9307%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.65%)</title><rect x="40.6807%" y="389" width="0.6483%" height="15" fill="rgb(215,79,24)" fg:x="502" fg:w="8"/><text x="40.9307%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.65%)</title><rect x="40.6807%" y="373" width="0.6483%" height="15" fill="rgb(238,164,38)" fg:x="502" fg:w="8"/><text x="40.9307%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="40.9238%" y="357" width="0.4052%" height="15" fill="rgb(245,196,38)" fg:x="505" fg:w="5"/><text x="41.1738%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="41.1669%" y="341" width="0.1621%" height="15" fill="rgb(231,217,29)" fg:x="508" fg:w="2"/><text x="41.4169%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="41.1669%" y="325" width="0.1621%" height="15" fill="rgb(245,6,4)" fg:x="508" fg:w="2"/><text x="41.4169%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.2480%" y="309" width="0.0810%" height="15" fill="rgb(214,76,49)" fg:x="509" fg:w="1"/><text x="41.4980%" y="319.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (22 samples, 1.78%)</title><rect x="39.7893%" y="565" width="1.7828%" height="15" fill="rgb(205,96,12)" fg:x="491" fg:w="22"/><text x="40.0393%" y="575.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::scope (19 samples, 1.54%)</title><rect x="40.0324%" y="549" width="1.5397%" height="15" fill="rgb(243,131,4)" fg:x="494" fg:w="19"/><text x="40.2824%" y="559.50"></text></g><g><title>kernel::model::Entity::load_scope (19 samples, 1.54%)</title><rect x="40.0324%" y="533" width="1.5397%" height="15" fill="rgb(214,114,4)" fg:x="494" fg:w="19"/><text x="40.2824%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="41.3290%" y="517" width="0.2431%" height="15" fill="rgb(234,215,15)" fg:x="510" fg:w="3"/><text x="41.5790%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="41.3290%" y="501" width="0.2431%" height="15" fill="rgb(250,216,45)" fg:x="510" fg:w="3"/><text x="41.5790%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="41.3290%" y="485" width="0.2431%" height="15" fill="rgb(236,128,4)" fg:x="510" fg:w="3"/><text x="41.5790%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="41.3290%" y="469" width="0.2431%" height="15" fill="rgb(234,50,33)" fg:x="510" fg:w="3"/><text x="41.5790%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="41.4100%" y="453" width="0.1621%" height="15" fill="rgb(253,131,37)" fg:x="511" fg:w="2"/><text x="41.6600%" y="463.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living (27 samples, 2.19%)</title><rect x="39.5462%" y="581" width="2.1880%" height="15" fill="rgb(218,55,27)" fg:x="488" fg:w="27"/><text x="39.7962%" y="591.50">e..</text></g><g><title>engine::session::Session::world (2 samples, 0.16%)</title><rect x="41.5721%" y="565" width="0.1621%" height="15" fill="rgb(241,220,28)" fg:x="513" fg:w="2"/><text x="41.8221%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="41.6532%" y="549" width="0.0810%" height="15" fill="rgb(241,90,48)" fg:x="514" fg:w="1"/><text x="41.9032%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="41.6532%" y="533" width="0.0810%" height="15" fill="rgb(216,43,37)" fg:x="514" fg:w="1"/><text x="41.9032%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="41.6532%" y="517" width="0.0810%" height="15" fill="rgb(207,173,9)" fg:x="514" fg:w="1"/><text x="41.9032%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="41.6532%" y="501" width="0.0810%" height="15" fill="rgb(240,126,30)" fg:x="514" fg:w="1"/><text x="41.9032%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.6532%" y="485" width="0.0810%" height="15" fill="rgb(228,178,53)" fg:x="514" fg:w="1"/><text x="41.9032%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.6532%" y="469" width="0.0810%" height="15" fill="rgb(217,33,4)" fg:x="514" fg:w="1"/><text x="41.9032%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="41.6532%" y="453" width="0.0810%" height="15" fill="rgb(206,124,34)" fg:x="514" fg:w="1"/><text x="41.9032%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="41.6532%" y="437" width="0.0810%" height="15" fill="rgb(208,122,53)" fg:x="514" fg:w="1"/><text x="41.9032%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.6532%" y="421" width="0.0810%" height="15" fill="rgb(215,202,26)" fg:x="514" fg:w="1"/><text x="41.9032%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.6532%" y="405" width="0.0810%" height="15" fill="rgb(232,198,31)" fg:x="514" fg:w="1"/><text x="41.9032%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.6532%" y="389" width="0.0810%" height="15" fill="rgb(222,23,35)" fg:x="514" fg:w="1"/><text x="41.9032%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="41.6532%" y="373" width="0.0810%" height="15" fill="rgb(242,27,53)" fg:x="514" fg:w="1"/><text x="41.9032%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="41.6532%" y="357" width="0.0810%" height="15" fill="rgb(210,216,42)" fg:x="514" fg:w="1"/><text x="41.9032%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="41.6532%" y="341" width="0.0810%" height="15" fill="rgb(234,39,38)" fg:x="514" fg:w="1"/><text x="41.9032%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="41.6532%" y="325" width="0.0810%" height="15" fill="rgb(235,126,54)" fg:x="514" fg:w="1"/><text x="41.9032%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="41.6532%" y="309" width="0.0810%" height="15" fill="rgb(235,150,33)" fg:x="514" fg:w="1"/><text x="41.9032%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="41.6532%" y="293" width="0.0810%" height="15" fill="rgb(249,49,53)" fg:x="514" fg:w="1"/><text x="41.9032%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="41.6532%" y="277" width="0.0810%" height="15" fill="rgb(238,60,50)" fg:x="514" fg:w="1"/><text x="41.9032%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="41.6532%" y="261" width="0.0810%" height="15" fill="rgb(210,5,2)" fg:x="514" fg:w="1"/><text x="41.9032%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="41.6532%" y="245" width="0.0810%" height="15" fill="rgb(214,207,24)" fg:x="514" fg:w="1"/><text x="41.9032%" y="255.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="41.6532%" y="229" width="0.0810%" height="15" fill="rgb(228,173,2)" fg:x="514" fg:w="1"/><text x="41.9032%" y="239.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="41.6532%" y="213" width="0.0810%" height="15" fill="rgb(244,26,8)" fg:x="514" fg:w="1"/><text x="41.9032%" y="223.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="41.7342%" y="581" width="0.0810%" height="15" fill="rgb(249,153,35)" fg:x="515" fg:w="1"/><text x="41.9842%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.8152%" y="565" width="0.0810%" height="15" fill="rgb(221,215,40)" fg:x="516" fg:w="1"/><text x="42.0652%" y="575.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_name (46 samples, 3.73%)</title><rect x="38.2496%" y="597" width="3.7277%" height="15" fill="rgb(238,106,35)" fg:x="472" fg:w="46"/><text x="38.4996%" y="607.50">engi..</text></g><g><title>engine::users::model::username_to_key (2 samples, 0.16%)</title><rect x="41.8152%" y="581" width="0.1621%" height="15" fill="rgb(207,195,21)" fg:x="516" fg:w="2"/><text x="42.0652%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="41.8963%" y="565" width="0.0810%" height="15" fill="rgb(205,43,29)" fg:x="517" fg:w="1"/><text x="42.1463%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="41.8963%" y="549" width="0.0810%" height="15" fill="rgb(236,35,21)" fg:x="517" fg:w="1"/><text x="42.1463%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.8963%" y="533" width="0.0810%" height="15" fill="rgb(244,74,8)" fg:x="517" fg:w="1"/><text x="42.1463%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.8963%" y="517" width="0.0810%" height="15" fill="rgb(241,229,7)" fg:x="517" fg:w="1"/><text x="42.1463%" y="527.50"></text></g><g><title>kernel::plugins::SessionPlugins::evaluate (1 samples, 0.08%)</title><rect x="41.9773%" y="597" width="0.0810%" height="15" fill="rgb(212,223,25)" fg:x="518" fg:w="1"/><text x="42.2273%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="41.9773%" y="581" width="0.0810%" height="15" fill="rgb(234,58,53)" fg:x="518" fg:w="1"/><text x="42.2273%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.1394%" y="565" width="0.0810%" height="15" fill="rgb(244,36,1)" fg:x="520" fg:w="1"/><text x="42.3894%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="42.2204%" y="565" width="0.1621%" height="15" fill="rgb(222,40,54)" fg:x="521" fg:w="2"/><text x="42.4704%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.3015%" y="549" width="0.0810%" height="15" fill="rgb(210,207,39)" fg:x="522" fg:w="1"/><text x="42.5515%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="42.7066%" y="485" width="0.0810%" height="15" fill="rgb(234,52,14)" fg:x="527" fg:w="1"/><text x="42.9566%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.41%)</title><rect x="42.6256%" y="501" width="0.4052%" height="15" fill="rgb(239,108,46)" fg:x="526" fg:w="5"/><text x="42.8756%" y="511.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="42.7877%" y="485" width="0.2431%" height="15" fill="rgb(252,223,5)" fg:x="528" fg:w="3"/><text x="43.0377%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="43.0308%" y="501" width="0.1621%" height="15" fill="rgb(227,181,11)" fg:x="531" fg:w="2"/><text x="43.2808%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.81%)</title><rect x="42.5446%" y="517" width="0.8104%" height="15" fill="rgb(248,126,40)" fg:x="525" fg:w="10"/><text x="42.7946%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (2 samples, 0.16%)</title><rect x="43.1929%" y="501" width="0.1621%" height="15" fill="rgb(243,1,18)" fg:x="533" fg:w="2"/><text x="43.4429%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="43.2739%" y="485" width="0.0810%" height="15" fill="rgb(214,145,23)" fg:x="534" fg:w="1"/><text x="43.5239%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.2739%" y="469" width="0.0810%" height="15" fill="rgb(241,218,11)" fg:x="534" fg:w="1"/><text x="43.5239%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="43.3549%" y="517" width="0.1621%" height="15" fill="rgb(214,219,24)" fg:x="535" fg:w="2"/><text x="43.6049%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.30%)</title><rect x="42.3825%" y="533" width="1.2966%" height="15" fill="rgb(235,32,7)" fg:x="523" fg:w="16"/><text x="42.6325%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (2 samples, 0.16%)</title><rect x="43.5170%" y="517" width="0.1621%" height="15" fill="rgb(227,121,28)" fg:x="537" fg:w="2"/><text x="43.7670%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.54%)</title><rect x="42.3825%" y="549" width="1.5397%" height="15" fill="rgb(216,129,49)" fg:x="523" fg:w="19"/><text x="42.6325%" y="559.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="43.6791%" y="533" width="0.2431%" height="15" fill="rgb(207,194,50)" fg:x="539" fg:w="3"/><text x="43.9291%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (22 samples, 1.78%)</title><rect x="42.3825%" y="565" width="1.7828%" height="15" fill="rgb(207,4,18)" fg:x="523" fg:w="22"/><text x="42.6325%" y="575.50">c..</text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="43.9222%" y="549" width="0.2431%" height="15" fill="rgb(213,50,30)" fg:x="542" fg:w="3"/><text x="44.1722%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="44.3274%" y="517" width="0.0810%" height="15" fill="rgb(208,77,22)" fg:x="547" fg:w="1"/><text x="44.5774%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="44.4084%" y="517" width="0.1621%" height="15" fill="rgb(244,204,34)" fg:x="548" fg:w="2"/><text x="44.6584%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.57%)</title><rect x="44.2464%" y="533" width="0.5673%" height="15" fill="rgb(230,20,17)" fg:x="546" fg:w="7"/><text x="44.4964%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.24%)</title><rect x="44.5705%" y="517" width="0.2431%" height="15" fill="rgb(237,83,15)" fg:x="550" fg:w="3"/><text x="44.8205%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="44.6515%" y="501" width="0.1621%" height="15" fill="rgb(221,109,25)" fg:x="551" fg:w="2"/><text x="44.9015%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="44.6515%" y="485" width="0.1621%" height="15" fill="rgb(205,194,52)" fg:x="551" fg:w="2"/><text x="44.9015%" y="495.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="44.6515%" y="469" width="0.1621%" height="15" fill="rgb(244,173,54)" fg:x="551" fg:w="2"/><text x="44.9015%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="44.6515%" y="453" width="0.1621%" height="15" fill="rgb(227,181,18)" fg:x="551" fg:w="2"/><text x="44.9015%" y="463.50"></text></g><g><title>core::fmt::Formatter::pad (2 samples, 0.16%)</title><rect x="44.6515%" y="437" width="0.1621%" height="15" fill="rgb(238,36,30)" fg:x="551" fg:w="2"/><text x="44.9015%" y="447.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.16%)</title><rect x="44.8136%" y="533" width="0.1621%" height="15" fill="rgb(254,85,0)" fg:x="553" fg:w="2"/><text x="45.0636%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="44.8136%" y="517" width="0.1621%" height="15" fill="rgb(247,63,33)" fg:x="553" fg:w="2"/><text x="45.0636%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.8947%" y="501" width="0.0810%" height="15" fill="rgb(220,7,54)" fg:x="554" fg:w="1"/><text x="45.1447%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="44.8947%" y="485" width="0.0810%" height="15" fill="rgb(238,227,21)" fg:x="554" fg:w="1"/><text x="45.1447%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="44.8947%" y="469" width="0.0810%" height="15" fill="rgb(237,29,31)" fg:x="554" fg:w="1"/><text x="45.1447%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="44.8947%" y="453" width="0.0810%" height="15" fill="rgb(211,21,50)" fg:x="554" fg:w="1"/><text x="45.1447%" y="463.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="44.9757%" y="533" width="0.1621%" height="15" fill="rgb(239,119,2)" fg:x="555" fg:w="2"/><text x="45.2257%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="44.9757%" y="517" width="0.1621%" height="15" fill="rgb(250,2,39)" fg:x="555" fg:w="2"/><text x="45.2257%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.3809%" y="261" width="0.0810%" height="15" fill="rgb(244,46,53)" fg:x="560" fg:w="1"/><text x="45.6309%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.3809%" y="245" width="0.0810%" height="15" fill="rgb(209,21,19)" fg:x="560" fg:w="1"/><text x="45.6309%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="45.3809%" y="229" width="0.0810%" height="15" fill="rgb(236,145,4)" fg:x="560" fg:w="1"/><text x="45.6309%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="45.3809%" y="213" width="0.0810%" height="15" fill="rgb(220,133,36)" fg:x="560" fg:w="1"/><text x="45.6309%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="45.3809%" y="197" width="0.0810%" height="15" fill="rgb(244,18,3)" fg:x="560" fg:w="1"/><text x="45.6309%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="45.3809%" y="181" width="0.0810%" height="15" fill="rgb(232,171,48)" fg:x="560" fg:w="1"/><text x="45.6309%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="45.3809%" y="165" width="0.0810%" height="15" fill="rgb(223,223,53)" fg:x="560" fg:w="1"/><text x="45.6309%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="45.3809%" y="149" width="0.0810%" height="15" fill="rgb(246,92,13)" fg:x="560" fg:w="1"/><text x="45.6309%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="45.3809%" y="133" width="0.0810%" height="15" fill="rgb(229,171,10)" fg:x="560" fg:w="1"/><text x="45.6309%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="45.3809%" y="117" width="0.0810%" height="15" fill="rgb(213,131,26)" fg:x="560" fg:w="1"/><text x="45.6309%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="45.3809%" y="101" width="0.0810%" height="15" fill="rgb(242,87,54)" fg:x="560" fg:w="1"/><text x="45.6309%" y="111.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.08%)</title><rect x="45.3809%" y="85" width="0.0810%" height="15" fill="rgb(237,21,35)" fg:x="560" fg:w="1"/><text x="45.6309%" y="95.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="45.3809%" y="453" width="0.1621%" height="15" fill="rgb(253,13,47)" fg:x="560" fg:w="2"/><text x="45.6309%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="45.3809%" y="437" width="0.1621%" height="15" fill="rgb(215,122,49)" fg:x="560" fg:w="2"/><text x="45.6309%" y="447.50"></text></g><g><title>kernel::model::EntityRef::into_entry (2 samples, 0.16%)</title><rect x="45.3809%" y="421" width="0.1621%" height="15" fill="rgb(209,179,30)" fg:x="560" fg:w="2"/><text x="45.6309%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="45.3809%" y="405" width="0.1621%" height="15" fill="rgb(235,100,24)" fg:x="560" fg:w="2"/><text x="45.6309%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="45.3809%" y="389" width="0.1621%" height="15" fill="rgb(209,67,24)" fg:x="560" fg:w="2"/><text x="45.6309%" y="399.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="45.3809%" y="373" width="0.1621%" height="15" fill="rgb(206,74,32)" fg:x="560" fg:w="2"/><text x="45.6309%" y="383.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="45.3809%" y="357" width="0.1621%" height="15" fill="rgb(212,45,25)" fg:x="560" fg:w="2"/><text x="45.6309%" y="367.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="45.3809%" y="341" width="0.1621%" height="15" fill="rgb(239,26,3)" fg:x="560" fg:w="2"/><text x="45.6309%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="45.3809%" y="325" width="0.1621%" height="15" fill="rgb(218,36,15)" fg:x="560" fg:w="2"/><text x="45.6309%" y="335.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="45.3809%" y="309" width="0.1621%" height="15" fill="rgb(206,108,24)" fg:x="560" fg:w="2"/><text x="45.6309%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="45.3809%" y="293" width="0.1621%" height="15" fill="rgb(234,204,42)" fg:x="560" fg:w="2"/><text x="45.6309%" y="303.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="45.3809%" y="277" width="0.1621%" height="15" fill="rgb(229,2,11)" fg:x="560" fg:w="2"/><text x="45.6309%" y="287.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="45.4619%" y="261" width="0.0810%" height="15" fill="rgb(221,20,48)" fg:x="561" fg:w="1"/><text x="45.7119%" y="271.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="45.4619%" y="245" width="0.0810%" height="15" fill="rgb(244,164,10)" fg:x="561" fg:w="1"/><text x="45.7119%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.5429%" y="437" width="0.0810%" height="15" fill="rgb(243,229,2)" fg:x="562" fg:w="1"/><text x="45.7929%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.7861%" y="277" width="0.0810%" height="15" fill="rgb(232,131,37)" fg:x="565" fg:w="1"/><text x="46.0361%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="45.8671%" y="277" width="0.0810%" height="15" fill="rgb(217,156,11)" fg:x="566" fg:w="1"/><text x="46.1171%" y="287.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (3 samples, 0.24%)</title><rect x="45.7861%" y="341" width="0.2431%" height="15" fill="rgb(239,99,48)" fg:x="565" fg:w="3"/><text x="46.0361%" y="351.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (3 samples, 0.24%)</title><rect x="45.7861%" y="325" width="0.2431%" height="15" fill="rgb(231,209,9)" fg:x="565" fg:w="3"/><text x="46.0361%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="45.7861%" y="309" width="0.2431%" height="15" fill="rgb(254,97,27)" fg:x="565" fg:w="3"/><text x="46.0361%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="45.7861%" y="293" width="0.2431%" height="15" fill="rgb(223,151,38)" fg:x="565" fg:w="3"/><text x="46.0361%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.9481%" y="277" width="0.0810%" height="15" fill="rgb(219,206,35)" fg:x="567" fg:w="1"/><text x="46.1981%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.9481%" y="261" width="0.0810%" height="15" fill="rgb(216,130,31)" fg:x="567" fg:w="1"/><text x="46.1981%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="46.0292%" y="261" width="0.0810%" height="15" fill="rgb(251,97,34)" fg:x="568" fg:w="1"/><text x="46.2792%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.0292%" y="245" width="0.0810%" height="15" fill="rgb(246,159,47)" fg:x="568" fg:w="1"/><text x="46.2792%" y="255.50"></text></g><g><title>core::iter::adapters::try_process (10 samples, 0.81%)</title><rect x="45.3809%" y="469" width="0.8104%" height="15" fill="rgb(232,87,10)" fg:x="560" fg:w="10"/><text x="45.6309%" y="479.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (8 samples, 0.65%)</title><rect x="45.5429%" y="453" width="0.6483%" height="15" fill="rgb(249,1,37)" fg:x="562" fg:w="8"/><text x="45.7929%" y="463.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (7 samples, 0.57%)</title><rect x="45.6240%" y="437" width="0.5673%" height="15" fill="rgb(239,135,14)" fg:x="563" fg:w="7"/><text x="45.8740%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (6 samples, 0.49%)</title><rect x="45.7050%" y="421" width="0.4862%" height="15" fill="rgb(253,116,46)" fg:x="564" fg:w="6"/><text x="45.9550%" y="431.50"></text></g><g><title>kernel::model::Entity::load_scope (5 samples, 0.41%)</title><rect x="45.7861%" y="405" width="0.4052%" height="15" fill="rgb(222,217,37)" fg:x="565" fg:w="5"/><text x="46.0361%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (5 samples, 0.41%)</title><rect x="45.7861%" y="389" width="0.4052%" height="15" fill="rgb(252,96,8)" fg:x="565" fg:w="5"/><text x="46.0361%" y="399.50"></text></g><g><title>engine::internal::Entities::prepare_entity (5 samples, 0.41%)</title><rect x="45.7861%" y="373" width="0.4052%" height="15" fill="rgb(254,103,41)" fg:x="565" fg:w="5"/><text x="46.0361%" y="383.50"></text></g><g><title>kernel::model::deserialize_entity (5 samples, 0.41%)</title><rect x="45.7861%" y="357" width="0.4052%" height="15" fill="rgb(218,213,19)" fg:x="565" fg:w="5"/><text x="46.0361%" y="367.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="46.0292%" y="341" width="0.1621%" height="15" fill="rgb(253,95,21)" fg:x="568" fg:w="2"/><text x="46.2792%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="46.0292%" y="325" width="0.1621%" height="15" fill="rgb(229,26,28)" fg:x="568" fg:w="2"/><text x="46.2792%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="46.0292%" y="309" width="0.1621%" height="15" fill="rgb(230,129,16)" fg:x="568" fg:w="2"/><text x="46.2792%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="46.0292%" y="293" width="0.1621%" height="15" fill="rgb(236,126,17)" fg:x="568" fg:w="2"/><text x="46.2792%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="46.0292%" y="277" width="0.1621%" height="15" fill="rgb(209,33,33)" fg:x="568" fg:w="2"/><text x="46.2792%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="46.1102%" y="261" width="0.0810%" height="15" fill="rgb(227,85,29)" fg:x="569" fg:w="1"/><text x="46.3602%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="46.1102%" y="245" width="0.0810%" height="15" fill="rgb(241,53,46)" fg:x="569" fg:w="1"/><text x="46.3602%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="46.1102%" y="229" width="0.0810%" height="15" fill="rgb(228,167,53)" fg:x="569" fg:w="1"/><text x="46.3602%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="46.1102%" y="213" width="0.0810%" height="15" fill="rgb(238,195,45)" fg:x="569" fg:w="1"/><text x="46.3602%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="46.1102%" y="197" width="0.0810%" height="15" fill="rgb(252,124,45)" fg:x="569" fg:w="1"/><text x="46.3602%" y="207.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="46.1102%" y="181" width="0.0810%" height="15" fill="rgb(251,38,35)" fg:x="569" fg:w="1"/><text x="46.3602%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (2 samples, 0.16%)</title><rect x="46.1912%" y="469" width="0.1621%" height="15" fill="rgb(227,33,2)" fg:x="570" fg:w="2"/><text x="46.4412%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (2 samples, 0.16%)</title><rect x="46.1912%" y="453" width="0.1621%" height="15" fill="rgb(223,157,46)" fg:x="570" fg:w="2"/><text x="46.4412%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.4344%" y="421" width="0.0810%" height="15" fill="rgb(222,78,41)" fg:x="573" fg:w="1"/><text x="46.6844%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.5154%" y="309" width="0.0810%" height="15" fill="rgb(248,176,11)" fg:x="574" fg:w="1"/><text x="46.7654%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.5154%" y="293" width="0.0810%" height="15" fill="rgb(241,221,18)" fg:x="574" fg:w="1"/><text x="46.7654%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="46.5154%" y="277" width="0.0810%" height="15" fill="rgb(218,85,22)" fg:x="574" fg:w="1"/><text x="46.7654%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="46.5154%" y="261" width="0.0810%" height="15" fill="rgb(222,223,7)" fg:x="574" fg:w="1"/><text x="46.7654%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="46.5154%" y="245" width="0.0810%" height="15" fill="rgb(254,59,39)" fg:x="574" fg:w="1"/><text x="46.7654%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="46.5154%" y="229" width="0.0810%" height="15" fill="rgb(247,100,27)" fg:x="574" fg:w="1"/><text x="46.7654%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.5154%" y="213" width="0.0810%" height="15" fill="rgb(237,207,10)" fg:x="574" fg:w="1"/><text x="46.7654%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="46.4344%" y="437" width="0.2431%" height="15" fill="rgb(220,121,28)" fg:x="573" fg:w="3"/><text x="46.6844%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="46.5154%" y="421" width="0.1621%" height="15" fill="rgb(213,223,20)" fg:x="574" fg:w="2"/><text x="46.7654%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="46.5154%" y="405" width="0.1621%" height="15" fill="rgb(205,121,27)" fg:x="574" fg:w="2"/><text x="46.7654%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="46.5154%" y="389" width="0.1621%" height="15" fill="rgb(253,24,53)" fg:x="574" fg:w="2"/><text x="46.7654%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="46.5154%" y="373" width="0.1621%" height="15" fill="rgb(224,224,47)" fg:x="574" fg:w="2"/><text x="46.7654%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="46.5154%" y="357" width="0.1621%" height="15" fill="rgb(250,125,36)" fg:x="574" fg:w="2"/><text x="46.7654%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="46.5154%" y="341" width="0.1621%" height="15" fill="rgb(240,144,38)" fg:x="574" fg:w="2"/><text x="46.7654%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="46.5154%" y="325" width="0.1621%" height="15" fill="rgb(250,15,50)" fg:x="574" fg:w="2"/><text x="46.7654%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="46.5964%" y="309" width="0.0810%" height="15" fill="rgb(210,24,26)" fg:x="575" fg:w="1"/><text x="46.8464%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="46.5964%" y="293" width="0.0810%" height="15" fill="rgb(234,53,53)" fg:x="575" fg:w="1"/><text x="46.8464%" y="303.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="46.6775%" y="437" width="0.1621%" height="15" fill="rgb(208,108,28)" fg:x="576" fg:w="2"/><text x="46.9275%" y="447.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="46.6775%" y="421" width="0.1621%" height="15" fill="rgb(227,143,7)" fg:x="576" fg:w="2"/><text x="46.9275%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="46.6775%" y="405" width="0.1621%" height="15" fill="rgb(238,189,38)" fg:x="576" fg:w="2"/><text x="46.9275%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="46.7585%" y="389" width="0.0810%" height="15" fill="rgb(222,69,15)" fg:x="577" fg:w="1"/><text x="47.0085%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="46.7585%" y="373" width="0.0810%" height="15" fill="rgb(213,169,7)" fg:x="577" fg:w="1"/><text x="47.0085%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="46.7585%" y="357" width="0.0810%" height="15" fill="rgb(251,219,4)" fg:x="577" fg:w="1"/><text x="47.0085%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.7585%" y="341" width="0.0810%" height="15" fill="rgb(241,55,40)" fg:x="577" fg:w="1"/><text x="47.0085%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.7585%" y="325" width="0.0810%" height="15" fill="rgb(243,57,30)" fg:x="577" fg:w="1"/><text x="47.0085%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.7585%" y="309" width="0.0810%" height="15" fill="rgb(234,50,30)" fg:x="577" fg:w="1"/><text x="47.0085%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.7585%" y="293" width="0.0810%" height="15" fill="rgb(239,23,42)" fg:x="577" fg:w="1"/><text x="47.0085%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.7585%" y="277" width="0.0810%" height="15" fill="rgb(217,38,19)" fg:x="577" fg:w="1"/><text x="47.0085%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.7585%" y="261" width="0.0810%" height="15" fill="rgb(215,179,16)" fg:x="577" fg:w="1"/><text x="47.0085%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.7585%" y="245" width="0.0810%" height="15" fill="rgb(254,21,37)" fg:x="577" fg:w="1"/><text x="47.0085%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="46.7585%" y="229" width="0.0810%" height="15" fill="rgb(219,207,48)" fg:x="577" fg:w="1"/><text x="47.0085%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="46.7585%" y="213" width="0.0810%" height="15" fill="rgb(227,225,41)" fg:x="577" fg:w="1"/><text x="47.0085%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="46.7585%" y="197" width="0.0810%" height="15" fill="rgb(223,130,1)" fg:x="577" fg:w="1"/><text x="47.0085%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="46.7585%" y="181" width="0.0810%" height="15" fill="rgb(249,54,42)" fg:x="577" fg:w="1"/><text x="47.0085%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.7585%" y="165" width="0.0810%" height="15" fill="rgb(248,69,25)" fg:x="577" fg:w="1"/><text x="47.0085%" y="175.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="46.8395%" y="437" width="0.0810%" height="15" fill="rgb(234,21,32)" fg:x="578" fg:w="1"/><text x="47.0895%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="46.8395%" y="421" width="0.0810%" height="15" fill="rgb(252,136,6)" fg:x="578" fg:w="1"/><text x="47.0895%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="46.9206%" y="437" width="0.0810%" height="15" fill="rgb(245,87,12)" fg:x="579" fg:w="1"/><text x="47.1706%" y="447.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (21 samples, 1.70%)</title><rect x="45.3809%" y="485" width="1.7018%" height="15" fill="rgb(208,12,15)" fg:x="560" fg:w="21"/><text x="45.6309%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope (9 samples, 0.73%)</title><rect x="46.3533%" y="469" width="0.7293%" height="15" fill="rgb(250,98,2)" fg:x="572" fg:w="9"/><text x="46.6033%" y="479.50"></text></g><g><title>kernel::model::Entity::load_scope (8 samples, 0.65%)</title><rect x="46.4344%" y="453" width="0.6483%" height="15" fill="rgb(205,213,15)" fg:x="573" fg:w="8"/><text x="46.6844%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.0016%" y="437" width="0.0810%" height="15" fill="rgb(248,192,44)" fg:x="580" fg:w="1"/><text x="47.2516%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.0016%" y="421" width="0.0810%" height="15" fill="rgb(221,89,17)" fg:x="580" fg:w="1"/><text x="47.2516%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="47.0827%" y="469" width="0.0810%" height="15" fill="rgb(209,55,3)" fg:x="581" fg:w="1"/><text x="47.3327%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="47.2447%" y="437" width="0.2431%" height="15" fill="rgb(247,23,45)" fg:x="583" fg:w="3"/><text x="47.4947%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="47.3258%" y="421" width="0.1621%" height="15" fill="rgb(235,152,23)" fg:x="584" fg:w="2"/><text x="47.5758%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.4068%" y="405" width="0.0810%" height="15" fill="rgb(244,63,13)" fg:x="585" fg:w="1"/><text x="47.6568%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="47.4878%" y="357" width="0.0810%" height="15" fill="rgb(227,30,37)" fg:x="586" fg:w="1"/><text x="47.7378%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.4878%" y="341" width="0.0810%" height="15" fill="rgb(224,49,42)" fg:x="586" fg:w="1"/><text x="47.7378%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.4878%" y="325" width="0.0810%" height="15" fill="rgb(218,129,5)" fg:x="586" fg:w="1"/><text x="47.7378%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="47.4878%" y="309" width="0.0810%" height="15" fill="rgb(240,199,54)" fg:x="586" fg:w="1"/><text x="47.7378%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="47.4878%" y="293" width="0.0810%" height="15" fill="rgb(234,31,13)" fg:x="586" fg:w="1"/><text x="47.7378%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="47.4878%" y="277" width="0.0810%" height="15" fill="rgb(219,73,54)" fg:x="586" fg:w="1"/><text x="47.7378%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.4878%" y="261" width="0.0810%" height="15" fill="rgb(251,162,10)" fg:x="586" fg:w="1"/><text x="47.7378%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.4878%" y="245" width="0.0810%" height="15" fill="rgb(240,138,47)" fg:x="586" fg:w="1"/><text x="47.7378%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="47.4878%" y="229" width="0.0810%" height="15" fill="rgb(216,138,26)" fg:x="586" fg:w="1"/><text x="47.7378%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="47.4878%" y="213" width="0.0810%" height="15" fill="rgb(243,17,35)" fg:x="586" fg:w="1"/><text x="47.7378%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="47.4878%" y="197" width="0.0810%" height="15" fill="rgb(241,60,18)" fg:x="586" fg:w="1"/><text x="47.7378%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="47.4878%" y="181" width="0.0810%" height="15" fill="rgb(234,2,44)" fg:x="586" fg:w="1"/><text x="47.7378%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.4878%" y="165" width="0.0810%" height="15" fill="rgb(225,225,33)" fg:x="586" fg:w="1"/><text x="47.7378%" y="175.50"></text></g><g><title>engine::internal::EntityMap::add_entity (5 samples, 0.41%)</title><rect x="47.6499%" y="341" width="0.4052%" height="15" fill="rgb(234,50,31)" fg:x="588" fg:w="5"/><text x="47.8999%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="47.7310%" y="325" width="0.3241%" height="15" fill="rgb(249,6,25)" fg:x="589" fg:w="4"/><text x="47.9810%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.32%)</title><rect x="47.7310%" y="309" width="0.3241%" height="15" fill="rgb(241,5,17)" fg:x="589" fg:w="4"/><text x="47.9810%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="47.7310%" y="293" width="0.3241%" height="15" fill="rgb(207,116,10)" fg:x="589" fg:w="4"/><text x="47.9810%" y="303.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="47.7310%" y="277" width="0.3241%" height="15" fill="rgb(222,128,18)" fg:x="589" fg:w="4"/><text x="47.9810%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.1361%" y="261" width="0.0810%" height="15" fill="rgb(229,109,25)" fg:x="594" fg:w="1"/><text x="48.3861%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="48.2172%" y="181" width="0.0810%" height="15" fill="rgb(222,102,25)" fg:x="595" fg:w="1"/><text x="48.4672%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.2172%" y="165" width="0.0810%" height="15" fill="rgb(239,211,5)" fg:x="595" fg:w="1"/><text x="48.4672%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="48.2982%" y="181" width="0.0810%" height="15" fill="rgb(223,136,26)" fg:x="596" fg:w="1"/><text x="48.5482%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="48.2172%" y="213" width="0.3241%" height="15" fill="rgb(227,30,15)" fg:x="595" fg:w="4"/><text x="48.4672%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="48.2172%" y="197" width="0.3241%" height="15" fill="rgb(247,76,4)" fg:x="595" fg:w="4"/><text x="48.4672%" y="207.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="48.3793%" y="181" width="0.1621%" height="15" fill="rgb(245,38,48)" fg:x="597" fg:w="2"/><text x="48.6293%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="48.3793%" y="165" width="0.1621%" height="15" fill="rgb(210,220,14)" fg:x="597" fg:w="2"/><text x="48.6293%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="48.3793%" y="149" width="0.1621%" height="15" fill="rgb(224,60,51)" fg:x="597" fg:w="2"/><text x="48.6293%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="48.3793%" y="133" width="0.1621%" height="15" fill="rgb(212,133,49)" fg:x="597" fg:w="2"/><text x="48.6293%" y="143.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="48.3793%" y="117" width="0.1621%" height="15" fill="rgb(231,39,22)" fg:x="597" fg:w="2"/><text x="48.6293%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="48.4603%" y="101" width="0.0810%" height="15" fill="rgb(236,173,22)" fg:x="598" fg:w="1"/><text x="48.7103%" y="111.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.6224%" y="165" width="0.0810%" height="15" fill="rgb(210,70,0)" fg:x="600" fg:w="1"/><text x="48.8724%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="48.5413%" y="213" width="0.2431%" height="15" fill="rgb(215,170,11)" fg:x="599" fg:w="3"/><text x="48.7913%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="48.5413%" y="197" width="0.2431%" height="15" fill="rgb(220,154,28)" fg:x="599" fg:w="3"/><text x="48.7913%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="48.5413%" y="181" width="0.2431%" height="15" fill="rgb(240,160,41)" fg:x="599" fg:w="3"/><text x="48.7913%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="48.7034%" y="165" width="0.0810%" height="15" fill="rgb(243,215,41)" fg:x="601" fg:w="1"/><text x="48.9534%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="48.7034%" y="149" width="0.0810%" height="15" fill="rgb(214,208,31)" fg:x="601" fg:w="1"/><text x="48.9534%" y="159.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="48.7844%" y="181" width="0.0810%" height="15" fill="rgb(247,57,22)" fg:x="602" fg:w="1"/><text x="49.0344%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="48.7844%" y="165" width="0.0810%" height="15" fill="rgb(228,73,52)" fg:x="602" fg:w="1"/><text x="49.0344%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.7844%" y="149" width="0.0810%" height="15" fill="rgb(252,60,9)" fg:x="602" fg:w="1"/><text x="49.0344%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.7844%" y="133" width="0.0810%" height="15" fill="rgb(233,9,51)" fg:x="602" fg:w="1"/><text x="49.0344%" y="143.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="48.7844%" y="117" width="0.0810%" height="15" fill="rgb(223,67,14)" fg:x="602" fg:w="1"/><text x="49.0344%" y="127.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (9 samples, 0.73%)</title><rect x="48.2172%" y="261" width="0.7293%" height="15" fill="rgb(222,86,2)" fg:x="595" fg:w="9"/><text x="48.4672%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.73%)</title><rect x="48.2172%" y="245" width="0.7293%" height="15" fill="rgb(243,58,54)" fg:x="595" fg:w="9"/><text x="48.4672%" y="255.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (9 samples, 0.73%)</title><rect x="48.2172%" y="229" width="0.7293%" height="15" fill="rgb(210,200,39)" fg:x="595" fg:w="9"/><text x="48.4672%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="48.7844%" y="213" width="0.1621%" height="15" fill="rgb(238,135,9)" fg:x="602" fg:w="2"/><text x="49.0344%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="48.7844%" y="197" width="0.1621%" height="15" fill="rgb(232,179,7)" fg:x="602" fg:w="2"/><text x="49.0344%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.8655%" y="181" width="0.0810%" height="15" fill="rgb(245,65,41)" fg:x="603" fg:w="1"/><text x="49.1155%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.8655%" y="165" width="0.0810%" height="15" fill="rgb(227,43,8)" fg:x="603" fg:w="1"/><text x="49.1155%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="48.8655%" y="149" width="0.0810%" height="15" fill="rgb(235,91,14)" fg:x="603" fg:w="1"/><text x="49.1155%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.8655%" y="133" width="0.0810%" height="15" fill="rgb(235,219,31)" fg:x="603" fg:w="1"/><text x="49.1155%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.1086%" y="197" width="0.0810%" height="15" fill="rgb(227,121,25)" fg:x="606" fg:w="1"/><text x="49.3586%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.1896%" y="165" width="0.0810%" height="15" fill="rgb(254,129,24)" fg:x="607" fg:w="1"/><text x="49.4396%" y="175.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (17 samples, 1.38%)</title><rect x="48.0551%" y="325" width="1.3776%" height="15" fill="rgb(226,144,49)" fg:x="593" fg:w="17"/><text x="48.3051%" y="335.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (16 samples, 1.30%)</title><rect x="48.1361%" y="309" width="1.2966%" height="15" fill="rgb(214,187,32)" fg:x="594" fg:w="16"/><text x="48.3861%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (16 samples, 1.30%)</title><rect x="48.1361%" y="293" width="1.2966%" height="15" fill="rgb(243,129,46)" fg:x="594" fg:w="16"/><text x="48.3861%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (16 samples, 1.30%)</title><rect x="48.1361%" y="277" width="1.2966%" height="15" fill="rgb(221,185,35)" fg:x="594" fg:w="16"/><text x="48.3861%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.49%)</title><rect x="48.9465%" y="261" width="0.4862%" height="15" fill="rgb(205,0,32)" fg:x="604" fg:w="6"/><text x="49.1965%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="49.0276%" y="245" width="0.4052%" height="15" fill="rgb(229,179,12)" fg:x="605" fg:w="5"/><text x="49.2776%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="49.1086%" y="229" width="0.3241%" height="15" fill="rgb(252,107,19)" fg:x="606" fg:w="4"/><text x="49.3586%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="49.1086%" y="213" width="0.3241%" height="15" fill="rgb(220,95,27)" fg:x="606" fg:w="4"/><text x="49.3586%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="49.1896%" y="197" width="0.2431%" height="15" fill="rgb(240,113,40)" fg:x="607" fg:w="3"/><text x="49.4396%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="49.1896%" y="181" width="0.2431%" height="15" fill="rgb(208,4,43)" fg:x="607" fg:w="3"/><text x="49.4396%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="49.2707%" y="165" width="0.1621%" height="15" fill="rgb(247,189,30)" fg:x="608" fg:w="2"/><text x="49.5207%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="49.2707%" y="149" width="0.1621%" height="15" fill="rgb(231,157,17)" fg:x="608" fg:w="2"/><text x="49.5207%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="49.4327%" y="277" width="0.1621%" height="15" fill="rgb(224,139,6)" fg:x="610" fg:w="2"/><text x="49.6827%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="49.4327%" y="261" width="0.1621%" height="15" fill="rgb(223,83,16)" fg:x="610" fg:w="2"/><text x="49.6827%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="49.5948%" y="277" width="0.1621%" height="15" fill="rgb(232,211,20)" fg:x="612" fg:w="2"/><text x="49.8448%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.6759%" y="261" width="0.0810%" height="15" fill="rgb(225,203,35)" fg:x="613" fg:w="1"/><text x="49.9259%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.8379%" y="245" width="0.0810%" height="15" fill="rgb(215,211,44)" fg:x="615" fg:w="1"/><text x="50.0879%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.9190%" y="245" width="0.0810%" height="15" fill="rgb(248,213,26)" fg:x="616" fg:w="1"/><text x="50.1690%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.9190%" y="229" width="0.0810%" height="15" fill="rgb(214,23,52)" fg:x="616" fg:w="1"/><text x="50.1690%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.9190%" y="213" width="0.0810%" height="15" fill="rgb(225,173,50)" fg:x="616" fg:w="1"/><text x="50.1690%" y="223.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="50.0000%" y="165" width="0.0810%" height="15" fill="rgb(206,150,22)" fg:x="617" fg:w="1"/><text x="50.2500%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="50.0000%" y="181" width="0.1621%" height="15" fill="rgb(239,64,23)" fg:x="617" fg:w="2"/><text x="50.2500%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.0810%" y="165" width="0.0810%" height="15" fill="rgb(242,50,38)" fg:x="618" fg:w="1"/><text x="50.3310%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="50.0000%" y="197" width="0.3241%" height="15" fill="rgb(217,91,15)" fg:x="617" fg:w="4"/><text x="50.2500%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="50.1621%" y="181" width="0.1621%" height="15" fill="rgb(230,172,6)" fg:x="619" fg:w="2"/><text x="50.4121%" y="191.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="50.2431%" y="165" width="0.0810%" height="15" fill="rgb(221,98,26)" fg:x="620" fg:w="1"/><text x="50.4931%" y="175.50"></text></g><g><title>core::iter::adapters::try_process (36 samples, 2.92%)</title><rect x="47.4878%" y="421" width="2.9173%" height="15" fill="rgb(227,210,45)" fg:x="586" fg:w="36"/><text x="47.7378%" y="431.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (36 samples, 2.92%)</title><rect x="47.4878%" y="405" width="2.9173%" height="15" fill="rgb(206,8,30)" fg:x="586" fg:w="36"/><text x="47.7378%" y="415.50">&lt;a..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (36 samples, 2.92%)</title><rect x="47.4878%" y="389" width="2.9173%" height="15" fill="rgb(241,219,17)" fg:x="586" fg:w="36"/><text x="47.7378%" y="399.50">&lt;c..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (36 samples, 2.92%)</title><rect x="47.4878%" y="373" width="2.9173%" height="15" fill="rgb(247,121,29)" fg:x="586" fg:w="36"/><text x="47.7378%" y="383.50">&lt;e..</text></g><g><title>engine::internal::Entities::prepare_entity (35 samples, 2.84%)</title><rect x="47.5689%" y="357" width="2.8363%" height="15" fill="rgb(219,169,49)" fg:x="587" fg:w="35"/><text x="47.8189%" y="367.50">en..</text></g><g><title>kernel::model::deserialize_entity (29 samples, 2.35%)</title><rect x="48.0551%" y="341" width="2.3501%" height="15" fill="rgb(253,49,49)" fg:x="593" fg:w="29"/><text x="48.3051%" y="351.50">k..</text></g><g><title>serde_json::de::from_trait (12 samples, 0.97%)</title><rect x="49.4327%" y="325" width="0.9724%" height="15" fill="rgb(217,178,3)" fg:x="610" fg:w="12"/><text x="49.6827%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12 samples, 0.97%)</title><rect x="49.4327%" y="309" width="0.9724%" height="15" fill="rgb(234,73,37)" fg:x="610" fg:w="12"/><text x="49.6827%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.97%)</title><rect x="49.4327%" y="293" width="0.9724%" height="15" fill="rgb(250,98,22)" fg:x="610" fg:w="12"/><text x="49.6827%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.65%)</title><rect x="49.7569%" y="277" width="0.6483%" height="15" fill="rgb(220,108,37)" fg:x="614" fg:w="8"/><text x="50.0069%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="49.8379%" y="261" width="0.5673%" height="15" fill="rgb(225,168,10)" fg:x="615" fg:w="7"/><text x="50.0879%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="50.0000%" y="245" width="0.4052%" height="15" fill="rgb(247,215,21)" fg:x="617" fg:w="5"/><text x="50.2500%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="50.0000%" y="229" width="0.4052%" height="15" fill="rgb(253,189,31)" fg:x="617" fg:w="5"/><text x="50.2500%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="50.0000%" y="213" width="0.4052%" height="15" fill="rgb(241,54,22)" fg:x="617" fg:w="5"/><text x="50.2500%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="50.3241%" y="197" width="0.0810%" height="15" fill="rgb(211,87,4)" fg:x="621" fg:w="1"/><text x="50.5741%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.3241%" y="181" width="0.0810%" height="15" fill="rgb(245,112,24)" fg:x="621" fg:w="1"/><text x="50.5741%" y="191.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (37 samples, 3.00%)</title><rect x="47.4878%" y="437" width="2.9984%" height="15" fill="rgb(235,190,41)" fg:x="586" fg:w="37"/><text x="47.7378%" y="447.50">&lt;pl..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="50.4052%" y="421" width="0.0810%" height="15" fill="rgb(214,89,8)" fg:x="622" fg:w="1"/><text x="50.6552%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.4052%" y="405" width="0.0810%" height="15" fill="rgb(249,155,35)" fg:x="622" fg:w="1"/><text x="50.6552%" y="415.50"></text></g><g><title>plugins_core::tools::get_contained_keys (43 samples, 3.48%)</title><rect x="47.0827%" y="485" width="3.4846%" height="15" fill="rgb(249,88,26)" fg:x="581" fg:w="43"/><text x="47.3327%" y="495.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (42 samples, 3.40%)</title><rect x="47.1637%" y="469" width="3.4036%" height="15" fill="rgb(232,56,8)" fg:x="582" fg:w="42"/><text x="47.4137%" y="479.50">ker..</text></g><g><title>kernel::model::Entity::load_scope (41 samples, 3.32%)</title><rect x="47.2447%" y="453" width="3.3225%" height="15" fill="rgb(240,95,3)" fg:x="583" fg:w="41"/><text x="47.4947%" y="463.50">ker..</text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="50.4862%" y="437" width="0.0810%" height="15" fill="rgb(222,44,28)" fg:x="623" fg:w="1"/><text x="50.7362%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="50.5673%" y="469" width="0.0810%" height="15" fill="rgb(234,16,30)" fg:x="624" fg:w="1"/><text x="50.8173%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.5673%" y="453" width="0.0810%" height="15" fill="rgb(223,26,17)" fg:x="624" fg:w="1"/><text x="50.8173%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.5673%" y="437" width="0.0810%" height="15" fill="rgb(239,187,47)" fg:x="624" fg:w="1"/><text x="50.8173%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.5673%" y="421" width="0.0810%" height="15" fill="rgb(247,102,50)" fg:x="624" fg:w="1"/><text x="50.8173%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.5673%" y="405" width="0.0810%" height="15" fill="rgb(231,216,22)" fg:x="624" fg:w="1"/><text x="50.8173%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.5673%" y="389" width="0.0810%" height="15" fill="rgb(216,201,26)" fg:x="624" fg:w="1"/><text x="50.8173%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.5673%" y="373" width="0.0810%" height="15" fill="rgb(214,186,23)" fg:x="624" fg:w="1"/><text x="50.8173%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.5673%" y="357" width="0.0810%" height="15" fill="rgb(235,184,4)" fg:x="624" fg:w="1"/><text x="50.8173%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.5673%" y="341" width="0.0810%" height="15" fill="rgb(244,46,17)" fg:x="624" fg:w="1"/><text x="50.8173%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.5673%" y="325" width="0.0810%" height="15" fill="rgb(248,74,46)" fg:x="624" fg:w="1"/><text x="50.8173%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.5673%" y="309" width="0.0810%" height="15" fill="rgb(243,79,5)" fg:x="624" fg:w="1"/><text x="50.8173%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.5673%" y="293" width="0.0810%" height="15" fill="rgb(213,148,1)" fg:x="624" fg:w="1"/><text x="50.8173%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="50.6483%" y="469" width="0.0810%" height="15" fill="rgb(221,30,0)" fg:x="625" fg:w="1"/><text x="50.8983%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.8104%" y="437" width="0.0810%" height="15" fill="rgb(207,85,29)" fg:x="627" fg:w="1"/><text x="51.0604%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.8104%" y="421" width="0.0810%" height="15" fill="rgb(239,31,46)" fg:x="627" fg:w="1"/><text x="51.0604%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.8104%" y="405" width="0.0810%" height="15" fill="rgb(219,6,1)" fg:x="627" fg:w="1"/><text x="51.0604%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.8104%" y="389" width="0.0810%" height="15" fill="rgb(229,90,29)" fg:x="627" fg:w="1"/><text x="51.0604%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.8104%" y="373" width="0.0810%" height="15" fill="rgb(242,201,42)" fg:x="627" fg:w="1"/><text x="51.0604%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.8104%" y="357" width="0.0810%" height="15" fill="rgb(243,80,54)" fg:x="627" fg:w="1"/><text x="51.0604%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.8104%" y="341" width="0.0810%" height="15" fill="rgb(223,166,15)" fg:x="627" fg:w="1"/><text x="51.0604%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.8104%" y="325" width="0.0810%" height="15" fill="rgb(238,78,27)" fg:x="627" fg:w="1"/><text x="51.0604%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.8104%" y="309" width="0.0810%" height="15" fill="rgb(235,28,43)" fg:x="627" fg:w="1"/><text x="51.0604%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.8104%" y="293" width="0.0810%" height="15" fill="rgb(240,210,28)" fg:x="627" fg:w="1"/><text x="51.0604%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.8104%" y="277" width="0.0810%" height="15" fill="rgb(253,6,46)" fg:x="627" fg:w="1"/><text x="51.0604%" y="287.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="50.8104%" y="261" width="0.0810%" height="15" fill="rgb(250,159,47)" fg:x="627" fg:w="1"/><text x="51.0604%" y="271.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="50.8104%" y="245" width="0.0810%" height="15" fill="rgb(216,139,2)" fg:x="627" fg:w="1"/><text x="51.0604%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="50.8914%" y="405" width="0.0810%" height="15" fill="rgb(221,124,44)" fg:x="628" fg:w="1"/><text x="51.1414%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="50.8914%" y="389" width="0.0810%" height="15" fill="rgb(205,37,22)" fg:x="628" fg:w="1"/><text x="51.1414%" y="399.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="50.8914%" y="373" width="0.0810%" height="15" fill="rgb(250,55,8)" fg:x="628" fg:w="1"/><text x="51.1414%" y="383.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="50.8914%" y="357" width="0.0810%" height="15" fill="rgb(215,83,48)" fg:x="628" fg:w="1"/><text x="51.1414%" y="367.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="50.8914%" y="437" width="0.1621%" height="15" fill="rgb(253,2,32)" fg:x="628" fg:w="2"/><text x="51.1414%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="50.8914%" y="421" width="0.1621%" height="15" fill="rgb(236,67,28)" fg:x="628" fg:w="2"/><text x="51.1414%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.9724%" y="405" width="0.0810%" height="15" fill="rgb(252,55,15)" fg:x="629" fg:w="1"/><text x="51.2224%" y="415.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (7 samples, 0.57%)</title><rect x="50.5673%" y="485" width="0.5673%" height="15" fill="rgb(243,173,17)" fg:x="624" fg:w="7"/><text x="50.8173%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.41%)</title><rect x="50.7293%" y="469" width="0.4052%" height="15" fill="rgb(215,212,13)" fg:x="626" fg:w="5"/><text x="50.9793%" y="479.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.32%)</title><rect x="50.8104%" y="453" width="0.3241%" height="15" fill="rgb(253,176,6)" fg:x="627" fg:w="4"/><text x="51.0604%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.0535%" y="437" width="0.0810%" height="15" fill="rgb(236,105,26)" fg:x="630" fg:w="1"/><text x="51.3035%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.0535%" y="421" width="0.0810%" height="15" fill="rgb(239,226,32)" fg:x="630" fg:w="1"/><text x="51.3035%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (74 samples, 6.00%)</title><rect x="45.2188%" y="517" width="5.9968%" height="15" fill="rgb(236,104,51)" fg:x="558" fg:w="74"/><text x="45.4688%" y="527.50">&lt;alloc::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (73 samples, 5.92%)</title><rect x="45.2998%" y="501" width="5.9157%" height="15" fill="rgb(220,172,33)" fg:x="559" fg:w="73"/><text x="45.5498%" y="511.50">&lt;core::i..</text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="51.1345%" y="485" width="0.0810%" height="15" fill="rgb(224,182,25)" fg:x="631" fg:w="1"/><text x="51.3845%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.3776%" y="469" width="0.0810%" height="15" fill="rgb(236,184,24)" fg:x="634" fg:w="1"/><text x="51.6276%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.3776%" y="453" width="0.0810%" height="15" fill="rgb(241,221,14)" fg:x="634" fg:w="1"/><text x="51.6276%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.3776%" y="437" width="0.0810%" height="15" fill="rgb(227,146,5)" fg:x="634" fg:w="1"/><text x="51.6276%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.3776%" y="421" width="0.0810%" height="15" fill="rgb(214,15,23)" fg:x="634" fg:w="1"/><text x="51.6276%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.3776%" y="405" width="0.0810%" height="15" fill="rgb(233,157,31)" fg:x="634" fg:w="1"/><text x="51.6276%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.3776%" y="389" width="0.0810%" height="15" fill="rgb(211,27,52)" fg:x="634" fg:w="1"/><text x="51.6276%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.3776%" y="373" width="0.0810%" height="15" fill="rgb(212,223,15)" fg:x="634" fg:w="1"/><text x="51.6276%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.3776%" y="357" width="0.0810%" height="15" fill="rgb(254,211,0)" fg:x="634" fg:w="1"/><text x="51.6276%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.3776%" y="341" width="0.0810%" height="15" fill="rgb(205,43,38)" fg:x="634" fg:w="1"/><text x="51.6276%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.3776%" y="325" width="0.0810%" height="15" fill="rgb(242,206,46)" fg:x="634" fg:w="1"/><text x="51.6276%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.3776%" y="309" width="0.0810%" height="15" fill="rgb(220,221,12)" fg:x="634" fg:w="1"/><text x="51.6276%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.3776%" y="293" width="0.0810%" height="15" fill="rgb(217,156,35)" fg:x="634" fg:w="1"/><text x="51.6276%" y="303.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.4587%" y="421" width="0.0810%" height="15" fill="rgb(207,181,49)" fg:x="635" fg:w="1"/><text x="51.7087%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.4587%" y="405" width="0.0810%" height="15" fill="rgb(235,103,47)" fg:x="635" fg:w="1"/><text x="51.7087%" y="415.50"></text></g><g><title>engine::internal::Entities::prepare_entity (2 samples, 0.16%)</title><rect x="51.4587%" y="453" width="0.1621%" height="15" fill="rgb(222,63,28)" fg:x="635" fg:w="2"/><text x="51.7087%" y="463.50"></text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="51.4587%" y="437" width="0.1621%" height="15" fill="rgb(244,137,21)" fg:x="635" fg:w="2"/><text x="51.7087%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="51.5397%" y="421" width="0.0810%" height="15" fill="rgb(228,35,27)" fg:x="636" fg:w="1"/><text x="51.7897%" y="431.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="51.6207%" y="453" width="0.0810%" height="15" fill="rgb(226,191,41)" fg:x="637" fg:w="1"/><text x="51.8707%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.6207%" y="437" width="0.0810%" height="15" fill="rgb(210,154,3)" fg:x="637" fg:w="1"/><text x="51.8707%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.6207%" y="421" width="0.0810%" height="15" fill="rgb(216,60,49)" fg:x="637" fg:w="1"/><text x="51.8707%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.6207%" y="405" width="0.0810%" height="15" fill="rgb(226,17,20)" fg:x="637" fg:w="1"/><text x="51.8707%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.6207%" y="389" width="0.0810%" height="15" fill="rgb(206,115,35)" fg:x="637" fg:w="1"/><text x="51.8707%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.6207%" y="373" width="0.0810%" height="15" fill="rgb(227,88,1)" fg:x="637" fg:w="1"/><text x="51.8707%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.6207%" y="357" width="0.0810%" height="15" fill="rgb(230,222,24)" fg:x="637" fg:w="1"/><text x="51.8707%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.6207%" y="341" width="0.0810%" height="15" fill="rgb(214,124,32)" fg:x="637" fg:w="1"/><text x="51.8707%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.6207%" y="325" width="0.0810%" height="15" fill="rgb(240,41,36)" fg:x="637" fg:w="1"/><text x="51.8707%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.6207%" y="309" width="0.0810%" height="15" fill="rgb(221,17,52)" fg:x="637" fg:w="1"/><text x="51.8707%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.6207%" y="293" width="0.0810%" height="15" fill="rgb(252,70,16)" fg:x="637" fg:w="1"/><text x="51.8707%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.6207%" y="277" width="0.0810%" height="15" fill="rgb(250,177,4)" fg:x="637" fg:w="1"/><text x="51.8707%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.6207%" y="261" width="0.0810%" height="15" fill="rgb(240,188,47)" fg:x="637" fg:w="1"/><text x="51.8707%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.7018%" y="437" width="0.1621%" height="15" fill="rgb(215,92,12)" fg:x="638" fg:w="2"/><text x="51.9518%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.7018%" y="421" width="0.1621%" height="15" fill="rgb(242,110,29)" fg:x="638" fg:w="2"/><text x="51.9518%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="51.7018%" y="405" width="0.1621%" height="15" fill="rgb(208,211,26)" fg:x="638" fg:w="2"/><text x="51.9518%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="51.7018%" y="389" width="0.1621%" height="15" fill="rgb(244,147,6)" fg:x="638" fg:w="2"/><text x="51.9518%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="51.7018%" y="373" width="0.1621%" height="15" fill="rgb(211,130,42)" fg:x="638" fg:w="2"/><text x="51.9518%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="51.7018%" y="357" width="0.1621%" height="15" fill="rgb(220,63,1)" fg:x="638" fg:w="2"/><text x="51.9518%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="51.7018%" y="341" width="0.1621%" height="15" fill="rgb(241,212,30)" fg:x="638" fg:w="2"/><text x="51.9518%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="51.7018%" y="325" width="0.1621%" height="15" fill="rgb(233,153,17)" fg:x="638" fg:w="2"/><text x="51.9518%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="51.7018%" y="309" width="0.1621%" height="15" fill="rgb(236,3,10)" fg:x="638" fg:w="2"/><text x="51.9518%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="51.7018%" y="293" width="0.1621%" height="15" fill="rgb(232,41,21)" fg:x="638" fg:w="2"/><text x="51.9518%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="51.7018%" y="277" width="0.1621%" height="15" fill="rgb(206,63,51)" fg:x="638" fg:w="2"/><text x="51.9518%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="51.7018%" y="261" width="0.1621%" height="15" fill="rgb(250,214,3)" fg:x="638" fg:w="2"/><text x="51.9518%" y="271.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="51.9449%" y="325" width="0.1621%" height="15" fill="rgb(254,89,27)" fg:x="641" fg:w="2"/><text x="52.1949%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="51.9449%" y="309" width="0.1621%" height="15" fill="rgb(249,41,14)" fg:x="641" fg:w="2"/><text x="52.1949%" y="319.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="51.9449%" y="293" width="0.1621%" height="15" fill="rgb(221,196,51)" fg:x="641" fg:w="2"/><text x="52.1949%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="51.9449%" y="277" width="0.1621%" height="15" fill="rgb(214,116,26)" fg:x="641" fg:w="2"/><text x="52.1949%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="51.9449%" y="261" width="0.1621%" height="15" fill="rgb(236,67,7)" fg:x="641" fg:w="2"/><text x="52.1949%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="51.9449%" y="245" width="0.1621%" height="15" fill="rgb(253,179,32)" fg:x="641" fg:w="2"/><text x="52.1949%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="51.9449%" y="229" width="0.1621%" height="15" fill="rgb(218,33,15)" fg:x="641" fg:w="2"/><text x="52.1949%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="51.9449%" y="213" width="0.1621%" height="15" fill="rgb(217,202,41)" fg:x="641" fg:w="2"/><text x="52.1949%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="51.9449%" y="197" width="0.1621%" height="15" fill="rgb(234,133,5)" fg:x="641" fg:w="2"/><text x="52.1949%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="51.9449%" y="181" width="0.1621%" height="15" fill="rgb(240,47,40)" fg:x="641" fg:w="2"/><text x="52.1949%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="51.9449%" y="165" width="0.1621%" height="15" fill="rgb(234,166,26)" fg:x="641" fg:w="2"/><text x="52.1949%" y="175.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="51.9449%" y="149" width="0.1621%" height="15" fill="rgb(244,125,51)" fg:x="641" fg:w="2"/><text x="52.1949%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="52.1070%" y="149" width="0.0810%" height="15" fill="rgb(229,171,11)" fg:x="643" fg:w="1"/><text x="52.3570%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="52.1070%" y="133" width="0.0810%" height="15" fill="rgb(224,38,45)" fg:x="643" fg:w="1"/><text x="52.3570%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="52.1070%" y="117" width="0.0810%" height="15" fill="rgb(237,27,7)" fg:x="643" fg:w="1"/><text x="52.3570%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="52.1070%" y="101" width="0.0810%" height="15" fill="rgb(216,52,7)" fg:x="643" fg:w="1"/><text x="52.3570%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="52.1070%" y="85" width="0.0810%" height="15" fill="rgb(243,11,11)" fg:x="643" fg:w="1"/><text x="52.3570%" y="95.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="52.1070%" y="69" width="0.0810%" height="15" fill="rgb(253,167,20)" fg:x="643" fg:w="1"/><text x="52.3570%" y="79.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="52.1070%" y="53" width="0.0810%" height="15" fill="rgb(215,207,5)" fg:x="643" fg:w="1"/><text x="52.3570%" y="63.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="52.1070%" y="37" width="0.0810%" height="15" fill="rgb(252,127,31)" fg:x="643" fg:w="1"/><text x="52.3570%" y="47.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (10 samples, 0.81%)</title><rect x="51.4587%" y="469" width="0.8104%" height="15" fill="rgb(209,106,27)" fg:x="635" fg:w="10"/><text x="51.7087%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.57%)</title><rect x="51.7018%" y="453" width="0.5673%" height="15" fill="rgb(214,220,18)" fg:x="638" fg:w="7"/><text x="51.9518%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (5 samples, 0.41%)</title><rect x="51.8639%" y="437" width="0.4052%" height="15" fill="rgb(237,89,12)" fg:x="640" fg:w="5"/><text x="52.1139%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.41%)</title><rect x="51.8639%" y="421" width="0.4052%" height="15" fill="rgb(209,167,36)" fg:x="640" fg:w="5"/><text x="52.1139%" y="431.50"></text></g><g><title>core::fmt::write (5 samples, 0.41%)</title><rect x="51.8639%" y="405" width="0.4052%" height="15" fill="rgb(243,45,22)" fg:x="640" fg:w="5"/><text x="52.1139%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (5 samples, 0.41%)</title><rect x="51.8639%" y="389" width="0.4052%" height="15" fill="rgb(239,2,46)" fg:x="640" fg:w="5"/><text x="52.1139%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (5 samples, 0.41%)</title><rect x="51.8639%" y="373" width="0.4052%" height="15" fill="rgb(241,101,0)" fg:x="640" fg:w="5"/><text x="52.1139%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (5 samples, 0.41%)</title><rect x="51.8639%" y="357" width="0.4052%" height="15" fill="rgb(244,34,31)" fg:x="640" fg:w="5"/><text x="52.1139%" y="367.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="51.9449%" y="341" width="0.3241%" height="15" fill="rgb(248,23,22)" fg:x="641" fg:w="4"/><text x="52.1949%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="52.1070%" y="325" width="0.1621%" height="15" fill="rgb(218,27,48)" fg:x="643" fg:w="2"/><text x="52.3570%" y="335.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="52.1070%" y="309" width="0.1621%" height="15" fill="rgb(232,78,1)" fg:x="643" fg:w="2"/><text x="52.3570%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="52.1070%" y="293" width="0.1621%" height="15" fill="rgb(233,169,12)" fg:x="643" fg:w="2"/><text x="52.3570%" y="303.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="52.1070%" y="277" width="0.1621%" height="15" fill="rgb(225,222,54)" fg:x="643" fg:w="2"/><text x="52.3570%" y="287.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="52.1070%" y="261" width="0.1621%" height="15" fill="rgb(245,126,29)" fg:x="643" fg:w="2"/><text x="52.3570%" y="271.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="52.1070%" y="245" width="0.1621%" height="15" fill="rgb(241,63,48)" fg:x="643" fg:w="2"/><text x="52.3570%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="52.1070%" y="229" width="0.1621%" height="15" fill="rgb(235,126,38)" fg:x="643" fg:w="2"/><text x="52.3570%" y="239.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="52.1070%" y="213" width="0.1621%" height="15" fill="rgb(232,96,49)" fg:x="643" fg:w="2"/><text x="52.3570%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="52.1070%" y="197" width="0.1621%" height="15" fill="rgb(211,146,40)" fg:x="643" fg:w="2"/><text x="52.3570%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="52.1070%" y="181" width="0.1621%" height="15" fill="rgb(247,93,44)" fg:x="643" fg:w="2"/><text x="52.3570%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="52.1070%" y="165" width="0.1621%" height="15" fill="rgb(251,41,49)" fg:x="643" fg:w="2"/><text x="52.3570%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="52.1880%" y="149" width="0.0810%" height="15" fill="rgb(218,155,12)" fg:x="644" fg:w="1"/><text x="52.4380%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="54.0519%" y="229" width="0.0810%" height="15" fill="rgb(221,161,30)" fg:x="667" fg:w="1"/><text x="54.3019%" y="239.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (6 samples, 0.49%)</title><rect x="53.8898%" y="261" width="0.4862%" height="15" fill="rgb(221,179,11)" fg:x="665" fg:w="6"/><text x="54.1398%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (5 samples, 0.41%)</title><rect x="53.9708%" y="245" width="0.4052%" height="15" fill="rgb(224,170,48)" fg:x="666" fg:w="5"/><text x="54.2208%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="54.1329%" y="229" width="0.2431%" height="15" fill="rgb(223,117,5)" fg:x="668" fg:w="3"/><text x="54.3829%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="54.2139%" y="213" width="0.1621%" height="15" fill="rgb(209,52,20)" fg:x="669" fg:w="2"/><text x="54.4639%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="54.3760%" y="261" width="0.1621%" height="15" fill="rgb(209,19,41)" fg:x="671" fg:w="2"/><text x="54.6260%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.4571%" y="245" width="0.0810%" height="15" fill="rgb(210,177,12)" fg:x="672" fg:w="1"/><text x="54.7071%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="54.6191%" y="245" width="0.1621%" height="15" fill="rgb(211,159,37)" fg:x="674" fg:w="2"/><text x="54.8691%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 1.22%)</title><rect x="53.7277%" y="277" width="1.2156%" height="15" fill="rgb(209,20,2)" fg:x="663" fg:w="15"/><text x="53.9777%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.41%)</title><rect x="54.5381%" y="261" width="0.4052%" height="15" fill="rgb(244,3,46)" fg:x="673" fg:w="5"/><text x="54.7881%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="54.7812%" y="245" width="0.1621%" height="15" fill="rgb(220,94,38)" fg:x="676" fg:w="2"/><text x="55.0312%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (21 samples, 1.70%)</title><rect x="53.6467%" y="293" width="1.7018%" height="15" fill="rgb(253,14,31)" fg:x="662" fg:w="21"/><text x="53.8967%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.41%)</title><rect x="54.9433%" y="277" width="0.4052%" height="15" fill="rgb(234,176,13)" fg:x="678" fg:w="5"/><text x="55.1933%" y="287.50"></text></g><g><title>__libc_malloc (5 samples, 0.41%)</title><rect x="54.9433%" y="261" width="0.4052%" height="15" fill="rgb(218,62,25)" fg:x="678" fg:w="5"/><text x="55.1933%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.5105%" y="213" width="0.0810%" height="15" fill="rgb(216,124,40)" fg:x="685" fg:w="1"/><text x="55.7605%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.5105%" y="197" width="0.0810%" height="15" fill="rgb(228,170,12)" fg:x="685" fg:w="1"/><text x="55.7605%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="55.5916%" y="197" width="0.1621%" height="15" fill="rgb(231,226,5)" fg:x="686" fg:w="2"/><text x="55.8416%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="55.6726%" y="181" width="0.0810%" height="15" fill="rgb(237,122,22)" fg:x="687" fg:w="1"/><text x="55.9226%" y="191.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (6 samples, 0.49%)</title><rect x="55.4295%" y="261" width="0.4862%" height="15" fill="rgb(209,185,25)" fg:x="684" fg:w="6"/><text x="55.6795%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (6 samples, 0.49%)</title><rect x="55.4295%" y="245" width="0.4862%" height="15" fill="rgb(228,200,32)" fg:x="684" fg:w="6"/><text x="55.6795%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.49%)</title><rect x="55.4295%" y="229" width="0.4862%" height="15" fill="rgb(217,140,10)" fg:x="684" fg:w="6"/><text x="55.6795%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="55.5916%" y="213" width="0.3241%" height="15" fill="rgb(253,17,24)" fg:x="686" fg:w="4"/><text x="55.8416%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="55.7536%" y="197" width="0.1621%" height="15" fill="rgb(212,61,6)" fg:x="688" fg:w="2"/><text x="56.0036%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.65%)</title><rect x="55.3485%" y="277" width="0.6483%" height="15" fill="rgb(205,14,25)" fg:x="683" fg:w="8"/><text x="55.5985%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.9157%" y="261" width="0.0810%" height="15" fill="rgb(232,69,41)" fg:x="690" fg:w="1"/><text x="56.1657%" y="271.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (30 samples, 2.43%)</title><rect x="53.6467%" y="309" width="2.4311%" height="15" fill="rgb(241,106,47)" fg:x="662" fg:w="30"/><text x="53.8967%" y="319.50">&lt;r..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (9 samples, 0.73%)</title><rect x="55.3485%" y="293" width="0.7293%" height="15" fill="rgb(210,213,53)" fg:x="683" fg:w="9"/><text x="55.5985%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.9968%" y="277" width="0.0810%" height="15" fill="rgb(253,175,27)" fg:x="691" fg:w="1"/><text x="56.2468%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="56.0778%" y="309" width="0.1621%" height="15" fill="rgb(211,171,24)" fg:x="692" fg:w="2"/><text x="56.3278%" y="319.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="56.0778%" y="293" width="0.1621%" height="15" fill="rgb(229,80,7)" fg:x="692" fg:w="2"/><text x="56.3278%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (42 samples, 3.40%)</title><rect x="53.2415%" y="325" width="3.4036%" height="15" fill="rgb(212,46,39)" fg:x="657" fg:w="42"/><text x="53.4915%" y="335.50">&lt;co..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.41%)</title><rect x="56.2399%" y="309" width="0.4052%" height="15" fill="rgb(240,80,45)" fg:x="694" fg:w="5"/><text x="56.4899%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="56.4830%" y="293" width="0.1621%" height="15" fill="rgb(253,177,40)" fg:x="697" fg:w="2"/><text x="56.7330%" y="303.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (47 samples, 3.81%)</title><rect x="53.0794%" y="357" width="3.8088%" height="15" fill="rgb(249,200,15)" fg:x="655" fg:w="47"/><text x="53.3294%" y="367.50">&lt;rpc..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (45 samples, 3.65%)</title><rect x="53.2415%" y="341" width="3.6467%" height="15" fill="rgb(217,78,26)" fg:x="657" fg:w="45"/><text x="53.4915%" y="351.50">&lt;std..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="56.6451%" y="325" width="0.2431%" height="15" fill="rgb(254,151,32)" fg:x="699" fg:w="3"/><text x="56.8951%" y="335.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="56.6451%" y="309" width="0.2431%" height="15" fill="rgb(226,165,27)" fg:x="699" fg:w="3"/><text x="56.8951%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.41%)</title><rect x="56.8882%" y="357" width="0.4052%" height="15" fill="rgb(250,206,4)" fg:x="702" fg:w="5"/><text x="57.1382%" y="367.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="56.9692%" y="341" width="0.3241%" height="15" fill="rgb(231,229,27)" fg:x="703" fg:w="4"/><text x="57.2192%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (57 samples, 4.62%)</title><rect x="52.7553%" y="373" width="4.6191%" height="15" fill="rgb(239,217,8)" fg:x="651" fg:w="57"/><text x="53.0053%" y="383.50">&lt;core..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.2934%" y="357" width="0.0810%" height="15" fill="rgb(225,204,27)" fg:x="707" fg:w="1"/><text x="57.5434%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="57.2934%" y="341" width="0.0810%" height="15" fill="rgb(230,56,32)" fg:x="707" fg:w="1"/><text x="57.5434%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="57.2934%" y="325" width="0.0810%" height="15" fill="rgb(222,56,27)" fg:x="707" fg:w="1"/><text x="57.5434%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (65 samples, 5.27%)</title><rect x="52.5122%" y="405" width="5.2674%" height="15" fill="rgb(253,108,27)" fg:x="648" fg:w="65"/><text x="52.7622%" y="415.50">&lt;rpc_p..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (65 samples, 5.27%)</title><rect x="52.5122%" y="389" width="5.2674%" height="15" fill="rgb(212,87,36)" fg:x="648" fg:w="65"/><text x="52.7622%" y="399.50">&lt;std::..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.41%)</title><rect x="57.3744%" y="373" width="0.4052%" height="15" fill="rgb(247,82,36)" fg:x="708" fg:w="5"/><text x="57.6244%" y="383.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="57.4554%" y="357" width="0.3241%" height="15" fill="rgb(222,143,9)" fg:x="709" fg:w="4"/><text x="57.7054%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="57.7796%" y="405" width="0.2431%" height="15" fill="rgb(238,162,48)" fg:x="713" fg:w="3"/><text x="58.0296%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="57.8606%" y="389" width="0.1621%" height="15" fill="rgb(221,59,43)" fg:x="714" fg:w="2"/><text x="58.1106%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="58.1848%" y="389" width="0.1621%" height="15" fill="rgb(205,166,41)" fg:x="718" fg:w="2"/><text x="58.4348%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="58.2658%" y="373" width="0.0810%" height="15" fill="rgb(241,186,40)" fg:x="719" fg:w="1"/><text x="58.5158%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (77 samples, 6.24%)</title><rect x="52.2690%" y="421" width="6.2399%" height="15" fill="rgb(216,119,35)" fg:x="645" fg:w="77"/><text x="52.5190%" y="431.50">&lt;core::i..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.49%)</title><rect x="58.0227%" y="405" width="0.4862%" height="15" fill="rgb(208,68,38)" fg:x="716" fg:w="6"/><text x="58.2727%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.3468%" y="389" width="0.1621%" height="15" fill="rgb(217,113,1)" fg:x="720" fg:w="2"/><text x="58.5968%" y="399.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (89 samples, 7.21%)</title><rect x="52.2690%" y="453" width="7.2123%" height="15" fill="rgb(242,153,3)" fg:x="645" fg:w="89"/><text x="52.5190%" y="463.50">&lt;rpc_proto..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (89 samples, 7.21%)</title><rect x="52.2690%" y="437" width="7.2123%" height="15" fill="rgb(229,76,35)" fg:x="645" fg:w="89"/><text x="52.5190%" y="447.50">&lt;std::coll..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.97%)</title><rect x="58.5089%" y="421" width="0.9724%" height="15" fill="rgb(229,125,34)" fg:x="722" fg:w="12"/><text x="58.7589%" y="431.50"></text></g><g><title>__libc_malloc (11 samples, 0.89%)</title><rect x="58.5900%" y="405" width="0.8914%" height="15" fill="rgb(238,179,36)" fg:x="723" fg:w="11"/><text x="58.8400%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="59.7245%" y="405" width="0.1621%" height="15" fill="rgb(244,183,19)" fg:x="737" fg:w="2"/><text x="59.9745%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="59.8865%" y="405" width="0.2431%" height="15" fill="rgb(216,85,49)" fg:x="739" fg:w="3"/><text x="60.1365%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.0486%" y="389" width="0.0810%" height="15" fill="rgb(208,161,47)" fg:x="741" fg:w="1"/><text x="60.2986%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="60.0486%" y="373" width="0.0810%" height="15" fill="rgb(233,210,18)" fg:x="741" fg:w="1"/><text x="60.2986%" y="383.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="60.1297%" y="405" width="0.1621%" height="15" fill="rgb(205,104,42)" fg:x="742" fg:w="2"/><text x="60.3797%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="60.2107%" y="389" width="0.0810%" height="15" fill="rgb(248,90,43)" fg:x="743" fg:w="1"/><text x="60.4607%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="60.2917%" y="405" width="0.0810%" height="15" fill="rgb(206,198,11)" fg:x="744" fg:w="1"/><text x="60.5417%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="60.2917%" y="389" width="0.0810%" height="15" fill="rgb(239,165,27)" fg:x="744" fg:w="1"/><text x="60.5417%" y="399.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="60.5348%" y="373" width="0.2431%" height="15" fill="rgb(246,44,32)" fg:x="747" fg:w="3"/><text x="60.7848%" y="383.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (7 samples, 0.57%)</title><rect x="60.3728%" y="405" width="0.5673%" height="15" fill="rgb(252,65,42)" fg:x="745" fg:w="7"/><text x="60.6228%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.49%)</title><rect x="60.4538%" y="389" width="0.4862%" height="15" fill="rgb(246,197,18)" fg:x="746" fg:w="6"/><text x="60.7038%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="60.7780%" y="373" width="0.1621%" height="15" fill="rgb(216,192,4)" fg:x="750" fg:w="2"/><text x="61.0280%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="60.7780%" y="357" width="0.1621%" height="15" fill="rgb(208,117,10)" fg:x="750" fg:w="2"/><text x="61.0280%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="60.8590%" y="341" width="0.0810%" height="15" fill="rgb(240,61,47)" fg:x="751" fg:w="1"/><text x="61.1090%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.1021%" y="373" width="0.0810%" height="15" fill="rgb(228,178,21)" fg:x="754" fg:w="1"/><text x="61.3521%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.1021%" y="357" width="0.0810%" height="15" fill="rgb(219,96,54)" fg:x="754" fg:w="1"/><text x="61.3521%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.1021%" y="341" width="0.0810%" height="15" fill="rgb(250,177,24)" fg:x="754" fg:w="1"/><text x="61.3521%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="61.3452%" y="357" width="0.0810%" height="15" fill="rgb(242,154,46)" fg:x="757" fg:w="1"/><text x="61.5952%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.4263%" y="357" width="0.0810%" height="15" fill="rgb(226,176,29)" fg:x="758" fg:w="1"/><text x="61.6763%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.5073%" y="325" width="0.0810%" height="15" fill="rgb(226,29,2)" fg:x="759" fg:w="1"/><text x="61.7573%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="61.5073%" y="357" width="0.1621%" height="15" fill="rgb(237,104,14)" fg:x="759" fg:w="2"/><text x="61.7573%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="61.5073%" y="341" width="0.1621%" height="15" fill="rgb(245,207,31)" fg:x="759" fg:w="2"/><text x="61.7573%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="61.5883%" y="325" width="0.0810%" height="15" fill="rgb(229,211,45)" fg:x="760" fg:w="1"/><text x="61.8383%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.8314%" y="325" width="0.0810%" height="15" fill="rgb(229,113,15)" fg:x="763" fg:w="1"/><text x="62.0814%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.8314%" y="309" width="0.0810%" height="15" fill="rgb(237,147,15)" fg:x="763" fg:w="1"/><text x="62.0814%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="61.8314%" y="341" width="0.1621%" height="15" fill="rgb(244,120,12)" fg:x="763" fg:w="2"/><text x="62.0814%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="61.9125%" y="325" width="0.0810%" height="15" fill="rgb(205,120,12)" fg:x="764" fg:w="1"/><text x="62.1625%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.9935%" y="325" width="0.0810%" height="15" fill="rgb(231,26,45)" fg:x="765" fg:w="1"/><text x="62.2435%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.9935%" y="309" width="0.0810%" height="15" fill="rgb(246,98,1)" fg:x="765" fg:w="1"/><text x="62.2435%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.1556%" y="293" width="0.0810%" height="15" fill="rgb(207,68,45)" fg:x="767" fg:w="1"/><text x="62.4056%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="61.9935%" y="341" width="0.3241%" height="15" fill="rgb(231,27,38)" fg:x="765" fg:w="4"/><text x="62.2435%" y="351.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (3 samples, 0.24%)</title><rect x="62.0746%" y="325" width="0.2431%" height="15" fill="rgb(214,223,3)" fg:x="766" fg:w="3"/><text x="62.3246%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="62.1556%" y="309" width="0.1621%" height="15" fill="rgb(228,195,46)" fg:x="767" fg:w="2"/><text x="62.4056%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="62.2366%" y="293" width="0.0810%" height="15" fill="rgb(231,100,42)" fg:x="768" fg:w="1"/><text x="62.4866%" y="303.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (18 samples, 1.46%)</title><rect x="60.9400%" y="405" width="1.4587%" height="15" fill="rgb(236,53,4)" fg:x="752" fg:w="18"/><text x="61.1900%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (18 samples, 1.46%)</title><rect x="60.9400%" y="389" width="1.4587%" height="15" fill="rgb(230,152,12)" fg:x="752" fg:w="18"/><text x="61.1900%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_map (15 samples, 1.22%)</title><rect x="61.1831%" y="373" width="1.2156%" height="15" fill="rgb(226,101,19)" fg:x="755" fg:w="15"/><text x="61.4331%" y="383.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (9 samples, 0.73%)</title><rect x="61.6694%" y="357" width="0.7293%" height="15" fill="rgb(250,149,32)" fg:x="761" fg:w="9"/><text x="61.9194%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.3177%" y="341" width="0.0810%" height="15" fill="rgb(232,178,12)" fg:x="769" fg:w="1"/><text x="62.5677%" y="351.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="62.3987%" y="405" width="0.0810%" height="15" fill="rgb(246,151,17)" fg:x="770" fg:w="1"/><text x="62.6487%" y="415.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="62.8039%" y="389" width="0.3241%" height="15" fill="rgb(252,17,51)" fg:x="775" fg:w="4"/><text x="63.0539%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="63.1280%" y="389" width="0.2431%" height="15" fill="rgb(250,207,23)" fg:x="779" fg:w="3"/><text x="63.3780%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="63.1280%" y="373" width="0.2431%" height="15" fill="rgb(205,27,5)" fg:x="779" fg:w="3"/><text x="63.3780%" y="383.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="63.1280%" y="357" width="0.2431%" height="15" fill="rgb(224,32,19)" fg:x="779" fg:w="3"/><text x="63.3780%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="63.3712%" y="373" width="0.2431%" height="15" fill="rgb(247,214,40)" fg:x="782" fg:w="3"/><text x="63.6212%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="63.6953%" y="357" width="0.1621%" height="15" fill="rgb(239,199,17)" fg:x="786" fg:w="2"/><text x="63.9453%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="63.6953%" y="341" width="0.1621%" height="15" fill="rgb(251,159,9)" fg:x="786" fg:w="2"/><text x="63.9453%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="63.6953%" y="325" width="0.1621%" height="15" fill="rgb(225,78,32)" fg:x="786" fg:w="2"/><text x="63.9453%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="63.8574%" y="357" width="0.0810%" height="15" fill="rgb(206,97,47)" fg:x="788" fg:w="1"/><text x="64.1074%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="63.8574%" y="341" width="0.0810%" height="15" fill="rgb(227,107,4)" fg:x="788" fg:w="1"/><text x="64.1074%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="63.8574%" y="325" width="0.0810%" height="15" fill="rgb(241,146,50)" fg:x="788" fg:w="1"/><text x="64.1074%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="63.8574%" y="309" width="0.0810%" height="15" fill="rgb(232,92,30)" fg:x="788" fg:w="1"/><text x="64.1074%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.8574%" y="293" width="0.0810%" height="15" fill="rgb(222,0,40)" fg:x="788" fg:w="1"/><text x="64.1074%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="64.1005%" y="325" width="0.2431%" height="15" fill="rgb(219,54,33)" fg:x="791" fg:w="3"/><text x="64.3505%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="64.1815%" y="309" width="0.1621%" height="15" fill="rgb(226,209,28)" fg:x="792" fg:w="2"/><text x="64.4315%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.2626%" y="293" width="0.0810%" height="15" fill="rgb(254,205,35)" fg:x="793" fg:w="1"/><text x="64.5126%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.65%)</title><rect x="64.0194%" y="341" width="0.6483%" height="15" fill="rgb(230,159,3)" fg:x="790" fg:w="8"/><text x="64.2694%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="64.3436%" y="325" width="0.3241%" height="15" fill="rgb(232,190,24)" fg:x="794" fg:w="4"/><text x="64.5936%" y="335.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="64.3436%" y="309" width="0.3241%" height="15" fill="rgb(217,227,44)" fg:x="794" fg:w="4"/><text x="64.5936%" y="319.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (156 samples, 12.64%)</title><rect x="52.2690%" y="469" width="12.6418%" height="15" fill="rgb(236,211,1)" fg:x="645" fg:w="156"/><text x="52.5190%" y="479.50">&lt;rpc_proto::Json as..</text></g><g><title>kernel::model::EntityPtr::to_json_value (67 samples, 5.43%)</title><rect x="59.4814%" y="453" width="5.4295%" height="15" fill="rgb(250,127,46)" fg:x="734" fg:w="67"/><text x="59.7314%" y="463.50">kernel:..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (66 samples, 5.35%)</title><rect x="59.5624%" y="437" width="5.3485%" height="15" fill="rgb(229,213,6)" fg:x="735" fg:w="66"/><text x="59.8124%" y="447.50">kernel:..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (66 samples, 5.35%)</title><rect x="59.5624%" y="421" width="5.3485%" height="15" fill="rgb(237,15,36)" fg:x="735" fg:w="66"/><text x="59.8124%" y="431.50">&lt;serde_..</text></g><g><title>serde::ser::Serializer::collect_map (30 samples, 2.43%)</title><rect x="62.4797%" y="405" width="2.4311%" height="15" fill="rgb(213,131,41)" fg:x="771" fg:w="30"/><text x="62.7297%" y="415.50">se..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (19 samples, 1.54%)</title><rect x="63.3712%" y="389" width="1.5397%" height="15" fill="rgb(225,82,44)" fg:x="782" fg:w="19"/><text x="63.6212%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (16 samples, 1.30%)</title><rect x="63.6143%" y="373" width="1.2966%" height="15" fill="rgb(249,42,11)" fg:x="785" fg:w="16"/><text x="63.8643%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.97%)</title><rect x="63.9384%" y="357" width="0.9724%" height="15" fill="rgb(253,11,29)" fg:x="789" fg:w="12"/><text x="64.1884%" y="367.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="64.6677%" y="341" width="0.2431%" height="15" fill="rgb(206,8,54)" fg:x="798" fg:w="3"/><text x="64.9177%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.9109%" y="469" width="0.0810%" height="15" fill="rgb(222,186,2)" fg:x="801" fg:w="1"/><text x="65.1609%" y="479.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="64.9919%" y="469" width="0.0810%" height="15" fill="rgb(221,206,53)" fg:x="802" fg:w="1"/><text x="65.2419%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="65.0729%" y="469" width="0.1621%" height="15" fill="rgb(230,150,21)" fg:x="803" fg:w="2"/><text x="65.3229%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="65.0729%" y="453" width="0.1621%" height="15" fill="rgb(253,202,10)" fg:x="803" fg:w="2"/><text x="65.3229%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (249 samples, 20.18%)</title><rect x="45.1378%" y="533" width="20.1783%" height="15" fill="rgb(238,109,40)" fg:x="557" fg:w="249"/><text x="45.3878%" y="543.50">core::iter::adapters::try_process</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (174 samples, 14.10%)</title><rect x="51.2156%" y="517" width="14.1005%" height="15" fill="rgb(247,120,22)" fg:x="632" fg:w="174"/><text x="51.4656%" y="527.50">alloc::vec::in_place_..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (174 samples, 14.10%)</title><rect x="51.2156%" y="501" width="14.1005%" height="15" fill="rgb(207,43,30)" fg:x="632" fg:w="174"/><text x="51.4656%" y="511.50">&lt;core::iter::adapters..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (174 samples, 14.10%)</title><rect x="51.2156%" y="485" width="14.1005%" height="15" fill="rgb(213,211,24)" fg:x="632" fg:w="174"/><text x="51.4656%" y="495.50">plugins_rpc::sessions..</text></g><g><title>rpc_proto::&lt;impl core::convert::From&lt;&amp;rpc_proto::EntityKey&gt; for kernel::model::EntityKey&gt;::from (1 samples, 0.08%)</title><rect x="65.2350%" y="469" width="0.0810%" height="15" fill="rgb(239,73,39)" fg:x="805" fg:w="1"/><text x="65.4850%" y="479.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.08%)</title><rect x="65.2350%" y="453" width="0.0810%" height="15" fill="rgb(245,182,19)" fg:x="805" fg:w="1"/><text x="65.4850%" y="463.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (261 samples, 21.15%)</title><rect x="44.2464%" y="549" width="21.1507%" height="15" fill="rgb(247,143,26)" fg:x="546" fg:w="261"/><text x="44.4964%" y="559.50">&lt;plugins_rpc::sessions::SessionSe..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.3160%" y="533" width="0.0810%" height="15" fill="rgb(228,191,23)" fg:x="806" fg:w="1"/><text x="65.5660%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="65.3160%" y="517" width="0.0810%" height="15" fill="rgb(253,165,31)" fg:x="806" fg:w="1"/><text x="65.5660%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="65.3160%" y="501" width="0.0810%" height="15" fill="rgb(234,138,20)" fg:x="806" fg:w="1"/><text x="65.5660%" y="511.50"></text></g><g><title>&lt;rpc_proto::Surroundings as core::convert::TryFrom&lt;&amp;kernel::surround::Surroundings&gt;&gt;::try_from (1 samples, 0.08%)</title><rect x="65.3971%" y="549" width="0.0810%" height="15" fill="rgb(218,191,29)" fg:x="807" fg:w="1"/><text x="65.6471%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="65.3971%" y="533" width="0.0810%" height="15" fill="rgb(221,157,19)" fg:x="807" fg:w="1"/><text x="65.6471%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="65.3971%" y="517" width="0.0810%" height="15" fill="rgb(237,26,42)" fg:x="807" fg:w="1"/><text x="65.6471%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="65.3971%" y="501" width="0.0810%" height="15" fill="rgb(220,163,24)" fg:x="807" fg:w="1"/><text x="65.6471%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="65.3971%" y="485" width="0.0810%" height="15" fill="rgb(242,115,20)" fg:x="807" fg:w="1"/><text x="65.6471%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="65.3971%" y="469" width="0.0810%" height="15" fill="rgb(210,206,9)" fg:x="807" fg:w="1"/><text x="65.6471%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.4781%" y="549" width="0.0810%" height="15" fill="rgb(208,71,17)" fg:x="808" fg:w="1"/><text x="65.7281%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="65.5592%" y="549" width="0.0810%" height="15" fill="rgb(233,7,5)" fg:x="809" fg:w="1"/><text x="65.8092%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="65.5592%" y="533" width="0.0810%" height="15" fill="rgb(207,92,33)" fg:x="809" fg:w="1"/><text x="65.8092%" y="543.50"></text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (292 samples, 23.66%)</title><rect x="42.0583%" y="597" width="23.6629%" height="15" fill="rgb(218,87,9)" fg:x="519" fg:w="292"/><text x="42.3083%" y="607.50">kernel::plugins::SessionPlugins::have_..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (292 samples, 23.66%)</title><rect x="42.0583%" y="581" width="23.6629%" height="15" fill="rgb(219,47,37)" fg:x="519" fg:w="292"/><text x="42.3083%" y="591.50">&lt;plugins_dynlib::DynamicPlugin as kern..</text></g><g><title>plugins_rpc::querying::have_surroundings (266 samples, 21.56%)</title><rect x="44.1653%" y="565" width="21.5559%" height="15" fill="rgb(221,152,34)" fg:x="545" fg:w="266"/><text x="44.4153%" y="575.50">plugins_rpc::querying::have_surrou..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="65.6402%" y="549" width="0.0810%" height="15" fill="rgb(235,176,21)" fg:x="810" fg:w="1"/><text x="65.8902%" y="559.50"></text></g><g><title>rpc_proto::&lt;impl core::convert::Into&lt;rpc_proto::EntityKey&gt; for kernel::model::EntityKey&gt;::into (1 samples, 0.08%)</title><rect x="65.6402%" y="533" width="0.0810%" height="15" fill="rgb(232,212,21)" fg:x="810" fg:w="1"/><text x="65.8902%" y="543.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;kernel::model::EntityKey&gt; for alloc::string::String&gt;::from (1 samples, 0.08%)</title><rect x="65.6402%" y="517" width="0.0810%" height="15" fill="rgb(245,82,39)" fg:x="810" fg:w="1"/><text x="65.8902%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="65.6402%" y="501" width="0.0810%" height="15" fill="rgb(241,52,51)" fg:x="810" fg:w="1"/><text x="65.8902%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="65.6402%" y="485" width="0.0810%" height="15" fill="rgb(219,91,24)" fg:x="810" fg:w="1"/><text x="65.8902%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="65.6402%" y="469" width="0.0810%" height="15" fill="rgb(241,142,12)" fg:x="810" fg:w="1"/><text x="65.8902%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="65.6402%" y="453" width="0.0810%" height="15" fill="rgb(230,27,9)" fg:x="810" fg:w="1"/><text x="65.8902%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="65.6402%" y="437" width="0.0810%" height="15" fill="rgb(249,181,32)" fg:x="810" fg:w="1"/><text x="65.8902%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="65.6402%" y="421" width="0.0810%" height="15" fill="rgb(230,107,3)" fg:x="810" fg:w="1"/><text x="65.8902%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.6402%" y="405" width="0.0810%" height="15" fill="rgb(246,204,14)" fg:x="810" fg:w="1"/><text x="65.8902%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (812 samples, 65.80%)</title><rect x="0.0000%" y="677" width="65.8023%" height="15" fill="rgb(213,192,47)" fg:x="0" fg:w="812"/><text x="0.2500%" y="687.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (812 samples, 65.80%)</title><rect x="0.0000%" y="661" width="65.8023%" height="15" fill="rgb(240,44,36)" fg:x="0" fg:w="812"/><text x="0.2500%" y="671.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (812 samples, 65.80%)</title><rect x="0.0000%" y="645" width="65.8023%" height="15" fill="rgb(244,209,38)" fg:x="0" fg:w="812"/><text x="0.2500%" y="655.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (347 samples, 28.12%)</title><rect x="37.6823%" y="629" width="28.1199%" height="15" fill="rgb(219,34,37)" fg:x="465" fg:w="347"/><text x="37.9323%" y="639.50">engine::session::Session::evaluate_and_perform</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (347 samples, 28.12%)</title><rect x="37.6823%" y="613" width="28.1199%" height="15" fill="rgb(210,28,6)" fg:x="465" fg:w="347"/><text x="37.9323%" y="623.50">engine::perform::StandardPerformer::evaluate_..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="65.7212%" y="597" width="0.0810%" height="15" fill="rgb(244,110,52)" fg:x="811" fg:w="1"/><text x="65.9712%" y="607.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="65.7212%" y="581" width="0.0810%" height="15" fill="rgb(254,124,47)" fg:x="811" fg:w="1"/><text x="65.9712%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="65.7212%" y="565" width="0.0810%" height="15" fill="rgb(254,110,13)" fg:x="811" fg:w="1"/><text x="65.9712%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="65.7212%" y="549" width="0.0810%" height="15" fill="rgb(252,57,21)" fg:x="811" fg:w="1"/><text x="65.9712%" y="559.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="65.7212%" y="533" width="0.0810%" height="15" fill="rgb(242,60,45)" fg:x="811" fg:w="1"/><text x="65.9712%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.8023%" y="501" width="0.0810%" height="15" fill="rgb(234,49,30)" fg:x="812" fg:w="1"/><text x="66.0523%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="65.8833%" y="485" width="0.1621%" height="15" fill="rgb(218,98,6)" fg:x="813" fg:w="2"/><text x="66.1333%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="65.8833%" y="469" width="0.1621%" height="15" fill="rgb(220,174,29)" fg:x="813" fg:w="2"/><text x="66.1333%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.9643%" y="453" width="0.0810%" height="15" fill="rgb(236,163,23)" fg:x="814" fg:w="1"/><text x="66.2143%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.41%)</title><rect x="65.8023%" y="549" width="0.4052%" height="15" fill="rgb(242,114,45)" fg:x="812" fg:w="5"/><text x="66.0523%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="65.8023%" y="533" width="0.4052%" height="15" fill="rgb(232,10,53)" fg:x="812" fg:w="5"/><text x="66.0523%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.41%)</title><rect x="65.8023%" y="517" width="0.4052%" height="15" fill="rgb(245,108,29)" fg:x="812" fg:w="5"/><text x="66.0523%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="65.8833%" y="501" width="0.3241%" height="15" fill="rgb(240,89,53)" fg:x="813" fg:w="4"/><text x="66.1333%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="66.0454%" y="485" width="0.1621%" height="15" fill="rgb(226,60,45)" fg:x="815" fg:w="2"/><text x="66.2954%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.49%)</title><rect x="65.8023%" y="565" width="0.4862%" height="15" fill="rgb(230,41,44)" fg:x="812" fg:w="6"/><text x="66.0523%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.2075%" y="549" width="0.0810%" height="15" fill="rgb(230,26,20)" fg:x="817" fg:w="1"/><text x="66.4575%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.57%)</title><rect x="65.8023%" y="629" width="0.5673%" height="15" fill="rgb(237,170,32)" fg:x="812" fg:w="7"/><text x="66.0523%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (7 samples, 0.57%)</title><rect x="65.8023%" y="613" width="0.5673%" height="15" fill="rgb(212,35,42)" fg:x="812" fg:w="7"/><text x="66.0523%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.57%)</title><rect x="65.8023%" y="597" width="0.5673%" height="15" fill="rgb(227,31,34)" fg:x="812" fg:w="7"/><text x="66.0523%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (7 samples, 0.57%)</title><rect x="65.8023%" y="581" width="0.5673%" height="15" fill="rgb(216,19,18)" fg:x="812" fg:w="7"/><text x="66.0523%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="66.2885%" y="565" width="0.0810%" height="15" fill="rgb(211,133,42)" fg:x="818" fg:w="1"/><text x="66.5385%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.2885%" y="549" width="0.0810%" height="15" fill="rgb(244,66,13)" fg:x="818" fg:w="1"/><text x="66.5385%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="66.3695%" y="565" width="0.0810%" height="15" fill="rgb(218,185,50)" fg:x="819" fg:w="1"/><text x="66.6195%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.6126%" y="485" width="0.0810%" height="15" fill="rgb(219,149,13)" fg:x="822" fg:w="1"/><text x="66.8626%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="66.7747%" y="453" width="0.0810%" height="15" fill="rgb(221,125,0)" fg:x="824" fg:w="1"/><text x="67.0247%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.7747%" y="437" width="0.0810%" height="15" fill="rgb(247,126,27)" fg:x="824" fg:w="1"/><text x="67.0247%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.7747%" y="421" width="0.0810%" height="15" fill="rgb(250,138,30)" fg:x="824" fg:w="1"/><text x="67.0247%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.7747%" y="405" width="0.0810%" height="15" fill="rgb(230,151,9)" fg:x="824" fg:w="1"/><text x="67.0247%" y="415.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (6 samples, 0.49%)</title><rect x="66.4506%" y="549" width="0.4862%" height="15" fill="rgb(233,80,38)" fg:x="820" fg:w="6"/><text x="66.7006%" y="559.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (6 samples, 0.49%)</title><rect x="66.4506%" y="533" width="0.4862%" height="15" fill="rgb(232,68,43)" fg:x="820" fg:w="6"/><text x="66.7006%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.49%)</title><rect x="66.4506%" y="517" width="0.4862%" height="15" fill="rgb(254,5,50)" fg:x="820" fg:w="6"/><text x="66.7006%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="66.5316%" y="501" width="0.4052%" height="15" fill="rgb(225,45,5)" fg:x="821" fg:w="5"/><text x="66.7816%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="66.6937%" y="485" width="0.2431%" height="15" fill="rgb(239,22,3)" fg:x="823" fg:w="3"/><text x="66.9437%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="66.6937%" y="469" width="0.2431%" height="15" fill="rgb(243,129,0)" fg:x="823" fg:w="3"/><text x="66.9437%" y="479.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="66.8558%" y="453" width="0.0810%" height="15" fill="rgb(223,164,0)" fg:x="825" fg:w="1"/><text x="67.1058%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="66.9368%" y="501" width="0.1621%" height="15" fill="rgb(221,46,29)" fg:x="826" fg:w="2"/><text x="67.1868%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.0178%" y="485" width="0.0810%" height="15" fill="rgb(205,97,47)" fg:x="827" fg:w="1"/><text x="67.2678%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (11 samples, 0.89%)</title><rect x="66.3695%" y="597" width="0.8914%" height="15" fill="rgb(249,14,8)" fg:x="819" fg:w="11"/><text x="66.6195%" y="607.50"></text></g><g><title>engine::internal::Entities::prepare_entity (11 samples, 0.89%)</title><rect x="66.3695%" y="581" width="0.8914%" height="15" fill="rgb(216,77,3)" fg:x="819" fg:w="11"/><text x="66.6195%" y="591.50"></text></g><g><title>kernel::model::deserialize_entity (10 samples, 0.81%)</title><rect x="66.4506%" y="565" width="0.8104%" height="15" fill="rgb(206,168,54)" fg:x="820" fg:w="10"/><text x="66.7006%" y="575.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="66.9368%" y="549" width="0.3241%" height="15" fill="rgb(236,3,41)" fg:x="826" fg:w="4"/><text x="67.1868%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="66.9368%" y="533" width="0.3241%" height="15" fill="rgb(231,132,24)" fg:x="826" fg:w="4"/><text x="67.1868%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="66.9368%" y="517" width="0.3241%" height="15" fill="rgb(227,221,40)" fg:x="826" fg:w="4"/><text x="67.1868%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="67.0989%" y="501" width="0.1621%" height="15" fill="rgb(233,151,11)" fg:x="828" fg:w="2"/><text x="67.3489%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.1799%" y="485" width="0.0810%" height="15" fill="rgb(247,81,35)" fg:x="829" fg:w="1"/><text x="67.4299%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.1799%" y="469" width="0.0810%" height="15" fill="rgb(243,128,48)" fg:x="829" fg:w="1"/><text x="67.4299%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.1799%" y="453" width="0.0810%" height="15" fill="rgb(253,16,10)" fg:x="829" fg:w="1"/><text x="67.4299%" y="463.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (5 samples, 0.41%)</title><rect x="67.2609%" y="581" width="0.4052%" height="15" fill="rgb(228,67,27)" fg:x="830" fg:w="5"/><text x="67.5109%" y="591.50"></text></g><g><title>libloading::os::unix::Library::open (5 samples, 0.41%)</title><rect x="67.2609%" y="565" width="0.4052%" height="15" fill="rgb(231,105,25)" fg:x="830" fg:w="5"/><text x="67.5109%" y="575.50"></text></g><g><title>dlopen (5 samples, 0.41%)</title><rect x="67.2609%" y="549" width="0.4052%" height="15" fill="rgb(213,166,47)" fg:x="830" fg:w="5"/><text x="67.5109%" y="559.50"></text></g><g><title>_dl_catch_error (5 samples, 0.41%)</title><rect x="67.2609%" y="533" width="0.4052%" height="15" fill="rgb(209,27,10)" fg:x="830" fg:w="5"/><text x="67.5109%" y="543.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.41%)</title><rect x="67.2609%" y="517" width="0.4052%" height="15" fill="rgb(241,44,30)" fg:x="830" fg:w="5"/><text x="67.5109%" y="527.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="67.3420%" y="501" width="0.3241%" height="15" fill="rgb(223,216,15)" fg:x="831" fg:w="4"/><text x="67.5920%" y="511.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="67.3420%" y="485" width="0.3241%" height="15" fill="rgb(227,14,7)" fg:x="831" fg:w="4"/><text x="67.5920%" y="495.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (17 samples, 1.38%)</title><rect x="66.3695%" y="629" width="1.3776%" height="15" fill="rgb(237,14,5)" fg:x="819" fg:w="17"/><text x="66.6195%" y="639.50"></text></g><g><title>engine::session::Session::new (17 samples, 1.38%)</title><rect x="66.3695%" y="613" width="1.3776%" height="15" fill="rgb(232,14,36)" fg:x="819" fg:w="17"/><text x="66.6195%" y="623.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (6 samples, 0.49%)</title><rect x="67.2609%" y="597" width="0.4862%" height="15" fill="rgb(234,0,38)" fg:x="830" fg:w="6"/><text x="67.5109%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="67.6661%" y="581" width="0.0810%" height="15" fill="rgb(207,170,14)" fg:x="835" fg:w="1"/><text x="67.9161%" y="591.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="67.6661%" y="565" width="0.0810%" height="15" fill="rgb(252,45,13)" fg:x="835" fg:w="1"/><text x="67.9161%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="67.7472%" y="581" width="0.0810%" height="15" fill="rgb(213,142,7)" fg:x="836" fg:w="1"/><text x="67.9972%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="67.7472%" y="565" width="0.0810%" height="15" fill="rgb(216,157,23)" fg:x="836" fg:w="1"/><text x="67.9972%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="67.7472%" y="549" width="0.0810%" height="15" fill="rgb(212,145,33)" fg:x="836" fg:w="1"/><text x="67.9972%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="67.7472%" y="533" width="0.0810%" height="15" fill="rgb(233,26,13)" fg:x="836" fg:w="1"/><text x="67.9972%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="67.8282%" y="517" width="0.0810%" height="15" fill="rgb(219,196,19)" fg:x="837" fg:w="1"/><text x="68.0782%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="67.8282%" y="501" width="0.0810%" height="15" fill="rgb(246,56,21)" fg:x="837" fg:w="1"/><text x="68.0782%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="67.8282%" y="485" width="0.0810%" height="15" fill="rgb(222,28,53)" fg:x="837" fg:w="1"/><text x="68.0782%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="67.8282%" y="469" width="0.0810%" height="15" fill="rgb(224,5,27)" fg:x="837" fg:w="1"/><text x="68.0782%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="67.8282%" y="533" width="0.1621%" height="15" fill="rgb(220,153,33)" fg:x="837" fg:w="2"/><text x="68.0782%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="67.9092%" y="517" width="0.0810%" height="15" fill="rgb(226,58,19)" fg:x="838" fg:w="1"/><text x="68.1592%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="67.9092%" y="501" width="0.0810%" height="15" fill="rgb(239,112,23)" fg:x="838" fg:w="1"/><text x="68.1592%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="67.9092%" y="485" width="0.0810%" height="15" fill="rgb(251,213,20)" fg:x="838" fg:w="1"/><text x="68.1592%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="67.9903%" y="517" width="0.1621%" height="15" fill="rgb(215,181,21)" fg:x="839" fg:w="2"/><text x="68.2403%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="67.9903%" y="501" width="0.1621%" height="15" fill="rgb(240,8,35)" fg:x="839" fg:w="2"/><text x="68.2403%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="67.9903%" y="485" width="0.1621%" height="15" fill="rgb(232,203,3)" fg:x="839" fg:w="2"/><text x="68.2403%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="67.9903%" y="469" width="0.1621%" height="15" fill="rgb(214,202,43)" fg:x="839" fg:w="2"/><text x="68.2403%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="67.9903%" y="453" width="0.1621%" height="15" fill="rgb(254,35,11)" fg:x="839" fg:w="2"/><text x="68.2403%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="67.9903%" y="437" width="0.1621%" height="15" fill="rgb(239,173,13)" fg:x="839" fg:w="2"/><text x="68.2403%" y="447.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="67.9903%" y="421" width="0.1621%" height="15" fill="rgb(220,141,0)" fg:x="839" fg:w="2"/><text x="68.2403%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="68.2334%" y="501" width="0.2431%" height="15" fill="rgb(210,98,12)" fg:x="842" fg:w="3"/><text x="68.4834%" y="511.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="68.2334%" y="485" width="0.2431%" height="15" fill="rgb(254,153,22)" fg:x="842" fg:w="3"/><text x="68.4834%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="68.3955%" y="469" width="0.0810%" height="15" fill="rgb(247,223,17)" fg:x="844" fg:w="1"/><text x="68.6455%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="68.5575%" y="485" width="0.2431%" height="15" fill="rgb(246,56,7)" fg:x="846" fg:w="3"/><text x="68.8075%" y="495.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="68.5575%" y="469" width="0.2431%" height="15" fill="rgb(240,226,12)" fg:x="846" fg:w="3"/><text x="68.8075%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="68.6386%" y="453" width="0.1621%" height="15" fill="rgb(205,87,46)" fg:x="847" fg:w="2"/><text x="68.8886%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="68.6386%" y="437" width="0.1621%" height="15" fill="rgb(245,214,51)" fg:x="847" fg:w="2"/><text x="68.8886%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="68.8006%" y="485" width="0.1621%" height="15" fill="rgb(223,172,33)" fg:x="849" fg:w="2"/><text x="69.0506%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.0438%" y="453" width="0.0810%" height="15" fill="rgb(227,203,34)" fg:x="852" fg:w="1"/><text x="69.2938%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.73%)</title><rect x="68.4765%" y="501" width="0.7293%" height="15" fill="rgb(248,143,44)" fg:x="845" fg:w="9"/><text x="68.7265%" y="511.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="68.9627%" y="485" width="0.2431%" height="15" fill="rgb(226,162,5)" fg:x="851" fg:w="3"/><text x="69.2127%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="69.0438%" y="469" width="0.1621%" height="15" fill="rgb(211,143,1)" fg:x="852" fg:w="2"/><text x="69.2938%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="69.1248%" y="453" width="0.0810%" height="15" fill="rgb(224,96,15)" fg:x="853" fg:w="1"/><text x="69.3748%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.30%)</title><rect x="68.1524%" y="517" width="1.2966%" height="15" fill="rgb(222,4,38)" fg:x="841" fg:w="16"/><text x="68.4024%" y="527.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="69.2058%" y="501" width="0.2431%" height="15" fill="rgb(253,228,15)" fg:x="854" fg:w="3"/><text x="69.4558%" y="511.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (23 samples, 1.86%)</title><rect x="67.8282%" y="549" width="1.8639%" height="15" fill="rgb(242,194,12)" fg:x="837" fg:w="23"/><text x="68.0782%" y="559.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.70%)</title><rect x="67.9903%" y="533" width="1.7018%" height="15" fill="rgb(214,177,31)" fg:x="839" fg:w="21"/><text x="68.2403%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="69.4489%" y="517" width="0.2431%" height="15" fill="rgb(226,58,51)" fg:x="857" fg:w="3"/><text x="69.6989%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="69.4489%" y="501" width="0.2431%" height="15" fill="rgb(250,119,16)" fg:x="857" fg:w="3"/><text x="69.6989%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.6921%" y="517" width="0.0810%" height="15" fill="rgb(223,128,53)" fg:x="860" fg:w="1"/><text x="69.9421%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="69.7731%" y="517" width="0.1621%" height="15" fill="rgb(251,199,15)" fg:x="861" fg:w="2"/><text x="70.0231%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.9352%" y="501" width="0.0810%" height="15" fill="rgb(235,168,42)" fg:x="863" fg:w="1"/><text x="70.1852%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.9352%" y="485" width="0.0810%" height="15" fill="rgb(250,210,17)" fg:x="863" fg:w="1"/><text x="70.1852%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.0162%" y="485" width="0.0810%" height="15" fill="rgb(226,36,41)" fg:x="864" fg:w="1"/><text x="70.2662%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.0972%" y="469" width="0.0810%" height="15" fill="rgb(225,87,10)" fg:x="865" fg:w="1"/><text x="70.3472%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="70.0972%" y="453" width="0.0810%" height="15" fill="rgb(228,83,9)" fg:x="865" fg:w="1"/><text x="70.3472%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.0972%" y="437" width="0.0810%" height="15" fill="rgb(225,16,36)" fg:x="865" fg:w="1"/><text x="70.3472%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="69.6921%" y="549" width="0.5673%" height="15" fill="rgb(242,198,13)" fg:x="860" fg:w="7"/><text x="69.9421%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.57%)</title><rect x="69.6921%" y="533" width="0.5673%" height="15" fill="rgb(239,25,51)" fg:x="860" fg:w="7"/><text x="69.9421%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="69.9352%" y="517" width="0.3241%" height="15" fill="rgb(239,28,37)" fg:x="863" fg:w="4"/><text x="70.1852%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="70.0162%" y="501" width="0.2431%" height="15" fill="rgb(234,70,17)" fg:x="864" fg:w="3"/><text x="70.2662%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="70.0972%" y="485" width="0.1621%" height="15" fill="rgb(231,215,53)" fg:x="865" fg:w="2"/><text x="70.3472%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.1783%" y="469" width="0.0810%" height="15" fill="rgb(218,140,42)" fg:x="866" fg:w="1"/><text x="70.4283%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.4214%" y="501" width="0.0810%" height="15" fill="rgb(233,227,45)" fg:x="869" fg:w="1"/><text x="70.6714%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.5024%" y="453" width="0.0810%" height="15" fill="rgb(225,189,21)" fg:x="870" fg:w="1"/><text x="70.7524%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.5024%" y="437" width="0.0810%" height="15" fill="rgb(237,176,54)" fg:x="870" fg:w="1"/><text x="70.7524%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.5024%" y="421" width="0.0810%" height="15" fill="rgb(215,131,46)" fg:x="870" fg:w="1"/><text x="70.7524%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="70.5024%" y="501" width="0.1621%" height="15" fill="rgb(218,95,20)" fg:x="870" fg:w="2"/><text x="70.7524%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="70.5024%" y="485" width="0.1621%" height="15" fill="rgb(208,198,12)" fg:x="870" fg:w="2"/><text x="70.7524%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="70.5024%" y="469" width="0.1621%" height="15" fill="rgb(239,107,50)" fg:x="870" fg:w="2"/><text x="70.7524%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="70.5835%" y="453" width="0.0810%" height="15" fill="rgb(240,217,37)" fg:x="871" fg:w="1"/><text x="70.8335%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="70.5835%" y="437" width="0.0810%" height="15" fill="rgb(242,197,49)" fg:x="871" fg:w="1"/><text x="70.8335%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="70.5835%" y="421" width="0.0810%" height="15" fill="rgb(219,171,17)" fg:x="871" fg:w="1"/><text x="70.8335%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="70.5835%" y="405" width="0.0810%" height="15" fill="rgb(209,81,40)" fg:x="871" fg:w="1"/><text x="70.8335%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.5835%" y="389" width="0.0810%" height="15" fill="rgb(237,156,30)" fg:x="871" fg:w="1"/><text x="70.8335%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="70.7455%" y="453" width="0.1621%" height="15" fill="rgb(212,127,16)" fg:x="873" fg:w="2"/><text x="70.9955%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="70.8266%" y="437" width="0.0810%" height="15" fill="rgb(226,66,32)" fg:x="874" fg:w="1"/><text x="71.0766%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="70.8266%" y="421" width="0.0810%" height="15" fill="rgb(245,22,46)" fg:x="874" fg:w="1"/><text x="71.0766%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.8266%" y="405" width="0.0810%" height="15" fill="rgb(210,112,21)" fg:x="874" fg:w="1"/><text x="71.0766%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.9076%" y="421" width="0.0810%" height="15" fill="rgb(207,118,39)" fg:x="875" fg:w="1"/><text x="71.1576%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.9076%" y="405" width="0.0810%" height="15" fill="rgb(205,206,35)" fg:x="875" fg:w="1"/><text x="71.1576%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.9076%" y="389" width="0.0810%" height="15" fill="rgb(222,120,2)" fg:x="875" fg:w="1"/><text x="71.1576%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.41%)</title><rect x="70.6645%" y="469" width="0.4052%" height="15" fill="rgb(205,38,18)" fg:x="872" fg:w="5"/><text x="70.9145%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="70.9076%" y="453" width="0.1621%" height="15" fill="rgb(226,61,2)" fg:x="875" fg:w="2"/><text x="71.1576%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="70.9076%" y="437" width="0.1621%" height="15" fill="rgb(242,161,23)" fg:x="875" fg:w="2"/><text x="71.1576%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="70.9887%" y="421" width="0.0810%" height="15" fill="rgb(213,13,52)" fg:x="876" fg:w="1"/><text x="71.2387%" y="431.50"></text></g><g><title>engine::session::Session::flush (42 samples, 3.40%)</title><rect x="67.7472%" y="613" width="3.4036%" height="15" fill="rgb(246,209,47)" fg:x="836" fg:w="42"/><text x="67.9972%" y="623.50">eng..</text></g><g><title>engine::session::Session::save_entity_changes (42 samples, 3.40%)</title><rect x="67.7472%" y="597" width="3.4036%" height="15" fill="rgb(214,41,3)" fg:x="836" fg:w="42"/><text x="67.9972%" y="607.50">eng..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (41 samples, 3.32%)</title><rect x="67.8282%" y="581" width="3.3225%" height="15" fill="rgb(236,119,38)" fg:x="837" fg:w="41"/><text x="68.0782%" y="591.50">eng..</text></g><g><title>engine::session::Session::check_for_changes (41 samples, 3.32%)</title><rect x="67.8282%" y="565" width="3.3225%" height="15" fill="rgb(218,50,11)" fg:x="837" fg:w="41"/><text x="68.0782%" y="575.50">eng..</text></g><g><title>kernel::compare::any_entity_changes (11 samples, 0.89%)</title><rect x="70.2593%" y="549" width="0.8914%" height="15" fill="rgb(228,38,11)" fg:x="867" fg:w="11"/><text x="70.5093%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (11 samples, 0.89%)</title><rect x="70.2593%" y="533" width="0.8914%" height="15" fill="rgb(212,13,9)" fg:x="867" fg:w="11"/><text x="70.5093%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.89%)</title><rect x="70.2593%" y="517" width="0.8914%" height="15" fill="rgb(208,211,9)" fg:x="867" fg:w="11"/><text x="70.5093%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.49%)</title><rect x="70.6645%" y="501" width="0.4862%" height="15" fill="rgb(239,39,32)" fg:x="872" fg:w="6"/><text x="70.9145%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (6 samples, 0.49%)</title><rect x="70.6645%" y="485" width="0.4862%" height="15" fill="rgb(254,179,26)" fg:x="872" fg:w="6"/><text x="70.9145%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="71.0697%" y="469" width="0.0810%" height="15" fill="rgb(249,165,28)" fg:x="877" fg:w="1"/><text x="71.3197%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="71.1507%" y="597" width="0.0810%" height="15" fill="rgb(225,59,50)" fg:x="878" fg:w="1"/><text x="71.4007%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="71.1507%" y="581" width="0.0810%" height="15" fill="rgb(209,122,5)" fg:x="878" fg:w="1"/><text x="71.4007%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="71.1507%" y="565" width="0.0810%" height="15" fill="rgb(214,65,34)" fg:x="878" fg:w="1"/><text x="71.4007%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="71.3128%" y="581" width="0.0810%" height="15" fill="rgb(249,183,32)" fg:x="880" fg:w="1"/><text x="71.5628%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.3128%" y="565" width="0.0810%" height="15" fill="rgb(218,122,24)" fg:x="880" fg:w="1"/><text x="71.5628%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.3128%" y="549" width="0.0810%" height="15" fill="rgb(224,109,18)" fg:x="880" fg:w="1"/><text x="71.5628%" y="559.50"></text></g><g><title>plugins_core::build::Build::holding (4 samples, 0.32%)</title><rect x="71.1507%" y="613" width="0.3241%" height="15" fill="rgb(210,68,50)" fg:x="878" fg:w="4"/><text x="71.4007%" y="623.50"></text></g><g><title>plugins_core::tools::set_container (3 samples, 0.24%)</title><rect x="71.2318%" y="597" width="0.2431%" height="15" fill="rgb(212,184,34)" fg:x="879" fg:w="3"/><text x="71.4818%" y="607.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="71.3938%" y="581" width="0.0810%" height="15" fill="rgb(238,105,48)" fg:x="881" fg:w="1"/><text x="71.6438%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="71.3938%" y="565" width="0.0810%" height="15" fill="rgb(222,134,54)" fg:x="881" fg:w="1"/><text x="71.6438%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="71.4749%" y="581" width="0.1621%" height="15" fill="rgb(246,24,43)" fg:x="882" fg:w="2"/><text x="71.7249%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="71.5559%" y="565" width="0.0810%" height="15" fill="rgb(227,169,22)" fg:x="883" fg:w="1"/><text x="71.8059%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="71.5559%" y="549" width="0.0810%" height="15" fill="rgb(253,152,4)" fg:x="883" fg:w="1"/><text x="71.8059%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="71.5559%" y="533" width="0.0810%" height="15" fill="rgb(219,158,36)" fg:x="883" fg:w="1"/><text x="71.8059%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="71.5559%" y="517" width="0.0810%" height="15" fill="rgb(251,128,40)" fg:x="883" fg:w="1"/><text x="71.8059%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="71.5559%" y="501" width="0.0810%" height="15" fill="rgb(254,101,39)" fg:x="883" fg:w="1"/><text x="71.8059%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="71.5559%" y="485" width="0.0810%" height="15" fill="rgb(221,168,40)" fg:x="883" fg:w="1"/><text x="71.8059%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="71.5559%" y="469" width="0.0810%" height="15" fill="rgb(221,14,27)" fg:x="883" fg:w="1"/><text x="71.8059%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="71.5559%" y="453" width="0.0810%" height="15" fill="rgb(207,36,43)" fg:x="883" fg:w="1"/><text x="71.8059%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="71.5559%" y="437" width="0.0810%" height="15" fill="rgb(240,172,53)" fg:x="883" fg:w="1"/><text x="71.8059%" y="447.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="71.5559%" y="421" width="0.0810%" height="15" fill="rgb(241,138,43)" fg:x="883" fg:w="1"/><text x="71.8059%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="71.5559%" y="405" width="0.0810%" height="15" fill="rgb(227,78,19)" fg:x="883" fg:w="1"/><text x="71.8059%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="71.5559%" y="389" width="0.0810%" height="15" fill="rgb(215,127,44)" fg:x="883" fg:w="1"/><text x="71.8059%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="71.5559%" y="373" width="0.0810%" height="15" fill="rgb(227,13,10)" fg:x="883" fg:w="1"/><text x="71.8059%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.5559%" y="357" width="0.0810%" height="15" fill="rgb(249,177,6)" fg:x="883" fg:w="1"/><text x="71.8059%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.5559%" y="341" width="0.0810%" height="15" fill="rgb(215,154,26)" fg:x="883" fg:w="1"/><text x="71.8059%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="71.5559%" y="325" width="0.0810%" height="15" fill="rgb(250,168,20)" fg:x="883" fg:w="1"/><text x="71.8059%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="71.5559%" y="309" width="0.0810%" height="15" fill="rgb(222,53,38)" fg:x="883" fg:w="1"/><text x="71.8059%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="71.5559%" y="293" width="0.0810%" height="15" fill="rgb(245,154,5)" fg:x="883" fg:w="1"/><text x="71.8059%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="71.5559%" y="277" width="0.0810%" height="15" fill="rgb(214,89,50)" fg:x="883" fg:w="1"/><text x="71.8059%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="71.5559%" y="261" width="0.0810%" height="15" fill="rgb(232,73,14)" fg:x="883" fg:w="1"/><text x="71.8059%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="71.5559%" y="245" width="0.0810%" height="15" fill="rgb(230,101,20)" fg:x="883" fg:w="1"/><text x="71.8059%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="71.5559%" y="229" width="0.0810%" height="15" fill="rgb(208,56,28)" fg:x="883" fg:w="1"/><text x="71.8059%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="71.5559%" y="213" width="0.0810%" height="15" fill="rgb(247,205,22)" fg:x="883" fg:w="1"/><text x="71.8059%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="71.5559%" y="197" width="0.0810%" height="15" fill="rgb(252,109,51)" fg:x="883" fg:w="1"/><text x="71.8059%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="71.5559%" y="181" width="0.0810%" height="15" fill="rgb(220,40,24)" fg:x="883" fg:w="1"/><text x="71.8059%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="71.5559%" y="165" width="0.0810%" height="15" fill="rgb(251,108,7)" fg:x="883" fg:w="1"/><text x="71.8059%" y="175.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="71.5559%" y="149" width="0.0810%" height="15" fill="rgb(238,102,51)" fg:x="883" fg:w="1"/><text x="71.8059%" y="159.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="71.5559%" y="133" width="0.0810%" height="15" fill="rgb(219,149,34)" fg:x="883" fg:w="1"/><text x="71.8059%" y="143.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.08%)</title><rect x="71.5559%" y="117" width="0.0810%" height="15" fill="rgb(239,70,0)" fg:x="883" fg:w="1"/><text x="71.8059%" y="127.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="71.4749%" y="613" width="0.2431%" height="15" fill="rgb(246,214,23)" fg:x="882" fg:w="3"/><text x="71.7249%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="71.4749%" y="597" width="0.2431%" height="15" fill="rgb(239,221,51)" fg:x="882" fg:w="3"/><text x="71.7249%" y="607.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="71.6370%" y="581" width="0.0810%" height="15" fill="rgb(254,62,14)" fg:x="884" fg:w="1"/><text x="71.8870%" y="591.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="71.6370%" y="565" width="0.0810%" height="15" fill="rgb(253,57,33)" fg:x="884" fg:w="1"/><text x="71.8870%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.6370%" y="549" width="0.0810%" height="15" fill="rgb(229,34,6)" fg:x="884" fg:w="1"/><text x="71.8870%" y="559.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="71.7180%" y="613" width="0.1621%" height="15" fill="rgb(235,191,23)" fg:x="885" fg:w="2"/><text x="71.9680%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::set_name (2 samples, 0.16%)</title><rect x="71.7180%" y="597" width="0.1621%" height="15" fill="rgb(217,207,27)" fg:x="885" fg:w="2"/><text x="71.9680%" y="607.50"></text></g><g><title>kernel::model::Props::set_property (2 samples, 0.16%)</title><rect x="71.7180%" y="581" width="0.1621%" height="15" fill="rgb(232,41,44)" fg:x="885" fg:w="2"/><text x="71.9680%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="71.7180%" y="565" width="0.1621%" height="15" fill="rgb(221,188,19)" fg:x="885" fg:w="2"/><text x="71.9680%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.7990%" y="549" width="0.0810%" height="15" fill="rgb(245,180,45)" fg:x="886" fg:w="1"/><text x="72.0490%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="71.8801%" y="597" width="0.0810%" height="15" fill="rgb(250,220,42)" fg:x="887" fg:w="1"/><text x="72.1301%" y="607.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="71.8801%" y="581" width="0.0810%" height="15" fill="rgb(234,16,34)" fg:x="887" fg:w="1"/><text x="72.1301%" y="591.50"></text></g><g><title>kernel::model::Entity::gid (1 samples, 0.08%)</title><rect x="71.8801%" y="565" width="0.0810%" height="15" fill="rgb(233,217,23)" fg:x="887" fg:w="1"/><text x="72.1301%" y="575.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="71.8801%" y="549" width="0.0810%" height="15" fill="rgb(209,22,46)" fg:x="887" fg:w="1"/><text x="72.1301%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="72.0421%" y="549" width="0.0810%" height="15" fill="rgb(213,101,18)" fg:x="889" fg:w="1"/><text x="72.2921%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="72.0421%" y="533" width="0.0810%" height="15" fill="rgb(215,179,52)" fg:x="889" fg:w="1"/><text x="72.2921%" y="543.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="72.0421%" y="517" width="0.0810%" height="15" fill="rgb(223,50,25)" fg:x="889" fg:w="1"/><text x="72.2921%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="72.0421%" y="501" width="0.0810%" height="15" fill="rgb(224,51,44)" fg:x="889" fg:w="1"/><text x="72.2921%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="72.1232%" y="533" width="0.0810%" height="15" fill="rgb(224,13,54)" fg:x="890" fg:w="1"/><text x="72.3732%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="72.1232%" y="517" width="0.0810%" height="15" fill="rgb(219,58,47)" fg:x="890" fg:w="1"/><text x="72.3732%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.1232%" y="501" width="0.0810%" height="15" fill="rgb(246,124,34)" fg:x="890" fg:w="1"/><text x="72.3732%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (5 samples, 0.41%)</title><rect x="71.9611%" y="597" width="0.4052%" height="15" fill="rgb(245,109,25)" fg:x="888" fg:w="5"/><text x="72.2111%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.41%)</title><rect x="71.9611%" y="581" width="0.4052%" height="15" fill="rgb(235,48,23)" fg:x="888" fg:w="5"/><text x="72.2111%" y="591.50"></text></g><g><title>plugins_core::build::QuickThing::make (4 samples, 0.32%)</title><rect x="72.0421%" y="565" width="0.3241%" height="15" fill="rgb(229,203,36)" fg:x="889" fg:w="4"/><text x="72.2921%" y="575.50"></text></g><g><title>plugins_core::build::Build::leads_to (3 samples, 0.24%)</title><rect x="72.1232%" y="549" width="0.2431%" height="15" fill="rgb(234,180,9)" fg:x="890" fg:w="3"/><text x="72.3732%" y="559.50"></text></g><g><title>plugins_core::tools::leads_to (2 samples, 0.16%)</title><rect x="72.2042%" y="533" width="0.1621%" height="15" fill="rgb(228,98,45)" fg:x="891" fg:w="2"/><text x="72.4542%" y="543.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="72.2042%" y="517" width="0.1621%" height="15" fill="rgb(240,24,36)" fg:x="891" fg:w="2"/><text x="72.4542%" y="527.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="72.2042%" y="501" width="0.1621%" height="15" fill="rgb(227,154,19)" fg:x="891" fg:w="2"/><text x="72.4542%" y="511.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (2 samples, 0.16%)</title><rect x="72.2042%" y="485" width="0.1621%" height="15" fill="rgb(231,2,48)" fg:x="891" fg:w="2"/><text x="72.4542%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="72.2042%" y="469" width="0.1621%" height="15" fill="rgb(219,216,0)" fg:x="891" fg:w="2"/><text x="72.4542%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="72.2042%" y="453" width="0.1621%" height="15" fill="rgb(251,88,0)" fg:x="891" fg:w="2"/><text x="72.4542%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="72.2042%" y="437" width="0.1621%" height="15" fill="rgb(242,45,45)" fg:x="891" fg:w="2"/><text x="72.4542%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="72.2042%" y="421" width="0.1621%" height="15" fill="rgb(218,149,45)" fg:x="891" fg:w="2"/><text x="72.4542%" y="431.50"></text></g><g><title>engine::identifiers::model::set_gid (1 samples, 0.08%)</title><rect x="72.3663%" y="565" width="0.0810%" height="15" fill="rgb(247,194,10)" fg:x="893" fg:w="1"/><text x="72.6163%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="72.3663%" y="549" width="0.0810%" height="15" fill="rgb(234,33,37)" fg:x="893" fg:w="1"/><text x="72.6163%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.3663%" y="533" width="0.0810%" height="15" fill="rgb(218,61,13)" fg:x="893" fg:w="1"/><text x="72.6163%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="72.4473%" y="501" width="0.0810%" height="15" fill="rgb(210,80,52)" fg:x="894" fg:w="1"/><text x="72.6973%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.4473%" y="485" width="0.0810%" height="15" fill="rgb(218,203,27)" fg:x="894" fg:w="1"/><text x="72.6973%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.4473%" y="469" width="0.0810%" height="15" fill="rgb(209,126,33)" fg:x="894" fg:w="1"/><text x="72.6973%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.4473%" y="453" width="0.0810%" height="15" fill="rgb(234,173,41)" fg:x="894" fg:w="1"/><text x="72.6973%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="72.4473%" y="437" width="0.0810%" height="15" fill="rgb(228,166,9)" fg:x="894" fg:w="1"/><text x="72.6973%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="72.4473%" y="421" width="0.0810%" height="15" fill="rgb(208,124,43)" fg:x="894" fg:w="1"/><text x="72.6973%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="72.4473%" y="405" width="0.0810%" height="15" fill="rgb(212,154,38)" fg:x="894" fg:w="1"/><text x="72.6973%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="72.4473%" y="517" width="0.1621%" height="15" fill="rgb(246,179,35)" fg:x="894" fg:w="2"/><text x="72.6973%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.5284%" y="501" width="0.0810%" height="15" fill="rgb(251,3,50)" fg:x="895" fg:w="1"/><text x="72.7784%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.5284%" y="485" width="0.0810%" height="15" fill="rgb(219,96,8)" fg:x="895" fg:w="1"/><text x="72.7784%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="72.6094%" y="501" width="0.0810%" height="15" fill="rgb(251,216,33)" fg:x="896" fg:w="1"/><text x="72.8594%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.6094%" y="485" width="0.0810%" height="15" fill="rgb(243,145,29)" fg:x="896" fg:w="1"/><text x="72.8594%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="72.6904%" y="501" width="0.3241%" height="15" fill="rgb(210,75,20)" fg:x="897" fg:w="4"/><text x="72.9404%" y="511.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="72.6904%" y="485" width="0.3241%" height="15" fill="rgb(235,56,8)" fg:x="897" fg:w="4"/><text x="72.9404%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="72.8525%" y="469" width="0.1621%" height="15" fill="rgb(226,175,49)" fg:x="899" fg:w="2"/><text x="73.1025%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="73.0146%" y="485" width="0.0810%" height="15" fill="rgb(242,204,23)" fg:x="901" fg:w="1"/><text x="73.2646%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="73.0146%" y="469" width="0.0810%" height="15" fill="rgb(225,104,24)" fg:x="901" fg:w="1"/><text x="73.2646%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.0146%" y="453" width="0.0810%" height="15" fill="rgb(253,34,1)" fg:x="901" fg:w="1"/><text x="73.2646%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.0146%" y="437" width="0.0810%" height="15" fill="rgb(233,199,23)" fg:x="901" fg:w="1"/><text x="73.2646%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.0956%" y="485" width="0.0810%" height="15" fill="rgb(247,7,51)" fg:x="902" fg:w="1"/><text x="73.3456%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.0956%" y="469" width="0.0810%" height="15" fill="rgb(214,146,12)" fg:x="902" fg:w="1"/><text x="73.3456%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.0956%" y="453" width="0.0810%" height="15" fill="rgb(234,181,43)" fg:x="902" fg:w="1"/><text x="73.3456%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="73.1767%" y="469" width="0.1621%" height="15" fill="rgb(239,148,6)" fg:x="903" fg:w="2"/><text x="73.4267%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.2577%" y="453" width="0.0810%" height="15" fill="rgb(206,151,17)" fg:x="904" fg:w="1"/><text x="73.5077%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="73.0146%" y="501" width="0.4862%" height="15" fill="rgb(213,215,10)" fg:x="901" fg:w="6"/><text x="73.2646%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="73.1767%" y="485" width="0.3241%" height="15" fill="rgb(215,220,44)" fg:x="903" fg:w="4"/><text x="73.4267%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="73.3387%" y="469" width="0.1621%" height="15" fill="rgb(245,205,37)" fg:x="905" fg:w="2"/><text x="73.5887%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="73.3387%" y="453" width="0.1621%" height="15" fill="rgb(245,130,43)" fg:x="905" fg:w="2"/><text x="73.5887%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.4198%" y="437" width="0.0810%" height="15" fill="rgb(231,227,38)" fg:x="906" fg:w="1"/><text x="73.6698%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.4198%" y="421" width="0.0810%" height="15" fill="rgb(233,185,4)" fg:x="906" fg:w="1"/><text x="73.6698%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.05%)</title><rect x="72.6094%" y="517" width="1.0535%" height="15" fill="rgb(224,154,43)" fg:x="896" fg:w="13"/><text x="72.8594%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="73.5008%" y="501" width="0.1621%" height="15" fill="rgb(235,156,15)" fg:x="907" fg:w="2"/><text x="73.7508%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.5818%" y="485" width="0.0810%" height="15" fill="rgb(211,55,43)" fg:x="908" fg:w="1"/><text x="73.8318%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.5818%" y="469" width="0.0810%" height="15" fill="rgb(247,149,40)" fg:x="908" fg:w="1"/><text x="73.8318%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="73.5818%" y="453" width="0.0810%" height="15" fill="rgb(232,171,16)" fg:x="908" fg:w="1"/><text x="73.8318%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.5818%" y="437" width="0.0810%" height="15" fill="rgb(215,117,49)" fg:x="908" fg:w="1"/><text x="73.8318%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="73.5818%" y="421" width="0.0810%" height="15" fill="rgb(246,194,11)" fg:x="908" fg:w="1"/><text x="73.8318%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (16 samples, 1.30%)</title><rect x="72.4473%" y="533" width="1.2966%" height="15" fill="rgb(242,101,44)" fg:x="894" fg:w="16"/><text x="72.6973%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.6629%" y="517" width="0.0810%" height="15" fill="rgb(226,174,6)" fg:x="909" fg:w="1"/><text x="73.9129%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.6629%" y="501" width="0.0810%" height="15" fill="rgb(213,150,20)" fg:x="909" fg:w="1"/><text x="73.9129%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.6629%" y="485" width="0.0810%" height="15" fill="rgb(222,124,42)" fg:x="909" fg:w="1"/><text x="73.9129%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.7439%" y="485" width="0.0810%" height="15" fill="rgb(250,19,47)" fg:x="910" fg:w="1"/><text x="73.9939%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="73.8250%" y="485" width="0.2431%" height="15" fill="rgb(241,217,19)" fg:x="911" fg:w="3"/><text x="74.0750%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.9870%" y="469" width="0.0810%" height="15" fill="rgb(207,210,34)" fg:x="913" fg:w="1"/><text x="74.2370%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.0681%" y="469" width="0.0810%" height="15" fill="rgb(244,45,4)" fg:x="914" fg:w="1"/><text x="74.3181%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="73.7439%" y="533" width="0.4862%" height="15" fill="rgb(252,134,50)" fg:x="910" fg:w="6"/><text x="73.9939%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.49%)</title><rect x="73.7439%" y="517" width="0.4862%" height="15" fill="rgb(238,74,2)" fg:x="910" fg:w="6"/><text x="73.9939%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="73.7439%" y="501" width="0.4862%" height="15" fill="rgb(226,58,46)" fg:x="910" fg:w="6"/><text x="73.9939%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="74.0681%" y="485" width="0.1621%" height="15" fill="rgb(232,83,35)" fg:x="914" fg:w="2"/><text x="74.3181%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.1491%" y="469" width="0.0810%" height="15" fill="rgb(212,148,47)" fg:x="915" fg:w="1"/><text x="74.3991%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="74.1491%" y="453" width="0.0810%" height="15" fill="rgb(235,29,1)" fg:x="915" fg:w="1"/><text x="74.3991%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="74.1491%" y="437" width="0.0810%" height="15" fill="rgb(247,55,37)" fg:x="915" fg:w="1"/><text x="74.3991%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="74.2301%" y="485" width="0.1621%" height="15" fill="rgb(222,48,3)" fg:x="916" fg:w="2"/><text x="74.4801%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.3112%" y="469" width="0.0810%" height="15" fill="rgb(234,21,33)" fg:x="917" fg:w="1"/><text x="74.5612%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="74.3112%" y="453" width="0.0810%" height="15" fill="rgb(247,178,53)" fg:x="917" fg:w="1"/><text x="74.5612%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="74.3922%" y="485" width="0.0810%" height="15" fill="rgb(225,75,7)" fg:x="918" fg:w="1"/><text x="74.6422%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="74.3922%" y="469" width="0.0810%" height="15" fill="rgb(219,199,7)" fg:x="918" fg:w="1"/><text x="74.6422%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.3922%" y="453" width="0.0810%" height="15" fill="rgb(209,93,42)" fg:x="918" fg:w="1"/><text x="74.6422%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.3922%" y="437" width="0.0810%" height="15" fill="rgb(240,175,17)" fg:x="918" fg:w="1"/><text x="74.6422%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="74.6353%" y="421" width="0.1621%" height="15" fill="rgb(232,106,7)" fg:x="921" fg:w="2"/><text x="74.8853%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="74.6353%" y="405" width="0.1621%" height="15" fill="rgb(242,106,43)" fg:x="921" fg:w="2"/><text x="74.8853%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="74.7164%" y="389" width="0.0810%" height="15" fill="rgb(242,61,37)" fg:x="922" fg:w="1"/><text x="74.9664%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.7164%" y="373" width="0.0810%" height="15" fill="rgb(205,72,10)" fg:x="922" fg:w="1"/><text x="74.9664%" y="383.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (5 samples, 0.41%)</title><rect x="74.4733%" y="485" width="0.4052%" height="15" fill="rgb(214,184,36)" fg:x="919" fg:w="5"/><text x="74.7233%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.41%)</title><rect x="74.4733%" y="469" width="0.4052%" height="15" fill="rgb(206,107,18)" fg:x="919" fg:w="5"/><text x="74.7233%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.41%)</title><rect x="74.4733%" y="453" width="0.4052%" height="15" fill="rgb(210,75,5)" fg:x="919" fg:w="5"/><text x="74.7233%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (3 samples, 0.24%)</title><rect x="74.6353%" y="437" width="0.2431%" height="15" fill="rgb(205,3,19)" fg:x="921" fg:w="3"/><text x="74.8853%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.7974%" y="421" width="0.0810%" height="15" fill="rgb(207,181,42)" fg:x="923" fg:w="1"/><text x="75.0474%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.8784%" y="469" width="0.0810%" height="15" fill="rgb(229,179,43)" fg:x="924" fg:w="1"/><text x="75.1284%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.8784%" y="453" width="0.0810%" height="15" fill="rgb(246,95,30)" fg:x="924" fg:w="1"/><text x="75.1284%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.9595%" y="437" width="0.0810%" height="15" fill="rgb(234,144,45)" fg:x="925" fg:w="1"/><text x="75.2095%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.9595%" y="421" width="0.0810%" height="15" fill="rgb(250,54,25)" fg:x="925" fg:w="1"/><text x="75.2095%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.9595%" y="405" width="0.0810%" height="15" fill="rgb(215,195,40)" fg:x="925" fg:w="1"/><text x="75.2095%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="75.0405%" y="437" width="0.0810%" height="15" fill="rgb(233,188,42)" fg:x="926" fg:w="1"/><text x="75.2905%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="75.0405%" y="421" width="0.0810%" height="15" fill="rgb(247,227,35)" fg:x="926" fg:w="1"/><text x="75.2905%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="75.0405%" y="405" width="0.0810%" height="15" fill="rgb(249,124,27)" fg:x="926" fg:w="1"/><text x="75.2905%" y="415.50"></text></g><g><title>engine::session::Session::flush (35 samples, 2.84%)</title><rect x="72.3663%" y="597" width="2.8363%" height="15" fill="rgb(219,207,25)" fg:x="893" fg:w="35"/><text x="72.6163%" y="607.50">en..</text></g><g><title>engine::session::Session::save_entity_changes (35 samples, 2.84%)</title><rect x="72.3663%" y="581" width="2.8363%" height="15" fill="rgb(241,216,47)" fg:x="893" fg:w="35"/><text x="72.6163%" y="591.50">en..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (34 samples, 2.76%)</title><rect x="72.4473%" y="565" width="2.7553%" height="15" fill="rgb(233,82,50)" fg:x="894" fg:w="34"/><text x="72.6973%" y="575.50">en..</text></g><g><title>engine::session::Session::check_for_changes (34 samples, 2.76%)</title><rect x="72.4473%" y="549" width="2.7553%" height="15" fill="rgb(232,63,2)" fg:x="894" fg:w="34"/><text x="72.6973%" y="559.50">en..</text></g><g><title>kernel::compare::any_entity_changes (12 samples, 0.97%)</title><rect x="74.2301%" y="533" width="0.9724%" height="15" fill="rgb(236,184,28)" fg:x="916" fg:w="12"/><text x="74.4801%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (12 samples, 0.97%)</title><rect x="74.2301%" y="517" width="0.9724%" height="15" fill="rgb(254,63,27)" fg:x="916" fg:w="12"/><text x="74.4801%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.97%)</title><rect x="74.2301%" y="501" width="0.9724%" height="15" fill="rgb(253,106,28)" fg:x="916" fg:w="12"/><text x="74.4801%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="74.8784%" y="485" width="0.3241%" height="15" fill="rgb(225,141,39)" fg:x="924" fg:w="4"/><text x="75.1284%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (3 samples, 0.24%)</title><rect x="74.9595%" y="469" width="0.2431%" height="15" fill="rgb(222,157,20)" fg:x="925" fg:w="3"/><text x="75.2095%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="74.9595%" y="453" width="0.2431%" height="15" fill="rgb(210,190,9)" fg:x="925" fg:w="3"/><text x="75.2095%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="75.1216%" y="437" width="0.0810%" height="15" fill="rgb(242,167,7)" fg:x="927" fg:w="1"/><text x="75.3716%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="75.1216%" y="421" width="0.0810%" height="15" fill="rgb(227,82,41)" fg:x="927" fg:w="1"/><text x="75.3716%" y="431.50"></text></g><g><title>engine::internal::EntityMap::add_entity (6 samples, 0.49%)</title><rect x="75.2026%" y="549" width="0.4862%" height="15" fill="rgb(222,131,13)" fg:x="928" fg:w="6"/><text x="75.4526%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.49%)</title><rect x="75.2026%" y="533" width="0.4862%" height="15" fill="rgb(221,98,26)" fg:x="928" fg:w="6"/><text x="75.4526%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.41%)</title><rect x="75.2836%" y="517" width="0.4052%" height="15" fill="rgb(251,63,52)" fg:x="929" fg:w="5"/><text x="75.5336%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.41%)</title><rect x="75.2836%" y="501" width="0.4052%" height="15" fill="rgb(246,25,43)" fg:x="929" fg:w="5"/><text x="75.5336%" y="511.50"></text></g><g><title>__libc_malloc (5 samples, 0.41%)</title><rect x="75.2836%" y="485" width="0.4052%" height="15" fill="rgb(247,167,15)" fg:x="929" fg:w="5"/><text x="75.5336%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.57%)</title><rect x="75.2026%" y="581" width="0.5673%" height="15" fill="rgb(240,104,42)" fg:x="928" fg:w="7"/><text x="75.4526%" y="591.50"></text></g><g><title>engine::internal::Entities::add_entity (7 samples, 0.57%)</title><rect x="75.2026%" y="565" width="0.5673%" height="15" fill="rgb(224,54,6)" fg:x="928" fg:w="7"/><text x="75.4526%" y="575.50"></text></g><g><title>kernel::model::Entity::gid (1 samples, 0.08%)</title><rect x="75.6888%" y="549" width="0.0810%" height="15" fill="rgb(244,108,35)" fg:x="934" fg:w="1"/><text x="75.9388%" y="559.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="75.6888%" y="533" width="0.0810%" height="15" fill="rgb(216,154,2)" fg:x="934" fg:w="1"/><text x="75.9388%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="75.6888%" y="517" width="0.0810%" height="15" fill="rgb(222,8,47)" fg:x="934" fg:w="1"/><text x="75.9388%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="75.6888%" y="501" width="0.0810%" height="15" fill="rgb(252,93,1)" fg:x="934" fg:w="1"/><text x="75.9388%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="75.7699%" y="581" width="0.1621%" height="15" fill="rgb(223,226,51)" fg:x="935" fg:w="2"/><text x="76.0199%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (2 samples, 0.16%)</title><rect x="75.7699%" y="565" width="0.1621%" height="15" fill="rgb(206,147,9)" fg:x="935" fg:w="2"/><text x="76.0199%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="75.7699%" y="549" width="0.1621%" height="15" fill="rgb(248,180,41)" fg:x="935" fg:w="2"/><text x="76.0199%" y="559.50"></text></g><g><title>plugins_core::build::Build::holding (10 samples, 0.81%)</title><rect x="75.2026%" y="597" width="0.8104%" height="15" fill="rgb(209,47,50)" fg:x="928" fg:w="10"/><text x="75.4526%" y="607.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="75.9319%" y="581" width="0.0810%" height="15" fill="rgb(243,65,31)" fg:x="937" fg:w="1"/><text x="76.1819%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="75.9319%" y="565" width="0.0810%" height="15" fill="rgb(228,128,1)" fg:x="937" fg:w="1"/><text x="76.1819%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="75.9319%" y="549" width="0.0810%" height="15" fill="rgb(231,192,16)" fg:x="937" fg:w="1"/><text x="76.1819%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="76.0130%" y="597" width="0.0810%" height="15" fill="rgb(224,26,40)" fg:x="938" fg:w="1"/><text x="76.2630%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="76.0130%" y="581" width="0.0810%" height="15" fill="rgb(214,192,17)" fg:x="938" fg:w="1"/><text x="76.2630%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="76.0130%" y="565" width="0.0810%" height="15" fill="rgb(225,147,18)" fg:x="938" fg:w="1"/><text x="76.2630%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.0130%" y="549" width="0.0810%" height="15" fill="rgb(205,35,11)" fg:x="938" fg:w="1"/><text x="76.2630%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="76.0940%" y="581" width="0.0810%" height="15" fill="rgb(242,40,42)" fg:x="939" fg:w="1"/><text x="76.3440%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="76.0940%" y="565" width="0.0810%" height="15" fill="rgb(250,170,13)" fg:x="939" fg:w="1"/><text x="76.3440%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Occupying&gt;&gt; (1 samples, 0.08%)</title><rect x="76.1750%" y="565" width="0.0810%" height="15" fill="rgb(240,161,28)" fg:x="940" fg:w="1"/><text x="76.4250%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="76.1750%" y="549" width="0.0810%" height="15" fill="rgb(245,179,12)" fg:x="940" fg:w="1"/><text x="76.4250%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.1750%" y="533" width="0.0810%" height="15" fill="rgb(250,92,32)" fg:x="940" fg:w="1"/><text x="76.4250%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.2561%" y="533" width="0.0810%" height="15" fill="rgb(233,10,40)" fg:x="941" fg:w="1"/><text x="76.5061%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="76.2561%" y="517" width="0.0810%" height="15" fill="rgb(217,98,1)" fg:x="941" fg:w="1"/><text x="76.5061%" y="527.50"></text></g><g><title>plugins_core::build::Build::occupying (4 samples, 0.32%)</title><rect x="76.0940%" y="597" width="0.3241%" height="15" fill="rgb(238,202,7)" fg:x="939" fg:w="4"/><text x="76.3440%" y="607.50"></text></g><g><title>plugins_core::tools::set_occupying (3 samples, 0.24%)</title><rect x="76.1750%" y="581" width="0.2431%" height="15" fill="rgb(222,91,3)" fg:x="940" fg:w="3"/><text x="76.4250%" y="591.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="76.2561%" y="565" width="0.1621%" height="15" fill="rgb(211,170,49)" fg:x="941" fg:w="2"/><text x="76.5061%" y="575.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="76.2561%" y="549" width="0.1621%" height="15" fill="rgb(253,139,18)" fg:x="941" fg:w="2"/><text x="76.5061%" y="559.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="76.3371%" y="533" width="0.0810%" height="15" fill="rgb(222,4,43)" fg:x="942" fg:w="1"/><text x="76.5871%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="76.3371%" y="517" width="0.0810%" height="15" fill="rgb(207,205,12)" fg:x="942" fg:w="1"/><text x="76.5871%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.3371%" y="501" width="0.0810%" height="15" fill="rgb(216,159,46)" fg:x="942" fg:w="1"/><text x="76.5871%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="76.4182%" y="581" width="0.0810%" height="15" fill="rgb(236,115,1)" fg:x="943" fg:w="1"/><text x="76.6682%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="76.4182%" y="565" width="0.0810%" height="15" fill="rgb(251,35,33)" fg:x="943" fg:w="1"/><text x="76.6682%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="76.4182%" y="549" width="0.0810%" height="15" fill="rgb(248,62,51)" fg:x="943" fg:w="1"/><text x="76.6682%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="76.4182%" y="533" width="0.0810%" height="15" fill="rgb(254,180,19)" fg:x="943" fg:w="1"/><text x="76.6682%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="76.4182%" y="517" width="0.0810%" height="15" fill="rgb(217,100,32)" fg:x="943" fg:w="1"/><text x="76.6682%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="76.4182%" y="501" width="0.0810%" height="15" fill="rgb(224,71,22)" fg:x="943" fg:w="1"/><text x="76.6682%" y="511.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (58 samples, 4.70%)</title><rect x="71.8801%" y="613" width="4.7002%" height="15" fill="rgb(251,185,33)" fg:x="887" fg:w="58"/><text x="72.1301%" y="623.50">plugi..</text></g><g><title>plugins_core::build::Build::with_username (2 samples, 0.16%)</title><rect x="76.4182%" y="597" width="0.1621%" height="15" fill="rgb(209,75,48)" fg:x="943" fg:w="2"/><text x="76.6682%" y="607.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="76.4992%" y="581" width="0.0810%" height="15" fill="rgb(253,190,16)" fg:x="944" fg:w="1"/><text x="76.7492%" y="591.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="76.4992%" y="565" width="0.0810%" height="15" fill="rgb(226,140,1)" fg:x="944" fg:w="1"/><text x="76.7492%" y="575.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="76.4992%" y="549" width="0.0810%" height="15" fill="rgb(206,75,30)" fg:x="944" fg:w="1"/><text x="76.7492%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.4992%" y="533" width="0.0810%" height="15" fill="rgb(231,208,37)" fg:x="944" fg:w="1"/><text x="76.7492%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.4992%" y="517" width="0.0810%" height="15" fill="rgb(238,136,40)" fg:x="944" fg:w="1"/><text x="76.7492%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="76.4992%" y="501" width="0.0810%" height="15" fill="rgb(247,137,17)" fg:x="944" fg:w="1"/><text x="76.7492%" y="511.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="76.4992%" y="485" width="0.0810%" height="15" fill="rgb(240,60,40)" fg:x="944" fg:w="1"/><text x="76.7492%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="76.5802%" y="565" width="0.0810%" height="15" fill="rgb(236,68,50)" fg:x="945" fg:w="1"/><text x="76.8302%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="76.5802%" y="549" width="0.0810%" height="15" fill="rgb(230,42,12)" fg:x="945" fg:w="1"/><text x="76.8302%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="76.5802%" y="533" width="0.0810%" height="15" fill="rgb(219,16,16)" fg:x="945" fg:w="1"/><text x="76.8302%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="76.5802%" y="517" width="0.0810%" height="15" fill="rgb(220,38,35)" fg:x="945" fg:w="1"/><text x="76.8302%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="76.5802%" y="501" width="0.0810%" height="15" fill="rgb(228,33,1)" fg:x="945" fg:w="1"/><text x="76.8302%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="76.5802%" y="485" width="0.0810%" height="15" fill="rgb(241,46,31)" fg:x="945" fg:w="1"/><text x="76.8302%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="76.5802%" y="469" width="0.0810%" height="15" fill="rgb(232,58,20)" fg:x="945" fg:w="1"/><text x="76.8302%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="76.5802%" y="453" width="0.0810%" height="15" fill="rgb(206,228,53)" fg:x="945" fg:w="1"/><text x="76.8302%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="76.5802%" y="437" width="0.0810%" height="15" fill="rgb(206,88,33)" fg:x="945" fg:w="1"/><text x="76.8302%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="76.5802%" y="421" width="0.0810%" height="15" fill="rgb(238,69,7)" fg:x="945" fg:w="1"/><text x="76.8302%" y="431.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="76.5802%" y="405" width="0.0810%" height="15" fill="rgb(250,21,46)" fg:x="945" fg:w="1"/><text x="76.8302%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.6613%" y="533" width="0.0810%" height="15" fill="rgb(215,212,21)" fg:x="946" fg:w="1"/><text x="76.9113%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.6613%" y="517" width="0.0810%" height="15" fill="rgb(211,35,12)" fg:x="946" fg:w="1"/><text x="76.9113%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.6613%" y="501" width="0.0810%" height="15" fill="rgb(231,184,16)" fg:x="946" fg:w="1"/><text x="76.9113%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.6613%" y="485" width="0.0810%" height="15" fill="rgb(242,140,15)" fg:x="946" fg:w="1"/><text x="76.9113%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.6613%" y="469" width="0.0810%" height="15" fill="rgb(220,37,14)" fg:x="946" fg:w="1"/><text x="76.9113%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.6613%" y="453" width="0.0810%" height="15" fill="rgb(223,146,22)" fg:x="946" fg:w="1"/><text x="76.9113%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.6613%" y="437" width="0.0810%" height="15" fill="rgb(216,132,15)" fg:x="946" fg:w="1"/><text x="76.9113%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.6613%" y="421" width="0.0810%" height="15" fill="rgb(248,83,5)" fg:x="946" fg:w="1"/><text x="76.9113%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.6613%" y="405" width="0.0810%" height="15" fill="rgb(231,206,48)" fg:x="946" fg:w="1"/><text x="76.9113%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.6613%" y="389" width="0.0810%" height="15" fill="rgb(253,185,37)" fg:x="946" fg:w="1"/><text x="76.9113%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.6613%" y="373" width="0.0810%" height="15" fill="rgb(208,21,44)" fg:x="946" fg:w="1"/><text x="76.9113%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.6613%" y="357" width="0.0810%" height="15" fill="rgb(236,125,4)" fg:x="946" fg:w="1"/><text x="76.9113%" y="367.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (112 samples, 9.08%)</title><rect x="67.7472%" y="629" width="9.0762%" height="15" fill="rgb(226,134,25)" fg:x="836" fg:w="112"/><text x="67.9972%" y="639.50">&lt;tests::Holdi..</text></g><g><title>plugins_core::build::BuildSurroundings::make (3 samples, 0.24%)</title><rect x="76.5802%" y="613" width="0.2431%" height="15" fill="rgb(250,201,12)" fg:x="945" fg:w="3"/><text x="76.8302%" y="623.50"></text></g><g><title>plugins_core::build::QuickThing::make (3 samples, 0.24%)</title><rect x="76.5802%" y="597" width="0.2431%" height="15" fill="rgb(225,92,18)" fg:x="945" fg:w="3"/><text x="76.8302%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="76.5802%" y="581" width="0.2431%" height="15" fill="rgb(227,35,22)" fg:x="945" fg:w="3"/><text x="76.8302%" y="591.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="76.6613%" y="565" width="0.1621%" height="15" fill="rgb(214,180,52)" fg:x="946" fg:w="2"/><text x="76.9113%" y="575.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="76.6613%" y="549" width="0.1621%" height="15" fill="rgb(233,55,38)" fg:x="946" fg:w="2"/><text x="76.9113%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.7423%" y="533" width="0.0810%" height="15" fill="rgb(249,171,43)" fg:x="947" fg:w="1"/><text x="76.9923%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.7423%" y="517" width="0.0810%" height="15" fill="rgb(239,87,2)" fg:x="947" fg:w="1"/><text x="76.9923%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="76.7423%" y="501" width="0.0810%" height="15" fill="rgb(248,141,5)" fg:x="947" fg:w="1"/><text x="76.9923%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.7423%" y="485" width="0.0810%" height="15" fill="rgb(238,33,42)" fg:x="947" fg:w="1"/><text x="76.9923%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.8233%" y="629" width="0.0810%" height="15" fill="rgb(231,57,19)" fg:x="948" fg:w="1"/><text x="77.0733%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="76.9044%" y="613" width="0.0810%" height="15" fill="rgb(214,78,53)" fg:x="949" fg:w="1"/><text x="77.1544%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="76.9044%" y="597" width="0.0810%" height="15" fill="rgb(206,132,29)" fg:x="949" fg:w="1"/><text x="77.1544%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="76.9044%" y="581" width="0.0810%" height="15" fill="rgb(248,174,31)" fg:x="949" fg:w="1"/><text x="77.1544%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="76.9044%" y="565" width="0.0810%" height="15" fill="rgb(221,87,13)" fg:x="949" fg:w="1"/><text x="77.1544%" y="575.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="76.9044%" y="549" width="0.0810%" height="15" fill="rgb(223,197,17)" fg:x="949" fg:w="1"/><text x="77.1544%" y="559.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="76.9044%" y="533" width="0.0810%" height="15" fill="rgb(220,144,50)" fg:x="949" fg:w="1"/><text x="77.1544%" y="543.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="76.9044%" y="517" width="0.0810%" height="15" fill="rgb(244,201,11)" fg:x="949" fg:w="1"/><text x="77.1544%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="76.9854%" y="597" width="0.0810%" height="15" fill="rgb(249,81,34)" fg:x="950" fg:w="1"/><text x="77.2354%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="76.9854%" y="581" width="0.0810%" height="15" fill="rgb(205,161,12)" fg:x="950" fg:w="1"/><text x="77.2354%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="76.9854%" y="565" width="0.0810%" height="15" fill="rgb(252,139,50)" fg:x="950" fg:w="1"/><text x="77.2354%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="77.0665%" y="549" width="0.0810%" height="15" fill="rgb(205,169,14)" fg:x="951" fg:w="1"/><text x="77.3165%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="77.0665%" y="533" width="0.0810%" height="15" fill="rgb(248,198,33)" fg:x="951" fg:w="1"/><text x="77.3165%" y="543.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="77.0665%" y="597" width="0.1621%" height="15" fill="rgb(236,23,21)" fg:x="951" fg:w="2"/><text x="77.3165%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="77.0665%" y="581" width="0.1621%" height="15" fill="rgb(231,13,38)" fg:x="951" fg:w="2"/><text x="77.3165%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="77.0665%" y="565" width="0.1621%" height="15" fill="rgb(239,139,21)" fg:x="951" fg:w="2"/><text x="77.3165%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.1475%" y="549" width="0.0810%" height="15" fill="rgb(222,164,45)" fg:x="952" fg:w="1"/><text x="77.3975%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.1475%" y="533" width="0.0810%" height="15" fill="rgb(230,52,27)" fg:x="952" fg:w="1"/><text x="77.3975%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="77.2285%" y="581" width="0.0810%" height="15" fill="rgb(227,143,42)" fg:x="953" fg:w="1"/><text x="77.4785%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.7147%" y="485" width="0.0810%" height="15" fill="rgb(249,127,1)" fg:x="959" fg:w="1"/><text x="77.9647%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.7147%" y="469" width="0.0810%" height="15" fill="rgb(243,107,26)" fg:x="959" fg:w="1"/><text x="77.9647%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.7147%" y="453" width="0.0810%" height="15" fill="rgb(225,7,45)" fg:x="959" fg:w="1"/><text x="77.9647%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.7147%" y="437" width="0.0810%" height="15" fill="rgb(241,88,38)" fg:x="959" fg:w="1"/><text x="77.9647%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.57%)</title><rect x="77.3096%" y="533" width="0.5673%" height="15" fill="rgb(226,121,9)" fg:x="954" fg:w="7"/><text x="77.5596%" y="543.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.41%)</title><rect x="77.4716%" y="517" width="0.4052%" height="15" fill="rgb(253,60,29)" fg:x="956" fg:w="5"/><text x="77.7216%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="77.7147%" y="501" width="0.1621%" height="15" fill="rgb(244,181,39)" fg:x="959" fg:w="2"/><text x="77.9647%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="77.7958%" y="485" width="0.0810%" height="15" fill="rgb(252,203,31)" fg:x="960" fg:w="1"/><text x="78.0458%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (10 samples, 0.81%)</title><rect x="77.3096%" y="549" width="0.8104%" height="15" fill="rgb(224,120,8)" fg:x="954" fg:w="10"/><text x="77.5596%" y="559.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="77.8768%" y="533" width="0.2431%" height="15" fill="rgb(205,171,54)" fg:x="961" fg:w="3"/><text x="78.1268%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.0389%" y="517" width="0.0810%" height="15" fill="rgb(235,89,11)" fg:x="963" fg:w="1"/><text x="78.2889%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.0389%" y="501" width="0.0810%" height="15" fill="rgb(212,180,28)" fg:x="963" fg:w="1"/><text x="78.2889%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="78.1199%" y="533" width="0.1621%" height="15" fill="rgb(247,84,49)" fg:x="964" fg:w="2"/><text x="78.3699%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.2010%" y="517" width="0.0810%" height="15" fill="rgb(236,187,52)" fg:x="965" fg:w="1"/><text x="78.4510%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.2010%" y="501" width="0.0810%" height="15" fill="rgb(227,24,15)" fg:x="965" fg:w="1"/><text x="78.4510%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.2010%" y="485" width="0.0810%" height="15" fill="rgb(227,211,13)" fg:x="965" fg:w="1"/><text x="78.4510%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.2010%" y="469" width="0.0810%" height="15" fill="rgb(245,52,14)" fg:x="965" fg:w="1"/><text x="78.4510%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="78.5251%" y="517" width="0.1621%" height="15" fill="rgb(225,185,13)" fg:x="969" fg:w="2"/><text x="78.7751%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.6062%" y="501" width="0.0810%" height="15" fill="rgb(217,160,29)" fg:x="970" fg:w="1"/><text x="78.8562%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.6062%" y="485" width="0.0810%" height="15" fill="rgb(216,115,53)" fg:x="970" fg:w="1"/><text x="78.8562%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="78.6062%" y="469" width="0.0810%" height="15" fill="rgb(236,99,5)" fg:x="970" fg:w="1"/><text x="78.8562%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.7682%" y="501" width="0.0810%" height="15" fill="rgb(222,60,38)" fg:x="972" fg:w="1"/><text x="79.0182%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.7682%" y="485" width="0.0810%" height="15" fill="rgb(212,82,22)" fg:x="972" fg:w="1"/><text x="79.0182%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="78.6872%" y="517" width="0.2431%" height="15" fill="rgb(214,48,28)" fg:x="971" fg:w="3"/><text x="78.9372%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="78.8493%" y="501" width="0.0810%" height="15" fill="rgb(245,196,50)" fg:x="973" fg:w="1"/><text x="79.0993%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.8493%" y="485" width="0.0810%" height="15" fill="rgb(225,159,46)" fg:x="973" fg:w="1"/><text x="79.0993%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.8493%" y="469" width="0.0810%" height="15" fill="rgb(207,195,48)" fg:x="973" fg:w="1"/><text x="79.0993%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.73%)</title><rect x="78.2820%" y="533" width="0.7293%" height="15" fill="rgb(240,73,3)" fg:x="966" fg:w="9"/><text x="78.5320%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.9303%" y="517" width="0.0810%" height="15" fill="rgb(245,57,23)" fg:x="974" fg:w="1"/><text x="79.1803%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.9303%" y="501" width="0.0810%" height="15" fill="rgb(240,75,18)" fg:x="974" fg:w="1"/><text x="79.1803%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.9303%" y="485" width="0.0810%" height="15" fill="rgb(238,168,12)" fg:x="974" fg:w="1"/><text x="79.1803%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.13%)</title><rect x="78.1199%" y="549" width="1.1345%" height="15" fill="rgb(226,20,40)" fg:x="964" fg:w="14"/><text x="78.3699%" y="559.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="79.0113%" y="533" width="0.2431%" height="15" fill="rgb(224,130,35)" fg:x="975" fg:w="3"/><text x="79.2613%" y="543.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (25 samples, 2.03%)</title><rect x="77.3096%" y="565" width="2.0259%" height="15" fill="rgb(225,63,41)" fg:x="954" fg:w="25"/><text x="77.5596%" y="575.50">&lt;..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.2545%" y="549" width="0.0810%" height="15" fill="rgb(219,3,3)" fg:x="978" fg:w="1"/><text x="79.5045%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.2545%" y="533" width="0.0810%" height="15" fill="rgb(218,157,4)" fg:x="978" fg:w="1"/><text x="79.5045%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="79.2545%" y="517" width="0.0810%" height="15" fill="rgb(232,76,36)" fg:x="978" fg:w="1"/><text x="79.5045%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="79.3355%" y="517" width="0.1621%" height="15" fill="rgb(247,36,0)" fg:x="979" fg:w="2"/><text x="79.5855%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.4165%" y="501" width="0.0810%" height="15" fill="rgb(205,2,34)" fg:x="980" fg:w="1"/><text x="79.6665%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="79.3355%" y="565" width="0.2431%" height="15" fill="rgb(239,136,13)" fg:x="979" fg:w="3"/><text x="79.5855%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="79.3355%" y="549" width="0.2431%" height="15" fill="rgb(253,122,12)" fg:x="979" fg:w="3"/><text x="79.5855%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="79.3355%" y="533" width="0.2431%" height="15" fill="rgb(222,174,7)" fg:x="979" fg:w="3"/><text x="79.5855%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.4976%" y="517" width="0.0810%" height="15" fill="rgb(208,191,42)" fg:x="981" fg:w="1"/><text x="79.7476%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.4976%" y="501" width="0.0810%" height="15" fill="rgb(237,212,15)" fg:x="981" fg:w="1"/><text x="79.7476%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.4976%" y="485" width="0.0810%" height="15" fill="rgb(215,65,20)" fg:x="981" fg:w="1"/><text x="79.7476%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.5786%" y="517" width="0.0810%" height="15" fill="rgb(232,103,11)" fg:x="982" fg:w="1"/><text x="79.8286%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="79.6596%" y="517" width="0.1621%" height="15" fill="rgb(235,148,18)" fg:x="983" fg:w="2"/><text x="79.9096%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.7407%" y="501" width="0.0810%" height="15" fill="rgb(240,173,7)" fg:x="984" fg:w="1"/><text x="79.9907%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="80.0648%" y="485" width="0.1621%" height="15" fill="rgb(228,182,25)" fg:x="988" fg:w="2"/><text x="80.3148%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.2269%" y="485" width="0.0810%" height="15" fill="rgb(247,3,52)" fg:x="990" fg:w="1"/><text x="80.4769%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.2269%" y="469" width="0.0810%" height="15" fill="rgb(226,155,8)" fg:x="990" fg:w="1"/><text x="80.4769%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.3079%" y="469" width="0.0810%" height="15" fill="rgb(243,195,38)" fg:x="991" fg:w="1"/><text x="80.5579%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.3890%" y="469" width="0.0810%" height="15" fill="rgb(254,181,33)" fg:x="992" fg:w="1"/><text x="80.6390%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="79.5786%" y="549" width="0.9724%" height="15" fill="rgb(232,98,23)" fg:x="982" fg:w="12"/><text x="79.8286%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.97%)</title><rect x="79.5786%" y="533" width="0.9724%" height="15" fill="rgb(205,23,10)" fg:x="982" fg:w="12"/><text x="79.8286%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="79.8217%" y="517" width="0.7293%" height="15" fill="rgb(212,124,38)" fg:x="985" fg:w="9"/><text x="80.0717%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="79.9838%" y="501" width="0.5673%" height="15" fill="rgb(228,207,2)" fg:x="987" fg:w="7"/><text x="80.2338%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="80.3079%" y="485" width="0.2431%" height="15" fill="rgb(215,120,22)" fg:x="991" fg:w="3"/><text x="80.5579%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.4700%" y="469" width="0.0810%" height="15" fill="rgb(251,172,33)" fg:x="993" fg:w="1"/><text x="80.7200%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="80.4700%" y="453" width="0.0810%" height="15" fill="rgb(250,83,2)" fg:x="993" fg:w="1"/><text x="80.7200%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.4700%" y="437" width="0.0810%" height="15" fill="rgb(210,132,53)" fg:x="993" fg:w="1"/><text x="80.7200%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.7942%" y="485" width="0.0810%" height="15" fill="rgb(221,208,36)" fg:x="997" fg:w="1"/><text x="81.0442%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="80.6321%" y="517" width="0.3241%" height="15" fill="rgb(205,192,46)" fg:x="995" fg:w="4"/><text x="80.8821%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="80.7942%" y="501" width="0.1621%" height="15" fill="rgb(223,163,14)" fg:x="997" fg:w="2"/><text x="81.0442%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="80.8752%" y="485" width="0.0810%" height="15" fill="rgb(218,41,28)" fg:x="998" fg:w="1"/><text x="81.1252%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.0373%" y="485" width="0.0810%" height="15" fill="rgb(235,104,10)" fg:x="1000" fg:w="1"/><text x="81.2873%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (5 samples, 0.41%)</title><rect x="80.9562%" y="517" width="0.4052%" height="15" fill="rgb(246,17,4)" fg:x="999" fg:w="5"/><text x="81.2062%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.41%)</title><rect x="80.9562%" y="501" width="0.4052%" height="15" fill="rgb(240,7,16)" fg:x="999" fg:w="5"/><text x="81.2062%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="81.1183%" y="485" width="0.2431%" height="15" fill="rgb(213,160,23)" fg:x="1001" fg:w="3"/><text x="81.3683%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="81.1994%" y="469" width="0.1621%" height="15" fill="rgb(251,179,49)" fg:x="1002" fg:w="2"/><text x="81.4494%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="81.1994%" y="453" width="0.1621%" height="15" fill="rgb(247,198,10)" fg:x="1002" fg:w="2"/><text x="81.4494%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.5235%" y="469" width="0.0810%" height="15" fill="rgb(220,65,29)" fg:x="1006" fg:w="1"/><text x="81.7735%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (4 samples, 0.32%)</title><rect x="81.3614%" y="517" width="0.3241%" height="15" fill="rgb(237,171,28)" fg:x="1004" fg:w="4"/><text x="81.6114%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="81.4425%" y="501" width="0.2431%" height="15" fill="rgb(228,44,26)" fg:x="1005" fg:w="3"/><text x="81.6925%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="81.4425%" y="485" width="0.2431%" height="15" fill="rgb(216,210,27)" fg:x="1005" fg:w="3"/><text x="81.6925%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="81.6045%" y="469" width="0.0810%" height="15" fill="rgb(252,10,17)" fg:x="1007" fg:w="1"/><text x="81.8545%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.6045%" y="453" width="0.0810%" height="15" fill="rgb(214,172,30)" fg:x="1007" fg:w="1"/><text x="81.8545%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="81.6045%" y="437" width="0.0810%" height="15" fill="rgb(253,130,48)" fg:x="1007" fg:w="1"/><text x="81.8545%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.6045%" y="421" width="0.0810%" height="15" fill="rgb(226,99,43)" fg:x="1007" fg:w="1"/><text x="81.8545%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.6045%" y="405" width="0.0810%" height="15" fill="rgb(239,111,26)" fg:x="1007" fg:w="1"/><text x="81.8545%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="81.6045%" y="389" width="0.0810%" height="15" fill="rgb(240,27,53)" fg:x="1007" fg:w="1"/><text x="81.8545%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (3 samples, 0.24%)</title><rect x="81.6856%" y="517" width="0.2431%" height="15" fill="rgb(254,163,12)" fg:x="1008" fg:w="3"/><text x="81.9356%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="81.7666%" y="501" width="0.1621%" height="15" fill="rgb(225,51,48)" fg:x="1009" fg:w="2"/><text x="82.0166%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="81.7666%" y="485" width="0.1621%" height="15" fill="rgb(205,19,32)" fg:x="1009" fg:w="2"/><text x="82.0166%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="81.7666%" y="469" width="0.1621%" height="15" fill="rgb(218,119,26)" fg:x="1009" fg:w="2"/><text x="82.0166%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="81.7666%" y="453" width="0.1621%" height="15" fill="rgb(231,173,33)" fg:x="1009" fg:w="2"/><text x="82.0166%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="82.0908%" y="469" width="0.1621%" height="15" fill="rgb(241,100,29)" fg:x="1013" fg:w="2"/><text x="82.3408%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="82.0908%" y="453" width="0.1621%" height="15" fill="rgb(250,194,34)" fg:x="1013" fg:w="2"/><text x="82.3408%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.1718%" y="437" width="0.0810%" height="15" fill="rgb(215,23,50)" fg:x="1014" fg:w="1"/><text x="82.4218%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="82.2528%" y="469" width="0.0810%" height="15" fill="rgb(206,49,37)" fg:x="1015" fg:w="1"/><text x="82.5028%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.2528%" y="453" width="0.0810%" height="15" fill="rgb(247,39,21)" fg:x="1015" fg:w="1"/><text x="82.5028%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.2528%" y="437" width="0.0810%" height="15" fill="rgb(209,220,15)" fg:x="1015" fg:w="1"/><text x="82.5028%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.2528%" y="421" width="0.0810%" height="15" fill="rgb(206,41,33)" fg:x="1015" fg:w="1"/><text x="82.5028%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.2528%" y="405" width="0.0810%" height="15" fill="rgb(221,225,45)" fg:x="1015" fg:w="1"/><text x="82.5028%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (23 samples, 1.86%)</title><rect x="80.5511%" y="549" width="1.8639%" height="15" fill="rgb(216,27,18)" fg:x="994" fg:w="23"/><text x="80.8011%" y="559.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (23 samples, 1.86%)</title><rect x="80.5511%" y="533" width="1.8639%" height="15" fill="rgb(250,193,34)" fg:x="994" fg:w="23"/><text x="80.8011%" y="543.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.49%)</title><rect x="81.9287%" y="517" width="0.4862%" height="15" fill="rgb(227,215,20)" fg:x="1011" fg:w="6"/><text x="82.1787%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (6 samples, 0.49%)</title><rect x="81.9287%" y="501" width="0.4862%" height="15" fill="rgb(242,211,27)" fg:x="1011" fg:w="6"/><text x="82.1787%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.49%)</title><rect x="81.9287%" y="485" width="0.4862%" height="15" fill="rgb(229,190,30)" fg:x="1011" fg:w="6"/><text x="82.1787%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.3339%" y="469" width="0.0810%" height="15" fill="rgb(253,31,29)" fg:x="1016" fg:w="1"/><text x="82.5839%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="82.6580%" y="373" width="0.0810%" height="15" fill="rgb(229,177,52)" fg:x="1020" fg:w="1"/><text x="82.9080%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="82.6580%" y="405" width="0.1621%" height="15" fill="rgb(226,88,8)" fg:x="1020" fg:w="2"/><text x="82.9080%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="82.6580%" y="389" width="0.1621%" height="15" fill="rgb(214,55,27)" fg:x="1020" fg:w="2"/><text x="82.9080%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.7391%" y="373" width="0.0810%" height="15" fill="rgb(233,202,5)" fg:x="1021" fg:w="1"/><text x="82.9891%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="82.9822%" y="373" width="0.2431%" height="15" fill="rgb(251,49,30)" fg:x="1024" fg:w="3"/><text x="83.2322%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1442%" y="357" width="0.0810%" height="15" fill="rgb(235,18,52)" fg:x="1026" fg:w="1"/><text x="83.3942%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1442%" y="341" width="0.0810%" height="15" fill="rgb(250,111,51)" fg:x="1026" fg:w="1"/><text x="83.3942%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.1442%" y="325" width="0.0810%" height="15" fill="rgb(218,13,25)" fg:x="1026" fg:w="1"/><text x="83.3942%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.41%)</title><rect x="82.9011%" y="389" width="0.4052%" height="15" fill="rgb(248,96,7)" fg:x="1023" fg:w="5"/><text x="83.1511%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.2253%" y="373" width="0.0810%" height="15" fill="rgb(217,31,15)" fg:x="1027" fg:w="1"/><text x="83.4753%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="83.3063%" y="373" width="0.0810%" height="15" fill="rgb(228,59,49)" fg:x="1028" fg:w="1"/><text x="83.5563%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.81%)</title><rect x="82.6580%" y="421" width="0.8104%" height="15" fill="rgb(210,152,38)" fg:x="1020" fg:w="10"/><text x="82.9080%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.65%)</title><rect x="82.8201%" y="405" width="0.6483%" height="15" fill="rgb(206,71,11)" fg:x="1022" fg:w="8"/><text x="83.0701%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="83.3063%" y="389" width="0.1621%" height="15" fill="rgb(244,199,5)" fg:x="1028" fg:w="2"/><text x="83.5563%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.3874%" y="373" width="0.0810%" height="15" fill="rgb(253,49,1)" fg:x="1029" fg:w="1"/><text x="83.6374%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.97%)</title><rect x="82.6580%" y="453" width="0.9724%" height="15" fill="rgb(225,206,40)" fg:x="1020" fg:w="12"/><text x="82.9080%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.97%)</title><rect x="82.6580%" y="437" width="0.9724%" height="15" fill="rgb(243,116,47)" fg:x="1020" fg:w="12"/><text x="82.9080%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="83.4684%" y="421" width="0.1621%" height="15" fill="rgb(219,225,16)" fg:x="1030" fg:w="2"/><text x="83.7184%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="83.4684%" y="405" width="0.1621%" height="15" fill="rgb(233,29,47)" fg:x="1030" fg:w="2"/><text x="83.7184%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="83.4684%" y="389" width="0.1621%" height="15" fill="rgb(250,179,18)" fg:x="1030" fg:w="2"/><text x="83.7184%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (6 samples, 0.49%)</title><rect x="83.6305%" y="453" width="0.4862%" height="15" fill="rgb(215,176,6)" fg:x="1032" fg:w="6"/><text x="83.8805%" y="463.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="83.7925%" y="437" width="0.3241%" height="15" fill="rgb(214,117,39)" fg:x="1034" fg:w="4"/><text x="84.0425%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (21 samples, 1.70%)</title><rect x="82.5770%" y="485" width="1.7018%" height="15" fill="rgb(247,183,36)" fg:x="1019" fg:w="21"/><text x="82.8270%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (21 samples, 1.70%)</title><rect x="82.5770%" y="469" width="1.7018%" height="15" fill="rgb(237,200,3)" fg:x="1019" fg:w="21"/><text x="82.8270%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.1167%" y="453" width="0.1621%" height="15" fill="rgb(212,220,24)" fg:x="1038" fg:w="2"/><text x="84.3667%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.1977%" y="437" width="0.0810%" height="15" fill="rgb(245,216,20)" fg:x="1039" fg:w="1"/><text x="84.4477%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (24 samples, 1.94%)</title><rect x="82.4149%" y="549" width="1.9449%" height="15" fill="rgb(219,124,7)" fg:x="1017" fg:w="24"/><text x="82.6649%" y="559.50">s..</text></g><g><title>serde_json::de::from_trait (24 samples, 1.94%)</title><rect x="82.4149%" y="533" width="1.9449%" height="15" fill="rgb(227,167,8)" fg:x="1017" fg:w="24"/><text x="82.6649%" y="543.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (23 samples, 1.86%)</title><rect x="82.4959%" y="517" width="1.8639%" height="15" fill="rgb(241,37,2)" fg:x="1018" fg:w="23"/><text x="82.7459%" y="527.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (23 samples, 1.86%)</title><rect x="82.4959%" y="501" width="1.8639%" height="15" fill="rgb(238,134,33)" fg:x="1018" fg:w="23"/><text x="82.7459%" y="511.50">&lt;..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="84.2788%" y="485" width="0.0810%" height="15" fill="rgb(248,48,27)" fg:x="1040" fg:w="1"/><text x="84.5288%" y="495.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="84.6840%" y="485" width="0.0810%" height="15" fill="rgb(212,14,16)" fg:x="1045" fg:w="1"/><text x="84.9340%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="84.6840%" y="469" width="0.0810%" height="15" fill="rgb(217,205,37)" fg:x="1045" fg:w="1"/><text x="84.9340%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.57%)</title><rect x="84.3598%" y="533" width="0.5673%" height="15" fill="rgb(233,185,47)" fg:x="1041" fg:w="7"/><text x="84.6098%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.57%)</title><rect x="84.3598%" y="517" width="0.5673%" height="15" fill="rgb(244,88,8)" fg:x="1041" fg:w="7"/><text x="84.6098%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="84.6029%" y="501" width="0.3241%" height="15" fill="rgb(213,0,20)" fg:x="1044" fg:w="4"/><text x="84.8529%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="84.7650%" y="485" width="0.1621%" height="15" fill="rgb(238,159,36)" fg:x="1046" fg:w="2"/><text x="85.0150%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="84.8460%" y="469" width="0.0810%" height="15" fill="rgb(253,173,17)" fg:x="1047" fg:w="1"/><text x="85.0960%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9271%" y="533" width="0.0810%" height="15" fill="rgb(221,23,28)" fg:x="1048" fg:w="1"/><text x="85.1771%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="85.0081%" y="533" width="0.0810%" height="15" fill="rgb(218,113,15)" fg:x="1049" fg:w="1"/><text x="85.2581%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="85.0081%" y="517" width="0.0810%" height="15" fill="rgb(233,58,3)" fg:x="1049" fg:w="1"/><text x="85.2581%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.0081%" y="501" width="0.0810%" height="15" fill="rgb(250,46,35)" fg:x="1049" fg:w="1"/><text x="85.2581%" y="511.50"></text></g><g><title>kernel::compare::any_entity_changes (69 samples, 5.59%)</title><rect x="79.5786%" y="565" width="5.5916%" height="15" fill="rgb(210,169,11)" fg:x="982" fg:w="69"/><text x="79.8286%" y="575.50">kernel:..</text></g><g><title>treediff::diff::diff (10 samples, 0.81%)</title><rect x="84.3598%" y="549" width="0.8104%" height="15" fill="rgb(246,88,19)" fg:x="1041" fg:w="10"/><text x="84.6098%" y="559.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="85.0891%" y="533" width="0.0810%" height="15" fill="rgb(206,81,49)" fg:x="1050" fg:w="1"/><text x="85.3391%" y="543.50"></text></g><g><title>engine::session::Session::close (103 samples, 8.35%)</title><rect x="76.9044%" y="629" width="8.3468%" height="15" fill="rgb(232,144,18)" fg:x="949" fg:w="103"/><text x="77.1544%" y="639.50">engine::sess..</text></g><g><title>engine::session::Session::save_entity_changes (102 samples, 8.27%)</title><rect x="76.9854%" y="613" width="8.2658%" height="15" fill="rgb(235,2,27)" fg:x="950" fg:w="102"/><text x="77.2354%" y="623.50">engine::sess..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (99 samples, 8.02%)</title><rect x="77.2285%" y="597" width="8.0227%" height="15" fill="rgb(239,157,39)" fg:x="953" fg:w="99"/><text x="77.4785%" y="607.50">engine::int..</text></g><g><title>engine::session::Session::check_for_changes (98 samples, 7.94%)</title><rect x="77.3096%" y="581" width="7.9417%" height="15" fill="rgb(220,11,17)" fg:x="954" fg:w="98"/><text x="77.5596%" y="591.50">engine::ses..</text></g><g><title>kernel::model::Entity::set_gid (1 samples, 0.08%)</title><rect x="85.1702%" y="565" width="0.0810%" height="15" fill="rgb(243,94,50)" fg:x="1051" fg:w="1"/><text x="85.4202%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.1702%" y="549" width="0.0810%" height="15" fill="rgb(218,22,0)" fg:x="1051" fg:w="1"/><text x="85.4202%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.1702%" y="533" width="0.0810%" height="15" fill="rgb(249,70,21)" fg:x="1051" fg:w="1"/><text x="85.4202%" y="543.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (1 samples, 0.08%)</title><rect x="85.3323%" y="597" width="0.0810%" height="15" fill="rgb(245,111,46)" fg:x="1053" fg:w="1"/><text x="85.5823%" y="607.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="85.3323%" y="581" width="0.0810%" height="15" fill="rgb(244,183,12)" fg:x="1053" fg:w="1"/><text x="85.5823%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.3323%" y="565" width="0.0810%" height="15" fill="rgb(207,117,0)" fg:x="1053" fg:w="1"/><text x="85.5823%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.3323%" y="549" width="0.0810%" height="15" fill="rgb(206,20,43)" fg:x="1053" fg:w="1"/><text x="85.5823%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="85.4133%" y="597" width="0.0810%" height="15" fill="rgb(221,104,11)" fg:x="1054" fg:w="1"/><text x="85.6633%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="85.4133%" y="581" width="0.0810%" height="15" fill="rgb(254,36,50)" fg:x="1054" fg:w="1"/><text x="85.6633%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.4133%" y="565" width="0.0810%" height="15" fill="rgb(252,17,15)" fg:x="1054" fg:w="1"/><text x="85.6633%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="85.4133%" y="549" width="0.0810%" height="15" fill="rgb(219,129,43)" fg:x="1054" fg:w="1"/><text x="85.6633%" y="559.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="85.4133%" y="533" width="0.0810%" height="15" fill="rgb(205,34,45)" fg:x="1054" fg:w="1"/><text x="85.6633%" y="543.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="85.4133%" y="517" width="0.0810%" height="15" fill="rgb(251,201,32)" fg:x="1054" fg:w="1"/><text x="85.6633%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="85.4133%" y="501" width="0.0810%" height="15" fill="rgb(205,56,0)" fg:x="1054" fg:w="1"/><text x="85.6633%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="85.4133%" y="485" width="0.0810%" height="15" fill="rgb(211,193,27)" fg:x="1054" fg:w="1"/><text x="85.6633%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.4133%" y="469" width="0.0810%" height="15" fill="rgb(231,100,42)" fg:x="1054" fg:w="1"/><text x="85.6633%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="85.4133%" y="453" width="0.0810%" height="15" fill="rgb(245,85,27)" fg:x="1054" fg:w="1"/><text x="85.6633%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.4133%" y="437" width="0.0810%" height="15" fill="rgb(241,76,24)" fg:x="1054" fg:w="1"/><text x="85.6633%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.4133%" y="421" width="0.0810%" height="15" fill="rgb(249,157,15)" fg:x="1054" fg:w="1"/><text x="85.6633%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="85.4133%" y="405" width="0.0810%" height="15" fill="rgb(222,218,25)" fg:x="1054" fg:w="1"/><text x="85.6633%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="85.4133%" y="389" width="0.0810%" height="15" fill="rgb(252,156,52)" fg:x="1054" fg:w="1"/><text x="85.6633%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="85.4133%" y="373" width="0.0810%" height="15" fill="rgb(211,185,7)" fg:x="1054" fg:w="1"/><text x="85.6633%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="85.4133%" y="357" width="0.0810%" height="15" fill="rgb(234,108,24)" fg:x="1054" fg:w="1"/><text x="85.6633%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="85.4133%" y="341" width="0.0810%" height="15" fill="rgb(227,218,2)" fg:x="1054" fg:w="1"/><text x="85.6633%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="85.4133%" y="325" width="0.0810%" height="15" fill="rgb(224,0,36)" fg:x="1054" fg:w="1"/><text x="85.6633%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="85.4133%" y="309" width="0.0810%" height="15" fill="rgb(233,201,10)" fg:x="1054" fg:w="1"/><text x="85.6633%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="85.4133%" y="293" width="0.0810%" height="15" fill="rgb(252,209,14)" fg:x="1054" fg:w="1"/><text x="85.6633%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="85.4133%" y="277" width="0.0810%" height="15" fill="rgb(205,93,49)" fg:x="1054" fg:w="1"/><text x="85.6633%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="85.4133%" y="261" width="0.0810%" height="15" fill="rgb(234,116,45)" fg:x="1054" fg:w="1"/><text x="85.6633%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="85.4133%" y="245" width="0.0810%" height="15" fill="rgb(248,89,35)" fg:x="1054" fg:w="1"/><text x="85.6633%" y="255.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="85.4133%" y="229" width="0.0810%" height="15" fill="rgb(233,167,45)" fg:x="1054" fg:w="1"/><text x="85.6633%" y="239.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="85.4133%" y="213" width="0.0810%" height="15" fill="rgb(248,228,14)" fg:x="1054" fg:w="1"/><text x="85.6633%" y="223.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="85.4943%" y="549" width="0.0810%" height="15" fill="rgb(246,91,14)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="559.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="85.4943%" y="533" width="0.0810%" height="15" fill="rgb(227,142,5)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.4943%" y="517" width="0.0810%" height="15" fill="rgb(221,63,33)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.4943%" y="501" width="0.0810%" height="15" fill="rgb(233,49,0)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.4943%" y="485" width="0.0810%" height="15" fill="rgb(251,115,38)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.4943%" y="469" width="0.0810%" height="15" fill="rgb(231,214,32)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.4943%" y="453" width="0.0810%" height="15" fill="rgb(248,73,46)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.4943%" y="437" width="0.0810%" height="15" fill="rgb(237,156,4)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.4943%" y="421" width="0.0810%" height="15" fill="rgb(227,132,2)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.4943%" y="405" width="0.0810%" height="15" fill="rgb(248,161,9)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.4943%" y="389" width="0.0810%" height="15" fill="rgb(238,77,38)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.4943%" y="373" width="0.0810%" height="15" fill="rgb(222,166,40)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.4943%" y="357" width="0.0810%" height="15" fill="rgb(214,168,45)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.4943%" y="341" width="0.0810%" height="15" fill="rgb(226,64,37)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="85.5754%" y="325" width="0.0810%" height="15" fill="rgb(232,210,43)" fg:x="1056" fg:w="1"/><text x="85.8254%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="85.5754%" y="421" width="0.1621%" height="15" fill="rgb(214,76,33)" fg:x="1056" fg:w="2"/><text x="85.8254%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="85.5754%" y="405" width="0.1621%" height="15" fill="rgb(210,78,5)" fg:x="1056" fg:w="2"/><text x="85.8254%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="85.5754%" y="389" width="0.1621%" height="15" fill="rgb(211,107,37)" fg:x="1056" fg:w="2"/><text x="85.8254%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="85.5754%" y="373" width="0.1621%" height="15" fill="rgb(249,67,16)" fg:x="1056" fg:w="2"/><text x="85.8254%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="85.5754%" y="357" width="0.1621%" height="15" fill="rgb(222,114,31)" fg:x="1056" fg:w="2"/><text x="85.8254%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="85.5754%" y="341" width="0.1621%" height="15" fill="rgb(242,118,19)" fg:x="1056" fg:w="2"/><text x="85.8254%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.6564%" y="325" width="0.0810%" height="15" fill="rgb(223,115,1)" fg:x="1057" fg:w="1"/><text x="85.9064%" y="335.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (4 samples, 0.32%)</title><rect x="85.5754%" y="533" width="0.3241%" height="15" fill="rgb(241,182,54)" fg:x="1056" fg:w="4"/><text x="85.8254%" y="543.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (4 samples, 0.32%)</title><rect x="85.5754%" y="517" width="0.3241%" height="15" fill="rgb(244,166,36)" fg:x="1056" fg:w="4"/><text x="85.8254%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="85.5754%" y="501" width="0.3241%" height="15" fill="rgb(241,52,43)" fg:x="1056" fg:w="4"/><text x="85.8254%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="85.5754%" y="485" width="0.3241%" height="15" fill="rgb(236,82,9)" fg:x="1056" fg:w="4"/><text x="85.8254%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="85.5754%" y="469" width="0.3241%" height="15" fill="rgb(241,119,0)" fg:x="1056" fg:w="4"/><text x="85.8254%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="85.5754%" y="453" width="0.3241%" height="15" fill="rgb(221,19,22)" fg:x="1056" fg:w="4"/><text x="85.8254%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="85.5754%" y="437" width="0.3241%" height="15" fill="rgb(254,144,35)" fg:x="1056" fg:w="4"/><text x="85.8254%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.7374%" y="421" width="0.1621%" height="15" fill="rgb(246,132,30)" fg:x="1058" fg:w="2"/><text x="85.9874%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.8185%" y="405" width="0.0810%" height="15" fill="rgb(234,69,28)" fg:x="1059" fg:w="1"/><text x="86.0685%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.8185%" y="389" width="0.0810%" height="15" fill="rgb(219,106,47)" fg:x="1059" fg:w="1"/><text x="86.0685%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.8185%" y="373" width="0.0810%" height="15" fill="rgb(218,79,24)" fg:x="1059" fg:w="1"/><text x="86.0685%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="85.8995%" y="453" width="0.0810%" height="15" fill="rgb(225,26,21)" fg:x="1060" fg:w="1"/><text x="86.1495%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="85.8995%" y="437" width="0.0810%" height="15" fill="rgb(217,68,49)" fg:x="1060" fg:w="1"/><text x="86.1495%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.9806%" y="421" width="0.0810%" height="15" fill="rgb(220,204,28)" fg:x="1061" fg:w="1"/><text x="86.2306%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.9806%" y="405" width="0.0810%" height="15" fill="rgb(237,208,43)" fg:x="1061" fg:w="1"/><text x="86.2306%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.9806%" y="389" width="0.0810%" height="15" fill="rgb(213,97,42)" fg:x="1061" fg:w="1"/><text x="86.2306%" y="399.50"></text></g><g><title>engine::internal::Entities::prepare_entity (8 samples, 0.65%)</title><rect x="85.4943%" y="565" width="0.6483%" height="15" fill="rgb(238,96,52)" fg:x="1055" fg:w="8"/><text x="85.7443%" y="575.50"></text></g><g><title>kernel::model::deserialize_entity (7 samples, 0.57%)</title><rect x="85.5754%" y="549" width="0.5673%" height="15" fill="rgb(228,14,13)" fg:x="1056" fg:w="7"/><text x="85.8254%" y="559.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="85.8995%" y="533" width="0.2431%" height="15" fill="rgb(219,123,13)" fg:x="1060" fg:w="3"/><text x="86.1495%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="85.8995%" y="517" width="0.2431%" height="15" fill="rgb(216,144,17)" fg:x="1060" fg:w="3"/><text x="86.1495%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="85.8995%" y="501" width="0.2431%" height="15" fill="rgb(230,228,29)" fg:x="1060" fg:w="3"/><text x="86.1495%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="85.8995%" y="485" width="0.2431%" height="15" fill="rgb(233,18,5)" fg:x="1060" fg:w="3"/><text x="86.1495%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="85.8995%" y="469" width="0.2431%" height="15" fill="rgb(233,197,12)" fg:x="1060" fg:w="3"/><text x="86.1495%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="85.9806%" y="453" width="0.1621%" height="15" fill="rgb(234,140,29)" fg:x="1061" fg:w="2"/><text x="86.2306%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="85.9806%" y="437" width="0.1621%" height="15" fill="rgb(233,113,19)" fg:x="1061" fg:w="2"/><text x="86.2306%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.0616%" y="421" width="0.0810%" height="15" fill="rgb(246,209,13)" fg:x="1062" fg:w="1"/><text x="86.3116%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="86.0616%" y="405" width="0.0810%" height="15" fill="rgb(242,79,54)" fg:x="1062" fg:w="1"/><text x="86.3116%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.0616%" y="389" width="0.0810%" height="15" fill="rgb(219,73,16)" fg:x="1062" fg:w="1"/><text x="86.3116%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="86.0616%" y="373" width="0.0810%" height="15" fill="rgb(224,52,10)" fg:x="1062" fg:w="1"/><text x="86.3116%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="86.0616%" y="357" width="0.0810%" height="15" fill="rgb(237,179,5)" fg:x="1062" fg:w="1"/><text x="86.3116%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (10 samples, 0.81%)</title><rect x="85.4943%" y="581" width="0.8104%" height="15" fill="rgb(231,20,6)" fg:x="1055" fg:w="10"/><text x="85.7443%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="86.1426%" y="565" width="0.1621%" height="15" fill="rgb(253,171,45)" fg:x="1063" fg:w="2"/><text x="86.3926%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="86.1426%" y="549" width="0.1621%" height="15" fill="rgb(230,75,49)" fg:x="1063" fg:w="2"/><text x="86.3926%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="86.1426%" y="533" width="0.1621%" height="15" fill="rgb(216,83,46)" fg:x="1063" fg:w="2"/><text x="86.3926%" y="543.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="86.1426%" y="517" width="0.1621%" height="15" fill="rgb(236,56,9)" fg:x="1063" fg:w="2"/><text x="86.3926%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="86.1426%" y="501" width="0.1621%" height="15" fill="rgb(215,28,34)" fg:x="1063" fg:w="2"/><text x="86.3926%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="86.1426%" y="485" width="0.1621%" height="15" fill="rgb(230,222,20)" fg:x="1063" fg:w="2"/><text x="86.3926%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="86.1426%" y="469" width="0.1621%" height="15" fill="rgb(235,209,51)" fg:x="1063" fg:w="2"/><text x="86.3926%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.2237%" y="453" width="0.0810%" height="15" fill="rgb(235,167,1)" fg:x="1064" fg:w="1"/><text x="86.4737%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="86.2237%" y="437" width="0.0810%" height="15" fill="rgb(248,220,0)" fg:x="1064" fg:w="1"/><text x="86.4737%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.2237%" y="421" width="0.0810%" height="15" fill="rgb(239,0,18)" fg:x="1064" fg:w="1"/><text x="86.4737%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.2237%" y="405" width="0.0810%" height="15" fill="rgb(229,179,11)" fg:x="1064" fg:w="1"/><text x="86.4737%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="86.2237%" y="389" width="0.0810%" height="15" fill="rgb(226,116,53)" fg:x="1064" fg:w="1"/><text x="86.4737%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="86.2237%" y="373" width="0.0810%" height="15" fill="rgb(218,1,49)" fg:x="1064" fg:w="1"/><text x="86.4737%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="86.2237%" y="357" width="0.0810%" height="15" fill="rgb(208,184,47)" fg:x="1064" fg:w="1"/><text x="86.4737%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="86.2237%" y="341" width="0.0810%" height="15" fill="rgb(238,174,3)" fg:x="1064" fg:w="1"/><text x="86.4737%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="86.2237%" y="325" width="0.0810%" height="15" fill="rgb(247,188,6)" fg:x="1064" fg:w="1"/><text x="86.4737%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="86.2237%" y="309" width="0.0810%" height="15" fill="rgb(211,165,46)" fg:x="1064" fg:w="1"/><text x="86.4737%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="86.2237%" y="293" width="0.0810%" height="15" fill="rgb(222,190,10)" fg:x="1064" fg:w="1"/><text x="86.4737%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="86.2237%" y="277" width="0.0810%" height="15" fill="rgb(206,185,3)" fg:x="1064" fg:w="1"/><text x="86.4737%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="86.2237%" y="261" width="0.0810%" height="15" fill="rgb(244,125,37)" fg:x="1064" fg:w="1"/><text x="86.4737%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="86.2237%" y="245" width="0.0810%" height="15" fill="rgb(211,43,7)" fg:x="1064" fg:w="1"/><text x="86.4737%" y="255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="86.2237%" y="229" width="0.0810%" height="15" fill="rgb(250,41,42)" fg:x="1064" fg:w="1"/><text x="86.4737%" y="239.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="86.2237%" y="213" width="0.0810%" height="15" fill="rgb(254,54,42)" fg:x="1064" fg:w="1"/><text x="86.4737%" y="223.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="86.2237%" y="197" width="0.0810%" height="15" fill="rgb(213,71,43)" fg:x="1064" fg:w="1"/><text x="86.4737%" y="207.50"></text></g><g><title>kernel::model::EntityRef::into_entry (1 samples, 0.08%)</title><rect x="86.4668%" y="549" width="0.0810%" height="15" fill="rgb(249,3,44)" fg:x="1067" fg:w="1"/><text x="86.7168%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="86.4668%" y="533" width="0.0810%" height="15" fill="rgb(229,80,41)" fg:x="1067" fg:w="1"/><text x="86.7168%" y="543.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="86.5478%" y="485" width="0.0810%" height="15" fill="rgb(231,25,28)" fg:x="1068" fg:w="1"/><text x="86.7978%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="86.7099%" y="325" width="0.0810%" height="15" fill="rgb(208,79,48)" fg:x="1070" fg:w="1"/><text x="86.9599%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="86.7099%" y="309" width="0.0810%" height="15" fill="rgb(207,196,38)" fg:x="1070" fg:w="1"/><text x="86.9599%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="86.6288%" y="357" width="0.2431%" height="15" fill="rgb(228,105,49)" fg:x="1069" fg:w="3"/><text x="86.8788%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="86.6288%" y="341" width="0.2431%" height="15" fill="rgb(237,99,15)" fg:x="1069" fg:w="3"/><text x="86.8788%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.7909%" y="325" width="0.0810%" height="15" fill="rgb(224,207,46)" fg:x="1071" fg:w="1"/><text x="87.0409%" y="335.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (4 samples, 0.32%)</title><rect x="86.6288%" y="469" width="0.3241%" height="15" fill="rgb(249,117,50)" fg:x="1069" fg:w="4"/><text x="86.8788%" y="479.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (4 samples, 0.32%)</title><rect x="86.6288%" y="453" width="0.3241%" height="15" fill="rgb(248,17,13)" fg:x="1069" fg:w="4"/><text x="86.8788%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="86.6288%" y="437" width="0.3241%" height="15" fill="rgb(228,187,36)" fg:x="1069" fg:w="4"/><text x="86.8788%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="86.6288%" y="421" width="0.3241%" height="15" fill="rgb(234,132,20)" fg:x="1069" fg:w="4"/><text x="86.8788%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="86.6288%" y="405" width="0.3241%" height="15" fill="rgb(209,170,46)" fg:x="1069" fg:w="4"/><text x="86.8788%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="86.6288%" y="389" width="0.3241%" height="15" fill="rgb(237,23,19)" fg:x="1069" fg:w="4"/><text x="86.8788%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="86.6288%" y="373" width="0.3241%" height="15" fill="rgb(227,21,26)" fg:x="1069" fg:w="4"/><text x="86.8788%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.8720%" y="357" width="0.0810%" height="15" fill="rgb(222,220,48)" fg:x="1072" fg:w="1"/><text x="87.1220%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="86.8720%" y="341" width="0.0810%" height="15" fill="rgb(214,9,16)" fg:x="1072" fg:w="1"/><text x="87.1220%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="86.9530%" y="421" width="0.0810%" height="15" fill="rgb(209,73,30)" fg:x="1073" fg:w="1"/><text x="87.2030%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="86.9530%" y="405" width="0.0810%" height="15" fill="rgb(207,20,33)" fg:x="1073" fg:w="1"/><text x="87.2030%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="87.0340%" y="341" width="0.0810%" height="15" fill="rgb(219,153,12)" fg:x="1074" fg:w="1"/><text x="87.2840%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.0340%" y="325" width="0.0810%" height="15" fill="rgb(235,97,25)" fg:x="1074" fg:w="1"/><text x="87.2840%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="87.0340%" y="309" width="0.0810%" height="15" fill="rgb(244,30,34)" fg:x="1074" fg:w="1"/><text x="87.2840%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.0340%" y="293" width="0.0810%" height="15" fill="rgb(214,106,45)" fg:x="1074" fg:w="1"/><text x="87.2840%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.0340%" y="277" width="0.0810%" height="15" fill="rgb(226,41,9)" fg:x="1074" fg:w="1"/><text x="87.2840%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.0340%" y="261" width="0.0810%" height="15" fill="rgb(253,139,29)" fg:x="1074" fg:w="1"/><text x="87.2840%" y="271.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (9 samples, 0.73%)</title><rect x="86.4668%" y="565" width="0.7293%" height="15" fill="rgb(213,205,39)" fg:x="1067" fg:w="9"/><text x="86.7168%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (8 samples, 0.65%)</title><rect x="86.5478%" y="549" width="0.6483%" height="15" fill="rgb(209,27,10)" fg:x="1068" fg:w="8"/><text x="86.7978%" y="559.50"></text></g><g><title>kernel::model::Entity::load_scope (8 samples, 0.65%)</title><rect x="86.5478%" y="533" width="0.6483%" height="15" fill="rgb(249,142,16)" fg:x="1068" fg:w="8"/><text x="86.7978%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (8 samples, 0.65%)</title><rect x="86.5478%" y="517" width="0.6483%" height="15" fill="rgb(242,65,12)" fg:x="1068" fg:w="8"/><text x="86.7978%" y="527.50"></text></g><g><title>engine::internal::Entities::prepare_entity (8 samples, 0.65%)</title><rect x="86.5478%" y="501" width="0.6483%" height="15" fill="rgb(232,48,10)" fg:x="1068" fg:w="8"/><text x="86.7978%" y="511.50"></text></g><g><title>kernel::model::deserialize_entity (7 samples, 0.57%)</title><rect x="86.6288%" y="485" width="0.5673%" height="15" fill="rgb(253,67,19)" fg:x="1069" fg:w="7"/><text x="86.8788%" y="495.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="86.9530%" y="469" width="0.2431%" height="15" fill="rgb(227,93,29)" fg:x="1073" fg:w="3"/><text x="87.2030%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="86.9530%" y="453" width="0.2431%" height="15" fill="rgb(226,189,53)" fg:x="1073" fg:w="3"/><text x="87.2030%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="86.9530%" y="437" width="0.2431%" height="15" fill="rgb(223,224,1)" fg:x="1073" fg:w="3"/><text x="87.2030%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="87.0340%" y="421" width="0.1621%" height="15" fill="rgb(221,84,32)" fg:x="1074" fg:w="2"/><text x="87.2840%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="87.0340%" y="405" width="0.1621%" height="15" fill="rgb(214,189,28)" fg:x="1074" fg:w="2"/><text x="87.2840%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="87.0340%" y="389" width="0.1621%" height="15" fill="rgb(234,7,52)" fg:x="1074" fg:w="2"/><text x="87.2840%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="87.0340%" y="373" width="0.1621%" height="15" fill="rgb(249,73,31)" fg:x="1074" fg:w="2"/><text x="87.2840%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="87.0340%" y="357" width="0.1621%" height="15" fill="rgb(253,153,41)" fg:x="1074" fg:w="2"/><text x="87.2840%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.1151%" y="341" width="0.0810%" height="15" fill="rgb(249,52,34)" fg:x="1075" fg:w="1"/><text x="87.3651%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="87.1151%" y="325" width="0.0810%" height="15" fill="rgb(236,177,47)" fg:x="1075" fg:w="1"/><text x="87.3651%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="87.1151%" y="309" width="0.0810%" height="15" fill="rgb(252,185,45)" fg:x="1075" fg:w="1"/><text x="87.3651%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.1151%" y="293" width="0.0810%" height="15" fill="rgb(251,15,30)" fg:x="1075" fg:w="1"/><text x="87.3651%" y="303.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living (12 samples, 0.97%)</title><rect x="86.3047%" y="581" width="0.9724%" height="15" fill="rgb(233,31,4)" fg:x="1065" fg:w="12"/><text x="86.5547%" y="591.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="87.1961%" y="565" width="0.0810%" height="15" fill="rgb(254,44,24)" fg:x="1076" fg:w="1"/><text x="87.4461%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="87.1961%" y="549" width="0.0810%" height="15" fill="rgb(218,54,1)" fg:x="1076" fg:w="1"/><text x="87.4461%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="87.1961%" y="533" width="0.0810%" height="15" fill="rgb(243,209,39)" fg:x="1076" fg:w="1"/><text x="87.4461%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="87.1961%" y="517" width="0.0810%" height="15" fill="rgb(206,75,33)" fg:x="1076" fg:w="1"/><text x="87.4461%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="87.1961%" y="501" width="0.0810%" height="15" fill="rgb(223,108,18)" fg:x="1076" fg:w="1"/><text x="87.4461%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.1961%" y="485" width="0.0810%" height="15" fill="rgb(244,89,31)" fg:x="1076" fg:w="1"/><text x="87.4461%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.1961%" y="469" width="0.0810%" height="15" fill="rgb(222,167,27)" fg:x="1076" fg:w="1"/><text x="87.4461%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="87.1961%" y="453" width="0.0810%" height="15" fill="rgb(247,41,16)" fg:x="1076" fg:w="1"/><text x="87.4461%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.1961%" y="437" width="0.0810%" height="15" fill="rgb(233,168,40)" fg:x="1076" fg:w="1"/><text x="87.4461%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.1961%" y="421" width="0.0810%" height="15" fill="rgb(205,211,8)" fg:x="1076" fg:w="1"/><text x="87.4461%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.1961%" y="405" width="0.0810%" height="15" fill="rgb(238,105,11)" fg:x="1076" fg:w="1"/><text x="87.4461%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="87.1961%" y="389" width="0.0810%" height="15" fill="rgb(223,142,52)" fg:x="1076" fg:w="1"/><text x="87.4461%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.1961%" y="373" width="0.0810%" height="15" fill="rgb(238,51,33)" fg:x="1076" fg:w="1"/><text x="87.4461%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.1961%" y="357" width="0.0810%" height="15" fill="rgb(231,188,43)" fg:x="1076" fg:w="1"/><text x="87.4461%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.1961%" y="341" width="0.0810%" height="15" fill="rgb(216,92,17)" fg:x="1076" fg:w="1"/><text x="87.4461%" y="351.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="87.1961%" y="325" width="0.0810%" height="15" fill="rgb(228,2,40)" fg:x="1076" fg:w="1"/><text x="87.4461%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="87.2771%" y="565" width="0.0810%" height="15" fill="rgb(226,73,15)" fg:x="1077" fg:w="1"/><text x="87.5271%" y="575.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_name (24 samples, 1.94%)</title><rect x="85.4943%" y="597" width="1.9449%" height="15" fill="rgb(227,66,46)" fg:x="1055" fg:w="24"/><text x="85.7443%" y="607.50">e..</text></g><g><title>engine::users::model::username_to_key (2 samples, 0.16%)</title><rect x="87.2771%" y="581" width="0.1621%" height="15" fill="rgb(209,71,6)" fg:x="1077" fg:w="2"/><text x="87.5271%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="87.3582%" y="565" width="0.0810%" height="15" fill="rgb(246,100,25)" fg:x="1078" fg:w="1"/><text x="87.6082%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="87.3582%" y="549" width="0.0810%" height="15" fill="rgb(248,185,27)" fg:x="1078" fg:w="1"/><text x="87.6082%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.3582%" y="533" width="0.0810%" height="15" fill="rgb(225,118,47)" fg:x="1078" fg:w="1"/><text x="87.6082%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.3582%" y="517" width="0.0810%" height="15" fill="rgb(220,185,44)" fg:x="1078" fg:w="1"/><text x="87.6082%" y="527.50"></text></g><g><title>kernel::plugins::SessionPlugins::evaluate (1 samples, 0.08%)</title><rect x="87.4392%" y="597" width="0.0810%" height="15" fill="rgb(227,95,24)" fg:x="1079" fg:w="1"/><text x="87.6892%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="87.4392%" y="581" width="0.0810%" height="15" fill="rgb(252,84,24)" fg:x="1079" fg:w="1"/><text x="87.6892%" y="591.50"></text></g><g><title>&lt;plugins_core::looking::parser::LookActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="87.4392%" y="565" width="0.0810%" height="15" fill="rgb(240,34,44)" fg:x="1079" fg:w="1"/><text x="87.6892%" y="575.50"></text></g><g><title>&lt;kernel::model::DomainError as core::convert::From&lt;anyhow::Error&gt;&gt;::from (1 samples, 0.08%)</title><rect x="87.4392%" y="549" width="0.0810%" height="15" fill="rgb(209,72,54)" fg:x="1079" fg:w="1"/><text x="87.6892%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="87.8444%" y="501" width="0.0810%" height="15" fill="rgb(226,19,45)" fg:x="1084" fg:w="1"/><text x="88.0944%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.8444%" y="485" width="0.0810%" height="15" fill="rgb(246,7,45)" fg:x="1084" fg:w="1"/><text x="88.0944%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="87.7634%" y="517" width="0.3241%" height="15" fill="rgb(225,45,2)" fg:x="1083" fg:w="4"/><text x="88.0134%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="87.9254%" y="501" width="0.1621%" height="15" fill="rgb(221,80,29)" fg:x="1085" fg:w="2"/><text x="88.1754%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.73%)</title><rect x="87.6013%" y="533" width="0.7293%" height="15" fill="rgb(228,11,19)" fg:x="1081" fg:w="9"/><text x="87.8513%" y="543.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="88.0875%" y="517" width="0.2431%" height="15" fill="rgb(243,17,21)" fg:x="1087" fg:w="3"/><text x="88.3375%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="88.3306%" y="533" width="0.1621%" height="15" fill="rgb(243,88,8)" fg:x="1090" fg:w="2"/><text x="88.5806%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (12 samples, 0.97%)</title><rect x="87.6013%" y="565" width="0.9724%" height="15" fill="rgb(214,17,9)" fg:x="1081" fg:w="12"/><text x="87.8513%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.97%)</title><rect x="87.6013%" y="549" width="0.9724%" height="15" fill="rgb(232,169,15)" fg:x="1081" fg:w="12"/><text x="87.8513%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="88.4927%" y="533" width="0.0810%" height="15" fill="rgb(232,86,53)" fg:x="1092" fg:w="1"/><text x="88.7427%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="88.6548%" y="517" width="0.1621%" height="15" fill="rgb(222,100,4)" fg:x="1094" fg:w="2"/><text x="88.9048%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="88.6548%" y="533" width="0.2431%" height="15" fill="rgb(253,151,38)" fg:x="1094" fg:w="3"/><text x="88.9048%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="88.8169%" y="517" width="0.0810%" height="15" fill="rgb(238,215,29)" fg:x="1096" fg:w="1"/><text x="89.0669%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.8169%" y="501" width="0.0810%" height="15" fill="rgb(205,128,53)" fg:x="1096" fg:w="1"/><text x="89.0669%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="88.8979%" y="533" width="0.0810%" height="15" fill="rgb(248,183,14)" fg:x="1097" fg:w="1"/><text x="89.1479%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="88.8979%" y="517" width="0.0810%" height="15" fill="rgb(244,172,35)" fg:x="1097" fg:w="1"/><text x="89.1479%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="88.9789%" y="533" width="0.0810%" height="15" fill="rgb(234,93,19)" fg:x="1098" fg:w="1"/><text x="89.2289%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="88.9789%" y="517" width="0.0810%" height="15" fill="rgb(227,109,7)" fg:x="1098" fg:w="1"/><text x="89.2289%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.1410%" y="485" width="0.0810%" height="15" fill="rgb(233,136,54)" fg:x="1100" fg:w="1"/><text x="89.3910%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="89.2220%" y="469" width="0.1621%" height="15" fill="rgb(233,19,40)" fg:x="1101" fg:w="2"/><text x="89.4720%" y="479.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="89.3031%" y="453" width="0.0810%" height="15" fill="rgb(247,41,18)" fg:x="1102" fg:w="1"/><text x="89.5531%" y="463.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="89.3031%" y="437" width="0.0810%" height="15" fill="rgb(220,34,34)" fg:x="1102" fg:w="1"/><text x="89.5531%" y="447.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="89.4652%" y="389" width="0.0810%" height="15" fill="rgb(222,135,32)" fg:x="1104" fg:w="1"/><text x="89.7152%" y="399.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="89.4652%" y="373" width="0.0810%" height="15" fill="rgb(214,80,19)" fg:x="1104" fg:w="1"/><text x="89.7152%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="89.3841%" y="453" width="0.2431%" height="15" fill="rgb(234,54,46)" fg:x="1103" fg:w="3"/><text x="89.6341%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="89.3841%" y="437" width="0.2431%" height="15" fill="rgb(251,48,23)" fg:x="1103" fg:w="3"/><text x="89.6341%" y="447.50"></text></g><g><title>kernel::model::EntityRef::into_entry (2 samples, 0.16%)</title><rect x="89.4652%" y="421" width="0.1621%" height="15" fill="rgb(254,109,52)" fg:x="1104" fg:w="2"/><text x="89.7152%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="89.4652%" y="405" width="0.1621%" height="15" fill="rgb(240,186,19)" fg:x="1104" fg:w="2"/><text x="89.7152%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="89.5462%" y="389" width="0.0810%" height="15" fill="rgb(246,187,17)" fg:x="1105" fg:w="1"/><text x="89.7962%" y="399.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="89.5462%" y="373" width="0.0810%" height="15" fill="rgb(212,21,5)" fg:x="1105" fg:w="1"/><text x="89.7962%" y="383.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="89.5462%" y="357" width="0.0810%" height="15" fill="rgb(225,185,18)" fg:x="1105" fg:w="1"/><text x="89.7962%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="89.5462%" y="341" width="0.0810%" height="15" fill="rgb(245,114,17)" fg:x="1105" fg:w="1"/><text x="89.7962%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="89.5462%" y="325" width="0.0810%" height="15" fill="rgb(223,164,24)" fg:x="1105" fg:w="1"/><text x="89.7962%" y="335.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="89.5462%" y="309" width="0.0810%" height="15" fill="rgb(211,228,3)" fg:x="1105" fg:w="1"/><text x="89.7962%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="89.5462%" y="293" width="0.0810%" height="15" fill="rgb(223,16,38)" fg:x="1105" fg:w="1"/><text x="89.7962%" y="303.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="89.5462%" y="277" width="0.0810%" height="15" fill="rgb(207,31,54)" fg:x="1105" fg:w="1"/><text x="89.7962%" y="287.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="89.5462%" y="261" width="0.0810%" height="15" fill="rgb(220,39,11)" fg:x="1105" fg:w="1"/><text x="89.7962%" y="271.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="89.5462%" y="245" width="0.0810%" height="15" fill="rgb(235,185,0)" fg:x="1105" fg:w="1"/><text x="89.7962%" y="255.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="89.5462%" y="229" width="0.0810%" height="15" fill="rgb(249,39,18)" fg:x="1105" fg:w="1"/><text x="89.7962%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="89.7083%" y="437" width="0.1621%" height="15" fill="rgb(240,110,33)" fg:x="1107" fg:w="2"/><text x="89.9583%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.7893%" y="421" width="0.0810%" height="15" fill="rgb(210,92,42)" fg:x="1108" fg:w="1"/><text x="90.0393%" y="431.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="89.8703%" y="437" width="0.0810%" height="15" fill="rgb(218,215,28)" fg:x="1109" fg:w="1"/><text x="90.1203%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.9514%" y="389" width="0.0810%" height="15" fill="rgb(238,215,36)" fg:x="1110" fg:w="1"/><text x="90.2014%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.9514%" y="373" width="0.0810%" height="15" fill="rgb(220,31,10)" fg:x="1110" fg:w="1"/><text x="90.2014%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.9514%" y="357" width="0.0810%" height="15" fill="rgb(212,93,14)" fg:x="1110" fg:w="1"/><text x="90.2014%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.9514%" y="341" width="0.0810%" height="15" fill="rgb(254,207,2)" fg:x="1110" fg:w="1"/><text x="90.2014%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.9514%" y="325" width="0.0810%" height="15" fill="rgb(205,57,44)" fg:x="1110" fg:w="1"/><text x="90.2014%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.9514%" y="309" width="0.0810%" height="15" fill="rgb(226,151,19)" fg:x="1110" fg:w="1"/><text x="90.2014%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.9514%" y="293" width="0.0810%" height="15" fill="rgb(230,72,30)" fg:x="1110" fg:w="1"/><text x="90.2014%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.9514%" y="277" width="0.0810%" height="15" fill="rgb(244,0,8)" fg:x="1110" fg:w="1"/><text x="90.2014%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.9514%" y="261" width="0.0810%" height="15" fill="rgb(230,192,6)" fg:x="1110" fg:w="1"/><text x="90.2014%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.9514%" y="245" width="0.0810%" height="15" fill="rgb(233,207,13)" fg:x="1110" fg:w="1"/><text x="90.2014%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.9514%" y="229" width="0.0810%" height="15" fill="rgb(206,227,7)" fg:x="1110" fg:w="1"/><text x="90.2014%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.9514%" y="213" width="0.0810%" height="15" fill="rgb(213,217,25)" fg:x="1110" fg:w="1"/><text x="90.2014%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.9514%" y="197" width="0.0810%" height="15" fill="rgb(249,75,4)" fg:x="1110" fg:w="1"/><text x="90.2014%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.9514%" y="181" width="0.0810%" height="15" fill="rgb(225,114,18)" fg:x="1110" fg:w="1"/><text x="90.2014%" y="191.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (1 samples, 0.08%)</title><rect x="90.0324%" y="341" width="0.0810%" height="15" fill="rgb(211,162,40)" fg:x="1111" fg:w="1"/><text x="90.2824%" y="351.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (1 samples, 0.08%)</title><rect x="90.0324%" y="325" width="0.0810%" height="15" fill="rgb(206,49,29)" fg:x="1111" fg:w="1"/><text x="90.2824%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.0324%" y="309" width="0.0810%" height="15" fill="rgb(244,8,6)" fg:x="1111" fg:w="1"/><text x="90.2824%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.0324%" y="293" width="0.0810%" height="15" fill="rgb(231,194,28)" fg:x="1111" fg:w="1"/><text x="90.2824%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.0324%" y="277" width="0.0810%" height="15" fill="rgb(210,69,5)" fg:x="1111" fg:w="1"/><text x="90.2824%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.0324%" y="261" width="0.0810%" height="15" fill="rgb(216,186,12)" fg:x="1111" fg:w="1"/><text x="90.2824%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.0324%" y="245" width="0.0810%" height="15" fill="rgb(238,61,15)" fg:x="1111" fg:w="1"/><text x="90.2824%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.1945%" y="197" width="0.0810%" height="15" fill="rgb(226,104,1)" fg:x="1113" fg:w="1"/><text x="90.4445%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.1945%" y="181" width="0.0810%" height="15" fill="rgb(229,128,15)" fg:x="1113" fg:w="1"/><text x="90.4445%" y="191.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (4 samples, 0.32%)</title><rect x="90.0324%" y="389" width="0.3241%" height="15" fill="rgb(247,110,15)" fg:x="1111" fg:w="4"/><text x="90.2824%" y="399.50"></text></g><g><title>engine::internal::Entities::prepare_entity (4 samples, 0.32%)</title><rect x="90.0324%" y="373" width="0.3241%" height="15" fill="rgb(210,74,48)" fg:x="1111" fg:w="4"/><text x="90.2824%" y="383.50"></text></g><g><title>kernel::model::deserialize_entity (4 samples, 0.32%)</title><rect x="90.0324%" y="357" width="0.3241%" height="15" fill="rgb(246,121,10)" fg:x="1111" fg:w="4"/><text x="90.2824%" y="367.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="90.1135%" y="341" width="0.2431%" height="15" fill="rgb(214,156,37)" fg:x="1112" fg:w="3"/><text x="90.3635%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="90.1135%" y="325" width="0.2431%" height="15" fill="rgb(214,210,34)" fg:x="1112" fg:w="3"/><text x="90.3635%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="90.1135%" y="309" width="0.2431%" height="15" fill="rgb(237,93,35)" fg:x="1112" fg:w="3"/><text x="90.3635%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="90.1135%" y="293" width="0.2431%" height="15" fill="rgb(206,36,8)" fg:x="1112" fg:w="3"/><text x="90.3635%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="90.1135%" y="277" width="0.2431%" height="15" fill="rgb(208,151,12)" fg:x="1112" fg:w="3"/><text x="90.3635%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="90.1945%" y="261" width="0.1621%" height="15" fill="rgb(225,133,52)" fg:x="1113" fg:w="2"/><text x="90.4445%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="90.1945%" y="245" width="0.1621%" height="15" fill="rgb(231,71,53)" fg:x="1113" fg:w="2"/><text x="90.4445%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="90.1945%" y="229" width="0.1621%" height="15" fill="rgb(243,76,21)" fg:x="1113" fg:w="2"/><text x="90.4445%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="90.1945%" y="213" width="0.1621%" height="15" fill="rgb(252,144,3)" fg:x="1113" fg:w="2"/><text x="90.4445%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.2755%" y="197" width="0.0810%" height="15" fill="rgb(231,199,10)" fg:x="1114" fg:w="1"/><text x="90.5255%" y="207.50"></text></g><g><title>core::iter::adapters::try_process (13 samples, 1.05%)</title><rect x="89.3841%" y="469" width="1.0535%" height="15" fill="rgb(215,18,11)" fg:x="1103" fg:w="13"/><text x="89.6341%" y="479.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (10 samples, 0.81%)</title><rect x="89.6272%" y="453" width="0.8104%" height="15" fill="rgb(241,65,24)" fg:x="1106" fg:w="10"/><text x="89.8772%" y="463.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (6 samples, 0.49%)</title><rect x="89.9514%" y="437" width="0.4862%" height="15" fill="rgb(251,192,38)" fg:x="1110" fg:w="6"/><text x="90.2014%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (6 samples, 0.49%)</title><rect x="89.9514%" y="421" width="0.4862%" height="15" fill="rgb(205,9,35)" fg:x="1110" fg:w="6"/><text x="90.2014%" y="431.50"></text></g><g><title>kernel::model::Entity::load_scope (6 samples, 0.49%)</title><rect x="89.9514%" y="405" width="0.4862%" height="15" fill="rgb(229,225,49)" fg:x="1110" fg:w="6"/><text x="90.2014%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="90.3566%" y="389" width="0.0810%" height="15" fill="rgb(207,125,39)" fg:x="1115" fg:w="1"/><text x="90.6066%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.3566%" y="373" width="0.0810%" height="15" fill="rgb(222,78,19)" fg:x="1115" fg:w="1"/><text x="90.6066%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="90.4376%" y="469" width="0.0810%" height="15" fill="rgb(248,207,20)" fg:x="1116" fg:w="1"/><text x="90.6876%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="90.4376%" y="453" width="0.0810%" height="15" fill="rgb(205,103,49)" fg:x="1116" fg:w="1"/><text x="90.6876%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.4376%" y="437" width="0.0810%" height="15" fill="rgb(216,42,28)" fg:x="1116" fg:w="1"/><text x="90.6876%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.41%)</title><rect x="90.5186%" y="437" width="0.4052%" height="15" fill="rgb(213,205,53)" fg:x="1117" fg:w="5"/><text x="90.7686%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="90.5997%" y="421" width="0.3241%" height="15" fill="rgb(239,140,53)" fg:x="1118" fg:w="4"/><text x="90.8497%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="90.5997%" y="405" width="0.3241%" height="15" fill="rgb(248,95,9)" fg:x="1118" fg:w="4"/><text x="90.8497%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="90.6807%" y="389" width="0.2431%" height="15" fill="rgb(254,58,47)" fg:x="1119" fg:w="3"/><text x="90.9307%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="90.6807%" y="373" width="0.2431%" height="15" fill="rgb(234,227,14)" fg:x="1119" fg:w="3"/><text x="90.9307%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="90.6807%" y="357" width="0.2431%" height="15" fill="rgb(205,192,45)" fg:x="1119" fg:w="3"/><text x="90.9307%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="90.6807%" y="341" width="0.2431%" height="15" fill="rgb(253,187,31)" fg:x="1119" fg:w="3"/><text x="90.9307%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="90.6807%" y="325" width="0.2431%" height="15" fill="rgb(222,6,32)" fg:x="1119" fg:w="3"/><text x="90.9307%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="90.6807%" y="309" width="0.2431%" height="15" fill="rgb(249,190,19)" fg:x="1119" fg:w="3"/><text x="90.9307%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="90.6807%" y="293" width="0.2431%" height="15" fill="rgb(251,28,20)" fg:x="1119" fg:w="3"/><text x="90.9307%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="90.6807%" y="277" width="0.2431%" height="15" fill="rgb(210,223,40)" fg:x="1119" fg:w="3"/><text x="90.9307%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="90.6807%" y="261" width="0.2431%" height="15" fill="rgb(216,137,22)" fg:x="1119" fg:w="3"/><text x="90.9307%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="90.6807%" y="245" width="0.2431%" height="15" fill="rgb(247,39,34)" fg:x="1119" fg:w="3"/><text x="90.9307%" y="255.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="90.6807%" y="229" width="0.2431%" height="15" fill="rgb(239,43,50)" fg:x="1119" fg:w="3"/><text x="90.9307%" y="239.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="90.6807%" y="213" width="0.2431%" height="15" fill="rgb(241,212,9)" fg:x="1119" fg:w="3"/><text x="90.9307%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.9238%" y="357" width="0.0810%" height="15" fill="rgb(205,8,2)" fg:x="1122" fg:w="1"/><text x="91.1738%" y="367.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="90.9238%" y="437" width="0.1621%" height="15" fill="rgb(217,173,54)" fg:x="1122" fg:w="2"/><text x="91.1738%" y="447.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="90.9238%" y="421" width="0.1621%" height="15" fill="rgb(208,149,52)" fg:x="1122" fg:w="2"/><text x="91.1738%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="90.9238%" y="405" width="0.1621%" height="15" fill="rgb(239,99,40)" fg:x="1122" fg:w="2"/><text x="91.1738%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="90.9238%" y="389" width="0.1621%" height="15" fill="rgb(233,214,26)" fg:x="1122" fg:w="2"/><text x="91.1738%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="90.9238%" y="373" width="0.1621%" height="15" fill="rgb(231,225,37)" fg:x="1122" fg:w="2"/><text x="91.1738%" y="383.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="91.0049%" y="357" width="0.0810%" height="15" fill="rgb(252,55,35)" fg:x="1123" fg:w="1"/><text x="91.2549%" y="367.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="91.0049%" y="341" width="0.0810%" height="15" fill="rgb(239,43,18)" fg:x="1123" fg:w="1"/><text x="91.2549%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.0049%" y="325" width="0.0810%" height="15" fill="rgb(251,125,49)" fg:x="1123" fg:w="1"/><text x="91.2549%" y="335.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (24 samples, 1.94%)</title><rect x="89.2220%" y="485" width="1.9449%" height="15" fill="rgb(212,83,54)" fg:x="1101" fg:w="24"/><text x="89.4720%" y="495.50">p..</text></g><g><title>kernel::model::entry::Entry::scope (8 samples, 0.65%)</title><rect x="90.5186%" y="469" width="0.6483%" height="15" fill="rgb(250,75,6)" fg:x="1117" fg:w="8"/><text x="90.7686%" y="479.50"></text></g><g><title>kernel::model::Entity::load_scope (8 samples, 0.65%)</title><rect x="90.5186%" y="453" width="0.6483%" height="15" fill="rgb(252,36,40)" fg:x="1117" fg:w="8"/><text x="90.7686%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.0859%" y="437" width="0.0810%" height="15" fill="rgb(230,91,51)" fg:x="1124" fg:w="1"/><text x="91.3359%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.0859%" y="421" width="0.0810%" height="15" fill="rgb(212,92,28)" fg:x="1124" fg:w="1"/><text x="91.3359%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="91.0859%" y="405" width="0.0810%" height="15" fill="rgb(227,13,22)" fg:x="1124" fg:w="1"/><text x="91.3359%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="91.0859%" y="389" width="0.0810%" height="15" fill="rgb(239,204,32)" fg:x="1124" fg:w="1"/><text x="91.3359%" y="399.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="91.0859%" y="373" width="0.0810%" height="15" fill="rgb(228,49,41)" fg:x="1124" fg:w="1"/><text x="91.3359%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.0859%" y="357" width="0.0810%" height="15" fill="rgb(206,95,6)" fg:x="1124" fg:w="1"/><text x="91.3359%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.0859%" y="341" width="0.0810%" height="15" fill="rgb(251,20,14)" fg:x="1124" fg:w="1"/><text x="91.3359%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.2480%" y="421" width="0.0810%" height="15" fill="rgb(214,99,28)" fg:x="1126" fg:w="1"/><text x="91.4980%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.2480%" y="405" width="0.0810%" height="15" fill="rgb(239,122,54)" fg:x="1126" fg:w="1"/><text x="91.4980%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.2480%" y="389" width="0.0810%" height="15" fill="rgb(218,217,46)" fg:x="1126" fg:w="1"/><text x="91.4980%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.2480%" y="373" width="0.0810%" height="15" fill="rgb(249,106,28)" fg:x="1126" fg:w="1"/><text x="91.4980%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.2480%" y="357" width="0.0810%" height="15" fill="rgb(250,158,18)" fg:x="1126" fg:w="1"/><text x="91.4980%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.2480%" y="341" width="0.0810%" height="15" fill="rgb(226,137,29)" fg:x="1126" fg:w="1"/><text x="91.4980%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.2480%" y="325" width="0.0810%" height="15" fill="rgb(210,188,1)" fg:x="1126" fg:w="1"/><text x="91.4980%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.2480%" y="309" width="0.0810%" height="15" fill="rgb(227,84,42)" fg:x="1126" fg:w="1"/><text x="91.4980%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.2480%" y="293" width="0.0810%" height="15" fill="rgb(222,147,48)" fg:x="1126" fg:w="1"/><text x="91.4980%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.2480%" y="277" width="0.0810%" height="15" fill="rgb(241,150,43)" fg:x="1126" fg:w="1"/><text x="91.4980%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.2480%" y="261" width="0.0810%" height="15" fill="rgb(206,139,52)" fg:x="1126" fg:w="1"/><text x="91.4980%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.2480%" y="245" width="0.0810%" height="15" fill="rgb(230,63,14)" fg:x="1126" fg:w="1"/><text x="91.4980%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.4100%" y="389" width="0.0810%" height="15" fill="rgb(247,8,20)" fg:x="1128" fg:w="1"/><text x="91.6600%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.4100%" y="373" width="0.0810%" height="15" fill="rgb(213,115,4)" fg:x="1128" fg:w="1"/><text x="91.6600%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.4100%" y="357" width="0.0810%" height="15" fill="rgb(241,79,49)" fg:x="1128" fg:w="1"/><text x="91.6600%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.4100%" y="341" width="0.0810%" height="15" fill="rgb(222,42,35)" fg:x="1128" fg:w="1"/><text x="91.6600%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.4100%" y="325" width="0.0810%" height="15" fill="rgb(247,59,23)" fg:x="1128" fg:w="1"/><text x="91.6600%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.4100%" y="309" width="0.0810%" height="15" fill="rgb(247,93,18)" fg:x="1128" fg:w="1"/><text x="91.6600%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.4100%" y="293" width="0.0810%" height="15" fill="rgb(249,107,47)" fg:x="1128" fg:w="1"/><text x="91.6600%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.4100%" y="277" width="0.0810%" height="15" fill="rgb(219,27,1)" fg:x="1128" fg:w="1"/><text x="91.6600%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.4100%" y="261" width="0.0810%" height="15" fill="rgb(217,82,32)" fg:x="1128" fg:w="1"/><text x="91.6600%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.4100%" y="245" width="0.0810%" height="15" fill="rgb(250,129,47)" fg:x="1128" fg:w="1"/><text x="91.6600%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.4100%" y="229" width="0.0810%" height="15" fill="rgb(253,88,35)" fg:x="1128" fg:w="1"/><text x="91.6600%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.4100%" y="213" width="0.0810%" height="15" fill="rgb(245,221,14)" fg:x="1128" fg:w="1"/><text x="91.6600%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="91.2480%" y="437" width="0.3241%" height="15" fill="rgb(217,119,54)" fg:x="1126" fg:w="4"/><text x="91.4980%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="91.3290%" y="421" width="0.2431%" height="15" fill="rgb(247,128,31)" fg:x="1127" fg:w="3"/><text x="91.5790%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="91.3290%" y="405" width="0.2431%" height="15" fill="rgb(211,99,22)" fg:x="1127" fg:w="3"/><text x="91.5790%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.4911%" y="389" width="0.0810%" height="15" fill="rgb(212,20,17)" fg:x="1129" fg:w="1"/><text x="91.7411%" y="399.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="91.7342%" y="341" width="0.0810%" height="15" fill="rgb(209,159,29)" fg:x="1132" fg:w="1"/><text x="91.9842%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.7342%" y="325" width="0.0810%" height="15" fill="rgb(222,177,53)" fg:x="1132" fg:w="1"/><text x="91.9842%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.7342%" y="309" width="0.0810%" height="15" fill="rgb(234,46,43)" fg:x="1132" fg:w="1"/><text x="91.9842%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="91.7342%" y="293" width="0.0810%" height="15" fill="rgb(208,108,14)" fg:x="1132" fg:w="1"/><text x="91.9842%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.7342%" y="277" width="0.0810%" height="15" fill="rgb(226,78,53)" fg:x="1132" fg:w="1"/><text x="91.9842%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="91.8152%" y="261" width="0.1621%" height="15" fill="rgb(230,20,41)" fg:x="1133" fg:w="2"/><text x="92.0652%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.8152%" y="245" width="0.1621%" height="15" fill="rgb(213,195,35)" fg:x="1133" fg:w="2"/><text x="92.0652%" y="255.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="91.8152%" y="229" width="0.1621%" height="15" fill="rgb(242,62,36)" fg:x="1133" fg:w="2"/><text x="92.0652%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="91.8152%" y="213" width="0.1621%" height="15" fill="rgb(222,210,37)" fg:x="1133" fg:w="2"/><text x="92.0652%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.8963%" y="197" width="0.0810%" height="15" fill="rgb(232,107,19)" fg:x="1134" fg:w="1"/><text x="92.1463%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.8963%" y="181" width="0.0810%" height="15" fill="rgb(235,85,17)" fg:x="1134" fg:w="1"/><text x="92.1463%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.8963%" y="165" width="0.0810%" height="15" fill="rgb(219,195,31)" fg:x="1134" fg:w="1"/><text x="92.1463%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.8963%" y="149" width="0.0810%" height="15" fill="rgb(231,183,30)" fg:x="1134" fg:w="1"/><text x="92.1463%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="91.9773%" y="229" width="0.0810%" height="15" fill="rgb(212,0,11)" fg:x="1135" fg:w="1"/><text x="92.2273%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.9773%" y="213" width="0.0810%" height="15" fill="rgb(249,53,54)" fg:x="1135" fg:w="1"/><text x="92.2273%" y="223.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (4 samples, 0.32%)</title><rect x="91.8152%" y="325" width="0.3241%" height="15" fill="rgb(211,118,13)" fg:x="1133" fg:w="4"/><text x="92.0652%" y="335.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (4 samples, 0.32%)</title><rect x="91.8152%" y="309" width="0.3241%" height="15" fill="rgb(237,42,9)" fg:x="1133" fg:w="4"/><text x="92.0652%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="91.8152%" y="293" width="0.3241%" height="15" fill="rgb(227,68,32)" fg:x="1133" fg:w="4"/><text x="92.0652%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="91.8152%" y="277" width="0.3241%" height="15" fill="rgb(238,10,7)" fg:x="1133" fg:w="4"/><text x="92.0652%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="91.9773%" y="261" width="0.1621%" height="15" fill="rgb(224,42,12)" fg:x="1135" fg:w="2"/><text x="92.2273%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.9773%" y="245" width="0.1621%" height="15" fill="rgb(252,190,5)" fg:x="1135" fg:w="2"/><text x="92.2273%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.0583%" y="229" width="0.0810%" height="15" fill="rgb(220,214,39)" fg:x="1136" fg:w="1"/><text x="92.3083%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.0583%" y="213" width="0.0810%" height="15" fill="rgb(247,98,4)" fg:x="1136" fg:w="1"/><text x="92.3083%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.0583%" y="197" width="0.0810%" height="15" fill="rgb(211,60,12)" fg:x="1136" fg:w="1"/><text x="92.3083%" y="207.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="92.2204%" y="261" width="0.0810%" height="15" fill="rgb(224,42,10)" fg:x="1138" fg:w="1"/><text x="92.4704%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="92.2204%" y="277" width="0.1621%" height="15" fill="rgb(217,167,4)" fg:x="1138" fg:w="2"/><text x="92.4704%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.3015%" y="261" width="0.0810%" height="15" fill="rgb(253,18,17)" fg:x="1139" fg:w="1"/><text x="92.5515%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.3825%" y="277" width="0.0810%" height="15" fill="rgb(249,186,44)" fg:x="1140" fg:w="1"/><text x="92.6325%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.3825%" y="261" width="0.0810%" height="15" fill="rgb(254,124,54)" fg:x="1140" fg:w="1"/><text x="92.6325%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.5446%" y="245" width="0.0810%" height="15" fill="rgb(220,124,39)" fg:x="1142" fg:w="1"/><text x="92.7946%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.6256%" y="213" width="0.0810%" height="15" fill="rgb(225,96,46)" fg:x="1143" fg:w="1"/><text x="92.8756%" y="223.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="92.6256%" y="197" width="0.0810%" height="15" fill="rgb(221,106,12)" fg:x="1143" fg:w="1"/><text x="92.8756%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.7066%" y="181" width="0.0810%" height="15" fill="rgb(227,133,23)" fg:x="1144" fg:w="1"/><text x="92.9566%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.7877%" y="181" width="0.0810%" height="15" fill="rgb(216,44,52)" fg:x="1145" fg:w="1"/><text x="93.0377%" y="191.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (17 samples, 1.38%)</title><rect x="91.5721%" y="437" width="1.3776%" height="15" fill="rgb(239,149,7)" fg:x="1130" fg:w="17"/><text x="91.8221%" y="447.50"></text></g><g><title>core::iter::adapters::try_process (17 samples, 1.38%)</title><rect x="91.5721%" y="421" width="1.3776%" height="15" fill="rgb(211,157,31)" fg:x="1130" fg:w="17"/><text x="91.8221%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 1.38%)</title><rect x="91.5721%" y="405" width="1.3776%" height="15" fill="rgb(206,215,22)" fg:x="1130" fg:w="17"/><text x="91.8221%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (17 samples, 1.38%)</title><rect x="91.5721%" y="389" width="1.3776%" height="15" fill="rgb(208,113,15)" fg:x="1130" fg:w="17"/><text x="91.8221%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (16 samples, 1.30%)</title><rect x="91.6532%" y="373" width="1.2966%" height="15" fill="rgb(207,189,15)" fg:x="1131" fg:w="16"/><text x="91.9032%" y="383.50"></text></g><g><title>engine::internal::Entities::prepare_entity (16 samples, 1.30%)</title><rect x="91.6532%" y="357" width="1.2966%" height="15" fill="rgb(231,115,4)" fg:x="1131" fg:w="16"/><text x="91.9032%" y="367.50"></text></g><g><title>kernel::model::deserialize_entity (14 samples, 1.13%)</title><rect x="91.8152%" y="341" width="1.1345%" height="15" fill="rgb(253,117,2)" fg:x="1133" fg:w="14"/><text x="92.0652%" y="351.50"></text></g><g><title>serde_json::de::from_trait (10 samples, 0.81%)</title><rect x="92.1394%" y="325" width="0.8104%" height="15" fill="rgb(248,48,24)" fg:x="1137" fg:w="10"/><text x="92.3894%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.81%)</title><rect x="92.1394%" y="309" width="0.8104%" height="15" fill="rgb(241,28,46)" fg:x="1137" fg:w="10"/><text x="92.3894%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.81%)</title><rect x="92.1394%" y="293" width="0.8104%" height="15" fill="rgb(216,165,52)" fg:x="1137" fg:w="10"/><text x="92.3894%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.49%)</title><rect x="92.4635%" y="277" width="0.4862%" height="15" fill="rgb(220,222,34)" fg:x="1141" fg:w="6"/><text x="92.7135%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="92.5446%" y="261" width="0.4052%" height="15" fill="rgb(247,222,49)" fg:x="1142" fg:w="5"/><text x="92.7946%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="92.6256%" y="245" width="0.3241%" height="15" fill="rgb(240,10,31)" fg:x="1143" fg:w="4"/><text x="92.8756%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="92.6256%" y="229" width="0.3241%" height="15" fill="rgb(221,199,35)" fg:x="1143" fg:w="4"/><text x="92.8756%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="92.7066%" y="213" width="0.2431%" height="15" fill="rgb(230,223,11)" fg:x="1144" fg:w="3"/><text x="92.9566%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="92.7066%" y="197" width="0.2431%" height="15" fill="rgb(218,82,45)" fg:x="1144" fg:w="3"/><text x="92.9566%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.8687%" y="181" width="0.0810%" height="15" fill="rgb(233,213,33)" fg:x="1146" fg:w="1"/><text x="93.1187%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.8687%" y="165" width="0.0810%" height="15" fill="rgb(210,143,52)" fg:x="1146" fg:w="1"/><text x="93.1187%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.8687%" y="149" width="0.0810%" height="15" fill="rgb(206,95,4)" fg:x="1146" fg:w="1"/><text x="93.1187%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.8687%" y="133" width="0.0810%" height="15" fill="rgb(246,164,46)" fg:x="1146" fg:w="1"/><text x="93.1187%" y="143.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="92.9498%" y="405" width="0.1621%" height="15" fill="rgb(213,210,47)" fg:x="1147" fg:w="2"/><text x="93.1998%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.0308%" y="389" width="0.0810%" height="15" fill="rgb(210,12,38)" fg:x="1148" fg:w="1"/><text x="93.2808%" y="399.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.1118%" y="405" width="0.0810%" height="15" fill="rgb(252,192,54)" fg:x="1149" fg:w="1"/><text x="93.3618%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.1118%" y="389" width="0.0810%" height="15" fill="rgb(242,92,6)" fg:x="1149" fg:w="1"/><text x="93.3618%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.1118%" y="373" width="0.0810%" height="15" fill="rgb(253,154,15)" fg:x="1149" fg:w="1"/><text x="93.3618%" y="383.50"></text></g><g><title>plugins_core::tools::get_contained_keys (26 samples, 2.11%)</title><rect x="91.1669%" y="485" width="2.1070%" height="15" fill="rgb(209,20,43)" fg:x="1125" fg:w="26"/><text x="91.4169%" y="495.50">p..</text></g><g><title>kernel::model::entry::Entry::scope (25 samples, 2.03%)</title><rect x="91.2480%" y="469" width="2.0259%" height="15" fill="rgb(232,28,49)" fg:x="1126" fg:w="25"/><text x="91.4980%" y="479.50">k..</text></g><g><title>kernel::model::Entity::load_scope (25 samples, 2.03%)</title><rect x="91.2480%" y="453" width="2.0259%" height="15" fill="rgb(248,131,53)" fg:x="1126" fg:w="25"/><text x="91.4980%" y="463.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="92.9498%" y="437" width="0.3241%" height="15" fill="rgb(214,16,30)" fg:x="1147" fg:w="4"/><text x="93.1998%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="92.9498%" y="421" width="0.3241%" height="15" fill="rgb(245,16,0)" fg:x="1147" fg:w="4"/><text x="93.1998%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="93.1929%" y="405" width="0.0810%" height="15" fill="rgb(245,17,35)" fg:x="1150" fg:w="1"/><text x="93.4429%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="93.1929%" y="389" width="0.0810%" height="15" fill="rgb(249,27,53)" fg:x="1150" fg:w="1"/><text x="93.4429%" y="399.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="93.1929%" y="373" width="0.0810%" height="15" fill="rgb(214,73,24)" fg:x="1150" fg:w="1"/><text x="93.4429%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.1929%" y="357" width="0.0810%" height="15" fill="rgb(223,84,37)" fg:x="1150" fg:w="1"/><text x="93.4429%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.3549%" y="421" width="0.0810%" height="15" fill="rgb(210,109,28)" fg:x="1152" fg:w="1"/><text x="93.6049%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.3549%" y="405" width="0.0810%" height="15" fill="rgb(208,186,6)" fg:x="1152" fg:w="1"/><text x="93.6049%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.3549%" y="389" width="0.0810%" height="15" fill="rgb(235,201,30)" fg:x="1152" fg:w="1"/><text x="93.6049%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.3549%" y="373" width="0.0810%" height="15" fill="rgb(216,198,48)" fg:x="1152" fg:w="1"/><text x="93.6049%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.3549%" y="357" width="0.0810%" height="15" fill="rgb(254,186,25)" fg:x="1152" fg:w="1"/><text x="93.6049%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.3549%" y="341" width="0.0810%" height="15" fill="rgb(227,87,5)" fg:x="1152" fg:w="1"/><text x="93.6049%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.3549%" y="325" width="0.0810%" height="15" fill="rgb(236,205,25)" fg:x="1152" fg:w="1"/><text x="93.6049%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.3549%" y="309" width="0.0810%" height="15" fill="rgb(229,99,32)" fg:x="1152" fg:w="1"/><text x="93.6049%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.3549%" y="293" width="0.0810%" height="15" fill="rgb(231,177,31)" fg:x="1152" fg:w="1"/><text x="93.6049%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.3549%" y="277" width="0.0810%" height="15" fill="rgb(246,15,2)" fg:x="1152" fg:w="1"/><text x="93.6049%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.3549%" y="261" width="0.0810%" height="15" fill="rgb(207,39,15)" fg:x="1152" fg:w="1"/><text x="93.6049%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.3549%" y="245" width="0.0810%" height="15" fill="rgb(207,44,9)" fg:x="1152" fg:w="1"/><text x="93.6049%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.3549%" y="437" width="0.1621%" height="15" fill="rgb(225,224,33)" fg:x="1152" fg:w="2"/><text x="93.6049%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.4360%" y="421" width="0.0810%" height="15" fill="rgb(252,151,3)" fg:x="1153" fg:w="1"/><text x="93.6860%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.4360%" y="405" width="0.0810%" height="15" fill="rgb(211,140,13)" fg:x="1153" fg:w="1"/><text x="93.6860%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.4360%" y="389" width="0.0810%" height="15" fill="rgb(239,225,17)" fg:x="1153" fg:w="1"/><text x="93.6860%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.4360%" y="373" width="0.0810%" height="15" fill="rgb(223,170,52)" fg:x="1153" fg:w="1"/><text x="93.6860%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.4360%" y="357" width="0.0810%" height="15" fill="rgb(212,64,21)" fg:x="1153" fg:w="1"/><text x="93.6860%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.4360%" y="341" width="0.0810%" height="15" fill="rgb(236,126,48)" fg:x="1153" fg:w="1"/><text x="93.6860%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.4360%" y="325" width="0.0810%" height="15" fill="rgb(209,135,11)" fg:x="1153" fg:w="1"/><text x="93.6860%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.4360%" y="309" width="0.0810%" height="15" fill="rgb(228,126,40)" fg:x="1153" fg:w="1"/><text x="93.6860%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.4360%" y="293" width="0.0810%" height="15" fill="rgb(205,196,36)" fg:x="1153" fg:w="1"/><text x="93.6860%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.4360%" y="277" width="0.0810%" height="15" fill="rgb(243,160,33)" fg:x="1153" fg:w="1"/><text x="93.6860%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.4360%" y="261" width="0.0810%" height="15" fill="rgb(210,84,20)" fg:x="1153" fg:w="1"/><text x="93.6860%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.4360%" y="245" width="0.0810%" height="15" fill="rgb(228,213,30)" fg:x="1153" fg:w="1"/><text x="93.6860%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.4360%" y="229" width="0.0810%" height="15" fill="rgb(252,33,45)" fg:x="1153" fg:w="1"/><text x="93.6860%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.4360%" y="213" width="0.0810%" height="15" fill="rgb(254,227,20)" fg:x="1153" fg:w="1"/><text x="93.6860%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="93.5170%" y="405" width="0.1621%" height="15" fill="rgb(228,192,2)" fg:x="1154" fg:w="2"/><text x="93.7670%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="93.5170%" y="389" width="0.1621%" height="15" fill="rgb(233,32,8)" fg:x="1154" fg:w="2"/><text x="93.7670%" y="399.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="93.5170%" y="373" width="0.1621%" height="15" fill="rgb(220,146,47)" fg:x="1154" fg:w="2"/><text x="93.7670%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.5170%" y="357" width="0.1621%" height="15" fill="rgb(246,194,1)" fg:x="1154" fg:w="2"/><text x="93.7670%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.5170%" y="341" width="0.1621%" height="15" fill="rgb(218,203,9)" fg:x="1154" fg:w="2"/><text x="93.7670%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.5981%" y="325" width="0.0810%" height="15" fill="rgb(237,97,14)" fg:x="1155" fg:w="1"/><text x="93.8481%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (57 samples, 4.62%)</title><rect x="89.1410%" y="517" width="4.6191%" height="15" fill="rgb(239,76,15)" fg:x="1100" fg:w="57"/><text x="89.3910%" y="527.50">&lt;allo..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (57 samples, 4.62%)</title><rect x="89.1410%" y="501" width="4.6191%" height="15" fill="rgb(222,53,45)" fg:x="1100" fg:w="57"/><text x="89.3910%" y="511.50">&lt;core..</text></g><g><title>plugins_core::tools::get_occupant_keys (6 samples, 0.49%)</title><rect x="93.2739%" y="485" width="0.4862%" height="15" fill="rgb(237,88,5)" fg:x="1151" fg:w="6"/><text x="93.5239%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.41%)</title><rect x="93.3549%" y="469" width="0.4052%" height="15" fill="rgb(218,223,35)" fg:x="1152" fg:w="5"/><text x="93.6049%" y="479.50"></text></g><g><title>kernel::model::Entity::load_scope (5 samples, 0.41%)</title><rect x="93.3549%" y="453" width="0.4052%" height="15" fill="rgb(243,229,38)" fg:x="1152" fg:w="5"/><text x="93.6049%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="93.5170%" y="437" width="0.2431%" height="15" fill="rgb(240,75,41)" fg:x="1154" fg:w="3"/><text x="93.7670%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="93.5170%" y="421" width="0.2431%" height="15" fill="rgb(209,110,37)" fg:x="1154" fg:w="3"/><text x="93.7670%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.6791%" y="405" width="0.0810%" height="15" fill="rgb(221,130,46)" fg:x="1156" fg:w="1"/><text x="93.9291%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.6791%" y="389" width="0.0810%" height="15" fill="rgb(237,160,20)" fg:x="1156" fg:w="1"/><text x="93.9291%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="93.6791%" y="373" width="0.0810%" height="15" fill="rgb(234,126,24)" fg:x="1156" fg:w="1"/><text x="93.9291%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="93.6791%" y="357" width="0.0810%" height="15" fill="rgb(207,177,9)" fg:x="1156" fg:w="1"/><text x="93.9291%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.0032%" y="389" width="0.0810%" height="15" fill="rgb(231,191,33)" fg:x="1160" fg:w="1"/><text x="94.2532%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.0032%" y="373" width="0.0810%" height="15" fill="rgb(207,42,1)" fg:x="1160" fg:w="1"/><text x="94.2532%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.0032%" y="357" width="0.0810%" height="15" fill="rgb(218,34,50)" fg:x="1160" fg:w="1"/><text x="94.2532%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.0032%" y="341" width="0.0810%" height="15" fill="rgb(254,126,39)" fg:x="1160" fg:w="1"/><text x="94.2532%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.0032%" y="325" width="0.0810%" height="15" fill="rgb(251,17,26)" fg:x="1160" fg:w="1"/><text x="94.2532%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.0032%" y="309" width="0.0810%" height="15" fill="rgb(252,215,34)" fg:x="1160" fg:w="1"/><text x="94.2532%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.0032%" y="293" width="0.0810%" height="15" fill="rgb(217,120,44)" fg:x="1160" fg:w="1"/><text x="94.2532%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="93.9222%" y="469" width="0.3241%" height="15" fill="rgb(211,31,11)" fg:x="1159" fg:w="4"/><text x="94.1722%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="94.0032%" y="453" width="0.2431%" height="15" fill="rgb(222,69,51)" fg:x="1160" fg:w="3"/><text x="94.2532%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="94.0032%" y="437" width="0.2431%" height="15" fill="rgb(215,229,42)" fg:x="1160" fg:w="3"/><text x="94.2532%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="94.0032%" y="421" width="0.2431%" height="15" fill="rgb(212,102,15)" fg:x="1160" fg:w="3"/><text x="94.2532%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="94.0032%" y="405" width="0.2431%" height="15" fill="rgb(205,179,41)" fg:x="1160" fg:w="3"/><text x="94.2532%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="94.0843%" y="389" width="0.1621%" height="15" fill="rgb(219,148,46)" fg:x="1161" fg:w="2"/><text x="94.3343%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="94.0843%" y="373" width="0.1621%" height="15" fill="rgb(243,40,19)" fg:x="1161" fg:w="2"/><text x="94.3343%" y="383.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (4 samples, 0.32%)</title><rect x="94.8136%" y="261" width="0.3241%" height="15" fill="rgb(208,206,34)" fg:x="1170" fg:w="4"/><text x="95.0636%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="94.9757%" y="245" width="0.1621%" height="15" fill="rgb(244,184,38)" fg:x="1172" fg:w="2"/><text x="95.2257%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="94.9757%" y="229" width="0.1621%" height="15" fill="rgb(244,151,47)" fg:x="1172" fg:w="2"/><text x="95.2257%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.0567%" y="213" width="0.0810%" height="15" fill="rgb(236,134,42)" fg:x="1173" fg:w="1"/><text x="95.3067%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (7 samples, 0.57%)</title><rect x="94.6515%" y="293" width="0.5673%" height="15" fill="rgb(233,93,22)" fg:x="1168" fg:w="7"/><text x="94.9015%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.57%)</title><rect x="94.6515%" y="277" width="0.5673%" height="15" fill="rgb(211,202,10)" fg:x="1168" fg:w="7"/><text x="94.9015%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.1378%" y="261" width="0.0810%" height="15" fill="rgb(240,63,8)" fg:x="1174" fg:w="1"/><text x="95.3878%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.1378%" y="245" width="0.0810%" height="15" fill="rgb(214,9,4)" fg:x="1174" fg:w="1"/><text x="95.3878%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="95.1378%" y="229" width="0.0810%" height="15" fill="rgb(243,66,45)" fg:x="1174" fg:w="1"/><text x="95.3878%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.73%)</title><rect x="94.5705%" y="325" width="0.7293%" height="15" fill="rgb(220,50,42)" fg:x="1167" fg:w="9"/><text x="94.8205%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (8 samples, 0.65%)</title><rect x="94.6515%" y="309" width="0.6483%" height="15" fill="rgb(220,134,27)" fg:x="1168" fg:w="8"/><text x="94.9015%" y="319.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.2188%" y="293" width="0.0810%" height="15" fill="rgb(246,151,50)" fg:x="1175" fg:w="1"/><text x="95.4688%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="95.2188%" y="277" width="0.0810%" height="15" fill="rgb(238,216,27)" fg:x="1175" fg:w="1"/><text x="95.4688%" y="287.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="95.2188%" y="261" width="0.0810%" height="15" fill="rgb(250,92,11)" fg:x="1175" fg:w="1"/><text x="95.4688%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.2188%" y="245" width="0.0810%" height="15" fill="rgb(248,183,6)" fg:x="1175" fg:w="1"/><text x="95.4688%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="95.2188%" y="229" width="0.0810%" height="15" fill="rgb(211,204,50)" fg:x="1175" fg:w="1"/><text x="95.4688%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.2188%" y="213" width="0.0810%" height="15" fill="rgb(252,55,47)" fg:x="1175" fg:w="1"/><text x="95.4688%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (11 samples, 0.89%)</title><rect x="94.5705%" y="341" width="0.8914%" height="15" fill="rgb(240,198,32)" fg:x="1167" fg:w="11"/><text x="94.8205%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="95.2998%" y="325" width="0.1621%" height="15" fill="rgb(224,203,19)" fg:x="1176" fg:w="2"/><text x="95.5498%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="95.2998%" y="309" width="0.1621%" height="15" fill="rgb(205,27,16)" fg:x="1176" fg:w="2"/><text x="95.5498%" y="319.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (12 samples, 0.97%)</title><rect x="94.5705%" y="357" width="0.9724%" height="15" fill="rgb(224,226,17)" fg:x="1167" fg:w="12"/><text x="94.8205%" y="367.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.4619%" y="341" width="0.0810%" height="15" fill="rgb(205,216,54)" fg:x="1178" fg:w="1"/><text x="95.7119%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.5429%" y="357" width="0.0810%" height="15" fill="rgb(248,168,46)" fg:x="1179" fg:w="1"/><text x="95.7929%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 1.46%)</title><rect x="94.4084%" y="373" width="1.4587%" height="15" fill="rgb(226,111,45)" fg:x="1165" fg:w="18"/><text x="94.6584%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="95.6240%" y="357" width="0.2431%" height="15" fill="rgb(231,15,9)" fg:x="1180" fg:w="3"/><text x="95.8740%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="95.7050%" y="341" width="0.1621%" height="15" fill="rgb(243,168,3)" fg:x="1181" fg:w="2"/><text x="95.9550%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="95.7861%" y="325" width="0.0810%" height="15" fill="rgb(221,220,54)" fg:x="1182" fg:w="1"/><text x="96.0361%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (28 samples, 2.27%)</title><rect x="94.2464%" y="405" width="2.2690%" height="15" fill="rgb(232,174,38)" fg:x="1163" fg:w="28"/><text x="94.4964%" y="415.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (26 samples, 2.11%)</title><rect x="94.4084%" y="389" width="2.1070%" height="15" fill="rgb(205,14,38)" fg:x="1165" fg:w="26"/><text x="94.6584%" y="399.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.65%)</title><rect x="95.8671%" y="373" width="0.6483%" height="15" fill="rgb(234,89,19)" fg:x="1183" fg:w="8"/><text x="96.1171%" y="383.50"></text></g><g><title>__libc_malloc (8 samples, 0.65%)</title><rect x="95.8671%" y="357" width="0.6483%" height="15" fill="rgb(216,68,51)" fg:x="1183" fg:w="8"/><text x="96.1171%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (30 samples, 2.43%)</title><rect x="94.2464%" y="421" width="2.4311%" height="15" fill="rgb(213,49,2)" fg:x="1163" fg:w="30"/><text x="94.4964%" y="431.50">&lt;c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="96.5154%" y="405" width="0.1621%" height="15" fill="rgb(242,146,30)" fg:x="1191" fg:w="2"/><text x="96.7654%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="96.5154%" y="389" width="0.1621%" height="15" fill="rgb(224,188,11)" fg:x="1191" fg:w="2"/><text x="96.7654%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="96.5964%" y="373" width="0.0810%" height="15" fill="rgb(213,159,11)" fg:x="1192" fg:w="1"/><text x="96.8464%" y="383.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (34 samples, 2.76%)</title><rect x="94.2464%" y="453" width="2.7553%" height="15" fill="rgb(229,13,31)" fg:x="1163" fg:w="34"/><text x="94.4964%" y="463.50">&lt;r..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (34 samples, 2.76%)</title><rect x="94.2464%" y="437" width="2.7553%" height="15" fill="rgb(209,103,11)" fg:x="1163" fg:w="34"/><text x="94.4964%" y="447.50">&lt;s..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="96.6775%" y="421" width="0.3241%" height="15" fill="rgb(206,3,4)" fg:x="1193" fg:w="4"/><text x="96.9275%" y="431.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="96.6775%" y="405" width="0.3241%" height="15" fill="rgb(252,10,49)" fg:x="1193" fg:w="4"/><text x="96.9275%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="97.0016%" y="405" width="0.2431%" height="15" fill="rgb(217,160,32)" fg:x="1197" fg:w="3"/><text x="97.2516%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.1637%" y="389" width="0.0810%" height="15" fill="rgb(249,196,0)" fg:x="1199" fg:w="1"/><text x="97.4137%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="97.1637%" y="373" width="0.0810%" height="15" fill="rgb(213,17,48)" fg:x="1199" fg:w="1"/><text x="97.4137%" y="383.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="97.2447%" y="405" width="0.0810%" height="15" fill="rgb(206,42,46)" fg:x="1200" fg:w="1"/><text x="97.4947%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="97.2447%" y="389" width="0.0810%" height="15" fill="rgb(212,105,24)" fg:x="1200" fg:w="1"/><text x="97.4947%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="97.2447%" y="373" width="0.0810%" height="15" fill="rgb(243,216,30)" fg:x="1200" fg:w="1"/><text x="97.4947%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="97.2447%" y="357" width="0.0810%" height="15" fill="rgb(207,121,3)" fg:x="1200" fg:w="1"/><text x="97.4947%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.3258%" y="373" width="0.0810%" height="15" fill="rgb(249,78,0)" fg:x="1201" fg:w="1"/><text x="97.5758%" y="383.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="97.3258%" y="405" width="0.2431%" height="15" fill="rgb(244,151,32)" fg:x="1201" fg:w="3"/><text x="97.5758%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="97.3258%" y="389" width="0.2431%" height="15" fill="rgb(228,63,25)" fg:x="1201" fg:w="3"/><text x="97.5758%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.4068%" y="373" width="0.1621%" height="15" fill="rgb(231,158,23)" fg:x="1202" fg:w="2"/><text x="97.6568%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.4068%" y="357" width="0.1621%" height="15" fill="rgb(248,107,23)" fg:x="1202" fg:w="2"/><text x="97.6568%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="97.4878%" y="341" width="0.0810%" height="15" fill="rgb(215,168,21)" fg:x="1203" fg:w="1"/><text x="97.7378%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.6499%" y="373" width="0.0810%" height="15" fill="rgb(227,83,22)" fg:x="1205" fg:w="1"/><text x="97.8999%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.8120%" y="357" width="0.0810%" height="15" fill="rgb(217,118,43)" fg:x="1207" fg:w="1"/><text x="98.0620%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.8120%" y="341" width="0.0810%" height="15" fill="rgb(229,220,41)" fg:x="1207" fg:w="1"/><text x="98.0620%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="97.8120%" y="325" width="0.0810%" height="15" fill="rgb(254,146,46)" fg:x="1207" fg:w="1"/><text x="98.0620%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.8930%" y="325" width="0.1621%" height="15" fill="rgb(233,208,31)" fg:x="1208" fg:w="2"/><text x="98.1430%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="97.8930%" y="341" width="0.3241%" height="15" fill="rgb(222,162,7)" fg:x="1208" fg:w="4"/><text x="98.1430%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="98.0551%" y="325" width="0.1621%" height="15" fill="rgb(230,117,45)" fg:x="1210" fg:w="2"/><text x="98.3051%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="98.0551%" y="309" width="0.1621%" height="15" fill="rgb(239,163,6)" fg:x="1210" fg:w="2"/><text x="98.3051%" y="319.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (9 samples, 0.73%)</title><rect x="97.5689%" y="405" width="0.7293%" height="15" fill="rgb(246,130,17)" fg:x="1204" fg:w="9"/><text x="97.8189%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.73%)</title><rect x="97.5689%" y="389" width="0.7293%" height="15" fill="rgb(216,84,5)" fg:x="1204" fg:w="9"/><text x="97.8189%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.57%)</title><rect x="97.7310%" y="373" width="0.5673%" height="15" fill="rgb(230,200,21)" fg:x="1206" fg:w="7"/><text x="97.9810%" y="383.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (5 samples, 0.41%)</title><rect x="97.8930%" y="357" width="0.4052%" height="15" fill="rgb(224,2,8)" fg:x="1208" fg:w="5"/><text x="98.1430%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="98.2172%" y="341" width="0.0810%" height="15" fill="rgb(238,178,10)" fg:x="1212" fg:w="1"/><text x="98.4672%" y="351.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="98.2172%" y="325" width="0.0810%" height="15" fill="rgb(242,153,24)" fg:x="1212" fg:w="1"/><text x="98.4672%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="98.2172%" y="309" width="0.0810%" height="15" fill="rgb(242,32,48)" fg:x="1212" fg:w="1"/><text x="98.4672%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.3793%" y="389" width="0.0810%" height="15" fill="rgb(227,36,0)" fg:x="1214" fg:w="1"/><text x="98.6293%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4603%" y="389" width="0.0810%" height="15" fill="rgb(251,33,35)" fg:x="1215" fg:w="1"/><text x="98.7103%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.6224%" y="357" width="0.0810%" height="15" fill="rgb(232,168,51)" fg:x="1217" fg:w="1"/><text x="98.8724%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.6224%" y="341" width="0.0810%" height="15" fill="rgb(228,56,10)" fg:x="1217" fg:w="1"/><text x="98.8724%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.6224%" y="325" width="0.0810%" height="15" fill="rgb(231,10,26)" fg:x="1217" fg:w="1"/><text x="98.8724%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="98.7034%" y="325" width="0.2431%" height="15" fill="rgb(226,202,12)" fg:x="1218" fg:w="3"/><text x="98.9534%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.7844%" y="309" width="0.1621%" height="15" fill="rgb(251,49,21)" fg:x="1219" fg:w="2"/><text x="99.0344%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.7844%" y="293" width="0.1621%" height="15" fill="rgb(206,228,28)" fg:x="1219" fg:w="2"/><text x="99.0344%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="98.7844%" y="277" width="0.1621%" height="15" fill="rgb(205,198,31)" fg:x="1219" fg:w="2"/><text x="99.0344%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="98.7034%" y="357" width="0.3241%" height="15" fill="rgb(213,69,1)" fg:x="1218" fg:w="4"/><text x="98.9534%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="98.7034%" y="341" width="0.3241%" height="15" fill="rgb(209,177,9)" fg:x="1218" fg:w="4"/><text x="98.9534%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.9465%" y="325" width="0.0810%" height="15" fill="rgb(227,119,30)" fg:x="1221" fg:w="1"/><text x="99.1965%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (2 samples, 0.16%)</title><rect x="99.0276%" y="341" width="0.1621%" height="15" fill="rgb(234,106,41)" fg:x="1222" fg:w="2"/><text x="99.2776%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="99.1896%" y="341" width="0.2431%" height="15" fill="rgb(244,103,47)" fg:x="1224" fg:w="3"/><text x="99.4396%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="99.2707%" y="325" width="0.1621%" height="15" fill="rgb(212,211,25)" fg:x="1225" fg:w="2"/><text x="99.5207%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.3517%" y="309" width="0.0810%" height="15" fill="rgb(208,63,53)" fg:x="1226" fg:w="1"/><text x="99.6017%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.89%)</title><rect x="98.6224%" y="373" width="0.8914%" height="15" fill="rgb(213,176,21)" fg:x="1217" fg:w="11"/><text x="98.8724%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.49%)</title><rect x="99.0276%" y="357" width="0.4862%" height="15" fill="rgb(243,124,12)" fg:x="1222" fg:w="6"/><text x="99.2776%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.4327%" y="341" width="0.0810%" height="15" fill="rgb(239,2,35)" fg:x="1227" fg:w="1"/><text x="99.6827%" y="351.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (67 samples, 5.43%)</title><rect x="94.2464%" y="469" width="5.4295%" height="15" fill="rgb(253,169,22)" fg:x="1163" fg:w="67"/><text x="94.4964%" y="479.50">&lt;rpc_pr..</text></g><g><title>kernel::model::EntityPtr::to_json_value (33 samples, 2.67%)</title><rect x="97.0016%" y="453" width="2.6742%" height="15" fill="rgb(254,51,12)" fg:x="1197" fg:w="33"/><text x="97.2516%" y="463.50">ke..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (33 samples, 2.67%)</title><rect x="97.0016%" y="437" width="2.6742%" height="15" fill="rgb(244,17,47)" fg:x="1197" fg:w="33"/><text x="97.2516%" y="447.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (33 samples, 2.67%)</title><rect x="97.0016%" y="421" width="2.6742%" height="15" fill="rgb(251,45,46)" fg:x="1197" fg:w="33"/><text x="97.2516%" y="431.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (17 samples, 1.38%)</title><rect x="98.2982%" y="405" width="1.3776%" height="15" fill="rgb(223,87,43)" fg:x="1213" fg:w="17"/><text x="98.5482%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (14 samples, 1.13%)</title><rect x="98.5413%" y="389" width="1.1345%" height="15" fill="rgb(230,132,31)" fg:x="1216" fg:w="14"/><text x="98.7913%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="99.5138%" y="373" width="0.1621%" height="15" fill="rgb(206,99,1)" fg:x="1228" fg:w="2"/><text x="99.7638%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.5948%" y="357" width="0.0810%" height="15" fill="rgb(227,110,25)" fg:x="1229" fg:w="1"/><text x="99.8448%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.6759%" y="453" width="0.0810%" height="15" fill="rgb(217,182,7)" fg:x="1230" fg:w="1"/><text x="99.9259%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (75 samples, 6.08%)</title><rect x="93.7601%" y="501" width="6.0778%" height="15" fill="rgb(250,176,4)" fg:x="1157" fg:w="75"/><text x="94.0101%" y="511.50">&lt;core::i..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (73 samples, 5.92%)</title><rect x="93.9222%" y="485" width="5.9157%" height="15" fill="rgb(244,98,30)" fg:x="1159" fg:w="73"/><text x="94.1722%" y="495.50">plugins_..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="99.6759%" y="469" width="0.1621%" height="15" fill="rgb(228,150,42)" fg:x="1230" fg:w="2"/><text x="99.9259%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="99.7569%" y="453" width="0.0810%" height="15" fill="rgb(231,91,46)" fg:x="1231" fg:w="1"/><text x="100.0069%" y="463.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (139 samples, 11.26%)</title><rect x="88.6548%" y="549" width="11.2642%" height="15" fill="rgb(252,161,32)" fg:x="1094" fg:w="139"/><text x="88.9048%" y="559.50">&lt;plugins_rpc::ses..</text></g><g><title>core::iter::adapters::try_process (134 samples, 10.86%)</title><rect x="89.0600%" y="533" width="10.8590%" height="15" fill="rgb(236,69,41)" fg:x="1099" fg:w="134"/><text x="89.3100%" y="543.50">core::iter::adap..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (76 samples, 6.16%)</title><rect x="93.7601%" y="517" width="6.1588%" height="15" fill="rgb(212,160,3)" fg:x="1157" fg:w="76"/><text x="94.0101%" y="527.50">alloc::v..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.8379%" y="501" width="0.0810%" height="15" fill="rgb(216,5,50)" fg:x="1232" fg:w="1"/><text x="100.0879%" y="511.50"></text></g><g><title>all (1,234 samples, 100%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(241,138,25)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="991.50"></text></g><g><title>simple-a8fb0ec0 (1,234 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(239,42,18)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="975.50">simple-a8fb0ec0</text></g><g><title>_start (1,234 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(239,40,7)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="959.50">_start</text></g><g><title>__libc_start_main (1,234 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(239,11,31)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="943.50">__libc_start_main</text></g><g><title>main (1,234 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(224,77,40)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="927.50">main</text></g><g><title>std::rt::lang_start_internal (1,234 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(226,15,5)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="911.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,234 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(254,188,5)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="895.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,234 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(241,148,52)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="879.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,234 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(251,48,36)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="863.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,234 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(243,83,13)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="847.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,234 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(210,105,0)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="831.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,234 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(239,60,36)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="815.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,234 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(210,20,0)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="799.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,234 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(244,26,53)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="783.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,234 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(240,100,49)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="767.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,234 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(250,46,45)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="751.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,234 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(220,181,29)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="735.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,234 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(213,137,33)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="719.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,234 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(213,27,48)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="703.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (422 samples, 34.20%)</title><rect x="65.8023%" y="677" width="34.1977%" height="15" fill="rgb(245,180,39)" fg:x="812" fg:w="422"/><text x="66.0523%" y="687.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::rout..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (422 samples, 34.20%)</title><rect x="65.8023%" y="661" width="34.1977%" height="15" fill="rgb(212,158,42)" fg:x="812" fg:w="422"/><text x="66.0523%" y="671.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (422 samples, 34.20%)</title><rect x="65.8023%" y="645" width="34.1977%" height="15" fill="rgb(228,193,18)" fg:x="812" fg:w="422"/><text x="66.0523%" y="655.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (182 samples, 14.75%)</title><rect x="85.2512%" y="629" width="14.7488%" height="15" fill="rgb(245,172,29)" fg:x="1052" fg:w="182"/><text x="85.5012%" y="639.50">engine::session::Sessi..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (182 samples, 14.75%)</title><rect x="85.2512%" y="613" width="14.7488%" height="15" fill="rgb(207,98,24)" fg:x="1052" fg:w="182"/><text x="85.5012%" y="623.50">engine::perform::Stand..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (154 samples, 12.48%)</title><rect x="87.5203%" y="597" width="12.4797%" height="15" fill="rgb(249,92,26)" fg:x="1080" fg:w="154"/><text x="87.7703%" y="607.50">kernel::plugins::Se..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (153 samples, 12.40%)</title><rect x="87.6013%" y="581" width="12.3987%" height="15" fill="rgb(217,176,26)" fg:x="1081" fg:w="153"/><text x="87.8513%" y="591.50">&lt;plugins_dynlib::Dy..</text></g><g><title>plugins_rpc::querying::have_surroundings (141 samples, 11.43%)</title><rect x="88.5737%" y="565" width="11.4263%" height="15" fill="rgb(221,8,39)" fg:x="1093" fg:w="141"/><text x="88.8237%" y="575.50">plugins_rpc::quer..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="99.9190%" y="549" width="0.0810%" height="15" fill="rgb(208,90,18)" fg:x="1233" fg:w="1"/><text x="100.1690%" y="559.50"></text></g><g><title>rpc_proto::&lt;impl core::convert::Into&lt;rpc_proto::EntityKey&gt; for kernel::model::EntityKey&gt;::into (1 samples, 0.08%)</title><rect x="99.9190%" y="533" width="0.0810%" height="15" fill="rgb(207,202,30)" fg:x="1233" fg:w="1"/><text x="100.1690%" y="543.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;kernel::model::EntityKey&gt; for alloc::string::String&gt;::from (1 samples, 0.08%)</title><rect x="99.9190%" y="517" width="0.0810%" height="15" fill="rgb(231,124,22)" fg:x="1233" fg:w="1"/><text x="100.1690%" y="527.50"></text></g></svg></svg>