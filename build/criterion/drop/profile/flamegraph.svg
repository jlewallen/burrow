<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1142" onload="init(evt)" viewBox="0 0 1200 1142" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1142" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1125.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1125.00"> </text><svg id="frames" x="10" width="1180" total_samples="1258"><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.0000%" y="693" width="0.0795%" height="15" fill="rgb(250,173,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.2385%" y="613" width="0.0795%" height="15" fill="rgb(232,142,7)" fg:x="3" fg:w="1"/><text x="0.4885%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.3180%" y="597" width="0.0795%" height="15" fill="rgb(230,157,47)" fg:x="4" fg:w="1"/><text x="0.5680%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="0.3180%" y="581" width="0.0795%" height="15" fill="rgb(214,177,35)" fg:x="4" fg:w="1"/><text x="0.5680%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.3180%" y="565" width="0.0795%" height="15" fill="rgb(234,119,46)" fg:x="4" fg:w="1"/><text x="0.5680%" y="575.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.3975%" y="597" width="0.2385%" height="15" fill="rgb(241,180,50)" fg:x="5" fg:w="3"/><text x="0.6475%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="0.0795%" y="677" width="0.6359%" height="15" fill="rgb(221,54,25)" fg:x="1" fg:w="8"/><text x="0.3295%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="0.0795%" y="661" width="0.6359%" height="15" fill="rgb(209,157,44)" fg:x="1" fg:w="8"/><text x="0.3295%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="0.2385%" y="645" width="0.4769%" height="15" fill="rgb(246,115,41)" fg:x="3" fg:w="6"/><text x="0.4885%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="0.2385%" y="629" width="0.4769%" height="15" fill="rgb(229,86,1)" fg:x="3" fg:w="6"/><text x="0.4885%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="0.3180%" y="613" width="0.3975%" height="15" fill="rgb(240,108,53)" fg:x="4" fg:w="5"/><text x="0.5680%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.6359%" y="597" width="0.0795%" height="15" fill="rgb(227,134,2)" fg:x="8" fg:w="1"/><text x="0.8859%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.79%)</title><rect x="0.0000%" y="709" width="0.7949%" height="15" fill="rgb(213,129,25)" fg:x="0" fg:w="10"/><text x="0.2500%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (9 samples, 0.72%)</title><rect x="0.0795%" y="693" width="0.7154%" height="15" fill="rgb(226,35,21)" fg:x="1" fg:w="9"/><text x="0.3295%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="0.7154%" y="677" width="0.0795%" height="15" fill="rgb(208,129,26)" fg:x="9" fg:w="1"/><text x="0.9654%" y="687.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.87%)</title><rect x="0.0000%" y="741" width="0.8744%" height="15" fill="rgb(224,83,6)" fg:x="0" fg:w="11"/><text x="0.2500%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (11 samples, 0.87%)</title><rect x="0.0000%" y="725" width="0.8744%" height="15" fill="rgb(227,52,39)" fg:x="0" fg:w="11"/><text x="0.2500%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.7949%" y="709" width="0.0795%" height="15" fill="rgb(241,30,17)" fg:x="10" fg:w="1"/><text x="1.0449%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="1.0334%" y="677" width="0.0795%" height="15" fill="rgb(246,186,42)" fg:x="13" fg:w="1"/><text x="1.2834%" y="687.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="1.0334%" y="661" width="0.0795%" height="15" fill="rgb(221,169,15)" fg:x="13" fg:w="1"/><text x="1.2834%" y="671.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="1.0334%" y="645" width="0.0795%" height="15" fill="rgb(235,108,21)" fg:x="13" fg:w="1"/><text x="1.2834%" y="655.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="1.1129%" y="677" width="0.0795%" height="15" fill="rgb(219,148,30)" fg:x="14" fg:w="1"/><text x="1.3629%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.1129%" y="661" width="0.0795%" height="15" fill="rgb(220,109,5)" fg:x="14" fg:w="1"/><text x="1.3629%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.1129%" y="645" width="0.0795%" height="15" fill="rgb(213,203,48)" fg:x="14" fg:w="1"/><text x="1.3629%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="1.2719%" y="565" width="0.0795%" height="15" fill="rgb(244,71,33)" fg:x="16" fg:w="1"/><text x="1.5219%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="1.3514%" y="517" width="0.0795%" height="15" fill="rgb(209,23,2)" fg:x="17" fg:w="1"/><text x="1.6014%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.3514%" y="501" width="0.0795%" height="15" fill="rgb(219,97,7)" fg:x="17" fg:w="1"/><text x="1.6014%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="1.4308%" y="517" width="0.0795%" height="15" fill="rgb(216,161,23)" fg:x="18" fg:w="1"/><text x="1.6808%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="1.4308%" y="501" width="0.0795%" height="15" fill="rgb(207,45,42)" fg:x="18" fg:w="1"/><text x="1.6808%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="1.3514%" y="549" width="0.2385%" height="15" fill="rgb(241,61,4)" fg:x="17" fg:w="3"/><text x="1.6014%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="1.3514%" y="533" width="0.2385%" height="15" fill="rgb(236,170,1)" fg:x="17" fg:w="3"/><text x="1.6014%" y="543.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="1.5103%" y="517" width="0.0795%" height="15" fill="rgb(239,72,5)" fg:x="19" fg:w="1"/><text x="1.7603%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="1.5103%" y="501" width="0.0795%" height="15" fill="rgb(214,13,50)" fg:x="19" fg:w="1"/><text x="1.7603%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="1.2719%" y="597" width="0.3975%" height="15" fill="rgb(224,88,9)" fg:x="16" fg:w="5"/><text x="1.5219%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="1.2719%" y="581" width="0.3975%" height="15" fill="rgb(238,192,34)" fg:x="16" fg:w="5"/><text x="1.5219%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="1.3514%" y="565" width="0.3180%" height="15" fill="rgb(217,203,50)" fg:x="17" fg:w="4"/><text x="1.6014%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="1.5898%" y="549" width="0.0795%" height="15" fill="rgb(241,123,32)" fg:x="20" fg:w="1"/><text x="1.8398%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="1.5898%" y="533" width="0.0795%" height="15" fill="rgb(248,151,39)" fg:x="20" fg:w="1"/><text x="1.8398%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.5898%" y="517" width="0.0795%" height="15" fill="rgb(208,89,6)" fg:x="20" fg:w="1"/><text x="1.8398%" y="527.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (10 samples, 0.79%)</title><rect x="1.1924%" y="661" width="0.7949%" height="15" fill="rgb(254,43,26)" fg:x="15" fg:w="10"/><text x="1.4424%" y="671.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (10 samples, 0.79%)</title><rect x="1.1924%" y="645" width="0.7949%" height="15" fill="rgb(216,158,13)" fg:x="15" fg:w="10"/><text x="1.4424%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.79%)</title><rect x="1.1924%" y="629" width="0.7949%" height="15" fill="rgb(212,47,37)" fg:x="15" fg:w="10"/><text x="1.4424%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.79%)</title><rect x="1.1924%" y="613" width="0.7949%" height="15" fill="rgb(254,16,10)" fg:x="15" fg:w="10"/><text x="1.4424%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="1.6693%" y="597" width="0.3180%" height="15" fill="rgb(223,228,16)" fg:x="21" fg:w="4"/><text x="1.9193%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="1.6693%" y="581" width="0.3180%" height="15" fill="rgb(249,108,50)" fg:x="21" fg:w="4"/><text x="1.9193%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="1.8283%" y="565" width="0.1590%" height="15" fill="rgb(208,220,5)" fg:x="23" fg:w="2"/><text x="2.0783%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="1.8283%" y="549" width="0.1590%" height="15" fill="rgb(217,89,48)" fg:x="23" fg:w="2"/><text x="2.0783%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="1.8283%" y="533" width="0.1590%" height="15" fill="rgb(212,113,41)" fg:x="23" fg:w="2"/><text x="2.0783%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="1.8283%" y="517" width="0.1590%" height="15" fill="rgb(231,127,5)" fg:x="23" fg:w="2"/><text x="2.0783%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.9078%" y="501" width="0.0795%" height="15" fill="rgb(217,141,17)" fg:x="24" fg:w="1"/><text x="2.1578%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="2.0668%" y="581" width="0.2385%" height="15" fill="rgb(245,125,54)" fg:x="26" fg:w="3"/><text x="2.3168%" y="591.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="2.0668%" y="565" width="0.2385%" height="15" fill="rgb(248,125,3)" fg:x="26" fg:w="3"/><text x="2.3168%" y="575.50"></text></g><g><title>engine::internal::Entities::prepare_entity (21 samples, 1.67%)</title><rect x="0.9539%" y="693" width="1.6693%" height="15" fill="rgb(236,119,51)" fg:x="12" fg:w="21"/><text x="1.2039%" y="703.50"></text></g><g><title>kernel::model::deserialize_entity (18 samples, 1.43%)</title><rect x="1.1924%" y="677" width="1.4308%" height="15" fill="rgb(239,99,8)" fg:x="15" fg:w="18"/><text x="1.4424%" y="687.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="1.9873%" y="661" width="0.6359%" height="15" fill="rgb(224,228,4)" fg:x="25" fg:w="8"/><text x="2.2373%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="1.9873%" y="645" width="0.6359%" height="15" fill="rgb(220,131,45)" fg:x="25" fg:w="8"/><text x="2.2373%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="2.0668%" y="629" width="0.5564%" height="15" fill="rgb(215,62,5)" fg:x="26" fg:w="7"/><text x="2.3168%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="2.0668%" y="613" width="0.5564%" height="15" fill="rgb(253,12,24)" fg:x="26" fg:w="7"/><text x="2.3168%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="2.0668%" y="597" width="0.5564%" height="15" fill="rgb(248,120,50)" fg:x="26" fg:w="7"/><text x="2.3168%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="2.3052%" y="581" width="0.3180%" height="15" fill="rgb(245,194,10)" fg:x="29" fg:w="4"/><text x="2.5552%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="2.3052%" y="565" width="0.3180%" height="15" fill="rgb(241,149,38)" fg:x="29" fg:w="4"/><text x="2.5552%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="2.3847%" y="549" width="0.2385%" height="15" fill="rgb(219,215,7)" fg:x="30" fg:w="3"/><text x="2.6347%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="2.4642%" y="533" width="0.1590%" height="15" fill="rgb(208,120,31)" fg:x="31" fg:w="2"/><text x="2.7142%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="2.5437%" y="517" width="0.0795%" height="15" fill="rgb(244,30,8)" fg:x="32" fg:w="1"/><text x="2.7937%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.5437%" y="501" width="0.0795%" height="15" fill="rgb(238,35,44)" fg:x="32" fg:w="1"/><text x="2.7937%" y="511.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="2.6232%" y="693" width="0.0795%" height="15" fill="rgb(243,218,37)" fg:x="33" fg:w="1"/><text x="2.8732%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (23 samples, 1.83%)</title><rect x="0.9539%" y="709" width="1.8283%" height="15" fill="rgb(218,169,10)" fg:x="12" fg:w="23"/><text x="1.2039%" y="719.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="2.7027%" y="693" width="0.0795%" height="15" fill="rgb(221,144,10)" fg:x="34" fg:w="1"/><text x="2.9527%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="2.7027%" y="677" width="0.0795%" height="15" fill="rgb(226,41,38)" fg:x="34" fg:w="1"/><text x="2.9527%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="2.7027%" y="661" width="0.0795%" height="15" fill="rgb(228,3,1)" fg:x="34" fg:w="1"/><text x="2.9527%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="2.7027%" y="645" width="0.0795%" height="15" fill="rgb(209,129,12)" fg:x="34" fg:w="1"/><text x="2.9527%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="2.7027%" y="629" width="0.0795%" height="15" fill="rgb(213,136,33)" fg:x="34" fg:w="1"/><text x="2.9527%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="2.7027%" y="613" width="0.0795%" height="15" fill="rgb(209,181,29)" fg:x="34" fg:w="1"/><text x="2.9527%" y="623.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="2.7822%" y="709" width="0.1590%" height="15" fill="rgb(234,173,18)" fg:x="35" fg:w="2"/><text x="3.0322%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="2.7822%" y="693" width="0.1590%" height="15" fill="rgb(227,73,47)" fg:x="35" fg:w="2"/><text x="3.0322%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="2.7822%" y="677" width="0.1590%" height="15" fill="rgb(234,9,34)" fg:x="35" fg:w="2"/><text x="3.0322%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="2.7822%" y="661" width="0.1590%" height="15" fill="rgb(235,172,15)" fg:x="35" fg:w="2"/><text x="3.0322%" y="671.50"></text></g><g><title>anyhow::error::&lt;impl anyhow::Error&gt;::construct (1 samples, 0.08%)</title><rect x="2.9412%" y="661" width="0.0795%" height="15" fill="rgb(245,61,2)" fg:x="37" fg:w="1"/><text x="3.1912%" y="671.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="3.0207%" y="645" width="0.0795%" height="15" fill="rgb(238,39,47)" fg:x="38" fg:w="1"/><text x="3.2707%" y="655.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="3.0207%" y="629" width="0.0795%" height="15" fill="rgb(234,37,24)" fg:x="38" fg:w="1"/><text x="3.2707%" y="639.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="3.0207%" y="613" width="0.0795%" height="15" fill="rgb(248,223,24)" fg:x="38" fg:w="1"/><text x="3.2707%" y="623.50"></text></g><g><title>libloading::os::unix::Library::open (9 samples, 0.72%)</title><rect x="3.0207%" y="661" width="0.7154%" height="15" fill="rgb(223,12,15)" fg:x="38" fg:w="9"/><text x="3.2707%" y="671.50"></text></g><g><title>dlopen (8 samples, 0.64%)</title><rect x="3.1002%" y="645" width="0.6359%" height="15" fill="rgb(249,6,3)" fg:x="39" fg:w="8"/><text x="3.3502%" y="655.50"></text></g><g><title>_dl_catch_error (7 samples, 0.56%)</title><rect x="3.1797%" y="629" width="0.5564%" height="15" fill="rgb(237,105,33)" fg:x="40" fg:w="7"/><text x="3.4297%" y="639.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.56%)</title><rect x="3.1797%" y="613" width="0.5564%" height="15" fill="rgb(252,208,35)" fg:x="40" fg:w="7"/><text x="3.4297%" y="623.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.56%)</title><rect x="3.1797%" y="597" width="0.5564%" height="15" fill="rgb(215,181,35)" fg:x="40" fg:w="7"/><text x="3.4297%" y="607.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.56%)</title><rect x="3.1797%" y="581" width="0.5564%" height="15" fill="rgb(246,212,3)" fg:x="40" fg:w="7"/><text x="3.4297%" y="591.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (11 samples, 0.87%)</title><rect x="2.9412%" y="677" width="0.8744%" height="15" fill="rgb(247,156,24)" fg:x="37" fg:w="11"/><text x="3.1912%" y="687.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="3.7361%" y="661" width="0.0795%" height="15" fill="rgb(248,9,31)" fg:x="47" fg:w="1"/><text x="3.9861%" y="671.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="3.7361%" y="645" width="0.0795%" height="15" fill="rgb(234,26,45)" fg:x="47" fg:w="1"/><text x="3.9861%" y="655.50"></text></g><g><title>engine::session::Session::initialize (13 samples, 1.03%)</title><rect x="2.9412%" y="709" width="1.0334%" height="15" fill="rgb(249,11,32)" fg:x="37" fg:w="13"/><text x="3.1912%" y="719.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (13 samples, 1.03%)</title><rect x="2.9412%" y="693" width="1.0334%" height="15" fill="rgb(249,162,33)" fg:x="37" fg:w="13"/><text x="3.1912%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="3.8156%" y="677" width="0.1590%" height="15" fill="rgb(232,4,32)" fg:x="48" fg:w="2"/><text x="4.0656%" y="687.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="3.8156%" y="661" width="0.1590%" height="15" fill="rgb(212,5,45)" fg:x="48" fg:w="2"/><text x="4.0656%" y="671.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (40 samples, 3.18%)</title><rect x="0.8744%" y="741" width="3.1797%" height="15" fill="rgb(227,95,13)" fg:x="11" fg:w="40"/><text x="1.1244%" y="751.50">&lt;en..</text></g><g><title>engine::session::Session::new (40 samples, 3.18%)</title><rect x="0.8744%" y="725" width="3.1797%" height="15" fill="rgb(223,205,10)" fg:x="11" fg:w="40"/><text x="1.1244%" y="735.50">eng..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="3.9746%" y="709" width="0.0795%" height="15" fill="rgb(222,178,8)" fg:x="50" fg:w="1"/><text x="4.2246%" y="719.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="3.9746%" y="693" width="0.0795%" height="15" fill="rgb(216,13,22)" fg:x="50" fg:w="1"/><text x="4.2246%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="3.9746%" y="677" width="0.0795%" height="15" fill="rgb(240,167,12)" fg:x="50" fg:w="1"/><text x="4.2246%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="3.9746%" y="661" width="0.0795%" height="15" fill="rgb(235,68,35)" fg:x="50" fg:w="1"/><text x="4.2246%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="3.9746%" y="645" width="0.0795%" height="15" fill="rgb(253,40,27)" fg:x="50" fg:w="1"/><text x="4.2246%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="4.1335%" y="709" width="0.0795%" height="15" fill="rgb(214,19,28)" fg:x="52" fg:w="1"/><text x="4.3835%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="4.1335%" y="693" width="0.0795%" height="15" fill="rgb(210,167,45)" fg:x="52" fg:w="1"/><text x="4.3835%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (2 samples, 0.16%)</title><rect x="4.1335%" y="725" width="0.1590%" height="15" fill="rgb(232,97,40)" fg:x="52" fg:w="2"/><text x="4.3835%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::QuickThing&gt; (1 samples, 0.08%)</title><rect x="4.2130%" y="709" width="0.0795%" height="15" fill="rgb(250,35,23)" fg:x="53" fg:w="1"/><text x="4.4630%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="4.2130%" y="693" width="0.0795%" height="15" fill="rgb(248,47,53)" fg:x="53" fg:w="1"/><text x="4.4630%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="4.2130%" y="677" width="0.0795%" height="15" fill="rgb(226,58,50)" fg:x="53" fg:w="1"/><text x="4.4630%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.2925%" y="677" width="0.0795%" height="15" fill="rgb(217,105,26)" fg:x="54" fg:w="1"/><text x="4.5425%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.2925%" y="661" width="0.0795%" height="15" fill="rgb(208,64,1)" fg:x="54" fg:w="1"/><text x="4.5425%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="4.2925%" y="645" width="0.0795%" height="15" fill="rgb(214,80,1)" fg:x="54" fg:w="1"/><text x="4.5425%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="4.2925%" y="629" width="0.0795%" height="15" fill="rgb(206,175,26)" fg:x="54" fg:w="1"/><text x="4.5425%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="4.2925%" y="613" width="0.0795%" height="15" fill="rgb(235,156,37)" fg:x="54" fg:w="1"/><text x="4.5425%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.2925%" y="597" width="0.0795%" height="15" fill="rgb(213,100,9)" fg:x="54" fg:w="1"/><text x="4.5425%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.2925%" y="581" width="0.0795%" height="15" fill="rgb(241,15,13)" fg:x="54" fg:w="1"/><text x="4.5425%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="4.2925%" y="565" width="0.0795%" height="15" fill="rgb(205,97,43)" fg:x="54" fg:w="1"/><text x="4.5425%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="4.2925%" y="549" width="0.0795%" height="15" fill="rgb(216,106,32)" fg:x="54" fg:w="1"/><text x="4.5425%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="4.2925%" y="533" width="0.0795%" height="15" fill="rgb(226,200,8)" fg:x="54" fg:w="1"/><text x="4.5425%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="4.2925%" y="517" width="0.0795%" height="15" fill="rgb(244,54,29)" fg:x="54" fg:w="1"/><text x="4.5425%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.2925%" y="501" width="0.0795%" height="15" fill="rgb(252,169,12)" fg:x="54" fg:w="1"/><text x="4.5425%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="4.2925%" y="693" width="0.1590%" height="15" fill="rgb(231,199,11)" fg:x="54" fg:w="2"/><text x="4.5425%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="4.3720%" y="677" width="0.0795%" height="15" fill="rgb(233,191,18)" fg:x="55" fg:w="1"/><text x="4.6220%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.3720%" y="661" width="0.0795%" height="15" fill="rgb(215,83,47)" fg:x="55" fg:w="1"/><text x="4.6220%" y="671.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="4.4515%" y="645" width="0.0795%" height="15" fill="rgb(251,67,19)" fg:x="56" fg:w="1"/><text x="4.7015%" y="655.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="4.4515%" y="693" width="0.1590%" height="15" fill="rgb(240,7,20)" fg:x="56" fg:w="2"/><text x="4.7015%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="4.4515%" y="677" width="0.1590%" height="15" fill="rgb(210,150,26)" fg:x="56" fg:w="2"/><text x="4.7015%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="4.4515%" y="661" width="0.1590%" height="15" fill="rgb(228,75,42)" fg:x="56" fg:w="2"/><text x="4.7015%" y="671.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="4.5310%" y="645" width="0.0795%" height="15" fill="rgb(237,134,48)" fg:x="57" fg:w="1"/><text x="4.7810%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="4.6900%" y="629" width="0.0795%" height="15" fill="rgb(205,80,50)" fg:x="59" fg:w="1"/><text x="4.9400%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.6900%" y="613" width="0.0795%" height="15" fill="rgb(217,74,48)" fg:x="59" fg:w="1"/><text x="4.9400%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.6900%" y="597" width="0.0795%" height="15" fill="rgb(205,82,50)" fg:x="59" fg:w="1"/><text x="4.9400%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.6900%" y="581" width="0.0795%" height="15" fill="rgb(228,1,33)" fg:x="59" fg:w="1"/><text x="4.9400%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="4.6900%" y="645" width="0.1590%" height="15" fill="rgb(214,50,23)" fg:x="59" fg:w="2"/><text x="4.9400%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.7695%" y="629" width="0.0795%" height="15" fill="rgb(210,62,9)" fg:x="60" fg:w="1"/><text x="5.0195%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="4.8490%" y="629" width="0.1590%" height="15" fill="rgb(210,104,37)" fg:x="61" fg:w="2"/><text x="5.0990%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (9 samples, 0.72%)</title><rect x="5.0079%" y="629" width="0.7154%" height="15" fill="rgb(232,104,43)" fg:x="63" fg:w="9"/><text x="5.2579%" y="639.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="5.4054%" y="613" width="0.3180%" height="15" fill="rgb(244,52,6)" fg:x="68" fg:w="4"/><text x="5.6554%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="5.5644%" y="597" width="0.1590%" height="15" fill="rgb(211,174,52)" fg:x="70" fg:w="2"/><text x="5.8144%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="5.8824%" y="581" width="0.0795%" height="15" fill="rgb(229,48,4)" fg:x="74" fg:w="1"/><text x="6.1324%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="5.9618%" y="581" width="0.2385%" height="15" fill="rgb(205,155,16)" fg:x="75" fg:w="3"/><text x="6.2118%" y="591.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="5.9618%" y="565" width="0.2385%" height="15" fill="rgb(211,141,53)" fg:x="75" fg:w="3"/><text x="6.2118%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="6.0413%" y="549" width="0.1590%" height="15" fill="rgb(240,148,11)" fg:x="76" fg:w="2"/><text x="6.2913%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.1208%" y="533" width="0.0795%" height="15" fill="rgb(214,45,23)" fg:x="77" fg:w="1"/><text x="6.3708%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (7 samples, 0.56%)</title><rect x="5.7234%" y="613" width="0.5564%" height="15" fill="rgb(248,74,26)" fg:x="72" fg:w="7"/><text x="5.9734%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="5.8029%" y="597" width="0.4769%" height="15" fill="rgb(218,121,16)" fg:x="73" fg:w="6"/><text x="6.0529%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.2003%" y="581" width="0.0795%" height="15" fill="rgb(218,10,47)" fg:x="78" fg:w="1"/><text x="6.4503%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.2003%" y="565" width="0.0795%" height="15" fill="rgb(227,99,14)" fg:x="78" fg:w="1"/><text x="6.4503%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.2003%" y="549" width="0.0795%" height="15" fill="rgb(229,83,46)" fg:x="78" fg:w="1"/><text x="6.4503%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="6.2798%" y="597" width="0.2385%" height="15" fill="rgb(228,25,1)" fg:x="79" fg:w="3"/><text x="6.5298%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.3593%" y="581" width="0.1590%" height="15" fill="rgb(252,190,15)" fg:x="80" fg:w="2"/><text x="6.6093%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.4388%" y="565" width="0.0795%" height="15" fill="rgb(213,103,51)" fg:x="81" fg:w="1"/><text x="6.6888%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.4388%" y="549" width="0.0795%" height="15" fill="rgb(220,38,44)" fg:x="81" fg:w="1"/><text x="6.6888%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="6.5978%" y="581" width="0.0795%" height="15" fill="rgb(210,45,26)" fg:x="83" fg:w="1"/><text x="6.8478%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="6.6773%" y="581" width="0.0795%" height="15" fill="rgb(205,95,48)" fg:x="84" fg:w="1"/><text x="6.9273%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.6773%" y="565" width="0.0795%" height="15" fill="rgb(225,179,37)" fg:x="84" fg:w="1"/><text x="6.9273%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="6.7568%" y="581" width="0.2385%" height="15" fill="rgb(230,209,3)" fg:x="85" fg:w="3"/><text x="7.0068%" y="591.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="6.7568%" y="565" width="0.2385%" height="15" fill="rgb(248,12,46)" fg:x="85" fg:w="3"/><text x="7.0068%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="6.7568%" y="549" width="0.2385%" height="15" fill="rgb(234,18,0)" fg:x="85" fg:w="3"/><text x="7.0068%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="6.8362%" y="533" width="0.1590%" height="15" fill="rgb(238,197,14)" fg:x="86" fg:w="2"/><text x="7.0862%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="6.9952%" y="581" width="0.0795%" height="15" fill="rgb(251,162,48)" fg:x="88" fg:w="1"/><text x="7.2452%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="6.5183%" y="597" width="0.6359%" height="15" fill="rgb(237,73,42)" fg:x="82" fg:w="8"/><text x="6.7683%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.0747%" y="581" width="0.0795%" height="15" fill="rgb(211,108,8)" fg:x="89" fg:w="1"/><text x="7.3247%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.95%)</title><rect x="6.2798%" y="613" width="0.9539%" height="15" fill="rgb(213,45,22)" fg:x="79" fg:w="12"/><text x="6.5298%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.1542%" y="597" width="0.0795%" height="15" fill="rgb(252,154,5)" fg:x="90" fg:w="1"/><text x="7.4042%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.1542%" y="581" width="0.0795%" height="15" fill="rgb(221,79,52)" fg:x="90" fg:w="1"/><text x="7.4042%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.1542%" y="565" width="0.0795%" height="15" fill="rgb(229,220,36)" fg:x="90" fg:w="1"/><text x="7.4042%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.59%)</title><rect x="5.7234%" y="629" width="1.5898%" height="15" fill="rgb(211,17,16)" fg:x="72" fg:w="20"/><text x="5.9734%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.2337%" y="613" width="0.0795%" height="15" fill="rgb(222,55,31)" fg:x="91" fg:w="1"/><text x="7.4837%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.2337%" y="597" width="0.0795%" height="15" fill="rgb(221,221,31)" fg:x="91" fg:w="1"/><text x="7.4837%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (39 samples, 3.10%)</title><rect x="4.6900%" y="661" width="3.1002%" height="15" fill="rgb(227,168,26)" fg:x="59" fg:w="39"/><text x="4.9400%" y="671.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (37 samples, 2.94%)</title><rect x="4.8490%" y="645" width="2.9412%" height="15" fill="rgb(224,139,9)" fg:x="61" fg:w="37"/><text x="5.0990%" y="655.50">se..</text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="7.3132%" y="629" width="0.4769%" height="15" fill="rgb(254,172,0)" fg:x="92" fg:w="6"/><text x="7.5632%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="7.5517%" y="613" width="0.2385%" height="15" fill="rgb(235,203,1)" fg:x="95" fg:w="3"/><text x="7.8017%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="7.6312%" y="597" width="0.1590%" height="15" fill="rgb(216,205,24)" fg:x="96" fg:w="2"/><text x="7.8812%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="7.7107%" y="581" width="0.0795%" height="15" fill="rgb(233,24,6)" fg:x="97" fg:w="1"/><text x="7.9607%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.7107%" y="565" width="0.0795%" height="15" fill="rgb(244,110,9)" fg:x="97" fg:w="1"/><text x="7.9607%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="7.7107%" y="549" width="0.0795%" height="15" fill="rgb(239,222,42)" fg:x="97" fg:w="1"/><text x="7.9607%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.7901%" y="629" width="0.0795%" height="15" fill="rgb(218,145,13)" fg:x="98" fg:w="1"/><text x="8.0401%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="8.0286%" y="613" width="0.1590%" height="15" fill="rgb(207,69,11)" fg:x="101" fg:w="2"/><text x="8.2786%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="8.1876%" y="613" width="0.3180%" height="15" fill="rgb(220,223,22)" fg:x="103" fg:w="4"/><text x="8.4376%" y="623.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="8.2671%" y="597" width="0.2385%" height="15" fill="rgb(245,102,5)" fg:x="104" fg:w="3"/><text x="8.5171%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.5056%" y="597" width="0.0795%" height="15" fill="rgb(211,148,2)" fg:x="107" fg:w="1"/><text x="8.7556%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.5851%" y="581" width="0.0795%" height="15" fill="rgb(241,13,44)" fg:x="108" fg:w="1"/><text x="8.8351%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.95%)</title><rect x="7.7901%" y="661" width="0.9539%" height="15" fill="rgb(219,137,21)" fg:x="98" fg:w="12"/><text x="8.0401%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.95%)</title><rect x="7.7901%" y="645" width="0.9539%" height="15" fill="rgb(242,206,5)" fg:x="98" fg:w="12"/><text x="8.0401%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.87%)</title><rect x="7.8696%" y="629" width="0.8744%" height="15" fill="rgb(217,114,22)" fg:x="99" fg:w="11"/><text x="8.1196%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="8.5056%" y="613" width="0.2385%" height="15" fill="rgb(253,206,42)" fg:x="107" fg:w="3"/><text x="8.7556%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="8.5851%" y="597" width="0.1590%" height="15" fill="rgb(236,102,18)" fg:x="108" fg:w="2"/><text x="8.8351%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="8.6645%" y="581" width="0.0795%" height="15" fill="rgb(208,59,49)" fg:x="109" fg:w="1"/><text x="8.9145%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.9825%" y="613" width="0.0795%" height="15" fill="rgb(215,194,28)" fg:x="113" fg:w="1"/><text x="9.2325%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="9.0620%" y="613" width="0.2385%" height="15" fill="rgb(243,207,11)" fg:x="114" fg:w="3"/><text x="9.3120%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="9.0620%" y="597" width="0.2385%" height="15" fill="rgb(254,179,35)" fg:x="114" fg:w="3"/><text x="9.3120%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.24%)</title><rect x="9.0620%" y="581" width="0.2385%" height="15" fill="rgb(235,97,3)" fg:x="114" fg:w="3"/><text x="9.3120%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="9.3005%" y="613" width="0.0795%" height="15" fill="rgb(215,155,33)" fg:x="117" fg:w="1"/><text x="9.5505%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="9.3800%" y="613" width="0.1590%" height="15" fill="rgb(223,128,12)" fg:x="118" fg:w="2"/><text x="9.6300%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.4595%" y="597" width="0.0795%" height="15" fill="rgb(208,157,18)" fg:x="119" fg:w="1"/><text x="9.7095%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.4595%" y="581" width="0.0795%" height="15" fill="rgb(249,70,54)" fg:x="119" fg:w="1"/><text x="9.7095%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.4595%" y="565" width="0.0795%" height="15" fill="rgb(244,118,24)" fg:x="119" fg:w="1"/><text x="9.7095%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.6184%" y="565" width="0.0795%" height="15" fill="rgb(211,54,0)" fg:x="121" fg:w="1"/><text x="9.8684%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.6184%" y="549" width="0.0795%" height="15" fill="rgb(245,137,45)" fg:x="121" fg:w="1"/><text x="9.8684%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.6184%" y="533" width="0.0795%" height="15" fill="rgb(232,154,31)" fg:x="121" fg:w="1"/><text x="9.8684%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.7774%" y="533" width="0.0795%" height="15" fill="rgb(253,6,39)" fg:x="123" fg:w="1"/><text x="10.0274%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.7774%" y="517" width="0.0795%" height="15" fill="rgb(234,183,24)" fg:x="123" fg:w="1"/><text x="10.0274%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.7774%" y="501" width="0.0795%" height="15" fill="rgb(252,84,40)" fg:x="123" fg:w="1"/><text x="10.0274%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (5 samples, 0.40%)</title><rect x="9.5390%" y="613" width="0.3975%" height="15" fill="rgb(224,65,2)" fg:x="120" fg:w="5"/><text x="9.7890%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="9.5390%" y="597" width="0.3975%" height="15" fill="rgb(229,38,24)" fg:x="120" fg:w="5"/><text x="9.7890%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="9.5390%" y="581" width="0.3975%" height="15" fill="rgb(218,131,50)" fg:x="120" fg:w="5"/><text x="9.7890%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (3 samples, 0.24%)</title><rect x="9.6979%" y="565" width="0.2385%" height="15" fill="rgb(233,106,18)" fg:x="122" fg:w="3"/><text x="9.9479%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="9.6979%" y="549" width="0.2385%" height="15" fill="rgb(220,216,11)" fg:x="122" fg:w="3"/><text x="9.9479%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="9.8569%" y="533" width="0.0795%" height="15" fill="rgb(251,100,45)" fg:x="124" fg:w="1"/><text x="10.1069%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.8569%" y="517" width="0.0795%" height="15" fill="rgb(235,143,32)" fg:x="124" fg:w="1"/><text x="10.1069%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="9.8569%" y="501" width="0.0795%" height="15" fill="rgb(248,124,34)" fg:x="124" fg:w="1"/><text x="10.1069%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="9.8569%" y="485" width="0.0795%" height="15" fill="rgb(225,221,4)" fg:x="124" fg:w="1"/><text x="10.1069%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (2 samples, 0.16%)</title><rect x="9.9364%" y="613" width="0.1590%" height="15" fill="rgb(242,27,43)" fg:x="125" fg:w="2"/><text x="10.1864%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="10.0159%" y="597" width="0.0795%" height="15" fill="rgb(227,54,8)" fg:x="126" fg:w="1"/><text x="10.2659%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="10.0954%" y="597" width="0.0795%" height="15" fill="rgb(253,139,49)" fg:x="127" fg:w="1"/><text x="10.3454%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="10.4134%" y="565" width="0.1590%" height="15" fill="rgb(231,26,43)" fg:x="131" fg:w="2"/><text x="10.6634%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="10.4134%" y="549" width="0.1590%" height="15" fill="rgb(207,121,39)" fg:x="131" fg:w="2"/><text x="10.6634%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.4928%" y="533" width="0.0795%" height="15" fill="rgb(223,101,35)" fg:x="132" fg:w="1"/><text x="10.7428%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="10.5723%" y="565" width="0.0795%" height="15" fill="rgb(232,87,23)" fg:x="133" fg:w="1"/><text x="10.8223%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="10.5723%" y="549" width="0.0795%" height="15" fill="rgb(225,180,29)" fg:x="133" fg:w="1"/><text x="10.8223%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="10.5723%" y="533" width="0.0795%" height="15" fill="rgb(225,25,17)" fg:x="133" fg:w="1"/><text x="10.8223%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.8903%" y="533" width="0.0795%" height="15" fill="rgb(223,8,52)" fg:x="137" fg:w="1"/><text x="11.1403%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.8903%" y="517" width="0.0795%" height="15" fill="rgb(246,42,21)" fg:x="137" fg:w="1"/><text x="11.1403%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="10.6518%" y="549" width="0.3975%" height="15" fill="rgb(205,64,43)" fg:x="134" fg:w="5"/><text x="10.9018%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="10.9698%" y="533" width="0.0795%" height="15" fill="rgb(221,160,13)" fg:x="138" fg:w="1"/><text x="11.2198%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.9698%" y="517" width="0.0795%" height="15" fill="rgb(239,58,35)" fg:x="138" fg:w="1"/><text x="11.2198%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.79%)</title><rect x="10.3339%" y="581" width="0.7949%" height="15" fill="rgb(251,26,40)" fg:x="130" fg:w="10"/><text x="10.5839%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="10.6518%" y="565" width="0.4769%" height="15" fill="rgb(247,0,4)" fg:x="134" fg:w="6"/><text x="10.9018%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.0493%" y="549" width="0.0795%" height="15" fill="rgb(218,130,10)" fg:x="139" fg:w="1"/><text x="11.2993%" y="559.50"></text></g><g><title>kernel::compare::any_entity_changes (31 samples, 2.46%)</title><rect x="8.7440%" y="661" width="2.4642%" height="15" fill="rgb(239,32,7)" fg:x="110" fg:w="31"/><text x="8.9940%" y="671.50">ke..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (31 samples, 2.46%)</title><rect x="8.7440%" y="645" width="2.4642%" height="15" fill="rgb(210,192,24)" fg:x="110" fg:w="31"/><text x="8.9940%" y="655.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (30 samples, 2.38%)</title><rect x="8.8235%" y="629" width="2.3847%" height="15" fill="rgb(226,212,17)" fg:x="111" fg:w="30"/><text x="9.0735%" y="639.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (14 samples, 1.11%)</title><rect x="10.0954%" y="613" width="1.1129%" height="15" fill="rgb(219,201,28)" fg:x="127" fg:w="14"/><text x="10.3454%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (13 samples, 1.03%)</title><rect x="10.1749%" y="597" width="1.0334%" height="15" fill="rgb(235,207,41)" fg:x="128" fg:w="13"/><text x="10.4249%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="11.1288%" y="581" width="0.0795%" height="15" fill="rgb(241,95,54)" fg:x="140" fg:w="1"/><text x="11.3788%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.1288%" y="565" width="0.0795%" height="15" fill="rgb(248,12,23)" fg:x="140" fg:w="1"/><text x="11.3788%" y="575.50"></text></g><g><title>engine::session::Session::flush (88 samples, 7.00%)</title><rect x="4.2925%" y="725" width="6.9952%" height="15" fill="rgb(228,173,4)" fg:x="54" fg:w="88"/><text x="4.5425%" y="735.50">engine::s..</text></g><g><title>engine::session::Session::save_entity_changes (88 samples, 7.00%)</title><rect x="4.2925%" y="709" width="6.9952%" height="15" fill="rgb(254,99,5)" fg:x="54" fg:w="88"/><text x="4.5425%" y="719.50">engine::s..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (84 samples, 6.68%)</title><rect x="4.6105%" y="693" width="6.6773%" height="15" fill="rgb(212,184,17)" fg:x="58" fg:w="84"/><text x="4.8605%" y="703.50">engine::i..</text></g><g><title>engine::session::Session::check_for_changes (84 samples, 6.68%)</title><rect x="4.6105%" y="677" width="6.6773%" height="15" fill="rgb(252,174,1)" fg:x="58" fg:w="84"/><text x="4.8605%" y="687.50">engine::s..</text></g><g><title>kernel::model::Entity::set_gid (1 samples, 0.08%)</title><rect x="11.2083%" y="661" width="0.0795%" height="15" fill="rgb(241,118,51)" fg:x="141" fg:w="1"/><text x="11.4583%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.2083%" y="645" width="0.0795%" height="15" fill="rgb(227,94,47)" fg:x="141" fg:w="1"/><text x="11.4583%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="11.2083%" y="629" width="0.0795%" height="15" fill="rgb(229,104,2)" fg:x="141" fg:w="1"/><text x="11.4583%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="11.3672%" y="709" width="0.2385%" height="15" fill="rgb(219,28,31)" fg:x="143" fg:w="3"/><text x="11.6172%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="11.3672%" y="693" width="0.2385%" height="15" fill="rgb(233,109,36)" fg:x="143" fg:w="3"/><text x="11.6172%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="11.4467%" y="677" width="0.1590%" height="15" fill="rgb(246,88,11)" fg:x="144" fg:w="2"/><text x="11.6967%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="11.4467%" y="661" width="0.1590%" height="15" fill="rgb(209,212,17)" fg:x="144" fg:w="2"/><text x="11.6967%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="11.4467%" y="645" width="0.1590%" height="15" fill="rgb(243,59,29)" fg:x="144" fg:w="2"/><text x="11.6967%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="11.4467%" y="629" width="0.1590%" height="15" fill="rgb(244,205,48)" fg:x="144" fg:w="2"/><text x="11.6967%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="11.4467%" y="613" width="0.1590%" height="15" fill="rgb(227,30,6)" fg:x="144" fg:w="2"/><text x="11.6967%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="11.4467%" y="597" width="0.1590%" height="15" fill="rgb(220,205,48)" fg:x="144" fg:w="2"/><text x="11.6967%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="11.4467%" y="581" width="0.1590%" height="15" fill="rgb(250,94,14)" fg:x="144" fg:w="2"/><text x="11.6967%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="11.4467%" y="565" width="0.1590%" height="15" fill="rgb(216,119,42)" fg:x="144" fg:w="2"/><text x="11.6967%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="11.4467%" y="549" width="0.1590%" height="15" fill="rgb(232,155,0)" fg:x="144" fg:w="2"/><text x="11.6967%" y="559.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="11.4467%" y="533" width="0.1590%" height="15" fill="rgb(212,24,32)" fg:x="144" fg:w="2"/><text x="11.6967%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="11.5262%" y="517" width="0.0795%" height="15" fill="rgb(216,69,20)" fg:x="145" fg:w="1"/><text x="11.7762%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="11.5262%" y="501" width="0.0795%" height="15" fill="rgb(229,73,31)" fg:x="145" fg:w="1"/><text x="11.7762%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="11.5262%" y="485" width="0.0795%" height="15" fill="rgb(224,219,20)" fg:x="145" fg:w="1"/><text x="11.7762%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.5262%" y="469" width="0.0795%" height="15" fill="rgb(215,146,41)" fg:x="145" fg:w="1"/><text x="11.7762%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.5262%" y="453" width="0.0795%" height="15" fill="rgb(244,71,31)" fg:x="145" fg:w="1"/><text x="11.7762%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="11.5262%" y="437" width="0.0795%" height="15" fill="rgb(224,24,11)" fg:x="145" fg:w="1"/><text x="11.7762%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="11.5262%" y="421" width="0.0795%" height="15" fill="rgb(229,76,15)" fg:x="145" fg:w="1"/><text x="11.7762%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="11.5262%" y="405" width="0.0795%" height="15" fill="rgb(209,93,2)" fg:x="145" fg:w="1"/><text x="11.7762%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="11.5262%" y="389" width="0.0795%" height="15" fill="rgb(216,200,50)" fg:x="145" fg:w="1"/><text x="11.7762%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="11.5262%" y="373" width="0.0795%" height="15" fill="rgb(211,67,34)" fg:x="145" fg:w="1"/><text x="11.7762%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="11.5262%" y="357" width="0.0795%" height="15" fill="rgb(225,87,47)" fg:x="145" fg:w="1"/><text x="11.7762%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="11.5262%" y="341" width="0.0795%" height="15" fill="rgb(217,185,16)" fg:x="145" fg:w="1"/><text x="11.7762%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="11.5262%" y="325" width="0.0795%" height="15" fill="rgb(205,0,0)" fg:x="145" fg:w="1"/><text x="11.7762%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="11.5262%" y="309" width="0.0795%" height="15" fill="rgb(207,116,45)" fg:x="145" fg:w="1"/><text x="11.7762%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="11.5262%" y="293" width="0.0795%" height="15" fill="rgb(221,156,26)" fg:x="145" fg:w="1"/><text x="11.7762%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="11.5262%" y="277" width="0.0795%" height="15" fill="rgb(213,140,4)" fg:x="145" fg:w="1"/><text x="11.7762%" y="287.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="11.5262%" y="261" width="0.0795%" height="15" fill="rgb(231,224,15)" fg:x="145" fg:w="1"/><text x="11.7762%" y="271.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="11.5262%" y="245" width="0.0795%" height="15" fill="rgb(244,76,20)" fg:x="145" fg:w="1"/><text x="11.7762%" y="255.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="11.6057%" y="661" width="0.0795%" height="15" fill="rgb(238,117,7)" fg:x="146" fg:w="1"/><text x="11.8557%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.6057%" y="645" width="0.0795%" height="15" fill="rgb(235,1,10)" fg:x="146" fg:w="1"/><text x="11.8557%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.6057%" y="629" width="0.0795%" height="15" fill="rgb(216,165,6)" fg:x="146" fg:w="1"/><text x="11.8557%" y="639.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="11.6057%" y="693" width="0.1590%" height="15" fill="rgb(246,91,35)" fg:x="146" fg:w="2"/><text x="11.8557%" y="703.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="11.6057%" y="677" width="0.1590%" height="15" fill="rgb(228,96,24)" fg:x="146" fg:w="2"/><text x="11.8557%" y="687.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="11.6852%" y="661" width="0.0795%" height="15" fill="rgb(254,217,53)" fg:x="147" fg:w="1"/><text x="11.9352%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.6852%" y="645" width="0.0795%" height="15" fill="rgb(209,60,0)" fg:x="147" fg:w="1"/><text x="11.9352%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="11.6852%" y="629" width="0.0795%" height="15" fill="rgb(250,93,26)" fg:x="147" fg:w="1"/><text x="11.9352%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.6852%" y="613" width="0.0795%" height="15" fill="rgb(211,9,40)" fg:x="147" fg:w="1"/><text x="11.9352%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.6852%" y="597" width="0.0795%" height="15" fill="rgb(242,57,20)" fg:x="147" fg:w="1"/><text x="11.9352%" y="607.50"></text></g><g><title>plugins_core::build::Build::holding (7 samples, 0.56%)</title><rect x="11.2878%" y="725" width="0.5564%" height="15" fill="rgb(248,85,48)" fg:x="142" fg:w="7"/><text x="11.5378%" y="735.50"></text></g><g><title>plugins_core::tools::set_container (3 samples, 0.24%)</title><rect x="11.6057%" y="709" width="0.2385%" height="15" fill="rgb(212,117,2)" fg:x="146" fg:w="3"/><text x="11.8557%" y="719.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="11.7647%" y="693" width="0.0795%" height="15" fill="rgb(243,19,3)" fg:x="148" fg:w="1"/><text x="12.0147%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="11.7647%" y="677" width="0.0795%" height="15" fill="rgb(232,217,24)" fg:x="148" fg:w="1"/><text x="12.0147%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="11.7647%" y="661" width="0.0795%" height="15" fill="rgb(224,175,40)" fg:x="148" fg:w="1"/><text x="12.0147%" y="671.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="11.7647%" y="645" width="0.0795%" height="15" fill="rgb(212,162,32)" fg:x="148" fg:w="1"/><text x="12.0147%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="11.7647%" y="629" width="0.0795%" height="15" fill="rgb(215,9,4)" fg:x="148" fg:w="1"/><text x="12.0147%" y="639.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="11.7647%" y="613" width="0.0795%" height="15" fill="rgb(242,42,7)" fg:x="148" fg:w="1"/><text x="12.0147%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="11.7647%" y="597" width="0.0795%" height="15" fill="rgb(242,184,45)" fg:x="148" fg:w="1"/><text x="12.0147%" y="607.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="11.7647%" y="581" width="0.0795%" height="15" fill="rgb(228,111,51)" fg:x="148" fg:w="1"/><text x="12.0147%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="11.7647%" y="565" width="0.0795%" height="15" fill="rgb(236,147,17)" fg:x="148" fg:w="1"/><text x="12.0147%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.7647%" y="549" width="0.0795%" height="15" fill="rgb(210,75,22)" fg:x="148" fg:w="1"/><text x="12.0147%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.7647%" y="533" width="0.0795%" height="15" fill="rgb(217,159,45)" fg:x="148" fg:w="1"/><text x="12.0147%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.7647%" y="517" width="0.0795%" height="15" fill="rgb(245,165,53)" fg:x="148" fg:w="1"/><text x="12.0147%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.7647%" y="501" width="0.0795%" height="15" fill="rgb(251,190,50)" fg:x="148" fg:w="1"/><text x="12.0147%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.7647%" y="485" width="0.0795%" height="15" fill="rgb(208,203,29)" fg:x="148" fg:w="1"/><text x="12.0147%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.7647%" y="469" width="0.0795%" height="15" fill="rgb(207,209,35)" fg:x="148" fg:w="1"/><text x="12.0147%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.7647%" y="453" width="0.0795%" height="15" fill="rgb(230,144,49)" fg:x="148" fg:w="1"/><text x="12.0147%" y="463.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="11.8442%" y="725" width="0.1590%" height="15" fill="rgb(229,31,6)" fg:x="149" fg:w="2"/><text x="12.0942%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="11.9237%" y="709" width="0.0795%" height="15" fill="rgb(251,129,24)" fg:x="150" fg:w="1"/><text x="12.1737%" y="719.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="11.9237%" y="693" width="0.0795%" height="15" fill="rgb(235,105,15)" fg:x="150" fg:w="1"/><text x="12.1737%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.9237%" y="677" width="0.0795%" height="15" fill="rgb(216,52,43)" fg:x="150" fg:w="1"/><text x="12.1737%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.9237%" y="661" width="0.0795%" height="15" fill="rgb(238,144,41)" fg:x="150" fg:w="1"/><text x="12.1737%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.9237%" y="645" width="0.0795%" height="15" fill="rgb(243,63,9)" fg:x="150" fg:w="1"/><text x="12.1737%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.9237%" y="629" width="0.0795%" height="15" fill="rgb(246,208,1)" fg:x="150" fg:w="1"/><text x="12.1737%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.9237%" y="613" width="0.0795%" height="15" fill="rgb(233,182,18)" fg:x="150" fg:w="1"/><text x="12.1737%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.9237%" y="597" width="0.0795%" height="15" fill="rgb(242,224,8)" fg:x="150" fg:w="1"/><text x="12.1737%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.9237%" y="581" width="0.0795%" height="15" fill="rgb(243,54,37)" fg:x="150" fg:w="1"/><text x="12.1737%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.9237%" y="565" width="0.0795%" height="15" fill="rgb(233,192,12)" fg:x="150" fg:w="1"/><text x="12.1737%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.9237%" y="549" width="0.0795%" height="15" fill="rgb(251,192,53)" fg:x="150" fg:w="1"/><text x="12.1737%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.9237%" y="533" width="0.0795%" height="15" fill="rgb(246,141,26)" fg:x="150" fg:w="1"/><text x="12.1737%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.9237%" y="517" width="0.0795%" height="15" fill="rgb(239,195,19)" fg:x="150" fg:w="1"/><text x="12.1737%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.9237%" y="501" width="0.0795%" height="15" fill="rgb(241,16,39)" fg:x="150" fg:w="1"/><text x="12.1737%" y="511.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="12.0032%" y="725" width="0.1590%" height="15" fill="rgb(223,13,53)" fg:x="151" fg:w="2"/><text x="12.2532%" y="735.50"></text></g><g><title>kernel::model::EntityPtr::set_name (2 samples, 0.16%)</title><rect x="12.0032%" y="709" width="0.1590%" height="15" fill="rgb(214,227,0)" fg:x="151" fg:w="2"/><text x="12.2532%" y="719.50"></text></g><g><title>kernel::model::EntityPtr::modified (2 samples, 0.16%)</title><rect x="12.0032%" y="693" width="0.1590%" height="15" fill="rgb(228,103,26)" fg:x="151" fg:w="2"/><text x="12.2532%" y="703.50"></text></g><g><title>kernel::model::Props::property_named (2 samples, 0.16%)</title><rect x="12.0032%" y="677" width="0.1590%" height="15" fill="rgb(254,177,53)" fg:x="151" fg:w="2"/><text x="12.2532%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="12.0827%" y="661" width="0.0795%" height="15" fill="rgb(208,201,34)" fg:x="152" fg:w="1"/><text x="12.3327%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.1622%" y="709" width="0.0795%" height="15" fill="rgb(212,39,5)" fg:x="153" fg:w="1"/><text x="12.4122%" y="719.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="12.2417%" y="645" width="0.0795%" height="15" fill="rgb(246,117,3)" fg:x="154" fg:w="1"/><text x="12.4917%" y="655.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="12.2417%" y="629" width="0.0795%" height="15" fill="rgb(244,118,39)" fg:x="154" fg:w="1"/><text x="12.4917%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::set_name (2 samples, 0.16%)</title><rect x="12.2417%" y="661" width="0.1590%" height="15" fill="rgb(241,64,10)" fg:x="154" fg:w="2"/><text x="12.4917%" y="671.50"></text></g><g><title>kernel::model::Props::set_property (1 samples, 0.08%)</title><rect x="12.3211%" y="645" width="0.0795%" height="15" fill="rgb(229,39,44)" fg:x="155" fg:w="1"/><text x="12.5711%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.3211%" y="629" width="0.0795%" height="15" fill="rgb(230,226,3)" fg:x="155" fg:w="1"/><text x="12.5711%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (1 samples, 0.08%)</title><rect x="12.4006%" y="597" width="0.0795%" height="15" fill="rgb(222,13,42)" fg:x="156" fg:w="1"/><text x="12.6506%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="12.4006%" y="581" width="0.0795%" height="15" fill="rgb(247,180,54)" fg:x="156" fg:w="1"/><text x="12.6506%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.4006%" y="565" width="0.0795%" height="15" fill="rgb(205,96,16)" fg:x="156" fg:w="1"/><text x="12.6506%" y="575.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="12.4006%" y="661" width="0.1590%" height="15" fill="rgb(205,100,21)" fg:x="156" fg:w="2"/><text x="12.6506%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="12.4006%" y="645" width="0.1590%" height="15" fill="rgb(248,51,4)" fg:x="156" fg:w="2"/><text x="12.6506%" y="655.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="12.4006%" y="629" width="0.1590%" height="15" fill="rgb(217,197,30)" fg:x="156" fg:w="2"/><text x="12.6506%" y="639.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="12.4006%" y="613" width="0.1590%" height="15" fill="rgb(240,179,40)" fg:x="156" fg:w="2"/><text x="12.6506%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.4801%" y="597" width="0.0795%" height="15" fill="rgb(212,185,35)" fg:x="157" fg:w="1"/><text x="12.7301%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="12.5596%" y="645" width="0.0795%" height="15" fill="rgb(251,222,31)" fg:x="158" fg:w="1"/><text x="12.8096%" y="655.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="12.5596%" y="629" width="0.0795%" height="15" fill="rgb(208,140,36)" fg:x="158" fg:w="1"/><text x="12.8096%" y="639.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="12.5596%" y="613" width="0.0795%" height="15" fill="rgb(220,148,1)" fg:x="158" fg:w="1"/><text x="12.8096%" y="623.50"></text></g><g><title>kernel::model::Entity::set_gid (1 samples, 0.08%)</title><rect x="12.5596%" y="597" width="0.0795%" height="15" fill="rgb(254,4,28)" fg:x="158" fg:w="1"/><text x="12.8096%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.5596%" y="581" width="0.0795%" height="15" fill="rgb(222,185,44)" fg:x="158" fg:w="1"/><text x="12.8096%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="12.5596%" y="565" width="0.0795%" height="15" fill="rgb(215,74,39)" fg:x="158" fg:w="1"/><text x="12.8096%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="12.6391%" y="645" width="0.0795%" height="15" fill="rgb(247,86,4)" fg:x="159" fg:w="1"/><text x="12.8891%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="12.6391%" y="629" width="0.0795%" height="15" fill="rgb(231,105,32)" fg:x="159" fg:w="1"/><text x="12.8891%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.6391%" y="613" width="0.0795%" height="15" fill="rgb(222,65,35)" fg:x="159" fg:w="1"/><text x="12.8891%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.7981%" y="533" width="0.0795%" height="15" fill="rgb(218,145,35)" fg:x="161" fg:w="1"/><text x="13.0481%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="12.7981%" y="549" width="0.1590%" height="15" fill="rgb(208,7,15)" fg:x="161" fg:w="2"/><text x="13.0481%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.8776%" y="533" width="0.0795%" height="15" fill="rgb(209,83,13)" fg:x="162" fg:w="1"/><text x="13.1276%" y="543.50"></text></g><g><title>plugins_core::build::Build::leads_to (6 samples, 0.48%)</title><rect x="12.5596%" y="661" width="0.4769%" height="15" fill="rgb(218,3,10)" fg:x="158" fg:w="6"/><text x="12.8096%" y="671.50"></text></g><g><title>plugins_core::tools::leads_to (4 samples, 0.32%)</title><rect x="12.7186%" y="645" width="0.3180%" height="15" fill="rgb(211,219,4)" fg:x="160" fg:w="4"/><text x="12.9686%" y="655.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.24%)</title><rect x="12.7981%" y="629" width="0.2385%" height="15" fill="rgb(228,194,12)" fg:x="161" fg:w="3"/><text x="13.0481%" y="639.50"></text></g><g><title>kernel::model::Entity::replace_scope (3 samples, 0.24%)</title><rect x="12.7981%" y="613" width="0.2385%" height="15" fill="rgb(210,175,7)" fg:x="161" fg:w="3"/><text x="13.0481%" y="623.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (3 samples, 0.24%)</title><rect x="12.7981%" y="597" width="0.2385%" height="15" fill="rgb(243,132,6)" fg:x="161" fg:w="3"/><text x="13.0481%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="12.7981%" y="581" width="0.2385%" height="15" fill="rgb(207,72,18)" fg:x="161" fg:w="3"/><text x="13.0481%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="12.7981%" y="565" width="0.2385%" height="15" fill="rgb(236,1,18)" fg:x="161" fg:w="3"/><text x="13.0481%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="12.9571%" y="549" width="0.0795%" height="15" fill="rgb(227,0,18)" fg:x="163" fg:w="1"/><text x="13.2071%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (11 samples, 0.87%)</title><rect x="12.2417%" y="709" width="0.8744%" height="15" fill="rgb(247,37,5)" fg:x="154" fg:w="11"/><text x="12.4917%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.87%)</title><rect x="12.2417%" y="693" width="0.8744%" height="15" fill="rgb(237,179,24)" fg:x="154" fg:w="11"/><text x="12.4917%" y="703.50"></text></g><g><title>plugins_core::build::QuickThing::make (11 samples, 0.87%)</title><rect x="12.2417%" y="677" width="0.8744%" height="15" fill="rgb(226,53,20)" fg:x="154" fg:w="11"/><text x="12.4917%" y="687.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="13.0366%" y="661" width="0.0795%" height="15" fill="rgb(247,75,7)" fg:x="164" fg:w="1"/><text x="13.2866%" y="671.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="13.1161%" y="677" width="0.0795%" height="15" fill="rgb(233,96,12)" fg:x="165" fg:w="1"/><text x="13.3661%" y="687.50"></text></g><g><title>engine::identifiers::model::set_gid (1 samples, 0.08%)</title><rect x="13.1955%" y="677" width="0.0795%" height="15" fill="rgb(224,125,0)" fg:x="166" fg:w="1"/><text x="13.4455%" y="687.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="13.1955%" y="661" width="0.0795%" height="15" fill="rgb(224,92,25)" fg:x="166" fg:w="1"/><text x="13.4455%" y="671.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="13.1955%" y="645" width="0.0795%" height="15" fill="rgb(224,42,24)" fg:x="166" fg:w="1"/><text x="13.4455%" y="655.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="13.1955%" y="629" width="0.0795%" height="15" fill="rgb(234,132,49)" fg:x="166" fg:w="1"/><text x="13.4455%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.1955%" y="613" width="0.0795%" height="15" fill="rgb(248,100,35)" fg:x="166" fg:w="1"/><text x="13.4455%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="13.1955%" y="597" width="0.0795%" height="15" fill="rgb(239,94,40)" fg:x="166" fg:w="1"/><text x="13.4455%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.1955%" y="581" width="0.0795%" height="15" fill="rgb(235,139,28)" fg:x="166" fg:w="1"/><text x="13.4455%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.1955%" y="565" width="0.0795%" height="15" fill="rgb(217,144,7)" fg:x="166" fg:w="1"/><text x="13.4455%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.1955%" y="549" width="0.0795%" height="15" fill="rgb(227,55,4)" fg:x="166" fg:w="1"/><text x="13.4455%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.1955%" y="533" width="0.0795%" height="15" fill="rgb(252,82,54)" fg:x="166" fg:w="1"/><text x="13.4455%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="13.3545%" y="645" width="0.0795%" height="15" fill="rgb(245,172,4)" fg:x="168" fg:w="1"/><text x="13.6045%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="13.3545%" y="629" width="0.0795%" height="15" fill="rgb(207,26,27)" fg:x="168" fg:w="1"/><text x="13.6045%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.3545%" y="613" width="0.0795%" height="15" fill="rgb(252,98,18)" fg:x="168" fg:w="1"/><text x="13.6045%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="13.3545%" y="597" width="0.0795%" height="15" fill="rgb(244,8,26)" fg:x="168" fg:w="1"/><text x="13.6045%" y="607.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="13.3545%" y="581" width="0.0795%" height="15" fill="rgb(237,173,45)" fg:x="168" fg:w="1"/><text x="13.6045%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="13.5135%" y="629" width="0.2385%" height="15" fill="rgb(208,213,49)" fg:x="170" fg:w="3"/><text x="13.7635%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="13.8315%" y="613" width="0.2385%" height="15" fill="rgb(212,122,37)" fg:x="174" fg:w="3"/><text x="14.0815%" y="623.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="13.8315%" y="597" width="0.2385%" height="15" fill="rgb(213,80,17)" fg:x="174" fg:w="3"/><text x="14.0815%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="13.9905%" y="581" width="0.0795%" height="15" fill="rgb(206,210,43)" fg:x="176" fg:w="1"/><text x="14.2405%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.9905%" y="565" width="0.0795%" height="15" fill="rgb(229,214,3)" fg:x="176" fg:w="1"/><text x="14.2405%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.1494%" y="581" width="0.0795%" height="15" fill="rgb(235,213,29)" fg:x="178" fg:w="1"/><text x="14.3994%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.64%)</title><rect x="13.7520%" y="629" width="0.6359%" height="15" fill="rgb(248,135,26)" fg:x="173" fg:w="8"/><text x="14.0020%" y="639.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="14.0700%" y="613" width="0.3180%" height="15" fill="rgb(242,188,12)" fg:x="177" fg:w="4"/><text x="14.3200%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="14.0700%" y="597" width="0.3180%" height="15" fill="rgb(245,38,12)" fg:x="177" fg:w="4"/><text x="14.3200%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.16%)</title><rect x="14.2289%" y="581" width="0.1590%" height="15" fill="rgb(218,42,13)" fg:x="179" fg:w="2"/><text x="14.4789%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="14.5469%" y="613" width="0.0795%" height="15" fill="rgb(238,132,49)" fg:x="183" fg:w="1"/><text x="14.7969%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="14.6264%" y="613" width="0.3975%" height="15" fill="rgb(209,196,19)" fg:x="184" fg:w="5"/><text x="14.8764%" y="623.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="14.7854%" y="597" width="0.2385%" height="15" fill="rgb(244,131,22)" fg:x="186" fg:w="3"/><text x="15.0354%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="14.7854%" y="581" width="0.2385%" height="15" fill="rgb(223,18,34)" fg:x="186" fg:w="3"/><text x="15.0354%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="14.8649%" y="565" width="0.1590%" height="15" fill="rgb(252,124,54)" fg:x="187" fg:w="2"/><text x="15.1149%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="14.9444%" y="549" width="0.0795%" height="15" fill="rgb(229,106,42)" fg:x="188" fg:w="1"/><text x="15.1944%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="14.9444%" y="533" width="0.0795%" height="15" fill="rgb(221,129,1)" fg:x="188" fg:w="1"/><text x="15.1944%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="14.9444%" y="517" width="0.0795%" height="15" fill="rgb(229,74,15)" fg:x="188" fg:w="1"/><text x="15.1944%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="15.1033%" y="565" width="0.0795%" height="15" fill="rgb(210,206,50)" fg:x="190" fg:w="1"/><text x="15.3533%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.1033%" y="549" width="0.0795%" height="15" fill="rgb(251,114,31)" fg:x="190" fg:w="1"/><text x="15.3533%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.1033%" y="533" width="0.0795%" height="15" fill="rgb(215,225,28)" fg:x="190" fg:w="1"/><text x="15.3533%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.1033%" y="517" width="0.0795%" height="15" fill="rgb(237,109,14)" fg:x="190" fg:w="1"/><text x="15.3533%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="15.1033%" y="597" width="0.1590%" height="15" fill="rgb(230,13,37)" fg:x="190" fg:w="2"/><text x="15.3533%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="15.1033%" y="581" width="0.1590%" height="15" fill="rgb(231,40,28)" fg:x="190" fg:w="2"/><text x="15.3533%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.1828%" y="565" width="0.0795%" height="15" fill="rgb(231,202,18)" fg:x="191" fg:w="1"/><text x="15.4328%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.1828%" y="549" width="0.0795%" height="15" fill="rgb(225,33,18)" fg:x="191" fg:w="1"/><text x="15.4328%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.1828%" y="533" width="0.0795%" height="15" fill="rgb(223,64,47)" fg:x="191" fg:w="1"/><text x="15.4328%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="15.2623%" y="597" width="0.3975%" height="15" fill="rgb(234,114,13)" fg:x="192" fg:w="5"/><text x="15.5123%" y="607.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="15.4213%" y="581" width="0.2385%" height="15" fill="rgb(248,56,40)" fg:x="194" fg:w="3"/><text x="15.6713%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.5803%" y="565" width="0.0795%" height="15" fill="rgb(221,194,21)" fg:x="196" fg:w="1"/><text x="15.8303%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="15.5803%" y="549" width="0.0795%" height="15" fill="rgb(242,108,46)" fg:x="196" fg:w="1"/><text x="15.8303%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="15.6598%" y="581" width="0.0795%" height="15" fill="rgb(220,106,10)" fg:x="197" fg:w="1"/><text x="15.9098%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.6598%" y="565" width="0.0795%" height="15" fill="rgb(211,88,4)" fg:x="197" fg:w="1"/><text x="15.9098%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.6598%" y="549" width="0.0795%" height="15" fill="rgb(214,95,34)" fg:x="197" fg:w="1"/><text x="15.9098%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.6598%" y="533" width="0.0795%" height="15" fill="rgb(250,160,33)" fg:x="197" fg:w="1"/><text x="15.9098%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="15.7393%" y="565" width="0.1590%" height="15" fill="rgb(225,29,10)" fg:x="198" fg:w="2"/><text x="15.9893%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.8188%" y="549" width="0.0795%" height="15" fill="rgb(224,28,30)" fg:x="199" fg:w="1"/><text x="16.0688%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.8188%" y="533" width="0.0795%" height="15" fill="rgb(231,77,4)" fg:x="199" fg:w="1"/><text x="16.0688%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.8188%" y="517" width="0.0795%" height="15" fill="rgb(209,63,21)" fg:x="199" fg:w="1"/><text x="16.0688%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="15.7393%" y="581" width="0.3180%" height="15" fill="rgb(226,22,11)" fg:x="198" fg:w="4"/><text x="15.9893%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="15.8983%" y="565" width="0.1590%" height="15" fill="rgb(216,82,30)" fg:x="200" fg:w="2"/><text x="16.1483%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.9777%" y="549" width="0.0795%" height="15" fill="rgb(246,227,38)" fg:x="201" fg:w="1"/><text x="16.2277%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="15.6598%" y="597" width="0.4769%" height="15" fill="rgb(251,203,53)" fg:x="197" fg:w="6"/><text x="15.9098%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.0572%" y="581" width="0.0795%" height="15" fill="rgb(254,101,1)" fg:x="202" fg:w="1"/><text x="16.3072%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.1367%" y="565" width="0.0795%" height="15" fill="rgb(241,180,5)" fg:x="203" fg:w="1"/><text x="16.3867%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.27%)</title><rect x="15.0238%" y="613" width="1.2719%" height="15" fill="rgb(218,168,4)" fg:x="189" fg:w="16"/><text x="15.2738%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="16.1367%" y="597" width="0.1590%" height="15" fill="rgb(224,223,32)" fg:x="203" fg:w="2"/><text x="16.3867%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="16.1367%" y="581" width="0.1590%" height="15" fill="rgb(236,106,22)" fg:x="203" fg:w="2"/><text x="16.3867%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="16.2162%" y="565" width="0.0795%" height="15" fill="rgb(206,121,5)" fg:x="204" fg:w="1"/><text x="16.4662%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (28 samples, 2.23%)</title><rect x="14.3879%" y="629" width="2.2258%" height="15" fill="rgb(233,87,28)" fg:x="181" fg:w="28"/><text x="14.6379%" y="639.50">s..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="16.2957%" y="613" width="0.3180%" height="15" fill="rgb(236,137,17)" fg:x="205" fg:w="4"/><text x="16.5457%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="16.3752%" y="597" width="0.2385%" height="15" fill="rgb(209,183,38)" fg:x="206" fg:w="3"/><text x="16.6252%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="16.3752%" y="581" width="0.2385%" height="15" fill="rgb(206,162,44)" fg:x="206" fg:w="3"/><text x="16.6252%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="16.4547%" y="565" width="0.1590%" height="15" fill="rgb(237,70,39)" fg:x="207" fg:w="2"/><text x="16.7047%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="16.4547%" y="549" width="0.1590%" height="15" fill="rgb(212,176,5)" fg:x="207" fg:w="2"/><text x="16.7047%" y="559.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="16.4547%" y="533" width="0.1590%" height="15" fill="rgb(232,95,16)" fg:x="207" fg:w="2"/><text x="16.7047%" y="543.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (42 samples, 3.34%)</title><rect x="13.4340%" y="645" width="3.3386%" height="15" fill="rgb(219,115,35)" fg:x="169" fg:w="42"/><text x="13.6840%" y="655.50">&lt;se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="16.6137%" y="629" width="0.1590%" height="15" fill="rgb(251,67,27)" fg:x="209" fg:w="2"/><text x="16.8637%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="16.9316%" y="597" width="0.2385%" height="15" fill="rgb(222,95,40)" fg:x="213" fg:w="3"/><text x="17.1816%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.0906%" y="581" width="0.0795%" height="15" fill="rgb(250,35,16)" fg:x="215" fg:w="1"/><text x="17.3406%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="17.1701%" y="565" width="0.1590%" height="15" fill="rgb(224,86,44)" fg:x="216" fg:w="2"/><text x="17.4201%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="17.3291%" y="565" width="0.0795%" height="15" fill="rgb(237,53,53)" fg:x="218" fg:w="1"/><text x="17.5791%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.3291%" y="549" width="0.0795%" height="15" fill="rgb(208,171,33)" fg:x="218" fg:w="1"/><text x="17.5791%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.5676%" y="549" width="0.0795%" height="15" fill="rgb(222,64,27)" fg:x="221" fg:w="1"/><text x="17.8176%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.95%)</title><rect x="16.7727%" y="645" width="0.9539%" height="15" fill="rgb(221,121,35)" fg:x="211" fg:w="12"/><text x="17.0227%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.95%)</title><rect x="16.7727%" y="629" width="0.9539%" height="15" fill="rgb(228,137,42)" fg:x="211" fg:w="12"/><text x="17.0227%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.87%)</title><rect x="16.8521%" y="613" width="0.8744%" height="15" fill="rgb(227,54,21)" fg:x="212" fg:w="11"/><text x="17.1021%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="17.1701%" y="597" width="0.5564%" height="15" fill="rgb(240,168,33)" fg:x="216" fg:w="7"/><text x="17.4201%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="17.1701%" y="581" width="0.5564%" height="15" fill="rgb(243,159,6)" fg:x="216" fg:w="7"/><text x="17.4201%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="17.4086%" y="565" width="0.3180%" height="15" fill="rgb(205,211,41)" fg:x="219" fg:w="4"/><text x="17.6586%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.6471%" y="549" width="0.0795%" height="15" fill="rgb(253,30,1)" fg:x="222" fg:w="1"/><text x="17.8971%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="17.7266%" y="597" width="0.3975%" height="15" fill="rgb(226,80,18)" fg:x="223" fg:w="5"/><text x="17.9766%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="17.9650%" y="581" width="0.1590%" height="15" fill="rgb(253,156,46)" fg:x="226" fg:w="2"/><text x="18.2150%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="18.1240%" y="597" width="0.1590%" height="15" fill="rgb(248,87,27)" fg:x="228" fg:w="2"/><text x="18.3740%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="18.1240%" y="581" width="0.1590%" height="15" fill="rgb(227,122,2)" fg:x="228" fg:w="2"/><text x="18.3740%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.1240%" y="565" width="0.1590%" height="15" fill="rgb(229,94,39)" fg:x="228" fg:w="2"/><text x="18.3740%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.2035%" y="549" width="0.0795%" height="15" fill="rgb(225,173,31)" fg:x="229" fg:w="1"/><text x="18.4535%" y="559.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="18.2035%" y="533" width="0.0795%" height="15" fill="rgb(239,176,30)" fg:x="229" fg:w="1"/><text x="18.4535%" y="543.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="18.2035%" y="517" width="0.0795%" height="15" fill="rgb(212,104,21)" fg:x="229" fg:w="1"/><text x="18.4535%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="18.2830%" y="597" width="0.2385%" height="15" fill="rgb(240,209,40)" fg:x="230" fg:w="3"/><text x="18.5330%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="18.3625%" y="581" width="0.1590%" height="15" fill="rgb(234,195,5)" fg:x="231" fg:w="2"/><text x="18.6125%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.3625%" y="565" width="0.1590%" height="15" fill="rgb(238,213,1)" fg:x="231" fg:w="2"/><text x="18.6125%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.3625%" y="549" width="0.1590%" height="15" fill="rgb(235,182,54)" fg:x="231" fg:w="2"/><text x="18.6125%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="18.4420%" y="533" width="0.0795%" height="15" fill="rgb(229,50,46)" fg:x="232" fg:w="1"/><text x="18.6920%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.6010%" y="565" width="0.0795%" height="15" fill="rgb(219,145,13)" fg:x="234" fg:w="1"/><text x="18.8510%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.6804%" y="565" width="0.0795%" height="15" fill="rgb(220,226,10)" fg:x="235" fg:w="1"/><text x="18.9304%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.6804%" y="549" width="0.0795%" height="15" fill="rgb(248,47,30)" fg:x="235" fg:w="1"/><text x="18.9304%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.6804%" y="533" width="0.0795%" height="15" fill="rgb(231,209,44)" fg:x="235" fg:w="1"/><text x="18.9304%" y="543.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="18.7599%" y="565" width="0.0795%" height="15" fill="rgb(209,80,30)" fg:x="236" fg:w="1"/><text x="19.0099%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.1574%" y="517" width="0.0795%" height="15" fill="rgb(232,9,14)" fg:x="241" fg:w="1"/><text x="19.4074%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="19.1574%" y="549" width="0.2385%" height="15" fill="rgb(243,91,43)" fg:x="241" fg:w="3"/><text x="19.4074%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="19.1574%" y="533" width="0.2385%" height="15" fill="rgb(231,90,52)" fg:x="241" fg:w="3"/><text x="19.4074%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="19.2369%" y="517" width="0.1590%" height="15" fill="rgb(253,192,44)" fg:x="242" fg:w="2"/><text x="19.4869%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="19.3959%" y="533" width="0.1590%" height="15" fill="rgb(241,66,31)" fg:x="244" fg:w="2"/><text x="19.6459%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.4754%" y="517" width="0.0795%" height="15" fill="rgb(235,81,37)" fg:x="245" fg:w="1"/><text x="19.7254%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.4754%" y="501" width="0.0795%" height="15" fill="rgb(223,221,9)" fg:x="245" fg:w="1"/><text x="19.7254%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="19.5548%" y="533" width="0.1590%" height="15" fill="rgb(242,180,7)" fg:x="246" fg:w="2"/><text x="19.8048%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="19.5548%" y="517" width="0.1590%" height="15" fill="rgb(243,78,19)" fg:x="246" fg:w="2"/><text x="19.8048%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="19.5548%" y="501" width="0.1590%" height="15" fill="rgb(233,23,17)" fg:x="246" fg:w="2"/><text x="19.8048%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="19.6343%" y="485" width="0.0795%" height="15" fill="rgb(252,122,45)" fg:x="247" fg:w="1"/><text x="19.8843%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (16 samples, 1.27%)</title><rect x="18.5215%" y="597" width="1.2719%" height="15" fill="rgb(247,108,20)" fg:x="233" fg:w="16"/><text x="18.7715%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (15 samples, 1.19%)</title><rect x="18.6010%" y="581" width="1.1924%" height="15" fill="rgb(235,84,21)" fg:x="234" fg:w="15"/><text x="18.8510%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.95%)</title><rect x="18.8394%" y="565" width="0.9539%" height="15" fill="rgb(247,129,10)" fg:x="237" fg:w="12"/><text x="19.0894%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (5 samples, 0.40%)</title><rect x="19.3959%" y="549" width="0.3975%" height="15" fill="rgb(208,173,14)" fg:x="244" fg:w="5"/><text x="19.6459%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.7138%" y="533" width="0.0795%" height="15" fill="rgb(236,31,38)" fg:x="248" fg:w="1"/><text x="19.9638%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.7933%" y="581" width="0.0795%" height="15" fill="rgb(232,65,17)" fg:x="249" fg:w="1"/><text x="20.0433%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.8728%" y="517" width="0.0795%" height="15" fill="rgb(224,45,49)" fg:x="250" fg:w="1"/><text x="20.1228%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="19.8728%" y="549" width="0.1590%" height="15" fill="rgb(225,2,53)" fg:x="250" fg:w="2"/><text x="20.1228%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="19.8728%" y="533" width="0.1590%" height="15" fill="rgb(248,210,53)" fg:x="250" fg:w="2"/><text x="20.1228%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="19.9523%" y="517" width="0.0795%" height="15" fill="rgb(211,1,30)" fg:x="251" fg:w="1"/><text x="20.2023%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="20.0318%" y="549" width="0.1590%" height="15" fill="rgb(224,96,15)" fg:x="252" fg:w="2"/><text x="20.2818%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="20.0318%" y="533" width="0.1590%" height="15" fill="rgb(252,45,11)" fg:x="252" fg:w="2"/><text x="20.2818%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="20.0318%" y="517" width="0.1590%" height="15" fill="rgb(220,125,38)" fg:x="252" fg:w="2"/><text x="20.2818%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.1113%" y="501" width="0.0795%" height="15" fill="rgb(243,161,33)" fg:x="253" fg:w="1"/><text x="20.3613%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="20.2703%" y="533" width="0.3180%" height="15" fill="rgb(248,197,34)" fg:x="255" fg:w="4"/><text x="20.5203%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="20.3498%" y="517" width="0.2385%" height="15" fill="rgb(228,165,23)" fg:x="256" fg:w="3"/><text x="20.5998%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.5087%" y="501" width="0.0795%" height="15" fill="rgb(236,94,38)" fg:x="258" fg:w="1"/><text x="20.7587%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.5087%" y="485" width="0.0795%" height="15" fill="rgb(220,13,23)" fg:x="258" fg:w="1"/><text x="20.7587%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (38 samples, 3.02%)</title><rect x="17.7266%" y="629" width="3.0207%" height="15" fill="rgb(234,26,39)" fg:x="223" fg:w="38"/><text x="17.9766%" y="639.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (38 samples, 3.02%)</title><rect x="17.7266%" y="613" width="3.0207%" height="15" fill="rgb(205,117,44)" fg:x="223" fg:w="38"/><text x="17.9766%" y="623.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.95%)</title><rect x="19.7933%" y="597" width="0.9539%" height="15" fill="rgb(250,42,2)" fg:x="249" fg:w="12"/><text x="20.0433%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (11 samples, 0.87%)</title><rect x="19.8728%" y="581" width="0.8744%" height="15" fill="rgb(223,83,14)" fg:x="250" fg:w="11"/><text x="20.1228%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.87%)</title><rect x="19.8728%" y="565" width="0.8744%" height="15" fill="rgb(241,147,50)" fg:x="250" fg:w="11"/><text x="20.1228%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="20.1908%" y="549" width="0.5564%" height="15" fill="rgb(218,90,6)" fg:x="254" fg:w="7"/><text x="20.4408%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="20.5882%" y="533" width="0.1590%" height="15" fill="rgb(210,191,5)" fg:x="259" fg:w="2"/><text x="20.8382%" y="543.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="20.7472%" y="613" width="0.0795%" height="15" fill="rgb(225,139,19)" fg:x="261" fg:w="1"/><text x="20.9972%" y="623.50"></text></g><g><title>kernel::compare::any_entity_changes (40 samples, 3.18%)</title><rect x="17.7266%" y="645" width="3.1797%" height="15" fill="rgb(210,1,33)" fg:x="223" fg:w="40"/><text x="17.9766%" y="655.50">ker..</text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="20.7472%" y="629" width="0.1590%" height="15" fill="rgb(213,50,3)" fg:x="261" fg:w="2"/><text x="20.9972%" y="639.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="20.8267%" y="613" width="0.0795%" height="15" fill="rgb(234,227,4)" fg:x="262" fg:w="1"/><text x="21.0767%" y="623.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (97 samples, 7.71%)</title><rect x="13.2750%" y="677" width="7.7107%" height="15" fill="rgb(246,63,5)" fg:x="167" fg:w="97"/><text x="13.5250%" y="687.50">engine::int..</text></g><g><title>engine::session::Session::check_for_changes (96 samples, 7.63%)</title><rect x="13.3545%" y="661" width="7.6312%" height="15" fill="rgb(245,136,27)" fg:x="168" fg:w="96"/><text x="13.6045%" y="671.50">engine::se..</text></g><g><title>kernel::model::Entity::set_gid (1 samples, 0.08%)</title><rect x="20.9062%" y="645" width="0.0795%" height="15" fill="rgb(247,199,27)" fg:x="263" fg:w="1"/><text x="21.1562%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.9062%" y="629" width="0.0795%" height="15" fill="rgb(252,158,49)" fg:x="263" fg:w="1"/><text x="21.1562%" y="639.50"></text></g><g><title>engine::session::Session::flush (100 samples, 7.95%)</title><rect x="13.1161%" y="709" width="7.9491%" height="15" fill="rgb(254,73,1)" fg:x="165" fg:w="100"/><text x="13.3661%" y="719.50">engine::ses..</text></g><g><title>engine::session::Session::save_entity_changes (100 samples, 7.95%)</title><rect x="13.1161%" y="693" width="7.9491%" height="15" fill="rgb(248,93,19)" fg:x="165" fg:w="100"/><text x="13.3661%" y="703.50">engine::ses..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="20.9857%" y="677" width="0.0795%" height="15" fill="rgb(206,67,5)" fg:x="264" fg:w="1"/><text x="21.2357%" y="687.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="20.9857%" y="661" width="0.0795%" height="15" fill="rgb(209,210,4)" fg:x="264" fg:w="1"/><text x="21.2357%" y="671.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="20.9857%" y="645" width="0.0795%" height="15" fill="rgb(214,185,36)" fg:x="264" fg:w="1"/><text x="21.2357%" y="655.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="20.9857%" y="629" width="0.0795%" height="15" fill="rgb(233,191,26)" fg:x="264" fg:w="1"/><text x="21.2357%" y="639.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="20.9857%" y="613" width="0.0795%" height="15" fill="rgb(248,94,17)" fg:x="264" fg:w="1"/><text x="21.2357%" y="623.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="20.9857%" y="597" width="0.0795%" height="15" fill="rgb(250,64,4)" fg:x="264" fg:w="1"/><text x="21.2357%" y="607.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="20.9857%" y="581" width="0.0795%" height="15" fill="rgb(218,41,53)" fg:x="264" fg:w="1"/><text x="21.2357%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="21.0652%" y="709" width="0.0795%" height="15" fill="rgb(251,176,28)" fg:x="265" fg:w="1"/><text x="21.3152%" y="719.50"></text></g><g><title>kernel::model::Entity::new_blank (1 samples, 0.08%)</title><rect x="21.0652%" y="693" width="0.0795%" height="15" fill="rgb(247,22,9)" fg:x="265" fg:w="1"/><text x="21.3152%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="21.0652%" y="677" width="0.0795%" height="15" fill="rgb(218,201,14)" fg:x="265" fg:w="1"/><text x="21.3152%" y="687.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="21.0652%" y="661" width="0.0795%" height="15" fill="rgb(218,94,10)" fg:x="265" fg:w="1"/><text x="21.3152%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="21.0652%" y="645" width="0.0795%" height="15" fill="rgb(222,183,52)" fg:x="265" fg:w="1"/><text x="21.3152%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="21.1447%" y="709" width="0.0795%" height="15" fill="rgb(242,140,25)" fg:x="266" fg:w="1"/><text x="21.3947%" y="719.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="21.1447%" y="693" width="0.0795%" height="15" fill="rgb(235,197,38)" fg:x="266" fg:w="1"/><text x="21.3947%" y="703.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="21.1447%" y="677" width="0.0795%" height="15" fill="rgb(237,136,15)" fg:x="266" fg:w="1"/><text x="21.3947%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.2242%" y="597" width="0.0795%" height="15" fill="rgb(223,44,49)" fg:x="267" fg:w="1"/><text x="21.4742%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (19 samples, 1.51%)</title><rect x="21.2242%" y="693" width="1.5103%" height="15" fill="rgb(227,71,15)" fg:x="267" fg:w="19"/><text x="21.4742%" y="703.50"></text></g><g><title>engine::internal::Entities::add_entity (19 samples, 1.51%)</title><rect x="21.2242%" y="677" width="1.5103%" height="15" fill="rgb(225,153,20)" fg:x="267" fg:w="19"/><text x="21.4742%" y="687.50"></text></g><g><title>engine::internal::EntityMap::add_entity (19 samples, 1.51%)</title><rect x="21.2242%" y="661" width="1.5103%" height="15" fill="rgb(210,190,26)" fg:x="267" fg:w="19"/><text x="21.4742%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (19 samples, 1.51%)</title><rect x="21.2242%" y="645" width="1.5103%" height="15" fill="rgb(223,147,5)" fg:x="267" fg:w="19"/><text x="21.4742%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (19 samples, 1.51%)</title><rect x="21.2242%" y="629" width="1.5103%" height="15" fill="rgb(207,14,23)" fg:x="267" fg:w="19"/><text x="21.4742%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (19 samples, 1.51%)</title><rect x="21.2242%" y="613" width="1.5103%" height="15" fill="rgb(211,195,53)" fg:x="267" fg:w="19"/><text x="21.4742%" y="623.50"></text></g><g><title>__libc_malloc (18 samples, 1.43%)</title><rect x="21.3037%" y="597" width="1.4308%" height="15" fill="rgb(237,75,46)" fg:x="268" fg:w="18"/><text x="21.5537%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="22.8140%" y="677" width="0.1590%" height="15" fill="rgb(254,55,14)" fg:x="287" fg:w="2"/><text x="23.0640%" y="687.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="22.8140%" y="661" width="0.1590%" height="15" fill="rgb(230,185,30)" fg:x="287" fg:w="2"/><text x="23.0640%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="22.8140%" y="645" width="0.1590%" height="15" fill="rgb(220,14,11)" fg:x="287" fg:w="2"/><text x="23.0640%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="22.8140%" y="629" width="0.1590%" height="15" fill="rgb(215,169,44)" fg:x="287" fg:w="2"/><text x="23.0640%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="22.8140%" y="613" width="0.1590%" height="15" fill="rgb(253,203,20)" fg:x="287" fg:w="2"/><text x="23.0640%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="22.8140%" y="597" width="0.1590%" height="15" fill="rgb(229,225,17)" fg:x="287" fg:w="2"/><text x="23.0640%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="22.8140%" y="581" width="0.1590%" height="15" fill="rgb(236,76,26)" fg:x="287" fg:w="2"/><text x="23.0640%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="22.8140%" y="565" width="0.1590%" height="15" fill="rgb(234,15,30)" fg:x="287" fg:w="2"/><text x="23.0640%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="22.8140%" y="549" width="0.1590%" height="15" fill="rgb(211,113,48)" fg:x="287" fg:w="2"/><text x="23.0640%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="22.8140%" y="533" width="0.1590%" height="15" fill="rgb(221,31,36)" fg:x="287" fg:w="2"/><text x="23.0640%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="22.8140%" y="517" width="0.1590%" height="15" fill="rgb(215,118,52)" fg:x="287" fg:w="2"/><text x="23.0640%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="22.8140%" y="501" width="0.1590%" height="15" fill="rgb(241,151,27)" fg:x="287" fg:w="2"/><text x="23.0640%" y="511.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="22.8140%" y="485" width="0.1590%" height="15" fill="rgb(253,51,3)" fg:x="287" fg:w="2"/><text x="23.0640%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="22.8140%" y="469" width="0.1590%" height="15" fill="rgb(216,201,24)" fg:x="287" fg:w="2"/><text x="23.0640%" y="479.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="22.9730%" y="677" width="0.0795%" height="15" fill="rgb(231,107,4)" fg:x="289" fg:w="1"/><text x="23.2230%" y="687.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="22.9730%" y="661" width="0.0795%" height="15" fill="rgb(243,97,54)" fg:x="289" fg:w="1"/><text x="23.2230%" y="671.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="22.9730%" y="645" width="0.0795%" height="15" fill="rgb(221,32,51)" fg:x="289" fg:w="1"/><text x="23.2230%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.9730%" y="629" width="0.0795%" height="15" fill="rgb(218,171,35)" fg:x="289" fg:w="1"/><text x="23.2230%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="22.9730%" y="613" width="0.0795%" height="15" fill="rgb(214,20,53)" fg:x="289" fg:w="1"/><text x="23.2230%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="22.9730%" y="597" width="0.0795%" height="15" fill="rgb(239,9,52)" fg:x="289" fg:w="1"/><text x="23.2230%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.9730%" y="581" width="0.0795%" height="15" fill="rgb(215,114,45)" fg:x="289" fg:w="1"/><text x="23.2230%" y="591.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="22.9730%" y="565" width="0.0795%" height="15" fill="rgb(208,118,9)" fg:x="289" fg:w="1"/><text x="23.2230%" y="575.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="23.0525%" y="661" width="0.0795%" height="15" fill="rgb(235,7,39)" fg:x="290" fg:w="1"/><text x="23.3025%" y="671.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="23.1320%" y="661" width="0.0795%" height="15" fill="rgb(243,225,15)" fg:x="291" fg:w="1"/><text x="23.3820%" y="671.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="23.1320%" y="645" width="0.0795%" height="15" fill="rgb(225,216,18)" fg:x="291" fg:w="1"/><text x="23.3820%" y="655.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="23.1320%" y="629" width="0.0795%" height="15" fill="rgb(233,36,38)" fg:x="291" fg:w="1"/><text x="23.3820%" y="639.50"></text></g><g><title>plugins_core::build::Build::holding (26 samples, 2.07%)</title><rect x="21.2242%" y="709" width="2.0668%" height="15" fill="rgb(239,88,23)" fg:x="267" fg:w="26"/><text x="21.4742%" y="719.50">p..</text></g><g><title>plugins_core::tools::set_container (7 samples, 0.56%)</title><rect x="22.7345%" y="693" width="0.5564%" height="15" fill="rgb(219,181,35)" fg:x="286" fg:w="7"/><text x="22.9845%" y="703.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="23.0525%" y="677" width="0.2385%" height="15" fill="rgb(215,18,46)" fg:x="290" fg:w="3"/><text x="23.3025%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="23.2114%" y="661" width="0.0795%" height="15" fill="rgb(241,38,11)" fg:x="292" fg:w="1"/><text x="23.4614%" y="671.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="23.2114%" y="645" width="0.0795%" height="15" fill="rgb(248,169,45)" fg:x="292" fg:w="1"/><text x="23.4614%" y="655.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="23.2114%" y="629" width="0.0795%" height="15" fill="rgb(239,50,49)" fg:x="292" fg:w="1"/><text x="23.4614%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="23.2114%" y="613" width="0.0795%" height="15" fill="rgb(231,96,31)" fg:x="292" fg:w="1"/><text x="23.4614%" y="623.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="23.2114%" y="597" width="0.0795%" height="15" fill="rgb(224,193,37)" fg:x="292" fg:w="1"/><text x="23.4614%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="23.2114%" y="581" width="0.0795%" height="15" fill="rgb(227,153,50)" fg:x="292" fg:w="1"/><text x="23.4614%" y="591.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="23.2114%" y="565" width="0.0795%" height="15" fill="rgb(249,228,3)" fg:x="292" fg:w="1"/><text x="23.4614%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="23.2114%" y="549" width="0.0795%" height="15" fill="rgb(219,164,43)" fg:x="292" fg:w="1"/><text x="23.4614%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.2114%" y="533" width="0.0795%" height="15" fill="rgb(216,45,41)" fg:x="292" fg:w="1"/><text x="23.4614%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.2114%" y="517" width="0.0795%" height="15" fill="rgb(210,226,51)" fg:x="292" fg:w="1"/><text x="23.4614%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.2114%" y="501" width="0.0795%" height="15" fill="rgb(209,117,49)" fg:x="292" fg:w="1"/><text x="23.4614%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.2114%" y="485" width="0.0795%" height="15" fill="rgb(206,196,24)" fg:x="292" fg:w="1"/><text x="23.4614%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.2114%" y="469" width="0.0795%" height="15" fill="rgb(253,218,3)" fg:x="292" fg:w="1"/><text x="23.4614%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.2114%" y="453" width="0.0795%" height="15" fill="rgb(252,166,2)" fg:x="292" fg:w="1"/><text x="23.4614%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.2114%" y="437" width="0.0795%" height="15" fill="rgb(236,218,26)" fg:x="292" fg:w="1"/><text x="23.4614%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="23.2909%" y="677" width="0.0795%" height="15" fill="rgb(254,84,19)" fg:x="293" fg:w="1"/><text x="23.5409%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="23.2909%" y="661" width="0.0795%" height="15" fill="rgb(219,137,29)" fg:x="293" fg:w="1"/><text x="23.5409%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="23.2909%" y="645" width="0.0795%" height="15" fill="rgb(227,47,52)" fg:x="293" fg:w="1"/><text x="23.5409%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="23.2909%" y="629" width="0.0795%" height="15" fill="rgb(229,167,24)" fg:x="293" fg:w="1"/><text x="23.5409%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.2909%" y="613" width="0.0795%" height="15" fill="rgb(233,164,1)" fg:x="293" fg:w="1"/><text x="23.5409%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.2909%" y="597" width="0.0795%" height="15" fill="rgb(218,88,48)" fg:x="293" fg:w="1"/><text x="23.5409%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="23.2909%" y="581" width="0.0795%" height="15" fill="rgb(226,214,24)" fg:x="293" fg:w="1"/><text x="23.5409%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="23.2909%" y="565" width="0.0795%" height="15" fill="rgb(233,29,12)" fg:x="293" fg:w="1"/><text x="23.5409%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.2909%" y="549" width="0.0795%" height="15" fill="rgb(219,120,34)" fg:x="293" fg:w="1"/><text x="23.5409%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.2909%" y="533" width="0.0795%" height="15" fill="rgb(226,78,44)" fg:x="293" fg:w="1"/><text x="23.5409%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.2909%" y="517" width="0.0795%" height="15" fill="rgb(240,15,48)" fg:x="293" fg:w="1"/><text x="23.5409%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="23.2909%" y="501" width="0.0795%" height="15" fill="rgb(253,176,7)" fg:x="293" fg:w="1"/><text x="23.5409%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="23.2909%" y="485" width="0.0795%" height="15" fill="rgb(206,166,28)" fg:x="293" fg:w="1"/><text x="23.5409%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="23.2909%" y="469" width="0.0795%" height="15" fill="rgb(241,53,51)" fg:x="293" fg:w="1"/><text x="23.5409%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="23.2909%" y="453" width="0.0795%" height="15" fill="rgb(249,112,30)" fg:x="293" fg:w="1"/><text x="23.5409%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="23.2909%" y="437" width="0.0795%" height="15" fill="rgb(217,85,30)" fg:x="293" fg:w="1"/><text x="23.5409%" y="447.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="23.2909%" y="709" width="0.1590%" height="15" fill="rgb(233,49,7)" fg:x="293" fg:w="2"/><text x="23.5409%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="23.2909%" y="693" width="0.1590%" height="15" fill="rgb(234,109,9)" fg:x="293" fg:w="2"/><text x="23.5409%" y="703.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="23.3704%" y="677" width="0.0795%" height="15" fill="rgb(253,95,22)" fg:x="294" fg:w="1"/><text x="23.6204%" y="687.50"></text></g><g><title>kernel::model::Entity::gid (1 samples, 0.08%)</title><rect x="23.3704%" y="661" width="0.0795%" height="15" fill="rgb(233,176,25)" fg:x="294" fg:w="1"/><text x="23.6204%" y="671.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="23.3704%" y="645" width="0.0795%" height="15" fill="rgb(236,33,39)" fg:x="294" fg:w="1"/><text x="23.6204%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="23.4499%" y="677" width="0.0795%" height="15" fill="rgb(223,226,42)" fg:x="295" fg:w="1"/><text x="23.6999%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="23.4499%" y="661" width="0.0795%" height="15" fill="rgb(216,99,33)" fg:x="295" fg:w="1"/><text x="23.6999%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="23.4499%" y="645" width="0.0795%" height="15" fill="rgb(235,84,23)" fg:x="295" fg:w="1"/><text x="23.6999%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="23.4499%" y="629" width="0.0795%" height="15" fill="rgb(232,2,27)" fg:x="295" fg:w="1"/><text x="23.6999%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.4499%" y="613" width="0.0795%" height="15" fill="rgb(241,23,22)" fg:x="295" fg:w="1"/><text x="23.6999%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.4499%" y="597" width="0.0795%" height="15" fill="rgb(211,73,27)" fg:x="295" fg:w="1"/><text x="23.6999%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="23.4499%" y="581" width="0.0795%" height="15" fill="rgb(235,109,49)" fg:x="295" fg:w="1"/><text x="23.6999%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="23.4499%" y="565" width="0.0795%" height="15" fill="rgb(230,99,29)" fg:x="295" fg:w="1"/><text x="23.6999%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.4499%" y="549" width="0.0795%" height="15" fill="rgb(245,199,7)" fg:x="295" fg:w="1"/><text x="23.6999%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.4499%" y="533" width="0.0795%" height="15" fill="rgb(217,179,10)" fg:x="295" fg:w="1"/><text x="23.6999%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.4499%" y="517" width="0.0795%" height="15" fill="rgb(254,99,47)" fg:x="295" fg:w="1"/><text x="23.6999%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.4499%" y="501" width="0.0795%" height="15" fill="rgb(251,121,7)" fg:x="295" fg:w="1"/><text x="23.6999%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="23.4499%" y="485" width="0.0795%" height="15" fill="rgb(250,177,26)" fg:x="295" fg:w="1"/><text x="23.6999%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="23.4499%" y="469" width="0.0795%" height="15" fill="rgb(232,88,15)" fg:x="295" fg:w="1"/><text x="23.6999%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="23.4499%" y="453" width="0.0795%" height="15" fill="rgb(251,54,54)" fg:x="295" fg:w="1"/><text x="23.6999%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="23.4499%" y="437" width="0.0795%" height="15" fill="rgb(208,177,15)" fg:x="295" fg:w="1"/><text x="23.6999%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="23.4499%" y="421" width="0.0795%" height="15" fill="rgb(205,97,32)" fg:x="295" fg:w="1"/><text x="23.6999%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="23.4499%" y="405" width="0.0795%" height="15" fill="rgb(217,192,13)" fg:x="295" fg:w="1"/><text x="23.6999%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="23.4499%" y="389" width="0.0795%" height="15" fill="rgb(215,163,41)" fg:x="295" fg:w="1"/><text x="23.6999%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="23.4499%" y="373" width="0.0795%" height="15" fill="rgb(246,83,29)" fg:x="295" fg:w="1"/><text x="23.6999%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="23.4499%" y="357" width="0.0795%" height="15" fill="rgb(219,2,45)" fg:x="295" fg:w="1"/><text x="23.6999%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="23.4499%" y="341" width="0.0795%" height="15" fill="rgb(242,215,33)" fg:x="295" fg:w="1"/><text x="23.6999%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="23.4499%" y="325" width="0.0795%" height="15" fill="rgb(217,1,6)" fg:x="295" fg:w="1"/><text x="23.6999%" y="335.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="23.4499%" y="309" width="0.0795%" height="15" fill="rgb(207,85,52)" fg:x="295" fg:w="1"/><text x="23.6999%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="23.4499%" y="293" width="0.0795%" height="15" fill="rgb(231,171,19)" fg:x="295" fg:w="1"/><text x="23.6999%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.5294%" y="677" width="0.0795%" height="15" fill="rgb(207,128,4)" fg:x="296" fg:w="1"/><text x="23.7794%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.6089%" y="645" width="0.0795%" height="15" fill="rgb(219,208,4)" fg:x="297" fg:w="1"/><text x="23.8589%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.6089%" y="629" width="0.0795%" height="15" fill="rgb(235,161,42)" fg:x="297" fg:w="1"/><text x="23.8589%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.6089%" y="613" width="0.0795%" height="15" fill="rgb(247,218,18)" fg:x="297" fg:w="1"/><text x="23.8589%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.6089%" y="597" width="0.0795%" height="15" fill="rgb(232,114,51)" fg:x="297" fg:w="1"/><text x="23.8589%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.6089%" y="581" width="0.0795%" height="15" fill="rgb(222,95,3)" fg:x="297" fg:w="1"/><text x="23.8589%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.6089%" y="565" width="0.0795%" height="15" fill="rgb(240,65,29)" fg:x="297" fg:w="1"/><text x="23.8589%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.6089%" y="549" width="0.0795%" height="15" fill="rgb(249,209,20)" fg:x="297" fg:w="1"/><text x="23.8589%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.6089%" y="533" width="0.0795%" height="15" fill="rgb(241,48,37)" fg:x="297" fg:w="1"/><text x="23.8589%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.6089%" y="517" width="0.0795%" height="15" fill="rgb(230,140,42)" fg:x="297" fg:w="1"/><text x="23.8589%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.6089%" y="501" width="0.0795%" height="15" fill="rgb(230,176,45)" fg:x="297" fg:w="1"/><text x="23.8589%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.6089%" y="485" width="0.0795%" height="15" fill="rgb(245,112,21)" fg:x="297" fg:w="1"/><text x="23.8589%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.6089%" y="469" width="0.0795%" height="15" fill="rgb(207,183,35)" fg:x="297" fg:w="1"/><text x="23.8589%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="23.4499%" y="693" width="0.3180%" height="15" fill="rgb(227,44,33)" fg:x="295" fg:w="4"/><text x="23.6999%" y="703.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="23.6089%" y="677" width="0.1590%" height="15" fill="rgb(246,120,21)" fg:x="297" fg:w="2"/><text x="23.8589%" y="687.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="23.6089%" y="661" width="0.1590%" height="15" fill="rgb(235,57,52)" fg:x="297" fg:w="2"/><text x="23.8589%" y="671.50"></text></g><g><title>kernel::model::Entity::set_gid (1 samples, 0.08%)</title><rect x="23.6884%" y="645" width="0.0795%" height="15" fill="rgb(238,84,10)" fg:x="298" fg:w="1"/><text x="23.9384%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.6884%" y="629" width="0.0795%" height="15" fill="rgb(251,200,32)" fg:x="298" fg:w="1"/><text x="23.9384%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.6884%" y="613" width="0.0795%" height="15" fill="rgb(247,159,13)" fg:x="298" fg:w="1"/><text x="23.9384%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="23.7679%" y="693" width="0.0795%" height="15" fill="rgb(238,64,4)" fg:x="299" fg:w="1"/><text x="24.0179%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="23.7679%" y="677" width="0.0795%" height="15" fill="rgb(221,131,51)" fg:x="299" fg:w="1"/><text x="24.0179%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.7679%" y="661" width="0.0795%" height="15" fill="rgb(242,5,29)" fg:x="299" fg:w="1"/><text x="24.0179%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="23.8474%" y="677" width="0.0795%" height="15" fill="rgb(214,130,32)" fg:x="300" fg:w="1"/><text x="24.0974%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="23.8474%" y="661" width="0.0795%" height="15" fill="rgb(244,210,16)" fg:x="300" fg:w="1"/><text x="24.0974%" y="671.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.9269%" y="661" width="0.0795%" height="15" fill="rgb(234,48,26)" fg:x="301" fg:w="1"/><text x="24.1769%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.9269%" y="645" width="0.0795%" height="15" fill="rgb(231,82,38)" fg:x="301" fg:w="1"/><text x="24.1769%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="23.9269%" y="677" width="0.1590%" height="15" fill="rgb(254,128,41)" fg:x="301" fg:w="2"/><text x="24.1769%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="24.0064%" y="661" width="0.0795%" height="15" fill="rgb(212,73,49)" fg:x="302" fg:w="1"/><text x="24.2564%" y="671.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="24.0859%" y="645" width="0.0795%" height="15" fill="rgb(205,62,54)" fg:x="303" fg:w="1"/><text x="24.3359%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.0859%" y="629" width="0.0795%" height="15" fill="rgb(228,0,8)" fg:x="303" fg:w="1"/><text x="24.3359%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="24.0859%" y="613" width="0.0795%" height="15" fill="rgb(251,28,17)" fg:x="303" fg:w="1"/><text x="24.3359%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="24.0859%" y="597" width="0.0795%" height="15" fill="rgb(238,105,27)" fg:x="303" fg:w="1"/><text x="24.3359%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.0859%" y="581" width="0.0795%" height="15" fill="rgb(237,216,33)" fg:x="303" fg:w="1"/><text x="24.3359%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.0859%" y="565" width="0.0795%" height="15" fill="rgb(229,228,25)" fg:x="303" fg:w="1"/><text x="24.3359%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.0859%" y="549" width="0.0795%" height="15" fill="rgb(233,75,23)" fg:x="303" fg:w="1"/><text x="24.3359%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="24.0859%" y="533" width="0.0795%" height="15" fill="rgb(231,207,16)" fg:x="303" fg:w="1"/><text x="24.3359%" y="543.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="24.0859%" y="677" width="0.1590%" height="15" fill="rgb(231,191,45)" fg:x="303" fg:w="2"/><text x="24.3359%" y="687.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="24.0859%" y="661" width="0.1590%" height="15" fill="rgb(224,133,17)" fg:x="303" fg:w="2"/><text x="24.3359%" y="671.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="24.1653%" y="645" width="0.0795%" height="15" fill="rgb(209,178,27)" fg:x="304" fg:w="1"/><text x="24.4153%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.1653%" y="629" width="0.0795%" height="15" fill="rgb(218,37,11)" fg:x="304" fg:w="1"/><text x="24.4153%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="24.1653%" y="613" width="0.0795%" height="15" fill="rgb(251,226,25)" fg:x="304" fg:w="1"/><text x="24.4153%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.1653%" y="597" width="0.0795%" height="15" fill="rgb(209,222,27)" fg:x="304" fg:w="1"/><text x="24.4153%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.1653%" y="581" width="0.0795%" height="15" fill="rgb(238,22,21)" fg:x="304" fg:w="1"/><text x="24.4153%" y="591.50"></text></g><g><title>plugins_core::build::Build::occupying (11 samples, 0.87%)</title><rect x="23.4499%" y="709" width="0.8744%" height="15" fill="rgb(233,161,25)" fg:x="295" fg:w="11"/><text x="23.6999%" y="719.50"></text></g><g><title>plugins_core::tools::set_occupying (6 samples, 0.48%)</title><rect x="23.8474%" y="693" width="0.4769%" height="15" fill="rgb(226,122,53)" fg:x="300" fg:w="6"/><text x="24.0974%" y="703.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (1 samples, 0.08%)</title><rect x="24.2448%" y="677" width="0.0795%" height="15" fill="rgb(220,123,17)" fg:x="305" fg:w="1"/><text x="24.4948%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="24.2448%" y="661" width="0.0795%" height="15" fill="rgb(230,224,35)" fg:x="305" fg:w="1"/><text x="24.4948%" y="671.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="24.2448%" y="645" width="0.0795%" height="15" fill="rgb(246,83,8)" fg:x="305" fg:w="1"/><text x="24.4948%" y="655.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="24.2448%" y="629" width="0.0795%" height="15" fill="rgb(230,214,17)" fg:x="305" fg:w="1"/><text x="24.4948%" y="639.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (154 samples, 12.24%)</title><rect x="12.1622%" y="725" width="12.2417%" height="15" fill="rgb(222,97,18)" fg:x="153" fg:w="154"/><text x="12.4122%" y="735.50">plugins_core::buil..</text></g><g><title>plugins_core::build::Build::with_username (1 samples, 0.08%)</title><rect x="24.3243%" y="709" width="0.0795%" height="15" fill="rgb(206,79,1)" fg:x="306" fg:w="1"/><text x="24.5743%" y="719.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="24.3243%" y="693" width="0.0795%" height="15" fill="rgb(214,121,34)" fg:x="306" fg:w="1"/><text x="24.5743%" y="703.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="24.3243%" y="677" width="0.0795%" height="15" fill="rgb(249,199,46)" fg:x="306" fg:w="1"/><text x="24.5743%" y="687.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="24.3243%" y="661" width="0.0795%" height="15" fill="rgb(214,222,46)" fg:x="306" fg:w="1"/><text x="24.5743%" y="671.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="24.3243%" y="645" width="0.0795%" height="15" fill="rgb(248,168,30)" fg:x="306" fg:w="1"/><text x="24.5743%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.3243%" y="629" width="0.0795%" height="15" fill="rgb(226,14,28)" fg:x="306" fg:w="1"/><text x="24.5743%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="24.3243%" y="613" width="0.0795%" height="15" fill="rgb(253,123,1)" fg:x="306" fg:w="1"/><text x="24.5743%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.3243%" y="597" width="0.0795%" height="15" fill="rgb(225,24,42)" fg:x="306" fg:w="1"/><text x="24.5743%" y="607.50"></text></g><g><title>kernel::model::Entity::new_blank (1 samples, 0.08%)</title><rect x="24.4833%" y="693" width="0.0795%" height="15" fill="rgb(216,161,37)" fg:x="308" fg:w="1"/><text x="24.7333%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="24.4833%" y="677" width="0.0795%" height="15" fill="rgb(251,164,26)" fg:x="308" fg:w="1"/><text x="24.7333%" y="687.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="24.4833%" y="661" width="0.0795%" height="15" fill="rgb(219,177,3)" fg:x="308" fg:w="1"/><text x="24.7333%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="24.4833%" y="645" width="0.0795%" height="15" fill="rgb(222,65,0)" fg:x="308" fg:w="1"/><text x="24.7333%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="24.4833%" y="629" width="0.0795%" height="15" fill="rgb(223,69,54)" fg:x="308" fg:w="1"/><text x="24.7333%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="24.4833%" y="613" width="0.0795%" height="15" fill="rgb(235,30,27)" fg:x="308" fg:w="1"/><text x="24.7333%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="24.4833%" y="597" width="0.0795%" height="15" fill="rgb(220,183,50)" fg:x="308" fg:w="1"/><text x="24.7333%" y="607.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="24.4833%" y="581" width="0.0795%" height="15" fill="rgb(248,198,15)" fg:x="308" fg:w="1"/><text x="24.7333%" y="591.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="24.4833%" y="565" width="0.0795%" height="15" fill="rgb(222,211,4)" fg:x="308" fg:w="1"/><text x="24.7333%" y="575.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="24.4833%" y="549" width="0.0795%" height="15" fill="rgb(214,102,34)" fg:x="308" fg:w="1"/><text x="24.7333%" y="559.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (3 samples, 0.24%)</title><rect x="24.4038%" y="725" width="0.2385%" height="15" fill="rgb(245,92,5)" fg:x="307" fg:w="3"/><text x="24.6538%" y="735.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="24.4038%" y="709" width="0.2385%" height="15" fill="rgb(252,72,51)" fg:x="307" fg:w="3"/><text x="24.6538%" y="719.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="24.5628%" y="693" width="0.0795%" height="15" fill="rgb(252,208,19)" fg:x="309" fg:w="1"/><text x="24.8128%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.5628%" y="677" width="0.0795%" height="15" fill="rgb(211,69,7)" fg:x="309" fg:w="1"/><text x="24.8128%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.5628%" y="661" width="0.0795%" height="15" fill="rgb(211,27,16)" fg:x="309" fg:w="1"/><text x="24.8128%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.5628%" y="645" width="0.0795%" height="15" fill="rgb(219,216,14)" fg:x="309" fg:w="1"/><text x="24.8128%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.5628%" y="629" width="0.0795%" height="15" fill="rgb(219,71,8)" fg:x="309" fg:w="1"/><text x="24.8128%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.5628%" y="613" width="0.0795%" height="15" fill="rgb(223,170,53)" fg:x="309" fg:w="1"/><text x="24.8128%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.5628%" y="597" width="0.0795%" height="15" fill="rgb(246,21,26)" fg:x="309" fg:w="1"/><text x="24.8128%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.5628%" y="581" width="0.0795%" height="15" fill="rgb(248,20,46)" fg:x="309" fg:w="1"/><text x="24.8128%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.5628%" y="565" width="0.0795%" height="15" fill="rgb(252,94,11)" fg:x="309" fg:w="1"/><text x="24.8128%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.5628%" y="549" width="0.0795%" height="15" fill="rgb(236,163,8)" fg:x="309" fg:w="1"/><text x="24.8128%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.5628%" y="533" width="0.0795%" height="15" fill="rgb(217,221,45)" fg:x="309" fg:w="1"/><text x="24.8128%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.5628%" y="517" width="0.0795%" height="15" fill="rgb(238,38,17)" fg:x="309" fg:w="1"/><text x="24.8128%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.5628%" y="501" width="0.0795%" height="15" fill="rgb(242,210,23)" fg:x="309" fg:w="1"/><text x="24.8128%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="24.6423%" y="677" width="0.0795%" height="15" fill="rgb(250,86,53)" fg:x="310" fg:w="1"/><text x="24.8923%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="24.6423%" y="661" width="0.0795%" height="15" fill="rgb(223,168,25)" fg:x="310" fg:w="1"/><text x="24.8923%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="24.6423%" y="645" width="0.0795%" height="15" fill="rgb(251,189,4)" fg:x="310" fg:w="1"/><text x="24.8923%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="24.6423%" y="629" width="0.0795%" height="15" fill="rgb(245,19,28)" fg:x="310" fg:w="1"/><text x="24.8923%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="24.6423%" y="613" width="0.0795%" height="15" fill="rgb(207,10,34)" fg:x="310" fg:w="1"/><text x="24.8923%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="24.6423%" y="597" width="0.0795%" height="15" fill="rgb(235,153,31)" fg:x="310" fg:w="1"/><text x="24.8923%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="24.6423%" y="581" width="0.0795%" height="15" fill="rgb(228,72,37)" fg:x="310" fg:w="1"/><text x="24.8923%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="24.6423%" y="565" width="0.0795%" height="15" fill="rgb(215,15,16)" fg:x="310" fg:w="1"/><text x="24.8923%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="24.6423%" y="549" width="0.0795%" height="15" fill="rgb(250,119,29)" fg:x="310" fg:w="1"/><text x="24.8923%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.6423%" y="533" width="0.0795%" height="15" fill="rgb(214,59,1)" fg:x="310" fg:w="1"/><text x="24.8923%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.6423%" y="517" width="0.0795%" height="15" fill="rgb(223,109,25)" fg:x="310" fg:w="1"/><text x="24.8923%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="24.6423%" y="501" width="0.0795%" height="15" fill="rgb(230,198,22)" fg:x="310" fg:w="1"/><text x="24.8923%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="24.6423%" y="485" width="0.0795%" height="15" fill="rgb(245,184,46)" fg:x="310" fg:w="1"/><text x="24.8923%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="24.6423%" y="469" width="0.0795%" height="15" fill="rgb(253,73,16)" fg:x="310" fg:w="1"/><text x="24.8923%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="24.6423%" y="453" width="0.0795%" height="15" fill="rgb(206,94,45)" fg:x="310" fg:w="1"/><text x="24.8923%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="24.6423%" y="437" width="0.0795%" height="15" fill="rgb(236,83,27)" fg:x="310" fg:w="1"/><text x="24.8923%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="24.6423%" y="421" width="0.0795%" height="15" fill="rgb(220,196,8)" fg:x="310" fg:w="1"/><text x="24.8923%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="24.6423%" y="405" width="0.0795%" height="15" fill="rgb(254,185,14)" fg:x="310" fg:w="1"/><text x="24.8923%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="24.6423%" y="389" width="0.0795%" height="15" fill="rgb(226,50,22)" fg:x="310" fg:w="1"/><text x="24.8923%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="24.6423%" y="373" width="0.0795%" height="15" fill="rgb(253,147,0)" fg:x="310" fg:w="1"/><text x="24.8923%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.6423%" y="357" width="0.0795%" height="15" fill="rgb(252,46,33)" fg:x="310" fg:w="1"/><text x="24.8923%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="24.6423%" y="693" width="0.1590%" height="15" fill="rgb(242,22,54)" fg:x="310" fg:w="2"/><text x="24.8923%" y="703.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="24.7218%" y="677" width="0.0795%" height="15" fill="rgb(223,178,32)" fg:x="311" fg:w="1"/><text x="24.9718%" y="687.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (3 samples, 0.24%)</title><rect x="24.6423%" y="725" width="0.2385%" height="15" fill="rgb(214,106,53)" fg:x="310" fg:w="3"/><text x="24.8923%" y="735.50"></text></g><g><title>plugins_core::build::QuickThing::make (3 samples, 0.24%)</title><rect x="24.6423%" y="709" width="0.2385%" height="15" fill="rgb(232,65,50)" fg:x="310" fg:w="3"/><text x="24.8923%" y="719.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="24.8013%" y="693" width="0.0795%" height="15" fill="rgb(231,110,28)" fg:x="312" fg:w="1"/><text x="25.0513%" y="703.50"></text></g><g><title>kernel::model::Entity::new_blank (1 samples, 0.08%)</title><rect x="24.8013%" y="677" width="0.0795%" height="15" fill="rgb(216,71,40)" fg:x="312" fg:w="1"/><text x="25.0513%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="24.8013%" y="661" width="0.0795%" height="15" fill="rgb(229,89,53)" fg:x="312" fg:w="1"/><text x="25.0513%" y="671.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="24.8013%" y="645" width="0.0795%" height="15" fill="rgb(210,124,14)" fg:x="312" fg:w="1"/><text x="25.0513%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="24.8013%" y="629" width="0.0795%" height="15" fill="rgb(236,213,6)" fg:x="312" fg:w="1"/><text x="25.0513%" y="639.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="24.8013%" y="613" width="0.0795%" height="15" fill="rgb(228,41,5)" fg:x="312" fg:w="1"/><text x="25.0513%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="24.8013%" y="597" width="0.0795%" height="15" fill="rgb(221,167,25)" fg:x="312" fg:w="1"/><text x="25.0513%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.8013%" y="581" width="0.0795%" height="15" fill="rgb(228,144,37)" fg:x="312" fg:w="1"/><text x="25.0513%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.8013%" y="565" width="0.0795%" height="15" fill="rgb(227,189,38)" fg:x="312" fg:w="1"/><text x="25.0513%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.8013%" y="549" width="0.0795%" height="15" fill="rgb(218,8,2)" fg:x="312" fg:w="1"/><text x="25.0513%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.8013%" y="533" width="0.0795%" height="15" fill="rgb(209,61,28)" fg:x="312" fg:w="1"/><text x="25.0513%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.8013%" y="517" width="0.0795%" height="15" fill="rgb(233,140,39)" fg:x="312" fg:w="1"/><text x="25.0513%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.8013%" y="501" width="0.0795%" height="15" fill="rgb(251,66,48)" fg:x="312" fg:w="1"/><text x="25.0513%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.8013%" y="485" width="0.0795%" height="15" fill="rgb(210,44,45)" fg:x="312" fg:w="1"/><text x="25.0513%" y="495.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (263 samples, 20.91%)</title><rect x="4.0541%" y="741" width="20.9062%" height="15" fill="rgb(214,136,46)" fg:x="51" fg:w="263"/><text x="4.3041%" y="751.50">&lt;tests::HoldingKeyInVessel as tes..</text></g><g><title>plugins_core::build::BuildSurroundings::route (1 samples, 0.08%)</title><rect x="24.8808%" y="725" width="0.0795%" height="15" fill="rgb(207,130,50)" fg:x="313" fg:w="1"/><text x="25.1308%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.8808%" y="709" width="0.0795%" height="15" fill="rgb(228,102,49)" fg:x="313" fg:w="1"/><text x="25.1308%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="24.9603%" y="725" width="0.1590%" height="15" fill="rgb(253,55,1)" fg:x="314" fg:w="2"/><text x="25.2103%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="25.0397%" y="709" width="0.0795%" height="15" fill="rgb(238,222,9)" fg:x="315" fg:w="1"/><text x="25.2897%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.0397%" y="693" width="0.0795%" height="15" fill="rgb(246,99,6)" fg:x="315" fg:w="1"/><text x="25.2897%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="25.0397%" y="677" width="0.0795%" height="15" fill="rgb(219,110,26)" fg:x="315" fg:w="1"/><text x="25.2897%" y="687.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="25.0397%" y="661" width="0.0795%" height="15" fill="rgb(239,160,33)" fg:x="315" fg:w="1"/><text x="25.2897%" y="671.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="25.0397%" y="645" width="0.0795%" height="15" fill="rgb(220,202,23)" fg:x="315" fg:w="1"/><text x="25.2897%" y="655.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="25.0397%" y="629" width="0.0795%" height="15" fill="rgb(208,80,26)" fg:x="315" fg:w="1"/><text x="25.2897%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.0397%" y="613" width="0.0795%" height="15" fill="rgb(243,85,7)" fg:x="315" fg:w="1"/><text x="25.2897%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="25.0397%" y="597" width="0.0795%" height="15" fill="rgb(228,77,47)" fg:x="315" fg:w="1"/><text x="25.2897%" y="607.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="25.0397%" y="581" width="0.0795%" height="15" fill="rgb(212,226,8)" fg:x="315" fg:w="1"/><text x="25.2897%" y="591.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="25.0397%" y="565" width="0.0795%" height="15" fill="rgb(241,120,54)" fg:x="315" fg:w="1"/><text x="25.2897%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.0397%" y="549" width="0.0795%" height="15" fill="rgb(226,80,16)" fg:x="315" fg:w="1"/><text x="25.2897%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.0397%" y="533" width="0.0795%" height="15" fill="rgb(240,76,13)" fg:x="315" fg:w="1"/><text x="25.2897%" y="543.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="25.0397%" y="517" width="0.0795%" height="15" fill="rgb(252,74,8)" fg:x="315" fg:w="1"/><text x="25.2897%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="25.0397%" y="501" width="0.0795%" height="15" fill="rgb(244,155,2)" fg:x="315" fg:w="1"/><text x="25.2897%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="25.0397%" y="485" width="0.0795%" height="15" fill="rgb(215,81,35)" fg:x="315" fg:w="1"/><text x="25.2897%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="25.0397%" y="469" width="0.0795%" height="15" fill="rgb(206,55,2)" fg:x="315" fg:w="1"/><text x="25.2897%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="25.0397%" y="453" width="0.0795%" height="15" fill="rgb(231,2,34)" fg:x="315" fg:w="1"/><text x="25.2897%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="25.1192%" y="709" width="0.2385%" height="15" fill="rgb(242,176,48)" fg:x="316" fg:w="3"/><text x="25.3692%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="25.1987%" y="693" width="0.1590%" height="15" fill="rgb(249,31,36)" fg:x="317" fg:w="2"/><text x="25.4487%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="25.2782%" y="677" width="0.0795%" height="15" fill="rgb(205,18,17)" fg:x="318" fg:w="1"/><text x="25.5282%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.3577%" y="709" width="0.0795%" height="15" fill="rgb(254,130,5)" fg:x="319" fg:w="1"/><text x="25.6077%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="25.4372%" y="693" width="0.0795%" height="15" fill="rgb(229,42,45)" fg:x="320" fg:w="1"/><text x="25.6872%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="25.4372%" y="677" width="0.0795%" height="15" fill="rgb(245,95,25)" fg:x="320" fg:w="1"/><text x="25.6872%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.4372%" y="661" width="0.0795%" height="15" fill="rgb(249,193,38)" fg:x="320" fg:w="1"/><text x="25.6872%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.4372%" y="645" width="0.0795%" height="15" fill="rgb(241,140,43)" fg:x="320" fg:w="1"/><text x="25.6872%" y="655.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="25.4372%" y="709" width="0.1590%" height="15" fill="rgb(245,78,48)" fg:x="320" fg:w="2"/><text x="25.6872%" y="719.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="25.5167%" y="693" width="0.0795%" height="15" fill="rgb(214,92,39)" fg:x="321" fg:w="1"/><text x="25.7667%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="25.5962%" y="693" width="0.0795%" height="15" fill="rgb(211,189,14)" fg:x="322" fg:w="1"/><text x="25.8462%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.5962%" y="677" width="0.0795%" height="15" fill="rgb(218,7,24)" fg:x="322" fg:w="1"/><text x="25.8462%" y="687.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="25.5962%" y="661" width="0.0795%" height="15" fill="rgb(224,200,49)" fg:x="322" fg:w="1"/><text x="25.8462%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="25.6757%" y="677" width="0.0795%" height="15" fill="rgb(218,210,14)" fg:x="323" fg:w="1"/><text x="25.9257%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="25.6757%" y="661" width="0.0795%" height="15" fill="rgb(234,142,31)" fg:x="323" fg:w="1"/><text x="25.9257%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.6757%" y="645" width="0.0795%" height="15" fill="rgb(227,165,2)" fg:x="323" fg:w="1"/><text x="25.9257%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="25.6757%" y="629" width="0.0795%" height="15" fill="rgb(232,44,46)" fg:x="323" fg:w="1"/><text x="25.9257%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.6757%" y="613" width="0.0795%" height="15" fill="rgb(236,149,47)" fg:x="323" fg:w="1"/><text x="25.9257%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="25.6757%" y="597" width="0.0795%" height="15" fill="rgb(227,45,31)" fg:x="323" fg:w="1"/><text x="25.9257%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.6757%" y="581" width="0.0795%" height="15" fill="rgb(240,176,51)" fg:x="323" fg:w="1"/><text x="25.9257%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.6757%" y="565" width="0.0795%" height="15" fill="rgb(249,146,41)" fg:x="323" fg:w="1"/><text x="25.9257%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="25.7552%" y="661" width="0.0795%" height="15" fill="rgb(213,208,4)" fg:x="324" fg:w="1"/><text x="26.0052%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.0731%" y="597" width="0.0795%" height="15" fill="rgb(245,84,36)" fg:x="328" fg:w="1"/><text x="26.3231%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.0731%" y="581" width="0.0795%" height="15" fill="rgb(254,84,18)" fg:x="328" fg:w="1"/><text x="26.3231%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.0731%" y="565" width="0.0795%" height="15" fill="rgb(225,38,54)" fg:x="328" fg:w="1"/><text x="26.3231%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="26.0731%" y="549" width="0.0795%" height="15" fill="rgb(246,50,30)" fg:x="328" fg:w="1"/><text x="26.3231%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="25.8347%" y="645" width="0.3975%" height="15" fill="rgb(246,148,9)" fg:x="325" fg:w="5"/><text x="26.0847%" y="655.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="25.9936%" y="629" width="0.2385%" height="15" fill="rgb(223,75,4)" fg:x="327" fg:w="3"/><text x="26.2436%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="26.0731%" y="613" width="0.1590%" height="15" fill="rgb(239,148,41)" fg:x="328" fg:w="2"/><text x="26.3231%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="26.1526%" y="597" width="0.0795%" height="15" fill="rgb(205,195,3)" fg:x="329" fg:w="1"/><text x="26.4026%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.56%)</title><rect x="25.8347%" y="661" width="0.5564%" height="15" fill="rgb(254,161,1)" fg:x="325" fg:w="7"/><text x="26.0847%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="26.2321%" y="645" width="0.1590%" height="15" fill="rgb(211,229,8)" fg:x="330" fg:w="2"/><text x="26.4821%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.3116%" y="629" width="0.0795%" height="15" fill="rgb(220,97,9)" fg:x="331" fg:w="1"/><text x="26.5616%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="26.3116%" y="613" width="0.0795%" height="15" fill="rgb(240,218,8)" fg:x="331" fg:w="1"/><text x="26.5616%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (9 samples, 0.72%)</title><rect x="26.4706%" y="645" width="0.7154%" height="15" fill="rgb(250,44,0)" fg:x="333" fg:w="9"/><text x="26.7206%" y="655.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="26.7886%" y="629" width="0.3975%" height="15" fill="rgb(236,41,53)" fg:x="337" fg:w="5"/><text x="27.0386%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="26.8680%" y="613" width="0.3180%" height="15" fill="rgb(218,227,13)" fg:x="338" fg:w="4"/><text x="27.1180%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_str (3 samples, 0.24%)</title><rect x="26.9475%" y="597" width="0.2385%" height="15" fill="rgb(217,94,32)" fg:x="339" fg:w="3"/><text x="27.1975%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="27.2655%" y="629" width="0.1590%" height="15" fill="rgb(213,217,12)" fg:x="343" fg:w="2"/><text x="27.5155%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="27.2655%" y="613" width="0.1590%" height="15" fill="rgb(229,13,46)" fg:x="343" fg:w="2"/><text x="27.5155%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="27.2655%" y="597" width="0.1590%" height="15" fill="rgb(243,139,5)" fg:x="343" fg:w="2"/><text x="27.5155%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="27.2655%" y="581" width="0.1590%" height="15" fill="rgb(249,38,45)" fg:x="343" fg:w="2"/><text x="27.5155%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.3450%" y="565" width="0.0795%" height="15" fill="rgb(216,70,11)" fg:x="344" fg:w="1"/><text x="27.5950%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="27.3450%" y="549" width="0.0795%" height="15" fill="rgb(253,101,25)" fg:x="344" fg:w="1"/><text x="27.5950%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="27.4245%" y="629" width="0.3180%" height="15" fill="rgb(207,197,30)" fg:x="345" fg:w="4"/><text x="27.6745%" y="639.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="27.5040%" y="613" width="0.2385%" height="15" fill="rgb(238,87,13)" fg:x="346" fg:w="3"/><text x="27.7540%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.6630%" y="597" width="0.0795%" height="15" fill="rgb(215,155,8)" fg:x="348" fg:w="1"/><text x="27.9130%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.9809%" y="565" width="0.0795%" height="15" fill="rgb(239,166,38)" fg:x="352" fg:w="1"/><text x="28.2309%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="27.8219%" y="613" width="0.3180%" height="15" fill="rgb(240,194,35)" fg:x="350" fg:w="4"/><text x="28.0719%" y="623.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="27.9014%" y="597" width="0.2385%" height="15" fill="rgb(219,10,44)" fg:x="351" fg:w="3"/><text x="28.1514%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="27.9014%" y="581" width="0.2385%" height="15" fill="rgb(251,220,35)" fg:x="351" fg:w="3"/><text x="28.1514%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="28.0604%" y="565" width="0.0795%" height="15" fill="rgb(218,117,13)" fg:x="353" fg:w="1"/><text x="28.3104%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="28.2194%" y="597" width="0.2385%" height="15" fill="rgb(221,213,40)" fg:x="355" fg:w="3"/><text x="28.4694%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.3784%" y="581" width="0.0795%" height="15" fill="rgb(251,224,35)" fg:x="357" fg:w="1"/><text x="28.6284%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.3784%" y="565" width="0.0795%" height="15" fill="rgb(241,33,39)" fg:x="357" fg:w="1"/><text x="28.6284%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.3784%" y="549" width="0.0795%" height="15" fill="rgb(222,74,17)" fg:x="357" fg:w="1"/><text x="28.6284%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="28.1399%" y="613" width="0.3975%" height="15" fill="rgb(225,103,0)" fg:x="354" fg:w="5"/><text x="28.3899%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.4579%" y="597" width="0.0795%" height="15" fill="rgb(240,0,12)" fg:x="358" fg:w="1"/><text x="28.7079%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.4579%" y="581" width="0.0795%" height="15" fill="rgb(233,213,37)" fg:x="358" fg:w="1"/><text x="28.7079%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.11%)</title><rect x="27.7424%" y="629" width="1.1129%" height="15" fill="rgb(225,84,52)" fg:x="349" fg:w="14"/><text x="27.9924%" y="639.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="28.5374%" y="613" width="0.3180%" height="15" fill="rgb(247,160,51)" fg:x="359" fg:w="4"/><text x="28.7874%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="28.6169%" y="597" width="0.2385%" height="15" fill="rgb(244,60,51)" fg:x="360" fg:w="3"/><text x="28.8669%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="28.6963%" y="581" width="0.1590%" height="15" fill="rgb(233,114,7)" fg:x="361" fg:w="2"/><text x="28.9463%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.83%)</title><rect x="27.1860%" y="645" width="1.8283%" height="15" fill="rgb(246,136,16)" fg:x="342" fg:w="23"/><text x="27.4360%" y="655.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.8553%" y="629" width="0.1590%" height="15" fill="rgb(243,114,45)" fg:x="363" fg:w="2"/><text x="29.1053%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (36 samples, 2.86%)</title><rect x="26.3911%" y="661" width="2.8617%" height="15" fill="rgb(247,183,43)" fg:x="332" fg:w="36"/><text x="26.6411%" y="671.50">se..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="29.0143%" y="645" width="0.2385%" height="15" fill="rgb(251,210,42)" fg:x="365" fg:w="3"/><text x="29.2643%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="29.0938%" y="629" width="0.1590%" height="15" fill="rgb(221,88,35)" fg:x="366" fg:w="2"/><text x="29.3438%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.1733%" y="613" width="0.0795%" height="15" fill="rgb(242,21,20)" fg:x="367" fg:w="1"/><text x="29.4233%" y="623.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (45 samples, 3.58%)</title><rect x="25.7552%" y="677" width="3.5771%" height="15" fill="rgb(233,226,36)" fg:x="324" fg:w="45"/><text x="26.0052%" y="687.50">&lt;ser..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.2528%" y="661" width="0.0795%" height="15" fill="rgb(243,189,34)" fg:x="368" fg:w="1"/><text x="29.5028%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.2528%" y="645" width="0.0795%" height="15" fill="rgb(207,145,50)" fg:x="368" fg:w="1"/><text x="29.5028%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.2528%" y="629" width="0.0795%" height="15" fill="rgb(242,1,50)" fg:x="368" fg:w="1"/><text x="29.5028%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="29.2528%" y="613" width="0.0795%" height="15" fill="rgb(231,65,32)" fg:x="368" fg:w="1"/><text x="29.5028%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="29.2528%" y="597" width="0.0795%" height="15" fill="rgb(208,68,49)" fg:x="368" fg:w="1"/><text x="29.5028%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.2528%" y="581" width="0.0795%" height="15" fill="rgb(253,54,49)" fg:x="368" fg:w="1"/><text x="29.5028%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.3323%" y="645" width="0.0795%" height="15" fill="rgb(245,186,24)" fg:x="369" fg:w="1"/><text x="29.5823%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.5707%" y="613" width="0.0795%" height="15" fill="rgb(209,2,41)" fg:x="372" fg:w="1"/><text x="29.8207%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.6502%" y="613" width="0.0795%" height="15" fill="rgb(242,208,54)" fg:x="373" fg:w="1"/><text x="29.9002%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="29.3323%" y="677" width="0.5564%" height="15" fill="rgb(225,9,51)" fg:x="369" fg:w="7"/><text x="29.5823%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="29.3323%" y="661" width="0.5564%" height="15" fill="rgb(207,207,25)" fg:x="369" fg:w="7"/><text x="29.5823%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="29.4118%" y="645" width="0.4769%" height="15" fill="rgb(253,96,18)" fg:x="370" fg:w="6"/><text x="29.6618%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="29.5707%" y="629" width="0.3180%" height="15" fill="rgb(252,215,20)" fg:x="372" fg:w="4"/><text x="29.8207%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="29.7297%" y="613" width="0.1590%" height="15" fill="rgb(245,227,26)" fg:x="374" fg:w="2"/><text x="29.9797%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.8092%" y="597" width="0.0795%" height="15" fill="rgb(241,208,0)" fg:x="375" fg:w="1"/><text x="30.0592%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.8092%" y="581" width="0.0795%" height="15" fill="rgb(224,130,10)" fg:x="375" fg:w="1"/><text x="30.0592%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.8092%" y="565" width="0.0795%" height="15" fill="rgb(237,29,0)" fg:x="375" fg:w="1"/><text x="30.0592%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.9682%" y="661" width="0.0795%" height="15" fill="rgb(219,27,41)" fg:x="377" fg:w="1"/><text x="30.2182%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.2862%" y="629" width="0.0795%" height="15" fill="rgb(245,101,19)" fg:x="381" fg:w="1"/><text x="30.5362%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="30.3657%" y="629" width="0.1590%" height="15" fill="rgb(243,44,37)" fg:x="382" fg:w="2"/><text x="30.6157%" y="639.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="30.6041%" y="613" width="0.2385%" height="15" fill="rgb(228,213,43)" fg:x="385" fg:w="3"/><text x="30.8541%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.40%)</title><rect x="30.8426%" y="613" width="0.3975%" height="15" fill="rgb(219,163,21)" fg:x="388" fg:w="5"/><text x="31.0926%" y="623.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="31.0016%" y="597" width="0.2385%" height="15" fill="rgb(234,86,24)" fg:x="390" fg:w="3"/><text x="31.2516%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.3196%" y="597" width="0.0795%" height="15" fill="rgb(225,10,24)" fg:x="394" fg:w="1"/><text x="31.5696%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.4785%" y="581" width="0.0795%" height="15" fill="rgb(218,109,7)" fg:x="396" fg:w="1"/><text x="31.7285%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.5580%" y="565" width="0.0795%" height="15" fill="rgb(210,20,26)" fg:x="397" fg:w="1"/><text x="31.8080%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.5580%" y="549" width="0.0795%" height="15" fill="rgb(216,18,1)" fg:x="397" fg:w="1"/><text x="31.8080%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="31.6375%" y="565" width="0.0795%" height="15" fill="rgb(206,163,23)" fg:x="398" fg:w="1"/><text x="31.8875%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.6375%" y="549" width="0.0795%" height="15" fill="rgb(229,150,31)" fg:x="398" fg:w="1"/><text x="31.8875%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (22 samples, 1.75%)</title><rect x="30.0477%" y="661" width="1.7488%" height="15" fill="rgb(231,10,5)" fg:x="378" fg:w="22"/><text x="30.2977%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (22 samples, 1.75%)</title><rect x="30.0477%" y="645" width="1.7488%" height="15" fill="rgb(250,40,50)" fg:x="378" fg:w="22"/><text x="30.2977%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.27%)</title><rect x="30.5246%" y="629" width="1.2719%" height="15" fill="rgb(217,119,7)" fg:x="384" fg:w="16"/><text x="30.7746%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="31.2401%" y="613" width="0.5564%" height="15" fill="rgb(245,214,40)" fg:x="393" fg:w="7"/><text x="31.4901%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="31.3990%" y="597" width="0.3975%" height="15" fill="rgb(216,187,1)" fg:x="395" fg:w="5"/><text x="31.6490%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="31.5580%" y="581" width="0.2385%" height="15" fill="rgb(237,146,21)" fg:x="397" fg:w="3"/><text x="31.8080%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.7170%" y="565" width="0.0795%" height="15" fill="rgb(210,174,47)" fg:x="399" fg:w="1"/><text x="31.9670%" y="575.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="31.9555%" y="629" width="0.2385%" height="15" fill="rgb(218,111,39)" fg:x="402" fg:w="3"/><text x="32.2055%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (10 samples, 0.79%)</title><rect x="32.1940%" y="629" width="0.7949%" height="15" fill="rgb(224,95,19)" fg:x="405" fg:w="10"/><text x="32.4440%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (7 samples, 0.56%)</title><rect x="32.4324%" y="613" width="0.5564%" height="15" fill="rgb(234,15,38)" fg:x="408" fg:w="7"/><text x="32.6824%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.24%)</title><rect x="32.7504%" y="597" width="0.2385%" height="15" fill="rgb(246,56,12)" fg:x="412" fg:w="3"/><text x="33.0004%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="32.9889%" y="613" width="0.0795%" height="15" fill="rgb(247,16,17)" fg:x="415" fg:w="1"/><text x="33.2389%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="32.9889%" y="629" width="0.1590%" height="15" fill="rgb(215,151,11)" fg:x="415" fg:w="2"/><text x="33.2389%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.0684%" y="613" width="0.0795%" height="15" fill="rgb(225,16,24)" fg:x="416" fg:w="1"/><text x="33.3184%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.0684%" y="597" width="0.0795%" height="15" fill="rgb(217,117,5)" fg:x="416" fg:w="1"/><text x="33.3184%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (3 samples, 0.24%)</title><rect x="33.1479%" y="629" width="0.2385%" height="15" fill="rgb(246,187,53)" fg:x="417" fg:w="3"/><text x="33.3979%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.3068%" y="613" width="0.0795%" height="15" fill="rgb(241,71,40)" fg:x="419" fg:w="1"/><text x="33.5568%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.3068%" y="597" width="0.0795%" height="15" fill="rgb(231,67,39)" fg:x="419" fg:w="1"/><text x="33.5568%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="33.3863%" y="597" width="0.1590%" height="15" fill="rgb(222,120,24)" fg:x="420" fg:w="2"/><text x="33.6363%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (6 samples, 0.48%)</title><rect x="33.3863%" y="629" width="0.4769%" height="15" fill="rgb(248,3,3)" fg:x="420" fg:w="6"/><text x="33.6363%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="33.3863%" y="613" width="0.4769%" height="15" fill="rgb(228,218,5)" fg:x="420" fg:w="6"/><text x="33.6363%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="33.5453%" y="597" width="0.3180%" height="15" fill="rgb(212,202,43)" fg:x="422" fg:w="4"/><text x="33.7953%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.9428%" y="597" width="0.0795%" height="15" fill="rgb(235,183,2)" fg:x="427" fg:w="1"/><text x="34.1928%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.0223%" y="597" width="0.0795%" height="15" fill="rgb(230,165,10)" fg:x="428" fg:w="1"/><text x="34.2723%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.0223%" y="581" width="0.0795%" height="15" fill="rgb(219,54,40)" fg:x="428" fg:w="1"/><text x="34.2723%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.0223%" y="565" width="0.0795%" height="15" fill="rgb(244,73,9)" fg:x="428" fg:w="1"/><text x="34.2723%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="34.3402%" y="549" width="0.1590%" height="15" fill="rgb(212,32,45)" fg:x="432" fg:w="2"/><text x="34.5902%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="34.3402%" y="581" width="0.2385%" height="15" fill="rgb(205,58,31)" fg:x="432" fg:w="3"/><text x="34.5902%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="34.3402%" y="565" width="0.2385%" height="15" fill="rgb(250,120,43)" fg:x="432" fg:w="3"/><text x="34.5902%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="34.4992%" y="549" width="0.0795%" height="15" fill="rgb(235,13,10)" fg:x="434" fg:w="1"/><text x="34.7492%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="34.6582%" y="565" width="0.0795%" height="15" fill="rgb(232,219,31)" fg:x="436" fg:w="1"/><text x="34.9082%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.7377%" y="517" width="0.0795%" height="15" fill="rgb(218,157,51)" fg:x="437" fg:w="1"/><text x="34.9877%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.7377%" y="501" width="0.0795%" height="15" fill="rgb(211,91,52)" fg:x="437" fg:w="1"/><text x="34.9877%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.7377%" y="485" width="0.0795%" height="15" fill="rgb(240,173,1)" fg:x="437" fg:w="1"/><text x="34.9877%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (13 samples, 1.03%)</title><rect x="33.8633%" y="629" width="1.0334%" height="15" fill="rgb(248,20,47)" fg:x="426" fg:w="13"/><text x="34.1133%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (13 samples, 1.03%)</title><rect x="33.8633%" y="613" width="1.0334%" height="15" fill="rgb(217,221,40)" fg:x="426" fg:w="13"/><text x="34.1133%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.79%)</title><rect x="34.1017%" y="597" width="0.7949%" height="15" fill="rgb(226,149,51)" fg:x="429" fg:w="10"/><text x="34.3517%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (4 samples, 0.32%)</title><rect x="34.5787%" y="581" width="0.3180%" height="15" fill="rgb(252,193,7)" fg:x="435" fg:w="4"/><text x="34.8287%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="34.7377%" y="565" width="0.1590%" height="15" fill="rgb(205,123,0)" fg:x="437" fg:w="2"/><text x="34.9877%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="34.7377%" y="549" width="0.1590%" height="15" fill="rgb(233,173,25)" fg:x="437" fg:w="2"/><text x="34.9877%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="34.7377%" y="533" width="0.1590%" height="15" fill="rgb(216,63,32)" fg:x="437" fg:w="2"/><text x="34.9877%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="34.8172%" y="517" width="0.0795%" height="15" fill="rgb(209,56,45)" fg:x="438" fg:w="1"/><text x="35.0672%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="34.8172%" y="501" width="0.0795%" height="15" fill="rgb(226,111,49)" fg:x="438" fg:w="1"/><text x="35.0672%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="34.8967%" y="629" width="0.0795%" height="15" fill="rgb(244,181,21)" fg:x="439" fg:w="1"/><text x="35.1467%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.2146%" y="613" width="0.0795%" height="15" fill="rgb(222,126,15)" fg:x="443" fg:w="1"/><text x="35.4646%" y="623.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="35.4531%" y="581" width="0.0795%" height="15" fill="rgb(222,95,17)" fg:x="446" fg:w="1"/><text x="35.7031%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="35.5326%" y="581" width="0.3180%" height="15" fill="rgb(254,46,5)" fg:x="447" fg:w="4"/><text x="35.7826%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="35.5326%" y="565" width="0.3180%" height="15" fill="rgb(236,216,35)" fg:x="447" fg:w="4"/><text x="35.7826%" y="575.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="35.5326%" y="549" width="0.3180%" height="15" fill="rgb(217,187,26)" fg:x="447" fg:w="4"/><text x="35.7826%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="36.0095%" y="549" width="0.0795%" height="15" fill="rgb(207,192,25)" fg:x="453" fg:w="1"/><text x="36.2595%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.2480%" y="501" width="0.0795%" height="15" fill="rgb(253,135,27)" fg:x="456" fg:w="1"/><text x="36.4980%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="36.1685%" y="533" width="0.2385%" height="15" fill="rgb(211,122,29)" fg:x="455" fg:w="3"/><text x="36.4185%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="36.2480%" y="517" width="0.1590%" height="15" fill="rgb(233,162,40)" fg:x="456" fg:w="2"/><text x="36.4980%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="36.3275%" y="501" width="0.0795%" height="15" fill="rgb(222,184,47)" fg:x="457" fg:w="1"/><text x="36.5775%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="36.0890%" y="549" width="0.3975%" height="15" fill="rgb(249,99,23)" fg:x="454" fg:w="5"/><text x="36.3390%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="36.4070%" y="533" width="0.0795%" height="15" fill="rgb(214,60,12)" fg:x="458" fg:w="1"/><text x="36.6570%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.4070%" y="517" width="0.0795%" height="15" fill="rgb(250,229,36)" fg:x="458" fg:w="1"/><text x="36.6570%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (9 samples, 0.72%)</title><rect x="35.8506%" y="581" width="0.7154%" height="15" fill="rgb(232,195,10)" fg:x="451" fg:w="9"/><text x="36.1006%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="35.8506%" y="565" width="0.7154%" height="15" fill="rgb(205,213,31)" fg:x="451" fg:w="9"/><text x="36.1006%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.4865%" y="549" width="0.0795%" height="15" fill="rgb(237,43,8)" fg:x="459" fg:w="1"/><text x="36.7365%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (20 samples, 1.59%)</title><rect x="35.3736%" y="597" width="1.5898%" height="15" fill="rgb(216,208,3)" fg:x="445" fg:w="20"/><text x="35.6236%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="36.5660%" y="581" width="0.3975%" height="15" fill="rgb(228,179,44)" fg:x="460" fg:w="5"/><text x="36.8160%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="36.6455%" y="565" width="0.3180%" height="15" fill="rgb(230,192,27)" fg:x="461" fg:w="4"/><text x="36.8955%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="36.7250%" y="549" width="0.2385%" height="15" fill="rgb(251,30,38)" fg:x="462" fg:w="3"/><text x="36.9750%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="36.8045%" y="533" width="0.1590%" height="15" fill="rgb(246,55,52)" fg:x="463" fg:w="2"/><text x="37.0545%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.8839%" y="517" width="0.0795%" height="15" fill="rgb(249,79,26)" fg:x="464" fg:w="1"/><text x="37.1339%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (68 samples, 5.41%)</title><rect x="31.7965%" y="661" width="5.4054%" height="15" fill="rgb(220,202,16)" fg:x="400" fg:w="68"/><text x="32.0465%" y="671.50">kernel:..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (67 samples, 5.33%)</title><rect x="31.8760%" y="645" width="5.3259%" height="15" fill="rgb(250,170,23)" fg:x="401" fg:w="67"/><text x="32.1260%" y="655.50">&lt;serde_..</text></g><g><title>serde::ser::Serializer::collect_map (28 samples, 2.23%)</title><rect x="34.9762%" y="629" width="2.2258%" height="15" fill="rgb(230,7,37)" fg:x="440" fg:w="28"/><text x="35.2262%" y="639.50">s..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (24 samples, 1.91%)</title><rect x="35.2941%" y="613" width="1.9078%" height="15" fill="rgb(213,71,1)" fg:x="444" fg:w="24"/><text x="35.5441%" y="623.50">k..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="36.9634%" y="597" width="0.2385%" height="15" fill="rgb(227,87,39)" fg:x="465" fg:w="3"/><text x="37.2134%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="37.0429%" y="581" width="0.1590%" height="15" fill="rgb(210,41,29)" fg:x="466" fg:w="2"/><text x="37.2929%" y="591.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="37.6789%" y="549" width="0.0795%" height="15" fill="rgb(206,191,31)" fg:x="474" fg:w="1"/><text x="37.9289%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="37.9173%" y="517" width="0.0795%" height="15" fill="rgb(247,75,54)" fg:x="477" fg:w="1"/><text x="38.1673%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="37.9173%" y="501" width="0.0795%" height="15" fill="rgb(208,54,50)" fg:x="477" fg:w="1"/><text x="38.1673%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.9173%" y="485" width="0.0795%" height="15" fill="rgb(214,90,37)" fg:x="477" fg:w="1"/><text x="38.1673%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.9173%" y="469" width="0.0795%" height="15" fill="rgb(220,132,6)" fg:x="477" fg:w="1"/><text x="38.1673%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="37.9173%" y="453" width="0.0795%" height="15" fill="rgb(213,167,7)" fg:x="477" fg:w="1"/><text x="38.1673%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="37.9968%" y="485" width="0.0795%" height="15" fill="rgb(243,36,27)" fg:x="478" fg:w="1"/><text x="38.2468%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="38.1558%" y="453" width="0.0795%" height="15" fill="rgb(235,147,12)" fg:x="480" fg:w="1"/><text x="38.4058%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="38.1558%" y="469" width="0.1590%" height="15" fill="rgb(212,198,44)" fg:x="480" fg:w="2"/><text x="38.4058%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.2353%" y="453" width="0.0795%" height="15" fill="rgb(218,68,50)" fg:x="481" fg:w="1"/><text x="38.4853%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="37.9968%" y="501" width="0.3975%" height="15" fill="rgb(224,79,48)" fg:x="478" fg:w="5"/><text x="38.2468%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="38.0763%" y="485" width="0.3180%" height="15" fill="rgb(213,191,50)" fg:x="479" fg:w="4"/><text x="38.3263%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.3148%" y="469" width="0.0795%" height="15" fill="rgb(254,146,10)" fg:x="482" fg:w="1"/><text x="38.5648%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.3148%" y="453" width="0.0795%" height="15" fill="rgb(215,175,11)" fg:x="482" fg:w="1"/><text x="38.5648%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.3148%" y="437" width="0.0795%" height="15" fill="rgb(207,49,7)" fg:x="482" fg:w="1"/><text x="38.5648%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="38.3943%" y="501" width="0.1590%" height="15" fill="rgb(234,144,29)" fg:x="483" fg:w="2"/><text x="38.6443%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.03%)</title><rect x="37.6789%" y="565" width="1.0334%" height="15" fill="rgb(213,222,48)" fg:x="474" fg:w="13"/><text x="37.9289%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.95%)</title><rect x="37.7583%" y="549" width="0.9539%" height="15" fill="rgb(222,8,6)" fg:x="475" fg:w="12"/><text x="38.0083%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.87%)</title><rect x="37.8378%" y="533" width="0.8744%" height="15" fill="rgb(221,114,49)" fg:x="476" fg:w="11"/><text x="38.0878%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="37.9968%" y="517" width="0.7154%" height="15" fill="rgb(250,140,42)" fg:x="478" fg:w="9"/><text x="38.2468%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="38.5533%" y="501" width="0.1590%" height="15" fill="rgb(250,150,27)" fg:x="485" fg:w="2"/><text x="38.8033%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="38.5533%" y="485" width="0.1590%" height="15" fill="rgb(252,159,3)" fg:x="485" fg:w="2"/><text x="38.8033%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="38.6328%" y="469" width="0.0795%" height="15" fill="rgb(241,182,3)" fg:x="486" fg:w="1"/><text x="38.8828%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="38.8712%" y="549" width="0.1590%" height="15" fill="rgb(236,3,9)" fg:x="489" fg:w="2"/><text x="39.1212%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (6 samples, 0.48%)</title><rect x="38.7122%" y="565" width="0.4769%" height="15" fill="rgb(223,227,51)" fg:x="487" fg:w="6"/><text x="38.9622%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="39.0302%" y="549" width="0.1590%" height="15" fill="rgb(232,133,30)" fg:x="491" fg:w="2"/><text x="39.2802%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (23 samples, 1.83%)</title><rect x="37.5199%" y="597" width="1.8283%" height="15" fill="rgb(209,93,27)" fg:x="472" fg:w="23"/><text x="37.7699%" y="607.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (23 samples, 1.83%)</title><rect x="37.5199%" y="581" width="1.8283%" height="15" fill="rgb(208,108,34)" fg:x="472" fg:w="23"/><text x="37.7699%" y="591.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="39.1892%" y="565" width="0.1590%" height="15" fill="rgb(215,189,13)" fg:x="493" fg:w="2"/><text x="39.4392%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="39.1892%" y="549" width="0.1590%" height="15" fill="rgb(206,88,23)" fg:x="493" fg:w="2"/><text x="39.4392%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="39.1892%" y="533" width="0.1590%" height="15" fill="rgb(240,173,0)" fg:x="493" fg:w="2"/><text x="39.4392%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="39.3482%" y="597" width="0.0795%" height="15" fill="rgb(223,106,52)" fg:x="495" fg:w="1"/><text x="39.5982%" y="607.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="39.3482%" y="581" width="0.0795%" height="15" fill="rgb(206,130,16)" fg:x="495" fg:w="1"/><text x="39.5982%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.6661%" y="565" width="0.0795%" height="15" fill="rgb(220,54,25)" fg:x="499" fg:w="1"/><text x="39.9161%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (35 samples, 2.78%)</title><rect x="37.2019%" y="661" width="2.7822%" height="15" fill="rgb(210,4,38)" fg:x="468" fg:w="35"/><text x="37.4519%" y="671.50">se..</text></g><g><title>serde_json::de::from_trait (35 samples, 2.78%)</title><rect x="37.2019%" y="645" width="2.7822%" height="15" fill="rgb(238,94,39)" fg:x="468" fg:w="35"/><text x="37.4519%" y="655.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (35 samples, 2.78%)</title><rect x="37.2019%" y="629" width="2.7822%" height="15" fill="rgb(234,124,34)" fg:x="468" fg:w="35"/><text x="37.4519%" y="639.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (34 samples, 2.70%)</title><rect x="37.2814%" y="613" width="2.7027%" height="15" fill="rgb(221,91,40)" fg:x="469" fg:w="34"/><text x="37.5314%" y="623.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.56%)</title><rect x="39.4277%" y="597" width="0.5564%" height="15" fill="rgb(246,53,28)" fg:x="496" fg:w="7"/><text x="39.6777%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="39.6661%" y="581" width="0.3180%" height="15" fill="rgb(229,109,7)" fg:x="499" fg:w="4"/><text x="39.9161%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.24%)</title><rect x="39.7456%" y="565" width="0.2385%" height="15" fill="rgb(249,117,8)" fg:x="500" fg:w="3"/><text x="39.9956%" y="575.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="40.3021%" y="613" width="0.0795%" height="15" fill="rgb(210,181,1)" fg:x="507" fg:w="1"/><text x="40.5521%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.72%)</title><rect x="40.0636%" y="645" width="0.7154%" height="15" fill="rgb(211,66,1)" fg:x="504" fg:w="9"/><text x="40.3136%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.64%)</title><rect x="40.1431%" y="629" width="0.6359%" height="15" fill="rgb(221,90,14)" fg:x="505" fg:w="8"/><text x="40.3931%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="40.3816%" y="613" width="0.3975%" height="15" fill="rgb(219,222,44)" fg:x="508" fg:w="5"/><text x="40.6316%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="40.3816%" y="597" width="0.3975%" height="15" fill="rgb(246,34,33)" fg:x="508" fg:w="5"/><text x="40.6316%" y="607.50"></text></g><g><title>kernel::compare::any_entity_changes (138 samples, 10.97%)</title><rect x="29.8887%" y="677" width="10.9698%" height="15" fill="rgb(227,135,41)" fg:x="376" fg:w="138"/><text x="30.1387%" y="687.50">kernel::compare:..</text></g><g><title>treediff::diff::diff (11 samples, 0.87%)</title><rect x="39.9841%" y="661" width="0.8744%" height="15" fill="rgb(226,15,14)" fg:x="503" fg:w="11"/><text x="40.2341%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="40.7790%" y="645" width="0.0795%" height="15" fill="rgb(236,148,47)" fg:x="513" fg:w="1"/><text x="41.0290%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="40.7790%" y="629" width="0.0795%" height="15" fill="rgb(233,162,52)" fg:x="513" fg:w="1"/><text x="41.0290%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.7790%" y="613" width="0.0795%" height="15" fill="rgb(244,35,28)" fg:x="513" fg:w="1"/><text x="41.0290%" y="623.50"></text></g><g><title>engine::session::Session::save_entity_changes (199 samples, 15.82%)</title><rect x="25.1192%" y="725" width="15.8188%" height="15" fill="rgb(205,121,10)" fg:x="316" fg:w="199"/><text x="25.3692%" y="735.50">engine::session::Session..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (193 samples, 15.34%)</title><rect x="25.5962%" y="709" width="15.3418%" height="15" fill="rgb(250,58,18)" fg:x="322" fg:w="193"/><text x="25.8462%" y="719.50">engine::internal::Entiti..</text></g><g><title>engine::session::Session::check_for_changes (192 samples, 15.26%)</title><rect x="25.6757%" y="693" width="15.2623%" height="15" fill="rgb(216,37,13)" fg:x="323" fg:w="192"/><text x="25.9257%" y="703.50">engine::session::Sessio..</text></g><g><title>kernel::model::Entity::set_gid (1 samples, 0.08%)</title><rect x="40.8585%" y="677" width="0.0795%" height="15" fill="rgb(221,215,42)" fg:x="514" fg:w="1"/><text x="41.1085%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.8585%" y="661" width="0.0795%" height="15" fill="rgb(217,214,19)" fg:x="514" fg:w="1"/><text x="41.1085%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.8585%" y="645" width="0.0795%" height="15" fill="rgb(233,139,13)" fg:x="514" fg:w="1"/><text x="41.1085%" y="655.50"></text></g><g><title>engine::session::Session::close (202 samples, 16.06%)</title><rect x="24.9603%" y="741" width="16.0572%" height="15" fill="rgb(247,168,23)" fg:x="314" fg:w="202"/><text x="25.2103%" y="751.50">engine::session::Session:..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="40.9380%" y="725" width="0.0795%" height="15" fill="rgb(207,202,1)" fg:x="515" fg:w="1"/><text x="41.1880%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="41.0175%" y="709" width="0.0795%" height="15" fill="rgb(220,155,48)" fg:x="516" fg:w="1"/><text x="41.2675%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="41.0175%" y="693" width="0.0795%" height="15" fill="rgb(250,43,26)" fg:x="516" fg:w="1"/><text x="41.2675%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.0175%" y="677" width="0.0795%" height="15" fill="rgb(212,190,23)" fg:x="516" fg:w="1"/><text x="41.2675%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.0175%" y="661" width="0.0795%" height="15" fill="rgb(216,39,24)" fg:x="516" fg:w="1"/><text x="41.2675%" y="671.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="41.0175%" y="645" width="0.0795%" height="15" fill="rgb(252,113,16)" fg:x="516" fg:w="1"/><text x="41.2675%" y="655.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="41.0175%" y="629" width="0.0795%" height="15" fill="rgb(208,113,19)" fg:x="516" fg:w="1"/><text x="41.2675%" y="639.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="41.0175%" y="613" width="0.0795%" height="15" fill="rgb(234,107,25)" fg:x="516" fg:w="1"/><text x="41.2675%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="41.0175%" y="597" width="0.0795%" height="15" fill="rgb(234,217,51)" fg:x="516" fg:w="1"/><text x="41.2675%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.0175%" y="581" width="0.0795%" height="15" fill="rgb(251,29,42)" fg:x="516" fg:w="1"/><text x="41.2675%" y="591.50"></text></g><g><title>core::fmt::run (1 samples, 0.08%)</title><rect x="41.0175%" y="565" width="0.0795%" height="15" fill="rgb(221,62,51)" fg:x="516" fg:w="1"/><text x="41.2675%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.0175%" y="549" width="0.0795%" height="15" fill="rgb(240,192,43)" fg:x="516" fg:w="1"/><text x="41.2675%" y="559.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="41.0175%" y="533" width="0.0795%" height="15" fill="rgb(224,157,47)" fg:x="516" fg:w="1"/><text x="41.2675%" y="543.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.08%)</title><rect x="41.0175%" y="517" width="0.0795%" height="15" fill="rgb(226,84,45)" fg:x="516" fg:w="1"/><text x="41.2675%" y="527.50"></text></g><g><title>core::str::count::count_chars (1 samples, 0.08%)</title><rect x="41.0175%" y="501" width="0.0795%" height="15" fill="rgb(208,207,23)" fg:x="516" fg:w="1"/><text x="41.2675%" y="511.50"></text></g><g><title>core::str::count::char_count_general_case (1 samples, 0.08%)</title><rect x="41.0175%" y="485" width="0.0795%" height="15" fill="rgb(253,34,51)" fg:x="516" fg:w="1"/><text x="41.2675%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.08%)</title><rect x="41.0175%" y="469" width="0.0795%" height="15" fill="rgb(227,26,34)" fg:x="516" fg:w="1"/><text x="41.2675%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="41.0175%" y="453" width="0.0795%" height="15" fill="rgb(245,75,19)" fg:x="516" fg:w="1"/><text x="41.2675%" y="463.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="41.0175%" y="437" width="0.0795%" height="15" fill="rgb(250,191,31)" fg:x="516" fg:w="1"/><text x="41.2675%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="41.0175%" y="421" width="0.0795%" height="15" fill="rgb(224,11,50)" fg:x="516" fg:w="1"/><text x="41.2675%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="41.0175%" y="405" width="0.0795%" height="15" fill="rgb(231,171,7)" fg:x="516" fg:w="1"/><text x="41.2675%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="41.0175%" y="389" width="0.0795%" height="15" fill="rgb(252,214,10)" fg:x="516" fg:w="1"/><text x="41.2675%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="41.1765%" y="501" width="0.0795%" height="15" fill="rgb(249,45,46)" fg:x="518" fg:w="1"/><text x="41.4265%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="41.1765%" y="485" width="0.0795%" height="15" fill="rgb(240,173,7)" fg:x="518" fg:w="1"/><text x="41.4265%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="41.1765%" y="469" width="0.0795%" height="15" fill="rgb(235,214,13)" fg:x="518" fg:w="1"/><text x="41.4265%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="41.1765%" y="453" width="0.0795%" height="15" fill="rgb(245,156,8)" fg:x="518" fg:w="1"/><text x="41.4265%" y="463.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="41.1765%" y="437" width="0.0795%" height="15" fill="rgb(235,46,12)" fg:x="518" fg:w="1"/><text x="41.4265%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="41.1765%" y="421" width="0.0795%" height="15" fill="rgb(221,81,14)" fg:x="518" fg:w="1"/><text x="41.4265%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.1765%" y="405" width="0.0795%" height="15" fill="rgb(238,207,9)" fg:x="518" fg:w="1"/><text x="41.4265%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="41.1765%" y="533" width="0.2385%" height="15" fill="rgb(224,129,35)" fg:x="518" fg:w="3"/><text x="41.4265%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="41.1765%" y="517" width="0.2385%" height="15" fill="rgb(243,218,34)" fg:x="518" fg:w="3"/><text x="41.4265%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="41.2560%" y="501" width="0.1590%" height="15" fill="rgb(220,166,13)" fg:x="519" fg:w="2"/><text x="41.5060%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="41.2560%" y="485" width="0.1590%" height="15" fill="rgb(227,167,49)" fg:x="519" fg:w="2"/><text x="41.5060%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="41.2560%" y="469" width="0.1590%" height="15" fill="rgb(234,142,12)" fg:x="519" fg:w="2"/><text x="41.5060%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="41.4149%" y="533" width="0.0795%" height="15" fill="rgb(207,100,48)" fg:x="521" fg:w="1"/><text x="41.6649%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="41.4149%" y="517" width="0.0795%" height="15" fill="rgb(210,25,14)" fg:x="521" fg:w="1"/><text x="41.6649%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="41.4149%" y="501" width="0.0795%" height="15" fill="rgb(246,116,27)" fg:x="521" fg:w="1"/><text x="41.6649%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="41.1765%" y="581" width="0.5564%" height="15" fill="rgb(214,193,42)" fg:x="518" fg:w="7"/><text x="41.4265%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="41.1765%" y="565" width="0.5564%" height="15" fill="rgb(214,122,8)" fg:x="518" fg:w="7"/><text x="41.4265%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="41.1765%" y="549" width="0.5564%" height="15" fill="rgb(244,173,18)" fg:x="518" fg:w="7"/><text x="41.4265%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="41.4944%" y="533" width="0.2385%" height="15" fill="rgb(232,68,19)" fg:x="522" fg:w="3"/><text x="41.7444%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="41.4944%" y="517" width="0.2385%" height="15" fill="rgb(236,224,1)" fg:x="522" fg:w="3"/><text x="41.7444%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="41.6534%" y="501" width="0.0795%" height="15" fill="rgb(240,11,8)" fg:x="524" fg:w="1"/><text x="41.9034%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="41.6534%" y="485" width="0.0795%" height="15" fill="rgb(244,159,20)" fg:x="524" fg:w="1"/><text x="41.9034%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.6534%" y="469" width="0.0795%" height="15" fill="rgb(240,223,54)" fg:x="524" fg:w="1"/><text x="41.9034%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="41.6534%" y="453" width="0.0795%" height="15" fill="rgb(237,146,5)" fg:x="524" fg:w="1"/><text x="41.9034%" y="463.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (10 samples, 0.79%)</title><rect x="41.0970%" y="645" width="0.7949%" height="15" fill="rgb(218,221,32)" fg:x="517" fg:w="10"/><text x="41.3470%" y="655.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (10 samples, 0.79%)</title><rect x="41.0970%" y="629" width="0.7949%" height="15" fill="rgb(244,96,26)" fg:x="517" fg:w="10"/><text x="41.3470%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.79%)</title><rect x="41.0970%" y="613" width="0.7949%" height="15" fill="rgb(245,184,37)" fg:x="517" fg:w="10"/><text x="41.3470%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.79%)</title><rect x="41.0970%" y="597" width="0.7949%" height="15" fill="rgb(248,91,47)" fg:x="517" fg:w="10"/><text x="41.3470%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.7329%" y="581" width="0.1590%" height="15" fill="rgb(243,199,8)" fg:x="525" fg:w="2"/><text x="41.9829%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.7329%" y="565" width="0.1590%" height="15" fill="rgb(249,12,15)" fg:x="525" fg:w="2"/><text x="41.9829%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="41.7329%" y="549" width="0.1590%" height="15" fill="rgb(245,97,12)" fg:x="525" fg:w="2"/><text x="41.9829%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.7329%" y="533" width="0.1590%" height="15" fill="rgb(244,61,1)" fg:x="525" fg:w="2"/><text x="41.9829%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.7329%" y="517" width="0.1590%" height="15" fill="rgb(222,194,10)" fg:x="525" fg:w="2"/><text x="41.9829%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.8124%" y="501" width="0.0795%" height="15" fill="rgb(226,178,8)" fg:x="526" fg:w="1"/><text x="42.0624%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.8124%" y="485" width="0.0795%" height="15" fill="rgb(241,32,34)" fg:x="526" fg:w="1"/><text x="42.0624%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.8124%" y="469" width="0.0795%" height="15" fill="rgb(254,26,6)" fg:x="526" fg:w="1"/><text x="42.0624%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="42.0509%" y="581" width="0.0795%" height="15" fill="rgb(249,71,11)" fg:x="529" fg:w="1"/><text x="42.3009%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="41.8919%" y="597" width="0.3180%" height="15" fill="rgb(232,170,27)" fg:x="527" fg:w="4"/><text x="42.1419%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.1304%" y="581" width="0.0795%" height="15" fill="rgb(214,223,17)" fg:x="530" fg:w="1"/><text x="42.3804%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.2099%" y="597" width="0.0795%" height="15" fill="rgb(250,18,15)" fg:x="531" fg:w="1"/><text x="42.4599%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.2099%" y="581" width="0.0795%" height="15" fill="rgb(212,153,51)" fg:x="531" fg:w="1"/><text x="42.4599%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="42.2893%" y="501" width="0.0795%" height="15" fill="rgb(219,194,12)" fg:x="532" fg:w="1"/><text x="42.5393%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.2893%" y="485" width="0.0795%" height="15" fill="rgb(212,58,17)" fg:x="532" fg:w="1"/><text x="42.5393%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (19 samples, 1.51%)</title><rect x="41.0970%" y="693" width="1.5103%" height="15" fill="rgb(254,5,10)" fg:x="517" fg:w="19"/><text x="41.3470%" y="703.50"></text></g><g><title>engine::internal::Entities::prepare_entity (19 samples, 1.51%)</title><rect x="41.0970%" y="677" width="1.5103%" height="15" fill="rgb(246,91,7)" fg:x="517" fg:w="19"/><text x="41.3470%" y="687.50"></text></g><g><title>kernel::model::deserialize_entity (19 samples, 1.51%)</title><rect x="41.0970%" y="661" width="1.5103%" height="15" fill="rgb(218,108,49)" fg:x="517" fg:w="19"/><text x="41.3470%" y="671.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.72%)</title><rect x="41.8919%" y="645" width="0.7154%" height="15" fill="rgb(238,123,20)" fg:x="527" fg:w="9"/><text x="42.1419%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="41.8919%" y="629" width="0.7154%" height="15" fill="rgb(231,69,23)" fg:x="527" fg:w="9"/><text x="42.1419%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="41.8919%" y="613" width="0.7154%" height="15" fill="rgb(230,209,3)" fg:x="527" fg:w="9"/><text x="42.1419%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="42.2893%" y="597" width="0.3180%" height="15" fill="rgb(231,19,0)" fg:x="532" fg:w="4"/><text x="42.5393%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="42.2893%" y="581" width="0.3180%" height="15" fill="rgb(226,192,25)" fg:x="532" fg:w="4"/><text x="42.5393%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="42.2893%" y="565" width="0.3180%" height="15" fill="rgb(223,175,53)" fg:x="532" fg:w="4"/><text x="42.5393%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="42.2893%" y="549" width="0.3180%" height="15" fill="rgb(248,35,51)" fg:x="532" fg:w="4"/><text x="42.5393%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="42.2893%" y="533" width="0.3180%" height="15" fill="rgb(230,37,26)" fg:x="532" fg:w="4"/><text x="42.5393%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="42.2893%" y="517" width="0.3180%" height="15" fill="rgb(206,120,22)" fg:x="532" fg:w="4"/><text x="42.5393%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="42.3688%" y="501" width="0.2385%" height="15" fill="rgb(207,165,28)" fg:x="533" fg:w="3"/><text x="42.6188%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="42.3688%" y="485" width="0.2385%" height="15" fill="rgb(226,23,46)" fg:x="533" fg:w="3"/><text x="42.6188%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="42.4483%" y="469" width="0.1590%" height="15" fill="rgb(208,130,44)" fg:x="534" fg:w="2"/><text x="42.6983%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="42.4483%" y="453" width="0.1590%" height="15" fill="rgb(231,67,8)" fg:x="534" fg:w="2"/><text x="42.6983%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="42.4483%" y="437" width="0.1590%" height="15" fill="rgb(205,183,22)" fg:x="534" fg:w="2"/><text x="42.6983%" y="447.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="42.6868%" y="661" width="0.0795%" height="15" fill="rgb(224,47,9)" fg:x="537" fg:w="1"/><text x="42.9368%" y="671.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="42.6868%" y="645" width="0.0795%" height="15" fill="rgb(250,183,49)" fg:x="537" fg:w="1"/><text x="42.9368%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.6868%" y="629" width="0.0795%" height="15" fill="rgb(220,151,39)" fg:x="537" fg:w="1"/><text x="42.9368%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.6868%" y="613" width="0.0795%" height="15" fill="rgb(220,118,20)" fg:x="537" fg:w="1"/><text x="42.9368%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.6868%" y="597" width="0.0795%" height="15" fill="rgb(231,65,51)" fg:x="537" fg:w="1"/><text x="42.9368%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.6868%" y="581" width="0.0795%" height="15" fill="rgb(253,125,37)" fg:x="537" fg:w="1"/><text x="42.9368%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.6868%" y="565" width="0.0795%" height="15" fill="rgb(232,102,6)" fg:x="537" fg:w="1"/><text x="42.9368%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.6868%" y="549" width="0.0795%" height="15" fill="rgb(251,105,13)" fg:x="537" fg:w="1"/><text x="42.9368%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="42.6868%" y="533" width="0.0795%" height="15" fill="rgb(222,179,29)" fg:x="537" fg:w="1"/><text x="42.9368%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="42.6868%" y="517" width="0.0795%" height="15" fill="rgb(229,180,53)" fg:x="537" fg:w="1"/><text x="42.9368%" y="527.50"></text></g><g><title>engine::session::Session::world (4 samples, 0.32%)</title><rect x="42.6073%" y="693" width="0.3180%" height="15" fill="rgb(238,104,13)" fg:x="536" fg:w="4"/><text x="42.8573%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (4 samples, 0.32%)</title><rect x="42.6073%" y="677" width="0.3180%" height="15" fill="rgb(210,130,5)" fg:x="536" fg:w="4"/><text x="42.8573%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="42.7663%" y="661" width="0.1590%" height="15" fill="rgb(233,87,49)" fg:x="538" fg:w="2"/><text x="43.0163%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="42.7663%" y="645" width="0.1590%" height="15" fill="rgb(243,34,9)" fg:x="538" fg:w="2"/><text x="43.0163%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="42.7663%" y="629" width="0.1590%" height="15" fill="rgb(235,225,10)" fg:x="538" fg:w="2"/><text x="43.0163%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="42.7663%" y="613" width="0.1590%" height="15" fill="rgb(212,0,30)" fg:x="538" fg:w="2"/><text x="43.0163%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="42.7663%" y="597" width="0.1590%" height="15" fill="rgb(211,177,0)" fg:x="538" fg:w="2"/><text x="43.0163%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="42.7663%" y="581" width="0.1590%" height="15" fill="rgb(225,220,11)" fg:x="538" fg:w="2"/><text x="43.0163%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="42.7663%" y="565" width="0.1590%" height="15" fill="rgb(215,10,13)" fg:x="538" fg:w="2"/><text x="43.0163%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="42.8458%" y="549" width="0.0795%" height="15" fill="rgb(240,177,14)" fg:x="539" fg:w="1"/><text x="43.0958%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="42.8458%" y="533" width="0.0795%" height="15" fill="rgb(243,7,39)" fg:x="539" fg:w="1"/><text x="43.0958%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="42.8458%" y="517" width="0.0795%" height="15" fill="rgb(212,99,0)" fg:x="539" fg:w="1"/><text x="43.0958%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="42.8458%" y="501" width="0.0795%" height="15" fill="rgb(225,162,48)" fg:x="539" fg:w="1"/><text x="43.0958%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="42.9253%" y="677" width="0.0795%" height="15" fill="rgb(246,16,25)" fg:x="540" fg:w="1"/><text x="43.1753%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.0843%" y="645" width="0.0795%" height="15" fill="rgb(220,150,2)" fg:x="542" fg:w="1"/><text x="43.3343%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="43.1638%" y="645" width="0.0795%" height="15" fill="rgb(237,113,11)" fg:x="543" fg:w="1"/><text x="43.4138%" y="655.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living (28 samples, 2.23%)</title><rect x="41.0970%" y="709" width="2.2258%" height="15" fill="rgb(236,70,20)" fg:x="517" fg:w="28"/><text x="41.3470%" y="719.50">e..</text></g><g><title>engine::users::model::username_to_key (5 samples, 0.40%)</title><rect x="42.9253%" y="693" width="0.3975%" height="15" fill="rgb(234,94,7)" fg:x="540" fg:w="5"/><text x="43.1753%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="43.0048%" y="677" width="0.3180%" height="15" fill="rgb(250,221,0)" fg:x="541" fg:w="4"/><text x="43.2548%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.32%)</title><rect x="43.0048%" y="661" width="0.3180%" height="15" fill="rgb(245,149,46)" fg:x="541" fg:w="4"/><text x="43.2548%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.2432%" y="645" width="0.0795%" height="15" fill="rgb(215,37,27)" fg:x="544" fg:w="1"/><text x="43.4932%" y="655.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.2432%" y="629" width="0.0795%" height="15" fill="rgb(232,65,3)" fg:x="544" fg:w="1"/><text x="43.4932%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.2432%" y="613" width="0.0795%" height="15" fill="rgb(214,2,16)" fg:x="544" fg:w="1"/><text x="43.4932%" y="623.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (1 samples, 0.08%)</title><rect x="43.3227%" y="693" width="0.0795%" height="15" fill="rgb(227,131,50)" fg:x="545" fg:w="1"/><text x="43.5727%" y="703.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="43.3227%" y="677" width="0.0795%" height="15" fill="rgb(247,131,45)" fg:x="545" fg:w="1"/><text x="43.5727%" y="687.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.3227%" y="661" width="0.0795%" height="15" fill="rgb(215,97,47)" fg:x="545" fg:w="1"/><text x="43.5727%" y="671.50"></text></g><g><title>kernel::model::EntityRef::into_entry (1 samples, 0.08%)</title><rect x="43.4817%" y="661" width="0.0795%" height="15" fill="rgb(233,143,12)" fg:x="547" fg:w="1"/><text x="43.7317%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="43.4817%" y="645" width="0.0795%" height="15" fill="rgb(222,57,17)" fg:x="547" fg:w="1"/><text x="43.7317%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="43.4817%" y="629" width="0.0795%" height="15" fill="rgb(214,119,38)" fg:x="547" fg:w="1"/><text x="43.7317%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="43.4817%" y="613" width="0.0795%" height="15" fill="rgb(217,28,47)" fg:x="547" fg:w="1"/><text x="43.7317%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="43.4817%" y="597" width="0.0795%" height="15" fill="rgb(231,14,52)" fg:x="547" fg:w="1"/><text x="43.7317%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="43.4817%" y="581" width="0.0795%" height="15" fill="rgb(220,158,18)" fg:x="547" fg:w="1"/><text x="43.7317%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="43.4817%" y="565" width="0.0795%" height="15" fill="rgb(222,143,46)" fg:x="547" fg:w="1"/><text x="43.7317%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="43.4817%" y="549" width="0.0795%" height="15" fill="rgb(227,165,5)" fg:x="547" fg:w="1"/><text x="43.7317%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="43.4817%" y="533" width="0.0795%" height="15" fill="rgb(216,222,49)" fg:x="547" fg:w="1"/><text x="43.7317%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="43.4817%" y="517" width="0.0795%" height="15" fill="rgb(238,73,39)" fg:x="547" fg:w="1"/><text x="43.7317%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="43.6407%" y="629" width="0.1590%" height="15" fill="rgb(252,115,9)" fg:x="549" fg:w="2"/><text x="43.8907%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="43.6407%" y="613" width="0.1590%" height="15" fill="rgb(238,202,4)" fg:x="549" fg:w="2"/><text x="43.8907%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="43.6407%" y="597" width="0.1590%" height="15" fill="rgb(252,153,44)" fg:x="549" fg:w="2"/><text x="43.8907%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="43.6407%" y="581" width="0.1590%" height="15" fill="rgb(235,128,27)" fg:x="549" fg:w="2"/><text x="43.8907%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="43.6407%" y="565" width="0.1590%" height="15" fill="rgb(221,121,47)" fg:x="549" fg:w="2"/><text x="43.8907%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="43.6407%" y="549" width="0.1590%" height="15" fill="rgb(247,211,47)" fg:x="549" fg:w="2"/><text x="43.8907%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="43.6407%" y="533" width="0.1590%" height="15" fill="rgb(252,47,49)" fg:x="549" fg:w="2"/><text x="43.8907%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="43.6407%" y="517" width="0.1590%" height="15" fill="rgb(219,119,53)" fg:x="549" fg:w="2"/><text x="43.8907%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="43.6407%" y="501" width="0.1590%" height="15" fill="rgb(243,165,53)" fg:x="549" fg:w="2"/><text x="43.8907%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="43.6407%" y="485" width="0.1590%" height="15" fill="rgb(230,12,35)" fg:x="549" fg:w="2"/><text x="43.8907%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="43.6407%" y="469" width="0.1590%" height="15" fill="rgb(239,57,49)" fg:x="549" fg:w="2"/><text x="43.8907%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="43.6407%" y="453" width="0.1590%" height="15" fill="rgb(231,154,7)" fg:x="549" fg:w="2"/><text x="43.8907%" y="463.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="43.6407%" y="437" width="0.1590%" height="15" fill="rgb(248,81,34)" fg:x="549" fg:w="2"/><text x="43.8907%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="43.6407%" y="421" width="0.1590%" height="15" fill="rgb(247,9,5)" fg:x="549" fg:w="2"/><text x="43.8907%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="43.8792%" y="597" width="0.0795%" height="15" fill="rgb(228,172,27)" fg:x="552" fg:w="1"/><text x="44.1292%" y="607.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="43.8792%" y="581" width="0.0795%" height="15" fill="rgb(230,57,44)" fg:x="552" fg:w="1"/><text x="44.1292%" y="591.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="43.8792%" y="565" width="0.0795%" height="15" fill="rgb(249,35,22)" fg:x="552" fg:w="1"/><text x="44.1292%" y="575.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="43.9587%" y="597" width="0.0795%" height="15" fill="rgb(250,137,27)" fg:x="553" fg:w="1"/><text x="44.2087%" y="607.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="44.0382%" y="373" width="0.0795%" height="15" fill="rgb(251,57,31)" fg:x="554" fg:w="1"/><text x="44.2882%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="44.0382%" y="469" width="0.1590%" height="15" fill="rgb(238,60,0)" fg:x="554" fg:w="2"/><text x="44.2882%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="44.0382%" y="453" width="0.1590%" height="15" fill="rgb(242,185,39)" fg:x="554" fg:w="2"/><text x="44.2882%" y="463.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="44.0382%" y="437" width="0.1590%" height="15" fill="rgb(240,63,43)" fg:x="554" fg:w="2"/><text x="44.2882%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="44.0382%" y="421" width="0.1590%" height="15" fill="rgb(236,155,6)" fg:x="554" fg:w="2"/><text x="44.2882%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="44.0382%" y="405" width="0.1590%" height="15" fill="rgb(215,11,29)" fg:x="554" fg:w="2"/><text x="44.2882%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="44.0382%" y="389" width="0.1590%" height="15" fill="rgb(228,180,48)" fg:x="554" fg:w="2"/><text x="44.2882%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.1176%" y="373" width="0.0795%" height="15" fill="rgb(241,102,12)" fg:x="555" fg:w="1"/><text x="44.3676%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.1176%" y="357" width="0.0795%" height="15" fill="rgb(246,213,4)" fg:x="555" fg:w="1"/><text x="44.3676%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="44.1176%" y="341" width="0.0795%" height="15" fill="rgb(218,134,35)" fg:x="555" fg:w="1"/><text x="44.3676%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="44.0382%" y="517" width="0.2385%" height="15" fill="rgb(251,117,35)" fg:x="554" fg:w="3"/><text x="44.2882%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="44.0382%" y="501" width="0.2385%" height="15" fill="rgb(206,156,45)" fg:x="554" fg:w="3"/><text x="44.2882%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="44.0382%" y="485" width="0.2385%" height="15" fill="rgb(218,52,27)" fg:x="554" fg:w="3"/><text x="44.2882%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.1971%" y="469" width="0.0795%" height="15" fill="rgb(238,83,36)" fg:x="556" fg:w="1"/><text x="44.4471%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="44.1971%" y="453" width="0.0795%" height="15" fill="rgb(218,53,43)" fg:x="556" fg:w="1"/><text x="44.4471%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="44.1971%" y="437" width="0.0795%" height="15" fill="rgb(239,54,39)" fg:x="556" fg:w="1"/><text x="44.4471%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="44.1971%" y="421" width="0.0795%" height="15" fill="rgb(212,198,13)" fg:x="556" fg:w="1"/><text x="44.4471%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.1971%" y="405" width="0.0795%" height="15" fill="rgb(234,54,46)" fg:x="556" fg:w="1"/><text x="44.4471%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="44.1971%" y="389" width="0.0795%" height="15" fill="rgb(217,120,7)" fg:x="556" fg:w="1"/><text x="44.4471%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="44.1971%" y="373" width="0.0795%" height="15" fill="rgb(246,39,15)" fg:x="556" fg:w="1"/><text x="44.4471%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.1971%" y="357" width="0.0795%" height="15" fill="rgb(242,143,31)" fg:x="556" fg:w="1"/><text x="44.4471%" y="367.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (7 samples, 0.56%)</title><rect x="44.0382%" y="581" width="0.5564%" height="15" fill="rgb(252,60,24)" fg:x="554" fg:w="7"/><text x="44.2882%" y="591.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (7 samples, 0.56%)</title><rect x="44.0382%" y="565" width="0.5564%" height="15" fill="rgb(249,220,7)" fg:x="554" fg:w="7"/><text x="44.2882%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="44.0382%" y="549" width="0.5564%" height="15" fill="rgb(236,67,13)" fg:x="554" fg:w="7"/><text x="44.2882%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="44.0382%" y="533" width="0.5564%" height="15" fill="rgb(210,62,39)" fg:x="554" fg:w="7"/><text x="44.2882%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="44.2766%" y="517" width="0.3180%" height="15" fill="rgb(219,122,53)" fg:x="557" fg:w="4"/><text x="44.5266%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="44.2766%" y="501" width="0.3180%" height="15" fill="rgb(218,87,25)" fg:x="557" fg:w="4"/><text x="44.5266%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="44.3561%" y="485" width="0.2385%" height="15" fill="rgb(234,179,48)" fg:x="558" fg:w="3"/><text x="44.6061%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="44.3561%" y="469" width="0.2385%" height="15" fill="rgb(248,90,0)" fg:x="558" fg:w="3"/><text x="44.6061%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="44.3561%" y="453" width="0.2385%" height="15" fill="rgb(207,228,37)" fg:x="558" fg:w="3"/><text x="44.6061%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="44.3561%" y="437" width="0.2385%" height="15" fill="rgb(235,214,15)" fg:x="558" fg:w="3"/><text x="44.6061%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.5151%" y="421" width="0.0795%" height="15" fill="rgb(210,144,39)" fg:x="560" fg:w="1"/><text x="44.7651%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.5151%" y="405" width="0.0795%" height="15" fill="rgb(222,67,41)" fg:x="560" fg:w="1"/><text x="44.7651%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="44.5151%" y="389" width="0.0795%" height="15" fill="rgb(205,35,37)" fg:x="560" fg:w="1"/><text x="44.7651%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="44.5151%" y="373" width="0.0795%" height="15" fill="rgb(216,125,40)" fg:x="560" fg:w="1"/><text x="44.7651%" y="383.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="44.5151%" y="357" width="0.0795%" height="15" fill="rgb(228,227,20)" fg:x="560" fg:w="1"/><text x="44.7651%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.7536%" y="501" width="0.0795%" height="15" fill="rgb(242,173,45)" fg:x="563" fg:w="1"/><text x="45.0036%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.7536%" y="485" width="0.0795%" height="15" fill="rgb(215,79,24)" fg:x="563" fg:w="1"/><text x="45.0036%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="44.7536%" y="469" width="0.0795%" height="15" fill="rgb(238,164,38)" fg:x="563" fg:w="1"/><text x="45.0036%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="44.9126%" y="421" width="0.0795%" height="15" fill="rgb(245,196,38)" fg:x="565" fg:w="1"/><text x="45.1626%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="44.9126%" y="405" width="0.0795%" height="15" fill="rgb(231,217,29)" fg:x="565" fg:w="1"/><text x="45.1626%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (16 samples, 1.27%)</title><rect x="43.7997%" y="629" width="1.2719%" height="15" fill="rgb(245,6,4)" fg:x="551" fg:w="16"/><text x="44.0497%" y="639.50"></text></g><g><title>engine::internal::Entities::prepare_entity (15 samples, 1.19%)</title><rect x="43.8792%" y="613" width="1.1924%" height="15" fill="rgb(214,76,49)" fg:x="552" fg:w="15"/><text x="44.1292%" y="623.50"></text></g><g><title>kernel::model::deserialize_entity (13 samples, 1.03%)</title><rect x="44.0382%" y="597" width="1.0334%" height="15" fill="rgb(205,96,12)" fg:x="554" fg:w="13"/><text x="44.2882%" y="607.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="44.5946%" y="581" width="0.4769%" height="15" fill="rgb(243,131,4)" fg:x="561" fg:w="6"/><text x="44.8446%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="44.5946%" y="565" width="0.4769%" height="15" fill="rgb(214,114,4)" fg:x="561" fg:w="6"/><text x="44.8446%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="44.5946%" y="549" width="0.4769%" height="15" fill="rgb(234,215,15)" fg:x="561" fg:w="6"/><text x="44.8446%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="44.5946%" y="533" width="0.4769%" height="15" fill="rgb(250,216,45)" fg:x="561" fg:w="6"/><text x="44.8446%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="44.6741%" y="517" width="0.3975%" height="15" fill="rgb(236,128,4)" fg:x="562" fg:w="5"/><text x="44.9241%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="44.8331%" y="501" width="0.2385%" height="15" fill="rgb(234,50,33)" fg:x="564" fg:w="3"/><text x="45.0831%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="44.8331%" y="485" width="0.2385%" height="15" fill="rgb(253,131,37)" fg:x="564" fg:w="3"/><text x="45.0831%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="44.8331%" y="469" width="0.2385%" height="15" fill="rgb(218,55,27)" fg:x="564" fg:w="3"/><text x="45.0831%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="44.8331%" y="453" width="0.2385%" height="15" fill="rgb(241,220,28)" fg:x="564" fg:w="3"/><text x="45.0831%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="44.8331%" y="437" width="0.2385%" height="15" fill="rgb(241,90,48)" fg:x="564" fg:w="3"/><text x="45.0831%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.9921%" y="421" width="0.0795%" height="15" fill="rgb(216,43,37)" fg:x="566" fg:w="1"/><text x="45.2421%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.9921%" y="405" width="0.0795%" height="15" fill="rgb(207,173,9)" fg:x="566" fg:w="1"/><text x="45.2421%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.0715%" y="629" width="0.0795%" height="15" fill="rgb(240,126,30)" fg:x="567" fg:w="1"/><text x="45.3215%" y="639.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (23 samples, 1.83%)</title><rect x="43.4022%" y="677" width="1.8283%" height="15" fill="rgb(228,178,53)" fg:x="546" fg:w="23"/><text x="43.6522%" y="687.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::scope (21 samples, 1.67%)</title><rect x="43.5612%" y="661" width="1.6693%" height="15" fill="rgb(217,33,4)" fg:x="548" fg:w="21"/><text x="43.8112%" y="671.50"></text></g><g><title>kernel::model::Entity::load_scope (21 samples, 1.67%)</title><rect x="43.5612%" y="645" width="1.6693%" height="15" fill="rgb(206,124,34)" fg:x="548" fg:w="21"/><text x="43.8112%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.1510%" y="629" width="0.0795%" height="15" fill="rgb(208,122,53)" fg:x="568" fg:w="1"/><text x="45.4010%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.1510%" y="613" width="0.0795%" height="15" fill="rgb(215,202,26)" fg:x="568" fg:w="1"/><text x="45.4010%" y="623.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (24 samples, 1.91%)</title><rect x="43.4022%" y="693" width="1.9078%" height="15" fill="rgb(232,198,31)" fg:x="546" fg:w="24"/><text x="43.6522%" y="703.50">e..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="45.2305%" y="677" width="0.0795%" height="15" fill="rgb(222,23,35)" fg:x="569" fg:w="1"/><text x="45.4805%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="45.2305%" y="661" width="0.0795%" height="15" fill="rgb(242,27,53)" fg:x="569" fg:w="1"/><text x="45.4805%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="45.2305%" y="645" width="0.0795%" height="15" fill="rgb(210,216,42)" fg:x="569" fg:w="1"/><text x="45.4805%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.2305%" y="629" width="0.0795%" height="15" fill="rgb(234,39,38)" fg:x="569" fg:w="1"/><text x="45.4805%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.3895%" y="661" width="0.0795%" height="15" fill="rgb(235,126,54)" fg:x="571" fg:w="1"/><text x="45.6395%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="46.1049%" y="581" width="0.1590%" height="15" fill="rgb(235,150,33)" fg:x="580" fg:w="2"/><text x="46.3549%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="45.8665%" y="597" width="0.4769%" height="15" fill="rgb(249,49,53)" fg:x="577" fg:w="6"/><text x="46.1165%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="46.2639%" y="581" width="0.0795%" height="15" fill="rgb(238,60,50)" fg:x="582" fg:w="1"/><text x="46.5139%" y="591.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="46.3434%" y="597" width="0.2385%" height="15" fill="rgb(210,5,2)" fg:x="583" fg:w="3"/><text x="46.5934%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.6614%" y="565" width="0.0795%" height="15" fill="rgb(214,207,24)" fg:x="587" fg:w="1"/><text x="46.9114%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="46.6614%" y="581" width="0.1590%" height="15" fill="rgb(228,173,2)" fg:x="587" fg:w="2"/><text x="46.9114%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="46.7409%" y="565" width="0.0795%" height="15" fill="rgb(244,26,8)" fg:x="588" fg:w="1"/><text x="46.9909%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.03%)</title><rect x="45.8665%" y="613" width="1.0334%" height="15" fill="rgb(249,153,35)" fg:x="577" fg:w="13"/><text x="46.1165%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (4 samples, 0.32%)</title><rect x="46.5819%" y="597" width="0.3180%" height="15" fill="rgb(221,215,40)" fg:x="586" fg:w="4"/><text x="46.8319%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.8203%" y="581" width="0.0795%" height="15" fill="rgb(238,106,35)" fg:x="589" fg:w="1"/><text x="47.0703%" y="591.50"></text></g><g><title>__libc_free (5 samples, 0.40%)</title><rect x="46.8998%" y="613" width="0.3975%" height="15" fill="rgb(207,195,21)" fg:x="590" fg:w="5"/><text x="47.1498%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.67%)</title><rect x="45.7075%" y="629" width="1.6693%" height="15" fill="rgb(205,43,29)" fg:x="575" fg:w="21"/><text x="45.9575%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="47.2973%" y="613" width="0.0795%" height="15" fill="rgb(236,35,21)" fg:x="595" fg:w="1"/><text x="47.5473%" y="623.50"></text></g><g><title>__libc_free (5 samples, 0.40%)</title><rect x="47.3768%" y="629" width="0.3975%" height="15" fill="rgb(244,74,8)" fg:x="596" fg:w="5"/><text x="47.6268%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (30 samples, 2.38%)</title><rect x="45.4690%" y="661" width="2.3847%" height="15" fill="rgb(241,229,7)" fg:x="572" fg:w="30"/><text x="45.7190%" y="671.50">co..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 2.31%)</title><rect x="45.5485%" y="645" width="2.3052%" height="15" fill="rgb(212,223,25)" fg:x="573" fg:w="29"/><text x="45.7985%" y="655.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="47.7742%" y="629" width="0.0795%" height="15" fill="rgb(234,58,53)" fg:x="601" fg:w="1"/><text x="48.0242%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.9332%" y="613" width="0.0795%" height="15" fill="rgb(244,36,1)" fg:x="603" fg:w="1"/><text x="48.1832%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="47.9332%" y="629" width="0.1590%" height="15" fill="rgb(222,40,54)" fg:x="603" fg:w="2"/><text x="48.1832%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="48.0127%" y="613" width="0.0795%" height="15" fill="rgb(210,207,39)" fg:x="604" fg:w="1"/><text x="48.2627%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.0127%" y="597" width="0.0795%" height="15" fill="rgb(234,52,14)" fg:x="604" fg:w="1"/><text x="48.2627%" y="607.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (4 samples, 0.32%)</title><rect x="48.0922%" y="629" width="0.3180%" height="15" fill="rgb(239,108,46)" fg:x="605" fg:w="4"/><text x="48.3422%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="48.0922%" y="613" width="0.3180%" height="15" fill="rgb(252,223,5)" fg:x="605" fg:w="4"/><text x="48.3422%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.3307%" y="597" width="0.0795%" height="15" fill="rgb(227,181,11)" fg:x="608" fg:w="1"/><text x="48.5807%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="48.3307%" y="581" width="0.0795%" height="15" fill="rgb(248,126,40)" fg:x="608" fg:w="1"/><text x="48.5807%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.3307%" y="565" width="0.0795%" height="15" fill="rgb(243,1,18)" fg:x="608" fg:w="1"/><text x="48.5807%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.4897%" y="581" width="0.0795%" height="15" fill="rgb(214,145,23)" fg:x="610" fg:w="1"/><text x="48.7397%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="48.5692%" y="565" width="0.0795%" height="15" fill="rgb(241,218,11)" fg:x="611" fg:w="1"/><text x="48.8192%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.5692%" y="549" width="0.0795%" height="15" fill="rgb(214,219,24)" fg:x="611" fg:w="1"/><text x="48.8192%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.7281%" y="533" width="0.0795%" height="15" fill="rgb(235,32,7)" fg:x="613" fg:w="1"/><text x="48.9781%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.8871%" y="501" width="0.0795%" height="15" fill="rgb(227,121,28)" fg:x="615" fg:w="1"/><text x="49.1371%" y="511.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="48.9666%" y="501" width="0.0795%" height="15" fill="rgb(216,129,49)" fg:x="616" fg:w="1"/><text x="49.2166%" y="511.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="48.9666%" y="485" width="0.0795%" height="15" fill="rgb(207,194,50)" fg:x="616" fg:w="1"/><text x="49.2166%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="49.0461%" y="501" width="0.0795%" height="15" fill="rgb(207,4,18)" fg:x="617" fg:w="1"/><text x="49.2961%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.0461%" y="485" width="0.0795%" height="15" fill="rgb(213,50,30)" fg:x="617" fg:w="1"/><text x="49.2961%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.0461%" y="469" width="0.0795%" height="15" fill="rgb(208,77,22)" fg:x="617" fg:w="1"/><text x="49.2961%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.0461%" y="453" width="0.0795%" height="15" fill="rgb(244,204,34)" fg:x="617" fg:w="1"/><text x="49.2961%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.0461%" y="437" width="0.0795%" height="15" fill="rgb(230,20,17)" fg:x="617" fg:w="1"/><text x="49.2961%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.0461%" y="421" width="0.0795%" height="15" fill="rgb(237,83,15)" fg:x="617" fg:w="1"/><text x="49.2961%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="49.0461%" y="405" width="0.0795%" height="15" fill="rgb(221,109,25)" fg:x="617" fg:w="1"/><text x="49.2961%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="49.0461%" y="389" width="0.0795%" height="15" fill="rgb(205,194,52)" fg:x="617" fg:w="1"/><text x="49.2961%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.1256%" y="485" width="0.0795%" height="15" fill="rgb(244,173,54)" fg:x="618" fg:w="1"/><text x="49.3756%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.1256%" y="469" width="0.0795%" height="15" fill="rgb(227,181,18)" fg:x="618" fg:w="1"/><text x="49.3756%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.1256%" y="453" width="0.0795%" height="15" fill="rgb(238,36,30)" fg:x="618" fg:w="1"/><text x="49.3756%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.1256%" y="437" width="0.0795%" height="15" fill="rgb(254,85,0)" fg:x="618" fg:w="1"/><text x="49.3756%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.1256%" y="421" width="0.0795%" height="15" fill="rgb(247,63,33)" fg:x="618" fg:w="1"/><text x="49.3756%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.1256%" y="405" width="0.0795%" height="15" fill="rgb(220,7,54)" fg:x="618" fg:w="1"/><text x="49.3756%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.1256%" y="389" width="0.0795%" height="15" fill="rgb(238,227,21)" fg:x="618" fg:w="1"/><text x="49.3756%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="49.1256%" y="373" width="0.0795%" height="15" fill="rgb(237,29,31)" fg:x="618" fg:w="1"/><text x="49.3756%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="49.1256%" y="357" width="0.0795%" height="15" fill="rgb(211,21,50)" fg:x="618" fg:w="1"/><text x="49.3756%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="49.1256%" y="341" width="0.0795%" height="15" fill="rgb(239,119,2)" fg:x="618" fg:w="1"/><text x="49.3756%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="49.1256%" y="325" width="0.0795%" height="15" fill="rgb(250,2,39)" fg:x="618" fg:w="1"/><text x="49.3756%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.1256%" y="309" width="0.0795%" height="15" fill="rgb(244,46,53)" fg:x="618" fg:w="1"/><text x="49.3756%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.2051%" y="373" width="0.0795%" height="15" fill="rgb(209,21,19)" fg:x="619" fg:w="1"/><text x="49.4551%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.2051%" y="357" width="0.0795%" height="15" fill="rgb(236,145,4)" fg:x="619" fg:w="1"/><text x="49.4551%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="49.2051%" y="341" width="0.0795%" height="15" fill="rgb(220,133,36)" fg:x="619" fg:w="1"/><text x="49.4551%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="49.2051%" y="325" width="0.0795%" height="15" fill="rgb(244,18,3)" fg:x="619" fg:w="1"/><text x="49.4551%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="49.2051%" y="309" width="0.0795%" height="15" fill="rgb(232,171,48)" fg:x="619" fg:w="1"/><text x="49.4551%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="49.2051%" y="293" width="0.0795%" height="15" fill="rgb(223,223,53)" fg:x="619" fg:w="1"/><text x="49.4551%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.2051%" y="277" width="0.0795%" height="15" fill="rgb(246,92,13)" fg:x="619" fg:w="1"/><text x="49.4551%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.2051%" y="261" width="0.0795%" height="15" fill="rgb(229,171,10)" fg:x="619" fg:w="1"/><text x="49.4551%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="49.2051%" y="245" width="0.0795%" height="15" fill="rgb(213,131,26)" fg:x="619" fg:w="1"/><text x="49.4551%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="49.2051%" y="229" width="0.0795%" height="15" fill="rgb(242,87,54)" fg:x="619" fg:w="1"/><text x="49.4551%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.2051%" y="213" width="0.0795%" height="15" fill="rgb(237,21,35)" fg:x="619" fg:w="1"/><text x="49.4551%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.2051%" y="197" width="0.0795%" height="15" fill="rgb(253,13,47)" fg:x="619" fg:w="1"/><text x="49.4551%" y="207.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.3641%" y="293" width="0.0795%" height="15" fill="rgb(215,122,49)" fg:x="621" fg:w="1"/><text x="49.6141%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.3641%" y="277" width="0.0795%" height="15" fill="rgb(209,179,30)" fg:x="621" fg:w="1"/><text x="49.6141%" y="287.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="49.3641%" y="261" width="0.0795%" height="15" fill="rgb(235,100,24)" fg:x="621" fg:w="1"/><text x="49.6141%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="49.3641%" y="245" width="0.0795%" height="15" fill="rgb(209,67,24)" fg:x="621" fg:w="1"/><text x="49.6141%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="49.3641%" y="229" width="0.0795%" height="15" fill="rgb(206,74,32)" fg:x="621" fg:w="1"/><text x="49.6141%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="49.3641%" y="213" width="0.0795%" height="15" fill="rgb(212,45,25)" fg:x="621" fg:w="1"/><text x="49.6141%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.3641%" y="197" width="0.0795%" height="15" fill="rgb(239,26,3)" fg:x="621" fg:w="1"/><text x="49.6141%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.3641%" y="181" width="0.0795%" height="15" fill="rgb(218,36,15)" fg:x="621" fg:w="1"/><text x="49.6141%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="49.3641%" y="165" width="0.0795%" height="15" fill="rgb(206,108,24)" fg:x="621" fg:w="1"/><text x="49.6141%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="49.3641%" y="149" width="0.0795%" height="15" fill="rgb(234,204,42)" fg:x="621" fg:w="1"/><text x="49.6141%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.3641%" y="133" width="0.0795%" height="15" fill="rgb(229,2,11)" fg:x="621" fg:w="1"/><text x="49.6141%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="49.3641%" y="117" width="0.0795%" height="15" fill="rgb(221,20,48)" fg:x="621" fg:w="1"/><text x="49.6141%" y="127.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="49.3641%" y="101" width="0.0795%" height="15" fill="rgb(244,164,10)" fg:x="621" fg:w="1"/><text x="49.6141%" y="111.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="49.3641%" y="85" width="0.0795%" height="15" fill="rgb(243,229,2)" fg:x="621" fg:w="1"/><text x="49.6141%" y="95.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="49.3641%" y="69" width="0.0795%" height="15" fill="rgb(232,131,37)" fg:x="621" fg:w="1"/><text x="49.6141%" y="79.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.79%)</title><rect x="48.7281%" y="549" width="0.7949%" height="15" fill="rgb(217,156,11)" fg:x="613" fg:w="10"/><text x="48.9781%" y="559.50"></text></g><g><title>kernel::model::EntityRef::into_entry (9 samples, 0.72%)</title><rect x="48.8076%" y="533" width="0.7154%" height="15" fill="rgb(239,99,48)" fg:x="614" fg:w="9"/><text x="49.0576%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (9 samples, 0.72%)</title><rect x="48.8076%" y="517" width="0.7154%" height="15" fill="rgb(231,209,9)" fg:x="614" fg:w="9"/><text x="49.0576%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="49.1256%" y="501" width="0.3975%" height="15" fill="rgb(254,97,27)" fg:x="618" fg:w="5"/><text x="49.3756%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.32%)</title><rect x="49.2051%" y="485" width="0.3180%" height="15" fill="rgb(223,151,38)" fg:x="619" fg:w="4"/><text x="49.4551%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.32%)</title><rect x="49.2051%" y="469" width="0.3180%" height="15" fill="rgb(219,206,35)" fg:x="619" fg:w="4"/><text x="49.4551%" y="479.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="49.2051%" y="453" width="0.3180%" height="15" fill="rgb(216,130,31)" fg:x="619" fg:w="4"/><text x="49.4551%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="49.2051%" y="437" width="0.3180%" height="15" fill="rgb(251,97,34)" fg:x="619" fg:w="4"/><text x="49.4551%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="49.2051%" y="421" width="0.3180%" height="15" fill="rgb(246,159,47)" fg:x="619" fg:w="4"/><text x="49.4551%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.32%)</title><rect x="49.2051%" y="405" width="0.3180%" height="15" fill="rgb(232,87,10)" fg:x="619" fg:w="4"/><text x="49.4551%" y="415.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="49.2051%" y="389" width="0.3180%" height="15" fill="rgb(249,1,37)" fg:x="619" fg:w="4"/><text x="49.4551%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="49.2846%" y="373" width="0.2385%" height="15" fill="rgb(239,135,14)" fg:x="620" fg:w="3"/><text x="49.5346%" y="383.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (3 samples, 0.24%)</title><rect x="49.2846%" y="357" width="0.2385%" height="15" fill="rgb(253,116,46)" fg:x="620" fg:w="3"/><text x="49.5346%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="49.3641%" y="341" width="0.1590%" height="15" fill="rgb(222,217,37)" fg:x="621" fg:w="2"/><text x="49.6141%" y="351.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="49.3641%" y="325" width="0.1590%" height="15" fill="rgb(252,96,8)" fg:x="621" fg:w="2"/><text x="49.6141%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="49.3641%" y="309" width="0.1590%" height="15" fill="rgb(254,103,41)" fg:x="621" fg:w="2"/><text x="49.6141%" y="319.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="49.4436%" y="293" width="0.0795%" height="15" fill="rgb(218,213,19)" fg:x="622" fg:w="1"/><text x="49.6936%" y="303.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="49.4436%" y="277" width="0.0795%" height="15" fill="rgb(253,95,21)" fg:x="622" fg:w="1"/><text x="49.6936%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.4436%" y="261" width="0.0795%" height="15" fill="rgb(229,26,28)" fg:x="622" fg:w="1"/><text x="49.6936%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.4436%" y="245" width="0.0795%" height="15" fill="rgb(230,129,16)" fg:x="622" fg:w="1"/><text x="49.6936%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="49.4436%" y="229" width="0.0795%" height="15" fill="rgb(236,126,17)" fg:x="622" fg:w="1"/><text x="49.6936%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="49.4436%" y="213" width="0.0795%" height="15" fill="rgb(209,33,33)" fg:x="622" fg:w="1"/><text x="49.6936%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="49.4436%" y="197" width="0.0795%" height="15" fill="rgb(227,85,29)" fg:x="622" fg:w="1"/><text x="49.6936%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="49.4436%" y="181" width="0.0795%" height="15" fill="rgb(241,53,46)" fg:x="622" fg:w="1"/><text x="49.6936%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.4436%" y="165" width="0.0795%" height="15" fill="rgb(228,167,53)" fg:x="622" fg:w="1"/><text x="49.6936%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.4436%" y="149" width="0.0795%" height="15" fill="rgb(238,195,45)" fg:x="622" fg:w="1"/><text x="49.6936%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="49.4436%" y="133" width="0.0795%" height="15" fill="rgb(252,124,45)" fg:x="622" fg:w="1"/><text x="49.6936%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="49.4436%" y="117" width="0.0795%" height="15" fill="rgb(251,38,35)" fg:x="622" fg:w="1"/><text x="49.6936%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.4436%" y="101" width="0.0795%" height="15" fill="rgb(227,33,2)" fg:x="622" fg:w="1"/><text x="49.6936%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="49.4436%" y="85" width="0.0795%" height="15" fill="rgb(223,157,46)" fg:x="622" fg:w="1"/><text x="49.6936%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="49.4436%" y="69" width="0.0795%" height="15" fill="rgb(222,78,41)" fg:x="622" fg:w="1"/><text x="49.6936%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="49.4436%" y="53" width="0.0795%" height="15" fill="rgb(248,176,11)" fg:x="622" fg:w="1"/><text x="49.6936%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="49.4436%" y="37" width="0.0795%" height="15" fill="rgb(241,221,18)" fg:x="622" fg:w="1"/><text x="49.6936%" y="47.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.5231%" y="533" width="0.0795%" height="15" fill="rgb(218,85,22)" fg:x="623" fg:w="1"/><text x="49.7731%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="49.6025%" y="533" width="0.0795%" height="15" fill="rgb(222,223,7)" fg:x="624" fg:w="1"/><text x="49.8525%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.6025%" y="517" width="0.0795%" height="15" fill="rgb(254,59,39)" fg:x="624" fg:w="1"/><text x="49.8525%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.6820%" y="469" width="0.0795%" height="15" fill="rgb(247,100,27)" fg:x="625" fg:w="1"/><text x="49.9320%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.6820%" y="453" width="0.0795%" height="15" fill="rgb(237,207,10)" fg:x="625" fg:w="1"/><text x="49.9320%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.6820%" y="437" width="0.0795%" height="15" fill="rgb(220,121,28)" fg:x="625" fg:w="1"/><text x="49.9320%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.6820%" y="421" width="0.0795%" height="15" fill="rgb(213,223,20)" fg:x="625" fg:w="1"/><text x="49.9320%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.6820%" y="405" width="0.0795%" height="15" fill="rgb(205,121,27)" fg:x="625" fg:w="1"/><text x="49.9320%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.6820%" y="389" width="0.0795%" height="15" fill="rgb(253,24,53)" fg:x="625" fg:w="1"/><text x="49.9320%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.6820%" y="373" width="0.0795%" height="15" fill="rgb(224,224,47)" fg:x="625" fg:w="1"/><text x="49.9320%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.6820%" y="357" width="0.0795%" height="15" fill="rgb(250,125,36)" fg:x="625" fg:w="1"/><text x="49.9320%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="49.6820%" y="341" width="0.0795%" height="15" fill="rgb(240,144,38)" fg:x="625" fg:w="1"/><text x="49.9320%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="49.6820%" y="325" width="0.0795%" height="15" fill="rgb(250,15,50)" fg:x="625" fg:w="1"/><text x="49.9320%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="49.6820%" y="309" width="0.0795%" height="15" fill="rgb(210,24,26)" fg:x="625" fg:w="1"/><text x="49.9320%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="49.6820%" y="293" width="0.0795%" height="15" fill="rgb(234,53,53)" fg:x="625" fg:w="1"/><text x="49.9320%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.6820%" y="277" width="0.0795%" height="15" fill="rgb(208,108,28)" fg:x="625" fg:w="1"/><text x="49.9320%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="49.6820%" y="485" width="0.1590%" height="15" fill="rgb(227,143,7)" fg:x="625" fg:w="2"/><text x="49.9320%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.7615%" y="469" width="0.0795%" height="15" fill="rgb(238,189,38)" fg:x="626" fg:w="1"/><text x="50.0115%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.7615%" y="453" width="0.0795%" height="15" fill="rgb(222,69,15)" fg:x="626" fg:w="1"/><text x="50.0115%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.7615%" y="437" width="0.0795%" height="15" fill="rgb(213,169,7)" fg:x="626" fg:w="1"/><text x="50.0115%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.7615%" y="421" width="0.0795%" height="15" fill="rgb(251,219,4)" fg:x="626" fg:w="1"/><text x="50.0115%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.7615%" y="405" width="0.0795%" height="15" fill="rgb(241,55,40)" fg:x="626" fg:w="1"/><text x="50.0115%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.7615%" y="389" width="0.0795%" height="15" fill="rgb(243,57,30)" fg:x="626" fg:w="1"/><text x="50.0115%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.7615%" y="373" width="0.0795%" height="15" fill="rgb(234,50,30)" fg:x="626" fg:w="1"/><text x="50.0115%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="49.7615%" y="357" width="0.0795%" height="15" fill="rgb(239,23,42)" fg:x="626" fg:w="1"/><text x="50.0115%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="49.7615%" y="341" width="0.0795%" height="15" fill="rgb(217,38,19)" fg:x="626" fg:w="1"/><text x="50.0115%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="49.7615%" y="325" width="0.0795%" height="15" fill="rgb(215,179,16)" fg:x="626" fg:w="1"/><text x="50.0115%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="49.7615%" y="309" width="0.0795%" height="15" fill="rgb(254,21,37)" fg:x="626" fg:w="1"/><text x="50.0115%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.7615%" y="293" width="0.0795%" height="15" fill="rgb(219,207,48)" fg:x="626" fg:w="1"/><text x="50.0115%" y="303.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="49.9205%" y="453" width="0.0795%" height="15" fill="rgb(227,225,41)" fg:x="628" fg:w="1"/><text x="50.1705%" y="463.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="49.9205%" y="437" width="0.0795%" height="15" fill="rgb(223,130,1)" fg:x="628" fg:w="1"/><text x="50.1705%" y="447.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="50.0000%" y="453" width="0.0795%" height="15" fill="rgb(249,54,42)" fg:x="629" fg:w="1"/><text x="50.2500%" y="463.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (4 samples, 0.32%)</title><rect x="50.0795%" y="437" width="0.3180%" height="15" fill="rgb(248,69,25)" fg:x="630" fg:w="4"/><text x="50.3295%" y="447.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (4 samples, 0.32%)</title><rect x="50.0795%" y="421" width="0.3180%" height="15" fill="rgb(234,21,32)" fg:x="630" fg:w="4"/><text x="50.3295%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="50.0795%" y="405" width="0.3180%" height="15" fill="rgb(252,136,6)" fg:x="630" fg:w="4"/><text x="50.3295%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="50.0795%" y="389" width="0.3180%" height="15" fill="rgb(245,87,12)" fg:x="630" fg:w="4"/><text x="50.3295%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="50.1590%" y="373" width="0.2385%" height="15" fill="rgb(208,12,15)" fg:x="631" fg:w="3"/><text x="50.4090%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="50.2385%" y="357" width="0.1590%" height="15" fill="rgb(250,98,2)" fg:x="632" fg:w="2"/><text x="50.4885%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="50.2385%" y="341" width="0.1590%" height="15" fill="rgb(205,213,15)" fg:x="632" fg:w="2"/><text x="50.4885%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="50.2385%" y="325" width="0.1590%" height="15" fill="rgb(248,192,44)" fg:x="632" fg:w="2"/><text x="50.4885%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.3180%" y="309" width="0.0795%" height="15" fill="rgb(221,89,17)" fg:x="633" fg:w="1"/><text x="50.5680%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.3180%" y="293" width="0.0795%" height="15" fill="rgb(209,55,3)" fg:x="633" fg:w="1"/><text x="50.5680%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.3180%" y="277" width="0.0795%" height="15" fill="rgb(247,23,45)" fg:x="633" fg:w="1"/><text x="50.5680%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="50.3975%" y="389" width="0.1590%" height="15" fill="rgb(235,152,23)" fg:x="634" fg:w="2"/><text x="50.6475%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.4769%" y="373" width="0.0795%" height="15" fill="rgb(244,63,13)" fg:x="635" fg:w="1"/><text x="50.7269%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="50.4769%" y="357" width="0.0795%" height="15" fill="rgb(227,30,37)" fg:x="635" fg:w="1"/><text x="50.7269%" y="367.50"></text></g><g><title>core::iter::adapters::try_process (25 samples, 1.99%)</title><rect x="48.6486%" y="565" width="1.9873%" height="15" fill="rgb(224,49,42)" fg:x="612" fg:w="25"/><text x="48.8986%" y="575.50">c..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (14 samples, 1.11%)</title><rect x="49.5231%" y="549" width="1.1129%" height="15" fill="rgb(218,129,5)" fg:x="623" fg:w="14"/><text x="49.7731%" y="559.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (12 samples, 0.95%)</title><rect x="49.6820%" y="533" width="0.9539%" height="15" fill="rgb(240,199,54)" fg:x="625" fg:w="12"/><text x="49.9320%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (12 samples, 0.95%)</title><rect x="49.6820%" y="517" width="0.9539%" height="15" fill="rgb(234,31,13)" fg:x="625" fg:w="12"/><text x="49.9320%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (12 samples, 0.95%)</title><rect x="49.6820%" y="501" width="0.9539%" height="15" fill="rgb(219,73,54)" fg:x="625" fg:w="12"/><text x="49.9320%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (10 samples, 0.79%)</title><rect x="49.8410%" y="485" width="0.7949%" height="15" fill="rgb(251,162,10)" fg:x="627" fg:w="10"/><text x="50.0910%" y="495.50"></text></g><g><title>engine::internal::Entities::prepare_entity (9 samples, 0.72%)</title><rect x="49.9205%" y="469" width="0.7154%" height="15" fill="rgb(240,138,47)" fg:x="628" fg:w="9"/><text x="50.1705%" y="479.50"></text></g><g><title>kernel::model::deserialize_entity (7 samples, 0.56%)</title><rect x="50.0795%" y="453" width="0.5564%" height="15" fill="rgb(216,138,26)" fg:x="630" fg:w="7"/><text x="50.3295%" y="463.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="50.3975%" y="437" width="0.2385%" height="15" fill="rgb(243,17,35)" fg:x="634" fg:w="3"/><text x="50.6475%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="50.3975%" y="421" width="0.2385%" height="15" fill="rgb(241,60,18)" fg:x="634" fg:w="3"/><text x="50.6475%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="50.3975%" y="405" width="0.2385%" height="15" fill="rgb(234,2,44)" fg:x="634" fg:w="3"/><text x="50.6475%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="50.5564%" y="389" width="0.0795%" height="15" fill="rgb(225,225,33)" fg:x="636" fg:w="1"/><text x="50.8064%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.5564%" y="373" width="0.0795%" height="15" fill="rgb(234,50,31)" fg:x="636" fg:w="1"/><text x="50.8064%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="50.5564%" y="357" width="0.0795%" height="15" fill="rgb(249,6,25)" fg:x="636" fg:w="1"/><text x="50.8064%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="50.6359%" y="533" width="0.3975%" height="15" fill="rgb(241,5,17)" fg:x="637" fg:w="5"/><text x="50.8859%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="50.7949%" y="517" width="0.2385%" height="15" fill="rgb(207,116,10)" fg:x="639" fg:w="3"/><text x="51.0449%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="50.7949%" y="501" width="0.2385%" height="15" fill="rgb(222,128,18)" fg:x="639" fg:w="3"/><text x="51.0449%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.9539%" y="485" width="0.0795%" height="15" fill="rgb(229,109,25)" fg:x="641" fg:w="1"/><text x="51.2039%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.9539%" y="469" width="0.0795%" height="15" fill="rgb(222,102,25)" fg:x="641" fg:w="1"/><text x="51.2039%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.9539%" y="453" width="0.0795%" height="15" fill="rgb(239,211,5)" fg:x="641" fg:w="1"/><text x="51.2039%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.9539%" y="437" width="0.0795%" height="15" fill="rgb(223,136,26)" fg:x="641" fg:w="1"/><text x="51.2039%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.9539%" y="421" width="0.0795%" height="15" fill="rgb(227,30,15)" fg:x="641" fg:w="1"/><text x="51.2039%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="50.9539%" y="405" width="0.0795%" height="15" fill="rgb(247,76,4)" fg:x="641" fg:w="1"/><text x="51.2039%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="50.9539%" y="389" width="0.0795%" height="15" fill="rgb(245,38,48)" fg:x="641" fg:w="1"/><text x="51.2039%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="51.0334%" y="533" width="0.1590%" height="15" fill="rgb(210,220,14)" fg:x="642" fg:w="2"/><text x="51.2834%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="51.0334%" y="517" width="0.1590%" height="15" fill="rgb(224,60,51)" fg:x="642" fg:w="2"/><text x="51.2834%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="51.0334%" y="501" width="0.1590%" height="15" fill="rgb(212,133,49)" fg:x="642" fg:w="2"/><text x="51.2834%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="51.0334%" y="485" width="0.1590%" height="15" fill="rgb(231,39,22)" fg:x="642" fg:w="2"/><text x="51.2834%" y="495.50"></text></g><g><title>engine::internal::Entities::prepare_entity (2 samples, 0.16%)</title><rect x="51.0334%" y="469" width="0.1590%" height="15" fill="rgb(236,173,22)" fg:x="642" fg:w="2"/><text x="51.2834%" y="479.50"></text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="51.0334%" y="453" width="0.1590%" height="15" fill="rgb(210,70,0)" fg:x="642" fg:w="2"/><text x="51.2834%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.1129%" y="437" width="0.0795%" height="15" fill="rgb(215,170,11)" fg:x="643" fg:w="1"/><text x="51.3629%" y="447.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (36 samples, 2.86%)</title><rect x="48.5692%" y="581" width="2.8617%" height="15" fill="rgb(220,154,28)" fg:x="611" fg:w="36"/><text x="48.8192%" y="591.50">pl..</text></g><g><title>kernel::model::entry::Entry::scope (10 samples, 0.79%)</title><rect x="50.6359%" y="565" width="0.7949%" height="15" fill="rgb(240,160,41)" fg:x="637" fg:w="10"/><text x="50.8859%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (10 samples, 0.79%)</title><rect x="50.6359%" y="549" width="0.7949%" height="15" fill="rgb(243,215,41)" fg:x="637" fg:w="10"/><text x="50.8859%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="51.1924%" y="533" width="0.2385%" height="15" fill="rgb(214,208,31)" fg:x="644" fg:w="3"/><text x="51.4424%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="51.1924%" y="517" width="0.2385%" height="15" fill="rgb(247,57,22)" fg:x="644" fg:w="3"/><text x="51.4424%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="51.2719%" y="501" width="0.1590%" height="15" fill="rgb(228,73,52)" fg:x="645" fg:w="2"/><text x="51.5219%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="51.2719%" y="485" width="0.1590%" height="15" fill="rgb(252,60,9)" fg:x="645" fg:w="2"/><text x="51.5219%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="51.2719%" y="469" width="0.1590%" height="15" fill="rgb(233,9,51)" fg:x="645" fg:w="2"/><text x="51.5219%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="51.2719%" y="453" width="0.1590%" height="15" fill="rgb(223,67,14)" fg:x="645" fg:w="2"/><text x="51.5219%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.3514%" y="437" width="0.0795%" height="15" fill="rgb(222,86,2)" fg:x="646" fg:w="1"/><text x="51.6014%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.4308%" y="565" width="0.0795%" height="15" fill="rgb(243,58,54)" fg:x="647" fg:w="1"/><text x="51.6808%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="51.5898%" y="533" width="0.2385%" height="15" fill="rgb(210,200,39)" fg:x="649" fg:w="3"/><text x="51.8398%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="51.5898%" y="517" width="0.2385%" height="15" fill="rgb(238,135,9)" fg:x="649" fg:w="3"/><text x="51.8398%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="51.5898%" y="501" width="0.2385%" height="15" fill="rgb(232,179,7)" fg:x="649" fg:w="3"/><text x="51.8398%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.7488%" y="485" width="0.0795%" height="15" fill="rgb(245,65,41)" fg:x="651" fg:w="1"/><text x="51.9988%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="51.9078%" y="469" width="0.0795%" height="15" fill="rgb(227,43,8)" fg:x="653" fg:w="1"/><text x="52.1578%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="51.9873%" y="469" width="0.0795%" height="15" fill="rgb(235,91,14)" fg:x="654" fg:w="1"/><text x="52.2373%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.9873%" y="453" width="0.0795%" height="15" fill="rgb(235,219,31)" fg:x="654" fg:w="1"/><text x="52.2373%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.9873%" y="437" width="0.0795%" height="15" fill="rgb(227,121,25)" fg:x="654" fg:w="1"/><text x="52.2373%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.9873%" y="421" width="0.0795%" height="15" fill="rgb(254,129,24)" fg:x="654" fg:w="1"/><text x="52.2373%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.9873%" y="405" width="0.0795%" height="15" fill="rgb(226,144,49)" fg:x="654" fg:w="1"/><text x="52.2373%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.9873%" y="389" width="0.0795%" height="15" fill="rgb(214,187,32)" fg:x="654" fg:w="1"/><text x="52.2373%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.9873%" y="373" width="0.0795%" height="15" fill="rgb(243,129,46)" fg:x="654" fg:w="1"/><text x="52.2373%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.9873%" y="357" width="0.0795%" height="15" fill="rgb(221,185,35)" fg:x="654" fg:w="1"/><text x="52.2373%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.9873%" y="341" width="0.0795%" height="15" fill="rgb(205,0,32)" fg:x="654" fg:w="1"/><text x="52.2373%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.9873%" y="325" width="0.0795%" height="15" fill="rgb(229,179,12)" fg:x="654" fg:w="1"/><text x="52.2373%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.9873%" y="309" width="0.0795%" height="15" fill="rgb(252,107,19)" fg:x="654" fg:w="1"/><text x="52.2373%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.9873%" y="293" width="0.0795%" height="15" fill="rgb(220,95,27)" fg:x="654" fg:w="1"/><text x="52.2373%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.9873%" y="277" width="0.0795%" height="15" fill="rgb(240,113,40)" fg:x="654" fg:w="1"/><text x="52.2373%" y="287.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="52.1463%" y="453" width="0.0795%" height="15" fill="rgb(208,4,43)" fg:x="656" fg:w="1"/><text x="52.3963%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.1463%" y="437" width="0.0795%" height="15" fill="rgb(247,189,30)" fg:x="656" fg:w="1"/><text x="52.3963%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.1463%" y="421" width="0.0795%" height="15" fill="rgb(231,157,17)" fg:x="656" fg:w="1"/><text x="52.3963%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="52.1463%" y="405" width="0.0795%" height="15" fill="rgb(224,139,6)" fg:x="656" fg:w="1"/><text x="52.3963%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="52.1463%" y="389" width="0.0795%" height="15" fill="rgb(223,83,16)" fg:x="656" fg:w="1"/><text x="52.3963%" y="399.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.08%)</title><rect x="52.2258%" y="453" width="0.0795%" height="15" fill="rgb(232,211,20)" fg:x="657" fg:w="1"/><text x="52.4758%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.2258%" y="437" width="0.0795%" height="15" fill="rgb(225,203,35)" fg:x="657" fg:w="1"/><text x="52.4758%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.5437%" y="373" width="0.0795%" height="15" fill="rgb(215,211,44)" fg:x="661" fg:w="1"/><text x="52.7937%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.7027%" y="341" width="0.0795%" height="15" fill="rgb(248,213,26)" fg:x="663" fg:w="1"/><text x="52.9527%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="52.8617%" y="325" width="0.1590%" height="15" fill="rgb(214,23,52)" fg:x="665" fg:w="2"/><text x="53.1117%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="52.9412%" y="309" width="0.0795%" height="15" fill="rgb(225,173,50)" fg:x="666" fg:w="1"/><text x="53.1912%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="52.9412%" y="293" width="0.0795%" height="15" fill="rgb(206,150,22)" fg:x="666" fg:w="1"/><text x="53.1912%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="52.9412%" y="277" width="0.0795%" height="15" fill="rgb(239,64,23)" fg:x="666" fg:w="1"/><text x="53.1912%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="53.0207%" y="325" width="0.0795%" height="15" fill="rgb(242,50,38)" fg:x="667" fg:w="1"/><text x="53.2707%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="53.0207%" y="309" width="0.0795%" height="15" fill="rgb(217,91,15)" fg:x="667" fg:w="1"/><text x="53.2707%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="53.0207%" y="293" width="0.0795%" height="15" fill="rgb(230,172,6)" fg:x="667" fg:w="1"/><text x="53.2707%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.1002%" y="293" width="0.0795%" height="15" fill="rgb(221,98,26)" fg:x="668" fg:w="1"/><text x="53.3502%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (12 samples, 0.95%)</title><rect x="52.6232%" y="373" width="0.9539%" height="15" fill="rgb(227,210,45)" fg:x="662" fg:w="12"/><text x="52.8732%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.95%)</title><rect x="52.6232%" y="357" width="0.9539%" height="15" fill="rgb(206,8,30)" fg:x="662" fg:w="12"/><text x="52.8732%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (10 samples, 0.79%)</title><rect x="52.7822%" y="341" width="0.7949%" height="15" fill="rgb(241,219,17)" fg:x="664" fg:w="10"/><text x="53.0322%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="53.1002%" y="325" width="0.4769%" height="15" fill="rgb(247,121,29)" fg:x="668" fg:w="6"/><text x="53.3502%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="53.1002%" y="309" width="0.4769%" height="15" fill="rgb(219,169,49)" fg:x="668" fg:w="6"/><text x="53.3502%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="53.1797%" y="293" width="0.3975%" height="15" fill="rgb(253,49,49)" fg:x="669" fg:w="5"/><text x="53.4297%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="53.1797%" y="277" width="0.3975%" height="15" fill="rgb(217,178,3)" fg:x="669" fg:w="5"/><text x="53.4297%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="53.4181%" y="261" width="0.1590%" height="15" fill="rgb(234,73,37)" fg:x="672" fg:w="2"/><text x="53.6681%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.4976%" y="245" width="0.0795%" height="15" fill="rgb(250,98,22)" fg:x="673" fg:w="1"/><text x="53.7476%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.7361%" y="341" width="0.0795%" height="15" fill="rgb(220,108,37)" fg:x="676" fg:w="1"/><text x="53.9861%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.8156%" y="309" width="0.0795%" height="15" fill="rgb(225,168,10)" fg:x="677" fg:w="1"/><text x="54.0656%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.8156%" y="293" width="0.0795%" height="15" fill="rgb(247,215,21)" fg:x="677" fg:w="1"/><text x="54.0656%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="53.8156%" y="341" width="0.1590%" height="15" fill="rgb(253,189,31)" fg:x="677" fg:w="2"/><text x="54.0656%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="53.8156%" y="325" width="0.1590%" height="15" fill="rgb(241,54,22)" fg:x="677" fg:w="2"/><text x="54.0656%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="53.8951%" y="309" width="0.0795%" height="15" fill="rgb(211,87,4)" fg:x="678" fg:w="1"/><text x="54.1451%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.8951%" y="293" width="0.0795%" height="15" fill="rgb(245,112,24)" fg:x="678" fg:w="1"/><text x="54.1451%" y="303.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (23 samples, 1.83%)</title><rect x="52.3052%" y="437" width="1.8283%" height="15" fill="rgb(235,190,41)" fg:x="658" fg:w="23"/><text x="52.5552%" y="447.50">k..</text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (23 samples, 1.83%)</title><rect x="52.3052%" y="421" width="1.8283%" height="15" fill="rgb(214,89,8)" fg:x="658" fg:w="23"/><text x="52.5552%" y="431.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (22 samples, 1.75%)</title><rect x="52.3847%" y="405" width="1.7488%" height="15" fill="rgb(249,155,35)" fg:x="659" fg:w="22"/><text x="52.6347%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (22 samples, 1.75%)</title><rect x="52.3847%" y="389" width="1.7488%" height="15" fill="rgb(249,88,26)" fg:x="659" fg:w="22"/><text x="52.6347%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="53.5771%" y="373" width="0.5564%" height="15" fill="rgb(232,56,8)" fg:x="674" fg:w="7"/><text x="53.8271%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="53.5771%" y="357" width="0.5564%" height="15" fill="rgb(240,95,3)" fg:x="674" fg:w="7"/><text x="53.8271%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (2 samples, 0.16%)</title><rect x="53.9746%" y="341" width="0.1590%" height="15" fill="rgb(222,44,28)" fg:x="679" fg:w="2"/><text x="54.2246%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.2130%" y="389" width="0.0795%" height="15" fill="rgb(234,16,30)" fg:x="682" fg:w="1"/><text x="54.4630%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.2130%" y="373" width="0.0795%" height="15" fill="rgb(223,26,17)" fg:x="682" fg:w="1"/><text x="54.4630%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="54.4515%" y="357" width="0.1590%" height="15" fill="rgb(239,187,47)" fg:x="685" fg:w="2"/><text x="54.7015%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="54.5310%" y="341" width="0.0795%" height="15" fill="rgb(247,102,50)" fg:x="686" fg:w="1"/><text x="54.7810%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.6900%" y="325" width="0.0795%" height="15" fill="rgb(231,216,22)" fg:x="688" fg:w="1"/><text x="54.9400%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="54.6105%" y="357" width="0.2385%" height="15" fill="rgb(216,201,26)" fg:x="687" fg:w="3"/><text x="54.8605%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="54.6105%" y="341" width="0.2385%" height="15" fill="rgb(214,186,23)" fg:x="687" fg:w="3"/><text x="54.8605%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="54.7695%" y="325" width="0.0795%" height="15" fill="rgb(235,184,4)" fg:x="689" fg:w="1"/><text x="55.0195%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.8490%" y="325" width="0.0795%" height="15" fill="rgb(244,46,17)" fg:x="690" fg:w="1"/><text x="55.0990%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.8490%" y="309" width="0.0795%" height="15" fill="rgb(248,74,46)" fg:x="690" fg:w="1"/><text x="55.0990%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.8490%" y="293" width="0.0795%" height="15" fill="rgb(243,79,5)" fg:x="690" fg:w="1"/><text x="55.0990%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="55.0874%" y="293" width="0.2385%" height="15" fill="rgb(213,148,1)" fg:x="693" fg:w="3"/><text x="55.3374%" y="303.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="55.0874%" y="277" width="0.2385%" height="15" fill="rgb(221,30,0)" fg:x="693" fg:w="3"/><text x="55.3374%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="55.3259%" y="293" width="0.1590%" height="15" fill="rgb(207,85,29)" fg:x="696" fg:w="2"/><text x="55.5759%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="55.3259%" y="277" width="0.1590%" height="15" fill="rgb(239,31,46)" fg:x="696" fg:w="2"/><text x="55.5759%" y="287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="55.4054%" y="261" width="0.0795%" height="15" fill="rgb(219,6,1)" fg:x="697" fg:w="1"/><text x="55.6554%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="55.4849%" y="261" width="0.0795%" height="15" fill="rgb(229,90,29)" fg:x="698" fg:w="1"/><text x="55.7349%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.4849%" y="245" width="0.0795%" height="15" fill="rgb(242,201,42)" fg:x="698" fg:w="1"/><text x="55.7349%" y="255.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (49 samples, 3.90%)</title><rect x="51.8283%" y="533" width="3.8951%" height="15" fill="rgb(243,80,54)" fg:x="652" fg:w="49"/><text x="52.0783%" y="543.50">&lt;plu..</text></g><g><title>core::iter::adapters::try_process (49 samples, 3.90%)</title><rect x="51.8283%" y="517" width="3.8951%" height="15" fill="rgb(223,166,15)" fg:x="652" fg:w="49"/><text x="52.0783%" y="527.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (49 samples, 3.90%)</title><rect x="51.8283%" y="501" width="3.8951%" height="15" fill="rgb(238,78,27)" fg:x="652" fg:w="49"/><text x="52.0783%" y="511.50">&lt;all..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (49 samples, 3.90%)</title><rect x="51.8283%" y="485" width="3.8951%" height="15" fill="rgb(235,28,43)" fg:x="652" fg:w="49"/><text x="52.0783%" y="495.50">&lt;eng..</text></g><g><title>engine::internal::Entities::prepare_entity (46 samples, 3.66%)</title><rect x="52.0668%" y="469" width="3.6566%" height="15" fill="rgb(240,210,28)" fg:x="655" fg:w="46"/><text x="52.3168%" y="479.50">engi..</text></g><g><title>kernel::model::deserialize_entity (43 samples, 3.42%)</title><rect x="52.3052%" y="453" width="3.4181%" height="15" fill="rgb(253,6,46)" fg:x="658" fg:w="43"/><text x="52.5552%" y="463.50">ker..</text></g><g><title>serde_json::de::from_trait (20 samples, 1.59%)</title><rect x="54.1335%" y="437" width="1.5898%" height="15" fill="rgb(250,159,47)" fg:x="681" fg:w="20"/><text x="54.3835%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (20 samples, 1.59%)</title><rect x="54.1335%" y="421" width="1.5898%" height="15" fill="rgb(216,139,2)" fg:x="681" fg:w="20"/><text x="54.3835%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (20 samples, 1.59%)</title><rect x="54.1335%" y="405" width="1.5898%" height="15" fill="rgb(221,124,44)" fg:x="681" fg:w="20"/><text x="54.3835%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (18 samples, 1.43%)</title><rect x="54.2925%" y="389" width="1.4308%" height="15" fill="rgb(205,37,22)" fg:x="683" fg:w="18"/><text x="54.5425%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 1.35%)</title><rect x="54.3720%" y="373" width="1.3514%" height="15" fill="rgb(250,55,8)" fg:x="684" fg:w="17"/><text x="54.6220%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.87%)</title><rect x="54.8490%" y="357" width="0.8744%" height="15" fill="rgb(215,83,48)" fg:x="690" fg:w="11"/><text x="55.0990%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.87%)</title><rect x="54.8490%" y="341" width="0.8744%" height="15" fill="rgb(253,2,32)" fg:x="690" fg:w="11"/><text x="55.0990%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.79%)</title><rect x="54.9285%" y="325" width="0.7949%" height="15" fill="rgb(236,67,28)" fg:x="691" fg:w="10"/><text x="55.1785%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="55.0874%" y="309" width="0.6359%" height="15" fill="rgb(252,55,15)" fg:x="693" fg:w="8"/><text x="55.3374%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="55.4849%" y="293" width="0.2385%" height="15" fill="rgb(243,173,17)" fg:x="698" fg:w="3"/><text x="55.7349%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="55.4849%" y="277" width="0.2385%" height="15" fill="rgb(215,212,13)" fg:x="698" fg:w="3"/><text x="55.7349%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="55.5644%" y="261" width="0.1590%" height="15" fill="rgb(253,176,6)" fg:x="699" fg:w="2"/><text x="55.8144%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="55.5644%" y="245" width="0.1590%" height="15" fill="rgb(236,105,26)" fg:x="699" fg:w="2"/><text x="55.8144%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="55.5644%" y="229" width="0.1590%" height="15" fill="rgb(239,226,32)" fg:x="699" fg:w="2"/><text x="55.8144%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.7234%" y="501" width="0.0795%" height="15" fill="rgb(236,104,51)" fg:x="701" fg:w="1"/><text x="55.9734%" y="511.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="55.8029%" y="501" width="0.0795%" height="15" fill="rgb(220,172,33)" fg:x="702" fg:w="1"/><text x="56.0529%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.8029%" y="485" width="0.0795%" height="15" fill="rgb(224,182,25)" fg:x="702" fg:w="1"/><text x="56.0529%" y="495.50"></text></g><g><title>plugins_core::tools::get_contained_keys (59 samples, 4.69%)</title><rect x="51.4308%" y="581" width="4.6900%" height="15" fill="rgb(236,184,24)" fg:x="647" fg:w="59"/><text x="51.6808%" y="591.50">plugi..</text></g><g><title>kernel::model::entry::Entry::scope (58 samples, 4.61%)</title><rect x="51.5103%" y="565" width="4.6105%" height="15" fill="rgb(241,221,14)" fg:x="648" fg:w="58"/><text x="51.7603%" y="575.50">kerne..</text></g><g><title>kernel::model::Entity::load_scope (58 samples, 4.61%)</title><rect x="51.5103%" y="549" width="4.6105%" height="15" fill="rgb(227,146,5)" fg:x="648" fg:w="58"/><text x="51.7603%" y="559.50">kerne..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="55.7234%" y="533" width="0.3975%" height="15" fill="rgb(214,15,23)" fg:x="701" fg:w="5"/><text x="55.9734%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="55.7234%" y="517" width="0.3975%" height="15" fill="rgb(233,157,31)" fg:x="701" fg:w="5"/><text x="55.9734%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="55.8824%" y="501" width="0.2385%" height="15" fill="rgb(211,27,52)" fg:x="703" fg:w="3"/><text x="56.1324%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="55.9618%" y="485" width="0.1590%" height="15" fill="rgb(212,223,15)" fg:x="704" fg:w="2"/><text x="56.2118%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="56.0413%" y="469" width="0.0795%" height="15" fill="rgb(254,211,0)" fg:x="705" fg:w="1"/><text x="56.2913%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.0413%" y="453" width="0.0795%" height="15" fill="rgb(205,43,38)" fg:x="705" fg:w="1"/><text x="56.2913%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.0413%" y="437" width="0.0795%" height="15" fill="rgb(242,206,46)" fg:x="705" fg:w="1"/><text x="56.2913%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="56.2003%" y="565" width="0.0795%" height="15" fill="rgb(220,221,12)" fg:x="707" fg:w="1"/><text x="56.4503%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="56.2798%" y="533" width="0.1590%" height="15" fill="rgb(217,156,35)" fg:x="708" fg:w="2"/><text x="56.5298%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="56.2798%" y="517" width="0.1590%" height="15" fill="rgb(207,181,49)" fg:x="708" fg:w="2"/><text x="56.5298%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="56.2798%" y="501" width="0.1590%" height="15" fill="rgb(235,103,47)" fg:x="708" fg:w="2"/><text x="56.5298%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.3593%" y="485" width="0.0795%" height="15" fill="rgb(222,63,28)" fg:x="709" fg:w="1"/><text x="56.6093%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.3593%" y="469" width="0.0795%" height="15" fill="rgb(244,137,21)" fg:x="709" fg:w="1"/><text x="56.6093%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.3593%" y="453" width="0.0795%" height="15" fill="rgb(228,35,27)" fg:x="709" fg:w="1"/><text x="56.6093%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.3593%" y="437" width="0.0795%" height="15" fill="rgb(226,191,41)" fg:x="709" fg:w="1"/><text x="56.6093%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.3593%" y="421" width="0.0795%" height="15" fill="rgb(210,154,3)" fg:x="709" fg:w="1"/><text x="56.6093%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.3593%" y="405" width="0.0795%" height="15" fill="rgb(216,60,49)" fg:x="709" fg:w="1"/><text x="56.6093%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.3593%" y="389" width="0.0795%" height="15" fill="rgb(226,17,20)" fg:x="709" fg:w="1"/><text x="56.6093%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.3593%" y="373" width="0.0795%" height="15" fill="rgb(206,115,35)" fg:x="709" fg:w="1"/><text x="56.6093%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.3593%" y="357" width="0.0795%" height="15" fill="rgb(227,88,1)" fg:x="709" fg:w="1"/><text x="56.6093%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.3593%" y="341" width="0.0795%" height="15" fill="rgb(230,222,24)" fg:x="709" fg:w="1"/><text x="56.6093%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.3593%" y="325" width="0.0795%" height="15" fill="rgb(214,124,32)" fg:x="709" fg:w="1"/><text x="56.6093%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.3593%" y="309" width="0.0795%" height="15" fill="rgb(240,41,36)" fg:x="709" fg:w="1"/><text x="56.6093%" y="319.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="56.4388%" y="533" width="0.0795%" height="15" fill="rgb(221,17,52)" fg:x="710" fg:w="1"/><text x="56.6888%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="56.4388%" y="517" width="0.0795%" height="15" fill="rgb(252,70,16)" fg:x="710" fg:w="1"/><text x="56.6888%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="56.4388%" y="501" width="0.0795%" height="15" fill="rgb(250,177,4)" fg:x="710" fg:w="1"/><text x="56.6888%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="56.4388%" y="485" width="0.0795%" height="15" fill="rgb(240,188,47)" fg:x="710" fg:w="1"/><text x="56.6888%" y="495.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="56.4388%" y="469" width="0.0795%" height="15" fill="rgb(215,92,12)" fg:x="710" fg:w="1"/><text x="56.6888%" y="479.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="56.4388%" y="453" width="0.0795%" height="15" fill="rgb(242,110,29)" fg:x="710" fg:w="1"/><text x="56.6888%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.4388%" y="437" width="0.0795%" height="15" fill="rgb(208,211,26)" fg:x="710" fg:w="1"/><text x="56.6888%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.4388%" y="421" width="0.0795%" height="15" fill="rgb(244,147,6)" fg:x="710" fg:w="1"/><text x="56.6888%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.4388%" y="405" width="0.0795%" height="15" fill="rgb(211,130,42)" fg:x="710" fg:w="1"/><text x="56.6888%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.4388%" y="389" width="0.0795%" height="15" fill="rgb(220,63,1)" fg:x="710" fg:w="1"/><text x="56.6888%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.4388%" y="373" width="0.0795%" height="15" fill="rgb(241,212,30)" fg:x="710" fg:w="1"/><text x="56.6888%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.4388%" y="357" width="0.0795%" height="15" fill="rgb(233,153,17)" fg:x="710" fg:w="1"/><text x="56.6888%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.4388%" y="341" width="0.0795%" height="15" fill="rgb(236,3,10)" fg:x="710" fg:w="1"/><text x="56.6888%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.4388%" y="325" width="0.0795%" height="15" fill="rgb(232,41,21)" fg:x="710" fg:w="1"/><text x="56.6888%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.4388%" y="309" width="0.0795%" height="15" fill="rgb(206,63,51)" fg:x="710" fg:w="1"/><text x="56.6888%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.4388%" y="293" width="0.0795%" height="15" fill="rgb(250,214,3)" fg:x="710" fg:w="1"/><text x="56.6888%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.4388%" y="277" width="0.0795%" height="15" fill="rgb(254,89,27)" fg:x="710" fg:w="1"/><text x="56.6888%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.4388%" y="261" width="0.0795%" height="15" fill="rgb(249,41,14)" fg:x="710" fg:w="1"/><text x="56.6888%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="56.4388%" y="245" width="0.0795%" height="15" fill="rgb(221,196,51)" fg:x="710" fg:w="1"/><text x="56.6888%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="56.5183%" y="533" width="0.0795%" height="15" fill="rgb(214,116,26)" fg:x="711" fg:w="1"/><text x="56.7683%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="56.5183%" y="517" width="0.0795%" height="15" fill="rgb(236,67,7)" fg:x="711" fg:w="1"/><text x="56.7683%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (105 samples, 8.35%)</title><rect x="48.4102%" y="613" width="8.3466%" height="15" fill="rgb(253,179,32)" fg:x="609" fg:w="105"/><text x="48.6602%" y="623.50">&lt;alloc::vec:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (104 samples, 8.27%)</title><rect x="48.4897%" y="597" width="8.2671%" height="15" fill="rgb(218,33,15)" fg:x="610" fg:w="104"/><text x="48.7397%" y="607.50">&lt;core::iter:..</text></g><g><title>plugins_core::tools::get_occupant_keys (8 samples, 0.64%)</title><rect x="56.1208%" y="581" width="0.6359%" height="15" fill="rgb(217,202,41)" fg:x="706" fg:w="8"/><text x="56.3708%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.48%)</title><rect x="56.2798%" y="565" width="0.4769%" height="15" fill="rgb(234,133,5)" fg:x="708" fg:w="6"/><text x="56.5298%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (6 samples, 0.48%)</title><rect x="56.2798%" y="549" width="0.4769%" height="15" fill="rgb(240,47,40)" fg:x="708" fg:w="6"/><text x="56.5298%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="56.5978%" y="533" width="0.1590%" height="15" fill="rgb(234,166,26)" fg:x="712" fg:w="2"/><text x="56.8478%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.5978%" y="517" width="0.1590%" height="15" fill="rgb(244,125,51)" fg:x="712" fg:w="2"/><text x="56.8478%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="56.5978%" y="501" width="0.1590%" height="15" fill="rgb(229,171,11)" fg:x="712" fg:w="2"/><text x="56.8478%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.5978%" y="485" width="0.1590%" height="15" fill="rgb(224,38,45)" fg:x="712" fg:w="2"/><text x="56.8478%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="56.6773%" y="469" width="0.0795%" height="15" fill="rgb(237,27,7)" fg:x="713" fg:w="1"/><text x="56.9273%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="56.6773%" y="453" width="0.0795%" height="15" fill="rgb(216,52,7)" fg:x="713" fg:w="1"/><text x="56.9273%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="56.6773%" y="437" width="0.0795%" height="15" fill="rgb(243,11,11)" fg:x="713" fg:w="1"/><text x="56.9273%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.9157%" y="565" width="0.0795%" height="15" fill="rgb(253,167,20)" fg:x="716" fg:w="1"/><text x="57.1657%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.9157%" y="549" width="0.0795%" height="15" fill="rgb(215,207,5)" fg:x="716" fg:w="1"/><text x="57.1657%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.9157%" y="533" width="0.0795%" height="15" fill="rgb(252,127,31)" fg:x="716" fg:w="1"/><text x="57.1657%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.9157%" y="517" width="0.0795%" height="15" fill="rgb(209,106,27)" fg:x="716" fg:w="1"/><text x="57.1657%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.9157%" y="501" width="0.0795%" height="15" fill="rgb(214,220,18)" fg:x="716" fg:w="1"/><text x="57.1657%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.9157%" y="485" width="0.0795%" height="15" fill="rgb(237,89,12)" fg:x="716" fg:w="1"/><text x="57.1657%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.9157%" y="469" width="0.0795%" height="15" fill="rgb(209,167,36)" fg:x="716" fg:w="1"/><text x="57.1657%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.9157%" y="453" width="0.0795%" height="15" fill="rgb(243,45,22)" fg:x="716" fg:w="1"/><text x="57.1657%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.9157%" y="437" width="0.0795%" height="15" fill="rgb(239,2,46)" fg:x="716" fg:w="1"/><text x="57.1657%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.9157%" y="421" width="0.0795%" height="15" fill="rgb(241,101,0)" fg:x="716" fg:w="1"/><text x="57.1657%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.9157%" y="405" width="0.0795%" height="15" fill="rgb(244,34,31)" fg:x="716" fg:w="1"/><text x="57.1657%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.9157%" y="389" width="0.0795%" height="15" fill="rgb(248,23,22)" fg:x="716" fg:w="1"/><text x="57.1657%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="57.2337%" y="325" width="0.1590%" height="15" fill="rgb(218,27,48)" fg:x="720" fg:w="2"/><text x="57.4837%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="57.2337%" y="309" width="0.1590%" height="15" fill="rgb(232,78,1)" fg:x="720" fg:w="2"/><text x="57.4837%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="57.2337%" y="421" width="0.2385%" height="15" fill="rgb(233,169,12)" fg:x="720" fg:w="3"/><text x="57.4837%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="57.2337%" y="405" width="0.2385%" height="15" fill="rgb(225,222,54)" fg:x="720" fg:w="3"/><text x="57.4837%" y="415.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.24%)</title><rect x="57.2337%" y="389" width="0.2385%" height="15" fill="rgb(245,126,29)" fg:x="720" fg:w="3"/><text x="57.4837%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.24%)</title><rect x="57.2337%" y="373" width="0.2385%" height="15" fill="rgb(241,63,48)" fg:x="720" fg:w="3"/><text x="57.4837%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.24%)</title><rect x="57.2337%" y="357" width="0.2385%" height="15" fill="rgb(235,126,38)" fg:x="720" fg:w="3"/><text x="57.4837%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.24%)</title><rect x="57.2337%" y="341" width="0.2385%" height="15" fill="rgb(232,96,49)" fg:x="720" fg:w="3"/><text x="57.4837%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="57.3927%" y="325" width="0.0795%" height="15" fill="rgb(211,146,40)" fg:x="722" fg:w="1"/><text x="57.6427%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (8 samples, 0.64%)</title><rect x="56.9952%" y="565" width="0.6359%" height="15" fill="rgb(247,93,44)" fg:x="717" fg:w="8"/><text x="57.2452%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.56%)</title><rect x="57.0747%" y="549" width="0.5564%" height="15" fill="rgb(251,41,49)" fg:x="718" fg:w="7"/><text x="57.3247%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (7 samples, 0.56%)</title><rect x="57.0747%" y="533" width="0.5564%" height="15" fill="rgb(218,155,12)" fg:x="718" fg:w="7"/><text x="57.3247%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (7 samples, 0.56%)</title><rect x="57.0747%" y="517" width="0.5564%" height="15" fill="rgb(221,161,30)" fg:x="718" fg:w="7"/><text x="57.3247%" y="527.50"></text></g><g><title>core::fmt::write (7 samples, 0.56%)</title><rect x="57.0747%" y="501" width="0.5564%" height="15" fill="rgb(221,179,11)" fg:x="718" fg:w="7"/><text x="57.3247%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (7 samples, 0.56%)</title><rect x="57.0747%" y="485" width="0.5564%" height="15" fill="rgb(224,170,48)" fg:x="718" fg:w="7"/><text x="57.3247%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (7 samples, 0.56%)</title><rect x="57.0747%" y="469" width="0.5564%" height="15" fill="rgb(223,117,5)" fg:x="718" fg:w="7"/><text x="57.3247%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (7 samples, 0.56%)</title><rect x="57.0747%" y="453" width="0.5564%" height="15" fill="rgb(209,52,20)" fg:x="718" fg:w="7"/><text x="57.3247%" y="463.50"></text></g><g><title>core::fmt::write (5 samples, 0.40%)</title><rect x="57.2337%" y="437" width="0.3975%" height="15" fill="rgb(209,19,41)" fg:x="720" fg:w="5"/><text x="57.4837%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="57.4722%" y="421" width="0.1590%" height="15" fill="rgb(210,177,12)" fg:x="723" fg:w="2"/><text x="57.7222%" y="431.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="57.4722%" y="405" width="0.1590%" height="15" fill="rgb(211,159,37)" fg:x="723" fg:w="2"/><text x="57.7222%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="57.5517%" y="389" width="0.0795%" height="15" fill="rgb(209,20,2)" fg:x="724" fg:w="1"/><text x="57.8017%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="57.5517%" y="373" width="0.0795%" height="15" fill="rgb(244,3,46)" fg:x="724" fg:w="1"/><text x="57.8017%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="57.5517%" y="357" width="0.0795%" height="15" fill="rgb(220,94,38)" fg:x="724" fg:w="1"/><text x="57.8017%" y="367.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="57.5517%" y="341" width="0.0795%" height="15" fill="rgb(253,14,31)" fg:x="724" fg:w="1"/><text x="57.8017%" y="351.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="57.5517%" y="325" width="0.0795%" height="15" fill="rgb(234,176,13)" fg:x="724" fg:w="1"/><text x="57.8017%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="57.5517%" y="309" width="0.0795%" height="15" fill="rgb(218,62,25)" fg:x="724" fg:w="1"/><text x="57.8017%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="57.5517%" y="293" width="0.0795%" height="15" fill="rgb(216,124,40)" fg:x="724" fg:w="1"/><text x="57.8017%" y="303.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="57.5517%" y="277" width="0.0795%" height="15" fill="rgb(228,170,12)" fg:x="724" fg:w="1"/><text x="57.8017%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="57.5517%" y="261" width="0.0795%" height="15" fill="rgb(231,226,5)" fg:x="724" fg:w="1"/><text x="57.8017%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="57.5517%" y="245" width="0.0795%" height="15" fill="rgb(237,122,22)" fg:x="724" fg:w="1"/><text x="57.8017%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="57.5517%" y="229" width="0.0795%" height="15" fill="rgb(209,185,25)" fg:x="724" fg:w="1"/><text x="57.8017%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="57.5517%" y="213" width="0.0795%" height="15" fill="rgb(228,200,32)" fg:x="724" fg:w="1"/><text x="57.8017%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="57.5517%" y="197" width="0.0795%" height="15" fill="rgb(217,140,10)" fg:x="724" fg:w="1"/><text x="57.8017%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="57.5517%" y="181" width="0.0795%" height="15" fill="rgb(253,17,24)" fg:x="724" fg:w="1"/><text x="57.8017%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="57.5517%" y="165" width="0.0795%" height="15" fill="rgb(212,61,6)" fg:x="724" fg:w="1"/><text x="57.8017%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="57.5517%" y="149" width="0.0795%" height="15" fill="rgb(205,14,25)" fg:x="724" fg:w="1"/><text x="57.8017%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="57.5517%" y="133" width="0.0795%" height="15" fill="rgb(232,69,41)" fg:x="724" fg:w="1"/><text x="57.8017%" y="143.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="57.5517%" y="117" width="0.0795%" height="15" fill="rgb(241,106,47)" fg:x="724" fg:w="1"/><text x="57.8017%" y="127.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="57.5517%" y="101" width="0.0795%" height="15" fill="rgb(210,213,53)" fg:x="724" fg:w="1"/><text x="57.8017%" y="111.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="57.5517%" y="85" width="0.0795%" height="15" fill="rgb(253,175,27)" fg:x="724" fg:w="1"/><text x="57.8017%" y="95.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="57.9491%" y="501" width="0.0795%" height="15" fill="rgb(211,171,24)" fg:x="729" fg:w="1"/><text x="58.1991%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.9491%" y="485" width="0.0795%" height="15" fill="rgb(229,80,7)" fg:x="729" fg:w="1"/><text x="58.1991%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="59.9364%" y="357" width="0.0795%" height="15" fill="rgb(212,46,39)" fg:x="754" fg:w="1"/><text x="60.1864%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.9364%" y="341" width="0.0795%" height="15" fill="rgb(240,80,45)" fg:x="754" fg:w="1"/><text x="60.1864%" y="351.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="60.0954%" y="309" width="0.0795%" height="15" fill="rgb(253,177,40)" fg:x="756" fg:w="1"/><text x="60.3454%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="60.0159%" y="325" width="0.3180%" height="15" fill="rgb(249,200,15)" fg:x="755" fg:w="4"/><text x="60.2659%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="60.1749%" y="309" width="0.1590%" height="15" fill="rgb(217,78,26)" fg:x="757" fg:w="2"/><text x="60.4249%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="60.1749%" y="293" width="0.1590%" height="15" fill="rgb(254,151,32)" fg:x="757" fg:w="2"/><text x="60.4249%" y="303.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (7 samples, 0.56%)</title><rect x="60.0159%" y="357" width="0.5564%" height="15" fill="rgb(226,165,27)" fg:x="755" fg:w="7"/><text x="60.2659%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="60.0159%" y="341" width="0.5564%" height="15" fill="rgb(250,206,4)" fg:x="755" fg:w="7"/><text x="60.2659%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="60.3339%" y="325" width="0.2385%" height="15" fill="rgb(231,229,27)" fg:x="759" fg:w="3"/><text x="60.5839%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="60.4134%" y="309" width="0.1590%" height="15" fill="rgb(239,217,8)" fg:x="760" fg:w="2"/><text x="60.6634%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="60.5723%" y="357" width="0.1590%" height="15" fill="rgb(225,204,27)" fg:x="762" fg:w="2"/><text x="60.8223%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="60.5723%" y="341" width="0.1590%" height="15" fill="rgb(230,56,32)" fg:x="762" fg:w="2"/><text x="60.8223%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.32%)</title><rect x="60.7313%" y="341" width="0.3180%" height="15" fill="rgb(222,56,27)" fg:x="764" fg:w="4"/><text x="60.9813%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="60.9698%" y="325" width="0.0795%" height="15" fill="rgb(253,108,27)" fg:x="767" fg:w="1"/><text x="61.2198%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 1.51%)</title><rect x="59.8569%" y="373" width="1.5103%" height="15" fill="rgb(212,87,36)" fg:x="753" fg:w="19"/><text x="60.1069%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.64%)</title><rect x="60.7313%" y="357" width="0.6359%" height="15" fill="rgb(247,82,36)" fg:x="764" fg:w="8"/><text x="60.9813%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.32%)</title><rect x="61.0493%" y="341" width="0.3180%" height="15" fill="rgb(222,143,9)" fg:x="768" fg:w="4"/><text x="61.2993%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (25 samples, 1.99%)</title><rect x="59.7774%" y="389" width="1.9873%" height="15" fill="rgb(238,162,48)" fg:x="752" fg:w="25"/><text x="60.0274%" y="399.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.40%)</title><rect x="61.3672%" y="373" width="0.3975%" height="15" fill="rgb(221,59,43)" fg:x="772" fg:w="5"/><text x="61.6172%" y="383.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="61.3672%" y="357" width="0.3975%" height="15" fill="rgb(205,166,41)" fg:x="772" fg:w="5"/><text x="61.6172%" y="367.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="62.1622%" y="309" width="0.0795%" height="15" fill="rgb(241,186,40)" fg:x="782" fg:w="1"/><text x="62.4122%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.48%)</title><rect x="61.8442%" y="373" width="0.4769%" height="15" fill="rgb(216,119,35)" fg:x="778" fg:w="6"/><text x="62.0942%" y="383.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (5 samples, 0.40%)</title><rect x="61.9237%" y="357" width="0.3975%" height="15" fill="rgb(208,68,38)" fg:x="779" fg:w="5"/><text x="62.1737%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="62.0032%" y="341" width="0.3180%" height="15" fill="rgb(217,113,1)" fg:x="780" fg:w="4"/><text x="62.2532%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="62.0032%" y="325" width="0.3180%" height="15" fill="rgb(242,153,3)" fg:x="780" fg:w="4"/><text x="62.2532%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.2417%" y="309" width="0.0795%" height="15" fill="rgb(229,76,35)" fg:x="783" fg:w="1"/><text x="62.4917%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="62.2417%" y="293" width="0.0795%" height="15" fill="rgb(229,125,34)" fg:x="783" fg:w="1"/><text x="62.4917%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="62.2417%" y="277" width="0.0795%" height="15" fill="rgb(238,179,36)" fg:x="783" fg:w="1"/><text x="62.4917%" y="287.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (34 samples, 2.70%)</title><rect x="59.6979%" y="405" width="2.7027%" height="15" fill="rgb(244,183,19)" fg:x="751" fg:w="34"/><text x="59.9479%" y="415.50">&lt;r..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="61.7647%" y="389" width="0.6359%" height="15" fill="rgb(216,85,49)" fg:x="777" fg:w="8"/><text x="62.0147%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.3211%" y="373" width="0.0795%" height="15" fill="rgb(208,161,47)" fg:x="784" fg:w="1"/><text x="62.5711%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="62.4006%" y="405" width="0.1590%" height="15" fill="rgb(233,210,18)" fg:x="785" fg:w="2"/><text x="62.6506%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="62.4006%" y="389" width="0.1590%" height="15" fill="rgb(205,104,42)" fg:x="785" fg:w="2"/><text x="62.6506%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="62.5596%" y="389" width="0.0795%" height="15" fill="rgb(248,90,43)" fg:x="787" fg:w="1"/><text x="62.8096%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="62.5596%" y="373" width="0.0795%" height="15" fill="rgb(206,198,11)" fg:x="787" fg:w="1"/><text x="62.8096%" y="383.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (46 samples, 3.66%)</title><rect x="59.0620%" y="453" width="3.6566%" height="15" fill="rgb(239,165,27)" fg:x="743" fg:w="46"/><text x="59.3120%" y="463.50">&lt;rpc..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (45 samples, 3.58%)</title><rect x="59.1415%" y="437" width="3.5771%" height="15" fill="rgb(246,44,32)" fg:x="744" fg:w="45"/><text x="59.3915%" y="447.50">&lt;std..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (43 samples, 3.42%)</title><rect x="59.3005%" y="421" width="3.4181%" height="15" fill="rgb(252,65,42)" fg:x="746" fg:w="43"/><text x="59.5505%" y="431.50">&lt;co..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="62.5596%" y="405" width="0.1590%" height="15" fill="rgb(246,197,18)" fg:x="787" fg:w="2"/><text x="62.8096%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.6391%" y="389" width="0.0795%" height="15" fill="rgb(216,192,4)" fg:x="788" fg:w="1"/><text x="62.8891%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="62.7186%" y="453" width="0.3180%" height="15" fill="rgb(208,117,10)" fg:x="789" fg:w="4"/><text x="62.9686%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="62.8776%" y="437" width="0.1590%" height="15" fill="rgb(240,61,47)" fg:x="791" fg:w="2"/><text x="63.1276%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="63.1955%" y="437" width="0.0795%" height="15" fill="rgb(228,178,21)" fg:x="795" fg:w="1"/><text x="63.4455%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="63.1955%" y="421" width="0.0795%" height="15" fill="rgb(219,96,54)" fg:x="795" fg:w="1"/><text x="63.4455%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (62 samples, 4.93%)</title><rect x="58.4261%" y="469" width="4.9285%" height="15" fill="rgb(250,177,24)" fg:x="735" fg:w="62"/><text x="58.6761%" y="479.50">&lt;core:..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="63.0366%" y="453" width="0.3180%" height="15" fill="rgb(242,154,46)" fg:x="793" fg:w="4"/><text x="63.2866%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.2750%" y="437" width="0.0795%" height="15" fill="rgb(226,176,29)" fg:x="796" fg:w="1"/><text x="63.5250%" y="447.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (72 samples, 5.72%)</title><rect x="58.0286%" y="501" width="5.7234%" height="15" fill="rgb(226,29,2)" fg:x="730" fg:w="72"/><text x="58.2786%" y="511.50">&lt;rpc_pr..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (67 samples, 5.33%)</title><rect x="58.4261%" y="485" width="5.3259%" height="15" fill="rgb(237,104,14)" fg:x="735" fg:w="67"/><text x="58.6761%" y="495.50">&lt;std::c..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.40%)</title><rect x="63.3545%" y="469" width="0.3975%" height="15" fill="rgb(245,207,31)" fg:x="797" fg:w="5"/><text x="63.6045%" y="479.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="63.4340%" y="453" width="0.3180%" height="15" fill="rgb(229,211,45)" fg:x="798" fg:w="4"/><text x="63.6840%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="63.7520%" y="501" width="0.1590%" height="15" fill="rgb(229,113,15)" fg:x="802" fg:w="2"/><text x="64.0020%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="64.2289%" y="485" width="0.1590%" height="15" fill="rgb(237,147,15)" fg:x="808" fg:w="2"/><text x="64.4789%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="64.3084%" y="469" width="0.0795%" height="15" fill="rgb(244,120,12)" fg:x="809" fg:w="1"/><text x="64.5584%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (86 samples, 6.84%)</title><rect x="57.6312%" y="517" width="6.8362%" height="15" fill="rgb(205,120,12)" fg:x="725" fg:w="86"/><text x="57.8812%" y="527.50">&lt;core::it..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.56%)</title><rect x="63.9110%" y="501" width="0.5564%" height="15" fill="rgb(231,26,45)" fg:x="804" fg:w="7"/><text x="64.1610%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.3879%" y="485" width="0.0795%" height="15" fill="rgb(246,98,1)" fg:x="810" fg:w="1"/><text x="64.6379%" y="495.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (103 samples, 8.19%)</title><rect x="57.6312%" y="549" width="8.1876%" height="15" fill="rgb(207,68,45)" fg:x="725" fg:w="103"/><text x="57.8812%" y="559.50">&lt;rpc_proto:..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (103 samples, 8.19%)</title><rect x="57.6312%" y="533" width="8.1876%" height="15" fill="rgb(231,27,38)" fg:x="725" fg:w="103"/><text x="57.8812%" y="543.50">&lt;std::colle..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (17 samples, 1.35%)</title><rect x="64.4674%" y="517" width="1.3514%" height="15" fill="rgb(214,223,3)" fg:x="811" fg:w="17"/><text x="64.7174%" y="527.50"></text></g><g><title>__libc_malloc (16 samples, 1.27%)</title><rect x="64.5469%" y="501" width="1.2719%" height="15" fill="rgb(228,195,46)" fg:x="812" fg:w="16"/><text x="64.7969%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="66.0572%" y="501" width="0.1590%" height="15" fill="rgb(231,100,42)" fg:x="831" fg:w="2"/><text x="66.3072%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="66.2162%" y="501" width="0.3975%" height="15" fill="rgb(236,53,4)" fg:x="833" fg:w="5"/><text x="66.4662%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="66.3752%" y="485" width="0.2385%" height="15" fill="rgb(230,152,12)" fg:x="835" fg:w="3"/><text x="66.6252%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.5342%" y="469" width="0.0795%" height="15" fill="rgb(226,101,19)" fg:x="837" fg:w="1"/><text x="66.7842%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="66.6137%" y="501" width="0.1590%" height="15" fill="rgb(250,149,32)" fg:x="838" fg:w="2"/><text x="66.8637%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="66.6932%" y="485" width="0.0795%" height="15" fill="rgb(232,178,12)" fg:x="839" fg:w="1"/><text x="66.9432%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.7727%" y="469" width="0.0795%" height="15" fill="rgb(246,151,17)" fg:x="840" fg:w="1"/><text x="67.0227%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="66.7727%" y="501" width="0.1590%" height="15" fill="rgb(252,17,51)" fg:x="840" fg:w="2"/><text x="67.0227%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="66.7727%" y="485" width="0.1590%" height="15" fill="rgb(250,207,23)" fg:x="840" fg:w="2"/><text x="67.0227%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.8521%" y="469" width="0.0795%" height="15" fill="rgb(205,27,5)" fg:x="841" fg:w="1"/><text x="67.1021%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="66.9316%" y="501" width="0.1590%" height="15" fill="rgb(224,32,19)" fg:x="842" fg:w="2"/><text x="67.1816%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="66.9316%" y="485" width="0.1590%" height="15" fill="rgb(247,214,40)" fg:x="842" fg:w="2"/><text x="67.1816%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="66.9316%" y="469" width="0.1590%" height="15" fill="rgb(239,199,17)" fg:x="842" fg:w="2"/><text x="67.1816%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="66.9316%" y="453" width="0.1590%" height="15" fill="rgb(251,159,9)" fg:x="842" fg:w="2"/><text x="67.1816%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="67.0111%" y="437" width="0.0795%" height="15" fill="rgb(225,78,32)" fg:x="843" fg:w="1"/><text x="67.2611%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.1701%" y="469" width="0.0795%" height="15" fill="rgb(206,97,47)" fg:x="845" fg:w="1"/><text x="67.4201%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="67.2496%" y="469" width="0.1590%" height="15" fill="rgb(227,107,4)" fg:x="846" fg:w="2"/><text x="67.4996%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="67.2496%" y="453" width="0.1590%" height="15" fill="rgb(241,146,50)" fg:x="846" fg:w="2"/><text x="67.4996%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.3291%" y="437" width="0.0795%" height="15" fill="rgb(232,92,30)" fg:x="847" fg:w="1"/><text x="67.5791%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="67.6471%" y="453" width="0.1590%" height="15" fill="rgb(222,0,40)" fg:x="851" fg:w="2"/><text x="67.8971%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="67.8060%" y="453" width="0.1590%" height="15" fill="rgb(219,54,33)" fg:x="853" fg:w="2"/><text x="68.0560%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="68.1240%" y="421" width="0.1590%" height="15" fill="rgb(226,209,28)" fg:x="857" fg:w="2"/><text x="68.3740%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="68.1240%" y="405" width="0.1590%" height="15" fill="rgb(254,205,35)" fg:x="857" fg:w="2"/><text x="68.3740%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="68.2035%" y="389" width="0.0795%" height="15" fill="rgb(230,159,3)" fg:x="858" fg:w="1"/><text x="68.4535%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="68.0445%" y="437" width="0.4769%" height="15" fill="rgb(232,190,24)" fg:x="856" fg:w="6"/><text x="68.2945%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="68.2830%" y="421" width="0.2385%" height="15" fill="rgb(217,227,44)" fg:x="859" fg:w="3"/><text x="68.5330%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.4420%" y="405" width="0.0795%" height="15" fill="rgb(236,211,1)" fg:x="861" fg:w="1"/><text x="68.6920%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (2 samples, 0.16%)</title><rect x="68.5215%" y="437" width="0.1590%" height="15" fill="rgb(250,127,46)" fg:x="862" fg:w="2"/><text x="68.7715%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.7599%" y="421" width="0.0795%" height="15" fill="rgb(229,213,6)" fg:x="865" fg:w="1"/><text x="69.0099%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.8394%" y="389" width="0.0795%" height="15" fill="rgb(237,15,36)" fg:x="866" fg:w="1"/><text x="69.0894%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (24 samples, 1.91%)</title><rect x="67.0906%" y="501" width="1.9078%" height="15" fill="rgb(213,131,41)" fg:x="844" fg:w="24"/><text x="67.3406%" y="511.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (24 samples, 1.91%)</title><rect x="67.0906%" y="485" width="1.9078%" height="15" fill="rgb(225,82,44)" fg:x="844" fg:w="24"/><text x="67.3406%" y="495.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (20 samples, 1.59%)</title><rect x="67.4086%" y="469" width="1.5898%" height="15" fill="rgb(249,42,11)" fg:x="848" fg:w="20"/><text x="67.6586%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (13 samples, 1.03%)</title><rect x="67.9650%" y="453" width="1.0334%" height="15" fill="rgb(253,11,29)" fg:x="855" fg:w="13"/><text x="68.2150%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="68.6804%" y="437" width="0.3180%" height="15" fill="rgb(206,8,54)" fg:x="864" fg:w="4"/><text x="68.9304%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="68.8394%" y="421" width="0.1590%" height="15" fill="rgb(222,186,2)" fg:x="866" fg:w="2"/><text x="69.0894%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="68.8394%" y="405" width="0.1590%" height="15" fill="rgb(221,206,53)" fg:x="866" fg:w="2"/><text x="69.0894%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="68.9189%" y="389" width="0.0795%" height="15" fill="rgb(230,150,21)" fg:x="867" fg:w="1"/><text x="69.1689%" y="399.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="68.9984%" y="485" width="0.0795%" height="15" fill="rgb(253,202,10)" fg:x="868" fg:w="1"/><text x="69.2484%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.3959%" y="453" width="0.0795%" height="15" fill="rgb(238,109,40)" fg:x="873" fg:w="1"/><text x="69.6459%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.5548%" y="405" width="0.0795%" height="15" fill="rgb(247,120,22)" fg:x="875" fg:w="1"/><text x="69.8048%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.5548%" y="389" width="0.0795%" height="15" fill="rgb(207,43,30)" fg:x="875" fg:w="1"/><text x="69.8048%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.5548%" y="373" width="0.0795%" height="15" fill="rgb(213,211,24)" fg:x="875" fg:w="1"/><text x="69.8048%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="69.5548%" y="421" width="0.1590%" height="15" fill="rgb(239,73,39)" fg:x="875" fg:w="2"/><text x="69.8048%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="69.6343%" y="405" width="0.0795%" height="15" fill="rgb(245,182,19)" fg:x="876" fg:w="1"/><text x="69.8843%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.6343%" y="389" width="0.0795%" height="15" fill="rgb(247,143,26)" fg:x="876" fg:w="1"/><text x="69.8843%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="69.4754%" y="453" width="0.3975%" height="15" fill="rgb(228,191,23)" fg:x="874" fg:w="5"/><text x="69.7254%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="69.4754%" y="437" width="0.3975%" height="15" fill="rgb(253,165,31)" fg:x="874" fg:w="5"/><text x="69.7254%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="69.7138%" y="421" width="0.1590%" height="15" fill="rgb(234,138,20)" fg:x="877" fg:w="2"/><text x="69.9638%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.1113%" y="389" width="0.0795%" height="15" fill="rgb(218,191,29)" fg:x="882" fg:w="1"/><text x="70.3613%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="69.9523%" y="421" width="0.3180%" height="15" fill="rgb(221,157,19)" fg:x="880" fg:w="4"/><text x="70.2023%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="70.0318%" y="405" width="0.2385%" height="15" fill="rgb(237,26,42)" fg:x="881" fg:w="3"/><text x="70.2818%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="70.1908%" y="389" width="0.0795%" height="15" fill="rgb(220,163,24)" fg:x="883" fg:w="1"/><text x="70.4408%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="69.9523%" y="437" width="0.3975%" height="15" fill="rgb(242,115,20)" fg:x="880" fg:w="5"/><text x="70.2023%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="70.2703%" y="421" width="0.0795%" height="15" fill="rgb(210,206,9)" fg:x="884" fg:w="1"/><text x="70.5203%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.19%)</title><rect x="69.2369%" y="469" width="1.1924%" height="15" fill="rgb(208,71,17)" fg:x="871" fg:w="15"/><text x="69.4869%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="69.8728%" y="453" width="0.5564%" height="15" fill="rgb(233,7,5)" fg:x="879" fg:w="7"/><text x="70.1228%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.3498%" y="437" width="0.0795%" height="15" fill="rgb(207,92,33)" fg:x="885" fg:w="1"/><text x="70.5998%" y="447.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (162 samples, 12.88%)</title><rect x="57.6312%" y="565" width="12.8776%" height="15" fill="rgb(218,87,9)" fg:x="725" fg:w="162"/><text x="57.8812%" y="575.50">&lt;rpc_proto::Json as..</text></g><g><title>kernel::model::EntityPtr::to_json_value (59 samples, 4.69%)</title><rect x="65.8188%" y="549" width="4.6900%" height="15" fill="rgb(219,47,37)" fg:x="828" fg:w="59"/><text x="66.0688%" y="559.50">kerne..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (59 samples, 4.69%)</title><rect x="65.8188%" y="533" width="4.6900%" height="15" fill="rgb(221,152,34)" fg:x="828" fg:w="59"/><text x="66.0688%" y="543.50">kerne..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (59 samples, 4.69%)</title><rect x="65.8188%" y="517" width="4.6900%" height="15" fill="rgb(235,176,21)" fg:x="828" fg:w="59"/><text x="66.0688%" y="527.50">&lt;serd..</text></g><g><title>serde::ser::Serializer::collect_map (19 samples, 1.51%)</title><rect x="68.9984%" y="501" width="1.5103%" height="15" fill="rgb(232,212,21)" fg:x="868" fg:w="19"/><text x="69.2484%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (18 samples, 1.43%)</title><rect x="69.0779%" y="485" width="1.4308%" height="15" fill="rgb(245,82,39)" fg:x="869" fg:w="18"/><text x="69.3279%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="70.4293%" y="469" width="0.0795%" height="15" fill="rgb(241,52,51)" fg:x="886" fg:w="1"/><text x="70.6793%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.4293%" y="453" width="0.0795%" height="15" fill="rgb(219,91,24)" fg:x="886" fg:w="1"/><text x="70.6793%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="70.5087%" y="565" width="0.1590%" height="15" fill="rgb(241,142,12)" fg:x="887" fg:w="2"/><text x="70.7587%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.6677%" y="549" width="0.0795%" height="15" fill="rgb(230,27,9)" fg:x="889" fg:w="1"/><text x="70.9177%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (178 samples, 14.15%)</title><rect x="56.8362%" y="597" width="14.1494%" height="15" fill="rgb(249,181,32)" fg:x="715" fg:w="178"/><text x="57.0862%" y="607.50">&lt;core::iter::adapters..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (177 samples, 14.07%)</title><rect x="56.9157%" y="581" width="14.0700%" height="15" fill="rgb(230,107,3)" fg:x="716" fg:w="177"/><text x="57.1657%" y="591.50">plugins_rpc::sessions..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (4 samples, 0.32%)</title><rect x="70.6677%" y="565" width="0.3180%" height="15" fill="rgb(246,204,14)" fg:x="889" fg:w="4"/><text x="70.9177%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (3 samples, 0.24%)</title><rect x="70.7472%" y="549" width="0.2385%" height="15" fill="rgb(213,192,47)" fg:x="890" fg:w="3"/><text x="70.9972%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="70.8267%" y="533" width="0.1590%" height="15" fill="rgb(240,44,36)" fg:x="891" fg:w="2"/><text x="71.0767%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (285 samples, 22.66%)</title><rect x="48.4102%" y="629" width="22.6550%" height="15" fill="rgb(244,209,38)" fg:x="609" fg:w="285"/><text x="48.6602%" y="639.50">core::iter::adapters::try_process</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (180 samples, 14.31%)</title><rect x="56.7568%" y="613" width="14.3084%" height="15" fill="rgb(219,34,37)" fg:x="714" fg:w="180"/><text x="57.0068%" y="623.50">alloc::vec::in_place_c..</text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="70.9857%" y="597" width="0.0795%" height="15" fill="rgb(210,28,6)" fg:x="893" fg:w="1"/><text x="71.2357%" y="607.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (292 samples, 23.21%)</title><rect x="47.9332%" y="645" width="23.2114%" height="15" fill="rgb(244,110,52)" fg:x="603" fg:w="292"/><text x="48.1832%" y="655.50">&lt;plugins_rpc::sessions::SessionServic..</text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="71.0652%" y="629" width="0.0795%" height="15" fill="rgb(254,124,47)" fg:x="894" fg:w="1"/><text x="71.3152%" y="639.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="71.1447%" y="645" width="0.0795%" height="15" fill="rgb(254,110,13)" fg:x="895" fg:w="1"/><text x="71.3947%" y="655.50"></text></g><g><title>engine::perform::StandardPerformer::perform (353 samples, 28.06%)</title><rect x="43.3227%" y="709" width="28.0604%" height="15" fill="rgb(252,57,21)" fg:x="545" fg:w="353"/><text x="43.5727%" y="719.50">engine::perform::StandardPerformer::perform</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (328 samples, 26.07%)</title><rect x="45.3100%" y="693" width="26.0731%" height="15" fill="rgb(242,60,45)" fg:x="570" fg:w="328"/><text x="45.5600%" y="703.50">kernel::plugins::SessionPlugins::have_surr..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (328 samples, 26.07%)</title><rect x="45.3100%" y="677" width="26.0731%" height="15" fill="rgb(234,49,30)" fg:x="570" fg:w="328"/><text x="45.5600%" y="687.50">&lt;plugins_dynlib::DynamicPlugin as kernel::..</text></g><g><title>plugins_rpc::querying::have_surroundings (296 samples, 23.53%)</title><rect x="47.8537%" y="661" width="23.5294%" height="15" fill="rgb(218,98,6)" fg:x="602" fg:w="296"/><text x="48.1037%" y="671.50">plugins_rpc::querying::have_surroundi..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="71.2242%" y="645" width="0.1590%" height="15" fill="rgb(220,174,29)" fg:x="896" fg:w="2"/><text x="71.4742%" y="655.50"></text></g><g><title>rpc_proto::&lt;impl core::convert::Into&lt;rpc_proto::EntityKey&gt; for kernel::model::EntityKey&gt;::into (1 samples, 0.08%)</title><rect x="71.3037%" y="629" width="0.0795%" height="15" fill="rgb(236,163,23)" fg:x="897" fg:w="1"/><text x="71.5537%" y="639.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;kernel::model::EntityKey&gt; for alloc::string::String&gt;::from (1 samples, 0.08%)</title><rect x="71.3037%" y="613" width="0.0795%" height="15" fill="rgb(242,114,45)" fg:x="897" fg:w="1"/><text x="71.5537%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="71.3037%" y="597" width="0.0795%" height="15" fill="rgb(232,10,53)" fg:x="897" fg:w="1"/><text x="71.5537%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="71.3037%" y="581" width="0.0795%" height="15" fill="rgb(245,108,29)" fg:x="897" fg:w="1"/><text x="71.5537%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="71.3037%" y="565" width="0.0795%" height="15" fill="rgb(240,89,53)" fg:x="897" fg:w="1"/><text x="71.5537%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.3037%" y="549" width="0.0795%" height="15" fill="rgb(226,60,45)" fg:x="897" fg:w="1"/><text x="71.5537%" y="559.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (384 samples, 30.52%)</title><rect x="41.0175%" y="741" width="30.5246%" height="15" fill="rgb(230,41,44)" fg:x="516" fg:w="384"/><text x="41.2675%" y="751.50">engine::session::Session::evaluate_and_perform</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (384 samples, 30.52%)</title><rect x="41.0175%" y="725" width="30.5246%" height="15" fill="rgb(230,26,20)" fg:x="516" fg:w="384"/><text x="41.2675%" y="735.50">engine::perform::StandardPerformer::evaluate_and_..</text></g><g><title>kernel::plugins::SessionPlugins::evaluate (2 samples, 0.16%)</title><rect x="71.3831%" y="709" width="0.1590%" height="15" fill="rgb(237,170,32)" fg:x="898" fg:w="2"/><text x="71.6331%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="71.3831%" y="693" width="0.1590%" height="15" fill="rgb(212,35,42)" fg:x="898" fg:w="2"/><text x="71.6331%" y="703.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="71.4626%" y="677" width="0.0795%" height="15" fill="rgb(227,31,34)" fg:x="899" fg:w="1"/><text x="71.7126%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (901 samples, 71.62%)</title><rect x="0.0000%" y="789" width="71.6216%" height="15" fill="rgb(216,19,18)" fg:x="0" fg:w="901"/><text x="0.2500%" y="799.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (901 samples, 71.62%)</title><rect x="0.0000%" y="773" width="71.6216%" height="15" fill="rgb(211,133,42)" fg:x="0" fg:w="901"/><text x="0.2500%" y="783.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (901 samples, 71.62%)</title><rect x="0.0000%" y="757" width="71.6216%" height="15" fill="rgb(244,66,13)" fg:x="0" fg:w="901"/><text x="0.2500%" y="767.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="71.5421%" y="741" width="0.0795%" height="15" fill="rgb(218,185,50)" fg:x="900" fg:w="1"/><text x="71.7921%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="71.5421%" y="725" width="0.0795%" height="15" fill="rgb(219,149,13)" fg:x="900" fg:w="1"/><text x="71.7921%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="71.5421%" y="709" width="0.0795%" height="15" fill="rgb(221,125,0)" fg:x="900" fg:w="1"/><text x="71.7921%" y="719.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="71.5421%" y="693" width="0.0795%" height="15" fill="rgb(247,126,27)" fg:x="900" fg:w="1"/><text x="71.7921%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.7011%" y="693" width="0.0795%" height="15" fill="rgb(250,138,30)" fg:x="902" fg:w="1"/><text x="71.9511%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="71.9396%" y="613" width="0.2385%" height="15" fill="rgb(230,151,9)" fg:x="905" fg:w="3"/><text x="72.1896%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="72.0191%" y="597" width="0.1590%" height="15" fill="rgb(233,80,38)" fg:x="906" fg:w="2"/><text x="72.2691%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="71.7806%" y="677" width="0.4769%" height="15" fill="rgb(232,68,43)" fg:x="903" fg:w="6"/><text x="72.0306%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="71.7806%" y="661" width="0.4769%" height="15" fill="rgb(254,5,50)" fg:x="903" fg:w="6"/><text x="72.0306%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="71.9396%" y="645" width="0.3180%" height="15" fill="rgb(225,45,5)" fg:x="905" fg:w="4"/><text x="72.1896%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="71.9396%" y="629" width="0.3180%" height="15" fill="rgb(239,22,3)" fg:x="905" fg:w="4"/><text x="72.1896%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.1781%" y="613" width="0.0795%" height="15" fill="rgb(243,129,0)" fg:x="908" fg:w="1"/><text x="72.4281%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="71.6216%" y="741" width="0.7154%" height="15" fill="rgb(223,164,0)" fg:x="901" fg:w="9"/><text x="71.8716%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (8 samples, 0.64%)</title><rect x="71.7011%" y="725" width="0.6359%" height="15" fill="rgb(221,46,29)" fg:x="902" fg:w="8"/><text x="71.9511%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="71.7011%" y="709" width="0.6359%" height="15" fill="rgb(205,97,47)" fg:x="902" fg:w="8"/><text x="71.9511%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (7 samples, 0.56%)</title><rect x="71.7806%" y="693" width="0.5564%" height="15" fill="rgb(249,14,8)" fg:x="903" fg:w="7"/><text x="72.0306%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.2576%" y="677" width="0.0795%" height="15" fill="rgb(216,77,3)" fg:x="909" fg:w="1"/><text x="72.5076%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="72.4165%" y="597" width="0.1590%" height="15" fill="rgb(206,168,54)" fg:x="911" fg:w="2"/><text x="72.6665%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.4165%" y="581" width="0.1590%" height="15" fill="rgb(236,3,41)" fg:x="911" fg:w="2"/><text x="72.6665%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="72.4165%" y="565" width="0.1590%" height="15" fill="rgb(231,132,24)" fg:x="911" fg:w="2"/><text x="72.6665%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.4165%" y="549" width="0.1590%" height="15" fill="rgb(227,221,40)" fg:x="911" fg:w="2"/><text x="72.6665%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.4960%" y="533" width="0.0795%" height="15" fill="rgb(233,151,11)" fg:x="912" fg:w="1"/><text x="72.7460%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.5755%" y="565" width="0.0795%" height="15" fill="rgb(247,81,35)" fg:x="913" fg:w="1"/><text x="72.8255%" y="575.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (4 samples, 0.32%)</title><rect x="72.4165%" y="661" width="0.3180%" height="15" fill="rgb(243,128,48)" fg:x="911" fg:w="4"/><text x="72.6665%" y="671.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (4 samples, 0.32%)</title><rect x="72.4165%" y="645" width="0.3180%" height="15" fill="rgb(253,16,10)" fg:x="911" fg:w="4"/><text x="72.6665%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="72.4165%" y="629" width="0.3180%" height="15" fill="rgb(228,67,27)" fg:x="911" fg:w="4"/><text x="72.6665%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="72.4165%" y="613" width="0.3180%" height="15" fill="rgb(231,105,25)" fg:x="911" fg:w="4"/><text x="72.6665%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="72.5755%" y="597" width="0.1590%" height="15" fill="rgb(213,166,47)" fg:x="913" fg:w="2"/><text x="72.8255%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.5755%" y="581" width="0.1590%" height="15" fill="rgb(209,27,10)" fg:x="913" fg:w="2"/><text x="72.8255%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="72.6550%" y="565" width="0.0795%" height="15" fill="rgb(241,44,30)" fg:x="914" fg:w="1"/><text x="72.9050%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.6550%" y="549" width="0.0795%" height="15" fill="rgb(223,216,15)" fg:x="914" fg:w="1"/><text x="72.9050%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.6550%" y="533" width="0.0795%" height="15" fill="rgb(227,14,7)" fg:x="914" fg:w="1"/><text x="72.9050%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.6550%" y="517" width="0.0795%" height="15" fill="rgb(237,14,5)" fg:x="914" fg:w="1"/><text x="72.9050%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.6550%" y="501" width="0.0795%" height="15" fill="rgb(232,14,36)" fg:x="914" fg:w="1"/><text x="72.9050%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.6550%" y="485" width="0.0795%" height="15" fill="rgb(234,0,38)" fg:x="914" fg:w="1"/><text x="72.9050%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="72.6550%" y="469" width="0.0795%" height="15" fill="rgb(207,170,14)" fg:x="914" fg:w="1"/><text x="72.9050%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (6 samples, 0.48%)</title><rect x="72.4165%" y="709" width="0.4769%" height="15" fill="rgb(252,45,13)" fg:x="911" fg:w="6"/><text x="72.6665%" y="719.50"></text></g><g><title>engine::internal::Entities::prepare_entity (6 samples, 0.48%)</title><rect x="72.4165%" y="693" width="0.4769%" height="15" fill="rgb(213,142,7)" fg:x="911" fg:w="6"/><text x="72.6665%" y="703.50"></text></g><g><title>kernel::model::deserialize_entity (6 samples, 0.48%)</title><rect x="72.4165%" y="677" width="0.4769%" height="15" fill="rgb(216,157,23)" fg:x="911" fg:w="6"/><text x="72.6665%" y="687.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="72.7345%" y="661" width="0.1590%" height="15" fill="rgb(212,145,33)" fg:x="915" fg:w="2"/><text x="72.9845%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="72.7345%" y="645" width="0.1590%" height="15" fill="rgb(233,26,13)" fg:x="915" fg:w="2"/><text x="72.9845%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="72.7345%" y="629" width="0.1590%" height="15" fill="rgb(219,196,19)" fg:x="915" fg:w="2"/><text x="72.9845%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="72.7345%" y="613" width="0.1590%" height="15" fill="rgb(246,56,21)" fg:x="915" fg:w="2"/><text x="72.9845%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.8140%" y="597" width="0.0795%" height="15" fill="rgb(222,28,53)" fg:x="916" fg:w="1"/><text x="73.0640%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.8140%" y="581" width="0.0795%" height="15" fill="rgb(224,5,27)" fg:x="916" fg:w="1"/><text x="73.0640%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.8140%" y="565" width="0.0795%" height="15" fill="rgb(220,153,33)" fg:x="916" fg:w="1"/><text x="73.0640%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.8140%" y="549" width="0.0795%" height="15" fill="rgb(226,58,19)" fg:x="916" fg:w="1"/><text x="73.0640%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.8140%" y="533" width="0.0795%" height="15" fill="rgb(239,112,23)" fg:x="916" fg:w="1"/><text x="73.0640%" y="543.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="72.8935%" y="709" width="0.0795%" height="15" fill="rgb(251,213,20)" fg:x="917" fg:w="1"/><text x="73.1435%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="72.8935%" y="693" width="0.0795%" height="15" fill="rgb(215,181,21)" fg:x="917" fg:w="1"/><text x="73.1435%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="72.8935%" y="677" width="0.0795%" height="15" fill="rgb(240,8,35)" fg:x="917" fg:w="1"/><text x="73.1435%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="72.8935%" y="661" width="0.0795%" height="15" fill="rgb(232,203,3)" fg:x="917" fg:w="1"/><text x="73.1435%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="72.8935%" y="645" width="0.0795%" height="15" fill="rgb(214,202,43)" fg:x="917" fg:w="1"/><text x="73.1435%" y="655.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="72.9730%" y="629" width="0.0795%" height="15" fill="rgb(254,35,11)" fg:x="918" fg:w="1"/><text x="73.2230%" y="639.50"></text></g><g><title>dlerror (2 samples, 0.16%)</title><rect x="72.9730%" y="645" width="0.1590%" height="15" fill="rgb(239,173,13)" fg:x="918" fg:w="2"/><text x="73.2230%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.0525%" y="629" width="0.0795%" height="15" fill="rgb(220,141,0)" fg:x="919" fg:w="1"/><text x="73.3025%" y="639.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (4 samples, 0.32%)</title><rect x="72.9730%" y="677" width="0.3180%" height="15" fill="rgb(210,98,12)" fg:x="918" fg:w="4"/><text x="73.2230%" y="687.50"></text></g><g><title>libloading::os::unix::Library::open (4 samples, 0.32%)</title><rect x="72.9730%" y="661" width="0.3180%" height="15" fill="rgb(254,153,22)" fg:x="918" fg:w="4"/><text x="73.2230%" y="671.50"></text></g><g><title>dlopen (2 samples, 0.16%)</title><rect x="73.1320%" y="645" width="0.1590%" height="15" fill="rgb(247,223,17)" fg:x="920" fg:w="2"/><text x="73.3820%" y="655.50"></text></g><g><title>_dl_catch_error (2 samples, 0.16%)</title><rect x="73.1320%" y="629" width="0.1590%" height="15" fill="rgb(246,56,7)" fg:x="920" fg:w="2"/><text x="73.3820%" y="639.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="73.1320%" y="613" width="0.1590%" height="15" fill="rgb(240,226,12)" fg:x="920" fg:w="2"/><text x="73.3820%" y="623.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="73.1320%" y="597" width="0.1590%" height="15" fill="rgb(205,87,46)" fg:x="920" fg:w="2"/><text x="73.3820%" y="607.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="73.1320%" y="581" width="0.1590%" height="15" fill="rgb(245,214,51)" fg:x="920" fg:w="2"/><text x="73.3820%" y="591.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (13 samples, 1.03%)</title><rect x="72.3370%" y="741" width="1.0334%" height="15" fill="rgb(223,172,33)" fg:x="910" fg:w="13"/><text x="72.5870%" y="751.50"></text></g><g><title>engine::session::Session::new (13 samples, 1.03%)</title><rect x="72.3370%" y="725" width="1.0334%" height="15" fill="rgb(227,203,34)" fg:x="910" fg:w="13"/><text x="72.5870%" y="735.50"></text></g><g><title>engine::session::Session::initialize (5 samples, 0.40%)</title><rect x="72.9730%" y="709" width="0.3975%" height="15" fill="rgb(248,143,44)" fg:x="918" fg:w="5"/><text x="73.2230%" y="719.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (5 samples, 0.40%)</title><rect x="72.9730%" y="693" width="0.3975%" height="15" fill="rgb(226,162,5)" fg:x="918" fg:w="5"/><text x="73.2230%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="73.2909%" y="677" width="0.0795%" height="15" fill="rgb(211,143,1)" fg:x="922" fg:w="1"/><text x="73.5409%" y="687.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="73.2909%" y="661" width="0.0795%" height="15" fill="rgb(224,96,15)" fg:x="922" fg:w="1"/><text x="73.5409%" y="671.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.3704%" y="725" width="0.0795%" height="15" fill="rgb(222,4,38)" fg:x="923" fg:w="1"/><text x="73.6204%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="73.4499%" y="725" width="0.0795%" height="15" fill="rgb(253,228,15)" fg:x="924" fg:w="1"/><text x="73.6999%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::QuickThing&gt; (1 samples, 0.08%)</title><rect x="73.4499%" y="709" width="0.0795%" height="15" fill="rgb(242,194,12)" fg:x="924" fg:w="1"/><text x="73.6999%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="73.4499%" y="693" width="0.0795%" height="15" fill="rgb(214,177,31)" fg:x="924" fg:w="1"/><text x="73.6999%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="73.4499%" y="677" width="0.0795%" height="15" fill="rgb(226,58,51)" fg:x="924" fg:w="1"/><text x="73.6999%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.4499%" y="661" width="0.0795%" height="15" fill="rgb(250,119,16)" fg:x="924" fg:w="1"/><text x="73.6999%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="73.5294%" y="693" width="0.0795%" height="15" fill="rgb(223,128,53)" fg:x="925" fg:w="1"/><text x="73.7794%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="73.6884%" y="629" width="0.2385%" height="15" fill="rgb(251,199,15)" fg:x="927" fg:w="3"/><text x="73.9384%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="73.7679%" y="613" width="0.1590%" height="15" fill="rgb(235,168,42)" fg:x="928" fg:w="2"/><text x="74.0179%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.8474%" y="597" width="0.0795%" height="15" fill="rgb(250,210,17)" fg:x="929" fg:w="1"/><text x="74.0974%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.8474%" y="581" width="0.0795%" height="15" fill="rgb(226,36,41)" fg:x="929" fg:w="1"/><text x="74.0974%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="73.6884%" y="645" width="0.3180%" height="15" fill="rgb(225,87,10)" fg:x="927" fg:w="4"/><text x="73.9384%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.9269%" y="629" width="0.0795%" height="15" fill="rgb(228,83,9)" fg:x="930" fg:w="1"/><text x="74.1769%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.9269%" y="613" width="0.0795%" height="15" fill="rgb(225,16,36)" fg:x="930" fg:w="1"/><text x="74.1769%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.9269%" y="597" width="0.0795%" height="15" fill="rgb(242,198,13)" fg:x="930" fg:w="1"/><text x="74.1769%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="74.0859%" y="629" width="0.0795%" height="15" fill="rgb(239,25,51)" fg:x="932" fg:w="1"/><text x="74.3359%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="74.1653%" y="629" width="0.1590%" height="15" fill="rgb(239,28,37)" fg:x="933" fg:w="2"/><text x="74.4153%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="74.1653%" y="613" width="0.1590%" height="15" fill="rgb(234,70,17)" fg:x="933" fg:w="2"/><text x="74.4153%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="74.1653%" y="597" width="0.1590%" height="15" fill="rgb(231,215,53)" fg:x="933" fg:w="2"/><text x="74.4153%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="74.4833%" y="613" width="0.0795%" height="15" fill="rgb(218,140,42)" fg:x="937" fg:w="1"/><text x="74.7333%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="74.5628%" y="581" width="0.0795%" height="15" fill="rgb(233,227,45)" fg:x="938" fg:w="1"/><text x="74.8128%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="74.5628%" y="613" width="0.1590%" height="15" fill="rgb(225,189,21)" fg:x="938" fg:w="2"/><text x="74.8128%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="74.5628%" y="597" width="0.1590%" height="15" fill="rgb(237,176,54)" fg:x="938" fg:w="2"/><text x="74.8128%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="74.6423%" y="581" width="0.0795%" height="15" fill="rgb(215,131,46)" fg:x="939" fg:w="1"/><text x="74.8923%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="74.6423%" y="565" width="0.0795%" height="15" fill="rgb(218,95,20)" fg:x="939" fg:w="1"/><text x="74.8923%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="74.7218%" y="613" width="0.2385%" height="15" fill="rgb(208,198,12)" fg:x="940" fg:w="3"/><text x="74.9718%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="74.8013%" y="597" width="0.1590%" height="15" fill="rgb(239,107,50)" fg:x="941" fg:w="2"/><text x="75.0513%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.8808%" y="581" width="0.0795%" height="15" fill="rgb(240,217,37)" fg:x="942" fg:w="1"/><text x="75.1308%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="74.9603%" y="597" width="0.2385%" height="15" fill="rgb(242,197,49)" fg:x="943" fg:w="3"/><text x="75.2103%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="75.0397%" y="581" width="0.1590%" height="15" fill="rgb(219,171,17)" fg:x="944" fg:w="2"/><text x="75.2897%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="75.0397%" y="565" width="0.1590%" height="15" fill="rgb(209,81,40)" fg:x="944" fg:w="2"/><text x="75.2897%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.1192%" y="549" width="0.0795%" height="15" fill="rgb(237,156,30)" fg:x="945" fg:w="1"/><text x="75.3692%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.03%)</title><rect x="74.3243%" y="629" width="1.0334%" height="15" fill="rgb(212,127,16)" fg:x="935" fg:w="13"/><text x="74.5743%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="74.9603%" y="613" width="0.3975%" height="15" fill="rgb(226,66,32)" fg:x="943" fg:w="5"/><text x="75.2103%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="75.1987%" y="597" width="0.1590%" height="15" fill="rgb(245,22,46)" fg:x="946" fg:w="2"/><text x="75.4487%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="75.1987%" y="581" width="0.1590%" height="15" fill="rgb(210,112,21)" fg:x="946" fg:w="2"/><text x="75.4487%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="75.1987%" y="565" width="0.1590%" height="15" fill="rgb(207,118,39)" fg:x="946" fg:w="2"/><text x="75.4487%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.2782%" y="549" width="0.0795%" height="15" fill="rgb(205,206,35)" fg:x="947" fg:w="1"/><text x="75.5282%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.2782%" y="533" width="0.0795%" height="15" fill="rgb(222,120,2)" fg:x="947" fg:w="1"/><text x="75.5282%" y="543.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (23 samples, 1.83%)</title><rect x="73.6884%" y="661" width="1.8283%" height="15" fill="rgb(205,38,18)" fg:x="927" fg:w="23"/><text x="73.9384%" y="671.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.51%)</title><rect x="74.0064%" y="645" width="1.5103%" height="15" fill="rgb(226,61,2)" fg:x="931" fg:w="19"/><text x="74.2564%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="75.3577%" y="629" width="0.1590%" height="15" fill="rgb(242,161,23)" fg:x="948" fg:w="2"/><text x="75.6077%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.5167%" y="629" width="0.0795%" height="15" fill="rgb(213,13,52)" fg:x="950" fg:w="1"/><text x="75.7667%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="75.5167%" y="661" width="0.1590%" height="15" fill="rgb(246,209,47)" fg:x="950" fg:w="2"/><text x="75.7667%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="75.5167%" y="645" width="0.1590%" height="15" fill="rgb(214,41,3)" fg:x="950" fg:w="2"/><text x="75.7667%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.5962%" y="629" width="0.0795%" height="15" fill="rgb(236,119,38)" fg:x="951" fg:w="1"/><text x="75.8462%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="75.6757%" y="613" width="0.0795%" height="15" fill="rgb(218,50,11)" fg:x="952" fg:w="1"/><text x="75.9257%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.6757%" y="597" width="0.0795%" height="15" fill="rgb(228,38,11)" fg:x="952" fg:w="1"/><text x="75.9257%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.6757%" y="581" width="0.0795%" height="15" fill="rgb(212,13,9)" fg:x="952" fg:w="1"/><text x="75.9257%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="75.8347%" y="565" width="0.1590%" height="15" fill="rgb(208,211,9)" fg:x="954" fg:w="2"/><text x="76.0847%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="75.8347%" y="549" width="0.1590%" height="15" fill="rgb(239,39,32)" fg:x="954" fg:w="2"/><text x="76.0847%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="75.8347%" y="533" width="0.1590%" height="15" fill="rgb(254,179,26)" fg:x="954" fg:w="2"/><text x="76.0847%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (4 samples, 0.32%)</title><rect x="75.7552%" y="613" width="0.3180%" height="15" fill="rgb(249,165,28)" fg:x="953" fg:w="4"/><text x="76.0052%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="75.7552%" y="597" width="0.3180%" height="15" fill="rgb(225,59,50)" fg:x="953" fg:w="4"/><text x="76.0052%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="75.8347%" y="581" width="0.2385%" height="15" fill="rgb(209,122,5)" fg:x="954" fg:w="3"/><text x="76.0847%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="75.9936%" y="565" width="0.0795%" height="15" fill="rgb(214,65,34)" fg:x="956" fg:w="1"/><text x="76.2436%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.9936%" y="549" width="0.0795%" height="15" fill="rgb(249,183,32)" fg:x="956" fg:w="1"/><text x="76.2436%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="75.9936%" y="533" width="0.0795%" height="15" fill="rgb(218,122,24)" fg:x="956" fg:w="1"/><text x="76.2436%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.9936%" y="517" width="0.0795%" height="15" fill="rgb(224,109,18)" fg:x="956" fg:w="1"/><text x="76.2436%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.9936%" y="501" width="0.0795%" height="15" fill="rgb(210,68,50)" fg:x="956" fg:w="1"/><text x="76.2436%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.9936%" y="485" width="0.0795%" height="15" fill="rgb(212,184,34)" fg:x="956" fg:w="1"/><text x="76.2436%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (2 samples, 0.16%)</title><rect x="76.0731%" y="613" width="0.1590%" height="15" fill="rgb(238,105,48)" fg:x="957" fg:w="2"/><text x="76.3231%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="76.1526%" y="597" width="0.0795%" height="15" fill="rgb(222,134,54)" fg:x="958" fg:w="1"/><text x="76.4026%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.2321%" y="597" width="0.0795%" height="15" fill="rgb(246,24,43)" fg:x="959" fg:w="1"/><text x="76.4821%" y="607.50"></text></g><g><title>engine::session::Session::flush (38 samples, 3.02%)</title><rect x="73.5294%" y="725" width="3.0207%" height="15" fill="rgb(227,169,22)" fg:x="925" fg:w="38"/><text x="73.7794%" y="735.50">eng..</text></g><g><title>engine::session::Session::save_entity_changes (38 samples, 3.02%)</title><rect x="73.5294%" y="709" width="3.0207%" height="15" fill="rgb(253,152,4)" fg:x="925" fg:w="38"/><text x="73.7794%" y="719.50">eng..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (37 samples, 2.94%)</title><rect x="73.6089%" y="693" width="2.9412%" height="15" fill="rgb(219,158,36)" fg:x="926" fg:w="37"/><text x="73.8589%" y="703.50">en..</text></g><g><title>engine::session::Session::check_for_changes (37 samples, 2.94%)</title><rect x="73.6089%" y="677" width="2.9412%" height="15" fill="rgb(251,128,40)" fg:x="926" fg:w="37"/><text x="73.8589%" y="687.50">en..</text></g><g><title>kernel::compare::any_entity_changes (11 samples, 0.87%)</title><rect x="75.6757%" y="661" width="0.8744%" height="15" fill="rgb(254,101,39)" fg:x="952" fg:w="11"/><text x="75.9257%" y="671.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (11 samples, 0.87%)</title><rect x="75.6757%" y="645" width="0.8744%" height="15" fill="rgb(221,168,40)" fg:x="952" fg:w="11"/><text x="75.9257%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.87%)</title><rect x="75.6757%" y="629" width="0.8744%" height="15" fill="rgb(221,14,27)" fg:x="952" fg:w="11"/><text x="75.9257%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="76.2321%" y="613" width="0.3180%" height="15" fill="rgb(207,36,43)" fg:x="959" fg:w="4"/><text x="76.4821%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (3 samples, 0.24%)</title><rect x="76.3116%" y="597" width="0.2385%" height="15" fill="rgb(240,172,53)" fg:x="960" fg:w="3"/><text x="76.5616%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="76.3116%" y="581" width="0.2385%" height="15" fill="rgb(241,138,43)" fg:x="960" fg:w="3"/><text x="76.5616%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="76.3911%" y="565" width="0.1590%" height="15" fill="rgb(227,78,19)" fg:x="961" fg:w="2"/><text x="76.6411%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="76.4706%" y="549" width="0.0795%" height="15" fill="rgb(215,127,44)" fg:x="962" fg:w="1"/><text x="76.7206%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="76.4706%" y="533" width="0.0795%" height="15" fill="rgb(227,13,10)" fg:x="962" fg:w="1"/><text x="76.7206%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.4706%" y="517" width="0.0795%" height="15" fill="rgb(249,177,6)" fg:x="962" fg:w="1"/><text x="76.7206%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="76.5501%" y="709" width="0.1590%" height="15" fill="rgb(215,154,26)" fg:x="963" fg:w="2"/><text x="76.8001%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="76.5501%" y="693" width="0.1590%" height="15" fill="rgb(250,168,20)" fg:x="963" fg:w="2"/><text x="76.8001%" y="703.50"></text></g><g><title>plugins_core::build::QuickThing::make (2 samples, 0.16%)</title><rect x="76.5501%" y="677" width="0.1590%" height="15" fill="rgb(222,53,38)" fg:x="963" fg:w="2"/><text x="76.8001%" y="687.50"></text></g><g><title>plugins_core::build::Build::leads_to (1 samples, 0.08%)</title><rect x="76.6296%" y="661" width="0.0795%" height="15" fill="rgb(245,154,5)" fg:x="964" fg:w="1"/><text x="76.8796%" y="671.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="76.6296%" y="645" width="0.0795%" height="15" fill="rgb(214,89,50)" fg:x="964" fg:w="1"/><text x="76.8796%" y="655.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="76.6296%" y="629" width="0.0795%" height="15" fill="rgb(232,73,14)" fg:x="964" fg:w="1"/><text x="76.8796%" y="639.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="76.6296%" y="613" width="0.0795%" height="15" fill="rgb(230,101,20)" fg:x="964" fg:w="1"/><text x="76.8796%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.6296%" y="597" width="0.0795%" height="15" fill="rgb(208,56,28)" fg:x="964" fg:w="1"/><text x="76.8796%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="76.6296%" y="581" width="0.0795%" height="15" fill="rgb(247,205,22)" fg:x="964" fg:w="1"/><text x="76.8796%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="76.7886%" y="677" width="0.0795%" height="15" fill="rgb(252,109,51)" fg:x="966" fg:w="1"/><text x="77.0386%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="76.8680%" y="661" width="0.0795%" height="15" fill="rgb(220,40,24)" fg:x="967" fg:w="1"/><text x="77.1180%" y="671.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.8680%" y="645" width="0.0795%" height="15" fill="rgb(251,108,7)" fg:x="967" fg:w="1"/><text x="77.1180%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.9475%" y="597" width="0.0795%" height="15" fill="rgb(238,102,51)" fg:x="968" fg:w="1"/><text x="77.1975%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.9475%" y="581" width="0.0795%" height="15" fill="rgb(219,149,34)" fg:x="968" fg:w="1"/><text x="77.1975%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="76.9475%" y="565" width="0.0795%" height="15" fill="rgb(239,70,0)" fg:x="968" fg:w="1"/><text x="77.1975%" y="575.50"></text></g><g><title>engine::identifiers::model::set_gid (3 samples, 0.24%)</title><rect x="76.8680%" y="677" width="0.2385%" height="15" fill="rgb(246,214,23)" fg:x="967" fg:w="3"/><text x="77.1180%" y="687.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="76.9475%" y="661" width="0.1590%" height="15" fill="rgb(239,221,51)" fg:x="968" fg:w="2"/><text x="77.1975%" y="671.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="76.9475%" y="645" width="0.1590%" height="15" fill="rgb(254,62,14)" fg:x="968" fg:w="2"/><text x="77.1975%" y="655.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (2 samples, 0.16%)</title><rect x="76.9475%" y="629" width="0.1590%" height="15" fill="rgb(253,57,33)" fg:x="968" fg:w="2"/><text x="77.1975%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="76.9475%" y="613" width="0.1590%" height="15" fill="rgb(229,34,6)" fg:x="968" fg:w="2"/><text x="77.1975%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="77.0270%" y="597" width="0.0795%" height="15" fill="rgb(235,191,23)" fg:x="969" fg:w="1"/><text x="77.2770%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.0270%" y="581" width="0.0795%" height="15" fill="rgb(217,207,27)" fg:x="969" fg:w="1"/><text x="77.2770%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.0270%" y="565" width="0.0795%" height="15" fill="rgb(232,41,44)" fg:x="969" fg:w="1"/><text x="77.2770%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.0270%" y="549" width="0.0795%" height="15" fill="rgb(221,188,19)" fg:x="969" fg:w="1"/><text x="77.2770%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.0270%" y="533" width="0.0795%" height="15" fill="rgb(245,180,45)" fg:x="969" fg:w="1"/><text x="77.2770%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="77.1065%" y="661" width="0.0795%" height="15" fill="rgb(250,220,42)" fg:x="970" fg:w="1"/><text x="77.3565%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.1065%" y="645" width="0.0795%" height="15" fill="rgb(234,16,34)" fg:x="970" fg:w="1"/><text x="77.3565%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.1065%" y="629" width="0.0795%" height="15" fill="rgb(233,217,23)" fg:x="970" fg:w="1"/><text x="77.3565%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="77.2655%" y="629" width="0.1590%" height="15" fill="rgb(209,22,46)" fg:x="972" fg:w="2"/><text x="77.5155%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="77.2655%" y="613" width="0.1590%" height="15" fill="rgb(213,101,18)" fg:x="972" fg:w="2"/><text x="77.5155%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="77.2655%" y="597" width="0.1590%" height="15" fill="rgb(215,179,52)" fg:x="972" fg:w="2"/><text x="77.5155%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="77.2655%" y="581" width="0.1590%" height="15" fill="rgb(223,50,25)" fg:x="972" fg:w="2"/><text x="77.5155%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.3450%" y="565" width="0.0795%" height="15" fill="rgb(224,51,44)" fg:x="973" fg:w="1"/><text x="77.5950%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.4245%" y="613" width="0.0795%" height="15" fill="rgb(224,13,54)" fg:x="974" fg:w="1"/><text x="77.6745%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.4245%" y="597" width="0.0795%" height="15" fill="rgb(219,58,47)" fg:x="974" fg:w="1"/><text x="77.6745%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="77.5040%" y="597" width="0.0795%" height="15" fill="rgb(246,124,34)" fg:x="975" fg:w="1"/><text x="77.7540%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="77.5835%" y="581" width="0.2385%" height="15" fill="rgb(245,109,25)" fg:x="976" fg:w="3"/><text x="77.8335%" y="591.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="77.5835%" y="565" width="0.2385%" height="15" fill="rgb(235,48,23)" fg:x="976" fg:w="3"/><text x="77.8335%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="77.6630%" y="549" width="0.1590%" height="15" fill="rgb(229,203,36)" fg:x="977" fg:w="2"/><text x="77.9130%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.8219%" y="565" width="0.0795%" height="15" fill="rgb(234,180,9)" fg:x="979" fg:w="1"/><text x="78.0719%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="77.8219%" y="581" width="0.1590%" height="15" fill="rgb(228,98,45)" fg:x="979" fg:w="2"/><text x="78.0719%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.9014%" y="565" width="0.0795%" height="15" fill="rgb(240,24,36)" fg:x="980" fg:w="1"/><text x="78.1514%" y="575.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (13 samples, 1.03%)</title><rect x="77.2655%" y="645" width="1.0334%" height="15" fill="rgb(227,154,19)" fg:x="972" fg:w="13"/><text x="77.5155%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.87%)</title><rect x="77.4245%" y="629" width="0.8744%" height="15" fill="rgb(231,2,48)" fg:x="974" fg:w="11"/><text x="77.6745%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.79%)</title><rect x="77.5040%" y="613" width="0.7949%" height="15" fill="rgb(219,216,0)" fg:x="975" fg:w="10"/><text x="77.7540%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="77.5835%" y="597" width="0.7154%" height="15" fill="rgb(251,88,0)" fg:x="976" fg:w="9"/><text x="77.8335%" y="607.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="77.9809%" y="581" width="0.3180%" height="15" fill="rgb(242,45,45)" fg:x="981" fg:w="4"/><text x="78.2309%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.2194%" y="565" width="0.0795%" height="15" fill="rgb(218,149,45)" fg:x="984" fg:w="1"/><text x="78.4694%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="78.2194%" y="549" width="0.0795%" height="15" fill="rgb(247,194,10)" fg:x="984" fg:w="1"/><text x="78.4694%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.2989%" y="613" width="0.0795%" height="15" fill="rgb(234,33,37)" fg:x="985" fg:w="1"/><text x="78.5489%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.4579%" y="581" width="0.0795%" height="15" fill="rgb(218,61,13)" fg:x="987" fg:w="1"/><text x="78.7079%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="78.2989%" y="645" width="0.3975%" height="15" fill="rgb(210,80,52)" fg:x="985" fg:w="5"/><text x="78.5489%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="78.2989%" y="629" width="0.3975%" height="15" fill="rgb(218,203,27)" fg:x="985" fg:w="5"/><text x="78.5489%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="78.3784%" y="613" width="0.3180%" height="15" fill="rgb(209,126,33)" fg:x="986" fg:w="4"/><text x="78.6284%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="78.4579%" y="597" width="0.2385%" height="15" fill="rgb(234,173,41)" fg:x="987" fg:w="3"/><text x="78.7079%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="78.5374%" y="581" width="0.1590%" height="15" fill="rgb(228,166,9)" fg:x="988" fg:w="2"/><text x="78.7874%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.6169%" y="565" width="0.0795%" height="15" fill="rgb(208,124,43)" fg:x="989" fg:w="1"/><text x="78.8669%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.6963%" y="597" width="0.0795%" height="15" fill="rgb(212,154,38)" fg:x="990" fg:w="1"/><text x="78.9463%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="78.7758%" y="597" width="0.1590%" height="15" fill="rgb(246,179,35)" fg:x="991" fg:w="2"/><text x="79.0258%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.8553%" y="581" width="0.0795%" height="15" fill="rgb(251,3,50)" fg:x="992" fg:w="1"/><text x="79.1053%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="78.8553%" y="565" width="0.0795%" height="15" fill="rgb(219,96,8)" fg:x="992" fg:w="1"/><text x="79.1053%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="78.9348%" y="597" width="0.0795%" height="15" fill="rgb(251,216,33)" fg:x="993" fg:w="1"/><text x="79.1848%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.9348%" y="581" width="0.0795%" height="15" fill="rgb(243,145,29)" fg:x="993" fg:w="1"/><text x="79.1848%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="78.9348%" y="565" width="0.0795%" height="15" fill="rgb(210,75,20)" fg:x="993" fg:w="1"/><text x="79.1848%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="79.0143%" y="597" width="0.0795%" height="15" fill="rgb(235,56,8)" fg:x="994" fg:w="1"/><text x="79.2643%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.0143%" y="581" width="0.0795%" height="15" fill="rgb(226,175,49)" fg:x="994" fg:w="1"/><text x="79.2643%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="79.0143%" y="565" width="0.0795%" height="15" fill="rgb(242,204,23)" fg:x="994" fg:w="1"/><text x="79.2643%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="79.0143%" y="549" width="0.0795%" height="15" fill="rgb(225,104,24)" fg:x="994" fg:w="1"/><text x="79.2643%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.0143%" y="533" width="0.0795%" height="15" fill="rgb(253,34,1)" fg:x="994" fg:w="1"/><text x="79.2643%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="79.0143%" y="517" width="0.0795%" height="15" fill="rgb(233,199,23)" fg:x="994" fg:w="1"/><text x="79.2643%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.0143%" y="501" width="0.0795%" height="15" fill="rgb(247,7,51)" fg:x="994" fg:w="1"/><text x="79.2643%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.0143%" y="485" width="0.0795%" height="15" fill="rgb(214,146,12)" fg:x="994" fg:w="1"/><text x="79.2643%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.0143%" y="469" width="0.0795%" height="15" fill="rgb(234,181,43)" fg:x="994" fg:w="1"/><text x="79.2643%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.0143%" y="453" width="0.0795%" height="15" fill="rgb(239,148,6)" fg:x="994" fg:w="1"/><text x="79.2643%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="79.2528%" y="549" width="0.0795%" height="15" fill="rgb(206,151,17)" fg:x="997" fg:w="1"/><text x="79.5028%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="79.2528%" y="533" width="0.0795%" height="15" fill="rgb(213,215,10)" fg:x="997" fg:w="1"/><text x="79.5028%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="79.2528%" y="517" width="0.0795%" height="15" fill="rgb(215,220,44)" fg:x="997" fg:w="1"/><text x="79.5028%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="79.2528%" y="501" width="0.0795%" height="15" fill="rgb(245,205,37)" fg:x="997" fg:w="1"/><text x="79.5028%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="79.4118%" y="533" width="0.0795%" height="15" fill="rgb(245,130,43)" fg:x="999" fg:w="1"/><text x="79.6618%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.4118%" y="517" width="0.0795%" height="15" fill="rgb(231,227,38)" fg:x="999" fg:w="1"/><text x="79.6618%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="79.2528%" y="565" width="0.3180%" height="15" fill="rgb(233,185,4)" fg:x="997" fg:w="4"/><text x="79.5028%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="79.3323%" y="549" width="0.2385%" height="15" fill="rgb(224,154,43)" fg:x="998" fg:w="3"/><text x="79.5823%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.4913%" y="533" width="0.0795%" height="15" fill="rgb(235,156,15)" fg:x="1000" fg:w="1"/><text x="79.7413%" y="543.50"></text></g><g><title>engine::session::Session::flush (37 samples, 2.94%)</title><rect x="76.7091%" y="709" width="2.9412%" height="15" fill="rgb(211,55,43)" fg:x="965" fg:w="37"/><text x="76.9591%" y="719.50">en..</text></g><g><title>engine::session::Session::save_entity_changes (37 samples, 2.94%)</title><rect x="76.7091%" y="693" width="2.9412%" height="15" fill="rgb(247,149,40)" fg:x="965" fg:w="37"/><text x="76.9591%" y="703.50">en..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (32 samples, 2.54%)</title><rect x="77.1065%" y="677" width="2.5437%" height="15" fill="rgb(232,171,16)" fg:x="970" fg:w="32"/><text x="77.3565%" y="687.50">en..</text></g><g><title>engine::session::Session::check_for_changes (31 samples, 2.46%)</title><rect x="77.1860%" y="661" width="2.4642%" height="15" fill="rgb(215,117,49)" fg:x="971" fg:w="31"/><text x="77.4360%" y="671.50">en..</text></g><g><title>kernel::compare::any_entity_changes (12 samples, 0.95%)</title><rect x="78.6963%" y="645" width="0.9539%" height="15" fill="rgb(246,194,11)" fg:x="990" fg:w="12"/><text x="78.9463%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (12 samples, 0.95%)</title><rect x="78.6963%" y="629" width="0.9539%" height="15" fill="rgb(242,101,44)" fg:x="990" fg:w="12"/><text x="78.9463%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.95%)</title><rect x="78.6963%" y="613" width="0.9539%" height="15" fill="rgb(226,174,6)" fg:x="990" fg:w="12"/><text x="78.9463%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.56%)</title><rect x="79.0938%" y="597" width="0.5564%" height="15" fill="rgb(213,150,20)" fg:x="995" fg:w="7"/><text x="79.3438%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (6 samples, 0.48%)</title><rect x="79.1733%" y="581" width="0.4769%" height="15" fill="rgb(222,124,42)" fg:x="996" fg:w="6"/><text x="79.4233%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="79.5707%" y="565" width="0.0795%" height="15" fill="rgb(250,19,47)" fg:x="1001" fg:w="1"/><text x="79.8207%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.5707%" y="549" width="0.0795%" height="15" fill="rgb(241,217,19)" fg:x="1001" fg:w="1"/><text x="79.8207%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="79.6502%" y="709" width="0.0795%" height="15" fill="rgb(207,210,34)" fg:x="1002" fg:w="1"/><text x="79.9002%" y="719.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="79.6502%" y="693" width="0.0795%" height="15" fill="rgb(244,45,4)" fg:x="1002" fg:w="1"/><text x="79.9002%" y="703.50"></text></g><g><title>engine::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="79.7297%" y="677" width="0.3180%" height="15" fill="rgb(252,134,50)" fg:x="1003" fg:w="4"/><text x="79.9797%" y="687.50"></text></g><g><title>engine::internal::EntityMap::add_entity (4 samples, 0.32%)</title><rect x="79.7297%" y="661" width="0.3180%" height="15" fill="rgb(238,74,2)" fg:x="1003" fg:w="4"/><text x="79.9797%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="79.8092%" y="645" width="0.2385%" height="15" fill="rgb(226,58,46)" fg:x="1004" fg:w="3"/><text x="80.0592%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="79.8092%" y="629" width="0.2385%" height="15" fill="rgb(232,83,35)" fg:x="1004" fg:w="3"/><text x="80.0592%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="79.8092%" y="613" width="0.2385%" height="15" fill="rgb(212,148,47)" fg:x="1004" fg:w="3"/><text x="80.0592%" y="623.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="79.8092%" y="597" width="0.2385%" height="15" fill="rgb(235,29,1)" fg:x="1004" fg:w="3"/><text x="80.0592%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="79.7297%" y="693" width="0.3975%" height="15" fill="rgb(247,55,37)" fg:x="1003" fg:w="5"/><text x="79.9797%" y="703.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="80.0477%" y="677" width="0.0795%" height="15" fill="rgb(222,48,3)" fg:x="1007" fg:w="1"/><text x="80.2977%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.0477%" y="661" width="0.0795%" height="15" fill="rgb(234,21,33)" fg:x="1007" fg:w="1"/><text x="80.2977%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.0477%" y="645" width="0.0795%" height="15" fill="rgb(247,178,53)" fg:x="1007" fg:w="1"/><text x="80.2977%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.0477%" y="629" width="0.0795%" height="15" fill="rgb(225,75,7)" fg:x="1007" fg:w="1"/><text x="80.2977%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.0477%" y="613" width="0.0795%" height="15" fill="rgb(219,199,7)" fg:x="1007" fg:w="1"/><text x="80.2977%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.0477%" y="597" width="0.0795%" height="15" fill="rgb(209,93,42)" fg:x="1007" fg:w="1"/><text x="80.2977%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.0477%" y="581" width="0.0795%" height="15" fill="rgb(240,175,17)" fg:x="1007" fg:w="1"/><text x="80.2977%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.0477%" y="565" width="0.0795%" height="15" fill="rgb(232,106,7)" fg:x="1007" fg:w="1"/><text x="80.2977%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="80.0477%" y="549" width="0.0795%" height="15" fill="rgb(242,106,43)" fg:x="1007" fg:w="1"/><text x="80.2977%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="80.0477%" y="533" width="0.0795%" height="15" fill="rgb(242,61,37)" fg:x="1007" fg:w="1"/><text x="80.2977%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="80.0477%" y="517" width="0.0795%" height="15" fill="rgb(205,72,10)" fg:x="1007" fg:w="1"/><text x="80.2977%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="80.0477%" y="501" width="0.0795%" height="15" fill="rgb(214,184,36)" fg:x="1007" fg:w="1"/><text x="80.2977%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.0477%" y="485" width="0.0795%" height="15" fill="rgb(206,107,18)" fg:x="1007" fg:w="1"/><text x="80.2977%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.1272%" y="645" width="0.0795%" height="15" fill="rgb(210,75,5)" fg:x="1008" fg:w="1"/><text x="80.3772%" y="655.50"></text></g><g><title>plugins_core::build::Build::holding (7 samples, 0.56%)</title><rect x="79.7297%" y="709" width="0.5564%" height="15" fill="rgb(205,3,19)" fg:x="1003" fg:w="7"/><text x="79.9797%" y="719.50"></text></g><g><title>plugins_core::tools::set_container (2 samples, 0.16%)</title><rect x="80.1272%" y="693" width="0.1590%" height="15" fill="rgb(207,181,42)" fg:x="1008" fg:w="2"/><text x="80.3772%" y="703.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="80.1272%" y="677" width="0.1590%" height="15" fill="rgb(229,179,43)" fg:x="1008" fg:w="2"/><text x="80.3772%" y="687.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="80.1272%" y="661" width="0.1590%" height="15" fill="rgb(246,95,30)" fg:x="1008" fg:w="2"/><text x="80.3772%" y="671.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="80.2067%" y="645" width="0.0795%" height="15" fill="rgb(234,144,45)" fg:x="1009" fg:w="1"/><text x="80.4567%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.2067%" y="629" width="0.0795%" height="15" fill="rgb(250,54,25)" fg:x="1009" fg:w="1"/><text x="80.4567%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="80.2067%" y="613" width="0.0795%" height="15" fill="rgb(215,195,40)" fg:x="1009" fg:w="1"/><text x="80.4567%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.2067%" y="597" width="0.0795%" height="15" fill="rgb(233,188,42)" fg:x="1009" fg:w="1"/><text x="80.4567%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.2067%" y="581" width="0.0795%" height="15" fill="rgb(247,227,35)" fg:x="1009" fg:w="1"/><text x="80.4567%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="80.2862%" y="709" width="0.0795%" height="15" fill="rgb(249,124,27)" fg:x="1010" fg:w="1"/><text x="80.5362%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="80.2862%" y="693" width="0.0795%" height="15" fill="rgb(219,207,25)" fg:x="1010" fg:w="1"/><text x="80.5362%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="80.2862%" y="677" width="0.0795%" height="15" fill="rgb(241,216,47)" fg:x="1010" fg:w="1"/><text x="80.5362%" y="687.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="80.2862%" y="661" width="0.0795%" height="15" fill="rgb(233,82,50)" fg:x="1010" fg:w="1"/><text x="80.5362%" y="671.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="80.2862%" y="645" width="0.0795%" height="15" fill="rgb(232,63,2)" fg:x="1010" fg:w="1"/><text x="80.5362%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="80.3657%" y="693" width="0.0795%" height="15" fill="rgb(236,184,28)" fg:x="1011" fg:w="1"/><text x="80.6157%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="80.3657%" y="677" width="0.0795%" height="15" fill="rgb(254,63,27)" fg:x="1011" fg:w="1"/><text x="80.6157%" y="687.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="80.3657%" y="661" width="0.0795%" height="15" fill="rgb(253,106,28)" fg:x="1011" fg:w="1"/><text x="80.6157%" y="671.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="80.5246%" y="645" width="0.0795%" height="15" fill="rgb(225,141,39)" fg:x="1013" fg:w="1"/><text x="80.7746%" y="655.50"></text></g><g><title>plugins_core::build::Build::occupying (4 samples, 0.32%)</title><rect x="80.3657%" y="709" width="0.3180%" height="15" fill="rgb(222,157,20)" fg:x="1011" fg:w="4"/><text x="80.6157%" y="719.50"></text></g><g><title>plugins_core::tools::set_occupying (3 samples, 0.24%)</title><rect x="80.4452%" y="693" width="0.2385%" height="15" fill="rgb(210,190,9)" fg:x="1012" fg:w="3"/><text x="80.6952%" y="703.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="80.5246%" y="677" width="0.1590%" height="15" fill="rgb(242,167,7)" fg:x="1013" fg:w="2"/><text x="80.7746%" y="687.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="80.5246%" y="661" width="0.1590%" height="15" fill="rgb(227,82,41)" fg:x="1013" fg:w="2"/><text x="80.7746%" y="671.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="80.6041%" y="645" width="0.0795%" height="15" fill="rgb(222,131,13)" fg:x="1014" fg:w="1"/><text x="80.8541%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="80.6041%" y="629" width="0.0795%" height="15" fill="rgb(221,98,26)" fg:x="1014" fg:w="1"/><text x="80.8541%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.6041%" y="613" width="0.0795%" height="15" fill="rgb(251,63,52)" fg:x="1014" fg:w="1"/><text x="80.8541%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="80.6836%" y="677" width="0.0795%" height="15" fill="rgb(246,25,43)" fg:x="1015" fg:w="1"/><text x="80.9336%" y="687.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (54 samples, 4.29%)</title><rect x="76.5501%" y="725" width="4.2925%" height="15" fill="rgb(247,167,15)" fg:x="963" fg:w="54"/><text x="76.8001%" y="735.50">plugi..</text></g><g><title>plugins_core::build::Build::with_username (2 samples, 0.16%)</title><rect x="80.6836%" y="709" width="0.1590%" height="15" fill="rgb(240,104,42)" fg:x="1015" fg:w="2"/><text x="80.9336%" y="719.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="80.6836%" y="693" width="0.1590%" height="15" fill="rgb(224,54,6)" fg:x="1015" fg:w="2"/><text x="80.9336%" y="703.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="80.7631%" y="677" width="0.0795%" height="15" fill="rgb(244,108,35)" fg:x="1016" fg:w="1"/><text x="81.0131%" y="687.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="80.7631%" y="661" width="0.0795%" height="15" fill="rgb(216,154,2)" fg:x="1016" fg:w="1"/><text x="81.0131%" y="671.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="80.7631%" y="645" width="0.0795%" height="15" fill="rgb(222,8,47)" fg:x="1016" fg:w="1"/><text x="81.0131%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.7631%" y="629" width="0.0795%" height="15" fill="rgb(252,93,1)" fg:x="1016" fg:w="1"/><text x="81.0131%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="80.7631%" y="613" width="0.0795%" height="15" fill="rgb(223,226,51)" fg:x="1016" fg:w="1"/><text x="81.0131%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.7631%" y="597" width="0.0795%" height="15" fill="rgb(206,147,9)" fg:x="1016" fg:w="1"/><text x="81.0131%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="80.8426%" y="677" width="0.0795%" height="15" fill="rgb(248,180,41)" fg:x="1017" fg:w="1"/><text x="81.0926%" y="687.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="80.8426%" y="661" width="0.0795%" height="15" fill="rgb(209,47,50)" fg:x="1017" fg:w="1"/><text x="81.0926%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="80.8426%" y="645" width="0.0795%" height="15" fill="rgb(243,65,31)" fg:x="1017" fg:w="1"/><text x="81.0926%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="80.8426%" y="629" width="0.0795%" height="15" fill="rgb(228,128,1)" fg:x="1017" fg:w="1"/><text x="81.0926%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.8426%" y="613" width="0.0795%" height="15" fill="rgb(231,192,16)" fg:x="1017" fg:w="1"/><text x="81.0926%" y="623.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (2 samples, 0.16%)</title><rect x="80.8426%" y="725" width="0.1590%" height="15" fill="rgb(224,26,40)" fg:x="1017" fg:w="2"/><text x="81.0926%" y="735.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="80.8426%" y="709" width="0.1590%" height="15" fill="rgb(214,192,17)" fg:x="1017" fg:w="2"/><text x="81.0926%" y="719.50"></text></g><g><title>kernel::model::Entity::new_blank (2 samples, 0.16%)</title><rect x="80.8426%" y="693" width="0.1590%" height="15" fill="rgb(225,147,18)" fg:x="1017" fg:w="2"/><text x="81.0926%" y="703.50"></text></g><g><title>kernel::model::Entity::new_with_key (1 samples, 0.08%)</title><rect x="80.9221%" y="677" width="0.0795%" height="15" fill="rgb(205,35,11)" fg:x="1018" fg:w="1"/><text x="81.1721%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="81.0811%" y="629" width="0.0795%" height="15" fill="rgb(242,40,42)" fg:x="1020" fg:w="1"/><text x="81.3311%" y="639.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="81.0811%" y="661" width="0.1590%" height="15" fill="rgb(250,170,13)" fg:x="1020" fg:w="2"/><text x="81.3311%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="81.0811%" y="645" width="0.1590%" height="15" fill="rgb(240,161,28)" fg:x="1020" fg:w="2"/><text x="81.3311%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.1606%" y="629" width="0.0795%" height="15" fill="rgb(245,179,12)" fg:x="1021" fg:w="1"/><text x="81.4106%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="81.1606%" y="613" width="0.0795%" height="15" fill="rgb(250,92,32)" fg:x="1021" fg:w="1"/><text x="81.4106%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="81.0016%" y="693" width="0.3180%" height="15" fill="rgb(233,10,40)" fg:x="1019" fg:w="4"/><text x="81.2516%" y="703.50"></text></g><g><title>engine::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="81.0016%" y="677" width="0.3180%" height="15" fill="rgb(217,98,1)" fg:x="1019" fg:w="4"/><text x="81.2516%" y="687.50"></text></g><g><title>kernel::model::Entity::gid (1 samples, 0.08%)</title><rect x="81.2401%" y="661" width="0.0795%" height="15" fill="rgb(238,202,7)" fg:x="1022" fg:w="1"/><text x="81.4901%" y="671.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="81.2401%" y="645" width="0.0795%" height="15" fill="rgb(222,91,3)" fg:x="1022" fg:w="1"/><text x="81.4901%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="81.2401%" y="629" width="0.0795%" height="15" fill="rgb(211,170,49)" fg:x="1022" fg:w="1"/><text x="81.4901%" y="639.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (101 samples, 8.03%)</title><rect x="73.3704%" y="741" width="8.0286%" height="15" fill="rgb(253,139,18)" fg:x="923" fg:w="101"/><text x="73.6204%" y="751.50">&lt;tests::Hol..</text></g><g><title>plugins_core::build::BuildSurroundings::make (5 samples, 0.40%)</title><rect x="81.0016%" y="725" width="0.3975%" height="15" fill="rgb(222,4,43)" fg:x="1019" fg:w="5"/><text x="81.2516%" y="735.50"></text></g><g><title>plugins_core::build::QuickThing::make (5 samples, 0.40%)</title><rect x="81.0016%" y="709" width="0.3975%" height="15" fill="rgb(207,205,12)" fg:x="1019" fg:w="5"/><text x="81.2516%" y="719.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="81.3196%" y="693" width="0.0795%" height="15" fill="rgb(216,159,46)" fg:x="1023" fg:w="1"/><text x="81.5696%" y="703.50"></text></g><g><title>kernel::model::Entity::new_blank (1 samples, 0.08%)</title><rect x="81.3196%" y="677" width="0.0795%" height="15" fill="rgb(236,115,1)" fg:x="1023" fg:w="1"/><text x="81.5696%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="81.3196%" y="661" width="0.0795%" height="15" fill="rgb(251,35,33)" fg:x="1023" fg:w="1"/><text x="81.5696%" y="671.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="81.3196%" y="645" width="0.0795%" height="15" fill="rgb(248,62,51)" fg:x="1023" fg:w="1"/><text x="81.5696%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="81.3196%" y="629" width="0.0795%" height="15" fill="rgb(254,180,19)" fg:x="1023" fg:w="1"/><text x="81.5696%" y="639.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="81.3990%" y="709" width="0.0795%" height="15" fill="rgb(217,100,32)" fg:x="1024" fg:w="1"/><text x="81.6490%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="81.3990%" y="693" width="0.0795%" height="15" fill="rgb(224,71,22)" fg:x="1024" fg:w="1"/><text x="81.6490%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="81.3990%" y="677" width="0.0795%" height="15" fill="rgb(251,185,33)" fg:x="1024" fg:w="1"/><text x="81.6490%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.3990%" y="661" width="0.0795%" height="15" fill="rgb(209,75,48)" fg:x="1024" fg:w="1"/><text x="81.6490%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.3990%" y="645" width="0.0795%" height="15" fill="rgb(253,190,16)" fg:x="1024" fg:w="1"/><text x="81.6490%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.3990%" y="629" width="0.0795%" height="15" fill="rgb(226,140,1)" fg:x="1024" fg:w="1"/><text x="81.6490%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.5580%" y="645" width="0.0795%" height="15" fill="rgb(206,75,30)" fg:x="1026" fg:w="1"/><text x="81.8080%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.5580%" y="629" width="0.0795%" height="15" fill="rgb(231,208,37)" fg:x="1026" fg:w="1"/><text x="81.8080%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.5580%" y="613" width="0.0795%" height="15" fill="rgb(238,136,40)" fg:x="1026" fg:w="1"/><text x="81.8080%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="81.5580%" y="597" width="0.0795%" height="15" fill="rgb(247,137,17)" fg:x="1026" fg:w="1"/><text x="81.8080%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="81.4785%" y="661" width="0.2385%" height="15" fill="rgb(240,60,40)" fg:x="1025" fg:w="3"/><text x="81.7285%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.6375%" y="645" width="0.0795%" height="15" fill="rgb(236,68,50)" fg:x="1027" fg:w="1"/><text x="81.8875%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="81.7170%" y="645" width="0.0795%" height="15" fill="rgb(230,42,12)" fg:x="1028" fg:w="1"/><text x="81.9670%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.7965%" y="645" width="0.0795%" height="15" fill="rgb(219,16,16)" fg:x="1029" fg:w="1"/><text x="82.0465%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.7965%" y="629" width="0.0795%" height="15" fill="rgb(220,38,35)" fg:x="1029" fg:w="1"/><text x="82.0465%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.7965%" y="613" width="0.0795%" height="15" fill="rgb(228,33,1)" fg:x="1029" fg:w="1"/><text x="82.0465%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.7965%" y="597" width="0.0795%" height="15" fill="rgb(241,46,31)" fg:x="1029" fg:w="1"/><text x="82.0465%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.8760%" y="645" width="0.0795%" height="15" fill="rgb(232,58,20)" fg:x="1030" fg:w="1"/><text x="82.1260%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.8760%" y="629" width="0.0795%" height="15" fill="rgb(206,228,53)" fg:x="1030" fg:w="1"/><text x="82.1260%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.9555%" y="629" width="0.0795%" height="15" fill="rgb(206,88,33)" fg:x="1031" fg:w="1"/><text x="82.2055%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.9555%" y="613" width="0.0795%" height="15" fill="rgb(238,69,7)" fg:x="1031" fg:w="1"/><text x="82.2055%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.9555%" y="597" width="0.0795%" height="15" fill="rgb(250,21,46)" fg:x="1031" fg:w="1"/><text x="82.2055%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.9555%" y="581" width="0.0795%" height="15" fill="rgb(215,212,21)" fg:x="1031" fg:w="1"/><text x="82.2055%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.9555%" y="565" width="0.0795%" height="15" fill="rgb(211,35,12)" fg:x="1031" fg:w="1"/><text x="82.2055%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="81.9555%" y="549" width="0.0795%" height="15" fill="rgb(231,184,16)" fg:x="1031" fg:w="1"/><text x="82.2055%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="82.0350%" y="629" width="0.1590%" height="15" fill="rgb(242,140,15)" fg:x="1032" fg:w="2"/><text x="82.2850%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="82.0350%" y="613" width="0.1590%" height="15" fill="rgb(220,37,14)" fg:x="1032" fg:w="2"/><text x="82.2850%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.1145%" y="597" width="0.0795%" height="15" fill="rgb(223,146,22)" fg:x="1033" fg:w="1"/><text x="82.3645%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="82.1145%" y="581" width="0.0795%" height="15" fill="rgb(216,132,15)" fg:x="1033" fg:w="1"/><text x="82.3645%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="82.1940%" y="613" width="0.0795%" height="15" fill="rgb(248,83,5)" fg:x="1034" fg:w="1"/><text x="82.4440%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.2734%" y="613" width="0.0795%" height="15" fill="rgb(231,206,48)" fg:x="1035" fg:w="1"/><text x="82.5234%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.3529%" y="597" width="0.0795%" height="15" fill="rgb(253,185,37)" fg:x="1036" fg:w="1"/><text x="82.6029%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.3529%" y="581" width="0.0795%" height="15" fill="rgb(208,21,44)" fg:x="1036" fg:w="1"/><text x="82.6029%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.3529%" y="565" width="0.0795%" height="15" fill="rgb(236,125,4)" fg:x="1036" fg:w="1"/><text x="82.6029%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="81.9555%" y="645" width="0.5564%" height="15" fill="rgb(226,134,25)" fg:x="1031" fg:w="7"/><text x="82.2055%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="82.1940%" y="629" width="0.3180%" height="15" fill="rgb(250,201,12)" fg:x="1034" fg:w="4"/><text x="82.4440%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="82.3529%" y="613" width="0.1590%" height="15" fill="rgb(225,92,18)" fg:x="1036" fg:w="2"/><text x="82.6029%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.4324%" y="597" width="0.0795%" height="15" fill="rgb(227,35,22)" fg:x="1037" fg:w="1"/><text x="82.6824%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (14 samples, 1.11%)</title><rect x="81.4785%" y="677" width="1.1129%" height="15" fill="rgb(214,180,52)" fg:x="1025" fg:w="14"/><text x="81.7285%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.87%)</title><rect x="81.7170%" y="661" width="0.8744%" height="15" fill="rgb(233,55,38)" fg:x="1028" fg:w="11"/><text x="81.9670%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.5119%" y="645" width="0.0795%" height="15" fill="rgb(249,171,43)" fg:x="1038" fg:w="1"/><text x="82.7619%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.5119%" y="629" width="0.0795%" height="15" fill="rgb(239,87,2)" fg:x="1038" fg:w="1"/><text x="82.7619%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.5119%" y="613" width="0.0795%" height="15" fill="rgb(248,141,5)" fg:x="1038" fg:w="1"/><text x="82.7619%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.6709%" y="613" width="0.0795%" height="15" fill="rgb(238,33,42)" fg:x="1040" fg:w="1"/><text x="82.9209%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="82.5914%" y="677" width="0.2385%" height="15" fill="rgb(231,57,19)" fg:x="1039" fg:w="3"/><text x="82.8414%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="82.5914%" y="661" width="0.2385%" height="15" fill="rgb(214,78,53)" fg:x="1039" fg:w="3"/><text x="82.8414%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="82.5914%" y="645" width="0.2385%" height="15" fill="rgb(206,132,29)" fg:x="1039" fg:w="3"/><text x="82.8414%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="82.6709%" y="629" width="0.1590%" height="15" fill="rgb(248,174,31)" fg:x="1040" fg:w="2"/><text x="82.9209%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.7504%" y="613" width="0.0795%" height="15" fill="rgb(221,87,13)" fg:x="1041" fg:w="1"/><text x="83.0004%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="82.7504%" y="597" width="0.0795%" height="15" fill="rgb(223,197,17)" fg:x="1041" fg:w="1"/><text x="83.0004%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="82.7504%" y="581" width="0.0795%" height="15" fill="rgb(220,144,50)" fg:x="1041" fg:w="1"/><text x="83.0004%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.7504%" y="565" width="0.0795%" height="15" fill="rgb(244,201,11)" fg:x="1041" fg:w="1"/><text x="83.0004%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.9094%" y="613" width="0.0795%" height="15" fill="rgb(249,81,34)" fg:x="1043" fg:w="1"/><text x="83.1594%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.9889%" y="613" width="0.0795%" height="15" fill="rgb(205,161,12)" fg:x="1044" fg:w="1"/><text x="83.2389%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.9889%" y="597" width="0.0795%" height="15" fill="rgb(252,139,50)" fg:x="1044" fg:w="1"/><text x="83.2389%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="83.0684%" y="597" width="0.1590%" height="15" fill="rgb(205,169,14)" fg:x="1045" fg:w="2"/><text x="83.3184%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.2273%" y="597" width="0.0795%" height="15" fill="rgb(248,198,33)" fg:x="1047" fg:w="1"/><text x="83.4773%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.3863%" y="565" width="0.0795%" height="15" fill="rgb(236,23,21)" fg:x="1049" fg:w="1"/><text x="83.6363%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.3863%" y="549" width="0.0795%" height="15" fill="rgb(231,13,38)" fg:x="1049" fg:w="1"/><text x="83.6363%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="82.8299%" y="661" width="0.7154%" height="15" fill="rgb(239,139,21)" fg:x="1042" fg:w="9"/><text x="83.0799%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.72%)</title><rect x="82.8299%" y="645" width="0.7154%" height="15" fill="rgb(222,164,45)" fg:x="1042" fg:w="9"/><text x="83.0799%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="82.8299%" y="629" width="0.7154%" height="15" fill="rgb(230,52,27)" fg:x="1042" fg:w="9"/><text x="83.0799%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="83.0684%" y="613" width="0.4769%" height="15" fill="rgb(227,143,42)" fg:x="1045" fg:w="6"/><text x="83.3184%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="83.3068%" y="597" width="0.2385%" height="15" fill="rgb(249,127,1)" fg:x="1048" fg:w="3"/><text x="83.5568%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="83.3068%" y="581" width="0.2385%" height="15" fill="rgb(243,107,26)" fg:x="1048" fg:w="3"/><text x="83.5568%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="83.4658%" y="565" width="0.0795%" height="15" fill="rgb(225,7,45)" fg:x="1050" fg:w="1"/><text x="83.7158%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.4658%" y="549" width="0.0795%" height="15" fill="rgb(241,88,38)" fg:x="1050" fg:w="1"/><text x="83.7158%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.6248%" y="629" width="0.0795%" height="15" fill="rgb(226,121,9)" fg:x="1052" fg:w="1"/><text x="83.8748%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="83.7043%" y="629" width="0.1590%" height="15" fill="rgb(253,60,29)" fg:x="1053" fg:w="2"/><text x="83.9543%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.7838%" y="613" width="0.0795%" height="15" fill="rgb(244,181,39)" fg:x="1054" fg:w="1"/><text x="84.0338%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="83.8633%" y="629" width="0.0795%" height="15" fill="rgb(252,203,31)" fg:x="1055" fg:w="1"/><text x="84.1133%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.8633%" y="613" width="0.0795%" height="15" fill="rgb(224,120,8)" fg:x="1055" fg:w="1"/><text x="84.1133%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.8633%" y="597" width="0.0795%" height="15" fill="rgb(205,171,54)" fg:x="1055" fg:w="1"/><text x="84.1133%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="83.9428%" y="629" width="0.1590%" height="15" fill="rgb(235,89,11)" fg:x="1056" fg:w="2"/><text x="84.1928%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="83.9428%" y="613" width="0.1590%" height="15" fill="rgb(212,180,28)" fg:x="1056" fg:w="2"/><text x="84.1928%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="83.9428%" y="597" width="0.1590%" height="15" fill="rgb(247,84,49)" fg:x="1056" fg:w="2"/><text x="84.1928%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="83.9428%" y="581" width="0.1590%" height="15" fill="rgb(236,187,52)" fg:x="1056" fg:w="2"/><text x="84.1928%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="83.9428%" y="565" width="0.1590%" height="15" fill="rgb(227,24,15)" fg:x="1056" fg:w="2"/><text x="84.1928%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="83.9428%" y="549" width="0.1590%" height="15" fill="rgb(227,211,13)" fg:x="1056" fg:w="2"/><text x="84.1928%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.1812%" y="533" width="0.0795%" height="15" fill="rgb(245,52,14)" fg:x="1059" fg:w="1"/><text x="84.4312%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="84.1017%" y="581" width="0.2385%" height="15" fill="rgb(225,185,13)" fg:x="1058" fg:w="3"/><text x="84.3517%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="84.1017%" y="565" width="0.2385%" height="15" fill="rgb(217,160,29)" fg:x="1058" fg:w="3"/><text x="84.3517%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="84.1017%" y="549" width="0.2385%" height="15" fill="rgb(216,115,53)" fg:x="1058" fg:w="3"/><text x="84.3517%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.2607%" y="533" width="0.0795%" height="15" fill="rgb(236,99,5)" fg:x="1060" fg:w="1"/><text x="84.5107%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.2607%" y="517" width="0.0795%" height="15" fill="rgb(222,60,38)" fg:x="1060" fg:w="1"/><text x="84.5107%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="84.3402%" y="565" width="0.0795%" height="15" fill="rgb(212,82,22)" fg:x="1061" fg:w="1"/><text x="84.5902%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="84.4197%" y="565" width="0.1590%" height="15" fill="rgb(214,48,28)" fg:x="1062" fg:w="2"/><text x="84.6697%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.4992%" y="549" width="0.0795%" height="15" fill="rgb(245,196,50)" fg:x="1063" fg:w="1"/><text x="84.7492%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.4992%" y="533" width="0.0795%" height="15" fill="rgb(225,159,46)" fg:x="1063" fg:w="1"/><text x="84.7492%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (14 samples, 1.11%)</title><rect x="83.5453%" y="661" width="1.1129%" height="15" fill="rgb(207,195,48)" fg:x="1051" fg:w="14"/><text x="83.7953%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (14 samples, 1.11%)</title><rect x="83.5453%" y="645" width="1.1129%" height="15" fill="rgb(240,73,3)" fg:x="1051" fg:w="14"/><text x="83.7953%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.56%)</title><rect x="84.1017%" y="629" width="0.5564%" height="15" fill="rgb(245,57,23)" fg:x="1058" fg:w="7"/><text x="84.3517%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (7 samples, 0.56%)</title><rect x="84.1017%" y="613" width="0.5564%" height="15" fill="rgb(240,75,18)" fg:x="1058" fg:w="7"/><text x="84.3517%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="84.1017%" y="597" width="0.5564%" height="15" fill="rgb(238,168,12)" fg:x="1058" fg:w="7"/><text x="84.3517%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="84.3402%" y="581" width="0.3180%" height="15" fill="rgb(226,20,40)" fg:x="1061" fg:w="4"/><text x="84.5902%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.5787%" y="565" width="0.0795%" height="15" fill="rgb(224,130,35)" fg:x="1064" fg:w="1"/><text x="84.8287%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="84.8967%" y="469" width="0.0795%" height="15" fill="rgb(225,63,41)" fg:x="1068" fg:w="1"/><text x="85.1467%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="84.8967%" y="485" width="0.1590%" height="15" fill="rgb(219,3,3)" fg:x="1068" fg:w="2"/><text x="85.1467%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="84.9762%" y="469" width="0.0795%" height="15" fill="rgb(218,157,4)" fg:x="1069" fg:w="1"/><text x="85.2262%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="84.8967%" y="501" width="0.2385%" height="15" fill="rgb(232,76,36)" fg:x="1068" fg:w="3"/><text x="85.1467%" y="511.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="85.0556%" y="485" width="0.0795%" height="15" fill="rgb(247,36,0)" fg:x="1070" fg:w="1"/><text x="85.3056%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (4 samples, 0.32%)</title><rect x="85.1351%" y="485" width="0.3180%" height="15" fill="rgb(205,2,34)" fg:x="1071" fg:w="4"/><text x="85.3851%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.79%)</title><rect x="84.8172%" y="533" width="0.7949%" height="15" fill="rgb(239,136,13)" fg:x="1067" fg:w="10"/><text x="85.0672%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="84.8967%" y="517" width="0.7154%" height="15" fill="rgb(253,122,12)" fg:x="1068" fg:w="9"/><text x="85.1467%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (6 samples, 0.48%)</title><rect x="85.1351%" y="501" width="0.4769%" height="15" fill="rgb(222,174,7)" fg:x="1071" fg:w="6"/><text x="85.3851%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="85.4531%" y="485" width="0.1590%" height="15" fill="rgb(208,191,42)" fg:x="1075" fg:w="2"/><text x="85.7031%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.95%)</title><rect x="84.8172%" y="565" width="0.9539%" height="15" fill="rgb(237,212,15)" fg:x="1067" fg:w="12"/><text x="85.0672%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.95%)</title><rect x="84.8172%" y="549" width="0.9539%" height="15" fill="rgb(215,65,20)" fg:x="1067" fg:w="12"/><text x="85.0672%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="85.6121%" y="533" width="0.1590%" height="15" fill="rgb(232,103,11)" fg:x="1077" fg:w="2"/><text x="85.8621%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="85.6121%" y="517" width="0.1590%" height="15" fill="rgb(235,148,18)" fg:x="1077" fg:w="2"/><text x="85.8621%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.6916%" y="501" width="0.0795%" height="15" fill="rgb(240,173,7)" fg:x="1078" fg:w="1"/><text x="85.9416%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="85.7711%" y="565" width="0.0795%" height="15" fill="rgb(228,182,25)" fg:x="1079" fg:w="1"/><text x="86.0211%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="85.7711%" y="549" width="0.0795%" height="15" fill="rgb(247,3,52)" fg:x="1079" fg:w="1"/><text x="86.0211%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.43%)</title><rect x="84.7377%" y="597" width="1.4308%" height="15" fill="rgb(226,155,8)" fg:x="1066" fg:w="18"/><text x="84.9877%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 1.35%)</title><rect x="84.8172%" y="581" width="1.3514%" height="15" fill="rgb(243,195,38)" fg:x="1067" fg:w="17"/><text x="85.0672%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="85.8506%" y="565" width="0.3180%" height="15" fill="rgb(254,181,33)" fg:x="1080" fg:w="4"/><text x="86.1006%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="85.8506%" y="549" width="0.3180%" height="15" fill="rgb(232,98,23)" fg:x="1080" fg:w="4"/><text x="86.1006%" y="559.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="85.9300%" y="533" width="0.2385%" height="15" fill="rgb(205,23,10)" fg:x="1081" fg:w="3"/><text x="86.1800%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="86.1685%" y="597" width="0.1590%" height="15" fill="rgb(212,124,38)" fg:x="1084" fg:w="2"/><text x="86.4185%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.2480%" y="581" width="0.0795%" height="15" fill="rgb(228,207,2)" fg:x="1085" fg:w="1"/><text x="86.4980%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (25 samples, 1.99%)</title><rect x="84.6582%" y="661" width="1.9873%" height="15" fill="rgb(215,120,22)" fg:x="1065" fg:w="25"/><text x="84.9082%" y="671.50">s..</text></g><g><title>serde_json::de::from_trait (25 samples, 1.99%)</title><rect x="84.6582%" y="645" width="1.9873%" height="15" fill="rgb(251,172,33)" fg:x="1065" fg:w="25"/><text x="84.9082%" y="655.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (25 samples, 1.99%)</title><rect x="84.6582%" y="629" width="1.9873%" height="15" fill="rgb(250,83,2)" fg:x="1065" fg:w="25"/><text x="84.9082%" y="639.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (25 samples, 1.99%)</title><rect x="84.6582%" y="613" width="1.9873%" height="15" fill="rgb(210,132,53)" fg:x="1065" fg:w="25"/><text x="84.9082%" y="623.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="86.3275%" y="597" width="0.3180%" height="15" fill="rgb(221,208,36)" fg:x="1086" fg:w="4"/><text x="86.5775%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="86.3275%" y="581" width="0.3180%" height="15" fill="rgb(205,192,46)" fg:x="1086" fg:w="4"/><text x="86.5775%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="86.5660%" y="565" width="0.0795%" height="15" fill="rgb(223,163,14)" fg:x="1089" fg:w="1"/><text x="86.8160%" y="575.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="86.9634%" y="597" width="0.0795%" height="15" fill="rgb(218,41,28)" fg:x="1094" fg:w="1"/><text x="87.2134%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="86.9634%" y="581" width="0.0795%" height="15" fill="rgb(235,104,10)" fg:x="1094" fg:w="1"/><text x="87.2134%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="86.8839%" y="613" width="0.2385%" height="15" fill="rgb(246,17,4)" fg:x="1093" fg:w="3"/><text x="87.1339%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="87.0429%" y="597" width="0.0795%" height="15" fill="rgb(240,7,16)" fg:x="1095" fg:w="1"/><text x="87.2929%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.0429%" y="581" width="0.0795%" height="15" fill="rgb(213,160,23)" fg:x="1095" fg:w="1"/><text x="87.2929%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.56%)</title><rect x="86.6455%" y="645" width="0.5564%" height="15" fill="rgb(251,179,49)" fg:x="1090" fg:w="7"/><text x="86.8955%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.48%)</title><rect x="86.7250%" y="629" width="0.4769%" height="15" fill="rgb(247,198,10)" fg:x="1091" fg:w="6"/><text x="86.9750%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.1224%" y="613" width="0.0795%" height="15" fill="rgb(220,65,29)" fg:x="1096" fg:w="1"/><text x="87.3724%" y="623.50"></text></g><g><title>kernel::compare::any_entity_changes (56 samples, 4.45%)</title><rect x="82.8299%" y="677" width="4.4515%" height="15" fill="rgb(237,171,28)" fg:x="1042" fg:w="56"/><text x="83.0799%" y="687.50">kerne..</text></g><g><title>treediff::diff::diff (8 samples, 0.64%)</title><rect x="86.6455%" y="661" width="0.6359%" height="15" fill="rgb(228,44,26)" fg:x="1090" fg:w="8"/><text x="86.8955%" y="671.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="87.2019%" y="645" width="0.0795%" height="15" fill="rgb(216,210,27)" fg:x="1097" fg:w="1"/><text x="87.4519%" y="655.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (75 samples, 5.96%)</title><rect x="81.4785%" y="709" width="5.9618%" height="15" fill="rgb(252,10,17)" fg:x="1025" fg:w="75"/><text x="81.7285%" y="719.50">engine::..</text></g><g><title>engine::session::Session::check_for_changes (75 samples, 5.96%)</title><rect x="81.4785%" y="693" width="5.9618%" height="15" fill="rgb(214,172,30)" fg:x="1025" fg:w="75"/><text x="81.7285%" y="703.50">engine::..</text></g><g><title>kernel::model::Entity::set_gid (2 samples, 0.16%)</title><rect x="87.2814%" y="677" width="0.1590%" height="15" fill="rgb(253,130,48)" fg:x="1098" fg:w="2"/><text x="87.5314%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="87.2814%" y="661" width="0.1590%" height="15" fill="rgb(226,99,43)" fg:x="1098" fg:w="2"/><text x="87.5314%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="87.2814%" y="645" width="0.1590%" height="15" fill="rgb(239,111,26)" fg:x="1098" fg:w="2"/><text x="87.5314%" y="655.50"></text></g><g><title>engine::session::Session::save_entity_changes (77 samples, 6.12%)</title><rect x="81.3990%" y="725" width="6.1208%" height="15" fill="rgb(240,27,53)" fg:x="1024" fg:w="77"/><text x="81.6490%" y="735.50">engine::..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="87.4404%" y="709" width="0.0795%" height="15" fill="rgb(254,163,12)" fg:x="1100" fg:w="1"/><text x="87.6904%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="87.4404%" y="693" width="0.0795%" height="15" fill="rgb(225,51,48)" fg:x="1100" fg:w="1"/><text x="87.6904%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="87.4404%" y="677" width="0.0795%" height="15" fill="rgb(205,19,32)" fg:x="1100" fg:w="1"/><text x="87.6904%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="87.4404%" y="661" width="0.0795%" height="15" fill="rgb(218,119,26)" fg:x="1100" fg:w="1"/><text x="87.6904%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="87.4404%" y="645" width="0.0795%" height="15" fill="rgb(231,173,33)" fg:x="1100" fg:w="1"/><text x="87.6904%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.4404%" y="629" width="0.0795%" height="15" fill="rgb(241,100,29)" fg:x="1100" fg:w="1"/><text x="87.6904%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.4404%" y="613" width="0.0795%" height="15" fill="rgb(250,194,34)" fg:x="1100" fg:w="1"/><text x="87.6904%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="87.4404%" y="597" width="0.0795%" height="15" fill="rgb(215,23,50)" fg:x="1100" fg:w="1"/><text x="87.6904%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.4404%" y="581" width="0.0795%" height="15" fill="rgb(206,49,37)" fg:x="1100" fg:w="1"/><text x="87.6904%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.4404%" y="565" width="0.0795%" height="15" fill="rgb(247,39,21)" fg:x="1100" fg:w="1"/><text x="87.6904%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.4404%" y="549" width="0.0795%" height="15" fill="rgb(209,220,15)" fg:x="1100" fg:w="1"/><text x="87.6904%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.4404%" y="533" width="0.0795%" height="15" fill="rgb(206,41,33)" fg:x="1100" fg:w="1"/><text x="87.6904%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.4404%" y="517" width="0.0795%" height="15" fill="rgb(221,225,45)" fg:x="1100" fg:w="1"/><text x="87.6904%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="87.4404%" y="501" width="0.0795%" height="15" fill="rgb(216,27,18)" fg:x="1100" fg:w="1"/><text x="87.6904%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="87.4404%" y="485" width="0.0795%" height="15" fill="rgb(250,193,34)" fg:x="1100" fg:w="1"/><text x="87.6904%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="87.4404%" y="469" width="0.0795%" height="15" fill="rgb(227,215,20)" fg:x="1100" fg:w="1"/><text x="87.6904%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="87.4404%" y="453" width="0.0795%" height="15" fill="rgb(242,211,27)" fg:x="1100" fg:w="1"/><text x="87.6904%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="87.4404%" y="437" width="0.0795%" height="15" fill="rgb(229,190,30)" fg:x="1100" fg:w="1"/><text x="87.6904%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="87.4404%" y="421" width="0.0795%" height="15" fill="rgb(253,31,29)" fg:x="1100" fg:w="1"/><text x="87.6904%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.4404%" y="405" width="0.0795%" height="15" fill="rgb(229,177,52)" fg:x="1100" fg:w="1"/><text x="87.6904%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="87.4404%" y="389" width="0.0795%" height="15" fill="rgb(226,88,8)" fg:x="1100" fg:w="1"/><text x="87.6904%" y="399.50"></text></g><g><title>core::cmp::max (1 samples, 0.08%)</title><rect x="87.4404%" y="373" width="0.0795%" height="15" fill="rgb(214,55,27)" fg:x="1100" fg:w="1"/><text x="87.6904%" y="383.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.08%)</title><rect x="87.4404%" y="357" width="0.0795%" height="15" fill="rgb(233,202,5)" fg:x="1100" fg:w="1"/><text x="87.6904%" y="367.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.08%)</title><rect x="87.4404%" y="341" width="0.0795%" height="15" fill="rgb(251,49,30)" fg:x="1100" fg:w="1"/><text x="87.6904%" y="351.50"></text></g><g><title>engine::session::Session::close (78 samples, 6.20%)</title><rect x="81.3990%" y="741" width="6.2003%" height="15" fill="rgb(235,18,52)" fg:x="1024" fg:w="78"/><text x="81.6490%" y="751.50">engine::..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="87.5199%" y="725" width="0.0795%" height="15" fill="rgb(250,111,51)" fg:x="1101" fg:w="1"/><text x="87.7699%" y="735.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="87.5199%" y="709" width="0.0795%" height="15" fill="rgb(218,13,25)" fg:x="1101" fg:w="1"/><text x="87.7699%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="87.5199%" y="693" width="0.0795%" height="15" fill="rgb(248,96,7)" fg:x="1101" fg:w="1"/><text x="87.7699%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="87.5199%" y="677" width="0.0795%" height="15" fill="rgb(217,31,15)" fg:x="1101" fg:w="1"/><text x="87.7699%" y="687.50"></text></g><g><title>clock_getres (1 samples, 0.08%)</title><rect x="87.5199%" y="661" width="0.0795%" height="15" fill="rgb(228,59,49)" fg:x="1101" fg:w="1"/><text x="87.7699%" y="671.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="87.8378%" y="533" width="0.0795%" height="15" fill="rgb(210,152,38)" fg:x="1105" fg:w="1"/><text x="88.0878%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="87.8378%" y="517" width="0.0795%" height="15" fill="rgb(206,71,11)" fg:x="1105" fg:w="1"/><text x="88.0878%" y="527.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="87.8378%" y="501" width="0.0795%" height="15" fill="rgb(244,199,5)" fg:x="1105" fg:w="1"/><text x="88.0878%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="87.8378%" y="485" width="0.0795%" height="15" fill="rgb(253,49,1)" fg:x="1105" fg:w="1"/><text x="88.0878%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="87.8378%" y="469" width="0.0795%" height="15" fill="rgb(225,206,40)" fg:x="1105" fg:w="1"/><text x="88.0878%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="87.8378%" y="453" width="0.0795%" height="15" fill="rgb(243,116,47)" fg:x="1105" fg:w="1"/><text x="88.0878%" y="463.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="87.8378%" y="437" width="0.0795%" height="15" fill="rgb(219,225,16)" fg:x="1105" fg:w="1"/><text x="88.0878%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="87.8378%" y="421" width="0.0795%" height="15" fill="rgb(233,29,47)" fg:x="1105" fg:w="1"/><text x="88.0878%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="87.8378%" y="405" width="0.0795%" height="15" fill="rgb(250,179,18)" fg:x="1105" fg:w="1"/><text x="88.0878%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="87.8378%" y="389" width="0.0795%" height="15" fill="rgb(215,176,6)" fg:x="1105" fg:w="1"/><text x="88.0878%" y="399.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (2 samples, 0.16%)</title><rect x="87.8378%" y="645" width="0.1590%" height="15" fill="rgb(214,117,39)" fg:x="1105" fg:w="2"/><text x="88.0878%" y="655.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (2 samples, 0.16%)</title><rect x="87.8378%" y="629" width="0.1590%" height="15" fill="rgb(247,183,36)" fg:x="1105" fg:w="2"/><text x="88.0878%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="87.8378%" y="613" width="0.1590%" height="15" fill="rgb(237,200,3)" fg:x="1105" fg:w="2"/><text x="88.0878%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="87.8378%" y="597" width="0.1590%" height="15" fill="rgb(212,220,24)" fg:x="1105" fg:w="2"/><text x="88.0878%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="87.8378%" y="581" width="0.1590%" height="15" fill="rgb(245,216,20)" fg:x="1105" fg:w="2"/><text x="88.0878%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="87.8378%" y="565" width="0.1590%" height="15" fill="rgb(219,124,7)" fg:x="1105" fg:w="2"/><text x="88.0878%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="87.8378%" y="549" width="0.1590%" height="15" fill="rgb(227,167,8)" fg:x="1105" fg:w="2"/><text x="88.0878%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.9173%" y="533" width="0.0795%" height="15" fill="rgb(241,37,2)" fg:x="1106" fg:w="1"/><text x="88.1673%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="87.9173%" y="517" width="0.0795%" height="15" fill="rgb(238,134,33)" fg:x="1106" fg:w="1"/><text x="88.1673%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="88.0763%" y="533" width="0.0795%" height="15" fill="rgb(248,48,27)" fg:x="1108" fg:w="1"/><text x="88.3263%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.0763%" y="517" width="0.0795%" height="15" fill="rgb(212,14,16)" fg:x="1108" fg:w="1"/><text x="88.3263%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.1558%" y="501" width="0.0795%" height="15" fill="rgb(217,205,37)" fg:x="1109" fg:w="1"/><text x="88.4058%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="88.1558%" y="517" width="0.1590%" height="15" fill="rgb(233,185,47)" fg:x="1109" fg:w="2"/><text x="88.4058%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.2353%" y="501" width="0.0795%" height="15" fill="rgb(244,88,8)" fg:x="1110" fg:w="1"/><text x="88.4853%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (7 samples, 0.56%)</title><rect x="87.8378%" y="693" width="0.5564%" height="15" fill="rgb(213,0,20)" fg:x="1105" fg:w="7"/><text x="88.0878%" y="703.50"></text></g><g><title>engine::internal::Entities::prepare_entity (7 samples, 0.56%)</title><rect x="87.8378%" y="677" width="0.5564%" height="15" fill="rgb(238,159,36)" fg:x="1105" fg:w="7"/><text x="88.0878%" y="687.50"></text></g><g><title>kernel::model::deserialize_entity (7 samples, 0.56%)</title><rect x="87.8378%" y="661" width="0.5564%" height="15" fill="rgb(253,173,17)" fg:x="1105" fg:w="7"/><text x="88.0878%" y="671.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="87.9968%" y="645" width="0.3975%" height="15" fill="rgb(221,23,28)" fg:x="1107" fg:w="5"/><text x="88.2468%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="87.9968%" y="629" width="0.3975%" height="15" fill="rgb(218,113,15)" fg:x="1107" fg:w="5"/><text x="88.2468%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="87.9968%" y="613" width="0.3975%" height="15" fill="rgb(233,58,3)" fg:x="1107" fg:w="5"/><text x="88.2468%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="87.9968%" y="597" width="0.3975%" height="15" fill="rgb(250,46,35)" fg:x="1107" fg:w="5"/><text x="88.2468%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="87.9968%" y="581" width="0.3975%" height="15" fill="rgb(210,169,11)" fg:x="1107" fg:w="5"/><text x="88.2468%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="87.9968%" y="565" width="0.3975%" height="15" fill="rgb(246,88,19)" fg:x="1107" fg:w="5"/><text x="88.2468%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="88.0763%" y="549" width="0.3180%" height="15" fill="rgb(206,81,49)" fg:x="1108" fg:w="4"/><text x="88.3263%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="88.1558%" y="533" width="0.2385%" height="15" fill="rgb(232,144,18)" fg:x="1109" fg:w="3"/><text x="88.4058%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.3148%" y="517" width="0.0795%" height="15" fill="rgb(235,2,27)" fg:x="1111" fg:w="1"/><text x="88.5648%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.3148%" y="501" width="0.0795%" height="15" fill="rgb(239,157,39)" fg:x="1111" fg:w="1"/><text x="88.5648%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.3148%" y="485" width="0.0795%" height="15" fill="rgb(220,11,17)" fg:x="1111" fg:w="1"/><text x="88.5648%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="88.3148%" y="469" width="0.0795%" height="15" fill="rgb(243,94,50)" fg:x="1111" fg:w="1"/><text x="88.5648%" y="479.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living (8 samples, 0.64%)</title><rect x="87.8378%" y="709" width="0.6359%" height="15" fill="rgb(218,22,0)" fg:x="1105" fg:w="8"/><text x="88.0878%" y="719.50"></text></g><g><title>engine::users::model::username_to_key (1 samples, 0.08%)</title><rect x="88.3943%" y="693" width="0.0795%" height="15" fill="rgb(249,70,21)" fg:x="1112" fg:w="1"/><text x="88.6443%" y="703.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (1 samples, 0.08%)</title><rect x="88.5533%" y="693" width="0.0795%" height="15" fill="rgb(245,111,46)" fg:x="1114" fg:w="1"/><text x="88.8033%" y="703.50"></text></g><g><title>&lt;kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="88.6328%" y="517" width="0.0795%" height="15" fill="rgb(244,183,12)" fg:x="1115" fg:w="1"/><text x="88.8828%" y="527.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (2 samples, 0.16%)</title><rect x="88.6328%" y="581" width="0.1590%" height="15" fill="rgb(207,117,0)" fg:x="1115" fg:w="2"/><text x="88.8828%" y="591.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (2 samples, 0.16%)</title><rect x="88.6328%" y="565" width="0.1590%" height="15" fill="rgb(206,20,43)" fg:x="1115" fg:w="2"/><text x="88.8828%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="88.6328%" y="549" width="0.1590%" height="15" fill="rgb(221,104,11)" fg:x="1115" fg:w="2"/><text x="88.8828%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.6328%" y="533" width="0.1590%" height="15" fill="rgb(254,36,50)" fg:x="1115" fg:w="2"/><text x="88.8828%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.7122%" y="517" width="0.0795%" height="15" fill="rgb(252,17,15)" fg:x="1116" fg:w="1"/><text x="88.9622%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.7122%" y="501" width="0.0795%" height="15" fill="rgb(219,129,43)" fg:x="1116" fg:w="1"/><text x="88.9622%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.7122%" y="485" width="0.0795%" height="15" fill="rgb(205,34,45)" fg:x="1116" fg:w="1"/><text x="88.9622%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="88.7122%" y="469" width="0.0795%" height="15" fill="rgb(251,201,32)" fg:x="1116" fg:w="1"/><text x="88.9622%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.7122%" y="453" width="0.0795%" height="15" fill="rgb(205,56,0)" fg:x="1116" fg:w="1"/><text x="88.9622%" y="463.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="88.7122%" y="437" width="0.0795%" height="15" fill="rgb(211,193,27)" fg:x="1116" fg:w="1"/><text x="88.9622%" y="447.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (5 samples, 0.40%)</title><rect x="88.6328%" y="693" width="0.3975%" height="15" fill="rgb(231,100,42)" fg:x="1115" fg:w="5"/><text x="88.8828%" y="703.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (5 samples, 0.40%)</title><rect x="88.6328%" y="677" width="0.3975%" height="15" fill="rgb(245,85,27)" fg:x="1115" fg:w="5"/><text x="88.8828%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="88.6328%" y="661" width="0.3975%" height="15" fill="rgb(241,76,24)" fg:x="1115" fg:w="5"/><text x="88.8828%" y="671.50"></text></g><g><title>kernel::model::Entity::load_scope (5 samples, 0.40%)</title><rect x="88.6328%" y="645" width="0.3975%" height="15" fill="rgb(249,157,15)" fg:x="1115" fg:w="5"/><text x="88.8828%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (5 samples, 0.40%)</title><rect x="88.6328%" y="629" width="0.3975%" height="15" fill="rgb(222,218,25)" fg:x="1115" fg:w="5"/><text x="88.8828%" y="639.50"></text></g><g><title>engine::internal::Entities::prepare_entity (5 samples, 0.40%)</title><rect x="88.6328%" y="613" width="0.3975%" height="15" fill="rgb(252,156,52)" fg:x="1115" fg:w="5"/><text x="88.8828%" y="623.50"></text></g><g><title>kernel::model::deserialize_entity (5 samples, 0.40%)</title><rect x="88.6328%" y="597" width="0.3975%" height="15" fill="rgb(211,185,7)" fg:x="1115" fg:w="5"/><text x="88.8828%" y="607.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="88.7917%" y="581" width="0.2385%" height="15" fill="rgb(234,108,24)" fg:x="1117" fg:w="3"/><text x="89.0417%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="88.7917%" y="565" width="0.2385%" height="15" fill="rgb(227,218,2)" fg:x="1117" fg:w="3"/><text x="89.0417%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="88.7917%" y="549" width="0.2385%" height="15" fill="rgb(224,0,36)" fg:x="1117" fg:w="3"/><text x="89.0417%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="88.7917%" y="533" width="0.2385%" height="15" fill="rgb(233,201,10)" fg:x="1117" fg:w="3"/><text x="89.0417%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="88.7917%" y="517" width="0.2385%" height="15" fill="rgb(252,209,14)" fg:x="1117" fg:w="3"/><text x="89.0417%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="88.7917%" y="501" width="0.2385%" height="15" fill="rgb(205,93,49)" fg:x="1117" fg:w="3"/><text x="89.0417%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="88.8712%" y="485" width="0.1590%" height="15" fill="rgb(234,116,45)" fg:x="1118" fg:w="2"/><text x="89.1212%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.9507%" y="469" width="0.0795%" height="15" fill="rgb(248,89,35)" fg:x="1119" fg:w="1"/><text x="89.2007%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.9507%" y="453" width="0.0795%" height="15" fill="rgb(233,167,45)" fg:x="1119" fg:w="1"/><text x="89.2007%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.9507%" y="437" width="0.0795%" height="15" fill="rgb(248,228,14)" fg:x="1119" fg:w="1"/><text x="89.2007%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.9507%" y="421" width="0.0795%" height="15" fill="rgb(246,91,14)" fg:x="1119" fg:w="1"/><text x="89.2007%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="89.1892%" y="597" width="0.0795%" height="15" fill="rgb(227,142,5)" fg:x="1122" fg:w="1"/><text x="89.4392%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.1892%" y="581" width="0.0795%" height="15" fill="rgb(221,63,33)" fg:x="1122" fg:w="1"/><text x="89.4392%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="89.2687%" y="581" width="0.2385%" height="15" fill="rgb(233,49,0)" fg:x="1123" fg:w="3"/><text x="89.5187%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.4277%" y="565" width="0.0795%" height="15" fill="rgb(251,115,38)" fg:x="1125" fg:w="1"/><text x="89.6777%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="89.1892%" y="613" width="0.3975%" height="15" fill="rgb(231,214,32)" fg:x="1122" fg:w="5"/><text x="89.4392%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (4 samples, 0.32%)</title><rect x="89.2687%" y="597" width="0.3180%" height="15" fill="rgb(248,73,46)" fg:x="1123" fg:w="4"/><text x="89.5187%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.5072%" y="581" width="0.0795%" height="15" fill="rgb(237,156,4)" fg:x="1126" fg:w="1"/><text x="89.7572%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="89.1892%" y="629" width="0.5564%" height="15" fill="rgb(227,132,2)" fg:x="1122" fg:w="7"/><text x="89.4392%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="89.5866%" y="613" width="0.1590%" height="15" fill="rgb(248,161,9)" fg:x="1127" fg:w="2"/><text x="89.8366%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (11 samples, 0.87%)</title><rect x="89.0302%" y="661" width="0.8744%" height="15" fill="rgb(238,77,38)" fg:x="1120" fg:w="11"/><text x="89.2802%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.87%)</title><rect x="89.0302%" y="645" width="0.8744%" height="15" fill="rgb(222,166,40)" fg:x="1120" fg:w="11"/><text x="89.2802%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="89.7456%" y="629" width="0.1590%" height="15" fill="rgb(214,168,45)" fg:x="1129" fg:w="2"/><text x="89.9956%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="90.0636%" y="629" width="0.0795%" height="15" fill="rgb(226,64,37)" fg:x="1133" fg:w="1"/><text x="90.3136%" y="639.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="90.1431%" y="629" width="0.0795%" height="15" fill="rgb(232,210,43)" fg:x="1134" fg:w="1"/><text x="90.3931%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="90.1431%" y="613" width="0.0795%" height="15" fill="rgb(214,76,33)" fg:x="1134" fg:w="1"/><text x="90.3931%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="90.1431%" y="597" width="0.0795%" height="15" fill="rgb(210,78,5)" fg:x="1134" fg:w="1"/><text x="90.3931%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.2226%" y="629" width="0.0795%" height="15" fill="rgb(211,107,37)" fg:x="1135" fg:w="1"/><text x="90.4726%" y="639.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="90.3021%" y="629" width="0.0795%" height="15" fill="rgb(249,67,16)" fg:x="1136" fg:w="1"/><text x="90.5521%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="90.3021%" y="613" width="0.0795%" height="15" fill="rgb(222,114,31)" fg:x="1136" fg:w="1"/><text x="90.5521%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="90.3021%" y="597" width="0.0795%" height="15" fill="rgb(242,118,19)" fg:x="1136" fg:w="1"/><text x="90.5521%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="90.3021%" y="581" width="0.0795%" height="15" fill="rgb(223,115,1)" fg:x="1136" fg:w="1"/><text x="90.5521%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.3021%" y="565" width="0.0795%" height="15" fill="rgb(241,182,54)" fg:x="1136" fg:w="1"/><text x="90.5521%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.7790%" y="565" width="0.0795%" height="15" fill="rgb(244,166,36)" fg:x="1142" fg:w="1"/><text x="91.0290%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.8585%" y="485" width="0.0795%" height="15" fill="rgb(241,52,43)" fg:x="1143" fg:w="1"/><text x="91.1085%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.8585%" y="469" width="0.0795%" height="15" fill="rgb(236,82,9)" fg:x="1143" fg:w="1"/><text x="91.1085%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.8585%" y="453" width="0.0795%" height="15" fill="rgb(241,119,0)" fg:x="1143" fg:w="1"/><text x="91.1085%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.8585%" y="437" width="0.0795%" height="15" fill="rgb(221,19,22)" fg:x="1143" fg:w="1"/><text x="91.1085%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.8585%" y="421" width="0.0795%" height="15" fill="rgb(254,144,35)" fg:x="1143" fg:w="1"/><text x="91.1085%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.8585%" y="405" width="0.0795%" height="15" fill="rgb(246,132,30)" fg:x="1143" fg:w="1"/><text x="91.1085%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.8585%" y="389" width="0.0795%" height="15" fill="rgb(234,69,28)" fg:x="1143" fg:w="1"/><text x="91.1085%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="90.8585%" y="373" width="0.0795%" height="15" fill="rgb(219,106,47)" fg:x="1143" fg:w="1"/><text x="91.1085%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="90.8585%" y="357" width="0.0795%" height="15" fill="rgb(218,79,24)" fg:x="1143" fg:w="1"/><text x="91.1085%" y="367.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="90.9380%" y="453" width="0.0795%" height="15" fill="rgb(225,26,21)" fg:x="1144" fg:w="1"/><text x="91.1880%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.0175%" y="373" width="0.0795%" height="15" fill="rgb(217,68,49)" fg:x="1145" fg:w="1"/><text x="91.2675%" y="383.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (2 samples, 0.16%)</title><rect x="91.0175%" y="437" width="0.1590%" height="15" fill="rgb(220,204,28)" fg:x="1145" fg:w="2"/><text x="91.2675%" y="447.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (2 samples, 0.16%)</title><rect x="91.0175%" y="421" width="0.1590%" height="15" fill="rgb(237,208,43)" fg:x="1145" fg:w="2"/><text x="91.2675%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="91.0175%" y="405" width="0.1590%" height="15" fill="rgb(213,97,42)" fg:x="1145" fg:w="2"/><text x="91.2675%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.0175%" y="389" width="0.1590%" height="15" fill="rgb(238,96,52)" fg:x="1145" fg:w="2"/><text x="91.2675%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.0970%" y="373" width="0.0795%" height="15" fill="rgb(228,14,13)" fg:x="1146" fg:w="1"/><text x="91.3470%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.0970%" y="357" width="0.0795%" height="15" fill="rgb(219,123,13)" fg:x="1146" fg:w="1"/><text x="91.3470%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="91.0970%" y="341" width="0.0795%" height="15" fill="rgb(216,144,17)" fg:x="1146" fg:w="1"/><text x="91.3470%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="91.0970%" y="325" width="0.0795%" height="15" fill="rgb(230,228,29)" fg:x="1146" fg:w="1"/><text x="91.3470%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.1765%" y="373" width="0.0795%" height="15" fill="rgb(233,18,5)" fg:x="1147" fg:w="1"/><text x="91.4265%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.1765%" y="357" width="0.0795%" height="15" fill="rgb(233,197,12)" fg:x="1147" fg:w="1"/><text x="91.4265%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.1765%" y="341" width="0.0795%" height="15" fill="rgb(234,140,29)" fg:x="1147" fg:w="1"/><text x="91.4265%" y="351.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 0.48%)</title><rect x="90.8585%" y="565" width="0.4769%" height="15" fill="rgb(233,113,19)" fg:x="1143" fg:w="6"/><text x="91.1085%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="90.8585%" y="549" width="0.4769%" height="15" fill="rgb(246,209,13)" fg:x="1143" fg:w="6"/><text x="91.1085%" y="559.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (6 samples, 0.48%)</title><rect x="90.8585%" y="533" width="0.4769%" height="15" fill="rgb(242,79,54)" fg:x="1143" fg:w="6"/><text x="91.1085%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (6 samples, 0.48%)</title><rect x="90.8585%" y="517" width="0.4769%" height="15" fill="rgb(219,73,16)" fg:x="1143" fg:w="6"/><text x="91.1085%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (6 samples, 0.48%)</title><rect x="90.8585%" y="501" width="0.4769%" height="15" fill="rgb(224,52,10)" fg:x="1143" fg:w="6"/><text x="91.1085%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (5 samples, 0.40%)</title><rect x="90.9380%" y="485" width="0.3975%" height="15" fill="rgb(237,179,5)" fg:x="1144" fg:w="5"/><text x="91.1880%" y="495.50"></text></g><g><title>engine::internal::Entities::prepare_entity (5 samples, 0.40%)</title><rect x="90.9380%" y="469" width="0.3975%" height="15" fill="rgb(231,20,6)" fg:x="1144" fg:w="5"/><text x="91.1880%" y="479.50"></text></g><g><title>kernel::model::deserialize_entity (4 samples, 0.32%)</title><rect x="91.0175%" y="453" width="0.3180%" height="15" fill="rgb(253,171,45)" fg:x="1145" fg:w="4"/><text x="91.2675%" y="463.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="91.1765%" y="437" width="0.1590%" height="15" fill="rgb(230,75,49)" fg:x="1147" fg:w="2"/><text x="91.4265%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="91.1765%" y="421" width="0.1590%" height="15" fill="rgb(216,83,46)" fg:x="1147" fg:w="2"/><text x="91.4265%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="91.1765%" y="405" width="0.1590%" height="15" fill="rgb(236,56,9)" fg:x="1147" fg:w="2"/><text x="91.4265%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="91.1765%" y="389" width="0.1590%" height="15" fill="rgb(215,28,34)" fg:x="1147" fg:w="2"/><text x="91.4265%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.2560%" y="373" width="0.0795%" height="15" fill="rgb(230,222,20)" fg:x="1148" fg:w="1"/><text x="91.5060%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.4149%" y="533" width="0.0795%" height="15" fill="rgb(235,209,51)" fg:x="1150" fg:w="1"/><text x="91.6649%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="91.4944%" y="469" width="0.0795%" height="15" fill="rgb(235,167,1)" fg:x="1151" fg:w="1"/><text x="91.7444%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="91.4944%" y="533" width="0.1590%" height="15" fill="rgb(248,220,0)" fg:x="1151" fg:w="2"/><text x="91.7444%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="91.4944%" y="517" width="0.1590%" height="15" fill="rgb(239,0,18)" fg:x="1151" fg:w="2"/><text x="91.7444%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="91.4944%" y="501" width="0.1590%" height="15" fill="rgb(229,179,11)" fg:x="1151" fg:w="2"/><text x="91.7444%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="91.4944%" y="485" width="0.1590%" height="15" fill="rgb(226,116,53)" fg:x="1151" fg:w="2"/><text x="91.7444%" y="495.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="91.5739%" y="469" width="0.0795%" height="15" fill="rgb(218,1,49)" fg:x="1152" fg:w="1"/><text x="91.8239%" y="479.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="91.5739%" y="453" width="0.0795%" height="15" fill="rgb(208,184,47)" fg:x="1152" fg:w="1"/><text x="91.8239%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.5739%" y="437" width="0.0795%" height="15" fill="rgb(238,174,3)" fg:x="1152" fg:w="1"/><text x="91.8239%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.5739%" y="421" width="0.0795%" height="15" fill="rgb(247,188,6)" fg:x="1152" fg:w="1"/><text x="91.8239%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.5739%" y="405" width="0.0795%" height="15" fill="rgb(211,165,46)" fg:x="1152" fg:w="1"/><text x="91.8239%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.5739%" y="389" width="0.0795%" height="15" fill="rgb(222,190,10)" fg:x="1152" fg:w="1"/><text x="91.8239%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.5739%" y="373" width="0.0795%" height="15" fill="rgb(206,185,3)" fg:x="1152" fg:w="1"/><text x="91.8239%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.5739%" y="357" width="0.0795%" height="15" fill="rgb(244,125,37)" fg:x="1152" fg:w="1"/><text x="91.8239%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.5739%" y="341" width="0.0795%" height="15" fill="rgb(211,43,7)" fg:x="1152" fg:w="1"/><text x="91.8239%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.5739%" y="325" width="0.0795%" height="15" fill="rgb(250,41,42)" fg:x="1152" fg:w="1"/><text x="91.8239%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.5739%" y="309" width="0.0795%" height="15" fill="rgb(254,54,42)" fg:x="1152" fg:w="1"/><text x="91.8239%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.5739%" y="293" width="0.0795%" height="15" fill="rgb(213,71,43)" fg:x="1152" fg:w="1"/><text x="91.8239%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.5739%" y="277" width="0.0795%" height="15" fill="rgb(249,3,44)" fg:x="1152" fg:w="1"/><text x="91.8239%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.5739%" y="261" width="0.0795%" height="15" fill="rgb(229,80,41)" fg:x="1152" fg:w="1"/><text x="91.8239%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.5739%" y="245" width="0.0795%" height="15" fill="rgb(231,25,28)" fg:x="1152" fg:w="1"/><text x="91.8239%" y="255.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (14 samples, 1.11%)</title><rect x="90.6995%" y="581" width="1.1129%" height="15" fill="rgb(208,79,48)" fg:x="1141" fg:w="14"/><text x="90.9495%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.48%)</title><rect x="91.3355%" y="565" width="0.4769%" height="15" fill="rgb(207,196,38)" fg:x="1149" fg:w="6"/><text x="91.5855%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (6 samples, 0.48%)</title><rect x="91.3355%" y="549" width="0.4769%" height="15" fill="rgb(228,105,49)" fg:x="1149" fg:w="6"/><text x="91.5855%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="91.6534%" y="533" width="0.1590%" height="15" fill="rgb(237,99,15)" fg:x="1153" fg:w="2"/><text x="91.9034%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.6534%" y="517" width="0.1590%" height="15" fill="rgb(224,207,46)" fg:x="1153" fg:w="2"/><text x="91.9034%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.7329%" y="501" width="0.0795%" height="15" fill="rgb(249,117,50)" fg:x="1154" fg:w="1"/><text x="91.9829%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="92.1304%" y="453" width="0.0795%" height="15" fill="rgb(248,17,13)" fg:x="1159" fg:w="1"/><text x="92.3804%" y="463.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="92.1304%" y="437" width="0.0795%" height="15" fill="rgb(228,187,36)" fg:x="1159" fg:w="1"/><text x="92.3804%" y="447.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="92.2099%" y="453" width="0.1590%" height="15" fill="rgb(234,132,20)" fg:x="1160" fg:w="2"/><text x="92.4599%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.2099%" y="437" width="0.1590%" height="15" fill="rgb(209,170,46)" fg:x="1160" fg:w="2"/><text x="92.4599%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.2099%" y="421" width="0.1590%" height="15" fill="rgb(237,23,19)" fg:x="1160" fg:w="2"/><text x="92.4599%" y="431.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.08%)</title><rect x="92.3688%" y="453" width="0.0795%" height="15" fill="rgb(227,21,26)" fg:x="1162" fg:w="1"/><text x="92.6188%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.4483%" y="293" width="0.0795%" height="15" fill="rgb(222,220,48)" fg:x="1163" fg:w="1"/><text x="92.6983%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.4483%" y="277" width="0.0795%" height="15" fill="rgb(214,9,16)" fg:x="1163" fg:w="1"/><text x="92.6983%" y="287.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (2 samples, 0.16%)</title><rect x="92.4483%" y="437" width="0.1590%" height="15" fill="rgb(209,73,30)" fg:x="1163" fg:w="2"/><text x="92.6983%" y="447.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (2 samples, 0.16%)</title><rect x="92.4483%" y="421" width="0.1590%" height="15" fill="rgb(207,20,33)" fg:x="1163" fg:w="2"/><text x="92.6983%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.4483%" y="405" width="0.1590%" height="15" fill="rgb(219,153,12)" fg:x="1163" fg:w="2"/><text x="92.6983%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.4483%" y="389" width="0.1590%" height="15" fill="rgb(235,97,25)" fg:x="1163" fg:w="2"/><text x="92.6983%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="92.4483%" y="373" width="0.1590%" height="15" fill="rgb(244,30,34)" fg:x="1163" fg:w="2"/><text x="92.6983%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.4483%" y="357" width="0.1590%" height="15" fill="rgb(214,106,45)" fg:x="1163" fg:w="2"/><text x="92.6983%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="92.4483%" y="341" width="0.1590%" height="15" fill="rgb(226,41,9)" fg:x="1163" fg:w="2"/><text x="92.6983%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="92.4483%" y="325" width="0.1590%" height="15" fill="rgb(253,139,29)" fg:x="1163" fg:w="2"/><text x="92.6983%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="92.4483%" y="309" width="0.1590%" height="15" fill="rgb(213,205,39)" fg:x="1163" fg:w="2"/><text x="92.6983%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="92.5278%" y="293" width="0.0795%" height="15" fill="rgb(209,27,10)" fg:x="1164" fg:w="1"/><text x="92.7778%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.5278%" y="277" width="0.0795%" height="15" fill="rgb(249,142,16)" fg:x="1164" fg:w="1"/><text x="92.7778%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.6073%" y="389" width="0.0795%" height="15" fill="rgb(242,65,12)" fg:x="1165" fg:w="1"/><text x="92.8573%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.6073%" y="373" width="0.0795%" height="15" fill="rgb(232,48,10)" fg:x="1165" fg:w="1"/><text x="92.8573%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.6868%" y="357" width="0.0795%" height="15" fill="rgb(253,67,19)" fg:x="1166" fg:w="1"/><text x="92.9368%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.6868%" y="341" width="0.0795%" height="15" fill="rgb(227,93,29)" fg:x="1166" fg:w="1"/><text x="92.9368%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.6868%" y="325" width="0.0795%" height="15" fill="rgb(226,189,53)" fg:x="1166" fg:w="1"/><text x="92.9368%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.7663%" y="325" width="0.0795%" height="15" fill="rgb(223,224,1)" fg:x="1167" fg:w="1"/><text x="93.0163%" y="335.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (12 samples, 0.95%)</title><rect x="92.0509%" y="533" width="0.9539%" height="15" fill="rgb(221,84,32)" fg:x="1158" fg:w="12"/><text x="92.3009%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (12 samples, 0.95%)</title><rect x="92.0509%" y="517" width="0.9539%" height="15" fill="rgb(214,189,28)" fg:x="1158" fg:w="12"/><text x="92.3009%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.87%)</title><rect x="92.1304%" y="501" width="0.8744%" height="15" fill="rgb(234,7,52)" fg:x="1159" fg:w="11"/><text x="92.3804%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (11 samples, 0.87%)</title><rect x="92.1304%" y="485" width="0.8744%" height="15" fill="rgb(249,73,31)" fg:x="1159" fg:w="11"/><text x="92.3804%" y="495.50"></text></g><g><title>engine::internal::Entities::prepare_entity (11 samples, 0.87%)</title><rect x="92.1304%" y="469" width="0.8744%" height="15" fill="rgb(253,153,41)" fg:x="1159" fg:w="11"/><text x="92.3804%" y="479.50"></text></g><g><title>kernel::model::deserialize_entity (7 samples, 0.56%)</title><rect x="92.4483%" y="453" width="0.5564%" height="15" fill="rgb(249,52,34)" fg:x="1163" fg:w="7"/><text x="92.6983%" y="463.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="92.6073%" y="437" width="0.3975%" height="15" fill="rgb(236,177,47)" fg:x="1165" fg:w="5"/><text x="92.8573%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="92.6073%" y="421" width="0.3975%" height="15" fill="rgb(252,185,45)" fg:x="1165" fg:w="5"/><text x="92.8573%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="92.6073%" y="405" width="0.3975%" height="15" fill="rgb(251,15,30)" fg:x="1165" fg:w="5"/><text x="92.8573%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="92.6868%" y="389" width="0.3180%" height="15" fill="rgb(233,31,4)" fg:x="1166" fg:w="4"/><text x="92.9368%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="92.6868%" y="373" width="0.3180%" height="15" fill="rgb(254,44,24)" fg:x="1166" fg:w="4"/><text x="92.9368%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="92.7663%" y="357" width="0.2385%" height="15" fill="rgb(218,54,1)" fg:x="1167" fg:w="3"/><text x="93.0163%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="92.7663%" y="341" width="0.2385%" height="15" fill="rgb(243,209,39)" fg:x="1167" fg:w="3"/><text x="93.0163%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="92.8458%" y="325" width="0.1590%" height="15" fill="rgb(206,75,33)" fg:x="1168" fg:w="2"/><text x="93.0958%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="92.8458%" y="309" width="0.1590%" height="15" fill="rgb(223,108,18)" fg:x="1168" fg:w="2"/><text x="93.0958%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.9253%" y="293" width="0.0795%" height="15" fill="rgb(244,89,31)" fg:x="1169" fg:w="1"/><text x="93.1753%" y="303.50"></text></g><g><title>plugins_core::tools::get_contained_keys (17 samples, 1.35%)</title><rect x="91.8124%" y="581" width="1.3514%" height="15" fill="rgb(222,167,27)" fg:x="1155" fg:w="17"/><text x="92.0624%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (14 samples, 1.11%)</title><rect x="92.0509%" y="565" width="1.1129%" height="15" fill="rgb(247,41,16)" fg:x="1158" fg:w="14"/><text x="92.3009%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (14 samples, 1.11%)</title><rect x="92.0509%" y="549" width="1.1129%" height="15" fill="rgb(233,168,40)" fg:x="1158" fg:w="14"/><text x="92.3009%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.0048%" y="533" width="0.1590%" height="15" fill="rgb(205,211,8)" fg:x="1170" fg:w="2"/><text x="93.2548%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.0048%" y="517" width="0.1590%" height="15" fill="rgb(238,105,11)" fg:x="1170" fg:w="2"/><text x="93.2548%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="93.0048%" y="501" width="0.1590%" height="15" fill="rgb(223,142,52)" fg:x="1170" fg:w="2"/><text x="93.2548%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="93.0048%" y="485" width="0.1590%" height="15" fill="rgb(238,51,33)" fg:x="1170" fg:w="2"/><text x="93.2548%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="93.0048%" y="469" width="0.1590%" height="15" fill="rgb(231,188,43)" fg:x="1170" fg:w="2"/><text x="93.2548%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.0048%" y="453" width="0.1590%" height="15" fill="rgb(216,92,17)" fg:x="1170" fg:w="2"/><text x="93.2548%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.0048%" y="437" width="0.1590%" height="15" fill="rgb(228,2,40)" fg:x="1170" fg:w="2"/><text x="93.2548%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.0843%" y="421" width="0.0795%" height="15" fill="rgb(226,73,15)" fg:x="1171" fg:w="1"/><text x="93.3343%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (36 samples, 2.86%)</title><rect x="90.4610%" y="613" width="2.8617%" height="15" fill="rgb(227,66,46)" fg:x="1138" fg:w="36"/><text x="90.7110%" y="623.50">&lt;a..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (36 samples, 2.86%)</title><rect x="90.4610%" y="597" width="2.8617%" height="15" fill="rgb(209,71,6)" fg:x="1138" fg:w="36"/><text x="90.7110%" y="607.50">&lt;c..</text></g><g><title>plugins_core::tools::get_occupant_keys (2 samples, 0.16%)</title><rect x="93.1638%" y="581" width="0.1590%" height="15" fill="rgb(246,100,25)" fg:x="1172" fg:w="2"/><text x="93.4138%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="93.1638%" y="565" width="0.1590%" height="15" fill="rgb(248,185,27)" fg:x="1172" fg:w="2"/><text x="93.4138%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="93.1638%" y="549" width="0.1590%" height="15" fill="rgb(225,118,47)" fg:x="1172" fg:w="2"/><text x="93.4138%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.1638%" y="533" width="0.1590%" height="15" fill="rgb(220,185,44)" fg:x="1172" fg:w="2"/><text x="93.4138%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.1638%" y="517" width="0.1590%" height="15" fill="rgb(227,95,24)" fg:x="1172" fg:w="2"/><text x="93.4138%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.1638%" y="501" width="0.1590%" height="15" fill="rgb(252,84,24)" fg:x="1172" fg:w="2"/><text x="93.4138%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.1638%" y="485" width="0.1590%" height="15" fill="rgb(240,34,44)" fg:x="1172" fg:w="2"/><text x="93.4138%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="93.2432%" y="469" width="0.0795%" height="15" fill="rgb(209,72,54)" fg:x="1173" fg:w="1"/><text x="93.4932%" y="479.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="93.5612%" y="549" width="0.0795%" height="15" fill="rgb(226,19,45)" fg:x="1177" fg:w="1"/><text x="93.8112%" y="559.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="93.5612%" y="533" width="0.0795%" height="15" fill="rgb(246,7,45)" fg:x="1177" fg:w="1"/><text x="93.8112%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="93.5612%" y="517" width="0.0795%" height="15" fill="rgb(225,45,2)" fg:x="1177" fg:w="1"/><text x="93.8112%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.08%)</title><rect x="93.6407%" y="261" width="0.0795%" height="15" fill="rgb(221,80,29)" fg:x="1178" fg:w="1"/><text x="93.8907%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (5 samples, 0.40%)</title><rect x="93.4022%" y="565" width="0.3975%" height="15" fill="rgb(228,11,19)" fg:x="1175" fg:w="5"/><text x="93.6522%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="93.6407%" y="549" width="0.1590%" height="15" fill="rgb(243,17,21)" fg:x="1178" fg:w="2"/><text x="93.8907%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="93.6407%" y="533" width="0.1590%" height="15" fill="rgb(243,88,8)" fg:x="1178" fg:w="2"/><text x="93.8907%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="93.6407%" y="517" width="0.1590%" height="15" fill="rgb(214,17,9)" fg:x="1178" fg:w="2"/><text x="93.8907%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="93.6407%" y="501" width="0.1590%" height="15" fill="rgb(232,169,15)" fg:x="1178" fg:w="2"/><text x="93.8907%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="93.6407%" y="485" width="0.1590%" height="15" fill="rgb(232,86,53)" fg:x="1178" fg:w="2"/><text x="93.8907%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="93.6407%" y="469" width="0.1590%" height="15" fill="rgb(222,100,4)" fg:x="1178" fg:w="2"/><text x="93.8907%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="93.6407%" y="453" width="0.1590%" height="15" fill="rgb(253,151,38)" fg:x="1178" fg:w="2"/><text x="93.8907%" y="463.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="93.6407%" y="437" width="0.1590%" height="15" fill="rgb(238,215,29)" fg:x="1178" fg:w="2"/><text x="93.8907%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="93.6407%" y="421" width="0.1590%" height="15" fill="rgb(205,128,53)" fg:x="1178" fg:w="2"/><text x="93.8907%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="93.6407%" y="405" width="0.1590%" height="15" fill="rgb(248,183,14)" fg:x="1178" fg:w="2"/><text x="93.8907%" y="415.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="93.6407%" y="389" width="0.1590%" height="15" fill="rgb(244,172,35)" fg:x="1178" fg:w="2"/><text x="93.8907%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="93.6407%" y="373" width="0.1590%" height="15" fill="rgb(234,93,19)" fg:x="1178" fg:w="2"/><text x="93.8907%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="93.6407%" y="357" width="0.1590%" height="15" fill="rgb(227,109,7)" fg:x="1178" fg:w="2"/><text x="93.8907%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="93.6407%" y="341" width="0.1590%" height="15" fill="rgb(233,136,54)" fg:x="1178" fg:w="2"/><text x="93.8907%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="93.6407%" y="325" width="0.1590%" height="15" fill="rgb(233,19,40)" fg:x="1178" fg:w="2"/><text x="93.8907%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="93.6407%" y="309" width="0.1590%" height="15" fill="rgb(247,41,18)" fg:x="1178" fg:w="2"/><text x="93.8907%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="93.6407%" y="293" width="0.1590%" height="15" fill="rgb(220,34,34)" fg:x="1178" fg:w="2"/><text x="93.8907%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="93.6407%" y="277" width="0.1590%" height="15" fill="rgb(222,135,32)" fg:x="1178" fg:w="2"/><text x="93.8907%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="93.7202%" y="261" width="0.0795%" height="15" fill="rgb(214,80,19)" fg:x="1179" fg:w="1"/><text x="93.9702%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.7202%" y="245" width="0.0795%" height="15" fill="rgb(234,54,46)" fg:x="1179" fg:w="1"/><text x="93.9702%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="94.5151%" y="341" width="0.1590%" height="15" fill="rgb(251,48,23)" fg:x="1189" fg:w="2"/><text x="94.7651%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="94.5151%" y="325" width="0.1590%" height="15" fill="rgb(254,109,52)" fg:x="1189" fg:w="2"/><text x="94.7651%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.5946%" y="309" width="0.0795%" height="15" fill="rgb(240,186,19)" fg:x="1190" fg:w="1"/><text x="94.8446%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.5946%" y="293" width="0.0795%" height="15" fill="rgb(246,187,17)" fg:x="1190" fg:w="1"/><text x="94.8446%" y="303.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (4 samples, 0.32%)</title><rect x="94.4356%" y="357" width="0.3180%" height="15" fill="rgb(212,21,5)" fg:x="1188" fg:w="4"/><text x="94.6856%" y="367.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="94.6741%" y="341" width="0.0795%" height="15" fill="rgb(225,185,18)" fg:x="1191" fg:w="1"/><text x="94.9241%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.7536%" y="357" width="0.0795%" height="15" fill="rgb(245,114,17)" fg:x="1192" fg:w="1"/><text x="95.0036%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.7536%" y="341" width="0.0795%" height="15" fill="rgb(223,164,24)" fg:x="1192" fg:w="1"/><text x="95.0036%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.56%)</title><rect x="94.3561%" y="373" width="0.5564%" height="15" fill="rgb(211,228,3)" fg:x="1187" fg:w="7"/><text x="94.6061%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.8331%" y="357" width="0.0795%" height="15" fill="rgb(223,16,38)" fg:x="1193" fg:w="1"/><text x="95.0831%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="94.8331%" y="341" width="0.0795%" height="15" fill="rgb(207,31,54)" fg:x="1193" fg:w="1"/><text x="95.0831%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (9 samples, 0.72%)</title><rect x="94.3561%" y="389" width="0.7154%" height="15" fill="rgb(220,39,11)" fg:x="1187" fg:w="9"/><text x="94.6061%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="94.9126%" y="373" width="0.1590%" height="15" fill="rgb(235,185,0)" fg:x="1194" fg:w="2"/><text x="95.1626%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.9921%" y="357" width="0.0795%" height="15" fill="rgb(249,39,18)" fg:x="1195" fg:w="1"/><text x="95.2421%" y="367.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (11 samples, 0.87%)</title><rect x="94.2766%" y="405" width="0.8744%" height="15" fill="rgb(240,110,33)" fg:x="1186" fg:w="11"/><text x="94.5266%" y="415.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.0715%" y="389" width="0.0795%" height="15" fill="rgb(210,92,42)" fg:x="1196" fg:w="1"/><text x="95.3215%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 1.11%)</title><rect x="94.2766%" y="421" width="1.1129%" height="15" fill="rgb(218,215,28)" fg:x="1186" fg:w="14"/><text x="94.5266%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="95.1510%" y="405" width="0.2385%" height="15" fill="rgb(238,215,36)" fg:x="1197" fg:w="3"/><text x="95.4010%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="95.2305%" y="389" width="0.1590%" height="15" fill="rgb(220,31,10)" fg:x="1198" fg:w="2"/><text x="95.4805%" y="399.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (16 samples, 1.27%)</title><rect x="94.1971%" y="453" width="1.2719%" height="15" fill="rgb(212,93,14)" fg:x="1185" fg:w="16"/><text x="94.4471%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (16 samples, 1.27%)</title><rect x="94.1971%" y="437" width="1.2719%" height="15" fill="rgb(254,207,2)" fg:x="1185" fg:w="16"/><text x="94.4471%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="95.3895%" y="421" width="0.0795%" height="15" fill="rgb(205,57,44)" fg:x="1200" fg:w="1"/><text x="95.6395%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.3895%" y="405" width="0.0795%" height="15" fill="rgb(226,151,19)" fg:x="1200" fg:w="1"/><text x="95.6395%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.4690%" y="453" width="0.0795%" height="15" fill="rgb(230,72,30)" fg:x="1201" fg:w="1"/><text x="95.7190%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.4690%" y="437" width="0.0795%" height="15" fill="rgb(244,0,8)" fg:x="1201" fg:w="1"/><text x="95.7190%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 1.91%)</title><rect x="93.8792%" y="469" width="1.9078%" height="15" fill="rgb(230,192,6)" fg:x="1181" fg:w="24"/><text x="94.1292%" y="479.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="95.5485%" y="453" width="0.2385%" height="15" fill="rgb(233,207,13)" fg:x="1202" fg:w="3"/><text x="95.7985%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.7075%" y="437" width="0.0795%" height="15" fill="rgb(206,227,7)" fg:x="1204" fg:w="1"/><text x="95.9575%" y="447.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (28 samples, 2.23%)</title><rect x="93.8792%" y="501" width="2.2258%" height="15" fill="rgb(213,217,25)" fg:x="1181" fg:w="28"/><text x="94.1292%" y="511.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (28 samples, 2.23%)</title><rect x="93.8792%" y="485" width="2.2258%" height="15" fill="rgb(249,75,4)" fg:x="1181" fg:w="28"/><text x="94.1292%" y="495.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="95.7870%" y="469" width="0.3180%" height="15" fill="rgb(225,114,18)" fg:x="1205" fg:w="4"/><text x="96.0370%" y="479.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="95.8665%" y="453" width="0.2385%" height="15" fill="rgb(211,162,40)" fg:x="1206" fg:w="3"/><text x="96.1165%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (34 samples, 2.70%)</title><rect x="93.7997%" y="517" width="2.7027%" height="15" fill="rgb(206,49,29)" fg:x="1180" fg:w="34"/><text x="94.0497%" y="527.50">&lt;c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.40%)</title><rect x="96.1049%" y="501" width="0.3975%" height="15" fill="rgb(244,8,6)" fg:x="1209" fg:w="5"/><text x="96.3549%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="96.2639%" y="485" width="0.2385%" height="15" fill="rgb(231,194,28)" fg:x="1211" fg:w="3"/><text x="96.5139%" y="495.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (40 samples, 3.18%)</title><rect x="93.7997%" y="549" width="3.1797%" height="15" fill="rgb(210,69,5)" fg:x="1180" fg:w="40"/><text x="94.0497%" y="559.50">&lt;rp..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (40 samples, 3.18%)</title><rect x="93.7997%" y="533" width="3.1797%" height="15" fill="rgb(216,186,12)" fg:x="1180" fg:w="40"/><text x="94.0497%" y="543.50">&lt;st..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.48%)</title><rect x="96.5024%" y="517" width="0.4769%" height="15" fill="rgb(238,61,15)" fg:x="1214" fg:w="6"/><text x="96.7524%" y="527.50"></text></g><g><title>__libc_malloc (6 samples, 0.48%)</title><rect x="96.5024%" y="501" width="0.4769%" height="15" fill="rgb(226,104,1)" fg:x="1214" fg:w="6"/><text x="96.7524%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="96.9793%" y="517" width="0.0795%" height="15" fill="rgb(229,128,15)" fg:x="1220" fg:w="1"/><text x="97.2293%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="97.2178%" y="501" width="0.3180%" height="15" fill="rgb(247,110,15)" fg:x="1223" fg:w="4"/><text x="97.4678%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.3768%" y="485" width="0.1590%" height="15" fill="rgb(210,74,48)" fg:x="1225" fg:w="2"/><text x="97.6268%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="97.4563%" y="469" width="0.0795%" height="15" fill="rgb(246,121,10)" fg:x="1226" fg:w="1"/><text x="97.7063%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="97.5358%" y="501" width="0.1590%" height="15" fill="rgb(214,156,37)" fg:x="1227" fg:w="2"/><text x="97.7858%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.6948%" y="469" width="0.0795%" height="15" fill="rgb(214,210,34)" fg:x="1229" fg:w="1"/><text x="97.9448%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.6948%" y="453" width="0.0795%" height="15" fill="rgb(237,93,35)" fg:x="1229" fg:w="1"/><text x="97.9448%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.6948%" y="437" width="0.0795%" height="15" fill="rgb(206,36,8)" fg:x="1229" fg:w="1"/><text x="97.9448%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.7742%" y="453" width="0.0795%" height="15" fill="rgb(208,151,12)" fg:x="1230" fg:w="1"/><text x="98.0242%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.7742%" y="437" width="0.0795%" height="15" fill="rgb(225,133,52)" fg:x="1230" fg:w="1"/><text x="98.0242%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.7742%" y="421" width="0.0795%" height="15" fill="rgb(231,71,53)" fg:x="1230" fg:w="1"/><text x="98.0242%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.9332%" y="421" width="0.0795%" height="15" fill="rgb(243,76,21)" fg:x="1232" fg:w="1"/><text x="98.1832%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="97.8537%" y="437" width="0.2385%" height="15" fill="rgb(252,144,3)" fg:x="1231" fg:w="3"/><text x="98.1037%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="98.0127%" y="421" width="0.0795%" height="15" fill="rgb(231,199,10)" fg:x="1233" fg:w="1"/><text x="98.2627%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.0127%" y="405" width="0.0795%" height="15" fill="rgb(215,18,11)" fg:x="1233" fg:w="1"/><text x="98.2627%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.1717%" y="389" width="0.0795%" height="15" fill="rgb(241,65,24)" fg:x="1235" fg:w="1"/><text x="98.4217%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="98.0922%" y="437" width="0.3180%" height="15" fill="rgb(251,192,38)" fg:x="1234" fg:w="4"/><text x="98.3422%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (4 samples, 0.32%)</title><rect x="98.0922%" y="421" width="0.3180%" height="15" fill="rgb(205,9,35)" fg:x="1234" fg:w="4"/><text x="98.3422%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="98.0922%" y="405" width="0.3180%" height="15" fill="rgb(229,225,49)" fg:x="1234" fg:w="4"/><text x="98.3422%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.2512%" y="389" width="0.1590%" height="15" fill="rgb(207,125,39)" fg:x="1236" fg:w="2"/><text x="98.5012%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.2512%" y="373" width="0.1590%" height="15" fill="rgb(222,78,19)" fg:x="1236" fg:w="2"/><text x="98.5012%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.3307%" y="357" width="0.0795%" height="15" fill="rgb(248,207,20)" fg:x="1237" fg:w="1"/><text x="98.5807%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (10 samples, 0.79%)</title><rect x="97.6948%" y="501" width="0.7949%" height="15" fill="rgb(205,103,49)" fg:x="1229" fg:w="10"/><text x="97.9448%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.79%)</title><rect x="97.6948%" y="485" width="0.7949%" height="15" fill="rgb(216,42,28)" fg:x="1229" fg:w="10"/><text x="97.9448%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.72%)</title><rect x="97.7742%" y="469" width="0.7154%" height="15" fill="rgb(213,205,53)" fg:x="1230" fg:w="9"/><text x="98.0242%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (8 samples, 0.64%)</title><rect x="97.8537%" y="453" width="0.6359%" height="15" fill="rgb(239,140,53)" fg:x="1231" fg:w="8"/><text x="98.1037%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.4102%" y="437" width="0.0795%" height="15" fill="rgb(248,95,9)" fg:x="1238" fg:w="1"/><text x="98.6602%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="98.5692%" y="469" width="0.0795%" height="15" fill="rgb(254,58,47)" fg:x="1240" fg:w="1"/><text x="98.8192%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="98.6486%" y="469" width="0.0795%" height="15" fill="rgb(234,227,14)" fg:x="1241" fg:w="1"/><text x="98.8986%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.8076%" y="453" width="0.0795%" height="15" fill="rgb(205,192,45)" fg:x="1243" fg:w="1"/><text x="99.0576%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.8076%" y="437" width="0.0795%" height="15" fill="rgb(253,187,31)" fg:x="1243" fg:w="1"/><text x="99.0576%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.8076%" y="421" width="0.0795%" height="15" fill="rgb(222,6,32)" fg:x="1243" fg:w="1"/><text x="99.0576%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="98.9666%" y="421" width="0.1590%" height="15" fill="rgb(249,190,19)" fg:x="1245" fg:w="2"/><text x="99.2166%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="99.0461%" y="405" width="0.0795%" height="15" fill="rgb(251,28,20)" fg:x="1246" fg:w="1"/><text x="99.2961%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.0461%" y="389" width="0.0795%" height="15" fill="rgb(210,223,40)" fg:x="1246" fg:w="1"/><text x="99.2961%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="98.8871%" y="453" width="0.3180%" height="15" fill="rgb(216,137,22)" fg:x="1244" fg:w="4"/><text x="99.1371%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="98.9666%" y="437" width="0.2385%" height="15" fill="rgb(247,39,34)" fg:x="1245" fg:w="3"/><text x="99.2166%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.1256%" y="421" width="0.0795%" height="15" fill="rgb(239,43,50)" fg:x="1247" fg:w="1"/><text x="99.3756%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="99.2846%" y="437" width="0.0795%" height="15" fill="rgb(241,212,9)" fg:x="1249" fg:w="1"/><text x="99.5346%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="99.3641%" y="437" width="0.1590%" height="15" fill="rgb(205,8,2)" fg:x="1250" fg:w="2"/><text x="99.6141%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="99.3641%" y="421" width="0.1590%" height="15" fill="rgb(217,173,54)" fg:x="1250" fg:w="2"/><text x="99.6141%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="99.3641%" y="405" width="0.1590%" height="15" fill="rgb(208,149,52)" fg:x="1250" fg:w="2"/><text x="99.6141%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.4436%" y="389" width="0.0795%" height="15" fill="rgb(239,99,40)" fg:x="1251" fg:w="1"/><text x="99.6936%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.87%)</title><rect x="98.7281%" y="469" width="0.8744%" height="15" fill="rgb(233,214,26)" fg:x="1242" fg:w="11"/><text x="98.9781%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="99.2051%" y="453" width="0.3975%" height="15" fill="rgb(231,225,37)" fg:x="1248" fg:w="5"/><text x="99.4551%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.5231%" y="437" width="0.0795%" height="15" fill="rgb(252,55,35)" fg:x="1252" fg:w="1"/><text x="99.7731%" y="447.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (74 samples, 5.88%)</title><rect x="93.7997%" y="565" width="5.8824%" height="15" fill="rgb(239,43,18)" fg:x="1180" fg:w="74"/><text x="94.0497%" y="575.50">&lt;rpc_pr..</text></g><g><title>kernel::model::EntityPtr::to_json_value (34 samples, 2.70%)</title><rect x="96.9793%" y="549" width="2.7027%" height="15" fill="rgb(251,125,49)" fg:x="1220" fg:w="34"/><text x="97.2293%" y="559.50">ke..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (34 samples, 2.70%)</title><rect x="96.9793%" y="533" width="2.7027%" height="15" fill="rgb(212,83,54)" fg:x="1220" fg:w="34"/><text x="97.2293%" y="543.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (33 samples, 2.62%)</title><rect x="97.0588%" y="517" width="2.6232%" height="15" fill="rgb(250,75,6)" fg:x="1221" fg:w="33"/><text x="97.3088%" y="527.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (15 samples, 1.19%)</title><rect x="98.4897%" y="501" width="1.1924%" height="15" fill="rgb(252,36,40)" fg:x="1239" fg:w="15"/><text x="98.7397%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (15 samples, 1.19%)</title><rect x="98.4897%" y="485" width="1.1924%" height="15" fill="rgb(230,91,51)" fg:x="1239" fg:w="15"/><text x="98.7397%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="99.6025%" y="469" width="0.0795%" height="15" fill="rgb(212,92,28)" fg:x="1253" fg:w="1"/><text x="99.8525%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.6025%" y="453" width="0.0795%" height="15" fill="rgb(227,13,22)" fg:x="1253" fg:w="1"/><text x="99.8525%" y="463.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (123 samples, 9.78%)</title><rect x="90.0636%" y="645" width="9.7774%" height="15" fill="rgb(239,204,32)" fg:x="1133" fg:w="123"/><text x="90.3136%" y="655.50">&lt;plugins_rpc::..</text></g><g><title>core::iter::adapters::try_process (119 samples, 9.46%)</title><rect x="90.3816%" y="629" width="9.4595%" height="15" fill="rgb(228,49,41)" fg:x="1137" fg:w="119"/><text x="90.6316%" y="639.50">core::iter::ad..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (82 samples, 6.52%)</title><rect x="93.3227%" y="613" width="6.5183%" height="15" fill="rgb(206,95,6)" fg:x="1174" fg:w="82"/><text x="93.5727%" y="623.50">alloc::ve..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (82 samples, 6.52%)</title><rect x="93.3227%" y="597" width="6.5183%" height="15" fill="rgb(251,20,14)" fg:x="1174" fg:w="82"/><text x="93.5727%" y="607.50">&lt;core::it..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (82 samples, 6.52%)</title><rect x="93.3227%" y="581" width="6.5183%" height="15" fill="rgb(214,99,28)" fg:x="1174" fg:w="82"/><text x="93.5727%" y="591.50">plugins_r..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="99.6820%" y="565" width="0.1590%" height="15" fill="rgb(239,122,54)" fg:x="1254" fg:w="2"/><text x="99.9320%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (2 samples, 0.16%)</title><rect x="99.6820%" y="549" width="0.1590%" height="15" fill="rgb(218,217,46)" fg:x="1254" fg:w="2"/><text x="99.9320%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="99.6820%" y="533" width="0.1590%" height="15" fill="rgb(249,106,28)" fg:x="1254" fg:w="2"/><text x="99.9320%" y="543.50"></text></g><g><title>engine::perform::StandardPerformer::perform (144 samples, 11.45%)</title><rect x="88.4738%" y="709" width="11.4467%" height="15" fill="rgb(250,158,18)" fg:x="1113" fg:w="144"/><text x="88.7238%" y="719.50">engine::perform::..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (137 samples, 10.89%)</title><rect x="89.0302%" y="693" width="10.8903%" height="15" fill="rgb(226,137,29)" fg:x="1120" fg:w="137"/><text x="89.2802%" y="703.50">kernel::plugins:..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (137 samples, 10.89%)</title><rect x="89.0302%" y="677" width="10.8903%" height="15" fill="rgb(210,188,1)" fg:x="1120" fg:w="137"/><text x="89.2802%" y="687.50">&lt;plugins_dynlib:..</text></g><g><title>plugins_rpc::querying::have_surroundings (126 samples, 10.02%)</title><rect x="89.9046%" y="661" width="10.0159%" height="15" fill="rgb(227,84,42)" fg:x="1131" fg:w="126"/><text x="90.1546%" y="671.50">plugins_rpc::q..</text></g><g><title>&lt;rpc_proto::Surroundings as core::convert::TryFrom&lt;&amp;kernel::surround::Surroundings&gt;&gt;::try_from (1 samples, 0.08%)</title><rect x="99.8410%" y="645" width="0.0795%" height="15" fill="rgb(222,147,48)" fg:x="1256" fg:w="1"/><text x="100.0910%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="99.8410%" y="629" width="0.0795%" height="15" fill="rgb(241,150,43)" fg:x="1256" fg:w="1"/><text x="100.0910%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.8410%" y="613" width="0.0795%" height="15" fill="rgb(206,139,52)" fg:x="1256" fg:w="1"/><text x="100.0910%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.8410%" y="597" width="0.0795%" height="15" fill="rgb(230,63,14)" fg:x="1256" fg:w="1"/><text x="100.0910%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.8410%" y="581" width="0.0795%" height="15" fill="rgb(247,8,20)" fg:x="1256" fg:w="1"/><text x="100.0910%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.8410%" y="565" width="0.0795%" height="15" fill="rgb(213,115,4)" fg:x="1256" fg:w="1"/><text x="100.0910%" y="575.50"></text></g><g><title>all (1,258 samples, 100%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(241,79,49)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="1103.50"></text></g><g><title>simple-a8fb0ec0 (1,258 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(222,42,35)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="1087.50">simple-a8fb0ec0</text></g><g><title>_start (1,258 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(247,59,23)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="1071.50">_start</text></g><g><title>__libc_start_main (1,258 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(247,93,18)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="1055.50">__libc_start_main</text></g><g><title>main (1,258 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(249,107,47)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="1039.50">main</text></g><g><title>std::rt::lang_start_internal (1,258 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(219,27,1)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="1023.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,258 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(217,82,32)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="1007.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,258 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(250,129,47)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,258 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(253,88,35)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="975.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,258 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(245,221,14)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="959.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,258 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(217,119,54)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="943.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,258 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(247,128,31)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,258 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(211,99,22)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="911.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,258 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(212,20,17)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="895.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,258 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(209,159,29)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="879.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,258 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(222,177,53)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="863.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,258 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(234,46,43)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="847.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,258 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(208,108,14)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="831.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,258 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(226,78,53)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="815.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (357 samples, 28.38%)</title><rect x="71.6216%" y="789" width="28.3784%" height="15" fill="rgb(230,20,41)" fg:x="901" fg:w="357"/><text x="71.8716%" y="799.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criter..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (357 samples, 28.38%)</title><rect x="71.6216%" y="773" width="28.3784%" height="15" fill="rgb(213,195,35)" fg:x="901" fg:w="357"/><text x="71.8716%" y="783.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (357 samples, 28.38%)</title><rect x="71.6216%" y="757" width="28.3784%" height="15" fill="rgb(242,62,36)" fg:x="901" fg:w="357"/><text x="71.8716%" y="767.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (156 samples, 12.40%)</title><rect x="87.5994%" y="741" width="12.4006%" height="15" fill="rgb(222,210,37)" fg:x="1102" fg:w="156"/><text x="87.8494%" y="751.50">engine::session::Se..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (155 samples, 12.32%)</title><rect x="87.6789%" y="725" width="12.3211%" height="15" fill="rgb(232,107,19)" fg:x="1103" fg:w="155"/><text x="87.9289%" y="735.50">engine::perform::S..</text></g><g><title>kernel::plugins::SessionPlugins::evaluate (1 samples, 0.08%)</title><rect x="99.9205%" y="709" width="0.0795%" height="15" fill="rgb(235,85,17)" fg:x="1257" fg:w="1"/><text x="100.1705%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="99.9205%" y="693" width="0.0795%" height="15" fill="rgb(219,195,31)" fg:x="1257" fg:w="1"/><text x="100.1705%" y="703.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.9205%" y="677" width="0.0795%" height="15" fill="rgb(231,183,30)" fg:x="1257" fg:w="1"/><text x="100.1705%" y="687.50"></text></g><g><title>&lt;plugins_core::moving::parser::GoActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.9205%" y="661" width="0.0795%" height="15" fill="rgb(212,0,11)" fg:x="1257" fg:w="1"/><text x="100.1705%" y="671.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="99.9205%" y="645" width="0.0795%" height="15" fill="rgb(249,53,54)" fg:x="1257" fg:w="1"/><text x="100.1705%" y="655.50"></text></g></svg></svg>